/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 07:37:48 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.models.PaymentInitiationRequest;
import com.ibanity.apis.client.products.xs2a.models.links.FinancialInstitutionLinks;
import com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationAuthorizationLinks;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.Clock;
import java.time.LocalDate;
import java.time.Period;
import java.time.chrono.IsoChronology;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PaymentInitiationRequest_ESTest extends PaymentInitiationRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setStatusReason("uy\"QV.'B$q:)O");
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertEquals("uy\"QV.'B$q:)O", paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      
      String string0 = paymentInitiationRequest0.getStatusReason();
      assertEquals("uy\"QV.'B$q:)O", string0);
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertEquals("uy\"QV.'B$q:)O", paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setStatusReason("");
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertEquals("", paymentInitiationRequest0.getStatusReason());
      
      String string0 = paymentInitiationRequest0.getStatusReason();
      assertEquals("", string0);
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertEquals("", paymentInitiationRequest0.getStatusReason());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setStatus("$iN^dQ\"1=YzO8i\"");
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertEquals("$iN^dQ\"1=YzO8i\"", paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      
      String string0 = paymentInitiationRequest0.getStatus();
      assertEquals("$iN^dQ\"1=YzO8i\"", string0);
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertEquals("$iN^dQ\"1=YzO8i\"", paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.status("");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertEquals("", paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getStatus();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertEquals("", string0);
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertEquals("", paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.selfLink("/^m..;eeGmLk%Xm,yNu");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getRequestId());
      assertEquals("/^m..;eeGmLk%Xm,yNu", paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getSelfLink();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertEquals("/^m..;eeGmLk%Xm,yNu", string0);
      assertNull(paymentInitiationRequest0.getRequestId());
      assertEquals("/^m..;eeGmLk%Xm,yNu", paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      Period period0 = Period.ofWeeks((-1088));
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      assertNotNull(localDate0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.requestedExecutionDate(localDate0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNotNull(paymentInitiationRequest0);
      
      LocalDate localDate1 = paymentInitiationRequest0.getRequestedExecutionDate();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(localDate1, localDate0);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNotNull(localDate1);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setRequestId("Lagv%hJH!9I");
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("Lagv%hJH!9I", paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      
      String string0 = paymentInitiationRequest0.getRequestId();
      assertEquals("Lagv%hJH!9I", string0);
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("Lagv%hJH!9I", paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.requestId("");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertEquals("", paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getRequestId();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertEquals("", string0);
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertEquals("", paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setRemittanceInformationType("Q0(*/t)wU{~)I!");
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertEquals("Q0(*/t)wU{~)I!", paymentInitiationRequest0.getRemittanceInformationType());
      
      String string0 = paymentInitiationRequest0.getRemittanceInformationType();
      assertEquals("Q0(*/t)wU{~)I!", string0);
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertEquals("Q0(*/t)wU{~)I!", paymentInitiationRequest0.getRemittanceInformationType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setRemittanceInformationType("");
      assertNull(paymentInitiationRequest0.getCurrency());
      assertEquals("", paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      
      String string0 = paymentInitiationRequest0.getRemittanceInformationType();
      assertEquals("", string0);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertEquals("", paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.remittanceInformation("paymentInitiationRequest");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getStatus());
      assertEquals("paymentInitiationRequest", paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getRemittanceInformation();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertEquals("paymentInitiationRequest", string0);
      assertNull(paymentInitiationRequest0.getStatus());
      assertEquals("paymentInitiationRequest", paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setRemittanceInformation("");
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertEquals("", paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      
      String string0 = paymentInitiationRequest0.getRemittanceInformation();
      assertEquals("", string0);
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertEquals("", paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setProductType("FinancialInstitutionLinks(related=null)");
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertEquals("FinancialInstitutionLinks(related=null)", paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      
      String string0 = paymentInitiationRequest0.getProductType();
      assertEquals("FinancialInstitutionLinks(related=null)", string0);
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertEquals("FinancialInstitutionLinks(related=null)", paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = new PaymentInitiationAuthorizationLinks();
      assertNull(paymentInitiationAuthorizationLinks0.getRedirect());
      assertNotNull(paymentInitiationAuthorizationLinks0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.links(paymentInitiationAuthorizationLinks0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(paymentInitiationAuthorizationLinks0.getRedirect());
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks1 = paymentInitiationRequest0.getLinks();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationAuthorizationLinks1, paymentInitiationAuthorizationLinks0);
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationAuthorizationLinks1.getRedirect());
      assertNotNull(paymentInitiationAuthorizationLinks1);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Random.setNextRandom(2444);
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals("8c090000-8d09-4000-8e09-00008f090000", uUID0.toString());
      assertEquals((-8356147631243051008L), uUID0.getMostSignificantBits());
      assertEquals((-8212032443133657088L), uUID0.getLeastSignificantBits());
      assertNotNull(uUID0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.id(uUID0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertEquals("8c090000-8d09-4000-8e09-00008f090000", uUID0.toString());
      assertEquals((-8356147631243051008L), uUID0.getMostSignificantBits());
      assertEquals((-8212032443133657088L), uUID0.getLeastSignificantBits());
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertEquals("8c090000-8d09-4000-8e09-00008f090000", uUID0.toString());
      assertEquals((-8356147631243051008L), uUID0.getMostSignificantBits());
      assertEquals((-8212032443133657088L), uUID0.getLeastSignificantBits());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNotNull(paymentInitiationRequest0);
      
      UUID uUID1 = paymentInitiationRequest0.getId();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(uUID0, uUID1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertSame(uUID1, uUID0);
      assertEquals("8c090000-8d09-4000-8e09-00008f090000", uUID0.toString());
      assertEquals((-8356147631243051008L), uUID0.getMostSignificantBits());
      assertEquals((-8212032443133657088L), uUID0.getLeastSignificantBits());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertEquals((-8212032443133657088L), uUID1.getLeastSignificantBits());
      assertEquals((-8356147631243051008L), uUID1.getMostSignificantBits());
      assertEquals("8c090000-8d09-4000-8e09-00008f090000", uUID1.toString());
      assertNotNull(uUID1);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNotNull(paymentInitiationRequest0);
      
      UUID uUID0 = MockUUID.fromString("");
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertNotNull(uUID0);
      
      paymentInitiationRequest0.setId(uUID0);
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      
      UUID uUID1 = paymentInitiationRequest0.getId();
      assertSame(uUID1, uUID0);
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertEquals(16793600L, uUID1.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID1.toString());
      assertEquals((-9079256848728588288L), uUID1.getLeastSignificantBits());
      assertNotNull(uUID1);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      FinancialInstitutionLinks financialInstitutionLinks0 = new FinancialInstitutionLinks();
      assertNull(financialInstitutionLinks0.getRelated());
      assertNotNull(financialInstitutionLinks0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.financialInstitutionLink(financialInstitutionLinks0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(financialInstitutionLinks0.getRelated());
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(financialInstitutionLinks0.getRelated());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNotNull(paymentInitiationRequest0);
      
      FinancialInstitutionLinks financialInstitutionLinks1 = paymentInitiationRequest0.getFinancialInstitutionLink();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(financialInstitutionLinks0, financialInstitutionLinks1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertSame(financialInstitutionLinks1, financialInstitutionLinks0);
      assertNull(financialInstitutionLinks0.getRelated());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(financialInstitutionLinks1.getRelated());
      assertNotNull(financialInstitutionLinks1);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Random.setNextRandom(689);
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNotNull(paymentInitiationRequest0);
      
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals("b1020000-b202-4000-b302-0000b4020000", uUID0.toString());
      assertEquals((-5691986976056393728L), uUID0.getMostSignificantBits());
      assertEquals((-5547871787946999808L), uUID0.getLeastSignificantBits());
      assertNotNull(uUID0);
      
      paymentInitiationRequest0.setFinancialInstitutionId(uUID0);
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertEquals("b1020000-b202-4000-b302-0000b4020000", uUID0.toString());
      assertEquals((-5691986976056393728L), uUID0.getMostSignificantBits());
      assertEquals((-5547871787946999808L), uUID0.getLeastSignificantBits());
      
      UUID uUID1 = paymentInitiationRequest0.getFinancialInstitutionId();
      assertSame(uUID1, uUID0);
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertEquals("b1020000-b202-4000-b302-0000b4020000", uUID1.toString());
      assertEquals((-5547871787946999808L), uUID1.getLeastSignificantBits());
      assertEquals((-5691986976056393728L), uUID1.getMostSignificantBits());
      assertNotNull(uUID1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(uUID0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.financialInstitutionId(uUID0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNotNull(paymentInitiationRequest0);
      
      UUID uUID1 = paymentInitiationRequest0.getFinancialInstitutionId();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(uUID0, uUID1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertSame(uUID1, uUID0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertEquals((-9079256848728588288L), uUID1.getLeastSignificantBits());
      assertEquals(16793600L, uUID1.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID1.toString());
      assertNotNull(uUID1);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setFinancialInstitutionCustomerReference("Mw(=`F");
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertEquals("Mw(=`F", paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      
      String string0 = paymentInitiationRequest0.getFinancialInstitutionCustomerReference();
      assertEquals("Mw(=`F", string0);
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertEquals("Mw(=`F", paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.financialInstitutionCustomerReference("");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertEquals("", paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getFinancialInstitutionCustomerReference();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertEquals("", string0);
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertEquals("", paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.endToEndId("XME#7Uqnq:");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("XME#7Uqnq:", paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getEndToEndId();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertEquals("XME#7Uqnq:", string0);
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("XME#7Uqnq:", paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setEndToEndId("");
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertEquals("", paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      
      String string0 = paymentInitiationRequest0.getEndToEndId();
      assertEquals("", string0);
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertEquals("", paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.debtorName("jQy-");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertEquals("jQy-", paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getDebtorName();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertEquals("jQy-", string0);
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertEquals("jQy-", paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setDebtorName("");
      assertEquals("", paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      
      String string0 = paymentInitiationRequest0.getDebtorName();
      assertEquals("", string0);
      assertEquals("", paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setDebtorAccountReferenceType("i!KJg2,[TY");
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertEquals("i!KJg2,[TY", paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      
      String string0 = paymentInitiationRequest0.getDebtorAccountReferenceType();
      assertEquals("i!KJg2,[TY", string0);
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertEquals("i!KJg2,[TY", paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.debtorAccountReferenceType("");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertEquals("", paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getDebtorAccountReferenceType();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertEquals("", string0);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertEquals("", paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.debtorAccountReference("puH3b");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertEquals("puH3b", paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getDebtorAccountReference();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertEquals("puH3b", string0);
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertEquals("puH3b", paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setDebtorAccountReference("");
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertEquals("", paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      
      String string0 = paymentInitiationRequest0.getDebtorAccountReference();
      assertEquals("", string0);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertEquals("", paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.currency("A+GLc-)e'GYw`\"f");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertEquals("A+GLc-)e'GYw`\"f", paymentInitiationRequest0.getCurrency());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getCurrency();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertEquals("A+GLc-)e'GYw`\"f", string0);
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertEquals("A+GLc-)e'GYw`\"f", paymentInitiationRequest0.getCurrency());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.currency("");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertEquals("", paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getCurrency();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertEquals("", string0);
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertEquals("", paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setCreditorName("Iw#/FTL5-3tp");
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertEquals("Iw#/FTL5-3tp", paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      
      String string0 = paymentInitiationRequest0.getCreditorName();
      assertEquals("Iw#/FTL5-3tp", string0);
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertEquals("Iw#/FTL5-3tp", paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setCreditorName("");
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertEquals("", paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      
      String string0 = paymentInitiationRequest0.getCreditorName();
      assertEquals("", string0);
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertEquals("", paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAgentType("c}B8");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertEquals("c}B8", paymentInitiationRequest0.getCreditorAgentType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getCreditorAgentType();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertEquals("c}B8", string0);
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertEquals("c}B8", paymentInitiationRequest0.getCreditorAgentType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAgent("PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder(redirect=");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder(redirect=", paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getCreditorAgent();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertEquals("PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder(redirect=", string0);
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("PaymentInitiationAuthorizationLinks.PaymentInitiationAuthorizationLinksBuilder(redirect=", paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAgent("");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertEquals("", paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getCreditorAgent();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertEquals("", string0);
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertEquals("", paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAccountReferenceType("1A]%");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertEquals("1A]%", paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getCreditorAccountReferenceType();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertEquals("1A]%", string0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertEquals("1A]%", paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAccountReferenceType("");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertEquals("", paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getCreditorAccountReferenceType();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertEquals("", string0);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertEquals("", paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setCreditorAccountReference("TZ%");
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertEquals("TZ%", paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      
      String string0 = paymentInitiationRequest0.getCreditorAccountReference();
      assertEquals("TZ%", string0);
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertEquals("TZ%", paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAccountReference("");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertEquals("", paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getCreditorAccountReference();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertEquals("", string0);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertEquals("", paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setConsentReference("m@<M,Cb#g");
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertEquals("m@<M,Cb#g", paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      
      String string0 = paymentInitiationRequest0.getConsentReference();
      assertEquals("m@<M,Cb#g", string0);
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertEquals("m@<M,Cb#g", paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setConsentReference("");
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertEquals("", paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      
      String string0 = paymentInitiationRequest0.getConsentReference();
      assertEquals("", string0);
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertEquals("", paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNotNull(paymentInitiationRequest0);
      
      BigDecimal bigDecimal0 = new BigDecimal((-1));
      assertEquals((short) (-1), bigDecimal0.shortValue());
      assertEquals((byte) (-1), bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      paymentInitiationRequest0.setAmount(bigDecimal0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertEquals((short) (-1), bigDecimal0.shortValue());
      assertEquals((byte) (-1), bigDecimal0.byteValue());
      
      BigDecimal bigDecimal1 = paymentInitiationRequest0.getAmount();
      assertSame(bigDecimal1, bigDecimal0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertEquals((byte) (-1), bigDecimal1.byteValue());
      assertEquals((short) (-1), bigDecimal1.shortValue());
      assertNotNull(bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNotNull(paymentInitiationRequest0);
      
      BigDecimal bigDecimal0 = new BigDecimal(1L);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      paymentInitiationRequest0.setAmount(bigDecimal0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      BigDecimal bigDecimal1 = paymentInitiationRequest0.getAmount();
      assertSame(bigDecimal1, bigDecimal0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((short)1, bigDecimal1.shortValue());
      assertNotNull(bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNotNull(paymentInitiationRequest0);
      
      boolean boolean0 = paymentInitiationRequest0.canEqual(paymentInitiationRequest0);
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNotNull(paymentInitiationRequest0);
      
      boolean boolean0 = paymentInitiationRequest0.canEqual(", creditorAccountReference=");
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getDebtorName();
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getDebtorAccountReference();
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getSelfLink();
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getRemittanceInformationType();
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getCreditorAgent();
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getDebtorAccountReferenceType();
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getConsentReference();
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getCreditorAccountReferenceType();
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNotNull(paymentInitiationRequest0);
      
      UUID uUID0 = paymentInitiationRequest0.getFinancialInstitutionId();
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNotNull(paymentInitiationRequest0);
      
      BigDecimal bigDecimal0 = paymentInitiationRequest0.getAmount();
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = paymentInitiationRequest0.getLinks();
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationAuthorizationLinks0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getCreditorName();
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(paymentInitiationRequest0);
      
      LocalDate localDate0 = paymentInitiationRequest0.getRequestedExecutionDate();
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getCreditorAccountReference();
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getFinancialInstitutionCustomerReference();
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getProductType();
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getRequestId();
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getStatusReason();
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getCreditorAgentType();
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getCurrency();
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getStatus();
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      FinancialInstitutionLinks financialInstitutionLinks0 = paymentInitiationRequest0.getFinancialInstitutionLink();
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(financialInstitutionLinks0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNotNull(paymentInitiationRequest0);
      
      UUID uUID0 = paymentInitiationRequest0.getId();
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getEndToEndId();
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNotNull(paymentInitiationRequest0);
      
      String string0 = paymentInitiationRequest0.getRemittanceInformation();
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      FinancialInstitutionLinks financialInstitutionLinks0 = new FinancialInstitutionLinks();
      assertNull(financialInstitutionLinks0.getRelated());
      assertNotNull(financialInstitutionLinks0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.financialInstitutionLink(financialInstitutionLinks0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(financialInstitutionLinks0.getRelated());
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(financialInstitutionLinks0.getRelated());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder2 = PaymentInitiationRequest.builder();
      assertNotSame(paymentInitiationRequest_PaymentInitiationRequestBuilder2, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest_PaymentInitiationRequestBuilder2, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertFalse(paymentInitiationRequest_PaymentInitiationRequestBuilder2.equals((Object)paymentInitiationRequest_PaymentInitiationRequestBuilder0));
      assertFalse(paymentInitiationRequest_PaymentInitiationRequestBuilder2.equals((Object)paymentInitiationRequest_PaymentInitiationRequestBuilder1));
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder2);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder2.build();
      assertNotSame(paymentInitiationRequest_PaymentInitiationRequestBuilder2, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest_PaymentInitiationRequestBuilder2, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest_PaymentInitiationRequestBuilder2.equals((Object)paymentInitiationRequest_PaymentInitiationRequestBuilder0));
      assertFalse(paymentInitiationRequest_PaymentInitiationRequestBuilder2.equals((Object)paymentInitiationRequest_PaymentInitiationRequestBuilder1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder2);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder2);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest_PaymentInitiationRequestBuilder2, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest_PaymentInitiationRequestBuilder2, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest_PaymentInitiationRequestBuilder0.equals((Object)paymentInitiationRequest_PaymentInitiationRequestBuilder2));
      assertFalse(paymentInitiationRequest_PaymentInitiationRequestBuilder1.equals((Object)paymentInitiationRequest_PaymentInitiationRequestBuilder2));
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest_PaymentInitiationRequestBuilder2.equals((Object)paymentInitiationRequest_PaymentInitiationRequestBuilder0));
      assertFalse(paymentInitiationRequest_PaymentInitiationRequestBuilder2.equals((Object)paymentInitiationRequest_PaymentInitiationRequestBuilder1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(financialInstitutionLinks0.getRelated());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNotNull(paymentInitiationRequest1);
      
      FinancialInstitutionLinks financialInstitutionLinks0 = new FinancialInstitutionLinks();
      assertNull(financialInstitutionLinks0.getRelated());
      assertNotNull(financialInstitutionLinks0);
      
      paymentInitiationRequest1.setFinancialInstitutionLink(financialInstitutionLinks0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(financialInstitutionLinks0.getRelated());
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      FinancialInstitutionLinks financialInstitutionLinks0 = new FinancialInstitutionLinks();
      assertNull(financialInstitutionLinks0.getRelated());
      assertNotNull(financialInstitutionLinks0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.financialInstitutionLink(financialInstitutionLinks0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(financialInstitutionLinks0.getRelated());
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(financialInstitutionLinks0.getRelated());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(financialInstitutionLinks0.getRelated());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(financialInstitutionLinks0.getRelated());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = new PaymentInitiationAuthorizationLinks();
      assertNull(paymentInitiationAuthorizationLinks0.getRedirect());
      assertNotNull(paymentInitiationAuthorizationLinks0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.links(paymentInitiationAuthorizationLinks0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(paymentInitiationAuthorizationLinks0.getRedirect());
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(paymentInitiationAuthorizationLinks0.getRedirect());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationAuthorizationLinks0.getRedirect());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationAuthorizationLinks0.getRedirect());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest1);
      
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = new PaymentInitiationAuthorizationLinks();
      assertNull(paymentInitiationAuthorizationLinks0.getRedirect());
      assertNotNull(paymentInitiationAuthorizationLinks0);
      
      paymentInitiationRequest1.setLinks(paymentInitiationAuthorizationLinks0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationAuthorizationLinks0.getRedirect());
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = new PaymentInitiationAuthorizationLinks();
      assertNull(paymentInitiationAuthorizationLinks0.getRedirect());
      assertNotNull(paymentInitiationAuthorizationLinks0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.links(paymentInitiationAuthorizationLinks0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(paymentInitiationAuthorizationLinks0.getRedirect());
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationAuthorizationLinks0.getRedirect());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationAuthorizationLinks0.getRedirect());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getSelfLink());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-436L));
      assertNotNull(localDate0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.requestedExecutionDate(localDate0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-436L));
      assertNotNull(localDate0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.requestedExecutionDate(localDate0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNotNull(paymentInitiationRequest1);
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      paymentInitiationRequest1.setAmount(bigDecimal0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNotNull(paymentInitiationRequest0);
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      paymentInitiationRequest0.setAmount(bigDecimal0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.amount(bigDecimal0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.financialInstitutionCustomerReference("{paymentInitiationRequestId}");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertEquals("{paymentInitiationRequestId}", paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertEquals("{paymentInitiationRequestId}", paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertEquals("{paymentInitiationRequestId}", paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertEquals("{paymentInitiationRequestId}", paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest1);
      
      paymentInitiationRequest1.setFinancialInstitutionCustomerReference("paymentInitiationRequest");
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals("paymentInitiationRequest", paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals("paymentInitiationRequest", paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.financialInstitutionCustomerReference("{paymentInitiationRequestId}");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertEquals("{paymentInitiationRequestId}", paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertEquals("{paymentInitiationRequestId}", paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.statusReason("jQy-");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertEquals("jQy-", paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertEquals("jQy-", paymentInitiationRequest1.getStatusReason());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertEquals("jQy-", paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertEquals("jQy-", paymentInitiationRequest1.getStatusReason());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest1);
      
      paymentInitiationRequest1.setStatusReason("{paymentInitiationRequestId}");
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertEquals("{paymentInitiationRequestId}", paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertEquals("{paymentInitiationRequestId}", paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.statusReason("jQy-");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertEquals("jQy-", paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertEquals("jQy-", paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorName());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.status("");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertEquals("", paymentInitiationRequest0.getStatus());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertEquals("", paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertEquals("", paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertEquals("", paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.status("");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertEquals("", paymentInitiationRequest1.getStatus());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertEquals("", paymentInitiationRequest1.getStatus());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.status("");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertEquals("", paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertEquals("", paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAgentType("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationAuthorizationLinks$PaymentInitiationAuthorizationLinksBuilder");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationAuthorizationLinks$PaymentInitiationAuthorizationLinksBuilder", paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationAuthorizationLinks$PaymentInitiationAuthorizationLinksBuilder", paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationAuthorizationLinks$PaymentInitiationAuthorizationLinksBuilder", paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationAuthorizationLinks$PaymentInitiationAuthorizationLinksBuilder", paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNotNull(paymentInitiationRequest1);
      
      paymentInitiationRequest1.setCreditorAgentType("{paymentInitiationRequestId}");
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertEquals("{paymentInitiationRequestId}", paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertEquals("{paymentInitiationRequestId}", paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAgentType("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationAuthorizationLinks$PaymentInitiationAuthorizationLinksBuilder");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationAuthorizationLinks$PaymentInitiationAuthorizationLinksBuilder", paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationAuthorizationLinks$PaymentInitiationAuthorizationLinksBuilder", paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNotNull(paymentInitiationRequest1);
      
      paymentInitiationRequest1.setCreditorAgent("payment-initiation-requests");
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getProductType());
      assertEquals("payment-initiation-requests", paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getProductType());
      assertEquals("payment-initiation-requests", paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAgent("s</r:,0N)!B$ !?B*?q");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertEquals("s</r:,0N)!B$ !?B*?q", paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertEquals("s</r:,0N)!B$ !?B*?q", paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatusReason());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAccountReferenceType("VAtxXX*]<");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertEquals("VAtxXX*]<", paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertEquals("VAtxXX*]<", paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertEquals("VAtxXX*]<", paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertEquals("VAtxXX*]<", paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNotNull(paymentInitiationRequest1);
      
      paymentInitiationRequest1.setCreditorAccountReferenceType("paymentInitiationRequest");
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertEquals("paymentInitiationRequest", paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertEquals("paymentInitiationRequest", paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAccountReferenceType("VAtxXX*]<");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertEquals("VAtxXX*]<", paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertEquals("VAtxXX*]<", paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getStatusReason());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAccountReference("payment-initiation-requests");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertEquals("payment-initiation-requests", paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertEquals("payment-initiation-requests", paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertEquals("payment-initiation-requests", paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertEquals("payment-initiation-requests", paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNotNull(paymentInitiationRequest1);
      
      paymentInitiationRequest1.setCreditorAccountReference("payment-initiation-requests");
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertEquals("payment-initiation-requests", paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertEquals("payment-initiation-requests", paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAccountReference("payment-initiation-requests");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertEquals("payment-initiation-requests", paymentInitiationRequest1.getCreditorAccountReference());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertEquals("payment-initiation-requests", paymentInitiationRequest1.getCreditorAccountReference());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorName("");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertEquals("", paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertEquals("", paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertEquals("", paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertEquals("", paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNotNull(paymentInitiationRequest1);
      
      paymentInitiationRequest1.setCreditorName("");
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertEquals("", paymentInitiationRequest1.getCreditorName());
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertEquals("", paymentInitiationRequest1.getCreditorName());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorName("");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertEquals("", paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertEquals("", paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getStatusReason());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.debtorAccountReferenceType(", selfLink=");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertEquals(", selfLink=", paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertEquals(", selfLink=", paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getProductType());
      assertEquals(", selfLink=", paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertEquals(", selfLink=", paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.debtorAccountReferenceType("{paymentInitiationRequestId}");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertEquals("{paymentInitiationRequestId}", paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertEquals("{paymentInitiationRequestId}", paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.debtorAccountReferenceType(", selfLink=");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertEquals(", selfLink=", paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertEquals(", selfLink=", paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.debtorAccountReference("jQy-");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertEquals("jQy-", paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertEquals("jQy-", paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.debtorAccountReference("jQy-");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertEquals("jQy-", paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertEquals("jQy-", paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.debtorAccountReference("jQy-");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertEquals("jQy-", paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertEquals("jQy-", paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertEquals("jQy-", paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertEquals("jQy-", paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getStatusReason());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.debtorName("jQy-");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertEquals("jQy-", paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals("jQy-", paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getProductType());
      assertEquals("jQy-", paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals("jQy-", paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNotNull(paymentInitiationRequest1);
      
      paymentInitiationRequest1.setDebtorName("payment-initiation-requests");
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals("payment-initiation-requests", paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals("payment-initiation-requests", paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.debtorName("jQy-");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals("jQy-", paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals("jQy-", paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.currency("=>");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertEquals("=>", paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertEquals("=>", paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertEquals("=>", paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertEquals("=>", paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      paymentInitiationRequest0.setCurrency("payment-initiation-requests");
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertEquals("payment-initiation-requests", paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertEquals("payment-initiation-requests", paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.currency("M_#p9)eN|BRi#GH");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertEquals("M_#p9)eN|BRi#GH", paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertEquals("M_#p9)eN|BRi#GH", paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNotNull(paymentInitiationRequest1);
      
      paymentInitiationRequest1.setRemittanceInformation("{paymentInitiationRequestId}");
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals("{paymentInitiationRequestId}", paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCurrency());
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals("{paymentInitiationRequestId}", paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCurrency());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNotNull(paymentInitiationRequest1);
      
      paymentInitiationRequest1.setRemittanceInformation("paymentInitiationRequest");
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals("paymentInitiationRequest", paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals("paymentInitiationRequest", paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.remittanceInformation(", creditorAccountReferenceType=");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertEquals(", creditorAccountReferenceType=", paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertEquals(", creditorAccountReferenceType=", paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertEquals(", creditorAccountReferenceType=", paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertEquals(", creditorAccountReferenceType=", paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getProductType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.remittanceInformationType("paymentInitiationRequest");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertEquals("paymentInitiationRequest", paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertEquals("paymentInitiationRequest", paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertEquals("paymentInitiationRequest", paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertEquals("paymentInitiationRequest", paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.remittanceInformationType("com.ibanity.apis.client.products.xs2a.models.PaymentInitiationRequest$PaymentInitiationRequestBuilder");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.PaymentInitiationRequest$PaymentInitiationRequestBuilder", paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.PaymentInitiationRequest$PaymentInitiationRequestBuilder", paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.remittanceInformationType("paymentInitiationRequest");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertEquals("paymentInitiationRequest", paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getStatus());
      assertEquals("paymentInitiationRequest", paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.productType(",6wC,m3N&+");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertEquals(",6wC,m3N&+", paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals(",6wC,m3N&+", paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertTrue(boolean0);
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getStatus());
      assertEquals(",6wC,m3N&+", paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals(",6wC,m3N&+", paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNotNull(paymentInitiationRequest1);
      
      paymentInitiationRequest0.setProductType("payment-initiation-requests");
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertEquals("payment-initiation-requests", paymentInitiationRequest0.getProductType());
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertEquals("payment-initiation-requests", paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getCreditorName());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNotNull(paymentInitiationRequest0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.productType(",6wC,m3N&+");
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder1, paymentInitiationRequest_PaymentInitiationRequestBuilder0);
      assertNotNull(paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals(",6wC,m3N&+", paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
      assertNotNull(paymentInitiationRequest1);
      
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertNotSame(paymentInitiationRequest0, paymentInitiationRequest1);
      assertSame(paymentInitiationRequest_PaymentInitiationRequestBuilder0, paymentInitiationRequest_PaymentInitiationRequestBuilder1);
      assertNotSame(paymentInitiationRequest1, paymentInitiationRequest0);
      assertFalse(paymentInitiationRequest0.equals((Object)paymentInitiationRequest1));
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
      assertNull(paymentInitiationRequest0.getStatus());
      assertNull(paymentInitiationRequest0.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorName());
      assertNull(paymentInitiationRequest0.getCreditorAgent());
      assertNull(paymentInitiationRequest0.getDebtorAccountReferenceType());
      assertNull(paymentInitiationRequest0.getCreditorAgentType());
      assertNull(paymentInitiationRequest0.getStatusReason());
      assertNull(paymentInitiationRequest0.getCreditorAccountReference());
      assertNull(paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest0.getRemittanceInformationType());
      assertNull(paymentInitiationRequest0.getEndToEndId());
      assertNull(paymentInitiationRequest0.getCurrency());
      assertNull(paymentInitiationRequest0.getDebtorName());
      assertNull(paymentInitiationRequest0.getConsentReference());
      assertNull(paymentInitiationRequest0.getProductType());
      assertNull(paymentInitiationRequest0.getRemittanceInformation());
      assertNull(paymentInitiationRequest0.getRequestId());
      assertNull(paymentInitiationRequest0.getSelfLink());
      assertNull(paymentInitiationRequest0.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getRemittanceInformation());
      assertNull(paymentInitiationRequest1.getCreditorAccountReference());
      assertNull(paymentInitiationRequest1.getCurrency());
      assertNull(paymentInitiationRequest1.getRemittanceInformationType());
      assertNull(paymentInitiationRequest1.getFinancialInstitutionCustomerReference());
      assertNull(paymentInitiationRequest1.getCreditorName());
      assertNull(paymentInitiationRequest1.getCreditorAccountReferenceType());
      assertNull(paymentInitiationRequest1.getStatus());
      assertNull(paymentInitiationRequest1.getCreditorAgent());
      assertNull(paymentInitiationRequest1.getDebtorAccountReferenceType());
      assertEquals(",6wC,m3N&+", paymentInitiationRequest1.getProductType());
      assertNull(paymentInitiationRequest1.getEndToEndId());
      assertNull(paymentInitiationRequest1.getRequestId());
      assertNull(paymentInitiationRequest1.getSelfLink());
      assertNull(paymentInitiationRequest1.getDebtorAccountReference());
      assertNull(paymentInitiationRequest1.getStatusReason());
      assertNull(paymentInitiationRequest1.getDebtorName());
      assertNull(paymentInitiationRequest1.getConsentReference());
      assertNull(paymentInitiationRequest1.getCreditorAgentType());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.endToEndId("{paymentInitiationRequestId}");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertEquals("{paymentInitiationRequestId}", paymentInitiationRequest1.getEndToEndId());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.endToEndId("paymentInitiationRequest");
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.endToEndId("{paymentInitiationRequestId}");
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      
      paymentInitiationRequest1.setConsentReference("{paymentInitiationRequestId}");
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.consentReference("paymentInitiationRequest");
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.selfLink("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationAuthorizationLinks$PaymentInitiationAuthorizationLinksBuilder");
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.selfLink("paymentInitiationRequest");
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.requestId("f");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertTrue(boolean0);
      assertEquals("f", paymentInitiationRequest1.getRequestId());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      assertTrue(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      
      paymentInitiationRequest1.setRequestId("paymentInitiationRequest");
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.requestId("f");
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertEquals("f", paymentInitiationRequest1.getRequestId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      UUID uUID0 = MockUUID.randomUUID();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.financialInstitutionId(uUID0);
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.financialInstitutionId(uUID0);
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertFalse(paymentInitiationRequest1.equals((Object)paymentInitiationRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      UUID uUID0 = MockUUID.randomUUID();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.financialInstitutionId(uUID0);
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      UUID uUID0 = MockUUID.fromString("jQy-");
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.id(uUID0);
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      UUID uUID0 = MockUUID.fromString("jQy-");
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.id(uUID0);
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      Object object0 = new Object();
      boolean boolean0 = paymentInitiationRequest0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      FinancialInstitutionLinks financialInstitutionLinks0 = new FinancialInstitutionLinks();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.financialInstitutionLink(financialInstitutionLinks0);
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.requestedExecutionDate(localDate0);
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      BigDecimal bigDecimal0 = new BigDecimal((-0.7966343118998057));
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.amount(bigDecimal0);
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.financialInstitutionCustomerReference("");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      paymentInitiationRequest0.hashCode();
      assertEquals("", paymentInitiationRequest0.getFinancialInstitutionCustomerReference());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.statusReason("jQy-");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
      assertEquals("jQy-", paymentInitiationRequest0.getStatusReason());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.status("FinancialInstitutionLinks(related=");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAgentType("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationAuthorizationLinks$PaymentInitiationAuthorizationLinksBuilder");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAgent("FinancialInstitutionLinks(related=");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAccountReferenceType("VAtxXX*]<");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAccountReference("payment-initiation-requests");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorName("");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.debtorAccountReferenceType(", selfLink=");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      paymentInitiationRequest0.hashCode();
      assertEquals(", selfLink=", paymentInitiationRequest0.getDebtorAccountReferenceType());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.debtorAccountReference("jQy-");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
      assertEquals("jQy-", paymentInitiationRequest0.getDebtorAccountReference());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.debtorName("jQy-");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.currency("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationAuthorizationLinks$1");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationAuthorizationLinks$1", paymentInitiationRequest0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.remittanceInformation(", creditorAccountReferenceType=");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      paymentInitiationRequest0.hashCode();
      assertEquals(", creditorAccountReferenceType=", paymentInitiationRequest0.getRemittanceInformation());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.remittanceInformationType("paymentInitiationRequest");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
      assertEquals("paymentInitiationRequest", paymentInitiationRequest0.getRemittanceInformationType());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.productType(",6wC,m3N&+");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.endToEndId("{paymentInitiationRequestId}");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.consentReference("FinancialInstitutionLinks.FinancialInstitutionLinksBuilder(related=");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
      assertEquals("FinancialInstitutionLinks.FinancialInstitutionLinksBuilder(related=", paymentInitiationRequest0.getConsentReference());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.selfLink("");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
      assertEquals("", paymentInitiationRequest0.getSelfLink());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.requestId("FinancialInstitutionLinks(related=");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      UUID uUID0 = MockUUID.randomUUID();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.financialInstitutionId(uUID0);
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      UUID uUID0 = MockUUID.fromString("jQy-");
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.id(uUID0);
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      UUID uUID0 = MockUUID.fromString("jQy-");
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.id(uUID0);
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAgentType("");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      String string0 = paymentInitiationRequest0.getCreditorAgentType();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.consentReference("pV[|[Gh;bR$7ZWjIg4");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertTrue(boolean0);
      assertEquals("pV[|[Gh;bR$7ZWjIg4", paymentInitiationRequest1.getConsentReference());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      String string0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.toString();
      assertEquals("PaymentInitiationRequest.PaymentInitiationRequestBuilder(id=null, financialInstitutionId=null, requestId=null, selfLink=null, consentReference=null, endToEndId=null, productType=null, remittanceInformationType=null, remittanceInformation=null, currency=null, debtorName=null, debtorAccountReference=null, debtorAccountReferenceType=null, creditorName=null, creditorAccountReference=null, creditorAccountReferenceType=null, creditorAgent=null, creditorAgentType=null, status=null, statusReason=null, financialInstitutionCustomerReference=null, amount=null, requestedExecutionDate=null, links=null, financialInstitutionLink=null)", string0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      PaymentInitiationAuthorizationLinks paymentInitiationAuthorizationLinks0 = new PaymentInitiationAuthorizationLinks();
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.links(paymentInitiationAuthorizationLinks0);
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      paymentInitiationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.productType("");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      String string0 = paymentInitiationRequest0.getProductType();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.selfLink("paymentInitiationRequest");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertEquals("paymentInitiationRequest", paymentInitiationRequest1.getSelfLink());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = new PaymentInitiationRequest.PaymentInitiationRequestBuilder();
      paymentInitiationRequest_PaymentInitiationRequestBuilder0.creditorAgent("s</r:,0N)!B$ !?B*?q");
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      PaymentInitiationRequest paymentInitiationRequest1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.build();
      boolean boolean0 = paymentInitiationRequest0.equals(paymentInitiationRequest1);
      assertEquals("s</r:,0N)!B$ !?B*?q", paymentInitiationRequest1.getCreditorAgent());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder0 = PaymentInitiationRequest.builder();
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      PaymentInitiationRequest.PaymentInitiationRequestBuilder paymentInitiationRequest_PaymentInitiationRequestBuilder1 = paymentInitiationRequest_PaymentInitiationRequestBuilder0.amount(bigDecimal0);
      PaymentInitiationRequest paymentInitiationRequest0 = paymentInitiationRequest_PaymentInitiationRequestBuilder1.build();
      BigDecimal bigDecimal1 = paymentInitiationRequest0.getAmount();
      assertSame(bigDecimal0, bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      LocalDate localDate0 = MockLocalDate.now();
      paymentInitiationRequest0.setRequestedExecutionDate(localDate0);
      PaymentInitiationRequest paymentInitiationRequest1 = new PaymentInitiationRequest();
      boolean boolean0 = paymentInitiationRequest1.equals(paymentInitiationRequest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      String string0 = paymentInitiationRequest0.toString();
      assertEquals("PaymentInitiationRequest(id=null, financialInstitutionId=null, requestId=null, selfLink=null, consentReference=null, endToEndId=null, productType=null, remittanceInformationType=null, remittanceInformation=null, currency=null, debtorName=null, debtorAccountReference=null, debtorAccountReferenceType=null, creditorName=null, creditorAccountReference=null, creditorAccountReferenceType=null, creditorAgent=null, creditorAgentType=null, status=null, statusReason=null, financialInstitutionCustomerReference=null, amount=null, requestedExecutionDate=null, links=null, financialInstitutionLink=null)", string0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      PaymentInitiationRequest paymentInitiationRequest0 = new PaymentInitiationRequest();
      paymentInitiationRequest0.setSelfLink("");
      String string0 = paymentInitiationRequest0.getSelfLink();
      assertEquals("", string0);
  }
}
