/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 10:47:49 GMT 2022
 */

package com.ibanity.apis.client.products.ponto_connect.models.delete;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.ponto_connect.models.delete.OrganizationIntegrationDeleteQuery;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OrganizationIntegrationDeleteQuery_ESTest extends OrganizationIntegrationDeleteQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = OrganizationIntegrationDeleteQuery.builder();
      Random.setNextRandom((-1480));
      UUID uUID0 = MockUUID.fromString(".n=4");
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      Map<String, String> map0 = organizationIntegrationDeleteQuery0.getAdditionalHeaders();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery1 = new OrganizationIntegrationDeleteQuery("EB:6'uasc", uUID0, map0);
      UUID uUID1 = organizationIntegrationDeleteQuery1.getOrganizationId();
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = new OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder();
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder1 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.organizationId(uUID0);
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder1.build();
      UUID uUID1 = organizationIntegrationDeleteQuery0.getOrganizationId();
      assertSame(uUID0, uUID1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = new OrganizationIntegrationDeleteQuery("|", uUID0, (Map<String, String>) null);
      Map<String, String> map0 = organizationIntegrationDeleteQuery0.getAdditionalHeaders();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = OrganizationIntegrationDeleteQuery.builder();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.additionalHeaders(hashMap0);
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      Map<String, String> map0 = organizationIntegrationDeleteQuery0.getAdditionalHeaders();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = OrganizationIntegrationDeleteQuery.builder();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.additionalHeaders(hashMap0);
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      hashMap0.put("OrganizationIntegrationDeleteQuery(accessToken=null, organizationId=04000000-0500-4000-8600-000007000000, additionalHeaders={})", "");
      Map<String, String> map0 = organizationIntegrationDeleteQuery0.getAdditionalHeaders();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("H = y");
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = OrganizationIntegrationDeleteQuery.builder();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      Map<String, String> map0 = organizationIntegrationDeleteQuery0.getAdditionalHeaders();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery1 = new OrganizationIntegrationDeleteQuery("", uUID0, map0);
      String string0 = organizationIntegrationDeleteQuery1.getAccessToken();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = new OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      boolean boolean0 = organizationIntegrationDeleteQuery0.canEqual(organizationIntegrationDeleteQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = OrganizationIntegrationDeleteQuery.builder();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      boolean boolean0 = organizationIntegrationDeleteQuery0.canEqual("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = new OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      UUID uUID0 = organizationIntegrationDeleteQuery0.getOrganizationId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = new OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      Map<String, String> map0 = organizationIntegrationDeleteQuery0.getAdditionalHeaders();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery1 = new OrganizationIntegrationDeleteQuery("OrganizationIntegrationDeleteQuery(accessToken=null, organizationId=null, additionalHeaders={})", (UUID) null, map0);
      String string0 = organizationIntegrationDeleteQuery1.getAccessToken();
      assertEquals("OrganizationIntegrationDeleteQuery(accessToken=null, organizationId=null, additionalHeaders={})", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = new OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      String string0 = organizationIntegrationDeleteQuery0.getAccessToken();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = OrganizationIntegrationDeleteQuery.builder();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.additionalHeaders((Map<String, String>) null);
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery1 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      boolean boolean0 = organizationIntegrationDeleteQuery0.equals(organizationIntegrationDeleteQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = new OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder();
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder1 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.additionalHeaders((Map<String, String>) null);
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder2 = new OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder2.build();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery1 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder1.build();
      boolean boolean0 = organizationIntegrationDeleteQuery1.equals(organizationIntegrationDeleteQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = OrganizationIntegrationDeleteQuery.builder();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.organizationId(uUID0);
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery1 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      boolean boolean0 = organizationIntegrationDeleteQuery1.equals(organizationIntegrationDeleteQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = OrganizationIntegrationDeleteQuery.builder();
      UUID uUID0 = MockUUID.randomUUID();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.organizationId(uUID0);
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery1 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      boolean boolean0 = organizationIntegrationDeleteQuery0.equals(organizationIntegrationDeleteQuery1);
      assertFalse(boolean0);
      assertFalse(organizationIntegrationDeleteQuery1.equals((Object)organizationIntegrationDeleteQuery0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = new OrganizationIntegrationDeleteQuery("", uUID0, (Map<String, String>) null);
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery1 = new OrganizationIntegrationDeleteQuery("", uUID0, (Map<String, String>) null);
      boolean boolean0 = organizationIntegrationDeleteQuery0.equals(organizationIntegrationDeleteQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = new OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery1 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      boolean boolean0 = organizationIntegrationDeleteQuery1.equals(organizationIntegrationDeleteQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("J");
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = new OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = new OrganizationIntegrationDeleteQuery("OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder(accessToken=null, organizationId=null, additionalHeaders$value=null)", uUID0, (Map<String, String>) null);
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery1 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      boolean boolean0 = organizationIntegrationDeleteQuery1.equals(organizationIntegrationDeleteQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("J");
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = new OrganizationIntegrationDeleteQuery("OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder(accessToken=null, organizationId=null, additionalHeaders$value=null)", uUID0, (Map<String, String>) null);
      boolean boolean0 = organizationIntegrationDeleteQuery0.equals("J");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = OrganizationIntegrationDeleteQuery.builder();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      boolean boolean0 = organizationIntegrationDeleteQuery0.equals(organizationIntegrationDeleteQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = new OrganizationIntegrationDeleteQuery("|", uUID0, (Map<String, String>) null);
      organizationIntegrationDeleteQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("J");
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = new OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = new OrganizationIntegrationDeleteQuery("OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder(accessToken=null, organizationId=null, additionalHeaders$value=null)", uUID0, (Map<String, String>) null);
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery1 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      boolean boolean0 = organizationIntegrationDeleteQuery0.equals(organizationIntegrationDeleteQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = new OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder();
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.build();
      organizationIntegrationDeleteQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("J");
      OrganizationIntegrationDeleteQuery organizationIntegrationDeleteQuery0 = new OrganizationIntegrationDeleteQuery("OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder(accessToken=null, organizationId=null, additionalHeaders$value=null)", uUID0, (Map<String, String>) null);
      String string0 = organizationIntegrationDeleteQuery0.toString();
      assertEquals("OrganizationIntegrationDeleteQuery(accessToken=OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder(accessToken=null, organizationId=null, additionalHeaders$value=null), organizationId=00000000-0100-4000-8200-000003000000, additionalHeaders=null)", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = OrganizationIntegrationDeleteQuery.builder();
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder1 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.accessToken("J");
      assertSame(organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0, organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0 = new OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder();
      String string0 = organizationIntegrationDeleteQuery_OrganizationIntegrationDeleteQueryBuilder0.toString();
      assertEquals("OrganizationIntegrationDeleteQuery.OrganizationIntegrationDeleteQueryBuilder(accessToken=null, organizationId=null, additionalHeaders$value=null)", string0);
  }
}
