/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 09:22:53 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.models.BatchSynchronization;
import java.time.Instant;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BatchSynchronization_ESTest extends BatchSynchronization_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      Instant instant0 = MockInstant.ofEpochSecond(1L);
      batchSynchronization_BatchSynchronizationBuilder0.unlessSynchronizedAfter(instant0);
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      Instant instant1 = batchSynchronization0.getUnlessSynchronizedAfter();
      assertSame(instant1, instant0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = BatchSynchronization.builder();
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder1 = batchSynchronization_BatchSynchronizationBuilder0.subtypes((List<String>) null);
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder1.build();
      List<String> list0 = batchSynchronization0.getSubtypes();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.offerLast("{Wserd#)S%VH");
      batchSynchronization0.setSubtypes(linkedList0);
      List<String> list0 = batchSynchronization0.getSubtypes();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1, locale_FilteringMode0);
      batchSynchronization_BatchSynchronizationBuilder0.subtypes(list0);
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      List<String> list1 = batchSynchronization0.getSubtypes();
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      batchSynchronization_BatchSynchronizationBuilder0.selfLink("batchSynchronization");
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      String string0 = batchSynchronization0.getSelfLink();
      assertEquals("batchSynchronization", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      batchSynchronization0.setSelfLink("");
      String string0 = batchSynchronization0.getSelfLink();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      batchSynchronization0.setResourceType("ghQ");
      String string0 = batchSynchronization0.getResourceType();
      assertEquals("ghQ", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      batchSynchronization0.setResourceType("");
      String string0 = batchSynchronization0.getResourceType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      batchSynchronization_BatchSynchronizationBuilder0.requestId(", subtypes$value=");
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      String string0 = batchSynchronization0.getRequestId();
      assertNotNull(string0);
      assertEquals(", subtypes$value=", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      batchSynchronization0.setRequestId("");
      String string0 = batchSynchronization0.getRequestId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Random.setNextRandom((-694));
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      UUID uUID0 = MockUUID.randomUUID();
      batchSynchronization0.setId(uUID0);
      UUID uUID1 = batchSynchronization0.getId();
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      UUID uUID0 = MockUUID.randomUUID();
      batchSynchronization0.setId(uUID0);
      UUID uUID1 = batchSynchronization0.getId();
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      Instant instant0 = MockInstant.ofEpochMilli(0L);
      batchSynchronization0.setCancelAfter(instant0);
      Instant instant1 = batchSynchronization0.getCancelAfter();
      assertSame(instant1, instant0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = BatchSynchronization.builder();
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      boolean boolean0 = batchSynchronization0.canEqual(batchSynchronization0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      boolean boolean0 = batchSynchronization0.canEqual("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      Instant instant0 = batchSynchronization0.getCancelAfter();
      assertNull(instant0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      String string0 = batchSynchronization0.getSelfLink();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      UUID uUID0 = batchSynchronization0.getId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      String string0 = batchSynchronization0.getResourceType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      Instant instant0 = batchSynchronization0.getUnlessSynchronizedAfter();
      assertNull(instant0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = BatchSynchronization.builder();
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      String string0 = batchSynchronization0.getRequestId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      BatchSynchronization batchSynchronization1 = new BatchSynchronization();
      assertTrue(batchSynchronization1.equals((Object)batchSynchronization0));
      
      batchSynchronization1.setSelfLink("{batchSynchronizationId}");
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = BatchSynchronization.builder();
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      batchSynchronization0.setSelfLink("");
      BatchSynchronization batchSynchronization1 = batchSynchronization_BatchSynchronizationBuilder0.build();
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertEquals("", batchSynchronization0.getSelfLink());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      Instant instant0 = MockInstant.ofEpochSecond((-78L), (-78L));
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder1 = batchSynchronization_BatchSynchronizationBuilder0.unlessSynchronizedAfter(instant0);
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder1.build();
      BatchSynchronization batchSynchronization1 = batchSynchronization_BatchSynchronizationBuilder0.build();
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      BatchSynchronization batchSynchronization1 = new BatchSynchronization();
      assertTrue(batchSynchronization1.equals((Object)batchSynchronization0));
      
      Instant instant0 = MockInstant.now();
      batchSynchronization1.setUnlessSynchronizedAfter(instant0);
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      Instant instant0 = MockInstant.ofEpochSecond((-78L), (-78L));
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder1 = batchSynchronization_BatchSynchronizationBuilder0.unlessSynchronizedAfter(instant0);
      BatchSynchronization batchSynchronization1 = batchSynchronization_BatchSynchronizationBuilder1.build();
      boolean boolean0 = batchSynchronization1.equals(batchSynchronization0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      Instant instant0 = MockInstant.now();
      batchSynchronization0.setCancelAfter(instant0);
      BatchSynchronization batchSynchronization1 = new BatchSynchronization();
      boolean boolean0 = batchSynchronization1.equals(batchSynchronization0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      Instant instant0 = MockInstant.ofEpochSecond((-78L), (-78L));
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder1 = batchSynchronization_BatchSynchronizationBuilder0.cancelAfter(instant0);
      BatchSynchronization batchSynchronization1 = batchSynchronization_BatchSynchronizationBuilder1.build();
      boolean boolean0 = batchSynchronization1.equals(batchSynchronization0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = BatchSynchronization.builder();
      BatchSynchronization batchSynchronization1 = batchSynchronization_BatchSynchronizationBuilder0.build();
      assertTrue(batchSynchronization1.equals((Object)batchSynchronization0));
      
      batchSynchronization1.setResourceType("com.ibanity.apis.client.products.xs2a.models.BatchSynchronization$1");
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertFalse(batchSynchronization1.equals((Object)batchSynchronization0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      BatchSynchronization batchSynchronization1 = batchSynchronization_BatchSynchronizationBuilder0.build();
      assertTrue(batchSynchronization1.equals((Object)batchSynchronization0));
      
      batchSynchronization0.setResourceType("");
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      BatchSynchronization batchSynchronization1 = new BatchSynchronization();
      assertTrue(batchSynchronization1.equals((Object)batchSynchronization0));
      
      batchSynchronization1.setSubtypes((List<String>) null);
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = BatchSynchronization.builder();
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder1 = batchSynchronization_BatchSynchronizationBuilder0.subtypes((List<String>) null);
      BatchSynchronization batchSynchronization1 = batchSynchronization_BatchSynchronizationBuilder1.build();
      assertFalse(batchSynchronization1.equals((Object)batchSynchronization0));
      
      batchSynchronization0.setSubtypes((List<String>) null);
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertTrue(batchSynchronization1.equals((Object)batchSynchronization0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      batchSynchronization0.setSubtypes((List<String>) null);
      BatchSynchronization batchSynchronization1 = new BatchSynchronization();
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertFalse(boolean0);
      assertFalse(batchSynchronization1.equals((Object)batchSynchronization0));
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      BatchSynchronization batchSynchronization1 = new BatchSynchronization();
      assertTrue(batchSynchronization1.equals((Object)batchSynchronization0));
      
      batchSynchronization1.setRequestId("{batchSynchronizationId}");
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertFalse(batchSynchronization1.equals((Object)batchSynchronization0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      BatchSynchronization batchSynchronization1 = batchSynchronization_BatchSynchronizationBuilder0.build();
      assertTrue(batchSynchronization1.equals((Object)batchSynchronization0));
      
      batchSynchronization0.setRequestId("BatchSynchronization.BatchSynchronizationBuilder(id=");
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = BatchSynchronization.builder();
      UUID uUID0 = MockUUID.randomUUID();
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder1 = batchSynchronization_BatchSynchronizationBuilder0.id(uUID0);
      BatchSynchronization batchSynchronization1 = batchSynchronization_BatchSynchronizationBuilder1.build();
      boolean boolean0 = batchSynchronization1.equals(batchSynchronization0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      boolean boolean0 = batchSynchronization0.equals("batchSynchronization");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = BatchSynchronization.builder();
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      batchSynchronization0.setSelfLink("");
      batchSynchronization0.hashCode();
      assertEquals("", batchSynchronization0.getSelfLink());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      Instant instant0 = MockInstant.ofEpochSecond((-78L), (-78L));
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder1 = batchSynchronization_BatchSynchronizationBuilder0.cancelAfter(instant0);
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder1.build();
      batchSynchronization0.hashCode();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      batchSynchronization0.setResourceType("");
      batchSynchronization0.hashCode();
      assertEquals("", batchSynchronization0.getResourceType());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = BatchSynchronization.builder();
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder1 = batchSynchronization_BatchSynchronizationBuilder0.subtypes((List<String>) null);
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder1.build();
      batchSynchronization0.hashCode();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      batchSynchronization0.setRequestId("BatchSynchronization.BatchSynchronizationBuilder(id=");
      batchSynchronization0.hashCode();
      assertEquals("BatchSynchronization.BatchSynchronizationBuilder(id=", batchSynchronization0.getRequestId());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = BatchSynchronization.builder();
      UUID uUID0 = MockUUID.fromString("batchSynchronization");
      batchSynchronization_BatchSynchronizationBuilder0.id(uUID0);
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      batchSynchronization0.hashCode();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      UUID uUID0 = MockUUID.randomUUID();
      batchSynchronization0.setId(uUID0);
      BatchSynchronization batchSynchronization1 = new BatchSynchronization();
      boolean boolean0 = batchSynchronization1.equals(batchSynchronization0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BatchSynchronization batchSynchronization0 = new BatchSynchronization();
      Instant instant0 = MockInstant.ofEpochMilli(0L);
      batchSynchronization0.setCancelAfter(instant0);
      BatchSynchronization batchSynchronization1 = new BatchSynchronization();
      assertFalse(batchSynchronization1.equals((Object)batchSynchronization0));
      
      batchSynchronization1.setCancelAfter(instant0);
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertTrue(batchSynchronization1.equals((Object)batchSynchronization0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      String string0 = batchSynchronization0.toString();
      assertEquals("BatchSynchronization(id=null, requestId=null, subtypes=[], resourceType=null, cancelAfter=null, unlessSynchronizedAfter=null, selfLink=null)", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder1 = batchSynchronization_BatchSynchronizationBuilder0.requestId("{batchSynchronizationId}");
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder1.build();
      BatchSynchronization batchSynchronization1 = batchSynchronization_BatchSynchronizationBuilder1.build();
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertEquals("{batchSynchronizationId}", batchSynchronization1.getRequestId());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      Instant instant0 = MockInstant.ofEpochSecond((-78L), (-78L));
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder1 = batchSynchronization_BatchSynchronizationBuilder0.unlessSynchronizedAfter(instant0);
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder1.build();
      batchSynchronization0.hashCode();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = BatchSynchronization.builder();
      batchSynchronization_BatchSynchronizationBuilder0.resourceType("{batchSynchronizationId}");
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      BatchSynchronization batchSynchronization1 = batchSynchronization_BatchSynchronizationBuilder0.build();
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertTrue(boolean0);
      assertEquals("{batchSynchronizationId}", batchSynchronization1.getResourceType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder1 = batchSynchronization_BatchSynchronizationBuilder0.selfLink("batchSynchronization");
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder0.build();
      BatchSynchronization batchSynchronization1 = batchSynchronization_BatchSynchronizationBuilder1.build();
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertEquals("batchSynchronization", batchSynchronization1.getSelfLink());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = new BatchSynchronization.BatchSynchronizationBuilder();
      String string0 = batchSynchronization_BatchSynchronizationBuilder0.toString();
      assertEquals("BatchSynchronization.BatchSynchronizationBuilder(id=null, requestId=null, subtypes$value=null, resourceType=null, cancelAfter=null, unlessSynchronizedAfter=null, selfLink=null)", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder0 = BatchSynchronization.builder();
      UUID uUID0 = MockUUID.randomUUID();
      BatchSynchronization.BatchSynchronizationBuilder batchSynchronization_BatchSynchronizationBuilder1 = batchSynchronization_BatchSynchronizationBuilder0.id(uUID0);
      BatchSynchronization batchSynchronization0 = batchSynchronization_BatchSynchronizationBuilder1.build();
      BatchSynchronization batchSynchronization1 = batchSynchronization_BatchSynchronizationBuilder0.build();
      boolean boolean0 = batchSynchronization0.equals(batchSynchronization1);
      assertTrue(boolean0);
  }
}
