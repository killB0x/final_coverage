/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:45:56 GMT 2022
 */

package com.ibanity.apis.client.products.isabel_connect.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibanity.apis.client.products.isabel_connect.models.IntradayTransaction;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.chrono.IsoChronology;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntradayTransaction_ESTest extends IntradayTransaction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockLocalDate.now(zoneId0);
      intradayTransaction0.setValueDate(localDate0);
      LocalDate localDate1 = intradayTransaction0.getValueDate();
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IntradayTransaction.IntradayTransactionBuilder<?, ?> intradayTransaction_IntradayTransactionBuilder0 = IntradayTransaction.builder();
      IntradayTransaction intradayTransaction0 = new IntradayTransaction(intradayTransaction_IntradayTransactionBuilder0);
      intradayTransaction0.setStatus("Id");
      String string0 = intradayTransaction0.getStatus();
      assertEquals("Id", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setStatus("");
      String string0 = intradayTransaction0.getStatus();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IntradayTransaction.IntradayTransactionBuilder<?, ?> intradayTransaction_IntradayTransactionBuilder0 = IntradayTransaction.builder();
      IntradayTransaction intradayTransaction0 = new IntradayTransaction(intradayTransaction_IntradayTransactionBuilder0);
      intradayTransaction0.setRemittanceInformationType("y+");
      String string0 = intradayTransaction0.getRemittanceInformationType();
      assertEquals("y+", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IntradayTransaction.IntradayTransactionBuilder<?, ?> intradayTransaction_IntradayTransactionBuilder0 = IntradayTransaction.builder();
      IntradayTransaction intradayTransaction0 = new IntradayTransaction(intradayTransaction_IntradayTransactionBuilder0);
      intradayTransaction0.setRemittanceInformationType("");
      String string0 = intradayTransaction0.getRemittanceInformationType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setRemittanceInformation("0ia!+1");
      String string0 = intradayTransaction0.getRemittanceInformation();
      assertEquals("0ia!+1", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setRemittanceInformation("");
      String string0 = intradayTransaction0.getRemittanceInformation();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setInternalId("b>5&dD6,')Kgmb{");
      String string0 = intradayTransaction0.getInternalId();
      assertEquals("b>5&dD6,')Kgmb{", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setInternalId("");
      String string0 = intradayTransaction0.getInternalId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-1805L));
      intradayTransaction0.setExecutionDate(localDate0);
      LocalDate localDate1 = intradayTransaction0.getExecutionDate();
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setEndToEndId("v#!/Y+T(A:");
      String string0 = intradayTransaction0.getEndToEndId();
      assertEquals("v#!/Y+T(A:", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setEndToEndId("");
      String string0 = intradayTransaction0.getEndToEndId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setCounterpartName("intradayTransaction");
      String string0 = intradayTransaction0.getCounterpartName();
      assertEquals("intradayTransaction", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setCounterpartName("");
      String string0 = intradayTransaction0.getCounterpartName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setCounterpartFinancialInstitutionBic("x");
      String string0 = intradayTransaction0.getCounterpartFinancialInstitutionBic();
      assertEquals("x", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setCounterpartFinancialInstitutionBic("");
      String string0 = intradayTransaction0.getCounterpartFinancialInstitutionBic();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setCounterpartAccountReference("com.ibanity.apis.client.products.isabel_connect.models.IntradayTransaction$1");
      String string0 = intradayTransaction0.getCounterpartAccountReference();
      assertEquals("com.ibanity.apis.client.products.isabel_connect.models.IntradayTransaction$1", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IntradayTransaction.IntradayTransactionBuilder<?, ?> intradayTransaction_IntradayTransactionBuilder0 = IntradayTransaction.builder();
      IntradayTransaction intradayTransaction0 = new IntradayTransaction(intradayTransaction_IntradayTransactionBuilder0);
      intradayTransaction0.setCounterpartAccountReference("");
      String string0 = intradayTransaction0.getCounterpartAccountReference();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      byte[] byteArray0 = new byte[6];
      byteArray0[4] = (byte) (-101);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      intradayTransaction0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = intradayTransaction0.getAmount();
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      intradayTransaction0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = intradayTransaction0.getAmount();
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      byte[] byteArray0 = new byte[6];
      byteArray0[5] = (byte) (-112);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      intradayTransaction0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = intradayTransaction0.getAmount();
      assertEquals((byte) (-112), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setAdditionalInformation("ay(c=g2t<-");
      String string0 = intradayTransaction0.getAdditionalInformation();
      assertEquals("ay(c=g2t<-", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setAdditionalInformation("");
      String string0 = intradayTransaction0.getAdditionalInformation();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      boolean boolean0 = intradayTransaction0.canEqual(intradayTransaction0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      Object object0 = new Object();
      boolean boolean0 = intradayTransaction0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = null;
      try {
        intradayTransaction0 = new IntradayTransaction((IntradayTransaction.IntradayTransactionBuilder<?, ?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibanity.apis.client.products.isabel_connect.models.IsabelModel$IsabelModelBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction0.setEndToEndId("{accountId}");
      boolean boolean0 = intradayTransaction1.equals(intradayTransaction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IntradayTransaction.IntradayTransactionBuilder<?, ?> intradayTransaction_IntradayTransactionBuilder0 = IntradayTransaction.builder();
      IntradayTransaction intradayTransaction0 = new IntradayTransaction(intradayTransaction_IntradayTransactionBuilder0);
      intradayTransaction0.setCounterpartFinancialInstitutionBic("");
      IntradayTransaction.IntradayTransactionBuilder<?, ?> intradayTransaction_IntradayTransactionBuilder1 = intradayTransaction0.toBuilder();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction(intradayTransaction_IntradayTransactionBuilder1);
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertEquals("", intradayTransaction1.getCounterpartFinancialInstitutionBic());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setRemittanceInformation("89O)gW5,~>z");
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertEquals("89O)gW5,~>z", intradayTransaction0.getRemittanceInformation());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      String string0 = intradayTransaction0.getCounterpartName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      String string0 = intradayTransaction0.getCounterpartAccountReference();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      String string0 = intradayTransaction0.getInternalId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      String string0 = intradayTransaction0.getCounterpartFinancialInstitutionBic();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      LocalDate localDate0 = intradayTransaction0.getValueDate();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      String string0 = intradayTransaction0.getAdditionalInformation();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      BigDecimal bigDecimal0 = intradayTransaction0.getAmount();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      String string0 = intradayTransaction0.getEndToEndId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      String string0 = intradayTransaction0.getRemittanceInformation();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      String string0 = intradayTransaction0.getStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      LocalDate localDate0 = intradayTransaction0.getExecutionDate();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IntradayTransaction.IntradayTransactionBuilder<?, ?> intradayTransaction_IntradayTransactionBuilder0 = IntradayTransaction.builder();
      IntradayTransaction intradayTransaction0 = new IntradayTransaction(intradayTransaction_IntradayTransactionBuilder0);
      String string0 = intradayTransaction0.getRemittanceInformationType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      LocalDate localDate0 = MockLocalDate.ofYearDay(74, 74);
      intradayTransaction0.setExecutionDate(localDate0);
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertFalse(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction1.setExecutionDate(localDate0);
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      LocalDate localDate0 = MockLocalDate.now();
      intradayTransaction1.setExecutionDate(localDate0);
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      LocalDate localDate0 = MockLocalDate.now();
      intradayTransaction1.setExecutionDate(localDate0);
      boolean boolean0 = intradayTransaction1.equals(intradayTransaction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      intradayTransaction1.setValueDate(localDate0);
      assertFalse(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction0.setValueDate(localDate0);
      boolean boolean0 = intradayTransaction1.equals(intradayTransaction0);
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      LocalDate localDate0 = MockLocalDate.now();
      intradayTransaction1.setValueDate(localDate0);
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      LocalDate localDate0 = MockLocalDate.now();
      intradayTransaction0.setValueDate(localDate0);
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      intradayTransaction0.setAdditionalInformation("+j33]sGc?f#rUY");
      assertFalse(intradayTransaction0.equals((Object)intradayTransaction1));
      
      intradayTransaction1.setAdditionalInformation("+j33]sGc?f#rUY");
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction1.setAdditionalInformation("intradayTransaction");
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction1.setAdditionalInformation("intradayTransaction");
      boolean boolean0 = intradayTransaction1.equals(intradayTransaction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      intradayTransaction1.setStatus("intradayTransaction");
      assertFalse(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction0.setStatus("intradayTransaction");
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction1.setStatus("{accountId}");
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction0.setStatus("{accountId}");
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      intradayTransaction0.setRemittanceInformationType("");
      assertFalse(intradayTransaction0.equals((Object)intradayTransaction1));
      
      intradayTransaction1.setRemittanceInformationType("");
      boolean boolean0 = intradayTransaction1.equals(intradayTransaction0);
      assertTrue(intradayTransaction0.equals((Object)intradayTransaction1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction0.setRemittanceInformationType("{accountId}");
      boolean boolean0 = intradayTransaction1.equals(intradayTransaction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction1.setRemittanceInformationType("intradayTransaction");
      boolean boolean0 = intradayTransaction1.equals(intradayTransaction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setRemittanceInformation("8B39O)gW5,~>z");
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertFalse(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction1.setRemittanceInformation("8B39O)gW5,~>z");
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction1.setRemittanceInformation("intradayTransaction");
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setInternalId("0Ri,vRsmz}k:1Y}hD");
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertFalse(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction1.setInternalId("0Ri,vRsmz}k:1Y}hD");
      boolean boolean0 = intradayTransaction1.equals(intradayTransaction0);
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction0.setInternalId("{accountId}");
      boolean boolean0 = intradayTransaction1.equals(intradayTransaction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction1.setInternalId("intradayTransaction");
      boolean boolean0 = intradayTransaction1.equals(intradayTransaction0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      IntradayTransaction.IntradayTransactionBuilder<?, ?> intradayTransaction_IntradayTransactionBuilder0 = IntradayTransaction.builder();
      IntradayTransaction intradayTransaction0 = new IntradayTransaction(intradayTransaction_IntradayTransactionBuilder0);
      intradayTransaction0.setEndToEndId("");
      IntradayTransaction.IntradayTransactionBuilder<?, ?> intradayTransaction_IntradayTransactionBuilder1 = intradayTransaction0.toBuilder();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction(intradayTransaction_IntradayTransactionBuilder1);
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertEquals("", intradayTransaction1.getEndToEndId());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setEndToEndId("com.ibanity.apis.client.products.isabel_connect.models.IsabelModel");
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertFalse(boolean0);
      assertEquals("com.ibanity.apis.client.products.isabel_connect.models.IsabelModel", intradayTransaction0.getEndToEndId());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setCounterpartName("{accountId}");
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertFalse(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction1.setCounterpartName("{accountId}");
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setCounterpartName("");
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertFalse(boolean0);
      assertEquals("", intradayTransaction0.getCounterpartName());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      IntradayTransaction.IntradayTransactionBuilder<?, ?> intradayTransaction_IntradayTransactionBuilder0 = IntradayTransaction.builder();
      IntradayTransaction intradayTransaction0 = new IntradayTransaction(intradayTransaction_IntradayTransactionBuilder0);
      intradayTransaction0.setCounterpartFinancialInstitutionBic("{accountId}");
      IntradayTransaction intradayTransaction1 = new IntradayTransaction(intradayTransaction_IntradayTransactionBuilder0);
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertFalse(boolean0);
      assertEquals("{accountId}", intradayTransaction0.getCounterpartFinancialInstitutionBic());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction1.setCounterpartFinancialInstitutionBic("{accountId}");
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertFalse(intradayTransaction1.equals((Object)intradayTransaction0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction1.setCounterpartAccountReference("intradayTransaction");
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertFalse(intradayTransaction1.equals((Object)intradayTransaction0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction1.setCounterpartAccountReference("intradayTransaction");
      boolean boolean0 = intradayTransaction1.equals(intradayTransaction0);
      assertFalse(intradayTransaction1.equals((Object)intradayTransaction0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      intradayTransaction0.setAmount(bigDecimal0);
      assertFalse(intradayTransaction0.equals((Object)intradayTransaction1));
      
      intradayTransaction1.setAmount(bigDecimal0);
      boolean boolean0 = intradayTransaction1.equals(intradayTransaction0);
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      intradayTransaction1.setAmount(bigDecimal0);
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertFalse(intradayTransaction1.equals((Object)intradayTransaction0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      intradayTransaction0.setAmount(bigDecimal0);
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      assertTrue(intradayTransaction1.equals((Object)intradayTransaction0));
      
      intradayTransaction1.setId("intradayTransaction");
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertFalse(intradayTransaction1.equals((Object)intradayTransaction0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      boolean boolean0 = intradayTransaction0.equals(", additionalInformation=");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-1805L));
      intradayTransaction0.setExecutionDate(localDate0);
      intradayTransaction0.hashCode();
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-1308L));
      intradayTransaction0.setValueDate(localDate0);
      intradayTransaction0.hashCode();
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setAdditionalInformation("");
      intradayTransaction0.hashCode();
      assertEquals("", intradayTransaction0.getAdditionalInformation());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setStatus("awA$b5kG$mMkcG58?");
      intradayTransaction0.hashCode();
      assertEquals("awA$b5kG$mMkcG58?", intradayTransaction0.getStatus());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setRemittanceInformationType("b>5&dD6,')Kgmb{");
      intradayTransaction0.hashCode();
      assertEquals("b>5&dD6,')Kgmb{", intradayTransaction0.getRemittanceInformationType());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setRemittanceInformation("");
      intradayTransaction0.hashCode();
      assertEquals("", intradayTransaction0.getRemittanceInformation());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setInternalId("b>5&dD6,')Kgmb{");
      intradayTransaction0.hashCode();
      assertEquals("b>5&dD6,')Kgmb{", intradayTransaction0.getInternalId());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setEndToEndId("#2y9C5#>z$2#b J");
      intradayTransaction0.hashCode();
      assertEquals("#2y9C5#>z$2#b J", intradayTransaction0.getEndToEndId());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setCounterpartName("intradayTransaction");
      intradayTransaction0.hashCode();
      assertEquals("intradayTransaction", intradayTransaction0.getCounterpartName());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setCounterpartFinancialInstitutionBic("0");
      intradayTransaction0.hashCode();
      assertEquals("0", intradayTransaction0.getCounterpartFinancialInstitutionBic());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setCounterpartAccountReference("#2y9C5#>z$2#b J");
      intradayTransaction0.hashCode();
      assertEquals("#2y9C5#>z$2#b J", intradayTransaction0.getCounterpartAccountReference());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      BigDecimal bigDecimal0 = new BigDecimal(469L);
      intradayTransaction0.setAmount(bigDecimal0);
      intradayTransaction0.hashCode();
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      intradayTransaction0.setCounterpartName("{accountId}");
      IntradayTransaction intradayTransaction1 = new IntradayTransaction();
      boolean boolean0 = intradayTransaction1.equals(intradayTransaction0);
      assertFalse(intradayTransaction0.equals((Object)intradayTransaction1));
      assertEquals("{accountId}", intradayTransaction0.getCounterpartName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      intradayTransaction0.setAmount(bigDecimal0);
      BigDecimal bigDecimal1 = intradayTransaction0.getAmount();
      assertEquals((short)1, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      IntradayTransaction.IntradayTransactionBuilder<?, ?> intradayTransaction_IntradayTransactionBuilder0 = IntradayTransaction.builder();
      IntradayTransaction intradayTransaction0 = new IntradayTransaction(intradayTransaction_IntradayTransactionBuilder0);
      intradayTransaction0.setCounterpartAccountReference("com.ibanity.apis.client.products.isabel_connect.models.IsabelModel$IsabelModelBuilder");
      IntradayTransaction.IntradayTransactionBuilder<?, ?> intradayTransaction_IntradayTransactionBuilder1 = intradayTransaction0.toBuilder();
      IntradayTransaction intradayTransaction1 = new IntradayTransaction(intradayTransaction_IntradayTransactionBuilder1);
      boolean boolean0 = intradayTransaction0.equals(intradayTransaction1);
      assertEquals("com.ibanity.apis.client.products.isabel_connect.models.IsabelModel$IsabelModelBuilder", intradayTransaction1.getCounterpartAccountReference());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      IntradayTransaction intradayTransaction0 = new IntradayTransaction();
      String string0 = intradayTransaction0.toString();
      assertEquals("IntradayTransaction(super=IsabelModel(id=null, selfLink=null, requestId=null), amount=null, counterpartAccountReference=null, counterpartFinancialInstitutionBic=null, counterpartName=null, endToEndId=null, internalId=null, remittanceInformation=null, remittanceInformationType=null, status=null, additionalInformation=null, valueDate=null, executionDate=null)", string0);
  }
}
