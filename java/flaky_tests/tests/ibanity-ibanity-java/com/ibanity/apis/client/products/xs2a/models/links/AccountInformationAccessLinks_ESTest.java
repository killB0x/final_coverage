/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 11:25:11 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.models.links;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.models.links.AccountInformationAccessLinks;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccountInformationAccessLinks_ESTest extends AccountInformationAccessLinks_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccountInformationAccessLinks.AccountInformationAccessLinksBuilder accountInformationAccessLinks_AccountInformationAccessLinksBuilder0 = new AccountInformationAccessLinks.AccountInformationAccessLinksBuilder();
      accountInformationAccessLinks_AccountInformationAccessLinksBuilder0.redirect("AccountInformationAccessLinks.AccountInformationAccessLinksBuilder(redirect=");
      AccountInformationAccessLinks accountInformationAccessLinks0 = accountInformationAccessLinks_AccountInformationAccessLinksBuilder0.build();
      String string0 = accountInformationAccessLinks0.getRedirect();
      assertEquals("AccountInformationAccessLinks.AccountInformationAccessLinksBuilder(redirect=", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AccountInformationAccessLinks.AccountInformationAccessLinksBuilder accountInformationAccessLinks_AccountInformationAccessLinksBuilder0 = new AccountInformationAccessLinks.AccountInformationAccessLinksBuilder();
      accountInformationAccessLinks_AccountInformationAccessLinksBuilder0.redirect("");
      AccountInformationAccessLinks accountInformationAccessLinks0 = accountInformationAccessLinks_AccountInformationAccessLinksBuilder0.build();
      String string0 = accountInformationAccessLinks0.getRedirect();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AccountInformationAccessLinks accountInformationAccessLinks0 = new AccountInformationAccessLinks();
      boolean boolean0 = accountInformationAccessLinks0.canEqual(accountInformationAccessLinks0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AccountInformationAccessLinks.AccountInformationAccessLinksBuilder accountInformationAccessLinks_AccountInformationAccessLinksBuilder0 = new AccountInformationAccessLinks.AccountInformationAccessLinksBuilder();
      AccountInformationAccessLinks accountInformationAccessLinks0 = accountInformationAccessLinks_AccountInformationAccessLinksBuilder0.build();
      boolean boolean0 = accountInformationAccessLinks0.canEqual("2zY}$+(+[; !?aQi:k4");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AccountInformationAccessLinks accountInformationAccessLinks0 = new AccountInformationAccessLinks();
      String string0 = accountInformationAccessLinks0.getRedirect();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AccountInformationAccessLinks.AccountInformationAccessLinksBuilder accountInformationAccessLinks_AccountInformationAccessLinksBuilder0 = new AccountInformationAccessLinks.AccountInformationAccessLinksBuilder();
      accountInformationAccessLinks_AccountInformationAccessLinksBuilder0.redirect("AccountInformationAccessLinks.AccountInformationAccessLinksBuilder(redirect=");
      AccountInformationAccessLinks accountInformationAccessLinks0 = accountInformationAccessLinks_AccountInformationAccessLinksBuilder0.build();
      AccountInformationAccessLinks accountInformationAccessLinks1 = accountInformationAccessLinks_AccountInformationAccessLinksBuilder0.build();
      boolean boolean0 = accountInformationAccessLinks0.equals(accountInformationAccessLinks1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AccountInformationAccessLinks accountInformationAccessLinks0 = new AccountInformationAccessLinks();
      AccountInformationAccessLinks.AccountInformationAccessLinksBuilder accountInformationAccessLinks_AccountInformationAccessLinksBuilder0 = new AccountInformationAccessLinks.AccountInformationAccessLinksBuilder();
      AccountInformationAccessLinks.AccountInformationAccessLinksBuilder accountInformationAccessLinks_AccountInformationAccessLinksBuilder1 = accountInformationAccessLinks_AccountInformationAccessLinksBuilder0.redirect("RYw`~?=\u0003BVxN");
      AccountInformationAccessLinks accountInformationAccessLinks1 = accountInformationAccessLinks_AccountInformationAccessLinksBuilder1.build();
      boolean boolean0 = accountInformationAccessLinks0.equals(accountInformationAccessLinks1);
      assertFalse(boolean0);
      assertFalse(accountInformationAccessLinks1.equals((Object)accountInformationAccessLinks0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AccountInformationAccessLinks accountInformationAccessLinks0 = new AccountInformationAccessLinks();
      AccountInformationAccessLinks.AccountInformationAccessLinksBuilder accountInformationAccessLinks_AccountInformationAccessLinksBuilder0 = new AccountInformationAccessLinks.AccountInformationAccessLinksBuilder();
      accountInformationAccessLinks_AccountInformationAccessLinksBuilder0.redirect("AccountInformationAccessLinks.AccountInformationAccessLinksBuilder(redirect=");
      AccountInformationAccessLinks accountInformationAccessLinks1 = accountInformationAccessLinks_AccountInformationAccessLinksBuilder0.build();
      boolean boolean0 = accountInformationAccessLinks1.equals(accountInformationAccessLinks0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AccountInformationAccessLinks accountInformationAccessLinks0 = new AccountInformationAccessLinks();
      boolean boolean0 = accountInformationAccessLinks0.equals(accountInformationAccessLinks0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AccountInformationAccessLinks accountInformationAccessLinks0 = new AccountInformationAccessLinks();
      accountInformationAccessLinks0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccountInformationAccessLinks.AccountInformationAccessLinksBuilder accountInformationAccessLinks_AccountInformationAccessLinksBuilder0 = AccountInformationAccessLinks.builder();
      accountInformationAccessLinks_AccountInformationAccessLinksBuilder0.redirect("5FA)d=|3rM?");
      AccountInformationAccessLinks accountInformationAccessLinks0 = accountInformationAccessLinks_AccountInformationAccessLinksBuilder0.build();
      accountInformationAccessLinks0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AccountInformationAccessLinks.AccountInformationAccessLinksBuilder accountInformationAccessLinks_AccountInformationAccessLinksBuilder0 = new AccountInformationAccessLinks.AccountInformationAccessLinksBuilder();
      String string0 = accountInformationAccessLinks_AccountInformationAccessLinksBuilder0.toString();
      assertEquals("AccountInformationAccessLinks.AccountInformationAccessLinksBuilder(redirect=null)", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AccountInformationAccessLinks accountInformationAccessLinks0 = new AccountInformationAccessLinks();
      String string0 = accountInformationAccessLinks0.toString();
      assertEquals("AccountInformationAccessLinks(redirect=null)", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccountInformationAccessLinks.AccountInformationAccessLinksBuilder accountInformationAccessLinks_AccountInformationAccessLinksBuilder0 = AccountInformationAccessLinks.builder();
      AccountInformationAccessLinks accountInformationAccessLinks0 = accountInformationAccessLinks_AccountInformationAccessLinksBuilder0.build();
      boolean boolean0 = accountInformationAccessLinks0.equals("5FA)d=|3rM?");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AccountInformationAccessLinks accountInformationAccessLinks0 = new AccountInformationAccessLinks();
      AccountInformationAccessLinks accountInformationAccessLinks1 = new AccountInformationAccessLinks();
      boolean boolean0 = accountInformationAccessLinks0.equals(accountInformationAccessLinks1);
      assertTrue(boolean0);
  }
}
