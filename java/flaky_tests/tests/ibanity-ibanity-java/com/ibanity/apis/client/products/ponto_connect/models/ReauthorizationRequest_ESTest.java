/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 10:02:17 GMT 2022
 */

package com.ibanity.apis.client.products.ponto_connect.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.ponto_connect.models.ReauthorizationRequest;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReauthorizationRequest_ESTest extends ReauthorizationRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = ReauthorizationRequest.builder();
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder1 = reauthorizationRequest_ReauthorizationRequestBuilder0.selfLink("7e}y(v-");
      ReauthorizationRequest reauthorizationRequest0 = reauthorizationRequest_ReauthorizationRequestBuilder1.build();
      String string0 = reauthorizationRequest0.getSelfLink();
      assertEquals("7e}y(v-", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      reauthorizationRequest0.setSelfLink("");
      String string0 = reauthorizationRequest0.getSelfLink();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      reauthorizationRequest0.setRequestId(" \"_");
      String string0 = reauthorizationRequest0.getRequestId();
      assertEquals(" \"_", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      reauthorizationRequest0.setRedirectLink("Id");
      String string0 = reauthorizationRequest0.getRedirectLink();
      assertEquals("Id", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = new ReauthorizationRequest.ReauthorizationRequestBuilder();
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder1 = reauthorizationRequest_ReauthorizationRequestBuilder0.redirectLink("");
      ReauthorizationRequest reauthorizationRequest0 = reauthorizationRequest_ReauthorizationRequestBuilder1.build();
      String string0 = reauthorizationRequest0.getRedirectLink();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Random.setNextRandom((-2710));
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = new ReauthorizationRequest.ReauthorizationRequestBuilder();
      ReauthorizationRequest reauthorizationRequest0 = reauthorizationRequest_ReauthorizationRequestBuilder0.build();
      UUID uUID0 = MockUUID.fromString((String) null);
      reauthorizationRequest0.setId(uUID0);
      UUID uUID1 = reauthorizationRequest0.getId();
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = new ReauthorizationRequest.ReauthorizationRequestBuilder();
      UUID uUID0 = MockUUID.randomUUID();
      reauthorizationRequest_ReauthorizationRequestBuilder0.id(uUID0);
      ReauthorizationRequest reauthorizationRequest0 = reauthorizationRequest_ReauthorizationRequestBuilder0.build();
      UUID uUID1 = reauthorizationRequest0.getId();
      assertEquals(16793600L, uUID1.getMostSignificantBits());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      boolean boolean0 = reauthorizationRequest0.canEqual(reauthorizationRequest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = ReauthorizationRequest.builder();
      boolean boolean0 = reauthorizationRequest0.canEqual(reauthorizationRequest_ReauthorizationRequestBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      UUID uUID0 = reauthorizationRequest0.getId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      String string0 = reauthorizationRequest0.getRedirectLink();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      String string0 = reauthorizationRequest0.getSelfLink();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      String string0 = reauthorizationRequest0.getRequestId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      reauthorizationRequest0.setRedirectLink("reauthorizationRequest");
      ReauthorizationRequest reauthorizationRequest1 = new ReauthorizationRequest();
      assertFalse(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      
      reauthorizationRequest1.setRedirectLink("reauthorizationRequest");
      boolean boolean0 = reauthorizationRequest1.equals(reauthorizationRequest0);
      assertTrue(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = ReauthorizationRequest.builder();
      reauthorizationRequest_ReauthorizationRequestBuilder0.redirectLink(", selfLink=");
      ReauthorizationRequest reauthorizationRequest1 = reauthorizationRequest_ReauthorizationRequestBuilder0.build();
      boolean boolean0 = reauthorizationRequest0.equals(reauthorizationRequest1);
      assertEquals(", selfLink=", reauthorizationRequest1.getRedirectLink());
      assertFalse(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      ReauthorizationRequest reauthorizationRequest1 = new ReauthorizationRequest();
      assertTrue(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      
      reauthorizationRequest1.setRedirectLink("{reauthorizationRequestId}");
      boolean boolean0 = reauthorizationRequest1.equals(reauthorizationRequest0);
      assertFalse(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      ReauthorizationRequest reauthorizationRequest1 = new ReauthorizationRequest();
      reauthorizationRequest0.setRequestId("{reauthorizationRequestId}");
      assertFalse(reauthorizationRequest0.equals((Object)reauthorizationRequest1));
      
      reauthorizationRequest1.setRequestId("{reauthorizationRequestId}");
      boolean boolean0 = reauthorizationRequest0.equals(reauthorizationRequest1);
      assertTrue(reauthorizationRequest0.equals((Object)reauthorizationRequest1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      ReauthorizationRequest reauthorizationRequest1 = new ReauthorizationRequest();
      assertTrue(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      
      reauthorizationRequest1.setRequestId("reauthorizationRequest");
      boolean boolean0 = reauthorizationRequest0.equals(reauthorizationRequest1);
      assertFalse(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      ReauthorizationRequest reauthorizationRequest1 = new ReauthorizationRequest();
      assertTrue(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      
      reauthorizationRequest1.setRequestId("{reauthorizationRequestId}");
      boolean boolean0 = reauthorizationRequest1.equals(reauthorizationRequest0);
      assertFalse(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      ReauthorizationRequest reauthorizationRequest1 = new ReauthorizationRequest();
      assertTrue(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      
      reauthorizationRequest1.setSelfLink("reauthorizationRequest");
      boolean boolean0 = reauthorizationRequest0.equals(reauthorizationRequest1);
      assertFalse(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      ReauthorizationRequest reauthorizationRequest1 = new ReauthorizationRequest();
      assertTrue(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      
      reauthorizationRequest1.setSelfLink("{reauthorizationRequestId}");
      boolean boolean0 = reauthorizationRequest1.equals(reauthorizationRequest0);
      assertFalse(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      UUID uUID0 = MockUUID.randomUUID();
      reauthorizationRequest0.setId(uUID0);
      ReauthorizationRequest reauthorizationRequest1 = new ReauthorizationRequest();
      assertFalse(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      
      reauthorizationRequest1.setId(uUID0);
      boolean boolean0 = reauthorizationRequest0.equals(reauthorizationRequest1);
      assertTrue(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = new ReauthorizationRequest.ReauthorizationRequestBuilder();
      ReauthorizationRequest reauthorizationRequest0 = reauthorizationRequest_ReauthorizationRequestBuilder0.build();
      UUID uUID0 = MockUUID.fromString((String) null);
      reauthorizationRequest_ReauthorizationRequestBuilder0.id(uUID0);
      ReauthorizationRequest reauthorizationRequest1 = reauthorizationRequest_ReauthorizationRequestBuilder0.build();
      boolean boolean0 = reauthorizationRequest0.equals(reauthorizationRequest1);
      assertFalse(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = new ReauthorizationRequest.ReauthorizationRequestBuilder();
      ReauthorizationRequest reauthorizationRequest0 = reauthorizationRequest_ReauthorizationRequestBuilder0.build();
      UUID uUID0 = MockUUID.fromString((String) null);
      ReauthorizationRequest reauthorizationRequest1 = reauthorizationRequest_ReauthorizationRequestBuilder0.build();
      assertTrue(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      
      reauthorizationRequest0.setId(uUID0);
      boolean boolean0 = reauthorizationRequest0.equals(reauthorizationRequest1);
      assertFalse(reauthorizationRequest1.equals((Object)reauthorizationRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      Object object0 = new Object();
      boolean boolean0 = reauthorizationRequest0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ReauthorizationRequest reauthorizationRequest0 = new ReauthorizationRequest();
      boolean boolean0 = reauthorizationRequest0.equals(reauthorizationRequest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = new ReauthorizationRequest.ReauthorizationRequestBuilder();
      reauthorizationRequest_ReauthorizationRequestBuilder0.redirectLink("`&lM6|^");
      ReauthorizationRequest reauthorizationRequest0 = reauthorizationRequest_ReauthorizationRequestBuilder0.build();
      reauthorizationRequest0.hashCode();
      assertEquals("`&lM6|^", reauthorizationRequest0.getRedirectLink());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = new ReauthorizationRequest.ReauthorizationRequestBuilder();
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder1 = reauthorizationRequest_ReauthorizationRequestBuilder0.requestId("J1%Yv");
      ReauthorizationRequest reauthorizationRequest0 = reauthorizationRequest_ReauthorizationRequestBuilder1.build();
      reauthorizationRequest0.hashCode();
      assertEquals("J1%Yv", reauthorizationRequest0.getRequestId());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = new ReauthorizationRequest.ReauthorizationRequestBuilder();
      reauthorizationRequest_ReauthorizationRequestBuilder0.selfLink("`&lM6|^");
      ReauthorizationRequest reauthorizationRequest0 = reauthorizationRequest_ReauthorizationRequestBuilder0.build();
      reauthorizationRequest0.hashCode();
      assertEquals("`&lM6|^", reauthorizationRequest0.getSelfLink());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = ReauthorizationRequest.builder();
      String string0 = reauthorizationRequest_ReauthorizationRequestBuilder0.toString();
      assertEquals("ReauthorizationRequest.ReauthorizationRequestBuilder(id=null, selfLink=null, requestId=null, redirectLink=null)", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = new ReauthorizationRequest.ReauthorizationRequestBuilder();
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder1 = reauthorizationRequest_ReauthorizationRequestBuilder0.selfLink("Paf2;itL");
      ReauthorizationRequest reauthorizationRequest0 = reauthorizationRequest_ReauthorizationRequestBuilder1.build();
      ReauthorizationRequest reauthorizationRequest1 = reauthorizationRequest_ReauthorizationRequestBuilder0.build();
      boolean boolean0 = reauthorizationRequest0.equals(reauthorizationRequest1);
      assertEquals("Paf2;itL", reauthorizationRequest1.getSelfLink());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = new ReauthorizationRequest.ReauthorizationRequestBuilder();
      UUID uUID0 = MockUUID.fromString((String) null);
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder1 = reauthorizationRequest_ReauthorizationRequestBuilder0.id(uUID0);
      ReauthorizationRequest reauthorizationRequest0 = reauthorizationRequest_ReauthorizationRequestBuilder1.build();
      reauthorizationRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = new ReauthorizationRequest.ReauthorizationRequestBuilder();
      ReauthorizationRequest reauthorizationRequest0 = reauthorizationRequest_ReauthorizationRequestBuilder0.build();
      String string0 = reauthorizationRequest0.toString();
      assertEquals("ReauthorizationRequest(id=null, selfLink=null, requestId=null, redirectLink=null)", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ReauthorizationRequest.ReauthorizationRequestBuilder reauthorizationRequest_ReauthorizationRequestBuilder0 = ReauthorizationRequest.builder();
      reauthorizationRequest_ReauthorizationRequestBuilder0.requestId("");
      ReauthorizationRequest reauthorizationRequest0 = reauthorizationRequest_ReauthorizationRequestBuilder0.build();
      String string0 = reauthorizationRequest0.getRequestId();
      assertEquals("", string0);
      assertNotNull(string0);
  }
}
