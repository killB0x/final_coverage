/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 11:37:27 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.models.links;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationRequestAuthorizationLinks;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PaymentInitiationRequestAuthorizationLinks_ESTest extends PaymentInitiationRequestAuthorizationLinks_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0 = new PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder();
      paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0.nextRedirect("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationRequestAuthorizationLinks");
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks0 = paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0.build();
      String string0 = paymentInitiationRequestAuthorizationLinks0.getNextRedirect();
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationRequestAuthorizationLinks", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0 = new PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder();
      paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0.nextRedirect("");
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks0 = paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0.build();
      String string0 = paymentInitiationRequestAuthorizationLinks0.getNextRedirect();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0 = new PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder();
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks0 = paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0.build();
      boolean boolean0 = paymentInitiationRequestAuthorizationLinks0.canEqual(paymentInitiationRequestAuthorizationLinks0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks0 = new PaymentInitiationRequestAuthorizationLinks();
      boolean boolean0 = paymentInitiationRequestAuthorizationLinks0.canEqual((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks0 = new PaymentInitiationRequestAuthorizationLinks();
      String string0 = paymentInitiationRequestAuthorizationLinks0.getNextRedirect();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0 = new PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder();
      paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0.nextRedirect("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationRequestAuthorizationLinks");
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks0 = paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0.build();
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks1 = paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0.build();
      boolean boolean0 = paymentInitiationRequestAuthorizationLinks1.equals(paymentInitiationRequestAuthorizationLinks0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks0 = new PaymentInitiationRequestAuthorizationLinks();
      PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0 = new PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder();
      paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0.nextRedirect("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationRequestAuthorizationLinks");
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks1 = paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0.build();
      boolean boolean0 = paymentInitiationRequestAuthorizationLinks0.equals(paymentInitiationRequestAuthorizationLinks1);
      assertFalse(boolean0);
      assertFalse(paymentInitiationRequestAuthorizationLinks1.equals((Object)paymentInitiationRequestAuthorizationLinks0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks0 = new PaymentInitiationRequestAuthorizationLinks();
      PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0 = new PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder();
      PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder1 = paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0.nextRedirect("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationRequestAuthorizationLinks");
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks1 = paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder1.build();
      boolean boolean0 = paymentInitiationRequestAuthorizationLinks1.equals(paymentInitiationRequestAuthorizationLinks0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks0 = new PaymentInitiationRequestAuthorizationLinks();
      Object object0 = new Object();
      boolean boolean0 = paymentInitiationRequestAuthorizationLinks0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks0 = new PaymentInitiationRequestAuthorizationLinks();
      boolean boolean0 = paymentInitiationRequestAuthorizationLinks0.equals(paymentInitiationRequestAuthorizationLinks0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks0 = new PaymentInitiationRequestAuthorizationLinks();
      paymentInitiationRequestAuthorizationLinks0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0 = new PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder();
      paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0.nextRedirect("com.ibanity.apis.client.products.xs2a.models.links.PaymentInitiationRequestAuthorizationLinks");
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks0 = paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0.build();
      paymentInitiationRequestAuthorizationLinks0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0 = new PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder();
      String string0 = paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0.toString();
      assertEquals("PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder(nextRedirect=null)", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0 = PaymentInitiationRequestAuthorizationLinks.builder();
      assertNotNull(paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks0 = new PaymentInitiationRequestAuthorizationLinks();
      String string0 = paymentInitiationRequestAuthorizationLinks0.toString();
      assertEquals("PaymentInitiationRequestAuthorizationLinks(nextRedirect=null)", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks0 = new PaymentInitiationRequestAuthorizationLinks();
      PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0 = new PaymentInitiationRequestAuthorizationLinks.PaymentInitiationRequestAuthorizationLinksBuilder();
      PaymentInitiationRequestAuthorizationLinks paymentInitiationRequestAuthorizationLinks1 = paymentInitiationRequestAuthorizationLinks_PaymentInitiationRequestAuthorizationLinksBuilder0.build();
      boolean boolean0 = paymentInitiationRequestAuthorizationLinks0.equals(paymentInitiationRequestAuthorizationLinks1);
      assertTrue(boolean0);
  }
}
