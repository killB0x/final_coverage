/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 07:29:15 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.models.create;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.models.create.PeriodicPaymentInitiationRequestCreationQuery;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.MathContext;
import java.time.Clock;
import java.time.LocalDate;
import java.time.Month;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.time.chrono.ThaiBuddhistDate;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PeriodicPaymentInitiationRequestCreationQuery_ESTest extends PeriodicPaymentInitiationRequestCreationQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-2457L));
      assertNotNull(localDate0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      Map<String, String> map0 = periodicPaymentInitiationRequestCreationQuery0.getAdditionalHeaders();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = new PeriodicPaymentInitiationRequestCreationQuery("q-.C+s:_", uUID0, "q-.C+s:_", "q-.C+s:_", (String) null, (String) null, "", bigDecimal0, "", "q-.C+s:_", "cSnT&2`:", "", "", "", ", executionRule=", "", (String) null, (String) null, "", "q-.C+s:_", false, true, "", "PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", localDate0, localDate0, ", currency=", ", currency=", map0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertEquals(", executionRule=", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertEquals("cSnT&2`:", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertEquals(", executionRule=", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertEquals("cSnT&2`:", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      UUID uUID0 = MockUUID.fromString("Q?j");
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = new BigDecimal((-73.495160390441));
      assertEquals((short) (-73), bigDecimal0.shortValue());
      assertEquals((byte) (-73), bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      Map<String, String> map0 = periodicPaymentInitiationRequestCreationQuery0.getAdditionalHeaders();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = new PeriodicPaymentInitiationRequestCreationQuery("Q?j", uUID0, "Q?j", (String) null, "", "", "", bigDecimal0, "", (String) null, "cR68%zSBoI", "iF~?", "cR68%zSBoI", "", "b", "", "X4(;K?-I0Y{Y>T", (String) null, "", "", true, false, "iF~?", "b", (LocalDate) null, (LocalDate) null, "b", "", map0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals((short) (-73), bigDecimal0.shortValue());
      assertEquals((byte) (-73), bigDecimal0.byteValue());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals("iF~?", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertEquals("Q?j", periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals("cR68%zSBoI", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertEquals("X4(;K?-I0Y{Y>T", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals("cR68%zSBoI", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertEquals("iF~?", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertEquals("Q?j", periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals((short) (-73), bigDecimal0.shortValue());
      assertEquals((byte) (-73), bigDecimal0.byteValue());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals("iF~?", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertEquals("Q?j", periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals("cR68%zSBoI", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertEquals("X4(;K?-I0Y{Y>T", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals("cR68%zSBoI", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertEquals("iF~?", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertEquals("Q?j", periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.state("com.ibanity.apis.client.products.xs2a.models.create.PeriodicPaymentInitiationRequestCreationQuery$PeriodicPaymentInitiationRequestCreationQueryBuilder");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.create.PeriodicPaymentInitiationRequestCreationQuery$PeriodicPaymentInitiationRequestCreationQueryBuilder", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getState();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.create.PeriodicPaymentInitiationRequestCreationQuery$PeriodicPaymentInitiationRequestCreationQueryBuilder", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertEquals("com.ibanity.apis.client.products.xs2a.models.create.PeriodicPaymentInitiationRequestCreationQuery$PeriodicPaymentInitiationRequestCreationQueryBuilder", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.state("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getState();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      Month month0 = Month.FEBRUARY;
      LocalDate localDate0 = MockLocalDate.of(1, month0, 1);
      assertNotNull(localDate0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.startDate(localDate0);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      LocalDate localDate1 = periodicPaymentInitiationRequestCreationQuery0.getStartDate();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(localDate0, localDate1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertSame(localDate1, localDate0);
      assertNotNull(localDate1);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.remittanceInformationType("8fg;FW557[`cInzc_");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("8fg;FW557[`cInzc_", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("8fg;FW557[`cInzc_", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertEquals("8fg;FW557[`cInzc_", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      UUID uUID0 = MockUUID.fromString("m7+l)~5F[]");
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery(", redirectUri=", uUID0, ", debtorName=", "m7+l)~5F[]", "m7+l)~5F[]", "", (String) null, bigDecimal0, "", "", "", (String) null, ", productType=", ", creditorAgentType=", ", creditorAgentType=", ", creditorAgentType=", "", "i%xLcT$", "i%xLcT$", (String) null, true, false, ", debtorName=", ", redirectUri=", localDate0, localDate0, ", debtorName=", "c]i+2j", map0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals(", debtorName=", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals(", creditorAgentType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("m7+l)~5F[]", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("c]i+2j", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("i%xLcT$", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals(", debtorName=", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("m7+l)~5F[]", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals(", productType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals(", creditorAgentType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals(", redirectUri=", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals(", creditorAgentType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(", debtorName=", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals(", redirectUri=", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("i%xLcT$", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType();
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals(", debtorName=", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals(", creditorAgentType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("m7+l)~5F[]", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("c]i+2j", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("i%xLcT$", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals(", debtorName=", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("m7+l)~5F[]", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals(", productType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals(", creditorAgentType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals(", redirectUri=", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals(", creditorAgentType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(", debtorName=", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals(", redirectUri=", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("i%xLcT$", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.remittanceInformation("w]uF3tID");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("w]uF3tID", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("w]uF3tID", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertEquals("w]uF3tID", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.remittanceInformation("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.redirectUri("b}");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("b}", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getRedirectUri();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("b}", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertEquals("b}", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.redirectUri("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getRedirectUri();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.productType("?s<Q");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getProductType();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertEquals("?s<Q", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.productType("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getProductType();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getLocale();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.locale("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getLocale();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getFrequency();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString((String) null);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      assertNotNull(localDate0);
      
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("", uUID0, "_Gz?Onq!c;R5;,8^k2^", "", (String) null, ":VUM%Jc", "", bigDecimal0, ")&NX&tH3<;", "", (String) null, ")&NX&tH3<;", "", "", "+c0p)Z", "", "+c0p)Z", "", ", creditorAccountReferenceType=", (String) null, true, false, ")&NX&tH3<;", ")&NX&tH3<;", localDate0, localDate0, "", "vB1EA", map0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals(", creditorAccountReferenceType=", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("vB1EA", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals(":VUM%Jc", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("_Gz?Onq!c;R5;,8^k2^", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getFrequency();
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals(", creditorAccountReferenceType=", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("vB1EA", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals(":VUM%Jc", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("_Gz?Onq!c;R5;,8^k2^", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Random.setNextRandom(1924);
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals("84070000-8507-4000-8607-000087070000", uUID0.toString());
      assertEquals((-8789056145524850688L), uUID0.getLeastSignificantBits());
      assertEquals((-8933171333634244608L), uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.financialInstitutionId(uUID0);
      assertEquals("84070000-8507-4000-8607-000087070000", uUID0.toString());
      assertEquals((-8789056145524850688L), uUID0.getLeastSignificantBits());
      assertEquals((-8933171333634244608L), uUID0.getMostSignificantBits());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      UUID uUID1 = periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionId();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals((-8933171333634244608L), uUID1.getMostSignificantBits());
      assertEquals((-8789056145524850688L), uUID1.getLeastSignificantBits());
      assertEquals("84070000-8507-4000-8607-000087070000", uUID1.toString());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(uUID1, uUID0);
      assertNotNull(uUID1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = new BigDecimal((-105));
      assertEquals((byte) (-105), bigDecimal0.byteValue());
      assertEquals((short) (-105), bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("0AGF_ZFyp*,", uUID0, "", "0AGF_ZFyp*,", "Zrg2A~", "Zrg2A~", ", additionalHeaders=", bigDecimal0, "Zrg2A~", "%f<i$7*m-ue!2Oh", "", "%f<i$7*m-ue!2Oh", "/2p73", "", "", "", "0AGF_ZFyp*,", "", "", "", false, false, (String) null, "", (LocalDate) null, (LocalDate) null, (String) null, "", hashMap0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals((byte) (-105), bigDecimal0.byteValue());
      assertEquals((short) (-105), bigDecimal0.shortValue());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("/2p73", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals(", additionalHeaders=", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      UUID uUID1 = periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionId();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals((byte) (-105), bigDecimal0.byteValue());
      assertEquals((short) (-105), bigDecimal0.shortValue());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("/2p73", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals(", additionalHeaders=", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals(16793600L, uUID1.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID1.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID1.toString());
      assertSame(uUID0, uUID1);
      assertSame(uUID1, uUID0);
      assertNotNull(uUID1);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.financialInstitutionCustomerReference(", financialInstitutionCustomerReference=");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals(", financialInstitutionCustomerReference=", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals(", financialInstitutionCustomerReference=", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertEquals(", financialInstitutionCustomerReference=", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.financialInstitutionCustomerReference("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.executionRule("2M");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("2M", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getExecutionRule();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("2M", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertEquals("2M", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      BigInteger bigInteger0 = BigInteger.ONE;
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertNotNull(bigInteger0);
      
      MathContext mathContext0 = MathContext.DECIMAL128;
      assertNotNull(mathContext0);
      
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, mathContext0);
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-2457L));
      assertNotNull(localDate0);
      
      Map<String, String> map0 = periodicPaymentInitiationRequestCreationQuery0.getAdditionalHeaders();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      UUID uUID0 = MockUUID.fromString("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=null, financialInstitutionId=null, consentReference=null, endToEndId=null, productType=null, remittanceInformationType=null, remittanceInformation=null, amount=null, currency=null, debtorName=null, debtorAccountReference=?s<Q, debtorAccountReferenceType=null, creditorName=null, creditorAccountReference=null, creditorAccountReferenceType=null, creditorAgent=null, creditorAgentType=null, redirectUri=null, locale=null, customerIpAddress=null, allowFinancialInstitutionRedirectUri=false, skipIbanityCompletionCallback=false, state=null, financialInstitutionCustomerReference=null, startDate=null, endDate=null, frequency=null, executionRule=null, additionalHeaders$value=null)");
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = new PeriodicPaymentInitiationRequestCreationQuery((String) null, uUID0, (String) null, " 7EOPN0cc,7+{", ", remittanceInformation=", (String) null, "H\"", bigDecimal0, "", "", "", "", ", remittanceInformation=", (String) null, "g)`g}7$`f dm:7}M-^", "uSxGSL", " 7EOPN0cc,7+{", "@E=(,nky@M-C7S%}c", "", "", false, false, "", ", executionRule=", localDate0, localDate0, (String) null, "", map0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals(", remittanceInformation=", periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertEquals(", executionRule=", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertEquals(" 7EOPN0cc,7+{", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertEquals(" 7EOPN0cc,7+{", periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertEquals("g)`g}7$`f dm:7}M-^", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertEquals("@E=(,nky@M-C7S%}c", periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("uSxGSL", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals("H\"", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertEquals(", remittanceInformation=", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery1.getExecutionRule();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals((short)1, bigInteger0.shortValue());
      assertEquals((byte)1, bigInteger0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals(", remittanceInformation=", periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertEquals(", executionRule=", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertEquals(" 7EOPN0cc,7+{", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertEquals(" 7EOPN0cc,7+{", periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertEquals("g)`g}7$`f dm:7}M-^", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertEquals("@E=(,nky@M-C7S%}c", periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("uSxGSL", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals("H\"", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertEquals(", remittanceInformation=", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertEquals("", string0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.endToEndId(", redirectUri=");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals(", redirectUri=", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getEndToEndId();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals(", redirectUri=", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertEquals(", redirectUri=", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      UUID uUID0 = MockUUID.fromString("");
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = new BigDecimal(1L);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      assertFalse(map0.isEmpty());
      assertEquals(28, map0.size());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("qoWVJ}T", uUID0, "qoWVJ}T", "", "?s<Q", "qoWVJ}T", "mmdhbW-", bigDecimal0, "qoWVJ}T", "?s<Q", (String) null, ", state=", "3FL|v|?yWi9", (String) null, "", "qoWVJ}T", "", "", "", "R+GZ1}", true, false, (String) null, "=9#([~{<)", localDate0, localDate0, "mmdhbW-", "", map0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(map0.isEmpty());
      assertEquals(28, map0.size());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("R+GZ1}", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("mmdhbW-", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("=9#([~{<)", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("3FL|v|?yWi9", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("mmdhbW-", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals(", state=", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getEndToEndId();
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(map0.isEmpty());
      assertEquals(28, map0.size());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("R+GZ1}", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("mmdhbW-", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("=9#([~{<)", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("3FL|v|?yWi9", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("mmdhbW-", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals(", state=", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString((String) null);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      assertNotNull(localDate0);
      
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("", uUID0, "_Gz?Onq!c;R5;,8^k2^", "", (String) null, ":VUM%Jc", "", bigDecimal0, ")&NX&tH3<;", "", (String) null, ")&NX&tH3<;", "", "", "+c0p)Z", "", "+c0p)Z", "", ", creditorAccountReferenceType=", (String) null, true, false, ")&NX&tH3<;", ")&NX&tH3<;", localDate0, localDate0, "", "vB1EA", map0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals(":VUM%Jc", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("_Gz?Onq!c;R5;,8^k2^", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals(", creditorAccountReferenceType=", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("vB1EA", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      LocalDate localDate1 = periodicPaymentInitiationRequestCreationQuery0.getEndDate();
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals(":VUM%Jc", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("_Gz?Onq!c;R5;,8^k2^", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals(", creditorAccountReferenceType=", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("vB1EA", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertSame(localDate0, localDate1);
      assertSame(localDate1, localDate0);
      assertNotNull(localDate1);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getDebtorName();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString((String) null);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      assertNotNull(localDate0);
      
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      assertFalse(map0.isEmpty());
      assertEquals(28, map0.size());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("", uUID0, "_Gz?Onq!c;R5;,8^k2^", "", (String) null, ":VUM%Jc", "", bigDecimal0, ")&NX&tH3<;", "", (String) null, ")&NX&tH3<;", "", "", "+c0p)Z", "", "+c0p)Z", "", ", creditorAccountReferenceType=", (String) null, true, false, ")&NX&tH3<;", ")&NX&tH3<;", localDate0, localDate0, "", "vB1EA", map0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertFalse(map0.isEmpty());
      assertEquals(28, map0.size());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals(":VUM%Jc", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals(", creditorAccountReferenceType=", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("_Gz?Onq!c;R5;,8^k2^", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("vB1EA", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getDebtorName();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertFalse(map0.isEmpty());
      assertEquals(28, map0.size());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals(":VUM%Jc", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals(", creditorAccountReferenceType=", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("_Gz?Onq!c;R5;,8^k2^", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("vB1EA", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString((String) null);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      assertNotNull(localDate0);
      
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("", uUID0, "_Gz?Onq!c;R5;,8^k2^", "", (String) null, ":VUM%Jc", "", bigDecimal0, ")&NX&tH3<;", "", (String) null, ")&NX&tH3<;", "", "", "+c0p)Z", "", "+c0p)Z", "", ", creditorAccountReferenceType=", (String) null, true, false, ")&NX&tH3<;", ")&NX&tH3<;", localDate0, localDate0, "", "vB1EA", map0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals(":VUM%Jc", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("_Gz?Onq!c;R5;,8^k2^", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals(", creditorAccountReferenceType=", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("vB1EA", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals(":VUM%Jc", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("_Gz?Onq!c;R5;,8^k2^", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals(", creditorAccountReferenceType=", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("vB1EA", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("+c0p)Z", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals(")&NX&tH3<;", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals(")&NX&tH3<;", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.debtorAccountReferenceType("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.debtorAccountReference("?s<Q");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertEquals("?s<Q", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-2457L));
      assertNotNull(localDate0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      Map<String, String> map0 = periodicPaymentInitiationRequestCreationQuery0.getAdditionalHeaders();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = new PeriodicPaymentInitiationRequestCreationQuery("q-.C+s:_", uUID0, "q-.C+s:_", "q-.C+s:_", (String) null, (String) null, "r'dxYt$>ec^yYT41", bigDecimal0, "", "q-.C+s:_", "cSnT&2`:", "", "", "", ", executionRule=", "r'dxYt$>ec^yYT41", (String) null, (String) null, "", "q-.C+s:_", false, true, "", "PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", localDate0, localDate0, ", currency=", ", currency=", map0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertEquals("r'dxYt$>ec^yYT41", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals("r'dxYt$>ec^yYT41", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertEquals("cSnT&2`:", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertEquals(", executionRule=", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertEquals("r'dxYt$>ec^yYT41", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals("r'dxYt$>ec^yYT41", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertEquals("cSnT&2`:", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertEquals(", executionRule=", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertEquals("q-.C+s:_", string0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.customerIpAddress("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.customerAccessToken("cHba*");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertEquals("cHba*", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1L);
      assertNotNull(localDate0);
      
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("", uUID0, "", "b", "b", "b", "b", bigDecimal0, (String) null, "", "b", "b", "", "", "b", "b", ", creditorName=", "", "", " g_fgkypz(48", true, true, "", "", localDate0, localDate0, "", "y9q9LvN%=M", map0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(", creditorName=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals(" g_fgkypz(48", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("y9q9LvN%=M", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(", creditorName=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals(" g_fgkypz(48", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("b", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("y9q9LvN%=M", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = new BigDecimal((-105));
      assertEquals((short) (-105), bigDecimal0.shortValue());
      assertEquals((byte) (-105), bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("0AGF_ZFyp*,", uUID0, "", "0AGF_ZFyp*,", "Zrg2A~", "Zrg2A~", ", additionalHeaders=", bigDecimal0, "Zrg2A~", "%f<i$7*m-ue!2Oh", "", "%f<i$7*m-ue!2Oh", "/2p73", "", "", "", "0AGF_ZFyp*,", "", "", "", false, false, (String) null, "", (LocalDate) null, (LocalDate) null, (String) null, "", hashMap0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((short) (-105), bigDecimal0.shortValue());
      assertEquals((byte) (-105), bigDecimal0.byteValue());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals(", additionalHeaders=", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("/2p73", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCurrency();
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((short) (-105), bigDecimal0.shortValue());
      assertEquals((byte) (-105), bigDecimal0.byteValue());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals(", additionalHeaders=", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("/2p73", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("Zrg2A~", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.currency("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCurrency();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCreditorName();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorName("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCreditorName();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorAgentType("b}");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("b}", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("b}", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertEquals("b}", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      UUID uUID0 = MockUUID.fromString("");
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = new BigDecimal(1L);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("qoWVJ}T", uUID0, "qoWVJ}T", "", "?s<Q", "qoWVJ}T", "mmdhbW-", bigDecimal0, "qoWVJ}T", "?s<Q", (String) null, ", state=", "3FL|v|?yWi9", (String) null, "", "qoWVJ}T", "", "", "", "R+GZ1}", true, false, (String) null, "=9#([~{<)", localDate0, localDate0, "mmdhbW-", "", map0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("mmdhbW-", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("R+GZ1}", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("3FL|v|?yWi9", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("=9#([~{<)", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("mmdhbW-", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals(", state=", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("mmdhbW-", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("R+GZ1}", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("3FL|v|?yWi9", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("=9#([~{<)", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("mmdhbW-", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals(", state=", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("qoWVJ}T", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-2457L));
      assertNotNull(localDate0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      Map<String, String> map0 = periodicPaymentInitiationRequestCreationQuery0.getAdditionalHeaders();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = new PeriodicPaymentInitiationRequestCreationQuery("q-.C+s:_", uUID0, "q-.C+s:_", "q-.C+s:_", (String) null, (String) null, "r'dxYt$>ec^yYT41", bigDecimal0, "", "q-.C+s:_", "cSnT&2`:", "", "", "", ", executionRule=", "r'dxYt$>ec^yYT41", (String) null, (String) null, "", "q-.C+s:_", false, true, "", "PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", localDate0, localDate0, ", currency=", ", currency=", map0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertEquals("r'dxYt$>ec^yYT41", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals("r'dxYt$>ec^yYT41", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertEquals("cSnT&2`:", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertEquals(", executionRule=", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertEquals("r'dxYt$>ec^yYT41", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals("r'dxYt$>ec^yYT41", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertEquals("cSnT&2`:", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertEquals(", executionRule=", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertEquals("r'dxYt$>ec^yYT41", string0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = new BigDecimal((-105));
      assertEquals((short) (-105), bigDecimal0.shortValue());
      assertEquals((byte) (-105), bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("0AGF_ZFyp*,", uUID0, "", "0AGF_ZFyp*,", "Zrg2A~", "Zrg2A~", ", additionalHeaders=", bigDecimal0, "Zrg2A~", "%f<i$7*m-ue!2Oh", "", "%f<i$7*m-ue!2Oh", "/2p73", "", "", "", "0AGF_ZFyp*,", "", "", "", false, false, (String) null, "", (LocalDate) null, (LocalDate) null, (String) null, "", hashMap0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((short) (-105), bigDecimal0.shortValue());
      assertEquals((byte) (-105), bigDecimal0.byteValue());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals(", additionalHeaders=", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("/2p73", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent();
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((short) (-105), bigDecimal0.shortValue());
      assertEquals((byte) (-105), bigDecimal0.byteValue());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals(", additionalHeaders=", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("/2p73", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-2457L));
      assertNotNull(localDate0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      Map<String, String> map0 = periodicPaymentInitiationRequestCreationQuery0.getAdditionalHeaders();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = new PeriodicPaymentInitiationRequestCreationQuery("q-.C+s:_", uUID0, "q-.C+s:_", "q-.C+s:_", (String) null, (String) null, "r'dxYt$>ec^yYT41", bigDecimal0, "", "q-.C+s:_", "cSnT&2`:", "", "", "", ", executionRule=", "r'dxYt$>ec^yYT41", (String) null, (String) null, "", "q-.C+s:_", false, true, "", "PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", localDate0, localDate0, ", currency=", ", currency=", map0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertEquals("r'dxYt$>ec^yYT41", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals(", executionRule=", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals("cSnT&2`:", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertEquals("r'dxYt$>ec^yYT41", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertEquals("r'dxYt$>ec^yYT41", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals(", executionRule=", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals("cSnT&2`:", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertEquals("r'dxYt$>ec^yYT41", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertEquals(", executionRule=", string0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      assertFalse(map0.isEmpty());
      assertEquals(28, map0.size());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("x$0jBC4|;/IrOKkPF", uUID0, "-%h8Y=Tjg", "", "", "x$0jBC4|;/IrOKkPF", "", bigDecimal0, "", "", "", "kT4wt!Q`", "", "x$0jBC4|;/IrOKkPF", "{8 XOw", "vd.V[iX *-xR+h", "", "-%h8Y=Tjg", "", "", false, false, ", remittanceInformationType=", "", localDate0, localDate0, "kT4wt!Q`", "-%h8Y=Tjg", map0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(map0.isEmpty());
      assertEquals(28, map0.size());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("x$0jBC4|;/IrOKkPF", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("-%h8Y=Tjg", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("kT4wt!Q`", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals(", remittanceInformationType=", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("x$0jBC4|;/IrOKkPF", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("-%h8Y=Tjg", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("-%h8Y=Tjg", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("vd.V[iX *-xR+h", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("x$0jBC4|;/IrOKkPF", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("kT4wt!Q`", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("{8 XOw", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(map0.isEmpty());
      assertEquals(28, map0.size());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("x$0jBC4|;/IrOKkPF", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("-%h8Y=Tjg", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("kT4wt!Q`", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals(", remittanceInformationType=", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("x$0jBC4|;/IrOKkPF", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("-%h8Y=Tjg", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("-%h8Y=Tjg", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("vd.V[iX *-xR+h", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("x$0jBC4|;/IrOKkPF", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("kT4wt!Q`", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("{8 XOw", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("x$0jBC4|;/IrOKkPF", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-2457L));
      assertNotNull(localDate0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      Map<String, String> map0 = periodicPaymentInitiationRequestCreationQuery0.getAdditionalHeaders();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = new PeriodicPaymentInitiationRequestCreationQuery("q-.C+s:_", uUID0, "q-.C+s:_", "q-.C+s:_", (String) null, (String) null, "", bigDecimal0, "", "q-.C+s:_", "cSnT&2`:", "", "", "", ", executionRule=", "", (String) null, (String) null, "", "q-.C+s:_", false, true, "", "PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", localDate0, localDate0, ", currency=", ", currency=", map0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals(", executionRule=", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("cSnT&2`:", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals(", executionRule=", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertEquals("q-.C+s:_", periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("cSnT&2`:", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertEquals("", string0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("", uUID0, "a=mit7&p?e_bN{Y?[", "a=mit7&p?e_bN{Y?[", "T#KM\"3tTSC3 So", "r(dgJ/0U3@ql@(J@ACn", "T}M=spB;2Y", bigDecimal0, "T}M=spB;2Y", "T#KM\"3tTSC3 So", "T}M=spB;2Y", "JPZ", "T#KM\"3tTSC3 So", "2M", "", "2M", "OO#6.Pudh5_)", "T}M=spB;2Y", "", "", true, true, "", "", localDate0, localDate0, "r(dgJ/0U3@ql@(J@ACn", "r(dgJ/0U3@ql@(J@ACn", map0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("T#KM\"3tTSC3 So", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("2M", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("JPZ", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("r(dgJ/0U3@ql@(J@ACn", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("r(dgJ/0U3@ql@(J@ACn", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("T}M=spB;2Y", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("T}M=spB;2Y", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("a=mit7&p?e_bN{Y?[", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("a=mit7&p?e_bN{Y?[", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("T}M=spB;2Y", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("T}M=spB;2Y", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("T#KM\"3tTSC3 So", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("T#KM\"3tTSC3 So", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("2M", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("OO#6.Pudh5_)", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("r(dgJ/0U3@ql@(J@ACn", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getConsentReference();
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("T#KM\"3tTSC3 So", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("2M", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("JPZ", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("r(dgJ/0U3@ql@(J@ACn", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("r(dgJ/0U3@ql@(J@ACn", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("T}M=spB;2Y", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("T}M=spB;2Y", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("a=mit7&p?e_bN{Y?[", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("a=mit7&p?e_bN{Y?[", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("T}M=spB;2Y", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("T}M=spB;2Y", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("T#KM\"3tTSC3 So", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("T#KM\"3tTSC3 So", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("2M", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("OO#6.Pudh5_)", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("r(dgJ/0U3@ql@(J@ACn", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("a=mit7&p?e_bN{Y?[", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      UUID uUID0 = MockUUID.fromString("xIOlFm'}?f;X");
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      LocalDate localDate0 = MockLocalDate.ofYearDay(1, 1);
      assertNotNull(localDate0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("xIOlFm'}?f;X", uUID0, "", "M%q)oht;9tV", "", "hXfai>k[<7B.", (String) null, bigDecimal0, "I'#<C,7pivj3(2", "I'#<C,7pivj3(2", "B", "M%q)oht;9tV", (String) null, "", "I'#<C,7pivj3(2", "", "B", "", (String) null, (String) null, false, false, "", "s", localDate0, localDate0, "", "", (Map<String, String>) null);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("M%q)oht;9tV", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("I'#<C,7pivj3(2", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("B", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("M%q)oht;9tV", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("B", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("hXfai>k[<7B.", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("xIOlFm'}?f;X", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("s", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("I'#<C,7pivj3(2", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("I'#<C,7pivj3(2", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getConsentReference();
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("M%q)oht;9tV", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("I'#<C,7pivj3(2", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("B", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("M%q)oht;9tV", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("B", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("hXfai>k[<7B.", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("xIOlFm'}?f;X", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("s", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("I'#<C,7pivj3(2", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("I'#<C,7pivj3(2", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      BigDecimal bigDecimal0 = periodicPaymentInitiationRequestCreationQuery0.getAmount();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      Clock clock0 = MockClock.systemUTC();
      assertNotNull(clock0);
      
      ThaiBuddhistDate thaiBuddhistDate0 = MockThaiBuddhistDate.now(clock0);
      assertNotNull(thaiBuddhistDate0);
      
      LocalDate localDate0 = MockLocalDate.from(thaiBuddhistDate0);
      assertNotNull(localDate0);
      
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery((String) null, uUID0, "S%CL](]uS.", "Hk,~S1", "S%CL](]uS.", "zpxF8@V%w5;NwE", "Hk,~S1", bigDecimal0, (String) null, "zpxF8@V%w5;NwE", "#QD", "S%CL](]uS.", "", "Lq+mBk", "PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=null, financialInstitutionId=null, consentReference=null, endToEndId=null, productType=null, remittanceInformationType=null, remittanceInformation=null, amount=null, currency=null, debtorName=null, debtorAccountReference=null, debtorAccountReferenceType=null, creditorName=null, creditorAccountReference=null, creditorAccountReferenceType=null, creditorAgent=null, creditorAgentType=null, redirectUri=null, locale=null, customerIpAddress=null, allowFinancialInstitutionRedirectUri=false, skipIbanityCompletionCallback=false, state=null, financialInstitutionCustomerReference=null, startDate=null, endDate=null, frequency=null, executionRule=null, additionalHeaders$value=null)", (String) null, "", "Lq+mBk", "", "#QD", true, true, "", "w>2{Fzny4'X\"3", localDate0, localDate0, "", (String) null, map0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("#QD", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("#QD", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("zpxF8@V%w5;NwE", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("Hk,~S1", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("w>2{Fzny4'X\"3", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("S%CL](]uS.", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("S%CL](]uS.", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("Hk,~S1", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("zpxF8@V%w5;NwE", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("S%CL](]uS.", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("Lq+mBk", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=null, financialInstitutionId=null, consentReference=null, endToEndId=null, productType=null, remittanceInformationType=null, remittanceInformation=null, amount=null, currency=null, debtorName=null, debtorAccountReference=null, debtorAccountReferenceType=null, creditorName=null, creditorAccountReference=null, creditorAccountReferenceType=null, creditorAgent=null, creditorAgentType=null, redirectUri=null, locale=null, customerIpAddress=null, allowFinancialInstitutionRedirectUri=false, skipIbanityCompletionCallback=false, state=null, financialInstitutionCustomerReference=null, startDate=null, endDate=null, frequency=null, executionRule=null, additionalHeaders$value=null)", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("Lq+mBk", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      BigDecimal bigDecimal1 = periodicPaymentInitiationRequestCreationQuery0.getAmount();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("#QD", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("#QD", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("zpxF8@V%w5;NwE", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("Hk,~S1", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("w>2{Fzny4'X\"3", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("S%CL](]uS.", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("S%CL](]uS.", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("Hk,~S1", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("zpxF8@V%w5;NwE", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("S%CL](]uS.", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("Lq+mBk", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=null, financialInstitutionId=null, consentReference=null, endToEndId=null, productType=null, remittanceInformationType=null, remittanceInformation=null, amount=null, currency=null, debtorName=null, debtorAccountReference=null, debtorAccountReferenceType=null, creditorName=null, creditorAccountReference=null, creditorAccountReferenceType=null, creditorAgent=null, creditorAgentType=null, redirectUri=null, locale=null, customerIpAddress=null, allowFinancialInstitutionRedirectUri=false, skipIbanityCompletionCallback=false, state=null, financialInstitutionCustomerReference=null, startDate=null, endDate=null, frequency=null, executionRule=null, additionalHeaders$value=null)", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("Lq+mBk", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertNotNull(bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("[\"DS~-`uLS_Nro_iG<D");
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = new BigDecimal(651);
      assertEquals((byte) (-117), bigDecimal0.byteValue());
      assertEquals((short)651, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      assertFalse(map0.isEmpty());
      assertEquals(28, map0.size());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", uUID0, "", "[\"DS~-`uLS_Nro_iG<D", "PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", "", "[\"DS~-`uLS_Nro_iG<D", bigDecimal0, "PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", "", "", "PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", "yMLB{mMu@{U4)yXzNw", ", frequency=", "yw-[(u;J8T8>]&4WJ", "", ", frequency=", "AUb-a#VorNa{<?@@*", "k]r=I$$GP[i", "", false, false, "", (String) null, (LocalDate) null, (LocalDate) null, ", creditorAccountReferenceType=", "", map0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((byte) (-117), bigDecimal0.byteValue());
      assertEquals((short)651, bigDecimal0.shortValue());
      assertFalse(map0.isEmpty());
      assertEquals(28, map0.size());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals(", frequency=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("k]r=I$$GP[i", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals(", creditorAccountReferenceType=", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("yw-[(u;J8T8>]&4WJ", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals(", frequency=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("[\"DS~-`uLS_Nro_iG<D", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("yMLB{mMu@{U4)yXzNw", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("AUb-a#VorNa{<?@@*", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("[\"DS~-`uLS_Nro_iG<D", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      BigDecimal bigDecimal1 = periodicPaymentInitiationRequestCreationQuery0.getAmount();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((byte) (-117), bigDecimal0.byteValue());
      assertEquals((short)651, bigDecimal0.shortValue());
      assertFalse(map0.isEmpty());
      assertEquals(28, map0.size());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals(", frequency=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("k]r=I$$GP[i", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals(", creditorAccountReferenceType=", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("yw-[(u;J8T8>]&4WJ", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals(", frequency=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("[\"DS~-`uLS_Nro_iG<D", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("yMLB{mMu@{U4)yXzNw", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("AUb-a#VorNa{<?@@*", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("[\"DS~-`uLS_Nro_iG<D", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals((short)651, bigDecimal1.shortValue());
      assertEquals((byte) (-117), bigDecimal1.byteValue());
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertNotNull(bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.additionalHeaders((Map<String, String>) null);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      Map<String, String> map0 = periodicPaymentInitiationRequestCreationQuery0.getAdditionalHeaders();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = new BigDecimal((-85.5411));
      assertEquals((byte) (-85), bigDecimal0.byteValue());
      assertEquals((short) (-85), bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery(", remittanceInformationType=", uUID0, ", remittanceInformationType=", ", additionalHeaders$value=", ", remittanceInformationType=", "", ", remittanceInformationType=", bigDecimal0, "CP:OS1", "", "", "CP:OS1", "CP:OS1", "hzZy", "", "X:4|1yn1", "", "0)hqg/x'2 ", "", ", additionalHeaders$value=", false, true, ", additionalHeaders$value=", ", additionalHeaders$value=", localDate0, localDate0, "", "Sjr{", hashMap0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((byte) (-85), bigDecimal0.byteValue());
      assertEquals((short) (-85), bigDecimal0.shortValue());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("X:4|1yn1", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals(", remittanceInformationType=", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("Sjr{", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals(", additionalHeaders$value=", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("CP:OS1", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(", additionalHeaders$value=", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("CP:OS1", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals(", additionalHeaders$value=", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals(", additionalHeaders$value=", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals(", remittanceInformationType=", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals(", remittanceInformationType=", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("CP:OS1", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("hzZy", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("0)hqg/x'2 ", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals(", remittanceInformationType=", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      Map<String, String> map0 = periodicPaymentInitiationRequestCreationQuery0.getAdditionalHeaders();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((byte) (-85), bigDecimal0.byteValue());
      assertEquals((short) (-85), bigDecimal0.shortValue());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("X:4|1yn1", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals(", remittanceInformationType=", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("Sjr{", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals(", additionalHeaders$value=", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("CP:OS1", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(", additionalHeaders$value=", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("CP:OS1", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals(", additionalHeaders$value=", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals(", additionalHeaders$value=", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals(", remittanceInformationType=", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals(", remittanceInformationType=", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("CP:OS1", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("hzZy", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("0)hqg/x'2 ", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals(", remittanceInformationType=", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1L);
      assertNotNull(localDate0);
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      String string0 = hashMap0.put((String) null, "");
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertNull(string0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("", uUID0, "", (String) null, "-d", ", executionRule=", "", (BigDecimal) null, "", "n4O7", "", ", locale=", ", locale=", "E", "", ";9F", (String) null, "o&", "|N&ayT", "E", true, true, ").7XLfTT[VbPn", "*71Q7#A`m|^iN%L_b", localDate0, localDate0, ", locale=", "o&", hashMap0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(", executionRule=", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals(", locale=", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("E", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals(").7XLfTT[VbPn", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals(";9F", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("|N&ayT", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("n4O7", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("o&", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals(", locale=", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("*71Q7#A`m|^iN%L_b", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("E", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals(", locale=", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("o&", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("-d", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      Map<String, String> map0 = periodicPaymentInitiationRequestCreationQuery0.getAdditionalHeaders();
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(", executionRule=", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals(", locale=", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("E", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals(").7XLfTT[VbPn", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals(";9F", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("|N&ayT", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("n4O7", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("o&", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals(", locale=", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("*71Q7#A`m|^iN%L_b", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("E", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals(", locale=", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("o&", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("-d", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals(1, map0.size());
      assertFalse(map0.isEmpty());
      assertNotNull(map0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getEndToEndId();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      UUID uUID0 = periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionId();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getProductType();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      LocalDate localDate0 = periodicPaymentInitiationRequestCreationQuery0.getEndDate();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      UUID uUID0 = MockUUID.fromString("m7+l)~5F[]");
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery(", redirectUri=", uUID0, ", debtorName=", "m7+l)~5F[]", "m7+l)~5F[]", "", (String) null, bigDecimal0, "", "", "", (String) null, ", productType=", ", creditorAgentType=", ", creditorAgentType=", ", creditorAgentType=", "", "i%xLcT$", "i%xLcT$", (String) null, true, false, ", debtorName=", ", redirectUri=", localDate0, localDate0, ", debtorName=", "c]i+2j", map0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("m7+l)~5F[]", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals(", debtorName=", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals(", redirectUri=", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals(", redirectUri=", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("i%xLcT$", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals(", productType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(", creditorAgentType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals(", debtorName=", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals(", debtorName=", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("i%xLcT$", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals(", creditorAgentType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("m7+l)~5F[]", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals(", creditorAgentType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("c]i+2j", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getFrequency();
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("m7+l)~5F[]", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals(", debtorName=", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals(", redirectUri=", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals(", redirectUri=", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("i%xLcT$", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals(", productType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals(", creditorAgentType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals(", debtorName=", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals(", debtorName=", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("i%xLcT$", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals(", creditorAgentType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("m7+l)~5F[]", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals(", creditorAgentType=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("c]i+2j", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals(", debtorName=", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getRedirectUri();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString(")c{2D");
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("", uUID0, "", (String) null, ")c{2D", "com.ibanity.apis.client.products.xs2a.models.create.PeriodicPaymentInitiationRequestCreationQuery$PeriodicPaymentInitiationRequestCreationQueryBuilder", "com.ibanity.apis.client.products.xs2a.models.create.PeriodicPaymentInitiationRequestCreationQuery$PeriodicPaymentInitiationRequestCreationQueryBuilder", bigDecimal0, "PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", ", currency=", "", (String) null, "*4yI@Vc|ofj)ki", "*4yI@Vc|ofj)ki", ")c{2D", "PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", "", "PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", "*4yI@Vc|ofj)ki", "O", true, true, "/2GQ/)lCnI%pso{[", ")c{2D", (LocalDate) null, (LocalDate) null, "", "/2GQ/)lCnI%pso{[", hashMap0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.create.PeriodicPaymentInitiationRequestCreationQuery$PeriodicPaymentInitiationRequestCreationQueryBuilder", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("O", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("*4yI@Vc|ofj)ki", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals(")c{2D", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("/2GQ/)lCnI%pso{[", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("*4yI@Vc|ofj)ki", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("/2GQ/)lCnI%pso{[", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals(")c{2D", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.create.PeriodicPaymentInitiationRequestCreationQuery$PeriodicPaymentInitiationRequestCreationQueryBuilder", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals(")c{2D", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("*4yI@Vc|ofj)ki", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getLocale();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.create.PeriodicPaymentInitiationRequestCreationQuery$PeriodicPaymentInitiationRequestCreationQueryBuilder", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("O", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("*4yI@Vc|ofj)ki", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals(")c{2D", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("/2GQ/)lCnI%pso{[", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals(", currency=", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("*4yI@Vc|ofj)ki", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("/2GQ/)lCnI%pso{[", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals(")c{2D", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("com.ibanity.apis.client.products.xs2a.models.create.PeriodicPaymentInitiationRequestCreationQuery$PeriodicPaymentInitiationRequestCreationQueryBuilder", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals(")c{2D", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("*4yI@Vc|ofj)ki", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("*4yI@Vc|ofj)ki", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getState();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      LocalDate localDate0 = periodicPaymentInitiationRequestCreationQuery0.getStartDate();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = new BigDecimal((-390));
      assertEquals((byte)122, bigDecimal0.byteValue());
      assertEquals((short) (-390), bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("cHba*", uUID0, "cHba*", "cHba*", "cHba*", "cHba*", "cHba*", bigDecimal0, "cHba*", "", "Hln?+`d", "6v78q5G6Vq!^Jel", "5gxAYC", "6v78q5G6Vq!^Jel", "", ", financialInstitutionId=", "", "", (String) null, ">;{Dvo0x[", false, false, "", ", financialInstitutionId=", localDate0, localDate0, "", "cHba*", hashMap0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((byte)122, bigDecimal0.byteValue());
      assertEquals((short) (-390), bigDecimal0.shortValue());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("5gxAYC", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals(">;{Dvo0x[", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals(", financialInstitutionId=", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("Hln?+`d", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("6v78q5G6Vq!^Jel", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("6v78q5G6Vq!^Jel", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals(", financialInstitutionId=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCreditorName();
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((byte)122, bigDecimal0.byteValue());
      assertEquals((short) (-390), bigDecimal0.shortValue());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("5gxAYC", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals(">;{Dvo0x[", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals(", financialInstitutionId=", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("Hln?+`d", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("6v78q5G6Vq!^Jel", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("6v78q5G6Vq!^Jel", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals(", financialInstitutionId=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("cHba*", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("5gxAYC", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = new BigDecimal((-2461));
      assertEquals((short) (-2461), bigDecimal0.shortValue());
      assertEquals((byte)99, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      Period period0 = Period.ZERO;
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      ZoneId zoneId0 = ZoneId.systemDefault();
      assertNotNull(zoneId0);
      
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, zoneId0);
      assertNotNull(localDate0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("/tT\"-{jgF5&T,cx", uUID0, "/tT\"-{jgF5&T,cx", "/tT\"-{jgF5&T,cx", "", "", ", financialInstitutionId=", bigDecimal0, "/tT\"-{jgF5&T,cx", "", "GrC5Wc:_b]vv6L/H]el", ", financialInstitutionId=", ", financialInstitutionId=", "nAKN8=t}q,s10", "/tT\"-{jgF5&T,cx", "", "nAKN8=t}q,s10", "GrC5Wc:_b]vv6L/H]el", (String) null, "GrC5Wc:_b]vv6L/H]el", false, false, "fUtN\f3*AGZ0>!:epH", ", financialInstitutionId=", localDate0, localDate0, "", "GrC5Wc:_b]vv6L/H]el", (Map<String, String>) null);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals((short) (-2461), bigDecimal0.shortValue());
      assertEquals((byte)99, bigDecimal0.byteValue());
      assertEquals(", financialInstitutionId=", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("/tT\"-{jgF5&T,cx", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("nAKN8=t}q,s10", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals(", financialInstitutionId=", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("GrC5Wc:_b]vv6L/H]el", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("/tT\"-{jgF5&T,cx", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals(", financialInstitutionId=", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("fUtN\f3*AGZ0>!:epH", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("/tT\"-{jgF5&T,cx", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("nAKN8=t}q,s10", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("/tT\"-{jgF5&T,cx", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("GrC5Wc:_b]vv6L/H]el", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals(", financialInstitutionId=", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("GrC5Wc:_b]vv6L/H]el", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("/tT\"-{jgF5&T,cx", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("GrC5Wc:_b]vv6L/H]el", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      BigDecimal bigDecimal1 = periodicPaymentInitiationRequestCreationQuery0.getAmount();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals((short) (-2461), bigDecimal0.shortValue());
      assertEquals((byte)99, bigDecimal0.byteValue());
      assertEquals(", financialInstitutionId=", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("/tT\"-{jgF5&T,cx", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("nAKN8=t}q,s10", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals(", financialInstitutionId=", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("GrC5Wc:_b]vv6L/H]el", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("/tT\"-{jgF5&T,cx", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals(", financialInstitutionId=", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("fUtN\f3*AGZ0>!:epH", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("/tT\"-{jgF5&T,cx", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("nAKN8=t}q,s10", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("/tT\"-{jgF5&T,cx", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("GrC5Wc:_b]vv6L/H]el", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals(", financialInstitutionId=", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("GrC5Wc:_b]vv6L/H]el", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("/tT\"-{jgF5&T,cx", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("GrC5Wc:_b]vv6L/H]el", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals((byte)99, bigDecimal1.byteValue());
      assertEquals((short) (-2461), bigDecimal1.shortValue());
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertNotNull(bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = new BigDecimal((-105));
      assertEquals((byte) (-105), bigDecimal0.byteValue());
      assertEquals((short) (-105), bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("0AGF_ZFyp*,", uUID0, "", "0AGF_ZFyp*,", "Zrg2A~", "Zrg2A~", ", additionalHeaders=", bigDecimal0, "Zrg2A~", "%f<i$7*m-ue!2Oh", "", "%f<i$7*m-ue!2Oh", "/2p73", "", "", "", "0AGF_ZFyp*,", "", "", "", false, false, (String) null, "", (LocalDate) null, (LocalDate) null, (String) null, "", hashMap0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals((byte) (-105), bigDecimal0.byteValue());
      assertEquals((short) (-105), bigDecimal0.shortValue());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals(", additionalHeaders=", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("/2p73", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getDebtorName();
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals((byte) (-105), bigDecimal0.byteValue());
      assertEquals((short) (-105), bigDecimal0.shortValue());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("%f<i$7*m-ue!2Oh", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("0AGF_ZFyp*,", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals(", additionalHeaders=", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("Zrg2A~", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("/2p73", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("%f<i$7*m-ue!2Oh", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCurrency();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertNotNull(uUID0);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("", uUID0, "", "", "xG*7", "", "", bigDecimal0, "", "E^jo)kH^V'^[!}(]Ff", "", "", ", creditorAccountReference=", "wE12eq0(?As#t", "", "", ", creditorAccountReference=", "E^jo)kH^V'^[!}(]Ff", ", creditorAccountReference=", "E^jo)kH^V'^[!}(]Ff", true, false, ", creditorAccountReference=", "", localDate0, localDate0, "^~8P@{X", "", map0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("E^jo)kH^V'^[!}(]Ff", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("xG*7", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals(", creditorAccountReference=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("E^jo)kH^V'^[!}(]Ff", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals(", creditorAccountReference=", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("^~8P@{X", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals(", creditorAccountReference=", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("wE12eq0(?As#t", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("E^jo)kH^V'^[!}(]Ff", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals(", creditorAccountReference=", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType();
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("E^jo)kH^V'^[!}(]Ff", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("xG*7", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals(", creditorAccountReference=", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertEquals("E^jo)kH^V'^[!}(]Ff", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals(", creditorAccountReference=", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("^~8P@{X", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals(", creditorAccountReference=", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("wE12eq0(?As#t", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("E^jo)kH^V'^[!}(]Ff", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals(", creditorAccountReference=", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getExecutionRule();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getConsentReference();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertNotNull(map0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.additionalHeaders(map0);
      assertEquals(28, map0.size());
      assertFalse(map0.isEmpty());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.additionalHeaders((Map<String, String>) null);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2));
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.executionRule(", locale=");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals(", locale=", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals(", locale=", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.executionRule("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=null, financialInstitutionId=null, consentReference=null, endToEndId=null, productType=null, remittanceInformationType=null, remittanceInformation=null, amount=null, currency=null, debtorName=null, debtorAccountReference=null, debtorAccountReferenceType=null, creditorName=null, creditorAccountReference=null, creditorAccountReferenceType=null, creditorAgent=null, creditorAgentType=null, redirectUri=null, locale=null, customerIpAddress=null, allowFinancialInstitutionRedirectUri=false, skipIbanityCompletionCallback=false, state=null, financialInstitutionCustomerReference=null, startDate=null, endDate=null, frequency=null, executionRule=null, additionalHeaders$value=null)");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=null, financialInstitutionId=null, consentReference=null, endToEndId=null, productType=null, remittanceInformationType=null, remittanceInformation=null, amount=null, currency=null, debtorName=null, debtorAccountReference=null, debtorAccountReferenceType=null, creditorName=null, creditorAccountReference=null, creditorAccountReferenceType=null, creditorAgent=null, creditorAgentType=null, redirectUri=null, locale=null, customerIpAddress=null, allowFinancialInstitutionRedirectUri=false, skipIbanityCompletionCallback=false, state=null, financialInstitutionCustomerReference=null, startDate=null, endDate=null, frequency=null, executionRule=null, additionalHeaders$value=null)", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=null, financialInstitutionId=null, consentReference=null, endToEndId=null, productType=null, remittanceInformationType=null, remittanceInformation=null, amount=null, currency=null, debtorName=null, debtorAccountReference=null, debtorAccountReferenceType=null, creditorName=null, creditorAccountReference=null, creditorAccountReferenceType=null, creditorAgent=null, creditorAgentType=null, redirectUri=null, locale=null, customerIpAddress=null, allowFinancialInstitutionRedirectUri=false, skipIbanityCompletionCallback=false, state=null, financialInstitutionCustomerReference=null, startDate=null, endDate=null, frequency=null, executionRule=null, additionalHeaders$value=null)", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.frequency("f(`%SwnC ");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("f(`%SwnC ", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("f(`%SwnC ", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.frequency(", additionalHeaders=");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals(", additionalHeaders=", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals(", additionalHeaders=", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.frequency("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(boolean0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.endDate(localDate0);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2));
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      assertNotNull(localDate0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.endDate(localDate0);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.endDate(localDate0);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(boolean0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.startDate(localDate0);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      LocalDate localDate0 = MockLocalDate.ofYearDay(43, 43);
      assertNotNull(localDate0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.startDate(localDate0);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.financialInstitutionCustomerReference("}");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("}", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals("}", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.financialInstitutionCustomerReference("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.state("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.state("{n`RI[ri=>JSh\"*q!}");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals("{n`RI[ri=>JSh\"*q!}", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals("{n`RI[ri=>JSh\"*q!}", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.customerIpAddress("bw4`joeu>$&");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals("bw4`joeu>$&", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals("bw4`joeu>$&", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.customerIpAddress("[xG+<6Z");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals("[xG+<6Z", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals("[xG+<6Z", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.locale(", additionalHeaders$value=");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals(", additionalHeaders$value=", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals(", additionalHeaders$value=", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.locale("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.redirectUri("R/9cg");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertEquals("R/9cg", periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertEquals("R/9cg", periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.redirectUri("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorAgentType("sZWpm[oPWIp");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals("sZWpm[oPWIp", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals("sZWpm[oPWIp", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorAgentType("gF+zP#qzeMF$.");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("gF+zP#qzeMF$.", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("gF+zP#qzeMF$.", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2));
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorAgentType("Kc");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("Kc", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertEquals("Kc", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("Kc", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertEquals("Kc", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(boolean0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorAgent("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2));
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder2.equals((Object)periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorAgent("F");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertEquals("F", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertEquals("F", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorAgent("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(boolean0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorAccountReferenceType("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorAccountReferenceType(", state=");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals(", state=", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals(", state=", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorAccountReferenceType("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(boolean0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorAccountReference("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorAccountReference("E(ho)A=_Qf:Qg6{");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertEquals("E(ho)A=_Qf:Qg6{", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertEquals("E(ho)A=_Qf:Qg6{", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorAccountReference("1>~");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("1>~", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals("1>~", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("1>~", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals("1>~", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(boolean0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorName("?s<Q");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(boolean0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorName("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.creditorName("?s<Q");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.debtorAccountReferenceType("n/`uO;$9Buy");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertEquals("n/`uO;$9Buy", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertEquals("n/`uO;$9Buy", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.debtorAccountReferenceType("U");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertEquals("U", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertEquals("U", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.debtorAccountReference("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.debtorAccountReference("OugN1K4l[$ctqyC7");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals("OugN1K4l[$ctqyC7", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals("OugN1K4l[$ctqyC7", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.debtorAccountReference("?s<Q");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(boolean0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.debtorName("?s<Q");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(boolean0);
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.debtorName("?s<Q");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.debtorName("?s<Q");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.currency("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNotNull(periodicPaymentInitiationRequestCreationQuery0);
      
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.currency("");
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0);
      assertNotNull(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertNotNull(periodicPaymentInitiationRequestCreationQuery1);
      
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery0.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformationType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getState());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getLocale());
      assertNull(periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertSame(periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0, periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery0, periodicPaymentInitiationRequestCreationQuery1);
      assertNotSame(periodicPaymentInitiationRequestCreationQuery1, periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.equals((Object)periodicPaymentInitiationRequestCreationQuery1));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.amount(bigDecimal0);
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.amount(bigDecimal0);
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.remittanceInformation("}");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.remittanceInformation("");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.remittanceInformationType("Z%7`R#]d9h_j");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.remittanceInformationType("");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.productType(".(QG/0");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.productType("in&,>>;ORqK0k;");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.productType("1SB?YX)");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.endToEndId("Vp");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.endToEndId("");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.consentReference("");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.consentReference("F{pG%<G1Im:k'=y*4z");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.equals((Object)periodicPaymentInitiationRequestCreationQuery0));
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.consentReference("Ne0qZrFY\"\"Wwe09");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.financialInstitutionId(uUID0);
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.financialInstitutionId(uUID0);
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.customerAccessToken("");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.customerAccessToken("");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertFalse(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.skipIbanityCompletionCallback(true);
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      Map<String, String> map0 = periodicPaymentInitiationRequestCreationQuery0.getAdditionalHeaders();
      UUID uUID0 = MockUUID.fromString(", currency=");
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = new PeriodicPaymentInitiationRequestCreationQuery("d?%s03Pk=g", uUID0, "Xo+AEpsj]h[K", "", "?s<Q", (String) null, "d?%s03Pk=g", bigDecimal0, "Xo+AEpsj]h[K", "d?%s03Pk=g", "?s<Q", "8fg*FW55y[`cInzc_", "", "", "", "E)I't~y%m#[CB>", "", ", creditorAgent=", (String) null, ", creditorAgent=", true, true, "E)I't~y%m#[CB>", ", skipIbanityCompletionCallback=", (LocalDate) null, (LocalDate) null, "E)I't~y%m#[CB>", "", map0);
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertEquals("d?%s03Pk=g", periodicPaymentInitiationRequestCreationQuery1.getCustomerAccessToken());
      assertEquals("Xo+AEpsj]h[K", periodicPaymentInitiationRequestCreationQuery1.getCurrency());
      assertEquals("E)I't~y%m#[CB>", periodicPaymentInitiationRequestCreationQuery1.getState());
      assertEquals("8fg*FW55y[`cInzc_", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReferenceType());
      assertEquals(", skipIbanityCompletionCallback=", periodicPaymentInitiationRequestCreationQuery1.getFinancialInstitutionCustomerReference());
      assertEquals(", creditorAgent=", periodicPaymentInitiationRequestCreationQuery1.getRedirectUri());
      assertEquals("E)I't~y%m#[CB>", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgent());
      assertEquals("d?%s03Pk=g", periodicPaymentInitiationRequestCreationQuery1.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAgentType());
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery1.getDebtorAccountReference());
      assertEquals("d?%s03Pk=g", periodicPaymentInitiationRequestCreationQuery1.getRemittanceInformation());
      assertFalse(boolean0);
      assertEquals("?s<Q", periodicPaymentInitiationRequestCreationQuery1.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReference());
      assertTrue(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertEquals("Xo+AEpsj]h[K", periodicPaymentInitiationRequestCreationQuery1.getConsentReference());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorName());
      assertEquals("E)I't~y%m#[CB>", periodicPaymentInitiationRequestCreationQuery1.getFrequency());
      assertEquals(", creditorAgent=", periodicPaymentInitiationRequestCreationQuery1.getCustomerIpAddress());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getCreditorAccountReferenceType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getExecutionRule());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery1.getEndToEndId());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      Object object0 = new Object();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(object0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      LocalDate localDate0 = MockLocalDate.now();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.endDate(localDate0);
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery0.hashCode();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.startDate(localDate0);
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.financialInstitutionCustomerReference("q6JyQA1E");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("q7v ;");
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = new PeriodicPaymentInitiationRequestCreationQuery("PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", uUID0, "q7v ;", ", remittanceInformationType=", "9fq:V.*M$$0b9m8r", "1", "PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", bigDecimal0, "8", ">76F_QJGZKN|S\"\"_\"", "T3\")!$}PFKbcjsOV`#d", "", "8", "%B?A! 5D$x)l@}jd/E&", "fPvY[yrlp]l+~dj|G", "T3\")!$}PFKbcjsOV`#d", ">76F_QJGZKN|S\"\"_\"", "8", "8", "", false, false, "fPvY[yrlp]l+~dj|G", (String) null, (LocalDate) null, (LocalDate) null, "T3\")!$}PFKbcjsOV`#d", "", (Map<String, String>) null);
      periodicPaymentInitiationRequestCreationQuery0.hashCode();
      assertEquals(">76F_QJGZKN|S\"\"_\"", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgentType());
      assertEquals(">76F_QJGZKN|S\"\"_\"", periodicPaymentInitiationRequestCreationQuery0.getDebtorName());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getExecutionRule());
      assertEquals("%B?A! 5D$x)l@}jd/E&", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReference());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformation());
      assertEquals("q7v ;", periodicPaymentInitiationRequestCreationQuery0.getConsentReference());
      assertEquals("T3\")!$}PFKbcjsOV`#d", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference());
      assertEquals("T3\")!$}PFKbcjsOV`#d", periodicPaymentInitiationRequestCreationQuery0.getFrequency());
      assertEquals("8", periodicPaymentInitiationRequestCreationQuery0.getCreditorName());
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=", periodicPaymentInitiationRequestCreationQuery0.getCustomerAccessToken());
      assertEquals("9fq:V.*M$$0b9m8r", periodicPaymentInitiationRequestCreationQuery0.getProductType());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getCustomerIpAddress());
      assertEquals("fPvY[yrlp]l+~dj|G", periodicPaymentInitiationRequestCreationQuery0.getCreditorAccountReferenceType());
      assertEquals("8", periodicPaymentInitiationRequestCreationQuery0.getCurrency());
      assertEquals("fPvY[yrlp]l+~dj|G", periodicPaymentInitiationRequestCreationQuery0.getState());
      assertEquals("T3\")!$}PFKbcjsOV`#d", periodicPaymentInitiationRequestCreationQuery0.getCreditorAgent());
      assertEquals("8", periodicPaymentInitiationRequestCreationQuery0.getLocale());
      assertEquals("", periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReferenceType());
      assertEquals("1", periodicPaymentInitiationRequestCreationQuery0.getRemittanceInformationType());
      assertEquals(", remittanceInformationType=", periodicPaymentInitiationRequestCreationQuery0.getEndToEndId());
      assertEquals("8", periodicPaymentInitiationRequestCreationQuery0.getRedirectUri());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.allowFinancialInstitutionRedirectUri(true);
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      periodicPaymentInitiationRequestCreationQuery0.hashCode();
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      String string0 = periodicPaymentInitiationRequestCreationQuery0.toString();
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery(customerAccessToken=null, financialInstitutionId=null, consentReference=null, endToEndId=null, productType=null, remittanceInformationType=null, remittanceInformation=null, amount=null, currency=null, debtorName=null, debtorAccountReference=null, debtorAccountReferenceType=null, creditorName=null, creditorAccountReference=null, creditorAccountReferenceType=null, creditorAgent=null, creditorAgentType=null, redirectUri=null, locale=null, customerIpAddress=null, allowFinancialInstitutionRedirectUri=false, skipIbanityCompletionCallback=false, state=null, financialInstitutionCustomerReference=null, startDate=null, endDate=null, frequency=null, executionRule=null, additionalHeaders={})", string0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.executionRule("QLk9=j$fQ&]");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertTrue(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.additionalHeaders((Map<String, String>) null);
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.amount(bigDecimal0);
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      LocalDate localDate0 = MockLocalDate.now();
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.startDate(localDate0);
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.financialInstitutionCustomerReference("");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.remittanceInformationType("nwvNK");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertTrue(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.locale("#SYvF");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertTrue(boolean0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.customerAccessToken(", debtorAccountReference=");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.endToEndId("");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      UUID uUID0 = MockUUID.randomUUID();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.financialInstitutionId(uUID0);
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.customerIpAddress("");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isSkipIbanityCompletionCallback());
      assertFalse(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      String string0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.toString();
      assertEquals("PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder(customerAccessToken=null, financialInstitutionId=null, consentReference=null, endToEndId=null, productType=null, remittanceInformationType=null, remittanceInformation=null, amount=null, currency=null, debtorName=null, debtorAccountReference=null, debtorAccountReferenceType=null, creditorName=null, creditorAccountReference=null, creditorAccountReferenceType=null, creditorAgent=null, creditorAgentType=null, redirectUri=null, locale=null, customerIpAddress=null, allowFinancialInstitutionRedirectUri=false, skipIbanityCompletionCallback=false, state=null, financialInstitutionCustomerReference=null, startDate=null, endDate=null, frequency=null, executionRule=null, additionalHeaders$value=null)", string0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.remittanceInformation("qu$[r$I");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.currency("");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder1.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.debtorAccountReferenceType("#SYvF");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery0.equals(periodicPaymentInitiationRequestCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = new PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.state("Oh&(14Yxx9");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertFalse(periodicPaymentInitiationRequestCreationQuery1.isAllowFinancialInstitutionRedirectUri());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.redirectUri("");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery1 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      boolean boolean0 = periodicPaymentInitiationRequestCreationQuery1.equals(periodicPaymentInitiationRequestCreationQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.debtorAccountReference("");
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      String string0 = periodicPaymentInitiationRequestCreationQuery0.getDebtorAccountReference();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      PeriodicPaymentInitiationRequestCreationQuery.PeriodicPaymentInitiationRequestCreationQueryBuilder periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0 = PeriodicPaymentInitiationRequestCreationQuery.builder();
      periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.skipIbanityCompletionCallback(true);
      PeriodicPaymentInitiationRequestCreationQuery periodicPaymentInitiationRequestCreationQuery0 = periodicPaymentInitiationRequestCreationQuery_PeriodicPaymentInitiationRequestCreationQueryBuilder0.build();
      periodicPaymentInitiationRequestCreationQuery0.hashCode();
      assertTrue(periodicPaymentInitiationRequestCreationQuery0.isSkipIbanityCompletionCallback());
  }
}
