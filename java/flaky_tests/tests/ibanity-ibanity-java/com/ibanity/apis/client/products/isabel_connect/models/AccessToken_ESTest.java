/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 11:22:12 GMT 2022
 */

package com.ibanity.apis.client.products.isabel_connect.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibanity.apis.client.products.isabel_connect.models.AccessToken;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccessToken_ESTest extends AccessToken_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccessToken accessToken0 = new AccessToken();
      accessToken0.setAccessToken("com.ibanity.apis.client.products.isabel_connect.models.AccessToken$AccessTokenBuilderImpl");
      String string0 = accessToken0.getAccessToken();
      assertEquals("com.ibanity.apis.client.products.isabel_connect.models.AccessToken$AccessTokenBuilderImpl", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AccessToken accessToken0 = new AccessToken();
      accessToken0.setAccessToken("");
      String string0 = accessToken0.getAccessToken();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AccessToken accessToken0 = new AccessToken();
      boolean boolean0 = accessToken0.canEqual((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AccessToken accessToken0 = null;
      try {
        accessToken0 = new AccessToken((AccessToken.AccessTokenBuilder<?, ?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibanity.apis.client.products.isabel_connect.models.Token$TokenBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AccessToken accessToken0 = new AccessToken();
      String string0 = accessToken0.getAccessToken();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AccessToken accessToken0 = new AccessToken();
      accessToken0.setAccessToken("");
      AccessToken.AccessTokenBuilder<?, ?> accessToken_AccessTokenBuilder0 = accessToken0.toBuilder();
      AccessToken accessToken1 = new AccessToken(accessToken_AccessTokenBuilder0);
      boolean boolean0 = accessToken0.equals(accessToken1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AccessToken accessToken0 = new AccessToken();
      AccessToken accessToken1 = new AccessToken();
      assertTrue(accessToken1.equals((Object)accessToken0));
      
      accessToken1.setExpiresIn(49);
      boolean boolean0 = accessToken0.equals(accessToken1);
      assertFalse(accessToken1.equals((Object)accessToken0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AccessToken accessToken0 = new AccessToken();
      Object object0 = new Object();
      boolean boolean0 = accessToken0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AccessToken accessToken0 = new AccessToken();
      boolean boolean0 = accessToken0.equals(accessToken0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AccessToken accessToken0 = new AccessToken();
      AccessToken accessToken1 = new AccessToken();
      boolean boolean0 = accessToken0.equals(accessToken1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccessToken accessToken0 = new AccessToken();
      accessToken0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AccessToken accessToken0 = new AccessToken();
      accessToken0.setAccessToken("AFs3 ~V)L#l>o#L-");
      accessToken0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AccessToken accessToken0 = new AccessToken();
      String string0 = accessToken0.toString();
      assertEquals("AccessToken(super=Token(accessToken=null, refreshToken=null, tokenType=null, expiresIn=0, refreshExpiresIn=0, scope=null), accessToken=null)", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccessToken accessToken0 = new AccessToken();
      boolean boolean0 = accessToken0.canEqual(accessToken0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AccessToken.AccessTokenBuilder<?, ?> accessToken_AccessTokenBuilder0 = AccessToken.builder();
      AccessToken accessToken0 = new AccessToken(accessToken_AccessTokenBuilder0);
      assertNull(accessToken0.getRefreshToken());
  }
}
