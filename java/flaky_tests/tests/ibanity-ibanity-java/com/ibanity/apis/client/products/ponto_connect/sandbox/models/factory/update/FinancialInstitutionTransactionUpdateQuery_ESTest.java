/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:27:32 GMT 2022
 */

package com.ibanity.apis.client.products.ponto_connect.sandbox.models.factory.update;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.ponto_connect.sandbox.models.factory.update.FinancialInstitutionTransactionUpdateQuery;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FinancialInstitutionTransactionUpdateQuery_ESTest extends FinancialInstitutionTransactionUpdateQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.counterpartName("r");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("r", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      
      financialInstitutionTransactionUpdateQuery0.hashCode();
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("r", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.financialInstitutionTransactionId(uUID0);
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      
      financialInstitutionTransactionUpdateQuery0.hashCode();
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.financialInstitutionAccountId(uUID0);
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      
      financialInstitutionTransactionUpdateQuery0.hashCode();
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getRemittanceInformation();
      assertNull(string0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("", uUID0, uUID0, uUID0, "]ug7C@IH}", "", "", ", description=", "]ug7C@IH}", "O*\"wPatM<IAI", "ewd`{AWHdT$.z_z*z,", "", "", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("ewd`{AWHdT$.z_z*z,", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("O*\"wPatM<IAI", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("]ug7C@IH}", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals(", description=", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("]ug7C@IH}", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getRemittanceInformation();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("ewd`{AWHdT$.z_z*z,", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("O*\"wPatM<IAI", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("]ug7C@IH}", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals(", description=", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("]ug7C@IH}", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("", uUID0, uUID0, uUID0, "", ":!d],&&JI8[W", "P<k>V4", "_!nGW'ZZ#pK_c@43MS", "", ", remittanceInformation=", ", remittanceInformation=", ":!d],&&JI8[W", "P<k>V4", "5~]p/h@BfWpCxa");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("5~]p/h@BfWpCxa", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("P<k>V4", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("P<k>V4", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals(", remittanceInformation=", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals(", remittanceInformation=", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals(":!d],&&JI8[W", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals(":!d],&&JI8[W", financialInstitutionTransactionUpdateQuery0.getDescription());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getPurposeCode();
      assertEquals("P<k>V4", string0);
      assertNotNull(string0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("5~]p/h@BfWpCxa", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("P<k>V4", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("P<k>V4", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals(", remittanceInformation=", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals(", remittanceInformation=", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals(":!d],&&JI8[W", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals(":!d],&&JI8[W", financialInstitutionTransactionUpdateQuery0.getDescription());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("", uUID0, uUID0, uUID0, "hSLMOhrxW>_Z", "", "", ", description=", "", ";mis.~U044G`do)", "", "", "", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("hSLMOhrxW>_Z", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals(";mis.~U044G`do)", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals(", description=", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getPurposeCode();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("hSLMOhrxW>_Z", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals(";mis.~U044G`do)", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals(", description=", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery(")nU[<k};", uUID0, uUID0, uUID0, ")nU[<k};", ")nU[<k};", ")nU[<k};", ")nU[<k};", "_(0?", "_(0?", "_(0?", ")nU[<k};", ")nU[<k};", "_(0?");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode();
      assertEquals("_(0?", string0);
      assertNotNull(string0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getCreditorId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.proprietaryBankTransactionCode("");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode();
      assertEquals("", string0);
      assertNotNull(string0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getMandateId();
      assertNull(string0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.mandateId("");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getMandateId();
      assertEquals("", string0);
      assertNotNull(string0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Random.setNextRandom(1967);
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals((-5834694789281923072L), uUID0.getMostSignificantBits());
      assertEquals((-5690579601172529152L), uUID0.getLeastSignificantBits());
      assertEquals("af070000-b007-4000-b107-0000b2070000", uUID0.toString());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("o2:h", uUID0, uUID0, uUID0, "", "", "", "", "", "o2:h", "", "", "", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals((-5834694789281923072L), uUID0.getMostSignificantBits());
      assertEquals((-5690579601172529152L), uUID0.getLeastSignificantBits());
      assertEquals("af070000-b007-4000-b107-0000b2070000", uUID0.toString());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("o2:h", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("o2:h", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      
      UUID uUID1 = financialInstitutionTransactionUpdateQuery0.getFinancialInstitutionTransactionId();
      assertNotNull(uUID1);
      assertEquals((-5834694789281923072L), uUID0.getMostSignificantBits());
      assertEquals((-5690579601172529152L), uUID0.getLeastSignificantBits());
      assertEquals("af070000-b007-4000-b107-0000b2070000", uUID0.toString());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("o2:h", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("o2:h", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals((-5690579601172529152L), uUID1.getLeastSignificantBits());
      assertEquals("af070000-b007-4000-b107-0000b2070000", uUID1.toString());
      assertEquals((-5834694789281923072L), uUID1.getMostSignificantBits());
      assertSame(uUID0, uUID1);
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("", uUID0, uUID0, uUID0, "]/sG5P#z8f9$;ncF:", "]/sG5P#z8f9$;ncF:", "", "@I'", "]/sG5P#z8f9$;ncF:", "?ZNIBvD;[/X~1O/~", "", "", "?ZNIBvD;[/X~1O/~", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("?ZNIBvD;[/X~1O/~", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("?ZNIBvD;[/X~1O/~", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("@I'", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      
      UUID uUID1 = financialInstitutionTransactionUpdateQuery0.getFinancialInstitutionTransactionId();
      assertNotNull(uUID1);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("?ZNIBvD;[/X~1O/~", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("?ZNIBvD;[/X~1O/~", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("@I'", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals((-9079256848728588288L), uUID1.getLeastSignificantBits());
      assertEquals(16793600L, uUID1.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID1.toString());
      assertSame(uUID0, uUID1);
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      
      UUID uUID0 = financialInstitutionTransactionUpdateQuery0.getFinancialInstitutionId();
      assertNull(uUID0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Random.setNextRandom(1967);
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals((-5690579601172529152L), uUID0.getLeastSignificantBits());
      assertEquals((-5834694789281923072L), uUID0.getMostSignificantBits());
      assertEquals("af070000-b007-4000-b107-0000b2070000", uUID0.toString());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("o2:h", uUID0, uUID0, uUID0, "", "", "", "", "", "o2:h", "", "", "", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals((-5690579601172529152L), uUID0.getLeastSignificantBits());
      assertEquals((-5834694789281923072L), uUID0.getMostSignificantBits());
      assertEquals("af070000-b007-4000-b107-0000b2070000", uUID0.toString());
      assertEquals("o2:h", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("o2:h", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      
      UUID uUID1 = financialInstitutionTransactionUpdateQuery0.getFinancialInstitutionId();
      assertNotNull(uUID1);
      assertEquals((-5690579601172529152L), uUID0.getLeastSignificantBits());
      assertEquals((-5834694789281923072L), uUID0.getMostSignificantBits());
      assertEquals("af070000-b007-4000-b107-0000b2070000", uUID0.toString());
      assertEquals("o2:h", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("o2:h", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals((-5834694789281923072L), uUID1.getMostSignificantBits());
      assertEquals((-5690579601172529152L), uUID1.getLeastSignificantBits());
      assertEquals("af070000-b007-4000-b107-0000b2070000", uUID1.toString());
      assertSame(uUID0, uUID1);
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Random.setNextRandom(3760);
      UUID uUID0 = MockUUID.fromString("");
      assertNotNull(uUID0);
      assertEquals((-5616551682280390656L), uUID0.getLeastSignificantBits());
      assertEquals("b00e0000-b10e-4000-b20e-0000b30e0000", uUID0.toString());
      assertEquals((-5760666870389784576L), uUID0.getMostSignificantBits());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("[", uUID0, uUID0, uUID0, "", "", "[", "", "", "", "", "[", "[", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals((-5616551682280390656L), uUID0.getLeastSignificantBits());
      assertEquals("b00e0000-b10e-4000-b20e-0000b30e0000", uUID0.toString());
      assertEquals((-5760666870389784576L), uUID0.getMostSignificantBits());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("[", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("[", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("[", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("[", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      
      UUID uUID1 = financialInstitutionTransactionUpdateQuery0.getFinancialInstitutionAccountId();
      assertNotNull(uUID1);
      assertEquals((-5616551682280390656L), uUID0.getLeastSignificantBits());
      assertEquals("b00e0000-b10e-4000-b20e-0000b30e0000", uUID0.toString());
      assertEquals((-5760666870389784576L), uUID0.getMostSignificantBits());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("[", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("[", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("[", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("[", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals((-5616551682280390656L), uUID1.getLeastSignificantBits());
      assertEquals("b00e0000-b10e-4000-b20e-0000b30e0000", uUID1.toString());
      assertEquals((-5760666870389784576L), uUID1.getMostSignificantBits());
      assertSame(uUID0, uUID1);
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery(")nU[<k};", uUID0, uUID0, uUID0, ")nU[<k};", ")nU[<k};", ")nU[<k};", ")nU[<k};", "_(0?", "_(0?", "_(0?", "{[hp", "{[hp", "_(0?");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("{[hp", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("{[hp", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getEndToEndId();
      assertEquals("_(0?", string0);
      assertNotNull(string0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("{[hp", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("{[hp", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getCreditorId());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("~;SNt9)I4fJ", uUID0, uUID0, uUID0, ", mandateId=", (String) null, "", "", "^/", "~;SNt9)I4fJ", ", mandateId=", (String) null, "3=ef", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("3=ef", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("~;SNt9)I4fJ", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("~;SNt9)I4fJ", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals(", mandateId=", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals(", mandateId=", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("^/", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getEndToEndId();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("3=ef", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("~;SNt9)I4fJ", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("~;SNt9)I4fJ", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals(", mandateId=", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals(", mandateId=", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("^/", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.description("51&#.a)[{QX,3O@7");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getDescription();
      assertNotNull(string0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("X&,Q*/dCJ", uUID0, uUID0, uUID0, ")", "", "hz ^p!q8FX", ")", "", "hz ^p!q8FX", "o]", "X&,Q*/dCJ", "U", ")");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("hz ^p!q8FX", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals(")", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("o]", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("U", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals(")", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("hz ^p!q8FX", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals(")", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("X&,Q*/dCJ", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("X&,Q*/dCJ", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getDescription();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("hz ^p!q8FX", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals(")", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("o]", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("U", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals(")", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("hz ^p!q8FX", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals(")", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("X&,Q*/dCJ", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("X&,Q*/dCJ", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getCreditorId();
      assertNull(string0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("~;SNt9)I4fJ", uUID0, uUID0, uUID0, ", mandateId=", (String) null, "", "", "^/", "~;SNt9)I4fJ", ", mandateId=", (String) null, "3=ef", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("^/", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("~;SNt9)I4fJ", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("~;SNt9)I4fJ", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("3=ef", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals(", mandateId=", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals(", mandateId=", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getCreditorId();
      assertEquals(", mandateId=", string0);
      assertNotNull(string0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("^/", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("~;SNt9)I4fJ", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("~;SNt9)I4fJ", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("3=ef", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals(", mandateId=", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals(", mandateId=", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getCounterpartName();
      assertNull(string0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.counterpartName("");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getCounterpartName();
      assertEquals("", string0);
      assertNotNull(string0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getBankTransactionCode();
      assertNull(string0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      assertNotNull(uUID0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("T5eA9b{zllJ[ZVC<&l7", uUID0, uUID0, uUID0, (String) null, "9#iOhFb", "T5eA9b{zllJ[ZVC<&l7", "", "", "", "G%sf>[geP5sET*Y6", "", "", "G%sf>[geP5sET*Y6");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("G%sf>[geP5sET*Y6", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("T5eA9b{zllJ[ZVC<&l7", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("T5eA9b{zllJ[ZVC<&l7", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("G%sf>[geP5sET*Y6", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("9#iOhFb", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getBankTransactionCode();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("G%sf>[geP5sET*Y6", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("T5eA9b{zllJ[ZVC<&l7", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("T5eA9b{zllJ[ZVC<&l7", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("G%sf>[geP5sET*Y6", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("9#iOhFb", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("", uUID0, uUID0, uUID0, "]/sG5P#z8f9$;ncF:", "]/sG5P#z8f9$;ncF:", "", "@I'", "]/sG5P#z8f9$;ncF:", "?ZNIBvD;[/X~1O/~", "", "", "?ZNIBvD;[/X~1O/~", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("?ZNIBvD;[/X~1O/~", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("@I'", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("?ZNIBvD;[/X~1O/~", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getAdditionalInformation();
      assertEquals("?ZNIBvD;[/X~1O/~", string0);
      assertNotNull(string0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("?ZNIBvD;[/X~1O/~", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("@I'", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("?ZNIBvD;[/X~1O/~", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=^/C, mandateId=null, purposeCode=null, endToEndId=null)");
      assertNotNull(uUID0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=^/C, mandateId=null, purposeCode=null, endToEndId=null)", uUID0, uUID0, uUID0, "^/C", "FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=^/C, mandateId=null, purposeCode=null, endToEndId=null)", "^/C", "", "_K)tZ P3?uNc2Sy6(K+", "", "_K)tZ P3?uNc2Sy6(K+", "FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=^/C, mandateId=null, purposeCode=null, endToEndId=null)", "FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=^/C, mandateId=null, purposeCode=null, endToEndId=null)", "_K)tZ P3?uNc2Sy6(K+");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("^/C", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("^/C", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=^/C, mandateId=null, purposeCode=null, endToEndId=null)", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=^/C, mandateId=null, purposeCode=null, endToEndId=null)", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("_K)tZ P3?uNc2Sy6(K+", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("_K)tZ P3?uNc2Sy6(K+", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=^/C, mandateId=null, purposeCode=null, endToEndId=null)", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=^/C, mandateId=null, purposeCode=null, endToEndId=null)", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("_K)tZ P3?uNc2Sy6(K+", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getAccessToken();
      assertEquals("FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=^/C, mandateId=null, purposeCode=null, endToEndId=null)", string0);
      assertNotNull(string0);
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("^/C", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("^/C", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=^/C, mandateId=null, purposeCode=null, endToEndId=null)", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=^/C, mandateId=null, purposeCode=null, endToEndId=null)", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("_K)tZ P3?uNc2Sy6(K+", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("_K)tZ P3?uNc2Sy6(K+", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=^/C, mandateId=null, purposeCode=null, endToEndId=null)", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=^/C, mandateId=null, purposeCode=null, endToEndId=null)", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("_K)tZ P3?uNc2Sy6(K+", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("", uUID0, uUID0, uUID0, "", "", (String) null, "", (String) null, ", description=", "", "", "", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals(", description=", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getAccessToken();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals(", description=", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("~;SNt9)I4fJ", uUID0, uUID0, uUID0, ", mandateId=", (String) null, "", "", "^/", "~;SNt9)I4fJ", ", mandateId=", (String) null, "3=ef", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals(", mandateId=", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals(", mandateId=", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("~;SNt9)I4fJ", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("~;SNt9)I4fJ", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("^/", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("3=ef", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.canEqual(financialInstitutionTransactionUpdateQuery0);
      assertTrue(boolean0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals(", mandateId=", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals(", mandateId=", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("~;SNt9)I4fJ", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("~;SNt9)I4fJ", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("^/", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("3=ef", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.canEqual(object0);
      assertFalse(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getDescription();
      assertNull(string0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getEndToEndId();
      assertNull(string0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("", uUID0, uUID0, uUID0, "", "", (String) null, "", (String) null, ", description=", "", "", "", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals(", description=", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      
      UUID uUID1 = financialInstitutionTransactionUpdateQuery0.getFinancialInstitutionId();
      assertNotNull(uUID1);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals(", description=", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals(16793600L, uUID1.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID1.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID1.toString());
      assertSame(uUID0, uUID1);
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      
      UUID uUID0 = financialInstitutionTransactionUpdateQuery0.getFinancialInstitutionTransactionId();
      assertNull(uUID0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("", uUID0, uUID0, uUID0, "", ":!d],&&JI8[W", "P<k>V4", "_!nGW'ZZ#pK_c@43MS", "", ", remittanceInformation=", ", remittanceInformation=", ":!d],&&JI8[W", "P<k>V4", "5~]p/h@BfWpCxa");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("P<k>V4", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("5~]p/h@BfWpCxa", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("P<k>V4", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals(", remittanceInformation=", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals(", remittanceInformation=", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals(":!d],&&JI8[W", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals(":!d],&&JI8[W", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getRemittanceInformation();
      assertEquals("P<k>V4", string0);
      assertNotNull(string0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("P<k>V4", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("5~]p/h@BfWpCxa", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("P<k>V4", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals(", remittanceInformation=", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals(", remittanceInformation=", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals(":!d],&&JI8[W", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals(":!d],&&JI8[W", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("EXpjLMDX}");
      assertNotNull(uUID0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("EXpjLMDX}", uUID0, uUID0, uUID0, "EXpjLMDX}", "", "YLfH", (String) null, (String) null, "", "3Qv0L&xvbT", ", endToEndId=", "", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("EXpjLMDX}", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("3Qv0L&xvbT", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals(", endToEndId=", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("YLfH", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("EXpjLMDX}", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getCounterpartName();
      assertEquals("EXpjLMDX}", string0);
      assertNotNull(string0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("EXpjLMDX}", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("3Qv0L&xvbT", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals(", endToEndId=", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("YLfH", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("EXpjLMDX}", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getAdditionalInformation();
      assertNull(string0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("EXpjLMDX}");
      assertNotNull(uUID0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("EXpjLMDX}", uUID0, uUID0, uUID0, "EXpjLMDX}", "", "YLfH", (String) null, (String) null, "", "3Qv0L&xvbT", ", endToEndId=", "", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("EXpjLMDX}", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("YLfH", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("3Qv0L&xvbT", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("EXpjLMDX}", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals(", endToEndId=", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getMandateId();
      assertEquals(", endToEndId=", string0);
      assertNotNull(string0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("EXpjLMDX}", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("YLfH", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("3Qv0L&xvbT", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("EXpjLMDX}", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals(", endToEndId=", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      assertNotNull(uUID0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("", uUID0, uUID0, uUID0, "]/sG5P#z8f9$;ncF:", "]/sG5P#z8f9$;ncF:", "", "@I'", "]/sG5P#z8f9$;ncF:", "?ZNIBvD;[/X~1O/~", "", "", "?ZNIBvD;[/X~1O/~", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("@I'", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("?ZNIBvD;[/X~1O/~", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("?ZNIBvD;[/X~1O/~", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getCreditorId();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("@I'", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("]/sG5P#z8f9$;ncF:", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("?ZNIBvD;[/X~1O/~", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("?ZNIBvD;[/X~1O/~", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      
      UUID uUID0 = financialInstitutionTransactionUpdateQuery0.getFinancialInstitutionAccountId();
      assertNull(uUID0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getAccessToken();
      assertNull(string0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("&qf0En[SM");
      assertNotNull(uUID0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery("&qf0En[SM", uUID0, uUID0, uUID0, "tZJqJv'", "&qf0En[SM", "tZJqJv'", "[.?9$aDCH?s&", "&qf0En[SM", "tZJqJv'", "", "q}", "q}", "");
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("q}", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("tZJqJv'", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("tZJqJv'", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("&qf0En[SM", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("&qf0En[SM", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("q}", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("tZJqJv'", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("[.?9$aDCH?s&", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("&qf0En[SM", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getBankTransactionCode();
      assertEquals("[.?9$aDCH?s&", string0);
      assertNotNull(string0);
      assertEquals((-9079256848728588288L), uUID0.getLeastSignificantBits());
      assertEquals(16793600L, uUID0.getMostSignificantBits());
      assertEquals("00000000-0100-4000-8200-000003000000", uUID0.toString());
      assertEquals("q}", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertEquals("tZJqJv'", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals("tZJqJv'", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("&qf0En[SM", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("&qf0En[SM", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("q}", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals("tZJqJv'", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("[.?9$aDCH?s&", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("&qf0En[SM", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getPurposeCode();
      assertNull(string0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      
      String string0 = financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode();
      assertNull(string0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.endToEndId("");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertTrue(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertTrue(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertTrue(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertTrue(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertEquals("", financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.endToEndId(", remittanceInformation=");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertEquals(", remittanceInformation=", financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertFalse(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertFalse(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertEquals(", remittanceInformation=", financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.endToEndId("rlv*:-ZfTzR4K\t<1XZ");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertEquals("rlv*:-ZfTzR4K\t<1XZ", financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertFalse(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertFalse(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertEquals("rlv*:-ZfTzR4K\t<1XZ", financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.purposeCode("=bH}A\u0003s/Cp$5| `k");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("=bH}A\u0003s/Cp$5| `k", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertTrue(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertEquals("=bH}A\u0003s/Cp$5| `k", financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertTrue(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertTrue(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertTrue(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("=bH}A\u0003s/Cp$5| `k", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertEquals("=bH}A\u0003s/Cp$5| `k", financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.purposeCode("");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertFalse(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertFalse(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertEquals("", financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.purposeCode("J+");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertEquals("J+", financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertFalse(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertFalse(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertEquals("J+", financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.mandateId("");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertTrue(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertTrue(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertTrue(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertTrue(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.mandateId("%&WjiN:;oZ+ZBo*~N");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertEquals("%&WjiN:;oZ+ZBo*~N", financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertFalse(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertFalse(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertEquals("%&WjiN:;oZ+ZBo*~N", financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.mandateId("fwUi_h3*<U");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1.build();
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertEquals("fwUi_h3*<U", financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertFalse(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertFalse(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertEquals("fwUi_h3*<U", financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.creditorId(", creditDrId=");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals(", creditDrId=", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertTrue(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertEquals(", creditDrId=", financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertTrue(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertTrue(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertTrue(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals(", creditDrId=", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertEquals(", creditDrId=", financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.creditorId("joJt0br");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertEquals("joJt0br", financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertFalse(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertFalse(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertEquals("joJt0br", financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.creditorId("");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertFalse(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertFalse(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertEquals("", financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.additionalInformation("9?TR-D7)ixb^U(~*");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("9?TR-D7)ixb^U(~*", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertTrue(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertEquals("9?TR-D7)ixb^U(~*", financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertTrue(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertTrue(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertTrue(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals("9?TR-D7)ixb^U(~*", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertEquals("9?TR-D7)ixb^U(~*", financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.additionalInformation(", counterpartName=");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertEquals(", counterpartName=", financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertFalse(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertFalse(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertEquals(", counterpartName=", financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.additionalInformation("");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertFalse(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertFalse(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertEquals("", financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.proprietaryBankTransactionCode("9?T2-D7)ixb^U(~*");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("9?T2-D7)ixb^U(~*", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1.build();
      assertTrue(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertEquals("9?T2-D7)ixb^U(~*", financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertTrue(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertTrue(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertTrue(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("9?T2-D7)ixb^U(~*", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertEquals("9?T2-D7)ixb^U(~*", financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertNotNull(financialInstitutionTransactionUpdateQuery0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.proprietaryBankTransactionCode("jZT-\"/\"}@");
      assertNotNull(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertNotNull(financialInstitutionTransactionUpdateQuery1);
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertEquals("jZT-\"/\"}@", financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
      
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertFalse(financialInstitutionTransactionUpdateQuery0.equals((Object)financialInstitutionTransactionUpdateQuery1));
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertFalse(boolean0);
      assertNull(financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getRemittanceInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCreditorId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getCounterpartName());
      assertNull(financialInstitutionTransactionUpdateQuery1.getEndToEndId());
      assertNull(financialInstitutionTransactionUpdateQuery1.getPurposeCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getBankTransactionCode());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAccessToken());
      assertNull(financialInstitutionTransactionUpdateQuery1.getAdditionalInformation());
      assertNull(financialInstitutionTransactionUpdateQuery1.getDescription());
      assertNull(financialInstitutionTransactionUpdateQuery1.getMandateId());
      assertEquals("jZT-\"/\"}@", financialInstitutionTransactionUpdateQuery1.getProprietaryBankTransactionCode());
      assertSame(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0, financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1);
      assertNotSame(financialInstitutionTransactionUpdateQuery0, financialInstitutionTransactionUpdateQuery1);
      assertNotSame(financialInstitutionTransactionUpdateQuery1, financialInstitutionTransactionUpdateQuery0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.proprietaryBankTransactionCode("\"ka&xpU_R=i:#");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.bankTransactionCode("9?T2-D7)ixb^U(~*");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.bankTransactionCode("");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.bankTransactionCode("'1<{u0sJ}Dc&rT`uab");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.remittanceInformation(",crediDrId=");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.remittanceInformation("");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.remittanceInformation("uqWF8vTU2H3-I{D7'l^");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.description("9?T2-D7)ixb^U(~*");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1.build();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.description("`ot0br");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.description("");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.counterpartName("");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.counterpartName(", remittanceInformation=");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.counterpartName("Njt<YTLa4mL+,S");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.financialInstitutionTransactionId(uUID0);
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertFalse(boolean0);
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.financialInstitutionTransactionId(uUID0);
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.financialInstitutionAccountId(uUID0);
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.financialInstitutionAccountId(uUID0);
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.financialInstitutionAccountId(uUID0);
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.financialInstitutionId(uUID0);
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.financialInstitutionId(uUID0);
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertFalse(financialInstitutionTransactionUpdateQuery1.equals((Object)financialInstitutionTransactionUpdateQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.accessToken("T{6r6");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.accessToken("com.ibanity.apis.client.products.ponto_connect.sandbox.models.factory.update.FinancialInstitutionTransactionUpdateQuery");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.accessToken("<`\"y:.ZLhn");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery1.equals(financialInstitutionTransactionUpdateQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = new FinancialInstitutionTransactionUpdateQuery(")nU[<k};", uUID0, uUID0, uUID0, ")nU[<k};", ")nU[<k};", ")nU[<k};", ")nU[<k};", "_(0?", "_(0?", "_(0?", "{[hp", "{[hp", "_(0?");
      financialInstitutionTransactionUpdateQuery0.hashCode();
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getCounterpartName());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getEndToEndId());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getDescription());
      assertEquals("{[hp", financialInstitutionTransactionUpdateQuery0.getMandateId());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getRemittanceInformation());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getAccessToken());
      assertEquals(")nU[<k};", financialInstitutionTransactionUpdateQuery0.getBankTransactionCode());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getProprietaryBankTransactionCode());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getCreditorId());
      assertEquals("_(0?", financialInstitutionTransactionUpdateQuery0.getAdditionalInformation());
      assertEquals("{[hp", financialInstitutionTransactionUpdateQuery0.getPurposeCode());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      UUID uUID0 = MockUUID.randomUUID();
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.financialInstitutionAccountId(uUID0);
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1.build();
      UUID uUID1 = financialInstitutionTransactionUpdateQuery0.getFinancialInstitutionAccountId();
      assertEquals((-9079256848728588288L), uUID1.getLeastSignificantBits());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      String string0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.toString();
      assertEquals("FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=null, mandateId=null, purposeCode=null, endToEndId=null)", string0);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      UUID uUID0 = MockUUID.randomUUID();
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.financialInstitutionTransactionId(uUID0);
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder1.build();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = new FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.additionalInformation("");
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      String string0 = financialInstitutionTransactionUpdateQuery0.getAdditionalInformation();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.financialInstitutionId(uUID0);
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery1 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      boolean boolean0 = financialInstitutionTransactionUpdateQuery0.equals(financialInstitutionTransactionUpdateQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FinancialInstitutionTransactionUpdateQuery.FinancialInstitutionTransactionUpdateQueryBuilder financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0 = FinancialInstitutionTransactionUpdateQuery.builder();
      FinancialInstitutionTransactionUpdateQuery financialInstitutionTransactionUpdateQuery0 = financialInstitutionTransactionUpdateQuery_FinancialInstitutionTransactionUpdateQueryBuilder0.build();
      String string0 = financialInstitutionTransactionUpdateQuery0.toString();
      assertEquals("FinancialInstitutionTransactionUpdateQuery(accessToken=null, financialInstitutionId=null, financialInstitutionAccountId=null, financialInstitutionTransactionId=null, counterpartName=null, description=null, remittanceInformation=null, bankTransactionCode=null, proprietaryBankTransactionCode=null, additionalInformation=null, creditorId=null, mandateId=null, purposeCode=null, endToEndId=null)", string0);
  }
}
