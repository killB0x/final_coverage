/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 10:19:25 GMT 2022
 */

package com.ibanity.apis.client.products.isabel_connect.models.read;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.isabel_connect.models.read.IsabelPagingSpec;
import java.time.Clock;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IsabelPagingSpec_ESTest extends IsabelPagingSpec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IsabelPagingSpec.IsabelPagingSpecBuilder isabelPagingSpec_IsabelPagingSpecBuilder0 = new IsabelPagingSpec.IsabelPagingSpecBuilder();
      LocalDate localDate0 = MockLocalDate.now();
      IsabelPagingSpec.IsabelPagingSpecBuilder isabelPagingSpec_IsabelPagingSpecBuilder1 = isabelPagingSpec_IsabelPagingSpecBuilder0.to(localDate0);
      IsabelPagingSpec isabelPagingSpec0 = isabelPagingSpec_IsabelPagingSpecBuilder1.build();
      assertEquals(20L, (long)isabelPagingSpec0.getSize());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = new IsabelPagingSpec();
      IsabelPagingSpec isabelPagingSpec1 = new IsabelPagingSpec();
      assertTrue(isabelPagingSpec1.equals((Object)isabelPagingSpec0));
      
      Period period0 = Period.ofWeeks((-9));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      isabelPagingSpec1.setTo(localDate0);
      boolean boolean0 = isabelPagingSpec0.equals(isabelPagingSpec1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IsabelPagingSpec.IsabelPagingSpecBuilder isabelPagingSpec_IsabelPagingSpecBuilder0 = new IsabelPagingSpec.IsabelPagingSpecBuilder();
      Long long0 = new Long(0L);
      IsabelPagingSpec.IsabelPagingSpecBuilder isabelPagingSpec_IsabelPagingSpecBuilder1 = isabelPagingSpec_IsabelPagingSpecBuilder0.size(long0);
      IsabelPagingSpec isabelPagingSpec0 = IsabelPagingSpec.DEFAULT_PAGING_SPEC;
      isabelPagingSpec0.getFrom();
      IsabelPagingSpec.IsabelPagingSpecBuilder isabelPagingSpec_IsabelPagingSpecBuilder2 = isabelPagingSpec_IsabelPagingSpecBuilder1.to((LocalDate) null);
      Long long1 = new Long(815L);
      isabelPagingSpec_IsabelPagingSpecBuilder2.size(long1);
      isabelPagingSpec_IsabelPagingSpecBuilder1.toString();
      IsabelPagingSpec.IsabelPagingSpecBuilder isabelPagingSpec_IsabelPagingSpecBuilder3 = IsabelPagingSpec.builder();
      IsabelPagingSpec.IsabelPagingSpecBuilder isabelPagingSpec_IsabelPagingSpecBuilder4 = isabelPagingSpec_IsabelPagingSpecBuilder2.from((LocalDate) null);
      isabelPagingSpec_IsabelPagingSpecBuilder4.toString();
      isabelPagingSpec0.getTo();
      isabelPagingSpec_IsabelPagingSpecBuilder1.build();
      IsabelPagingSpec isabelPagingSpec1 = isabelPagingSpec_IsabelPagingSpecBuilder3.build();
      isabelPagingSpec0.equals(isabelPagingSpec1);
      System.setCurrentTimeMillis(815L);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = new IsabelPagingSpec();
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      isabelPagingSpec0.setTo(localDate0);
      isabelPagingSpec0.getTo();
      assertEquals(20L, (long)isabelPagingSpec0.getSize());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = IsabelPagingSpec.DEFAULT_PAGING_SPEC;
      Long long0 = isabelPagingSpec0.getSize();
      assertEquals(20L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IsabelPagingSpec.IsabelPagingSpecBuilder isabelPagingSpec_IsabelPagingSpecBuilder0 = IsabelPagingSpec.builder();
      Long long0 = new Long((-276L));
      isabelPagingSpec_IsabelPagingSpecBuilder0.size(long0);
      IsabelPagingSpec isabelPagingSpec0 = isabelPagingSpec_IsabelPagingSpecBuilder0.build();
      Long long1 = isabelPagingSpec0.getSize();
      assertEquals((-276L), (long)long1);
      assertNotNull(long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = new IsabelPagingSpec();
      Long long0 = new Long(20L);
      isabelPagingSpec0.setOffset(long0);
      isabelPagingSpec0.getOffset();
      assertEquals(20L, (long)isabelPagingSpec0.getSize());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = IsabelPagingSpec.DEFAULT_PAGING_SPEC;
      boolean boolean0 = isabelPagingSpec0.canEqual(isabelPagingSpec0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IsabelPagingSpec.IsabelPagingSpecBuilder isabelPagingSpec_IsabelPagingSpecBuilder0 = IsabelPagingSpec.builder();
      IsabelPagingSpec isabelPagingSpec0 = IsabelPagingSpec.DEFAULT_PAGING_SPEC;
      boolean boolean0 = isabelPagingSpec0.canEqual(isabelPagingSpec_IsabelPagingSpecBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = new IsabelPagingSpec();
      IsabelPagingSpec isabelPagingSpec1 = IsabelPagingSpec.DEFAULT_PAGING_SPEC;
      Long long0 = Long.getLong("", 0L);
      isabelPagingSpec1.setOffset(long0);
      assertFalse(isabelPagingSpec1.equals((Object)isabelPagingSpec0));
      
      isabelPagingSpec0.setOffset(long0);
      boolean boolean0 = isabelPagingSpec1.equals(isabelPagingSpec0);
      assertTrue(isabelPagingSpec0.equals((Object)isabelPagingSpec1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = new IsabelPagingSpec();
      IsabelPagingSpec isabelPagingSpec1 = IsabelPagingSpec.DEFAULT_PAGING_SPEC;
      assertTrue(isabelPagingSpec1.equals((Object)isabelPagingSpec0));
      
      Long long0 = new Long(1497L);
      isabelPagingSpec1.setOffset(long0);
      boolean boolean0 = isabelPagingSpec0.equals(isabelPagingSpec1);
      assertFalse(isabelPagingSpec1.equals((Object)isabelPagingSpec0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = new IsabelPagingSpec();
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      isabelPagingSpec0.setTo(localDate0);
      isabelPagingSpec0.hashCode();
      assertEquals(20L, (long)isabelPagingSpec0.getSize());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = IsabelPagingSpec.DEFAULT_PAGING_SPEC;
      Long long0 = isabelPagingSpec0.getOffset();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = new IsabelPagingSpec();
      Long long0 = isabelPagingSpec0.getSize();
      assertEquals(20L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = new IsabelPagingSpec();
      IsabelPagingSpec isabelPagingSpec1 = IsabelPagingSpec.DEFAULT_PAGING_SPEC;
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1L);
      isabelPagingSpec0.setTo(localDate0);
      assertFalse(isabelPagingSpec0.equals((Object)isabelPagingSpec1));
      
      isabelPagingSpec1.setTo(localDate0);
      boolean boolean0 = isabelPagingSpec1.equals(isabelPagingSpec0);
      assertTrue(isabelPagingSpec0.equals((Object)isabelPagingSpec1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = IsabelPagingSpec.DEFAULT_PAGING_SPEC;
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      isabelPagingSpec0.setFrom(localDate0);
      IsabelPagingSpec.IsabelPagingSpecBuilder isabelPagingSpec_IsabelPagingSpecBuilder0 = IsabelPagingSpec.builder();
      IsabelPagingSpec.IsabelPagingSpecBuilder isabelPagingSpec_IsabelPagingSpecBuilder1 = isabelPagingSpec_IsabelPagingSpecBuilder0.to(localDate0);
      IsabelPagingSpec.IsabelPagingSpecBuilder isabelPagingSpec_IsabelPagingSpecBuilder2 = isabelPagingSpec_IsabelPagingSpecBuilder1.from(localDate0);
      IsabelPagingSpec isabelPagingSpec1 = isabelPagingSpec_IsabelPagingSpecBuilder2.build();
      boolean boolean0 = isabelPagingSpec0.equals(isabelPagingSpec1);
      assertFalse(boolean0);
      assertEquals(20L, (long)isabelPagingSpec1.getSize());
      assertFalse(isabelPagingSpec1.equals((Object)isabelPagingSpec0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = new IsabelPagingSpec();
      IsabelPagingSpec isabelPagingSpec1 = IsabelPagingSpec.DEFAULT_PAGING_SPEC;
      assertTrue(isabelPagingSpec1.equals((Object)isabelPagingSpec0));
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1L);
      isabelPagingSpec1.setTo(localDate0);
      boolean boolean0 = isabelPagingSpec1.equals(isabelPagingSpec0);
      assertFalse(isabelPagingSpec1.equals((Object)isabelPagingSpec0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = IsabelPagingSpec.DEFAULT_PAGING_SPEC;
      IsabelPagingSpec isabelPagingSpec1 = new IsabelPagingSpec();
      assertTrue(isabelPagingSpec1.equals((Object)isabelPagingSpec0));
      
      LocalDate localDate0 = MockLocalDate.now();
      isabelPagingSpec1.setFrom(localDate0);
      boolean boolean0 = isabelPagingSpec0.equals(isabelPagingSpec1);
      assertFalse(isabelPagingSpec1.equals((Object)isabelPagingSpec0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = IsabelPagingSpec.DEFAULT_PAGING_SPEC;
      IsabelPagingSpec isabelPagingSpec1 = new IsabelPagingSpec();
      assertTrue(isabelPagingSpec1.equals((Object)isabelPagingSpec0));
      
      Long long0 = new Long(1L);
      isabelPagingSpec1.setOffset(long0);
      boolean boolean0 = isabelPagingSpec1.equals(isabelPagingSpec0);
      assertFalse(isabelPagingSpec1.equals((Object)isabelPagingSpec0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = new IsabelPagingSpec();
      IsabelPagingSpec isabelPagingSpec1 = IsabelPagingSpec.DEFAULT_PAGING_SPEC;
      assertTrue(isabelPagingSpec1.equals((Object)isabelPagingSpec0));
      
      isabelPagingSpec0.setSize((Long) null);
      boolean boolean0 = isabelPagingSpec0.equals(isabelPagingSpec1);
      assertFalse(isabelPagingSpec1.equals((Object)isabelPagingSpec0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = new IsabelPagingSpec();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1L);
      boolean boolean0 = isabelPagingSpec0.equals(localDate0);
      assertFalse(boolean0);
      assertEquals(20L, (long)isabelPagingSpec0.getSize());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = new IsabelPagingSpec();
      boolean boolean0 = isabelPagingSpec0.equals(isabelPagingSpec0);
      assertTrue(boolean0);
      assertEquals(20L, (long)isabelPagingSpec0.getSize());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IsabelPagingSpec isabelPagingSpec0 = IsabelPagingSpec.DEFAULT_PAGING_SPEC;
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(63);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      isabelPagingSpec0.setFrom(localDate0);
      isabelPagingSpec0.hashCode();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IsabelPagingSpec.IsabelPagingSpecBuilder isabelPagingSpec_IsabelPagingSpecBuilder0 = IsabelPagingSpec.builder();
      IsabelPagingSpec isabelPagingSpec0 = isabelPagingSpec_IsabelPagingSpecBuilder0.build();
      String string0 = isabelPagingSpec0.toString();
      assertEquals("IsabelPagingSpec(size=20, offset=null, from=null, to=null)", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IsabelPagingSpec.IsabelPagingSpecBuilder isabelPagingSpec_IsabelPagingSpecBuilder0 = IsabelPagingSpec.builder();
      IsabelPagingSpec.IsabelPagingSpecBuilder isabelPagingSpec_IsabelPagingSpecBuilder1 = isabelPagingSpec_IsabelPagingSpecBuilder0.offset((Long) null);
      assertSame(isabelPagingSpec_IsabelPagingSpecBuilder0, isabelPagingSpec_IsabelPagingSpecBuilder1);
  }
}
