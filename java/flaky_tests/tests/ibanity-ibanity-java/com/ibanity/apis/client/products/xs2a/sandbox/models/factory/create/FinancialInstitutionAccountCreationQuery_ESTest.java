/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:21:55 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.sandbox.models.factory.create;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.sandbox.models.factory.create.FinancialInstitutionAccountCreationQuery;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.Instant;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FinancialInstitutionAccountCreationQuery_ESTest extends FinancialInstitutionAccountCreationQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Instant instant0 = MockInstant.ofEpochMilli(4588L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "l+ij$fa|=l", "*|uG;", "l+ij$fa|=l", "l+ij$fa|=l", "k0kgi2)Dl*B.p", bigDecimal0, bigDecimal0, "l+ij$fa|=l", "*|uG;", instant0, instant0, instant0, instant0);
      financialInstitutionAccountCreationQuery0.hashCode();
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("k0kgi2)Dl*B.p", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((-1L));
      BigDecimal bigDecimal0 = new BigDecimal((double) (-1L));
      UUID uUID0 = MockUUID.fromString("");
      UUID uUID1 = MockUUID.randomUUID();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID1, "", "", "", "?3K-Hfq:6", (String) null, bigDecimal0, bigDecimal0, "", ", subtype=", instant0, instant0, instant0, instant0);
      financialInstitutionAccountCreationQuery0.hashCode();
      assertEquals(", subtype=", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("?3K-Hfq:6", financialInstitutionAccountCreationQuery0.getReference());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      String string0 = financialInstitutionAccountCreationQuery0.getSubtype();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      Instant instant0 = MockInstant.ofEpochSecond(0L, 0L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "", "G ", "'Mv>8M6&D", ", subtype=", (String) null, (BigDecimal) null, (BigDecimal) null, "G ", ", subtype=", instant0, instant0, instant0, instant0);
      String string0 = financialInstitutionAccountCreationQuery0.getSubtype();
      assertEquals("'Mv>8M6&D", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals(", subtype=", financialInstitutionAccountCreationQuery0.getReference());
      assertNotNull(string0);
      assertEquals("G ", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("G ", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals(", subtype=", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      String string0 = financialInstitutionAccountCreationQuery0.getReferenceType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("4t@k%c_w]kA$nM<>Z3");
      Instant instant0 = MockInstant.ofEpochSecond(1793L, 2958L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "7\"8_Fmjx+uNdPD", "SS?v", "a@L$q(WIuOaG1`", "", "", (BigDecimal) null, (BigDecimal) null, "_cOg3", "SS?v", (Instant) null, instant0, (Instant) null, instant0);
      String string0 = financialInstitutionAccountCreationQuery0.getReferenceType();
      assertEquals("_cOg3", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("a@L$q(WIuOaG1`", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("SS?v", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("SS?v", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("7\"8_Fmjx+uNdPD", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      String string0 = financialInstitutionAccountCreationQuery0.getReference();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("4t@k%c_w]kA$nM<>Z3");
      Instant instant0 = MockInstant.ofEpochSecond(1793L, 2958L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "7\"8_Fmjx+uNdPD", "SS?v", "a@L$q(WIuOaG1`", "", "", (BigDecimal) null, (BigDecimal) null, "_cOg3", "SS?v", (Instant) null, instant0, (Instant) null, instant0);
      String string0 = financialInstitutionAccountCreationQuery0.getReference();
      assertEquals("SS?v", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("7\"8_Fmjx+uNdPD", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("a@L$q(WIuOaG1`", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("", string0);
      assertEquals("_cOg3", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("SS?v", financialInstitutionAccountCreationQuery0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      String string0 = financialInstitutionAccountCreationQuery0.getProduct();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Instant instant0 = MockInstant.ofEpochMilli(4588L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "jEK3-P", "k0kgi2)Dl*B.p", "*|uG;", "", "l+ij$fa|=l", bigDecimal0, bigDecimal0, "", "k0kgi2)Dl*B.p", instant0, instant0, instant0, instant0);
      String string0 = financialInstitutionAccountCreationQuery0.getProduct();
      assertEquals("k0kgi2)Dl*B.p", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("", string0);
      assertEquals("k0kgi2)Dl*B.p", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("jEK3-P", financialInstitutionAccountCreationQuery0.getSubtype());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Instant instant0 = MockInstant.ofEpochMilli(4588L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "l+ij$fa|=l", "*|uG;", "l+ij$fa|=l", "l+ij$fa|=l", "k0kgi2)Dl*B.p", bigDecimal0, bigDecimal0, "l+ij$fa|=l", "*|uG;", instant0, instant0, instant0, instant0);
      String string0 = financialInstitutionAccountCreationQuery0.getHolderName();
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("k0kgi2)Dl*B.p", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("*|uG;", string0);
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "", "Q](x'KJ", "", "", "Q](x'KJ", (BigDecimal) null, (BigDecimal) null, "", "", (Instant) null, (Instant) null, (Instant) null, (Instant) null);
      String string0 = financialInstitutionAccountCreationQuery0.getHolderName();
      assertEquals("", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("", string0);
      assertEquals("", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("Q](x'KJ", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("Q](x'KJ", financialInstitutionAccountCreationQuery0.getReferenceType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Random.setNextRandom((-672));
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      Instant instant0 = MockInstant.ofEpochSecond((long) (-672));
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, ", holderName=", ", holderName=", ", holderName=", ", holderName=", ", holderName=", bigDecimal0, bigDecimal0, ", holderName=", ", holderName=", instant0, instant0, instant0, (Instant) null);
      UUID uUID1 = financialInstitutionAccountCreationQuery0.getFinancialInstitutionUserId();
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "7\"8_Fmjx+uNdPD", "", "JK5EnC;5dd", ", currentBalance=", "", (BigDecimal) null, (BigDecimal) null, "JK5EnC;5dd", "", (Instant) null, (Instant) null, (Instant) null, (Instant) null);
      financialInstitutionAccountCreationQuery0.getFinancialInstitutionUserId();
      assertEquals("7\"8_Fmjx+uNdPD", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals(", currentBalance=", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("JK5EnC;5dd", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("JK5EnC;5dd", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("", financialInstitutionAccountCreationQuery0.getReferenceType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Random.setNextRandom(2281);
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "", "", "", "", "", bigDecimal0, bigDecimal0, "", "", (Instant) null, (Instant) null, (Instant) null, (Instant) null);
      UUID uUID1 = financialInstitutionAccountCreationQuery0.getFinancialInstitutionId();
      assertSame(uUID1, uUID0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "", "", "", "", "", bigDecimal0, bigDecimal0, "", "", (Instant) null, (Instant) null, (Instant) null, (Instant) null);
      UUID uUID1 = financialInstitutionAccountCreationQuery0.getFinancialInstitutionId();
      assertEquals((-9079256848728588288L), uUID1.getLeastSignificantBits());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Instant instant0 = MockInstant.ofEpochMilli(4588L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "l+ij$fa|=l", "*|uG;", "l+ij$fa|=l", "l+ij$fa|=l", "k0kgi2)Dl*B.p", bigDecimal0, bigDecimal0, "l+ij$fa|=l", "*|uG;", instant0, instant0, instant0, instant0);
      String string0 = financialInstitutionAccountCreationQuery0.getDescription();
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("k0kgi2)Dl*B.p", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("l+ij$fa|=l", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochMilli(4588L);
      UUID uUID0 = MockUUID.fromString("");
      BigDecimal bigDecimal0 = new BigDecimal((double) 4588L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "", "", "", "", "", bigDecimal0, bigDecimal0, "", "tC6HQs)+&x:uWO@}JT6", (Instant) null, instant0, (Instant) null, instant0);
      String string0 = financialInstitutionAccountCreationQuery0.getDescription();
      assertEquals("", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("tC6HQs)+&x:uWO@}JT6", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("", string0);
      assertEquals("", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("", financialInstitutionAccountCreationQuery0.getReferenceType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      Instant instant0 = MockInstant.ofEpochSecond((-1L));
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.currentBalanceReferenceDate(instant0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      Instant instant1 = financialInstitutionAccountCreationQuery0.getCurrentBalanceReferenceDate();
      assertSame(instant1, instant0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      Instant instant0 = financialInstitutionAccountCreationQuery0.getCurrentBalanceChangedAt();
      assertNull(instant0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      Instant instant0 = MockInstant.ofEpochSecond(0L, 0L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "", "G ", "'Mv>8M6&D", ", subtype=", (String) null, (BigDecimal) null, (BigDecimal) null, "G ", ", subtype=", instant0, instant0, instant0, instant0);
      financialInstitutionAccountCreationQuery0.getCurrentBalance();
      assertEquals("G ", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("'Mv>8M6&D", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("G ", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals(", subtype=", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals(", subtype=", financialInstitutionAccountCreationQuery0.getReference());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Instant instant0 = MockInstant.ofEpochMilli(4588L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "l+ij$fa|=l", "*|uG;", "l+ij$fa|=l", "l+ij$fa|=l", "k0kgi2)Dl*B.p", bigDecimal0, bigDecimal0, "l+ij$fa|=l", "*|uG;", instant0, instant0, instant0, instant0);
      financialInstitutionAccountCreationQuery0.getCurrentBalance();
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("k0kgi2)Dl*B.p", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getHolderName());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      BigDecimal bigDecimal0 = new BigDecimal((-1.0));
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.currentBalance(bigDecimal0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      BigDecimal bigDecimal1 = financialInstitutionAccountCreationQuery0.getCurrentBalance();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("6@9%Qvd#n");
      BigDecimal bigDecimal0 = new BigDecimal(677.3);
      Instant instant0 = MockInstant.ofEpochSecond(2749L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery((UUID) null, uUID0, "6<^o\"i*B&x$${wXD", ", description=", ", description=", "?7/_5u", "5+<`,", bigDecimal0, bigDecimal0, "6:N-bvu5atBe", "6<^o\"i*B&x$${wXD", instant0, instant0, instant0, instant0);
      String string0 = financialInstitutionAccountCreationQuery0.getCurrency();
      assertEquals("6:N-bvu5atBe", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("5+<`,", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("?7/_5u", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("6<^o\"i*B&x$${wXD", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("6<^o\"i*B&x$${wXD", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals(", description=", string0);
      assertEquals(", description=", financialInstitutionAccountCreationQuery0.getDescription());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.currency("");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder1.build();
      String string0 = financialInstitutionAccountCreationQuery0.getCurrency();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Instant instant0 = MockInstant.ofEpochMilli(0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "", "l+ij$fa|=l", "", "n2M|&7i/|y8|\u0002(k", "9UwTXxA", bigDecimal0, bigDecimal0, "", "", instant0, instant0, instant0, (Instant) null);
      Instant instant1 = financialInstitutionAccountCreationQuery0.getAvailableBalanceReferenceDate();
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getCurrency());
      assertNull(instant1);
      assertEquals("", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("n2M|&7i/|y8|\u0002(k", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("9UwTXxA", financialInstitutionAccountCreationQuery0.getReferenceType());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Instant instant0 = MockInstant.now();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "k0kgi2)Dl*B.p", "", "`E?$?\"&BCQ5SCpbS", "", "", (BigDecimal) null, bigDecimal0, (String) null, "", instant0, instant0, instant0, instant0);
      financialInstitutionAccountCreationQuery0.getAvailableBalanceChangedAt();
      assertEquals("`E?$?\"&BCQ5SCpbS", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("k0kgi2)Dl*B.p", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("", financialInstitutionAccountCreationQuery0.getReference());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Instant instant0 = MockInstant.ofEpochMilli(4588L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "l+ij$fa|=l", "*|uG;", "l+ij$fa|=l", "l+ij$fa|=l", "k0kgi2)Dl*B.p", bigDecimal0, bigDecimal0, "l+ij$fa|=l", "*|uG;", instant0, instant0, instant0, instant0);
      financialInstitutionAccountCreationQuery0.getAvailableBalance();
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("k0kgi2)Dl*B.p", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getDescription());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((-1L));
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal((-4026.537145044693));
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "^O%j!I@a~1E", "", "", "?3K-Hfq:6", "", bigDecimal0, bigDecimal0, "", "[1AUg", instant0, instant0, instant0, instant0);
      financialInstitutionAccountCreationQuery0.getAvailableBalance();
      assertEquals("", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("[1AUg", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("?3K-Hfq:6", financialInstitutionAccountCreationQuery0.getReference());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochMilli(4588L);
      UUID uUID0 = MockUUID.fromString("");
      BigDecimal bigDecimal0 = new BigDecimal((double) 4588L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "", "", "", "", "", bigDecimal0, bigDecimal0, "", "tC6HQs)+&x:uWO@}JT6", (Instant) null, instant0, (Instant) null, instant0);
      financialInstitutionAccountCreationQuery0.getAvailableBalance();
      assertEquals("", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("tC6HQs)+&x:uWO@}JT6", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("", financialInstitutionAccountCreationQuery0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Instant instant0 = MockInstant.ofEpochMilli(4588L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "l+ij$fa|=l", "*|uG;", "l+ij$fa|=l", "l+ij$fa|=l", "k0kgi2)Dl*B.p", bigDecimal0, bigDecimal0, "l+ij$fa|=l", "*|uG;", instant0, instant0, instant0, instant0);
      financialInstitutionAccountCreationQuery0.canEqual(financialInstitutionAccountCreationQuery0);
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("k0kgi2)Dl*B.p", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getReference());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("6@9%Qvd#n");
      BigDecimal bigDecimal0 = new BigDecimal(677.3);
      Instant instant0 = MockInstant.ofEpochSecond(2749L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery((UUID) null, uUID0, "6<^o\"i*B&x$${wXD", ", description=", ", description=", "?7/_5u", "5+<`,", bigDecimal0, bigDecimal0, "6:N-bvu5atBe", "6<^o\"i*B&x$${wXD", instant0, instant0, instant0, instant0);
      financialInstitutionAccountCreationQuery0.canEqual((Object) null);
      assertEquals("6<^o\"i*B&x$${wXD", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("?7/_5u", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals(", description=", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("5+<`,", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals(", description=", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("6:N-bvu5atBe", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("6<^o\"i*B&x$${wXD", financialInstitutionAccountCreationQuery0.getSubtype());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      String string0 = financialInstitutionAccountCreationQuery0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      Instant instant0 = financialInstitutionAccountCreationQuery0.getAvailableBalanceChangedAt();
      assertNull(instant0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Instant instant0 = MockInstant.ofEpochMilli(4588L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "l+ij$fa|=l", "*|uG;", "l+ij$fa|=l", "l+ij$fa|=l", "k0kgi2)Dl*B.p", bigDecimal0, bigDecimal0, "l+ij$fa|=l", "*|uG;", instant0, instant0, instant0, instant0);
      financialInstitutionAccountCreationQuery0.getAvailableBalanceReferenceDate();
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("k0kgi2)Dl*B.p", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      String string0 = financialInstitutionAccountCreationQuery0.getHolderName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      BigInteger bigInteger0 = BigInteger.ONE;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      Instant instant0 = MockInstant.ofEpochMilli(0L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "", "", "", "", "sUH5", bigDecimal0, bigDecimal0, (String) null, "sUH5", instant0, instant0, instant0, instant0);
      String string0 = financialInstitutionAccountCreationQuery0.getReferenceType();
      assertEquals("", financialInstitutionAccountCreationQuery0.getReference());
      assertNotNull(string0);
      assertEquals("", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("sUH5", string0);
      assertEquals("", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("sUH5", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("", financialInstitutionAccountCreationQuery0.getDescription());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Instant instant0 = MockInstant.ofEpochMilli(4588L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "l+ij$fa|=l", "*|uG;", "l+ij$fa|=l", "l+ij$fa|=l", "k0kgi2)Dl*B.p", bigDecimal0, bigDecimal0, "l+ij$fa|=l", "*|uG;", instant0, instant0, instant0, instant0);
      String string0 = financialInstitutionAccountCreationQuery0.getProduct();
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("l+ij$fa|=l", string0);
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("k0kgi2)Dl*B.p", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getReference());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      UUID uUID0 = financialInstitutionAccountCreationQuery0.getFinancialInstitutionUserId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      String string0 = financialInstitutionAccountCreationQuery0.getCurrency();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "7\"8_Fmjx+uNdPD", "", "JK5EnC;5dd", ", currentBalance=", "", (BigDecimal) null, (BigDecimal) null, "JK5EnC;5dd", "", (Instant) null, (Instant) null, (Instant) null, (Instant) null);
      financialInstitutionAccountCreationQuery0.getAvailableBalance();
      assertEquals(", currentBalance=", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("JK5EnC;5dd", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("7\"8_Fmjx+uNdPD", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("JK5EnC;5dd", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("", financialInstitutionAccountCreationQuery0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal(0);
      Instant instant0 = MockInstant.ofEpochMilli(4588L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "l+ij$fa|=l", "*|uG;", "l+ij$fa|=l", "l+ij$fa|=l", "k0kgi2)Dl*B.p", bigDecimal0, bigDecimal0, "l+ij$fa|=l", "*|uG;", instant0, instant0, instant0, instant0);
      String string0 = financialInstitutionAccountCreationQuery0.getSubtype();
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("k0kgi2)Dl*B.p", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("l+ij$fa|=l", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("*|uG;", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("l+ij$fa|=l", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      Instant instant0 = financialInstitutionAccountCreationQuery0.getCurrentBalanceReferenceDate();
      assertNull(instant0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochMilli(3196L);
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = new BigDecimal((double) 3196L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "", ", financialInstitutionUserId=", "[%@d{V_PXe <$rwB", "EJr4fl+", "", bigDecimal0, bigDecimal0, "[%@d{V_PXe <$rwB", "", instant0, instant0, instant0, instant0);
      financialInstitutionAccountCreationQuery0.getCurrentBalance();
      assertEquals("EJr4fl+", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals("[%@d{V_PXe <$rwB", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("[%@d{V_PXe <$rwB", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals(", financialInstitutionUserId=", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("", financialInstitutionAccountCreationQuery0.getReferenceType());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("6@9%Qvd#n");
      BigDecimal bigDecimal0 = new BigDecimal(677.3);
      Instant instant0 = MockInstant.ofEpochSecond(2749L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery((UUID) null, uUID0, "6<^o\"i*B&x$${wXD", ", description=", ", description=", "?7/_5u", "5+<`,", bigDecimal0, bigDecimal0, "6:N-bvu5atBe", "6<^o\"i*B&x$${wXD", instant0, instant0, instant0, instant0);
      UUID uUID1 = financialInstitutionAccountCreationQuery0.getFinancialInstitutionId();
      assertEquals(", description=", financialInstitutionAccountCreationQuery0.getCurrency());
      assertEquals("5+<`,", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertNull(uUID1);
      assertEquals("6<^o\"i*B&x$${wXD", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("6:N-bvu5atBe", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals(", description=", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("6<^o\"i*B&x$${wXD", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("?7/_5u", financialInstitutionAccountCreationQuery0.getReference());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery(uUID0, uUID0, "7\"8_Fmjx+uNdPD", "", "JK5EnC;5dd", ", currentBalance=", "", (BigDecimal) null, (BigDecimal) null, "JK5EnC;5dd", "", (Instant) null, (Instant) null, (Instant) null, (Instant) null);
      String string0 = financialInstitutionAccountCreationQuery0.getReference();
      assertEquals("", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("JK5EnC;5dd", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals("7\"8_Fmjx+uNdPD", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals(", currentBalance=", string0);
      assertEquals("JK5EnC;5dd", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("", financialInstitutionAccountCreationQuery0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      UUID uUID0 = MockUUID.fromString("6@9%Qvd#n");
      BigDecimal bigDecimal0 = new BigDecimal(677.3);
      Instant instant0 = MockInstant.ofEpochSecond(2749L);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = new FinancialInstitutionAccountCreationQuery((UUID) null, uUID0, "6<^o\"i*B&x$${wXD", ", description=", ", description=", "?7/_5u", "5+<`,", bigDecimal0, bigDecimal0, "6:N-bvu5atBe", "6<^o\"i*B&x$${wXD", instant0, instant0, instant0, instant0);
      financialInstitutionAccountCreationQuery0.getCurrentBalanceChangedAt();
      assertEquals("6:N-bvu5atBe", financialInstitutionAccountCreationQuery0.getProduct());
      assertEquals("6<^o\"i*B&x$${wXD", financialInstitutionAccountCreationQuery0.getHolderName());
      assertEquals("6<^o\"i*B&x$${wXD", financialInstitutionAccountCreationQuery0.getSubtype());
      assertEquals("5+<`,", financialInstitutionAccountCreationQuery0.getReferenceType());
      assertEquals("?7/_5u", financialInstitutionAccountCreationQuery0.getReference());
      assertEquals(", description=", financialInstitutionAccountCreationQuery0.getDescription());
      assertEquals(", description=", financialInstitutionAccountCreationQuery0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Instant instant0 = MockInstant.now();
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.availableBalanceReferenceDate(instant0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder1.build();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      Instant instant0 = MockInstant.now();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.availableBalanceReferenceDate(instant0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      Instant instant0 = MockInstant.ofEpochSecond(0L);
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.availableBalanceReferenceDate(instant0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      Instant instant0 = MockInstant.now();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.availableBalanceChangedAt(instant0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      Instant instant0 = MockInstant.now();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.availableBalanceChangedAt(instant0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      Instant instant0 = MockInstant.now();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.currentBalanceReferenceDate(instant0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      Instant instant0 = MockInstant.now();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.currentBalanceReferenceDate(instant0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      Instant instant0 = MockInstant.ofEpochMilli((-580L));
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.currentBalanceChangedAt(instant0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      Instant instant0 = MockInstant.now();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.currentBalanceChangedAt(instant0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.holderName("GKB~j");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.holderName("H:UjL]0");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.holderName("");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.product("m{43\"cO&@i");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.product("IY}g`85V/");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.availableBalance(bigDecimal0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.availableBalance(bigDecimal0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.availableBalance(bigDecimal0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.currentBalance(bigDecimal0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.currentBalance(bigDecimal0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.referenceType("");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.referenceType(">QZE#@Lft(0t");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.reference("kp-E1YGp.xRU/>q].");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.reference("G1>sbPQ;ZPxhA}>@=m");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.description("y");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.description("+X5e,P\"");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.currency("");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.currency("");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertFalse(financialInstitutionAccountCreationQuery1.equals((Object)financialInstitutionAccountCreationQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.subtype("U&#oZ[bQ-A#z,Qfh#");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.subtype("");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertFalse(boolean0);
      assertFalse(financialInstitutionAccountCreationQuery1.equals((Object)financialInstitutionAccountCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.financialInstitutionUserId(uUID0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.financialInstitutionUserId(uUID0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertFalse(financialInstitutionAccountCreationQuery1.equals((Object)financialInstitutionAccountCreationQuery0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.financialInstitutionId(uUID0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertFalse(boolean0);
      assertFalse(financialInstitutionAccountCreationQuery1.equals((Object)financialInstitutionAccountCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.financialInstitutionId(uUID0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      Object object0 = new Object();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      financialInstitutionAccountCreationQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.currency("");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.financialInstitutionUserId(uUID0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      UUID uUID0 = MockUUID.randomUUID();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.financialInstitutionId(uUID0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      Instant instant0 = MockInstant.now();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.currentBalanceChangedAt(instant0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.referenceType("");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      Instant instant0 = MockInstant.now();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.availableBalanceChangedAt(instant0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      String string0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.toString();
      assertEquals("FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder(financialInstitutionId=null, financialInstitutionUserId=null, subtype=null, currency=null, description=null, reference=null, referenceType=null, currentBalance=null, availableBalance=null, product=null, holderName=null, currentBalanceChangedAt=null, currentBalanceReferenceDate=null, availableBalanceChangedAt=null, availableBalanceReferenceDate=null)", string0);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      Instant instant0 = MockInstant.now();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.currentBalanceReferenceDate(instant0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.product("");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.subtype("^j");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder1.build();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.currentBalance(bigDecimal0);
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.reference("");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery0.equals(financialInstitutionAccountCreationQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = new FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder();
      financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.description("vo+@");
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery1 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      boolean boolean0 = financialInstitutionAccountCreationQuery1.equals(financialInstitutionAccountCreationQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      FinancialInstitutionAccountCreationQuery.FinancialInstitutionAccountCreationQueryBuilder financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0 = FinancialInstitutionAccountCreationQuery.builder();
      FinancialInstitutionAccountCreationQuery financialInstitutionAccountCreationQuery0 = financialInstitutionAccountCreationQuery_FinancialInstitutionAccountCreationQueryBuilder0.build();
      String string0 = financialInstitutionAccountCreationQuery0.toString();
      assertEquals("FinancialInstitutionAccountCreationQuery(financialInstitutionId=null, financialInstitutionUserId=null, subtype=null, currency=null, description=null, reference=null, referenceType=null, currentBalance=null, availableBalance=null, product=null, holderName=null, currentBalanceChangedAt=null, currentBalanceReferenceDate=null, availableBalanceChangedAt=null, availableBalanceReferenceDate=null)", string0);
  }
}
