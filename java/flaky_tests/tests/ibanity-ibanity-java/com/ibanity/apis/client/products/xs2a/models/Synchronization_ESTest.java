/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:38:20 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.models.IbanityError;
import com.ibanity.apis.client.products.xs2a.models.Synchronization;
import com.ibanity.apis.client.products.xs2a.models.links.UpdatedTransactionsLinks;
import java.time.Clock;
import java.time.Instant;
import java.util.LinkedList;
import java.util.List;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Synchronization_ESTest extends Synchronization_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      UpdatedTransactionsLinks updatedTransactionsLinks0 = new UpdatedTransactionsLinks();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.updatedTransactionsLinks(updatedTransactionsLinks0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      UpdatedTransactionsLinks updatedTransactionsLinks1 = synchronization0.getUpdatedTransactionsLinks();
      assertNull(updatedTransactionsLinks1.getRelated());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Instant instant0 = MockInstant.ofEpochSecond((-1875L));
      synchronization_SynchronizationBuilder0.updatedAt(instant0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Instant instant1 = synchronization0.getUpdatedAt();
      assertSame(instant1, instant0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.subtype("'Iz`\"*w%E");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      String string0 = synchronization0.getSubtype();
      assertNotNull(string0);
      assertEquals("'Iz`\"*w%E", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      synchronization0.setStatus("Q[");
      String string0 = synchronization0.getStatus();
      assertEquals("Q[", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.status("");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      String string0 = synchronization0.getStatus();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.selfLink(",.fre.xg?^dIa\rtbo");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      String string0 = synchronization0.getSelfLink();
      assertNotNull(string0);
      assertEquals(",.fre.xg?^dIa\rtbo", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.selfLink("");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      String string0 = synchronization0.getSelfLink();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      synchronization0.setResourceType("{synchronizationId}");
      String string0 = synchronization0.getResourceType();
      assertEquals("{synchronizationId}", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.resourceType("");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      String string0 = synchronization0.getResourceType();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.resourceId(")");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      String string0 = synchronization0.getResourceId();
      assertNotNull(string0);
      assertEquals(")", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.resourceId("");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      String string0 = synchronization0.getResourceId();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      synchronization0.setRequestId("{synchronizationId}");
      String string0 = synchronization0.getRequestId();
      assertEquals("{synchronizationId}", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.requestId("");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      String string0 = synchronization0.getRequestId();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Random.setNextRandom((-1239));
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      UUID uUID0 = MockUUID.randomUUID();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.id(uUID0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      UUID uUID1 = synchronization0.getId();
      assertEquals((-7420806282342039552L), uUID1.getLeastSignificantBits());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      UUID uUID0 = MockUUID.randomUUID();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.id(uUID0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      UUID uUID1 = synchronization0.getId();
      assertEquals((-9079256848728588288L), uUID1.getLeastSignificantBits());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.errors((List<IbanityError>) null);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      List<IbanityError> list0 = synchronization0.getErrors();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      LinkedList<IbanityError> linkedList0 = new LinkedList<IbanityError>();
      synchronization0.setErrors(linkedList0);
      List<IbanityError> list0 = synchronization0.getErrors();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      LinkedList<IbanityError> linkedList0 = new LinkedList<IbanityError>();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.errors(linkedList0);
      linkedList0.add((IbanityError) null);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      List<IbanityError> list0 = synchronization0.getErrors();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      Boolean boolean0 = Boolean.TRUE;
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.customerOnline(boolean0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      Boolean boolean1 = synchronization0.getCustomerOnline();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      Boolean boolean0 = Boolean.valueOf("");
      synchronization_SynchronizationBuilder0.customerOnline(boolean0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Boolean boolean1 = synchronization0.getCustomerOnline();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      synchronization_SynchronizationBuilder0.customerIpAddress("");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      String string0 = synchronization0.getCustomerIpAddress();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      Instant instant0 = MockInstant.now();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.createdAt(instant0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      Instant instant1 = synchronization0.getCreatedAt();
      assertSame(instant1, instant0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      boolean boolean0 = synchronization0.canEqual(synchronization0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Object object0 = new Object();
      boolean boolean0 = synchronization0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      String string0 = synchronization0.getCustomerIpAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      String string0 = synchronization0.getResourceId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Instant instant0 = synchronization0.getCreatedAt();
      assertNull(instant0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      String string0 = synchronization0.getSelfLink();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      String string0 = synchronization0.getRequestId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      String string0 = synchronization0.getSubtype();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      UUID uUID0 = synchronization0.getId();
      assertNull(uUID0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Instant instant0 = synchronization0.getUpdatedAt();
      assertNull(instant0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      UpdatedTransactionsLinks updatedTransactionsLinks0 = synchronization0.getUpdatedTransactionsLinks();
      assertNull(updatedTransactionsLinks0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      String string0 = synchronization0.getStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      String string0 = synchronization0.getResourceType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Boolean boolean0 = synchronization0.getCustomerOnline();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      UpdatedTransactionsLinks updatedTransactionsLinks0 = new UpdatedTransactionsLinks();
      synchronization0.setUpdatedTransactionsLinks(updatedTransactionsLinks0);
      Synchronization synchronization1 = new Synchronization();
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      UpdatedTransactionsLinks updatedTransactionsLinks0 = new UpdatedTransactionsLinks();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.updatedTransactionsLinks(updatedTransactionsLinks0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Synchronization synchronization1 = synchronization_SynchronizationBuilder1.build();
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Synchronization synchronization1 = synchronization_SynchronizationBuilder0.build();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      Instant instant0 = MockInstant.ofEpochSecond(1L);
      synchronization1.setUpdatedAt(instant0);
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Instant instant0 = MockInstant.ofEpochSecond(2486L);
      synchronization_SynchronizationBuilder0.updatedAt(instant0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Synchronization synchronization1 = synchronization_SynchronizationBuilder0.build();
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization synchronization1 = new Synchronization();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      Instant instant0 = MockInstant.now();
      synchronization1.setCreatedAt(instant0);
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization synchronization1 = new Synchronization();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      synchronization1.setSelfLink("synchronization");
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization synchronization1 = new Synchronization();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      synchronization1.setSelfLink("{synchronizationId}");
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.selfLink("<JI\u0001iV=_dy7qr^9(");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Synchronization synchronization1 = synchronization_SynchronizationBuilder1.build();
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertEquals("<JI\u0001iV=_dy7qr^9(", synchronization1.getSelfLink());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization synchronization1 = new Synchronization();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      synchronization1.setCustomerIpAddress("{synchronizationId}");
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization synchronization1 = new Synchronization();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      synchronization1.setCustomerIpAddress("synchronization");
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.customerIpAddress("");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Synchronization synchronization1 = synchronization_SynchronizationBuilder0.build();
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertTrue(boolean0);
      assertEquals("", synchronization1.getCustomerIpAddress());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.resourceType("");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Synchronization synchronization1 = new Synchronization();
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertEquals("", synchronization0.getResourceType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization synchronization1 = new Synchronization();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      synchronization1.setResourceType("synchronization");
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.resourceType("");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Synchronization synchronization1 = synchronization_SynchronizationBuilder0.build();
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertEquals("", synchronization1.getResourceType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization synchronization1 = new Synchronization();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      synchronization1.setResourceId("{synchronizationId}");
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization synchronization1 = new Synchronization();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      synchronization1.setResourceId("synchronization");
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.resourceId("");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Synchronization synchronization1 = synchronization_SynchronizationBuilder0.build();
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertTrue(boolean0);
      assertEquals("", synchronization1.getResourceId());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.subtype("");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Synchronization synchronization1 = synchronization_SynchronizationBuilder0.build();
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertEquals("", synchronization1.getSubtype());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization synchronization1 = new Synchronization();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      synchronization1.setSubtype("synchronization");
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.subtype("{synchronizationId}");
      Synchronization synchronization1 = synchronization_SynchronizationBuilder0.build();
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertEquals("{synchronizationId}", synchronization1.getSubtype());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization synchronization1 = new Synchronization();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      synchronization1.setStatus("{synchronizationId}");
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization synchronization1 = new Synchronization();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      synchronization1.setStatus("synchronization");
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.status("");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Synchronization synchronization1 = synchronization_SynchronizationBuilder0.build();
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertEquals("", synchronization1.getStatus());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Synchronization synchronization1 = synchronization_SynchronizationBuilder0.build();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      LinkedList<IbanityError> linkedList0 = new LinkedList<IbanityError>();
      IbanityError ibanityError0 = new IbanityError();
      linkedList0.add(ibanityError0);
      synchronization0.setErrors(linkedList0);
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.errors((List<IbanityError>) null);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      Synchronization synchronization1 = synchronization_SynchronizationBuilder1.build();
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.errors((List<IbanityError>) null);
      Synchronization synchronization1 = synchronization_SynchronizationBuilder0.build();
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertFalse(synchronization0.equals((Object)synchronization1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.requestId("A)zYU9(C.h@$qfTY|");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Synchronization synchronization1 = synchronization_SynchronizationBuilder1.build();
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertTrue(boolean0);
      assertEquals("A)zYU9(C.h@$qfTY|", synchronization1.getRequestId());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.requestId("");
      Synchronization synchronization1 = synchronization_SynchronizationBuilder1.build();
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertFalse(synchronization1.equals((Object)synchronization0));
      assertEquals("", synchronization1.getRequestId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.requestId("A)zYU9(C.h@$qfTY|");
      Synchronization synchronization1 = synchronization_SynchronizationBuilder1.build();
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertEquals("A)zYU9(C.h@$qfTY|", synchronization1.getRequestId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization synchronization1 = new Synchronization();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      UUID uUID0 = MockUUID.randomUUID();
      synchronization1.setId(uUID0);
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertFalse(synchronization1.equals((Object)synchronization0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      UUID uUID0 = MockUUID.randomUUID();
      synchronization_SynchronizationBuilder0.id(uUID0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Synchronization synchronization1 = synchronization_SynchronizationBuilder0.build();
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization synchronization1 = new Synchronization();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      Boolean boolean0 = Boolean.FALSE;
      synchronization1.setCustomerOnline(boolean0);
      boolean boolean1 = synchronization1.equals(synchronization0);
      assertFalse(synchronization1.equals((Object)synchronization0));
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Synchronization synchronization1 = new Synchronization();
      assertTrue(synchronization1.equals((Object)synchronization0));
      
      Boolean boolean0 = Boolean.FALSE;
      synchronization1.setCustomerOnline(boolean0);
      boolean boolean1 = synchronization0.equals(synchronization1);
      assertFalse(synchronization1.equals((Object)synchronization0));
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Boolean boolean0 = Boolean.valueOf(false);
      synchronization_SynchronizationBuilder0.customerOnline(boolean0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      Synchronization synchronization1 = synchronization_SynchronizationBuilder0.build();
      boolean boolean1 = synchronization1.equals(synchronization0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      boolean boolean0 = synchronization0.equals(synchronization_SynchronizationBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      boolean boolean0 = synchronization0.equals(synchronization0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Clock clock0 = MockClock.systemUTC();
      Instant instant0 = MockInstant.now(clock0);
      synchronization_SynchronizationBuilder0.updatedAt(instant0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      synchronization0.hashCode();
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Instant instant0 = MockInstant.ofEpochSecond((-1L));
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.createdAt(instant0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      synchronization0.hashCode();
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.selfLink(",.fre.xg?^dIa\rtbo");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      synchronization0.hashCode();
      assertEquals(",.fre.xg?^dIa\rtbo", synchronization0.getSelfLink());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.customerIpAddress("");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      synchronization0.hashCode();
      assertEquals("", synchronization0.getCustomerIpAddress());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.resourceType("com.ibanity.apis.client.products.xs2a.models.links.UpdatedTransactionsLinks$UpdatedTransactionsLinksBuilder");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      synchronization0.hashCode();
      assertEquals("com.ibanity.apis.client.products.xs2a.models.links.UpdatedTransactionsLinks$UpdatedTransactionsLinksBuilder", synchronization0.getResourceType());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      synchronization0.setResourceId("");
      synchronization0.hashCode();
      assertEquals("", synchronization0.getResourceId());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.subtype("{synchronizationId}");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      synchronization0.hashCode();
      assertEquals("{synchronizationId}", synchronization0.getSubtype());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.status("");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      synchronization0.hashCode();
      assertEquals("", synchronization0.getStatus());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      synchronization_SynchronizationBuilder0.requestId("A)zYU9(C.h@$qfTY|");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      synchronization0.hashCode();
      assertEquals("A)zYU9(C.h@$qfTY|", synchronization0.getRequestId());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Boolean boolean0 = Boolean.valueOf(false);
      synchronization_SynchronizationBuilder0.customerOnline(boolean0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      synchronization0.hashCode();
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      synchronization0.setSubtype("");
      String string0 = synchronization0.getSubtype();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Instant instant0 = MockInstant.now();
      synchronization0.setUpdatedAt(instant0);
      Synchronization synchronization1 = new Synchronization();
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      UpdatedTransactionsLinks updatedTransactionsLinks0 = new UpdatedTransactionsLinks();
      synchronization0.setUpdatedTransactionsLinks(updatedTransactionsLinks0);
      Synchronization synchronization1 = new Synchronization();
      boolean boolean0 = synchronization1.equals(synchronization0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      Instant instant0 = MockInstant.now();
      synchronization0.setCreatedAt(instant0);
      Synchronization synchronization1 = new Synchronization();
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      String string0 = synchronization0.toString();
      assertEquals("Synchronization(id=null, requestId=null, errors=[], status=null, subtype=null, resourceId=null, resourceType=null, customerOnline=null, customerIpAddress=null, selfLink=null, createdAt=null, updatedAt=null, updatedTransactionsLinks=null)", string0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Synchronization synchronization0 = new Synchronization();
      UUID uUID0 = MockUUID.randomUUID();
      synchronization0.setId(uUID0);
      Synchronization synchronization1 = new Synchronization();
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      UUID uUID0 = MockUUID.randomUUID();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.id(uUID0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      synchronization0.hashCode();
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      UpdatedTransactionsLinks updatedTransactionsLinks0 = new UpdatedTransactionsLinks();
      synchronization_SynchronizationBuilder0.updatedTransactionsLinks(updatedTransactionsLinks0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder0.build();
      synchronization0.hashCode();
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      Instant instant0 = MockInstant.ofEpochSecond((-1568L));
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.createdAt(instant0);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      Synchronization synchronization1 = synchronization_SynchronizationBuilder1.build();
      boolean boolean0 = synchronization0.equals(synchronization1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.errors((List<IbanityError>) null);
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      synchronization0.hashCode();
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = Synchronization.builder();
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder1 = synchronization_SynchronizationBuilder0.customerIpAddress("](ACDq{3]uMbpr");
      Synchronization synchronization0 = synchronization_SynchronizationBuilder1.build();
      String string0 = synchronization0.getCustomerIpAddress();
      assertNotNull(string0);
      assertEquals("](ACDq{3]uMbpr", string0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      Synchronization.SynchronizationBuilder synchronization_SynchronizationBuilder0 = new Synchronization.SynchronizationBuilder();
      String string0 = synchronization_SynchronizationBuilder0.toString();
      assertEquals("Synchronization.SynchronizationBuilder(id=null, requestId=null, errors$value=null, status=null, subtype=null, resourceId=null, resourceType=null, customerOnline=null, customerIpAddress=null, selfLink=null, createdAt=null, updatedAt=null, updatedTransactionsLinks=null)", string0);
  }
}
