/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 11:21:03 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.models.create;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.models.create.CustomerAccessTokenCreationQuery;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CustomerAccessTokenCreationQuery_ESTest extends CustomerAccessTokenCreationQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0 = CustomerAccessTokenCreationQuery.builder();
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder1 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.applicationCustomerReference("CustomerAccessTokenCreationQuery(applicationCustomerReference=");
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder1.build();
      String string0 = customerAccessTokenCreationQuery0.getApplicationCustomerReference();
      assertEquals("CustomerAccessTokenCreationQuery(applicationCustomerReference=", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = new CustomerAccessTokenCreationQuery("", hashMap0);
      String string0 = customerAccessTokenCreationQuery0.getApplicationCustomerReference();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = new CustomerAccessTokenCreationQuery("H/Ic", hashMap0);
      Map<String, String> map0 = customerAccessTokenCreationQuery0.getAdditionalHeaders();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = new CustomerAccessTokenCreationQuery("H/Ic", hashMap0);
      hashMap0.put("H/Ic", "");
      Map<String, String> map0 = customerAccessTokenCreationQuery0.getAdditionalHeaders();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0 = new CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder();
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.build();
      String string0 = customerAccessTokenCreationQuery0.getApplicationCustomerReference();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = new CustomerAccessTokenCreationQuery("h", (Map<String, String>) null);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery1 = new CustomerAccessTokenCreationQuery("h", hashMap0);
      boolean boolean0 = customerAccessTokenCreationQuery1.equals(customerAccessTokenCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = new CustomerAccessTokenCreationQuery("", (Map<String, String>) null);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery1 = new CustomerAccessTokenCreationQuery("", hashMap0);
      boolean boolean0 = customerAccessTokenCreationQuery0.equals(customerAccessTokenCreationQuery1);
      assertFalse(boolean0);
      assertFalse(customerAccessTokenCreationQuery1.equals((Object)customerAccessTokenCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0 = CustomerAccessTokenCreationQuery.builder();
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.build();
      Map<String, String> map0 = customerAccessTokenCreationQuery0.getAdditionalHeaders();
      assertNotNull(map0);
      
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery1 = new CustomerAccessTokenCreationQuery("", map0);
      boolean boolean0 = customerAccessTokenCreationQuery0.equals(customerAccessTokenCreationQuery1);
      assertFalse(boolean0);
      assertFalse(customerAccessTokenCreationQuery1.equals((Object)customerAccessTokenCreationQuery0));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0 = CustomerAccessTokenCreationQuery.builder();
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder1 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.applicationCustomerReference("CustomerAccessTokenCreationQuery(applicationCustomerReference=");
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder1.build();
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery1 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder1.build();
      boolean boolean0 = customerAccessTokenCreationQuery1.equals(customerAccessTokenCreationQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0 = CustomerAccessTokenCreationQuery.builder();
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.build();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      boolean boolean0 = customerAccessTokenCreationQuery0.equals(hashMap0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0 = new CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder();
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.build();
      boolean boolean0 = customerAccessTokenCreationQuery0.equals(customerAccessTokenCreationQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0 = CustomerAccessTokenCreationQuery.builder();
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.build();
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery1 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.build();
      boolean boolean0 = customerAccessTokenCreationQuery1.equals(customerAccessTokenCreationQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = new CustomerAccessTokenCreationQuery("", (Map<String, String>) null);
      customerAccessTokenCreationQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0 = new CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder();
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.build();
      customerAccessTokenCreationQuery0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0 = CustomerAccessTokenCreationQuery.builder();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder1 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.additionalHeaders(hashMap0);
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder1.build();
      assertNull(customerAccessTokenCreationQuery0.getApplicationCustomerReference());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0 = CustomerAccessTokenCreationQuery.builder();
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.build();
      String string0 = customerAccessTokenCreationQuery0.toString();
      assertEquals("CustomerAccessTokenCreationQuery(applicationCustomerReference=null, additionalHeaders={})", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = new CustomerAccessTokenCreationQuery("h", (Map<String, String>) null);
      Map<String, String> map0 = customerAccessTokenCreationQuery0.getAdditionalHeaders();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0 = new CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder();
      customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.applicationCustomerReference("");
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = new CustomerAccessTokenCreationQuery("h", (Map<String, String>) null);
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery1 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.build();
      boolean boolean0 = customerAccessTokenCreationQuery1.equals(customerAccessTokenCreationQuery0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0 = CustomerAccessTokenCreationQuery.builder();
      String string0 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.toString();
      assertEquals("CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder(applicationCustomerReference=null, additionalHeaders$value=null)", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0 = new CustomerAccessTokenCreationQuery.CustomerAccessTokenCreationQueryBuilder();
      customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.additionalHeaders((Map<String, String>) null);
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery0 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.build();
      CustomerAccessTokenCreationQuery customerAccessTokenCreationQuery1 = customerAccessTokenCreationQuery_CustomerAccessTokenCreationQueryBuilder0.build();
      boolean boolean0 = customerAccessTokenCreationQuery0.equals(customerAccessTokenCreationQuery1);
      assertTrue(boolean0);
  }
}
