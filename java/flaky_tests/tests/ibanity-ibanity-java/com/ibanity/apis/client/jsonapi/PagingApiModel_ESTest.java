/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 10:41:50 GMT 2022
 */

package com.ibanity.apis.client.jsonapi;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.jsonapi.PagingApiModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PagingApiModel_ESTest extends PagingApiModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      pagingApiModel_PagingApiModelBuilder0.pageNumber((-1088L));
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      pagingApiModel0.hashCode();
      assertEquals(0L, pagingApiModel0.getPageSize());
      assertEquals((-1088L), pagingApiModel0.getPageNumber());
      assertEquals(0L, pagingApiModel0.getLimit());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.pageSize((-1907L));
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      pagingApiModel0.hashCode();
      assertEquals(0L, pagingApiModel0.getLimit());
      assertEquals((-1907L), pagingApiModel0.getPageSize());
      assertEquals(0L, pagingApiModel0.getTotalEntries());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.totalEntries((-1088L));
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      pagingApiModel0.hashCode();
      assertEquals((-1088L), pagingApiModel0.getTotalEntries());
      assertEquals(0L, pagingApiModel0.getTotalPages());
      assertEquals(0L, pagingApiModel0.getPageSize());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      pagingApiModel_PagingApiModelBuilder0.totalPages((-1088L));
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      pagingApiModel0.hashCode();
      assertEquals((-1088L), pagingApiModel0.getTotalPages());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      pagingApiModel_PagingApiModelBuilder0.limit((-2777L));
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      pagingApiModel0.hashCode();
      assertEquals((-2777L), pagingApiModel0.getLimit());
      assertEquals(0L, pagingApiModel0.getTotalPages());
      assertEquals(0L, pagingApiModel0.getTotalEntries());
      assertEquals(0L, pagingApiModel0.getPageSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.pageNumber((-2793L));
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder1.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertEquals(0L, pagingApiModel1.getLimit());
      assertEquals((-2793L), pagingApiModel1.getPageNumber());
      assertEquals(0L, pagingApiModel1.getPageSize());
      assertFalse(pagingApiModel1.equals((Object)pagingApiModel0));
      assertEquals(0L, pagingApiModel1.getTotalEntries());
      assertEquals(0L, pagingApiModel1.getTotalPages());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.pageSize(4691L);
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder1.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertEquals(4691L, pagingApiModel1.getPageSize());
      assertEquals(0L, pagingApiModel1.getTotalEntries());
      assertEquals(0L, pagingApiModel1.getTotalPages());
      assertEquals(0L, pagingApiModel1.getPageNumber());
      assertFalse(pagingApiModel1.equals((Object)pagingApiModel0));
      assertEquals(0L, pagingApiModel1.getLimit());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      pagingApiModel_PagingApiModelBuilder0.totalEntries((-2793L));
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      PagingApiModel pagingApiModel1 = new PagingApiModel();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertEquals((-2793L), pagingApiModel0.getTotalEntries());
      assertEquals(0L, pagingApiModel0.getPageSize());
      assertEquals(0L, pagingApiModel0.getLimit());
      assertEquals(0L, pagingApiModel0.getTotalPages());
      assertFalse(boolean0);
      assertEquals(0L, pagingApiModel0.getPageNumber());
      assertFalse(pagingApiModel1.equals((Object)pagingApiModel0));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.totalPages(342L);
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder1.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertEquals(342L, pagingApiModel1.getTotalPages());
      assertEquals(0L, pagingApiModel1.getLimit());
      assertFalse(boolean0);
      assertEquals(0L, pagingApiModel1.getPageSize());
      assertFalse(pagingApiModel1.equals((Object)pagingApiModel0));
      assertEquals(0L, pagingApiModel1.getPageNumber());
      assertEquals(0L, pagingApiModel1.getTotalEntries());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.limit(1L);
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder1.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertFalse(boolean0);
      assertEquals(0L, pagingApiModel1.getPageSize());
      assertEquals(0L, pagingApiModel1.getPageNumber());
      assertFalse(pagingApiModel1.equals((Object)pagingApiModel0));
      assertEquals(0L, pagingApiModel1.getTotalPages());
      assertEquals(0L, pagingApiModel1.getTotalEntries());
      assertEquals(1L, pagingApiModel1.getLimit());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      pagingApiModel_PagingApiModelBuilder0.totalPages(1L);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      long long0 = pagingApiModel0.getTotalPages();
      assertEquals(0L, pagingApiModel0.getTotalEntries());
      assertEquals(0L, pagingApiModel0.getLimit());
      assertEquals(1L, long0);
      assertEquals(0L, pagingApiModel0.getPageSize());
      assertEquals(0L, pagingApiModel0.getPageNumber());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      pagingApiModel_PagingApiModelBuilder0.totalPages((-1L));
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      long long0 = pagingApiModel0.getTotalPages();
      assertEquals(0L, pagingApiModel0.getTotalEntries());
      assertEquals(0L, pagingApiModel0.getPageSize());
      assertEquals(0L, pagingApiModel0.getPageNumber());
      assertEquals(0L, pagingApiModel0.getLimit());
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      pagingApiModel_PagingApiModelBuilder0.totalEntries(4298L);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      long long0 = pagingApiModel0.getTotalEntries();
      assertEquals(4298L, long0);
      assertEquals(0L, pagingApiModel0.getLimit());
      assertEquals(0L, pagingApiModel0.getPageSize());
      assertEquals(0L, pagingApiModel0.getPageNumber());
      assertEquals(0L, pagingApiModel0.getTotalPages());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      pagingApiModel_PagingApiModelBuilder0.totalEntries((-1L));
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      long long0 = pagingApiModel0.getTotalEntries();
      assertEquals(0L, pagingApiModel0.getPageNumber());
      assertEquals(0L, pagingApiModel0.getPageSize());
      assertEquals(0L, pagingApiModel0.getLimit());
      assertEquals((-1L), long0);
      assertEquals(0L, pagingApiModel0.getTotalPages());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      pagingApiModel_PagingApiModelBuilder0.pageSize(3770L);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      long long0 = pagingApiModel0.getPageSize();
      assertEquals(0L, pagingApiModel0.getLimit());
      assertEquals(3770L, long0);
      assertEquals(0L, pagingApiModel0.getPageNumber());
      assertEquals(0L, pagingApiModel0.getTotalEntries());
      assertEquals(0L, pagingApiModel0.getTotalPages());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      pagingApiModel_PagingApiModelBuilder0.pageSize((-1L));
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      long long0 = pagingApiModel0.getPageSize();
      assertEquals(0L, pagingApiModel0.getLimit());
      assertEquals(0L, pagingApiModel0.getTotalPages());
      assertEquals(0L, pagingApiModel0.getTotalEntries());
      assertEquals((-1L), long0);
      assertEquals(0L, pagingApiModel0.getPageNumber());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.pageNumber(4090L);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      long long0 = pagingApiModel0.getPageNumber();
      assertEquals(0L, pagingApiModel0.getLimit());
      assertEquals(0L, pagingApiModel0.getTotalEntries());
      assertEquals(4090L, long0);
      assertEquals(0L, pagingApiModel0.getPageSize());
      assertEquals(0L, pagingApiModel0.getTotalPages());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      pagingApiModel_PagingApiModelBuilder0.pageNumber((-1088L));
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      long long0 = pagingApiModel0.getPageNumber();
      assertEquals(0L, pagingApiModel0.getTotalEntries());
      assertEquals((-1088L), long0);
      assertEquals(0L, pagingApiModel0.getTotalPages());
      assertEquals(0L, pagingApiModel0.getLimit());
      assertEquals(0L, pagingApiModel0.getPageSize());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      pagingApiModel_PagingApiModelBuilder0.limit(664L);
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      long long0 = pagingApiModel0.getLimit();
      assertEquals(664L, long0);
      assertEquals(0L, pagingApiModel0.getPageNumber());
      assertEquals(0L, pagingApiModel0.getPageSize());
      assertEquals(0L, pagingApiModel0.getTotalPages());
      assertEquals(0L, pagingApiModel0.getTotalEntries());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.limit((-1L));
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      long long0 = pagingApiModel0.getLimit();
      assertEquals((-1L), long0);
      assertEquals(0L, pagingApiModel0.getTotalPages());
      assertEquals(0L, pagingApiModel0.getPageSize());
      assertEquals(0L, pagingApiModel0.getPageNumber());
      assertEquals(0L, pagingApiModel0.getTotalEntries());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.before(", pageNumber=");
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      String string0 = pagingApiModel0.getBefore();
      assertEquals(", pageNumber=", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      pagingApiModel_PagingApiModelBuilder0.before("");
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      String string0 = pagingApiModel0.getBefore();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.after("tbZBm!^8ztpQGf/b\"U6");
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      String string0 = pagingApiModel0.getAfter();
      assertEquals("tbZBm!^8ztpQGf/b\"U6", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      pagingApiModel_PagingApiModelBuilder0.after("");
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      String string0 = pagingApiModel0.getAfter();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      boolean boolean0 = pagingApiModel0.canEqual(pagingApiModel0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      boolean boolean0 = pagingApiModel0.canEqual(pagingApiModel_PagingApiModelBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      long long0 = pagingApiModel0.getLimit();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      long long0 = pagingApiModel0.getTotalPages();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      String string0 = pagingApiModel0.getBefore();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      String string0 = pagingApiModel0.getAfter();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      long long0 = pagingApiModel0.getTotalEntries();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      long long0 = pagingApiModel0.getPageNumber();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      long long0 = pagingApiModel0.getPageSize();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.after("mEA");
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder0.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      pagingApiModel_PagingApiModelBuilder0.after("");
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder0.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertFalse(pagingApiModel1.equals((Object)pagingApiModel0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.after("yHO:b]+NXH5bdLf");
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder1.build();
      boolean boolean0 = pagingApiModel1.equals(pagingApiModel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.before("");
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      PagingApiModel pagingApiModel1 = new PagingApiModel();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.before("nTlo& YN");
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder1.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertFalse(pagingApiModel1.equals((Object)pagingApiModel0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.before("y1SX38] ~(i");
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder1.build();
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder1.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.pageNumber(6937L);
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder1.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertEquals(6937L, pagingApiModel1.getPageNumber());
      assertEquals(0L, pagingApiModel1.getLimit());
      assertEquals(0L, pagingApiModel1.getPageSize());
      assertEquals(0L, pagingApiModel1.getTotalEntries());
      assertEquals(0L, pagingApiModel1.getTotalPages());
      assertFalse(pagingApiModel1.equals((Object)pagingApiModel0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.pageSize((-461L));
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder1.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertEquals((-461L), pagingApiModel1.getPageSize());
      assertEquals(0L, pagingApiModel1.getLimit());
      assertFalse(boolean0);
      assertEquals(0L, pagingApiModel1.getPageNumber());
      assertEquals(0L, pagingApiModel1.getTotalEntries());
      assertEquals(0L, pagingApiModel1.getTotalPages());
      assertFalse(pagingApiModel1.equals((Object)pagingApiModel0));
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.totalEntries((-180L));
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder1.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertEquals(0L, pagingApiModel1.getTotalPages());
      assertFalse(pagingApiModel1.equals((Object)pagingApiModel0));
      assertEquals(0L, pagingApiModel1.getLimit());
      assertFalse(boolean0);
      assertEquals(0L, pagingApiModel1.getPageSize());
      assertEquals(0L, pagingApiModel1.getPageNumber());
      assertEquals((-180L), pagingApiModel1.getTotalEntries());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      pagingApiModel_PagingApiModelBuilder0.totalPages((-245L));
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder0.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertEquals(0L, pagingApiModel1.getPageSize());
      assertEquals(0L, pagingApiModel1.getPageNumber());
      assertEquals(0L, pagingApiModel1.getLimit());
      assertFalse(boolean0);
      assertEquals(0L, pagingApiModel1.getTotalEntries());
      assertEquals((-245L), pagingApiModel1.getTotalPages());
      assertFalse(pagingApiModel1.equals((Object)pagingApiModel0));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = PagingApiModel.builder();
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder1 = pagingApiModel_PagingApiModelBuilder0.limit((-461L));
      PagingApiModel pagingApiModel1 = pagingApiModel_PagingApiModelBuilder1.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel1);
      assertFalse(pagingApiModel1.equals((Object)pagingApiModel0));
      assertEquals(0L, pagingApiModel1.getTotalPages());
      assertFalse(boolean0);
      assertEquals((-461L), pagingApiModel1.getLimit());
      assertEquals(0L, pagingApiModel1.getPageNumber());
      assertEquals(0L, pagingApiModel1.getPageSize());
      assertEquals(0L, pagingApiModel1.getTotalEntries());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel_PagingApiModelBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      boolean boolean0 = pagingApiModel0.equals(pagingApiModel0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      pagingApiModel_PagingApiModelBuilder0.after("");
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      pagingApiModel0.hashCode();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      pagingApiModel_PagingApiModelBuilder0.before("");
      PagingApiModel pagingApiModel0 = pagingApiModel_PagingApiModelBuilder0.build();
      pagingApiModel0.hashCode();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PagingApiModel.PagingApiModelBuilder pagingApiModel_PagingApiModelBuilder0 = new PagingApiModel.PagingApiModelBuilder();
      String string0 = pagingApiModel_PagingApiModelBuilder0.toString();
      assertEquals("PagingApiModel.PagingApiModelBuilder(limit=0, before=null, after=null, totalPages=0, totalEntries=0, pageSize=0, pageNumber=0)", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      PagingApiModel pagingApiModel0 = new PagingApiModel();
      String string0 = pagingApiModel0.toString();
      assertEquals("PagingApiModel(limit=0, before=null, after=null, totalPages=0, totalEntries=0, pageSize=0, pageNumber=0)", string0);
  }
}
