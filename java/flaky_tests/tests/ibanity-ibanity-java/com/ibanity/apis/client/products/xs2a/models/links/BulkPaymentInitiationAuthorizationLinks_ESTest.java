/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 11:34:36 GMT 2022
 */

package com.ibanity.apis.client.products.xs2a.models.links;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibanity.apis.client.products.xs2a.models.links.BulkPaymentInitiationAuthorizationLinks;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BulkPaymentInitiationAuthorizationLinks_ESTest extends BulkPaymentInitiationAuthorizationLinks_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0 = BulkPaymentInitiationAuthorizationLinks.builder();
      bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.redirect("N<B?39!Tabbf+&0");
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.build();
      String string0 = bulkPaymentInitiationAuthorizationLinks0.getRedirect();
      assertEquals("N<B?39!Tabbf+&0", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0 = BulkPaymentInitiationAuthorizationLinks.builder();
      BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder1 = bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.redirect("");
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder1.build();
      String string0 = bulkPaymentInitiationAuthorizationLinks0.getRedirect();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0 = BulkPaymentInitiationAuthorizationLinks.builder();
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationAuthorizationLinks0.canEqual(bulkPaymentInitiationAuthorizationLinks0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0 = new BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder();
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.build();
      Object object0 = new Object();
      boolean boolean0 = bulkPaymentInitiationAuthorizationLinks0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0 = BulkPaymentInitiationAuthorizationLinks.builder();
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.build();
      String string0 = bulkPaymentInitiationAuthorizationLinks0.getRedirect();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0 = BulkPaymentInitiationAuthorizationLinks.builder();
      bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.redirect("com.ibanity.apis.client.products.xs2a.models.links.BulkPaymentInitiationAuthorizationLinks");
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.build();
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks1 = bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationAuthorizationLinks0.equals(bulkPaymentInitiationAuthorizationLinks1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0 = BulkPaymentInitiationAuthorizationLinks.builder();
      BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder1 = bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.redirect("");
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder1.build();
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks1 = new BulkPaymentInitiationAuthorizationLinks();
      boolean boolean0 = bulkPaymentInitiationAuthorizationLinks1.equals(bulkPaymentInitiationAuthorizationLinks0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = new BulkPaymentInitiationAuthorizationLinks();
      boolean boolean0 = bulkPaymentInitiationAuthorizationLinks0.equals("BulkPaymentInitiationAuthorizationLinks(redirect=null)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0 = BulkPaymentInitiationAuthorizationLinks.builder();
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.build();
      boolean boolean0 = bulkPaymentInitiationAuthorizationLinks0.equals(bulkPaymentInitiationAuthorizationLinks0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = new BulkPaymentInitiationAuthorizationLinks();
      bulkPaymentInitiationAuthorizationLinks0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0 = BulkPaymentInitiationAuthorizationLinks.builder();
      bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.redirect("s!88}~gtm");
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.build();
      bulkPaymentInitiationAuthorizationLinks0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0 = BulkPaymentInitiationAuthorizationLinks.builder();
      String string0 = bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.toString();
      assertEquals("BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder(redirect=null)", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0 = BulkPaymentInitiationAuthorizationLinks.builder();
      bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.redirect("");
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.build();
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks1 = new BulkPaymentInitiationAuthorizationLinks();
      boolean boolean0 = bulkPaymentInitiationAuthorizationLinks0.equals(bulkPaymentInitiationAuthorizationLinks1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = new BulkPaymentInitiationAuthorizationLinks();
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks1 = new BulkPaymentInitiationAuthorizationLinks();
      boolean boolean0 = bulkPaymentInitiationAuthorizationLinks0.equals(bulkPaymentInitiationAuthorizationLinks1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BulkPaymentInitiationAuthorizationLinks.BulkPaymentInitiationAuthorizationLinksBuilder bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0 = BulkPaymentInitiationAuthorizationLinks.builder();
      BulkPaymentInitiationAuthorizationLinks bulkPaymentInitiationAuthorizationLinks0 = bulkPaymentInitiationAuthorizationLinks_BulkPaymentInitiationAuthorizationLinksBuilder0.build();
      String string0 = bulkPaymentInitiationAuthorizationLinks0.toString();
      assertEquals("BulkPaymentInitiationAuthorizationLinks(redirect=null)", string0);
  }
}
