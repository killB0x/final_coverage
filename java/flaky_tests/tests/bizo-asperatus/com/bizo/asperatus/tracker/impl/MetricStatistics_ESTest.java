/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 12:28:47 GMT 2022
 */

package com.bizo.asperatus.tracker.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.bizo.asperatus.model.Unit;
import com.bizo.asperatus.tracker.impl.MetricStatistics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MetricStatistics_ESTest extends MetricStatistics_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Unit unit0 = Unit.Kilobits;
      MetricStatistics metricStatistics0 = new MetricStatistics(unit0);
      metricStatistics0.getUnit();
      assertEquals(0.0F, metricStatistics0.getSum(), 0.01F);
      assertEquals(3.4028235E38F, metricStatistics0.getMin(), 0.01F);
      assertEquals(1.4E-45F, metricStatistics0.getMax(), 0.01F);
      assertEquals(0L, metricStatistics0.getSamples());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Unit unit0 = Unit.Terabytes;
      Integer integer0 = Integer.valueOf(3814);
      MetricStatistics metricStatistics0 = new MetricStatistics(unit0);
      metricStatistics0.add(integer0);
      float float0 = metricStatistics0.getSum();
      assertEquals(3814.0F, metricStatistics0.getMax(), 0.01F);
      assertEquals(3814.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Unit unit0 = Unit.BitsSecond;
      MetricStatistics metricStatistics0 = new MetricStatistics(unit0);
      Long long0 = Long.getLong("WEE#nH&e2e1j$/p\"", (-1L));
      metricStatistics0.add(long0);
      float float0 = metricStatistics0.getSum();
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Unit unit0 = Unit.BitsSecond;
      MetricStatistics metricStatistics0 = new MetricStatistics(unit0);
      Long long0 = Long.getLong("WEE#nH&e2e1j$/p\"", (-1L));
      metricStatistics0.add(long0);
      long long1 = metricStatistics0.getSamples();
      assertEquals((-1.0F), metricStatistics0.getSum(), 0.01F);
      assertEquals(1L, long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Unit unit0 = Unit.BitsSecond;
      MetricStatistics metricStatistics0 = new MetricStatistics(unit0);
      Integer integer0 = Integer.getInteger("Gigabits/Second", (-1));
      metricStatistics0.add(integer0);
      float float0 = metricStatistics0.getMin();
      assertEquals((-1.0F), metricStatistics0.getSum(), 0.01F);
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Unit unit0 = Unit.Terabytes;
      MetricStatistics metricStatistics0 = new MetricStatistics(unit0);
      // Undeclared exception!
      try { 
        metricStatistics0.add((Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.bizo.asperatus.tracker.impl.MetricStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Unit unit0 = Unit.Terabytes;
      MetricStatistics metricStatistics0 = new MetricStatistics(unit0);
      // Undeclared exception!
      try { 
        metricStatistics0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/builder/HashCodeBuilder
         //
         verifyException("com.bizo.asperatus.tracker.impl.MetricStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Unit unit0 = Unit.BitsSecond;
      MetricStatistics metricStatistics0 = new MetricStatistics(unit0);
      float float0 = metricStatistics0.getSum();
      assertEquals(0L, metricStatistics0.getSamples());
      assertEquals(3.4028235E38F, metricStatistics0.getMin(), 0.01F);
      assertEquals(1.4E-45F, metricStatistics0.getMax(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Unit unit0 = Unit.Terabytes;
      MetricStatistics metricStatistics0 = new MetricStatistics(unit0);
      float float0 = metricStatistics0.getMin();
      assertEquals(0L, metricStatistics0.getSamples());
      assertEquals(1.4E-45F, metricStatistics0.getMax(), 0.01F);
      assertEquals(3.4028235E38F, float0, 0.01F);
      assertEquals(0.0F, metricStatistics0.getSum(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Unit unit0 = Unit.BitsSecond;
      MetricStatistics metricStatistics0 = new MetricStatistics(unit0);
      float float0 = metricStatistics0.getMax();
      assertEquals(3.4028235E38F, metricStatistics0.getMin(), 0.01F);
      assertEquals(1.4E-45F, float0, 0.01F);
      assertEquals(0.0F, metricStatistics0.getSum(), 0.01F);
      assertEquals(0L, metricStatistics0.getSamples());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MetricStatistics metricStatistics0 = new MetricStatistics((Unit) null);
      metricStatistics0.getUnit();
      assertEquals(0L, metricStatistics0.getSamples());
      assertEquals(3.4028235E38F, metricStatistics0.getMin(), 0.01F);
      assertEquals(1.4E-45F, metricStatistics0.getMax(), 0.01F);
      assertEquals(0.0F, metricStatistics0.getSum(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Unit unit0 = Unit.Terabytes;
      MetricStatistics metricStatistics0 = new MetricStatistics(unit0);
      long long0 = metricStatistics0.getSamples();
      assertEquals(0L, long0);
      assertEquals(0.0F, metricStatistics0.getSum(), 0.01F);
      assertEquals(3.4028235E38F, metricStatistics0.getMin(), 0.01F);
      assertEquals(1.4E-45F, metricStatistics0.getMax(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Unit unit0 = Unit.Terabytes;
      MetricStatistics metricStatistics0 = new MetricStatistics(unit0);
      metricStatistics0.add(0L);
      float float0 = metricStatistics0.getMin();
      assertEquals(1L, metricStatistics0.getSamples());
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Unit unit0 = Unit.Seconds;
      MetricStatistics metricStatistics0 = new MetricStatistics(unit0);
      // Undeclared exception!
      try { 
        metricStatistics0.equals(unit0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/builder/EqualsBuilder
         //
         verifyException("com.bizo.asperatus.tracker.impl.MetricStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MetricStatistics metricStatistics0 = new MetricStatistics((Unit) null);
      String string0 = metricStatistics0.toString();
      assertEquals("MStats[unit:null,samples=0,sum=0.00,min=340282346638528860000000000000000000000.00,max=0.00]", string0);
      assertEquals(1.4E-45F, metricStatistics0.getMax(), 0.01F);
  }
}
