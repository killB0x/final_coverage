/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Nov 02 12:49:37 GMT 2022
 */

package com.github.dkellenb.formulaevaluator.mapping;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class GenericTermFactory_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.github.dkellenb.formulaevaluator.mapping.GenericTermFactory"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GenericTermFactory_ESTest_scaffolding.class.getClassLoader() ,
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalRandomFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalIfFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.AllBigDecimalFunctions",
      "com.github.dkellenb.formulaevaluator.mapping.BigDecimalTermFactory",
      "com.github.dkellenb.formulaevaluator.term.operator.GenericMultiplicationOperation",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalCeilingFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalSquareRootFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.operator.GenericStackableOperatorTerm",
      "com.github.dkellenb.formulaevaluator.definition.Function",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalFloorFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.operator.bigdecimal.BigDecimalEqualOperator",
      "com.github.dkellenb.formulaevaluator.term.operator.bigdecimal.BigDecimalSmallerOperator",
      "com.github.dkellenb.formulaevaluator.definition.Constant",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalNaturalLogarithmFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.Term",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimal10LogarithmFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.operator.bigdecimal.BigDecimalGreaterEqualOperator",
      "com.github.dkellenb.formulaevaluator.term.function.GenericFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.value.Variable",
      "com.github.dkellenb.formulaevaluator.term.operator.bigdecimal.BigDecimalExponentiationOperator",
      "com.github.dkellenb.formulaevaluator.term.operator.bigdecimal.BigDecimalSmallerEqualOperator",
      "com.github.dkellenb.formulaevaluator.mapping.TermFactory$FunctionTermSupplier",
      "com.github.dkellenb.formulaevaluator.term.operator.GenericExponentiationOperatorTerm",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalMaxFunctionTerm",
      "com.github.dkellenb.formulaevaluator.mapping.TermFactory",
      "com.github.dkellenb.formulaevaluator.term.operator.bigdecimal.BigDecimalGreaterOperator",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalHyperbolicTangentFunctionTerm",
      "com.github.dkellenb.formulaevaluator.definition.Operator",
      "com.github.dkellenb.formulaevaluator.term.operator.bigdecimal.BigDecimalModuloOperator",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalHyperbolicSinusFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.function.FunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.operator.OperatorTerm",
      "com.github.dkellenb.formulaevaluator.term.operator.bigdecimal.BigDecimalOperator",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalDegreesFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalTangentFunctionTerm",
      "com.github.dkellenb.formulaevaluator.mapping.GenericTermFactory",
      "com.github.dkellenb.formulaevaluator.term.operator.GenericDivisionOperator",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalRoundFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.operator.bigdecimal.BigDecimalNotEqualOperator",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalNotFunctionTerm",
      "com.github.dkellenb.formulaevaluator.mapping.TermFactory$OperatorTermSupplier",
      "com.github.dkellenb.formulaevaluator.term.operator.GenericOperatorTerm",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalCosinusFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalRadiansFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalFunction",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalAbsoluteFunctionTerm",
      "com.github.dkellenb.formulaevaluator.exceptions.FormulaEvaluatorNullArgumentException",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalSinusFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.operator.GenericModuloOperator",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalHyberbolicCosinusFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.value.GenericVariable",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.BigDecimalMinFunctionTerm",
      "com.github.dkellenb.formulaevaluator.term.value.ConstantTerm"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GenericTermFactory_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.github.dkellenb.formulaevaluator.mapping.GenericTermFactory",
      "com.github.dkellenb.formulaevaluator.definition.Constant",
      "com.github.dkellenb.formulaevaluator.definition.Operator",
      "com.github.dkellenb.formulaevaluator.definition.Function",
      "com.github.dkellenb.formulaevaluator.mapping.BigDecimalTermFactory",
      "com.github.dkellenb.formulaevaluator.term.function.bigdecimal.AllBigDecimalFunctions",
      "com.github.dkellenb.formulaevaluator.term.value.ConstantTerm",
      "com.github.dkellenb.formulaevaluator.mapping.DoubleTermFactory",
      "com.github.dkellenb.formulaevaluator.term.function.doubletype.AllDoubleFunctions",
      "com.github.dkellenb.formulaevaluator.term.value.GenericVariable"
    );
  }
}
