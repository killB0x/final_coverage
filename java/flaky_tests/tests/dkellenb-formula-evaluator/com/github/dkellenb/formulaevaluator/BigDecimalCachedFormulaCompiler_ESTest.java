/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 13:36:42 GMT 2022
 */

package com.github.dkellenb.formulaevaluator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.dkellenb.formulaevaluator.BigDecimalCachedFormulaCompiler;
import com.github.dkellenb.formulaevaluator.term.Term;
import java.math.BigDecimal;
import java.util.EmptyStackException;
import java.util.LinkedHashSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BigDecimalCachedFormulaCompiler_ESTest extends BigDecimalCachedFormulaCompiler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      // Undeclared exception!
      try { 
        BigDecimalCachedFormulaCompiler.getTerm("jJCV{(p", linkedHashSet0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown operator '{' at position 5
         //
         verifyException("com.github.dkellenb.formulaevaluator.FormulaCompiler$Tokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      // Undeclared exception!
      try { 
        BigDecimalCachedFormulaCompiler.getTerm("", linkedHashSet0);
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      // Undeclared exception!
      try { 
        BigDecimalCachedFormulaCompiler.getTerm(" ", linkedHashSet0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      // Undeclared exception!
      try { 
        BigDecimalCachedFormulaCompiler.getTerm("com.github.dkellenb.formulaevaluator.BigDecimalCachedFormulaCompiler", linkedHashSet0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown operator, function or unregistered variable: com.github.dkellenb.formulaevaluator.BigDecimalCachedFormulaCompiler
         //
         verifyException("com.github.dkellenb.formulaevaluator.FormulaCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      // Undeclared exception!
      try { 
        BigDecimalCachedFormulaCompiler.getTerm((String) null, linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.dkellenb.formulaevaluator.FormulaCompiler$Tokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Term<BigDecimal> term0 = BigDecimalCachedFormulaCompiler.getTerm("4", linkedHashSet0);
      Term<BigDecimal> term1 = BigDecimalCachedFormulaCompiler.getTerm("4", linkedHashSet0);
      assertSame(term1, term0);
  }
}
