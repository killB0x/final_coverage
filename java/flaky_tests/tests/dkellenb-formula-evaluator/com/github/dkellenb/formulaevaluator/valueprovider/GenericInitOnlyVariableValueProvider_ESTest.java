/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 14:02:49 GMT 2022
 */

package com.github.dkellenb.formulaevaluator.valueprovider;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.dkellenb.formulaevaluator.valueprovider.GenericInitOnlyVariableValueProvider;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GenericInitOnlyVariableValueProvider_ESTest extends GenericInitOnlyVariableValueProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      GenericInitOnlyVariableValueProvider<Object> genericInitOnlyVariableValueProvider0 = new GenericInitOnlyVariableValueProvider<Object>(hashMap0);
      hashMap0.put("", "");
      Object object0 = genericInitOnlyVariableValueProvider0.getValue("");
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GenericInitOnlyVariableValueProvider<String> genericInitOnlyVariableValueProvider0 = new GenericInitOnlyVariableValueProvider<String>((Map<String, String>) null);
      // Undeclared exception!
      try { 
        genericInitOnlyVariableValueProvider0.getValue("_+-x$f");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.dkellenb.formulaevaluator.valueprovider.GenericVariableValueProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      GenericInitOnlyVariableValueProvider<Object> genericInitOnlyVariableValueProvider0 = new GenericInitOnlyVariableValueProvider<Object>(hashMap0);
      // Undeclared exception!
      try { 
        genericInitOnlyVariableValueProvider0.convert((Double) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.dkellenb.formulaevaluator.valueprovider.GenericInitOnlyVariableValueProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      GenericInitOnlyVariableValueProvider<Object> genericInitOnlyVariableValueProvider0 = new GenericInitOnlyVariableValueProvider<Object>(hashMap0);
      // Undeclared exception!
      try { 
        genericInitOnlyVariableValueProvider0.convert((BigDecimal) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.dkellenb.formulaevaluator.valueprovider.GenericInitOnlyVariableValueProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      GenericInitOnlyVariableValueProvider<String> genericInitOnlyVariableValueProvider0 = new GenericInitOnlyVariableValueProvider<String>(hashMap0);
      // Undeclared exception!
      try { 
        genericInitOnlyVariableValueProvider0.convert((Integer) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.dkellenb.formulaevaluator.valueprovider.GenericInitOnlyVariableValueProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      GenericInitOnlyVariableValueProvider<Object> genericInitOnlyVariableValueProvider0 = new GenericInitOnlyVariableValueProvider<Object>(hashMap0);
      // Undeclared exception!
      try { 
        genericInitOnlyVariableValueProvider0.convert((Long) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.dkellenb.formulaevaluator.valueprovider.GenericInitOnlyVariableValueProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      GenericInitOnlyVariableValueProvider<Object> genericInitOnlyVariableValueProvider0 = new GenericInitOnlyVariableValueProvider<Object>(hashMap0);
      Object object0 = genericInitOnlyVariableValueProvider0.getValue("");
      assertNull(object0);
  }
}
