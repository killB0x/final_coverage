/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 16:32:34 GMT 2022
 */

package uk.co.develop4.security.readers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.co.develop4.security.readers.PropertyMemoryReader;
import uk.co.develop4.security.readers.Reader;
import uk.co.develop4.security.readers.ReaderFactory;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReaderFactory_ESTest extends ReaderFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReaderFactory.getReader("uk.co.develop4.security.readers.PropertyDirectoryReader", (Properties) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReaderFactory readerFactory0 = new ReaderFactory();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PropertyMemoryReader propertyMemoryReader0 = new PropertyMemoryReader();
      Properties properties0 = propertyMemoryReader0.read();
      Reader reader0 = ReaderFactory.getReader("uk.co.develop4.security.readers.PropertyDirectoryReader", properties0);
      assertNotNull(reader0);
  }
}
