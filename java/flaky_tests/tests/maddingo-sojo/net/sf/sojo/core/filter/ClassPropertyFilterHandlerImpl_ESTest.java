/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 02:19:46 GMT 2022
 */

package net.sf.sojo.core.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import net.sf.sojo.core.filter.ClassPropertyFilter;
import net.sf.sojo.core.filter.ClassPropertyFilterHandlerImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClassPropertyFilterHandlerImpl_ESTest extends ClassPropertyFilterHandlerImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassPropertyFilter classPropertyFilter0 = new ClassPropertyFilter();
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl(classPropertyFilter0);
      classPropertyFilterHandlerImpl0.setWithAssignableFilterClasses(false);
      boolean boolean0 = classPropertyFilterHandlerImpl0.getWithAssignableFilterClasses();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl();
      Class<Object> class0 = Object.class;
      String[] stringArray0 = new String[9];
      ClassPropertyFilter classPropertyFilter0 = new ClassPropertyFilter(class0, stringArray0);
      classPropertyFilterHandlerImpl0.addClassPropertyFilter(classPropertyFilter0);
      classPropertyFilterHandlerImpl0.getClassPropertyFilterSize();
      assertTrue(classPropertyFilterHandlerImpl0.getWithAssignableFilterClasses());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ClassPropertyFilter classPropertyFilter0 = new ClassPropertyFilter(class0);
      classPropertyFilter0.setSupport4AddClassProperty(true);
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl(classPropertyFilter0);
      ClassPropertyFilter classPropertyFilter1 = classPropertyFilterHandlerImpl0.getClassPropertyFilterByClass(class0);
      assertNotNull(classPropertyFilter1);
      assertTrue(classPropertyFilterHandlerImpl0.getWithAssignableFilterClasses());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ClassPropertyFilter classPropertyFilter0 = new ClassPropertyFilter(class0);
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl(classPropertyFilter0);
      ClassPropertyFilter classPropertyFilter1 = classPropertyFilterHandlerImpl0.getClassPropertyFilterByClass(class0);
      assertTrue(classPropertyFilterHandlerImpl0.getWithAssignableFilterClasses());
      assertNotNull(classPropertyFilter1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassPropertyFilter classPropertyFilter0 = new ClassPropertyFilter();
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl(classPropertyFilter0);
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        classPropertyFilterHandlerImpl0.getClassPropertyFilterByClass(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.core.filter.ClassPropertyFilterHandlerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<ClassPropertyFilter>[] classArray0 = (Class<ClassPropertyFilter>[]) Array.newInstance(Class.class, 7);
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = null;
      try {
        classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl(classArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = null;
      try {
        classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl((ClassPropertyFilter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.core.filter.ClassPropertyFilterHandlerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassPropertyFilter classPropertyFilter0 = new ClassPropertyFilter();
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl(classPropertyFilter0);
      Class<ClassPropertyFilter>[] classArray0 = (Class<ClassPropertyFilter>[]) Array.newInstance(Class.class, 6);
      Class<ClassPropertyFilter> class0 = ClassPropertyFilter.class;
      classArray0[0] = class0;
      classArray0[1] = class0;
      classArray0[2] = class0;
      classArray0[3] = classArray0[0];
      classArray0[4] = class0;
      classArray0[5] = classArray0[4];
      classPropertyFilterHandlerImpl0.addClassPropertyFilterByFilterClasses(classArray0);
      assertEquals(2, classPropertyFilterHandlerImpl0.getClassPropertyFilterSize());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<ClassPropertyFilter> class0 = ClassPropertyFilter.class;
      ClassPropertyFilter classPropertyFilter0 = new ClassPropertyFilter(class0);
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl(classPropertyFilter0);
      Class<Object> class1 = Object.class;
      ClassPropertyFilter classPropertyFilter1 = classPropertyFilterHandlerImpl0.getClassPropertyFilterByClass(class1);
      assertNull(classPropertyFilter1);
      assertTrue(classPropertyFilterHandlerImpl0.getWithAssignableFilterClasses());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl();
      Class<Object> class0 = Object.class;
      String[] stringArray0 = new String[9];
      ClassPropertyFilter classPropertyFilter0 = new ClassPropertyFilter(class0, stringArray0);
      classPropertyFilterHandlerImpl0.addClassPropertyFilter(classPropertyFilter0);
      ClassPropertyFilter classPropertyFilter1 = classPropertyFilterHandlerImpl0.getClassPropertyFilterByClass(class0);
      assertNotNull(classPropertyFilter1);
      assertTrue(classPropertyFilterHandlerImpl0.getWithAssignableFilterClasses());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl();
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 2);
      // Undeclared exception!
      try { 
        classPropertyFilterHandlerImpl0.addClassPropertyFilterByFilterClasses(classArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl();
      classPropertyFilterHandlerImpl0.addClassPropertyFilterByFilterClasses((Class<?>[]) null);
      assertTrue(classPropertyFilterHandlerImpl0.getWithAssignableFilterClasses());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl();
      Class<Object> class0 = Object.class;
      classPropertyFilterHandlerImpl0.removeClassPropertyFilterByClassName(class0);
      assertTrue(classPropertyFilterHandlerImpl0.getWithAssignableFilterClasses());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassPropertyFilter classPropertyFilter0 = new ClassPropertyFilter();
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl(classPropertyFilter0);
      classPropertyFilterHandlerImpl0.setWithAssignableFilterClasses(false);
      Class<Object> class0 = Object.class;
      ClassPropertyFilter classPropertyFilter1 = classPropertyFilterHandlerImpl0.getClassPropertyFilterByClass(class0);
      assertNull(classPropertyFilter1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<ClassPropertyFilter>[] classArray0 = (Class<ClassPropertyFilter>[]) Array.newInstance(Class.class, 0);
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl(classArray0);
      boolean boolean0 = classPropertyFilterHandlerImpl0.getWithAssignableFilterClasses();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl();
      Class<Object> class0 = Object.class;
      ClassPropertyFilter classPropertyFilter0 = classPropertyFilterHandlerImpl0.getClassPropertyFilterByClass(class0);
      // Undeclared exception!
      try { 
        classPropertyFilterHandlerImpl0.addClassPropertyFilter(classPropertyFilter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.core.filter.ClassPropertyFilterHandlerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassPropertyFilterHandlerImpl classPropertyFilterHandlerImpl0 = new ClassPropertyFilterHandlerImpl();
      classPropertyFilterHandlerImpl0.getClassPropertyFilterSize();
      assertTrue(classPropertyFilterHandlerImpl0.getWithAssignableFilterClasses());
  }
}
