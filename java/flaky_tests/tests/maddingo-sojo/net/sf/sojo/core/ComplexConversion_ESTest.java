/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 02:37:37 GMT 2022
 */

package net.sf.sojo.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.LinkedHashMap;
import net.sf.sojo.core.IConverterExtension;
import net.sf.sojo.core.conversion.ComplexBean2MapConversion;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ComplexConversion_ESTest extends ComplexConversion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ComplexBean2MapConversion complexBean2MapConversion0 = new ComplexBean2MapConversion();
      Object object0 = new Object();
      Class<Object> class0 = Object.class;
      IConverterExtension iConverterExtension0 = mock(IConverterExtension.class, new ViolatedAssumptionAnswer());
      Object object1 = complexBean2MapConversion0.convert(object0, class0, iConverterExtension0);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ComplexBean2MapConversion complexBean2MapConversion0 = new ComplexBean2MapConversion();
      Class<Object> class0 = Object.class;
      IConverterExtension iConverterExtension0 = mock(IConverterExtension.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(iConverterExtension0).convert(any());
      doReturn((String) null).when(iConverterExtension0).getUniqueId(any());
      LinkedHashMap linkedHashMap0 = (LinkedHashMap)complexBean2MapConversion0.convert(class0, complexBean2MapConversion0.DEFAULT_MAP_TYPE, iConverterExtension0);
      assertEquals(3, linkedHashMap0.size());
  }
}
