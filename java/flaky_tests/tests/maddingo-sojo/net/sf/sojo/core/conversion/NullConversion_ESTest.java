/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 02:24:00 GMT 2022
 */

package net.sf.sojo.core.conversion;

import org.junit.Test;
import static org.junit.Assert.*;
import net.sf.sojo.core.conversion.NullConversion;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NullConversion_ESTest extends NullConversion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      NullConversion nullConversion0 = new NullConversion(object0);
      Class<Object> class0 = Object.class;
      boolean boolean0 = nullConversion0.isAssignableTo(class0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      NullConversion nullConversion0 = new NullConversion(object0);
      nullConversion0.setNullReplaceObject((Object) null);
      Object object1 = nullConversion0.getNullReplaceObject();
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      NullConversion nullConversion0 = new NullConversion(object0);
      Object object1 = nullConversion0.getNullReplaceObject();
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      NullConversion nullConversion0 = new NullConversion(object0);
      Class<Object> class0 = Object.class;
      Object object1 = nullConversion0.convert(object0, class0);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NullConversion nullConversion0 = new NullConversion("net.sf.sojo.core.ConversionException");
      Object object0 = new Object();
      nullConversion0.setNullReplaceObject(object0);
      boolean boolean0 = nullConversion0.isAssignableFrom("net.sf.sojo.core.ConversionException");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NullConversion nullConversion0 = new NullConversion("");
      boolean boolean0 = nullConversion0.isAssignableFrom((Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NullConversion nullConversion0 = new NullConversion("net.sf.sojo.core.ConversionException");
      boolean boolean0 = nullConversion0.isAssignableFrom("net.sf.sojo.core.ConversionException");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NullConversion nullConversion0 = new NullConversion("net.sf.sojo.core.ConversionException");
      Class<String> class0 = String.class;
      Object object0 = nullConversion0.convert((Object) null, class0);
      assertEquals("net.sf.sojo.core.ConversionException", object0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NullConversion nullConversion0 = new NullConversion((Object) null);
      Class<Object> class0 = Object.class;
      boolean boolean0 = nullConversion0.isAssignableTo(class0);
      assertFalse(boolean0);
  }
}
