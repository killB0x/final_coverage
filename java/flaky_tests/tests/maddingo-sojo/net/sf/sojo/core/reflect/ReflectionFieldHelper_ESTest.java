/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 02:20:39 GMT 2022
 */

package net.sf.sojo.core.reflect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Field;
import net.sf.sojo.core.reflect.ReflectionFieldHelper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReflectionFieldHelper_ESTest extends ReflectionFieldHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Field> class0 = Field.class;
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        ReflectionFieldHelper.getAllSetFieldMapsByClass(class0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.util.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Field> class0 = Field.class;
      String[] stringArray0 = new String[6];
      // Undeclared exception!
      try { 
        ReflectionFieldHelper.getAllGetFieldMapsByClass(class0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.util.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ReflectionFieldHelper.getAllFieldsByClass((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Field> class0 = Field.class;
      String[] stringArray0 = new String[6];
      ReflectionFieldHelper.addAllFields2MapByClass(class0, stringArray0);
      assertEquals(6, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Field> class0 = Field.class;
      Field[] fieldArray0 = ReflectionFieldHelper.getAllFieldsByClass(class0);
      assertEquals(19, fieldArray0.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ReflectionFieldHelper reflectionFieldHelper0 = new ReflectionFieldHelper();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<Field> class0 = Field.class;
      ReflectionFieldHelper.getAllSetFieldMapsByClass(class0, (String[]) null);
      Class<Field> class1 = Field.class;
      ReflectionFieldHelper.addAllFields2MapByClass(class0, (String[]) null);
      assertSame(class0, class1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Class<Field> class0 = Field.class;
      ReflectionFieldHelper.containsClass(class0);
      ReflectionFieldHelper.removePropertiesByClass(class0);
      ReflectionFieldHelper.removePropertiesByClass(class0);
      Class<Field> class1 = Field.class;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "ku<r$9";
      stringArray0[2] = "?se]VS";
      stringArray0[3] = "{[v&m`+";
      stringArray0[4] = "";
      stringArray0[5] = "";
      ReflectionFieldHelper.getAllGetFieldMapsByClass(class1, stringArray0);
      Class<Field> class2 = Field.class;
      ReflectionFieldHelper.getAllFieldsByClass(class2);
      Class<Field> class3 = Field.class;
  }
}
