/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 02:33:23 GMT 2022
 */

package net.sf.sojo.core.reflect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.AccessibleObject;
import net.sf.sojo.core.reflect.AccessiblePrivilegedAction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccessiblePrivilegedAction_ESTest extends AccessiblePrivilegedAction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AccessibleObject accessibleObject0 = mock(AccessibleObject.class, new ViolatedAssumptionAnswer());
      AccessiblePrivilegedAction accessiblePrivilegedAction0 = new AccessiblePrivilegedAction(accessibleObject0);
      Object object0 = accessiblePrivilegedAction0.run();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AccessiblePrivilegedAction accessiblePrivilegedAction0 = new AccessiblePrivilegedAction((AccessibleObject) null);
      // Undeclared exception!
      try { 
        accessiblePrivilegedAction0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.core.reflect.AccessiblePrivilegedAction", e);
      }
  }
}
