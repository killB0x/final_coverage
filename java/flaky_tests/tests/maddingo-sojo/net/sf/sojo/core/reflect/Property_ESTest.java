/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 02:13:35 GMT 2022
 */

package net.sf.sojo.core.reflect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.AccessibleObject;
import net.sf.sojo.core.reflect.Property;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Property_ESTest extends Property_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Property property0 = null;
      try {
        property0 = new Property((AccessibleObject) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only Method or Field are allowed: null
         //
         verifyException("net.sf.sojo.core.reflect.Property", e);
      }
  }
}
