/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 02:26:03 GMT 2022
 */

package net.sf.sojo.interchange.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.sf.sojo.interchange.json.JsonParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JsonParser_ESTest extends JsonParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JsonParser jsonParser0 = new JsonParser();
      Object object0 = jsonParser0.parse("\"}\"");
      assertEquals("}", object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JsonParser jsonParser0 = new JsonParser();
      jsonParser0.parse("5.t");
      try { 
        jsonParser0.parse("p]5<V;`9gB9dE0");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Exception in String: 'p]5<V;`9gB9dE0' --> Lexical error at line 1, column 1.  Encountered: \"p\" (112), after : \"\"
         //
         verifyException("net.sf.sojo.interchange.json.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JsonParser jsonParser0 = new JsonParser();
      Object object0 = jsonParser0.parse((String) null);
      assertNull(object0);
  }
}
