/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 02:24:48 GMT 2022
 */

package net.sf.sojo.interchange.xmlrpc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.sf.sojo.interchange.xmlrpc.XmlRpcParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlRpcParser_ESTest extends XmlRpcParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XmlRpcParser xmlRpcParser0 = new XmlRpcParser();
      assertFalse(xmlRpcParser0.getConvertResult2XmlRpcExceptionAndThrow());
      
      xmlRpcParser0.setConvertResult2XmlRpcExceptionAndThrow(true);
      boolean boolean0 = xmlRpcParser0.getConvertResult2XmlRpcExceptionAndThrow();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XmlRpcParser xmlRpcParser0 = new XmlRpcParser();
      try { 
        xmlRpcParser0.parse("net.sf.sojo.interchange.SerializerException");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Content is not allowed in prolog.
         //
         verifyException("net.sf.sojo.interchange.xmlrpc.XmlRpcParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlRpcParser xmlRpcParser0 = new XmlRpcParser();
      xmlRpcParser0.parse((String) null);
      assertFalse(xmlRpcParser0.getConvertResult2XmlRpcExceptionAndThrow());
      assertTrue(xmlRpcParser0.getReturnValueAsList());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XmlRpcParser xmlRpcParser0 = new XmlRpcParser();
      boolean boolean0 = xmlRpcParser0.getConvertResult2XmlRpcExceptionAndThrow();
      assertFalse(boolean0);
      assertTrue(xmlRpcParser0.getReturnValueAsList());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XmlRpcParser xmlRpcParser0 = new XmlRpcParser();
      boolean boolean0 = xmlRpcParser0.getReturnValueAsList();
      assertTrue(boolean0);
      assertFalse(xmlRpcParser0.getConvertResult2XmlRpcExceptionAndThrow());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XmlRpcParser xmlRpcParser0 = new XmlRpcParser();
      assertTrue(xmlRpcParser0.getReturnValueAsList());
      
      xmlRpcParser0.setReturnValueAsList(false);
      boolean boolean0 = xmlRpcParser0.getReturnValueAsList();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      XmlRpcParser xmlRpcParser0 = new XmlRpcParser();
      xmlRpcParser0.getMethodName();
      assertTrue(xmlRpcParser0.getReturnValueAsList());
      assertFalse(xmlRpcParser0.getConvertResult2XmlRpcExceptionAndThrow());
  }
}
