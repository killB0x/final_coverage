/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 01:47:43 GMT 2022
 */

package net.sf.sojo.interchange.csv.generate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.sf.sojo.interchange.csv.generate.ParseException;
import net.sf.sojo.interchange.csv.generate.Token;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParseException_ESTest extends ParseException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Token token0 = Token.newToken(0, "3CImue2(`Vw&IU~p/K");
      int[][] intArray0 = new int[2][5];
      int[] intArray1 = new int[6];
      intArray0[1] = intArray1;
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.interchange.csv.generate.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = ParseException.add_escapes("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        ParseException.add_escapes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.interchange.csv.generate.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Token token0 = Token.newToken(1);
      int[][] intArray0 = new int[8][1];
      int[] intArray1 = new int[0];
      intArray0[2] = intArray1;
      String[] stringArray0 = new String[8];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.sf.sojo.interchange.csv.generate.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = ParseException.add_escapes("fT]zgGU5v!qE,(7");
      assertEquals("fT]zgGU5v!qE,(7", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = ParseException.add_escapes("SH@>UhUj>Z#");
      assertEquals("\\u007fSH@>UhUj>Z#", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = ParseException.add_escapes("`Sz-~,m'*{[_");
      assertEquals("`Sz-~,m\\'*{[_", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = ParseException.add_escapes("\"");
      assertEquals("\\\"", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = ParseException.add_escapes("\n");
      assertEquals("\\n", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Token token0 = new Token((-1002));
      Token token1 = new Token();
      token0.next = token1;
      int[][] intArray0 = new int[1][5];
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Token token0 = Token.newToken(0, "3CImue2(`Vw&IU~p/K");
      int[][] intArray0 = new int[2][5];
      token0.next = token0;
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Token token0 = Token.newToken(0);
      int[][] intArray0 = new int[1][3];
      Token token1 = Token.newToken(1, " ");
      token0.next = token1;
      String[] stringArray0 = new String[2];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.interchange.csv.generate.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Token token0 = new Token();
      int[][] intArray0 = new int[0][6];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.interchange.csv.generate.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Token token0 = Token.newToken(1);
      int[][] intArray0 = new int[8][1];
      int[] intArray1 = new int[3];
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      String[] stringArray0 = new String[8];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.interchange.csv.generate.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParseException parseException0 = new ParseException("");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParseException parseException0 = new ParseException();
  }
}
