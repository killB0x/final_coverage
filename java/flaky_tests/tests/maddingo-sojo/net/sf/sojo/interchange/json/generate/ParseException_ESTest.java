/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 01:46:10 GMT 2022
 */

package net.sf.sojo.interchange.json.generate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.sf.sojo.interchange.json.generate.ParseException;
import net.sf.sojo.interchange.json.generate.Token;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParseException_ESTest extends ParseException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = ParseException.add_escapes("6`CXF(Pn&ru O'?~");
      assertEquals("6`CXF(Pn&ru O\\'?~", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Token token0 = new Token();
      int[][] intArray0 = new int[8][9];
      int[] intArray1 = new int[1];
      intArray0[0] = intArray1;
      intArray0[1] = intArray0[0];
      String[] stringArray0 = new String[8];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.interchange.json.generate.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = ParseException.add_escapes("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        ParseException.add_escapes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.interchange.json.generate.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Token token0 = new Token();
      int[][] intArray0 = new int[8][9];
      int[] intArray1 = new int[0];
      intArray0[5] = intArray1;
      String[] stringArray0 = new String[8];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("net.sf.sojo.interchange.json.generate.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = ParseException.add_escapes(";-1H-");
      assertEquals(";-1\\u007fH-", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = ParseException.add_escapes("\\");
      assertEquals("\\\\", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = ParseException.add_escapes("]KDS>Ib4`Wwp\"CeJc!");
      assertEquals("]KDS>Ib4`Wwp\\\"CeJc!", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = ParseException.add_escapes("\n");
      assertEquals("\\n", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = ParseException.add_escapes("\t");
      assertEquals("\\t", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = ParseException.add_escapes("\b");
      assertEquals("\\b", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[][] intArray0 = new int[1][8];
      Token token0 = new Token();
      token0.next = token0;
      String[] stringArray0 = new String[2];
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[][] intArray0 = new int[2][8];
      Token token0 = new Token();
      token0.next = token0;
      String[] stringArray0 = new String[2];
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Token token0 = new Token();
      String[] stringArray0 = new String[3];
      Token token1 = Token.newToken(126, "");
      token0.next = token1;
      token1.kind = 1;
      int[][] intArray0 = new int[19][7];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.interchange.json.generate.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Token token0 = new Token(107, "");
      int[][] intArray0 = new int[0][7];
      String[] stringArray0 = new String[8];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.interchange.json.generate.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Token token0 = Token.newToken(1, "");
      int[][] intArray0 = new int[1][1];
      int[] intArray1 = new int[2];
      intArray1[1] = 1;
      intArray0[0] = intArray1;
      String[] stringArray0 = new String[3];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.interchange.json.generate.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ParseException parseException0 = new ParseException();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ParseException parseException0 = new ParseException("");
  }
}
