/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 01:57:47 GMT 2022
 */

package net.sf.sojo.interchange.json.generate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.sf.sojo.interchange.json.generate.TokenMgrError;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokenMgrError_ESTest extends TokenMgrError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("n .`k7,sG,#~_");
      assertEquals("n .`k7,sG,#~_", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError("", (-1));
      String string0 = tokenMgrError0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(true, (-2817), 1608, (-2817), "pq2I|[WaW_|8l", 'p');
      assertEquals("Lexical error at line 1608, column -2817.  Encountered: <EOF> after : \"pq2I|[WaW_|8l\"", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrError.addEscapes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.interchange.json.generate.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrError.LexicalError(true, (-1), (-1), (-1), (String) null, '5');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.interchange.json.generate.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("jw.]|.7lW<c(2`=f@,");
      assertEquals("jw.]|.7lW<c(2`=\\u007ff@,", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("9_:>^VmgpB!SKht@'eB");
      assertEquals("9_:>^VmgpB!SKht@\\'eB", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("#;^Q\"^%iiHJQ6-");
      assertEquals("#;^Q\\\"^%iiHJQ6-", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TokenMgrError tokenMgrError0 = null;
      try {
        tokenMgrError0 = new TokenMgrError(false, 1014, 1014, 1014, (String) null, '\r', 1014);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.interchange.json.generate.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError(false, '\f', '\f', '\f', "", '\f', '\f');
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError(false, '\n', '\n', '\n', "t", '\n', '\n');
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TokenMgrError tokenMgrError0 = null;
      try {
        tokenMgrError0 = new TokenMgrError(false, (-1), (-1), (-1), (String) null, '\t', (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.interchange.json.generate.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TokenMgrError tokenMgrError0 = null;
      try {
        tokenMgrError0 = new TokenMgrError(false, (-1), (-1), (-1), (String) null, '\b', (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.interchange.json.generate.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError(false, '\u0000', '\u0000', '\u0000', ";T", '\u0000', '\u0000');
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError(false, '\u000B', '\u000B', '\u000B', "t", '\u000B', '\u000B');
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError(true, 1354, 0, 0, "", 'c', 1354);
      String string0 = tokenMgrError0.getMessage();
      assertEquals("Lexical error at line 0, column 0.  Encountered: <EOF> after : \"\"", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError();
      String string0 = tokenMgrError0.getMessage();
      assertNull(string0);
  }
}
