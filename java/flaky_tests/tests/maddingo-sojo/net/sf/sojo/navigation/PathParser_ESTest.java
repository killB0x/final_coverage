/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 01:49:13 GMT 2022
 */

package net.sf.sojo.navigation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.sf.sojo.navigation.PathAction;
import net.sf.sojo.navigation.PathParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PathParser_ESTest extends PathParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PathAction[] pathActionArray0 = PathParser.parse("]");
      assertEquals(1, pathActionArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PathAction pathAction0 = PathParser.getActionByPath(")`");
      assertEquals(0, pathAction0.getType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        PathParser.testBrackets("", "", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // In the path is only one closed bracket '' allowed: 
         //
         verifyException("net.sf.sojo.navigation.PathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        PathParser.getActionByPath("6}d,b%jDXoqb8R)B]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Missing open bracket '(' in path: 6}d,b%jDXoqb8R)B]
         //
         verifyException("net.sf.sojo.navigation.PathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PathAction[] pathActionArray0 = PathParser.parse("net.sf.sojo.navigation.PathAction");
      assertEquals(5, pathActionArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = PathParser.testBrackets("?", "?", "?");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = PathParser.testBrackets("T[U]", "[", "]");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        PathParser.testBrackets((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.navigation.PathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        PathParser.removeEmptyActions((PathAction[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.navigation.PathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PathAction[] pathActionArray0 = new PathAction[10];
      PathAction pathAction0 = new PathAction();
      pathActionArray0[3] = pathAction0;
      // Undeclared exception!
      try { 
        PathParser.removeEmptyActions(pathActionArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3 out of bounds for length 1
         //
         verifyException("net.sf.sojo.navigation.PathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        PathParser.getActionByPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.sojo.navigation.PathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PathAction[] pathActionArray0 = new PathAction[10];
      PathAction[] pathActionArray1 = PathParser.removeEmptyActions(pathActionArray0);
      assertEquals(0, pathActionArray1.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PathAction pathAction0 = PathParser.getActionByPath("[]");
      assertEquals(1, pathAction0.getType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PathAction pathAction0 = PathParser.getActionByPath("[5]");
      assertEquals(5, pathAction0.getIndex());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PathAction pathAction0 = PathParser.getActionByPath("()");
      assertEquals(2, pathAction0.getType());
      assertEquals("", pathAction0.getKey());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        PathParser.getActionByPath("@?LF[U4pz8]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The index must be a integer and not: U4pz8
         //
         verifyException("net.sf.sojo.navigation.PathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PathAction pathAction0 = PathParser.getActionByPath(">O(9U=m87a_)");
      assertEquals(2, pathAction0.getType());
      assertEquals("9U=m87a_", pathAction0.getKey());
      assertEquals(">O", pathAction0.getProperty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        PathParser.testBrackets("T^yVSP2%", "T^yVSP2%", "]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // In the path is only one closed bracket ']' allowed: T^yVSP2%
         //
         verifyException("net.sf.sojo.navigation.PathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        PathParser.parse("hlA+\"0'F((Y)hU3]!");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // In the path is only one open bracket '(' allowed: hlA+\"0'F((Y)hU3]!
         //
         verifyException("net.sf.sojo.navigation.PathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PathAction[] pathActionArray0 = PathParser.parse("");
      assertEquals(0, pathActionArray0.length);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        PathParser.parse(".ZBEej62Ve");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("net.sf.sojo.navigation.PathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PathAction[] pathActionArray0 = PathParser.parse((String) null);
      assertEquals(0, pathActionArray0.length);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PathAction[] pathActionArray0 = PathParser.parse("[5]");
      PathAction[] pathActionArray1 = PathParser.removeEmptyActions(pathActionArray0);
      assertEquals(1, pathActionArray1.length);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PathParser pathParser0 = new PathParser();
  }
}
