/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 02:34:47 GMT 2022
 */

package net.sf.sojo.navigation;

import org.junit.Test;
import static org.junit.Assert.*;
import net.sf.sojo.navigation.PathAction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PathAction_ESTest extends PathAction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PathAction pathAction0 = new PathAction((-565));
      assertEquals((-565), pathAction0.getType());
      
      pathAction0.setType(0);
      int int0 = pathAction0.getType();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PathAction pathAction0 = new PathAction();
      pathAction0.setType(2825);
      int int0 = pathAction0.getType();
      assertEquals(2825, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PathAction pathAction0 = new PathAction((-565));
      pathAction0.setProperty("path: null - property: null - index/key: 0/E\u0006^_b/maIa\"A};0lL - type: -565 -- net.sf.sojo.navigation.PathAction@1");
      pathAction0.getProperty();
      assertEquals((-1), pathAction0.getIndex());
      assertEquals((-565), pathAction0.getType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PathAction pathAction0 = new PathAction((-1108));
      pathAction0.setProperty("");
      pathAction0.getProperty();
      assertEquals((-1108), pathAction0.getType());
      assertEquals((-1), pathAction0.getIndex());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PathAction pathAction0 = new PathAction((-1108));
      pathAction0.setPath("path: null - property: :/Zdt=alQ - index/key: 0/null - type: -1108 -- net.sf.sojo.navigation.PathAction@1");
      pathAction0.getPath();
      assertEquals((-1108), pathAction0.getType());
      assertEquals((-1), pathAction0.getIndex());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PathAction pathAction0 = new PathAction();
      pathAction0.setPath("");
      pathAction0.getPath();
      assertEquals(0, pathAction0.getType());
      assertEquals((-1), pathAction0.getIndex());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PathAction pathAction0 = new PathAction((-1108));
      pathAction0.setKey(" - property: ");
      pathAction0.getKey();
      assertEquals((-1), pathAction0.getIndex());
      assertEquals((-1108), pathAction0.getType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PathAction pathAction0 = new PathAction((-565));
      pathAction0.setKey("");
      pathAction0.getKey();
      assertEquals((-565), pathAction0.getType());
      assertEquals((-1), pathAction0.getIndex());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PathAction pathAction0 = new PathAction((-1108));
      assertEquals((-1), pathAction0.getIndex());
      
      pathAction0.setIndex(0);
      int int0 = pathAction0.getIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PathAction pathAction0 = new PathAction((-565));
      int int0 = pathAction0.getType();
      assertEquals((-1), pathAction0.getIndex());
      assertEquals((-565), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PathAction pathAction0 = new PathAction((-565));
      pathAction0.getPath();
      assertEquals((-1), pathAction0.getIndex());
      assertEquals((-565), pathAction0.getType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PathAction pathAction0 = new PathAction((-565));
      int int0 = pathAction0.getIndex();
      assertEquals((-565), pathAction0.getType());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PathAction pathAction0 = new PathAction((-565));
      pathAction0.getProperty();
      assertEquals((-565), pathAction0.getType());
      assertEquals((-1), pathAction0.getIndex());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PathAction pathAction0 = new PathAction((-565));
      pathAction0.getKey();
      assertEquals((-1), pathAction0.getIndex());
      assertEquals((-565), pathAction0.getType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PathAction pathAction0 = new PathAction();
      pathAction0.setIndex(966);
      int int0 = pathAction0.getIndex();
      assertEquals(966, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PathAction pathAction0 = new PathAction();
      pathAction0.toString();
      assertEquals(0, pathAction0.getType());
      assertEquals((-1), pathAction0.getIndex());
  }
}
