/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Nov 07 01:32:28 GMT 2022
 */

package net.sf.sojo.common;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class ObjectUtil_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "net.sf.sojo.common.ObjectUtil"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ObjectUtil_ESTest_scaffolding.class.getClassLoader() ,
      "net.sf.sojo.core.SimpleConversion",
      "net.sf.sojo.common.ObjectUtil",
      "net.sf.sojo.core.reflect.ReflectionFieldHelper",
      "net.sf.sojo.core.reflect.ReflectionPropertyHelper",
      "net.sf.sojo.util.ThrowableWrapper",
      "net.sf.sojo.util.Util",
      "net.sf.sojo.core.conversion.IterateableMap2BeanConversion",
      "net.sf.sojo.core.IterableConversion",
      "net.sf.sojo.core.Conversion",
      "net.sf.sojo.core.ConverterInterceptorRecursive",
      "net.sf.sojo.core.conversion.SimpleFormatConversion",
      "net.sf.sojo.core.IConverterExtension",
      "net.sf.sojo.core.conversion.IterateableMap2MapConversion",
      "net.sf.sojo.core.NonCriticalExceptionHandler",
      "net.sf.sojo.core.ConversionIterator",
      "net.sf.sojo.core.Converter$InternalRecursiveConverterExtension",
      "net.sf.sojo.core.filter.ClassPropertyFilterHandlerImpl",
      "net.sf.sojo.core.ConversionException",
      "net.sf.sojo.core.conversion.interceptor.ThrowableConverterInterceptor",
      "net.sf.sojo.common.WalkerInterceptor",
      "net.sf.sojo.core.IConverter",
      "net.sf.sojo.core.reflect.ReflectionHelper",
      "net.sf.sojo.core.filter.ClassPropertyFilterHelper",
      "net.sf.sojo.core.conversion.Simple2SimpleConversion",
      "net.sf.sojo.core.reflect.ReflectionMethodHelper",
      "net.sf.sojo.core.conversion.ComplexBean2MapConversion",
      "net.sf.sojo.core.Converter",
      "net.sf.sojo.core.ConversionContext",
      "net.sf.sojo.core.reflect.ClassPropertiesCache",
      "net.sf.sojo.common.CompareResult",
      "net.sf.sojo.core.ConverterInterceptor",
      "net.sf.sojo.common.PathRecordWalkerInterceptor",
      "net.sf.sojo.core.ConversionHandler",
      "net.sf.sojo.core.conversion.interceptor.SimpleKeyMapperInterceptor$SimpleKeyComparator",
      "net.sf.sojo.core.AbstractConversion",
      "net.sf.sojo.core.reflect.AccessiblePrivilegedAction",
      "net.sf.sojo.core.filter.ClassPropertyFilterHandler",
      "net.sf.sojo.core.UniqueIdGenerator",
      "net.sf.sojo.core.conversion.interceptor.SimpleKeyMapperInterceptor",
      "net.sf.sojo.util.CycleDetector",
      "net.sf.sojo.common.ObjectGraphWalker",
      "net.sf.sojo.core.conversion.Iterateable2IterateableConversion",
      "net.sf.sojo.core.filter.ClassPropertyFilter",
      "net.sf.sojo.util.ArrayIterator",
      "net.sf.sojo.core.Constants",
      "net.sf.sojo.core.ConverterInterceptorHandler",
      "net.sf.sojo.core.reflect.Property",
      "net.sf.sojo.core.ComplexConversion"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ObjectUtil_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "net.sf.sojo.common.ObjectUtil",
      "net.sf.sojo.core.Converter",
      "net.sf.sojo.core.ConverterInterceptorHandler",
      "net.sf.sojo.core.ConversionHandler",
      "net.sf.sojo.core.UniqueIdGenerator",
      "net.sf.sojo.core.conversion.interceptor.SimpleKeyMapperInterceptor",
      "net.sf.sojo.core.AbstractConversion",
      "net.sf.sojo.core.ConversionIterator",
      "net.sf.sojo.core.IterableConversion",
      "net.sf.sojo.core.conversion.IterateableMap2MapConversion",
      "net.sf.sojo.util.CycleDetector",
      "net.sf.sojo.core.conversion.IterateableMap2BeanConversion",
      "net.sf.sojo.core.ComplexConversion",
      "net.sf.sojo.core.conversion.ComplexBean2MapConversion",
      "net.sf.sojo.core.conversion.Iterateable2IterateableConversion",
      "net.sf.sojo.core.SimpleConversion",
      "net.sf.sojo.core.conversion.SimpleFormatConversion",
      "net.sf.sojo.core.reflect.ReflectionHelper",
      "net.sf.sojo.core.conversion.Simple2SimpleConversion",
      "net.sf.sojo.core.conversion.interceptor.ThrowableConverterInterceptor",
      "net.sf.sojo.common.CompareResult",
      "net.sf.sojo.core.filter.ClassPropertyFilterHandlerImpl",
      "net.sf.sojo.core.ConversionContext",
      "net.sf.sojo.core.Converter$InternalRecursiveConverterExtension",
      "net.sf.sojo.core.reflect.ReflectionPropertyHelper",
      "net.sf.sojo.core.reflect.ClassPropertiesCache",
      "net.sf.sojo.core.reflect.ReflectionFieldHelper",
      "net.sf.sojo.core.reflect.ReflectionMethodHelper",
      "net.sf.sojo.core.NonCriticalExceptionHandler",
      "net.sf.sojo.core.reflect.AccessiblePrivilegedAction",
      "net.sf.sojo.util.Util",
      "net.sf.sojo.core.filter.ClassPropertyFilterHelper",
      "net.sf.sojo.core.filter.ClassPropertyFilter",
      "net.sf.sojo.core.ConversionException",
      "net.sf.sojo.common.ObjectGraphWalker",
      "net.sf.sojo.common.PathRecordWalkerInterceptor",
      "net.sf.sojo.core.reflect.Property",
      "net.sf.sojo.core.conversion.interceptor.SimpleKeyMapperInterceptor$SimpleKeyComparator",
      "net.sf.sojo.util.ArrayIterator"
    );
  }
}
