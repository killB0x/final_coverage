/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 02:25:52 GMT 2022
 */

package net.sf.sojo.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.sf.sojo.common.GenericComparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GenericComparator_ESTest extends GenericComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GenericComparator genericComparator0 = new GenericComparator(true);
      Object object0 = new Object();
      Object object1 = new Object();
      int int0 = genericComparator0.compare(object0, object1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GenericComparator genericComparator0 = new GenericComparator(false);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        genericComparator0.compare((Object) null, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // First arg by compareTo is Null
         //
         verifyException("net.sf.sojo.common.ObjectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GenericComparator genericComparator0 = new GenericComparator(true);
      Object object0 = new Object();
      int int0 = genericComparator0.compare(object0, object0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GenericComparator genericComparator0 = new GenericComparator(false);
      Integer integer0 = new Integer((-1));
      int int0 = genericComparator0.compare(integer0, integer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GenericComparator genericComparator0 = new GenericComparator(false);
      Integer integer0 = new Integer((-1));
      Integer integer1 = new Integer(1);
      int int0 = genericComparator0.compare(integer0, integer1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GenericComparator genericComparator0 = new GenericComparator();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer((-1));
      int int0 = genericComparator0.compare(integer0, integer1);
      assertEquals(1, int0);
  }
}
