/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 02:12:36 GMT 2022
 */

package net.sf.sojo.util;

import org.junit.Test;
import static org.junit.Assert.*;
import net.sf.sojo.util.CycleDetector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CycleDetector_ESTest extends CycleDetector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CycleDetector cycleDetector0 = new CycleDetector();
      assertEquals(100, cycleDetector0.getMaxCounter());
      
      cycleDetector0.setMaxCounter(0);
      int int0 = cycleDetector0.getMaxCounter();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CycleDetector cycleDetector0 = new CycleDetector();
      cycleDetector0.setMaxCounter((-383));
      int int0 = cycleDetector0.getMaxCounter();
      assertEquals((-383), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CycleDetector cycleDetector0 = new CycleDetector();
      boolean boolean0 = cycleDetector0.cycleDetection(cycleDetector0);
      assertFalse(boolean0);
      assertEquals(100, cycleDetector0.getMaxCounter());
      assertEquals(0, cycleDetector0.getCounter());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CycleDetector cycleDetector0 = new CycleDetector();
      int int0 = cycleDetector0.getMaxCounter();
      assertEquals(100, int0);
      assertEquals(0, cycleDetector0.getCounter());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CycleDetector cycleDetector0 = new CycleDetector();
      int int0 = cycleDetector0.getCounter();
      assertEquals(0, int0);
      assertEquals(100, cycleDetector0.getMaxCounter());
  }
}
