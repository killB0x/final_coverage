/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 23:23:16 GMT 2022
 */

package de.timroes.axmlrpc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.timroes.axmlrpc.Call;
import de.timroes.axmlrpc.serializer.SerializerHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Call_ESTest extends Call_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SerializerHandler serializerHandler0 = new SerializerHandler();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) serializerHandler0;
      Call call0 = new Call(serializerHandler0, "i4", objectArray0);
      try { 
        call0.getXML(true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No serializer found for type 'de.timroes.axmlrpc.serializer.SerializerHandler'.
         //
         verifyException("de.timroes.axmlrpc.serializer.SerializerHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SerializerHandler serializerHandler0 = new SerializerHandler();
      Object[] objectArray0 = new Object[1];
      Call call0 = new Call(serializerHandler0, "int", objectArray0);
      // Undeclared exception!
      try { 
        call0.getXML(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.timroes.axmlrpc.serializer.SerializerHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SerializerHandler serializerHandler0 = new SerializerHandler();
      Object[] objectArray0 = new Object[0];
      Call call0 = new Call(serializerHandler0, "boolean", objectArray0);
      String string0 = call0.getXML(false);
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<methodCall>\n<methodName>boolean</methodName>\n</methodCall>\n", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SerializerHandler serializerHandler0 = new SerializerHandler();
      Call call0 = new Call(serializerHandler0, "i4");
      String string0 = call0.getXML(false);
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<methodCall>\n<methodName>i4</methodName>\n</methodCall>\n", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SerializerHandler serializerHandler0 = new SerializerHandler((-712));
      Object[] objectArray0 = new Object[1];
      Call call0 = new Call(serializerHandler0, "int", objectArray0);
      String string0 = call0.getXML(true);
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<methodCall>\n<methodName>int</methodName>\n\n<params>\n<param>\n<value>\n<nil/>\n</value>\n</param>\n</params>\n</methodCall>\n", string0);
  }
}
