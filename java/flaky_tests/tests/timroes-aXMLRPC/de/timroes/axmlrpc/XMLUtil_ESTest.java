/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 23:14:20 GMT 2022
 */

package de.timroes.axmlrpc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.timroes.axmlrpc.XMLUtil;
import de.timroes.axmlrpc.xmlcreator.XmlElement;
import javax.imageio.metadata.IIOMetadataNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XMLUtil_ESTest extends XMLUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XmlElement xmlElement0 = XMLUtil.makeXmlTag("X?h*uD2KQC-3XUov", (String) null);
      assertNotNull(xmlElement0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("KE<b~FVn5)Tgwo");
      iIOMetadataNode0.removeChild(iIOMetadataNode0);
      Element element0 = XMLUtil.getOnlyChildElement(iIOMetadataNode0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        XMLUtil.hasChildElement((NodeList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.timroes.axmlrpc.XMLUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        XMLUtil.getOnlyTextContent((NodeList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.timroes.axmlrpc.XMLUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        XMLUtil.getOnlyChildElement((NodeList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.timroes.axmlrpc.XMLUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(")");
      NodeList nodeList0 = iIOMetadataNode0.getElementsByTagNameNS("de.timroes.axmlrpc.XMLUtil", ")");
      boolean boolean0 = XMLUtil.hasChildElement(nodeList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      boolean boolean0 = XMLUtil.hasChildElement(iIOMetadataNode0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      try { 
        XMLUtil.getOnlyTextContent(iIOMetadataNode0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Element must contain only text elements.
         //
         verifyException("de.timroes.axmlrpc.XMLUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      String string0 = XMLUtil.getOnlyTextContent(iIOMetadataNode0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("");
      iIOMetadataNode1.appendChild(iIOMetadataNode0);
      NodeList nodeList0 = iIOMetadataNode1.getElementsByTagName("");
      try { 
        XMLUtil.getOnlyChildElement(nodeList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Element has more than one children.
         //
         verifyException("de.timroes.axmlrpc.XMLUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(")");
      NodeList nodeList0 = iIOMetadataNode0.getElementsByTagNameNS("de.timroes.axmlrpc.XMLUtil", ")");
      Element element0 = XMLUtil.getOnlyChildElement(nodeList0);
      assertSame(iIOMetadataNode0, element0);
  }
}
