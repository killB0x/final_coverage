/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 23:12:09 GMT 2022
 */

package de.timroes.axmlrpc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.timroes.axmlrpc.XMLRPCCallback;
import de.timroes.axmlrpc.XMLRPCClient;
import java.net.Proxy;
import java.net.URL;
import java.net.URLStreamHandler;
import javax.net.ssl.KeyManager;
import javax.net.ssl.TrustManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XMLRPCClient_ESTest extends XMLRPCClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0);
      xMLRPCClient0.setTimeout((-1952965706));
      try { 
        xMLRPCClient0.call(";u=Ci7", (Object[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("de.timroes.axmlrpc.XMLRPCClient$Caller", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0, 0);
      xMLRPCClient0.setLoginData("^[A-Za-z0-9._:/]*$", "/bt/GNE}bu l");
      assertEquals(32, XMLRPCClient.FLAGS_FORWARD);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0, "s9z&Kt*<&Qh/VfF5\"S");
      xMLRPCClient0.setCustomHttpHeader("#jlVj]5g", "de.timroes.axmlrpc.XMLRPCServerException");
      assertEquals(2048, XMLRPCClient.FLAGS_NO_STRING_DECODE);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0, (-1064));
      // Undeclared exception!
      try { 
        xMLRPCClient0.setCustomHttpHeader("Content-Length", ":");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // You cannot modify the Host, Content-Type or Content-Length header.
         //
         verifyException("de.timroes.axmlrpc.XMLRPCClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("^#,", "^#,", 3061, "Location", uRLStreamHandler0);
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0, "Location", (-2978));
      URL uRL1 = xMLRPCClient0.getURL();
      assertNull(uRL1.toExternalForm());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0, "$/fbm k5,cUI", 4);
      URL uRL1 = xMLRPCClient0.getURL();
      assertSame(uRL0, uRL1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0, "!_HYW}Dv");
      System.setCurrentTimeMillis(0L);
      XMLRPCCallback xMLRPCCallback0 = mock(XMLRPCCallback.class, new ViolatedAssumptionAnswer());
      long long0 = xMLRPCClient0.callAsync(xMLRPCCallback0, "http.proxyPort", (Object[]) null);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0);
      XMLRPCCallback xMLRPCCallback0 = mock(XMLRPCCallback.class, new ViolatedAssumptionAnswer());
      System.setCurrentTimeMillis((-2205L));
      long long0 = xMLRPCClient0.callAsync(xMLRPCCallback0, "value", (Object[]) null);
      assertEquals((-2205L), long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient((URL) null);
      // Undeclared exception!
      try { 
        xMLRPCClient0.setUserAgentString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0);
      // Undeclared exception!
      try { 
        xMLRPCClient0.installCustomTrustManagers((TrustManager[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.timroes.axmlrpc.XMLRPCClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0, "YethodResponse");
      // Undeclared exception!
      try { 
        xMLRPCClient0.installCustomKeyManagers((KeyManager[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.timroes.axmlrpc.XMLRPCClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLRPCClient xMLRPCClient0 = null;
      try {
        xMLRPCClient0 = new XMLRPCClient((URL) null, (String) null, (-2013899704));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      XMLRPCClient xMLRPCClient0 = null;
      try {
        xMLRPCClient0 = new XMLRPCClient(uRL0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0);
      XMLRPCCallback xMLRPCCallback0 = mock(XMLRPCCallback.class, new ViolatedAssumptionAnswer());
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) xMLRPCCallback0;
      objectArray0[1] = (Object) xMLRPCClient0;
      objectArray0[2] = (Object) "\f}*~9g+s";
      objectArray0[3] = (Object) xMLRPCCallback0;
      xMLRPCClient0.callAsync(xMLRPCCallback0, "\f}*~9g+s", objectArray0);
      xMLRPCClient0.cancel((-212L));
      xMLRPCClient0.getCookies();
      xMLRPCClient0.cancel(1392409281320L);
      assertEquals(1024, XMLRPCClient.FLAGS_USE_SYSTEM_PROXY);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0);
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        xMLRPCClient0.call("value", objectArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The URL is not valid for a http connection.
         //
         verifyException("de.timroes.axmlrpc.XMLRPCClient$Caller", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0);
      xMLRPCClient0.setTimeout(621);
      Object[] objectArray0 = new Object[3];
      try { 
        xMLRPCClient0.call("value", objectArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("de.timroes.axmlrpc.XMLRPCClient$Caller", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0);
      Object[] objectArray0 = new Object[3];
      try { 
        xMLRPCClient0.call("value", objectArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("de.timroes.axmlrpc.XMLRPCClient$Caller", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0);
      Proxy proxy0 = Proxy.NO_PROXY;
      xMLRPCClient0.setProxy(proxy0);
      Object[] objectArray0 = new Object[20];
      try { 
        xMLRPCClient0.call("value", objectArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.UnsupportedOperationException: Method not implemented.
         //
         verifyException("de.timroes.axmlrpc.XMLRPCClient$Caller", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0, (-1482635241));
      // Undeclared exception!
      try { 
        xMLRPCClient0.call("de.timroes.axmlrpc.XMLRPCClient$Caller", (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Method name must only contain A-Z a-z . : _ / 
         //
         verifyException("de.timroes.axmlrpc.XMLRPCClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient((URL) null, (-1994463157));
      // Undeclared exception!
      try { 
        xMLRPCClient0.call("value", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient((URL) null);
      KeyManager[] keyManagerArray0 = new KeyManager[0];
      xMLRPCClient0.installCustomKeyManagers(keyManagerArray0);
      assertEquals(776, XMLRPCClient.FLAGS_APACHE_WS);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0, 1928);
      xMLRPCClient0.installCustomKeyManagers((KeyManager[]) null);
      assertEquals(776, XMLRPCClient.FLAGS_APACHE_WS);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0);
      xMLRPCClient0.installCustomKeyManager((KeyManager) null);
      assertEquals(2, XMLRPCClient.FLAGS_8BYTE_INT);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0, (-380));
      xMLRPCClient0.installCustomKeyManager((KeyManager) null);
      assertEquals(1, XMLRPCClient.FLAGS_STRICT);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient((URL) null);
      TrustManager[] trustManagerArray0 = new TrustManager[0];
      xMLRPCClient0.installCustomTrustManagers(trustManagerArray0);
      assertEquals(4096, XMLRPCClient.FLAGS_NO_STRING_ENCODE);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0, (-48756830));
      TrustManager[] trustManagerArray0 = new TrustManager[0];
      xMLRPCClient0.installCustomTrustManagers(trustManagerArray0);
      assertEquals(2, XMLRPCClient.FLAGS_8BYTE_INT);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0);
      xMLRPCClient0.installCustomTrustManager((TrustManager) null);
      assertEquals(1, XMLRPCClient.FLAGS_STRICT);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0, 1928);
      xMLRPCClient0.installCustomTrustManager((TrustManager) null);
      assertEquals(8, XMLRPCClient.FLAGS_NIL);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0, "Host");
      // Undeclared exception!
      try { 
        xMLRPCClient0.setCustomHttpHeader("Host", "Host");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // You cannot modify the Host, Content-Type or Content-Length header.
         //
         verifyException("de.timroes.axmlrpc.XMLRPCClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient((URL) null);
      // Undeclared exception!
      try { 
        xMLRPCClient0.setCustomHttpHeader((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0);
      // Undeclared exception!
      try { 
        xMLRPCClient0.setCustomHttpHeader("Content-Type", "Content-Type");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // You cannot modify the Host, Content-Type or Content-Length header.
         //
         verifyException("de.timroes.axmlrpc.XMLRPCClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0);
      xMLRPCClient0.clearCookies();
      assertEquals(1, XMLRPCClient.FLAGS_STRICT);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0, "", 0);
      xMLRPCClient0.clearLoginData();
      assertEquals(776, XMLRPCClient.FLAGS_APACHE_WS);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient((URL) null);
      URL uRL0 = xMLRPCClient0.getURL();
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      XMLRPCClient xMLRPCClient0 = new XMLRPCClient(uRL0);
      xMLRPCClient0.setUserAgentString("value");
      assertEquals(2, XMLRPCClient.FLAGS_8BYTE_INT);
  }
}
