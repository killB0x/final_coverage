/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:29:25 GMT 2022
 */

package com.watchrabbit.executor.wrapper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.watchrabbit.executor.wrapper.RetryConfig;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RetryConfig_ESTest extends RetryConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RetryConfig retryConfig0 = RetryConfig.retry();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      retryConfig0.withRetryInterval(160L, timeUnit0);
      assertEquals(576000000L, retryConfig0.getRetryInterval());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RetryConfig retryConfig0 = RetryConfig.retry();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      RetryConfig retryConfig1 = retryConfig0.withRetryInterval(0L, timeUnit0);
      long long0 = retryConfig1.getRetryInterval();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RetryConfig retryConfig0 = RetryConfig.retry();
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      retryConfig0.withRetryInterval((-3219L), timeUnit0);
      long long0 = retryConfig0.getRetryInterval();
      assertEquals((-11588400000L), long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RetryConfig retryConfig0 = RetryConfig.retry();
      // Undeclared exception!
      try { 
        retryConfig0.withRetryInterval(200L, (TimeUnit) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.watchrabbit.executor.wrapper.RetryConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RetryConfig retryConfig0 = RetryConfig.retry();
      long long0 = retryConfig0.getRetryInterval();
      assertEquals(200L, long0);
  }
}
