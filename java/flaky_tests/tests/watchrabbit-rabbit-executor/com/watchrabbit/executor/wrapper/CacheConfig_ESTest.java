/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:30:48 GMT 2022
 */

package com.watchrabbit.executor.wrapper;

import org.junit.Test;
import static org.junit.Assert.*;
import com.watchrabbit.executor.wrapper.CacheConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CacheConfig_ESTest extends CacheConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("", "");
      cacheConfig0.withExpireTime(58);
      assertEquals(58, cacheConfig0.getExpireTime());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("", "");
      cacheConfig0.withCacheSize(0);
      assertEquals(60, cacheConfig0.getExpireTime());
      
      cacheConfig0.withExpireTime(0);
      assertEquals(0, cacheConfig0.getExpireTime());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("", "");
      cacheConfig0.withCacheSize((-830));
      cacheConfig0.withExpireTime((-830));
      assertEquals((-830), cacheConfig0.getExpireTime());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("", "");
      cacheConfig0.withExpireTime(0);
      assertEquals(1000, cacheConfig0.getCacheSize());
      
      cacheConfig0.withCacheSize(0);
      assertEquals(0, cacheConfig0.getCacheSize());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("nbrL_;ote", "nbrL_;ote");
      cacheConfig0.withExpireTime((-1));
      assertEquals(1000, cacheConfig0.getCacheSize());
      
      cacheConfig0.withCacheSize(0);
      assertEquals((-1), cacheConfig0.getExpireTime());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("", "");
      cacheConfig0.withCacheSize(681);
      assertEquals(681, cacheConfig0.getCacheSize());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("", (String) null);
      String string0 = cacheConfig0.getKey();
      assertEquals(1000, cacheConfig0.getCacheSize());
      assertNull(string0);
      assertEquals(60, cacheConfig0.getExpireTime());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("com.watchrabbit.executor.wrapper.CacheConfig", "com.watchrabbit.executor.wrapper.CacheConfig");
      cacheConfig0.getKey();
      assertEquals(60, cacheConfig0.getExpireTime());
      assertEquals(1000, cacheConfig0.getCacheSize());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("", "");
      assertEquals(60, cacheConfig0.getExpireTime());
      
      cacheConfig0.withExpireTime(0);
      int int0 = cacheConfig0.getExpireTime();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("", "");
      cacheConfig0.withExpireTime((-830));
      int int0 = cacheConfig0.getExpireTime();
      assertEquals((-830), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("", "");
      assertEquals(1000, cacheConfig0.getCacheSize());
      
      cacheConfig0.withCacheSize(0);
      int int0 = cacheConfig0.getCacheSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("", "");
      cacheConfig0.withCacheSize((-830));
      int int0 = cacheConfig0.getCacheSize();
      assertEquals((-830), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache((String) null, "com.watchrabbit.executor.wrapper.CacheConfig");
      String string0 = cacheConfig0.getCacheName();
      assertEquals(60, cacheConfig0.getExpireTime());
      assertEquals(1000, cacheConfig0.getCacheSize());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("", "");
      cacheConfig0.getCacheName();
      assertEquals(60, cacheConfig0.getExpireTime());
      assertEquals(1000, cacheConfig0.getCacheSize());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("", "");
      cacheConfig0.getKey();
      assertEquals(1000, cacheConfig0.getCacheSize());
      assertEquals(60, cacheConfig0.getExpireTime());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("nbrL_;ote", "nbrL_;ote");
      cacheConfig0.getCacheName();
      assertEquals(60, cacheConfig0.getExpireTime());
      assertEquals(1000, cacheConfig0.getCacheSize());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("yA", "yA");
      int int0 = cacheConfig0.getCacheSize();
      assertEquals(60, cacheConfig0.getExpireTime());
      assertEquals(1000, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CacheConfig cacheConfig0 = CacheConfig.cache("f", "f");
      int int0 = cacheConfig0.getExpireTime();
      assertEquals(60, int0);
      assertEquals(1000, cacheConfig0.getCacheSize());
  }
}
