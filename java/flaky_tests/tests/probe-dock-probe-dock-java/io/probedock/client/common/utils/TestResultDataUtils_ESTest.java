/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 04:37:00 GMT 2022
 */

package io.probedock.client.common.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.probedock.client.annotations.ProbeTest;
import io.probedock.client.annotations.ProbeTestClass;
import io.probedock.client.common.config.Configuration;
import io.probedock.client.common.utils.TestResultDataUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TestResultDataUtils_ESTest extends TestResultDataUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProbeTest probeTest0 = mock(ProbeTest.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(probeTest0).active();
      Boolean boolean0 = TestResultDataUtils.isActive(probeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ProbeTest probeTest0 = mock(ProbeTest.class, new ViolatedAssumptionAnswer());
      doReturn("6", "6", (String) null).when(probeTest0).key();
      String string0 = TestResultDataUtils.getKey(probeTest0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProbeTestClass probeTestClass0 = mock(ProbeTestClass.class, new ViolatedAssumptionAnswer());
      ProbeTest probeTest0 = mock(ProbeTest.class, new ViolatedAssumptionAnswer());
      doReturn("#c3`y", "x1&$V9PPlDp-yR", (String) null).when(probeTest0).category();
      String string0 = TestResultDataUtils.getCategory("865416efd0a779a9a5fdbc88be123de6959223e1", (Configuration) null, probeTestClass0, probeTest0, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProbeTestClass probeTestClass0 = mock(ProbeTestClass.class, new ViolatedAssumptionAnswer());
      ProbeTest probeTest0 = mock(ProbeTest.class, new ViolatedAssumptionAnswer());
      doReturn("]p'dL%tr\"3F:L#", "/byJCSWsM\"|L*=c", (String) null).when(probeTest0).category();
      String string0 = TestResultDataUtils.getCategory((Configuration) null, probeTestClass0, probeTest0, "/byJCSWsM\"|L*=c");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        TestResultDataUtils.getTechnicalName((Class) null, "lo");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.probedock.client.common.utils.TestResultDataUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProbeTest probeTest0 = mock(ProbeTest.class, new ViolatedAssumptionAnswer());
      doReturn("S", (String) null).when(probeTest0).key();
      // Undeclared exception!
      try { 
        TestResultDataUtils.getKey(probeTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProbeTestClass probeTestClass0 = mock(ProbeTestClass.class, new ViolatedAssumptionAnswer());
      doReturn("", (String) null).when(probeTestClass0).category();
      // Undeclared exception!
      try { 
        TestResultDataUtils.getCategory("", (Configuration) null, probeTestClass0, (ProbeTest) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ProbeTestClass probeTestClass0 = mock(ProbeTestClass.class, new ViolatedAssumptionAnswer());
      ProbeTest probeTest0 = mock(ProbeTest.class, new ViolatedAssumptionAnswer());
      doReturn("#c3`y", "2Aw1Q M::C`,SqiW", "").when(probeTest0).category();
      String string0 = TestResultDataUtils.getCategory("865416efd0a779a9a5fdbc88be123de6959223e1", (Configuration) null, probeTestClass0, probeTest0, (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<Object> class0 = Object.class;
      TestResultDataUtils.getFingerprint(class0, "The contributor '");
      ProbeTestClass probeTestClass0 = mock(ProbeTestClass.class, new ViolatedAssumptionAnswer());
      ProbeTest probeTest0 = mock(ProbeTest.class, new ViolatedAssumptionAnswer());
      doReturn("", (String) null).when(probeTest0).category();
      // Undeclared exception!
      try { 
        TestResultDataUtils.getCategory("I2d]#C_SQR5]!2", (Configuration) null, probeTestClass0, probeTest0, "4c2U;wm?Vterl\"EK$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProbeTest probeTest0 = mock(ProbeTest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(probeTest0).category();
      // Undeclared exception!
      try { 
        TestResultDataUtils.getCategory("", (Configuration) null, (ProbeTestClass) null, probeTest0, "X4teTMll ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.probedock.client.common.utils.TestResultDataUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProbeTestClass probeTestClass0 = mock(ProbeTestClass.class, new ViolatedAssumptionAnswer());
      ProbeTest probeTest0 = mock(ProbeTest.class, new ViolatedAssumptionAnswer());
      doReturn("(", "/byJCSWsM\"|L*=c", "").when(probeTest0).category();
      String string0 = TestResultDataUtils.getCategory((Configuration) null, probeTestClass0, probeTest0, "/byJCSWsM\"|L*=c");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ProbeTestClass probeTestClass0 = mock(ProbeTestClass.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(probeTestClass0).category();
      // Undeclared exception!
      try { 
        TestResultDataUtils.getCategory("", (Configuration) null, probeTestClass0, (ProbeTest) null, "e8f2b4f6fa47d481dbd7300eb1b686622b0e2169");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.probedock.client.common.utils.TestResultDataUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ProbeTest probeTest0 = mock(ProbeTest.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(probeTest0).active();
      Boolean boolean0 = TestResultDataUtils.isActive(probeTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Boolean boolean0 = TestResultDataUtils.isActive((ProbeTest) null);
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<Object> class0 = Object.class;
      String string0 = "";
      TestResultDataUtils.getTechnicalName(class0, "");
      ProbeTest probeTest0 = mock(ProbeTest.class, new ViolatedAssumptionAnswer());
      doReturn("", (String) null).when(probeTest0).key();
      // Undeclared exception!
      try { 
        TestResultDataUtils.getKey(probeTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ProbeTest probeTest0 = mock(ProbeTest.class, new ViolatedAssumptionAnswer());
      doReturn("io.probedock.client.common.utils.TestResultDataUtils", (String) null).when(probeTest0).key();
      // Undeclared exception!
      try { 
        TestResultDataUtils.getKey(probeTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ProbeTest probeTest0 = mock(ProbeTest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(probeTest0).key();
      String string0 = TestResultDataUtils.getKey(probeTest0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = TestResultDataUtils.getKey((ProbeTest) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ProbeTestClass probeTestClass0 = mock(ProbeTestClass.class, new ViolatedAssumptionAnswer());
      ProbeTest probeTest0 = mock(ProbeTest.class, new ViolatedAssumptionAnswer());
      doReturn("", (String) null).when(probeTest0).category();
      // Undeclared exception!
      try { 
        TestResultDataUtils.getCategory((Configuration) null, probeTestClass0, probeTest0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        TestResultDataUtils.getContributors((Configuration) null, (ProbeTestClass) null, (ProbeTest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.probedock.client.common.utils.TestResultDataUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TestResultDataUtils testResultDataUtils0 = new TestResultDataUtils();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        TestResultDataUtils.getTags((Configuration) null, (ProbeTestClass) null, (ProbeTest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.probedock.client.common.utils.TestResultDataUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ProbeTestClass probeTestClass0 = mock(ProbeTestClass.class, new ViolatedAssumptionAnswer());
      ProbeTest probeTest0 = mock(ProbeTest.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        TestResultDataUtils.getTickets((Configuration) null, probeTestClass0, probeTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.probedock.client.common.utils.TestResultDataUtils", e);
      }
  }
}
