/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 04:43:06 GMT 2022
 */

package io.probedock.client.common.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.probedock.client.common.config.ProxyConfiguration;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProxyConfiguration_ESTest extends ProxyConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProxyConfiguration proxyConfiguration0 = new ProxyConfiguration();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Integer integer0 = new Integer(65536);
      hashMap0.put("port", integer0);
      proxyConfiguration0.configureWith(hashMap0);
      assertEquals(0, proxyConfiguration0.getPort());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ProxyConfiguration proxyConfiguration0 = new ProxyConfiguration();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Integer integer0 = new Integer(0);
      hashMap0.put("port", integer0);
      proxyConfiguration0.configureWith(hashMap0);
      assertEquals(0, proxyConfiguration0.getPort());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProxyConfiguration proxyConfiguration0 = new ProxyConfiguration();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Integer integer0 = new Integer(6);
      hashMap0.put("port", integer0);
      proxyConfiguration0.configureWith(hashMap0);
      int int0 = proxyConfiguration0.getPort();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProxyConfiguration proxyConfiguration0 = new ProxyConfiguration();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Object object0 = new Object();
      hashMap0.put("host", object0);
      Integer integer0 = new Integer(3826);
      hashMap0.put("port", integer0);
      proxyConfiguration0.configureWith(hashMap0);
      proxyConfiguration0.getHost();
      assertTrue(proxyConfiguration0.isValid());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        object0.toString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Object object0 = new Object();
      hashMap0.put("port", object0);
      Integer integer0 = new Integer(4953);
      Object object1 = hashMap0.put("port", integer0);
      // Undeclared exception!
      try { 
        ((ProxyConfiguration) object1).getPort();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProxyConfiguration proxyConfiguration0 = new ProxyConfiguration();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Set<Map.Entry<String, Object>> set0 = (Set<Map.Entry<String, Object>>)hashMap0.entrySet();
      hashMap0.put("port", set0);
      // Undeclared exception!
      try { 
        proxyConfiguration0.configureWith(hashMap0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ProxyConfiguration proxyConfiguration0 = new ProxyConfiguration();
      // Undeclared exception!
      try { 
        proxyConfiguration0.configureWith((Map<String, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.probedock.client.common.config.ProxyConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProxyConfiguration proxyConfiguration0 = new ProxyConfiguration();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Integer integer0 = new Integer(65555);
      hashMap0.put("port", integer0);
      proxyConfiguration0.configureWith(hashMap0);
      assertEquals(0, proxyConfiguration0.getPort());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProxyConfiguration proxyConfiguration0 = new ProxyConfiguration();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Integer integer0 = new Integer((-20));
      hashMap0.put("port", integer0);
      proxyConfiguration0.configureWith(hashMap0);
      assertEquals(0, proxyConfiguration0.getPort());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProxyConfiguration proxyConfiguration0 = new ProxyConfiguration();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Object object0 = new Object();
      hashMap0.put("host", object0);
      Integer integer0 = new Integer(3826);
      hashMap0.put("port", integer0);
      proxyConfiguration0.configureWith(hashMap0);
      boolean boolean0 = proxyConfiguration0.isValid();
      assertEquals(3826, proxyConfiguration0.getPort());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ProxyConfiguration proxyConfiguration0 = new ProxyConfiguration();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Integer integer0 = new Integer(3826);
      hashMap0.put("port", integer0);
      proxyConfiguration0.configureWith(hashMap0);
      boolean boolean0 = proxyConfiguration0.isValid();
      assertEquals(3826, proxyConfiguration0.getPort());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ProxyConfiguration proxyConfiguration0 = new ProxyConfiguration();
      boolean boolean0 = proxyConfiguration0.isValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ProxyConfiguration proxyConfiguration0 = new ProxyConfiguration();
      String string0 = proxyConfiguration0.getHost();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ProxyConfiguration proxyConfiguration0 = new ProxyConfiguration();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        proxyConfiguration0.configureWith(hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The port[null] is not an integer.
         //
         verifyException("io.probedock.client.common.config.ProxyConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ProxyConfiguration proxyConfiguration0 = new ProxyConfiguration();
      int int0 = proxyConfiguration0.getPort();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ProxyConfiguration proxyConfiguration0 = new ProxyConfiguration();
      String string0 = proxyConfiguration0.toString();
      assertEquals("host: \"null\", port: \"0\"", string0);
  }
}
