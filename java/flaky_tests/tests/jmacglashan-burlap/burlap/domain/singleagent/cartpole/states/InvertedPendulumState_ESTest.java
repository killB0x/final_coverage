/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 04:13:22 GMT 2022
 */

package burlap.domain.singleagent.cartpole.states;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.domain.singleagent.cartpole.states.InvertedPendulumState;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InvertedPendulumState_ESTest extends InvertedPendulumState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InvertedPendulumState invertedPendulumState0 = new InvertedPendulumState(0.0, (-1.0));
      InvertedPendulumState invertedPendulumState1 = (InvertedPendulumState)invertedPendulumState0.copy();
      assertEquals((-1.0), invertedPendulumState1.angleV, 0.01);
      assertEquals((-1.0), invertedPendulumState0.angleV, 0.01);
      assertEquals(0.0, invertedPendulumState0.angle, 0.01);
      assertEquals(0.0, invertedPendulumState1.angle, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InvertedPendulumState invertedPendulumState0 = new InvertedPendulumState();
      invertedPendulumState0.angle = (-1.0);
      String string0 = invertedPendulumState0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InvertedPendulumState invertedPendulumState0 = new InvertedPendulumState();
      invertedPendulumState0.angle = (-1.0);
      InvertedPendulumState invertedPendulumState1 = (InvertedPendulumState)invertedPendulumState0.set("angleVAtt", invertedPendulumState0.angleV);
      assertEquals(0.0, invertedPendulumState1.angleV, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InvertedPendulumState invertedPendulumState0 = new InvertedPendulumState(6160.744431417554, (-1400.525072121059));
      assertEquals(6160.744431417554, invertedPendulumState0.angle, 0.01);
      
      InvertedPendulumState invertedPendulumState1 = new InvertedPendulumState();
      Object object0 = invertedPendulumState1.get("angleAtt");
      invertedPendulumState0.set("angleAtt", object0);
      assertEquals(0.0, invertedPendulumState0.angle, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InvertedPendulumState invertedPendulumState0 = new InvertedPendulumState();
      // Undeclared exception!
      try { 
        invertedPendulumState0.set("}\n", "}\n");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InvertedPendulumState invertedPendulumState0 = new InvertedPendulumState();
      Object object0 = invertedPendulumState0.get("angleVAtt");
      invertedPendulumState0.angleV = (-2760.502);
      InvertedPendulumState invertedPendulumState1 = (InvertedPendulumState)invertedPendulumState0.set("angleVAtt", object0);
      assertEquals(0.0, invertedPendulumState1.angleV, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InvertedPendulumState invertedPendulumState0 = new InvertedPendulumState();
      List<Object> list0 = invertedPendulumState0.variableKeys();
      assertEquals(2, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InvertedPendulumState invertedPendulumState0 = new InvertedPendulumState();
      // Undeclared exception!
      try { 
        invertedPendulumState0.get("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown key 
         //
         verifyException("burlap.domain.singleagent.cartpole.states.InvertedPendulumState", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InvertedPendulumState invertedPendulumState0 = new InvertedPendulumState(6160.744431417554, (-1400.525072121059));
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        invertedPendulumState0.get(object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Variable key must be a String
         //
         verifyException("burlap.domain.singleagent.cartpole.states.InvertedPendulumState", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InvertedPendulumState invertedPendulumState0 = new InvertedPendulumState();
      // Undeclared exception!
      try { 
        invertedPendulumState0.set("}\n", 0.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown key }
         //
         verifyException("burlap.domain.singleagent.cartpole.states.InvertedPendulumState", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InvertedPendulumState invertedPendulumState0 = new InvertedPendulumState(19.82205742995226, 19.82205742995226);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        invertedPendulumState0.set(invertedPendulumState0.angleV, object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Variable key must be a String
         //
         verifyException("burlap.domain.singleagent.cartpole.states.InvertedPendulumState", e);
      }
  }
}
