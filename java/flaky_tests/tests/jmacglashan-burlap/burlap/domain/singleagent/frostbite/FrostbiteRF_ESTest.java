/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 04:02:05 GMT 2022
 */

package burlap.domain.singleagent.frostbite;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.domain.singleagent.blocksworld.BlocksWorldBlock;
import burlap.domain.singleagent.frostbite.FrostbiteRF;
import burlap.mdp.core.action.SimpleAction;
import burlap.mdp.core.oo.OODomain;
import burlap.mdp.core.state.State;
import burlap.mdp.singleagent.oo.OOSADomain;
import burlap.mdp.stochasticgames.oo.OOSGDomain;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FrostbiteRF_ESTest extends FrostbiteRF_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      FrostbiteRF frostbiteRF0 = new FrostbiteRF(oOSGDomain0);
      BlocksWorldBlock blocksWorldBlock0 = new BlocksWorldBlock();
      BlocksWorldBlock blocksWorldBlock1 = blocksWorldBlock0.copy();
      SimpleAction simpleAction0 = new SimpleAction();
      // Undeclared exception!
      try { 
        frostbiteRF0.reward(blocksWorldBlock1, simpleAction0, blocksWorldBlock0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class burlap.domain.singleagent.blocksworld.BlocksWorldBlock cannot be cast to class burlap.mdp.core.oo.state.OOState (burlap.domain.singleagent.blocksworld.BlocksWorldBlock and burlap.mdp.core.oo.state.OOState are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @7f9109e6)
         //
         verifyException("burlap.domain.singleagent.frostbite.FrostbiteRF", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      FrostbiteRF frostbiteRF0 = new FrostbiteRF(oOSADomain0);
      SimpleAction simpleAction0 = new SimpleAction();
      // Undeclared exception!
      try { 
        frostbiteRF0.reward((State) null, simpleAction0, (State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.domain.singleagent.frostbite.FrostbiteRF", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FrostbiteRF frostbiteRF0 = null;
      try {
        frostbiteRF0 = new FrostbiteRF((OODomain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.domain.singleagent.frostbite.FrostbiteRF", e);
      }
  }
}
