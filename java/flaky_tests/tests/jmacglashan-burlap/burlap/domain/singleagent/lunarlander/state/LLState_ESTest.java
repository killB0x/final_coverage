/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 00:27:12 GMT 2022
 */

package burlap.domain.singleagent.lunarlander.state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.domain.singleagent.blocksworld.BlocksWorldBlock;
import burlap.domain.singleagent.lunarlander.state.LLAgent;
import burlap.domain.singleagent.lunarlander.state.LLBlock;
import burlap.domain.singleagent.lunarlander.state.LLState;
import burlap.mdp.core.oo.state.MutableOOState;
import burlap.mdp.core.oo.state.ObjectInstance;
import burlap.mdp.core.state.State;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LLState_ESTest extends LLState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[2];
      LLBlock.LLObstacle lLBlock_LLObstacle0 = new LLBlock.LLObstacle(0.0, 0.0, 0.0, 0.0, "?/F`Jnr@LdXU\"p&_a\" ");
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      BlocksWorldBlock blocksWorldBlock0 = new BlocksWorldBlock();
      // Undeclared exception!
      try { 
        lLState0.set(lLBlock_LLObstacle0, blocksWorldBlock0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // An OOState variable Key must either be a OOVariableKey or String that can be parsed into an OOVariableKey, but key was of type burlap.domain.singleagent.lunarlander.state.LLBlock$LLObstacle
         //
         verifyException("burlap.mdp.core.oo.state.OOStateUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[1];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      LLState lLState1 = new LLState(lLState0.agent, (LLBlock.LLPad) null, lLState0.obstacles);
      int int0 = lLState1.numObjects();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad(0.0, (-1.0), 0.0, 0.0, "right");
      LLBlock.LLObstacle lLBlock_LLObstacle0 = new LLBlock.LLObstacle((-1384.101690755136), 0.0, 0.06428051556877692, 0.0, "}\n");
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[6];
      lLBlock_LLObstacleArray0[0] = lLBlock_LLObstacle0;
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      MutableOOState mutableOOState0 = lLState0.renameObject("}\n", ";TzJ3}");
      assertSame(mutableOOState0, lLState0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad(0.0, 0.0, (-409.727290355), 0.0, "bottom");
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[1];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      MutableOOState mutableOOState0 = lLState0.renameObject("bottom", "burlap.mdp.core.oo.state.OOStateUtilities");
      assertSame(lLState0, mutableOOState0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[0];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      // Undeclared exception!
      try { 
        lLState0.renameObject("right", "agent");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[0];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      // Undeclared exception!
      try { 
        lLState0.renameObject("agent", "DsAk51^b");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // LL Agent name must be agent
         //
         verifyException("burlap.domain.singleagent.lunarlander.state.LLState", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[0];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      List<Object> list0 = lLState0.variableKeys();
      assertEquals(9, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent(707.2760047685, 2217.749457, 0.0);
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[3];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      LLBlock.LLPad lLBlock_LLPad1 = lLState0.touchPad();
      assertEquals(0.0, lLBlock_LLPad1.left, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad(2217.749457, 1177.931826856, 0.0, 0.0, "y");
      LLAgent lLAgent0 = new LLAgent(707.2760047685, 1177.931826856, 1177.931826856);
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[0];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      List<LLBlock.LLObstacle> list0 = lLState0.touchObstacles();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[3];
      LLBlock.LLObstacle lLBlock_LLObstacle0 = new LLBlock.LLObstacle();
      lLBlock_LLObstacleArray0[0] = lLBlock_LLObstacle0;
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      LLBlock.LLObstacle lLBlock_LLObstacle1 = lLState0.touchObstacle(0);
      assertFalse(lLBlock_LLObstacle1.equals((Object)lLBlock_LLObstacle0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[2];
      LLBlock.LLObstacle lLBlock_LLObstacle0 = new LLBlock.LLObstacle(0.0, 0.0, 0.0, 0.0, "?/F`Jnr@LdXU\"p&_a\" ");
      lLBlock_LLObstacleArray0[0] = lLBlock_LLObstacle0;
      lLBlock_LLObstacleArray0[1] = lLBlock_LLObstacle0;
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      String string0 = lLState0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[1];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      List<ObjectInstance> list0 = lLState0.objectsOfClass("obstacle");
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[1];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      int int0 = lLState0.numObjects();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad(0.0, 0.0, 0.0, 0.0, "right");
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[0];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      LLBlock.LLObstacle lLBlock_LLObstacle0 = new LLBlock.LLObstacle(0.0, 0.0, 0.0, 0.0, " UxM5$[xn{c5");
      lLState0.addObject(lLBlock_LLObstacle0);
      List<LLBlock.LLObstacle> list0 = lLState0.deepTouchObstacles();
      assertFalse(list0.contains(lLBlock_LLObstacle0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LLState lLState0 = new LLState();
      // Undeclared exception!
      try { 
        lLState0.touchObstacles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LLState lLState0 = new LLState();
      LinkedList<LLBlock.LLObstacle> linkedList0 = new LinkedList<LLBlock.LLObstacle>();
      lLState0.obstacles = (List<LLBlock.LLObstacle>) linkedList0;
      // Undeclared exception!
      try { 
        lLState0.touchObstacle(826);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 826, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[0];
      LLState lLState0 = new LLState(lLAgent0, (LLBlock.LLPad) null, lLBlock_LLObstacleArray0);
      // Undeclared exception!
      try { 
        lLState0.touchObstacle(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LLState lLState0 = new LLState();
      // Undeclared exception!
      try { 
        lLState0.touchAgent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.domain.singleagent.lunarlander.state.LLState", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LLState lLState0 = new LLState();
      // Undeclared exception!
      try { 
        lLState0.set((Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.core.oo.state.OOStateUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LLState lLState0 = new LLState();
      // Undeclared exception!
      try { 
        lLState0.objects();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.domain.singleagent.lunarlander.state.LLState", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LLState lLState0 = new LLState();
      // Undeclared exception!
      try { 
        lLState0.get(lLState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // An OOState variable Key must either be a OOVariableKey or String that can be parsed into an OOVariableKey, but key was of type burlap.domain.singleagent.lunarlander.state.LLState
         //
         verifyException("burlap.mdp.core.oo.state.OOStateUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LLState lLState0 = null;
      try {
        lLState0 = new LLState((LLAgent) null, (LLBlock.LLPad) null, (LLBlock.LLObstacle[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LLState lLState0 = new LLState();
      LinkedList<LLBlock.LLObstacle> linkedList0 = new LinkedList<LLBlock.LLObstacle>();
      lLState0.obstacles = (List<LLBlock.LLObstacle>) linkedList0;
      List<ObjectInstance> list0 = lLState0.objects();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent(707.2760047685, 2217.749457, 0.0);
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[3];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      List<ObjectInstance> list0 = lLState0.objects();
      assertEquals(5, list0.size());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent(707.2760047685, 2217.749457, 0.0);
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[3];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      List<LLBlock.LLObstacle> list0 = lLState0.touchObstacles();
      assertEquals(3, list0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LLState lLState0 = new LLState();
      // Undeclared exception!
      try { 
        lLState0.touchPad();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.domain.singleagent.lunarlander.state.LLState", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[7];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      // Undeclared exception!
      try { 
        lLState0.deepTouchObstacles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.domain.singleagent.lunarlander.state.LLState", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent(1.0, 0.0, 0.0, 1.0, 0.0);
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad(0.0, 0.0, 0.0, 0.0, "8H^[P7y_l)-vp\"N");
      LinkedList<LLBlock.LLObstacle> linkedList0 = new LinkedList<LLBlock.LLObstacle>();
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, linkedList0);
      lLState0.deepTouchObstacles();
      assertEquals(2, lLState0.numObjects());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LLState lLState0 = new LLState();
      // Undeclared exception!
      try { 
        lLState0.objectsOfClass("obstacle");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[0];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      List<ObjectInstance> list0 = lLState0.objectsOfClass("goal");
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LLState lLState0 = new LLState();
      List<ObjectInstance> list0 = lLState0.objectsOfClass("goal");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LLState lLState0 = new LLState();
      List<ObjectInstance> list0 = lLState0.objectsOfClass("agent");
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LLState lLState0 = new LLState();
      // Undeclared exception!
      try { 
        lLState0.objectsOfClass("mTJ~*0Da7fJk@pXV4tn");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown object class mTJ~*0Da7fJk@pXV4tn
         //
         verifyException("burlap.domain.singleagent.lunarlander.state.LLState", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[1];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      // Undeclared exception!
      try { 
        lLState0.variableKeys();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.core.oo.state.OOStateUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad(0.0, 0.0, 0.0, 0.0, "right");
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[1];
      LLBlock.LLObstacle lLBlock_LLObstacle0 = new LLBlock.LLObstacle(0.0, 0.0, 0.0, 0.0, "bottom");
      lLBlock_LLObstacleArray0[0] = lLBlock_LLObstacle0;
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      LLBlock.LLObstacle lLBlock_LLObstacle1 = (LLBlock.LLObstacle)lLState0.object("bottom");
      assertEquals("bottom", lLBlock_LLObstacle1.getName());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad(0.0, 0.0, 0.0, 0.0, "right");
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[1];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      ObjectInstance objectInstance0 = lLState0.object("right");
      assertEquals("right", objectInstance0.name());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad(0.0, 0.0, 0.0, 0.0, "right");
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[1];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      // Undeclared exception!
      try { 
        lLState0.object("bottom");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.core.oo.state.OOStateUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<LLBlock.LLObstacle> linkedList0 = new LinkedList<LLBlock.LLObstacle>();
      LLAgent lLAgent0 = new LLAgent();
      LLState lLState0 = new LLState(lLAgent0, (LLBlock.LLPad) null, linkedList0);
      // Undeclared exception!
      try { 
        lLState0.object("mTJ~*0Da7fJk@pXV4tn");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown object mTJ~*0Da7fJk@pXV4tn
         //
         verifyException("burlap.domain.singleagent.lunarlander.state.LLState", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLState lLState0 = new LLState(lLAgent0, (LLBlock.LLPad) null, (List<LLBlock.LLObstacle>) null);
      ObjectInstance objectInstance0 = lLState0.object("agent");
      assertEquals("agent", objectInstance0.className());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LLState lLState0 = new LLState();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      lLState0.pad = lLBlock_LLPad0;
      // Undeclared exception!
      try { 
        lLState0.numObjects();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.domain.singleagent.lunarlander.state.LLState", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[0];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      lLBlock_LLPad0.name = "agejt";
      lLState0.removeObject("agejt");
      // Undeclared exception!
      try { 
        lLState0.renameObject("agejt", "agejt");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown object agejt
         //
         verifyException("burlap.domain.singleagent.lunarlander.state.LLState", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLState lLState0 = new LLState();
      lLState0.addObject(lLAgent0);
      // Undeclared exception!
      try { 
        lLState0.renameObject("agent", "agent");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // LL Agent name must be agent
         //
         verifyException("burlap.domain.singleagent.lunarlander.state.LLState", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[1];
      LLBlock.LLObstacle lLBlock_LLObstacle0 = new LLBlock.LLObstacle(0.0, 0.0, 1.0, 0.0, "");
      lLBlock_LLObstacleArray0[0] = lLBlock_LLObstacle0;
      LLState lLState0 = new LLState(lLAgent0, (LLBlock.LLPad) null, lLBlock_LLObstacleArray0);
      lLState0.removeObject("");
      assertEquals(1, lLState0.numObjects());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[0];
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad(0.0, 0.0, 0.0, 0.0, "burlap.domain.singleagent.lunarlander.state.LLBlock");
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      // Undeclared exception!
      try { 
        lLState0.removeObject("agdnt");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown object agdnt
         //
         verifyException("burlap.domain.singleagent.lunarlander.state.LLState", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad(0.0, 0.0, 0.0, 0.0, "right");
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[1];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      lLState0.removeObject("right");
      // Undeclared exception!
      try { 
        lLState0.removeObject("^:f?lN`G;tqOpcTv");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.core.oo.state.OOStateUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLState lLState0 = new LLState();
      MutableOOState mutableOOState0 = lLState0.addObject(lLAgent0);
      MutableOOState mutableOOState1 = mutableOOState0.removeObject("agent");
      assertSame(lLState0, mutableOOState1);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LLState lLState0 = new LLState();
      BlocksWorldBlock blocksWorldBlock0 = new BlocksWorldBlock();
      // Undeclared exception!
      try { 
        lLState0.addObject(blocksWorldBlock0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown object class block
         //
         verifyException("burlap.domain.singleagent.lunarlander.state.LLState", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LLState lLState0 = new LLState();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      MutableOOState mutableOOState0 = lLState0.addObject(lLBlock_LLPad0);
      assertSame(mutableOOState0, lLState0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LLState lLState0 = new LLState();
      LLBlock.LLObstacle lLBlock_LLObstacle0 = new LLBlock.LLObstacle();
      // Undeclared exception!
      try { 
        lLState0.addObject(lLBlock_LLObstacle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LLState lLState0 = new LLState();
      // Undeclared exception!
      try { 
        lLState0.get((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.core.oo.state.OOStateUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LLAgent lLAgent0 = new LLAgent();
      LLBlock.LLPad lLBlock_LLPad0 = new LLBlock.LLPad();
      LLBlock.LLObstacle[] lLBlock_LLObstacleArray0 = new LLBlock.LLObstacle[6];
      LLState lLState0 = new LLState(lLAgent0, lLBlock_LLPad0, lLBlock_LLObstacleArray0);
      lLState0.touchAgent();
      assertEquals(8, lLState0.numObjects());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LLState lLState0 = new LLState();
      // Undeclared exception!
      try { 
        lLState0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.domain.singleagent.lunarlander.state.LLState", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      LLState lLState0 = new LLState();
      // Undeclared exception!
      try { 
        lLState0.touchObstacle(840);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.domain.singleagent.lunarlander.state.LLState", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LLState lLState0 = new LLState();
      State state0 = lLState0.copy();
      assertFalse(state0.equals((Object)lLState0));
  }
}
