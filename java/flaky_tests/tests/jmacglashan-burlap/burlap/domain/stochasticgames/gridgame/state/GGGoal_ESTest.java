/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 04:03:14 GMT 2022
 */

package burlap.domain.stochasticgames.gridgame.state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.domain.stochasticgames.gridgame.state.GGGoal;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GGGoal_ESTest extends GGGoal_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal(3, 3, (-2900), "Unknown state variable key ");
      GGGoal gGGoal1 = (GGGoal)gGGoal0.copy();
      assertEquals(3, gGGoal1.y);
      assertEquals(3, gGGoal1.x);
      assertEquals((-2900), gGGoal0.type);
      assertEquals((-2900), gGGoal1.type);
      assertEquals(3, gGGoal0.y);
      assertEquals(3, gGGoal0.x);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal((-443), 2513, 2513, "");
      GGGoal gGGoal1 = (GGGoal)gGGoal0.copy();
      assertEquals((-443), gGGoal1.x);
      assertEquals(2513, gGGoal1.y);
      assertEquals(2513, gGGoal1.type);
      assertEquals((-443), gGGoal0.x);
      assertEquals(2513, gGGoal0.y);
      assertEquals(2513, gGGoal0.type);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      gGGoal0.y = 2098;
      gGGoal0.toString();
      assertEquals("goal", gGGoal0.className());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal((-1239), 0, 0, "'v");
      gGGoal0.toString();
      assertEquals(0, gGGoal0.y);
      assertEquals(0, gGGoal0.type);
      assertEquals("goal", gGGoal0.className());
      assertEquals((-1239), gGGoal0.x);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      gGGoal0.type = 3;
      GGGoal gGGoal1 = (GGGoal)gGGoal0.copyWithName("Unknown state variable key ");
      assertEquals(3, gGGoal1.type);
      assertEquals(0, gGGoal1.x);
      assertEquals(0, gGGoal1.y);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      gGGoal0.x = 3718;
      GGGoal gGGoal1 = (GGGoal)gGGoal0.copyWithName("");
      assertEquals(0, gGGoal1.y);
      assertEquals(0, gGGoal1.type);
      assertEquals(3718, gGGoal1.x);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      gGGoal0.name = "x";
      String string0 = gGGoal0.name();
      assertEquals("x", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      gGGoal0.name = "";
      String string0 = gGGoal0.name();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      // Undeclared exception!
      try { 
        gGGoal0.set(gGGoal0, gGGoal0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Value is neither a Number nor a String.
         //
         verifyException("burlap.mdp.core.state.StateUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      // Undeclared exception!
      try { 
        gGGoal0.set(0, "null (goal): {\njava.lang.String@0000000002: {java.lang.Integer@0000000003}\njava.lang.String@0000000004: {java.lang.Integer@0000000003}\njava.lang.String@0000000005: {java.lang.Integer@0000000003}\n}");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      // Undeclared exception!
      try { 
        gGGoal0.set((Object) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.domain.stochasticgames.gridgame.state.GGGoal", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      // Undeclared exception!
      try { 
        gGGoal0.get((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.domain.stochasticgames.gridgame.state.GGGoal", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      Object object0 = gGGoal0.get("y");
      assertEquals(0, object0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      Object object0 = gGGoal0.get("x");
      assertEquals(0, object0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      String string0 = gGGoal0.className();
      assertEquals("goal", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      String string0 = gGGoal0.name();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal((-443), 2513, 2513, "");
      String string0 = gGGoal0.getName();
      assertEquals(2513, gGGoal0.y);
      assertEquals((-443), gGGoal0.x);
      assertEquals(2513, gGGoal0.type);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      List<Object> list0 = gGGoal0.variableKeys();
      assertEquals(3, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        gGGoal0.get(object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown state variable key java.lang.Object@7ad67230
         //
         verifyException("burlap.domain.stochasticgames.gridgame.state.GGGoal", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      // Undeclared exception!
      try { 
        gGGoal0.set(gGGoal0, gGGoal0.x);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unknown state variable key null (goal): {
         // java.lang.String@0000000002: {java.lang.Integer@0000000003}
         // java.lang.String@0000000004: {java.lang.Integer@0000000003}
         // java.lang.String@0000000005: {java.lang.Integer@0000000003}
         // }
         //
         verifyException("burlap.domain.stochasticgames.gridgame.state.GGGoal", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      gGGoal0.setName("TDVvg{r=P4 \"rt|;$x");
      String string0 = gGGoal0.getName();
      assertEquals("TDVvg{r=P4 \"rt|;$x", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GGGoal gGGoal0 = new GGGoal();
      String string0 = gGGoal0.getName();
      assertNull(string0);
  }
}
