/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 02:19:04 GMT 2022
 */

package burlap.behavior.stochasticgames.agents.twoplayer.singlestage.equilibriumplayer.equilibriumsolvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.behavior.stochasticgames.agents.twoplayer.singlestage.equilibriumplayer.BimatrixEquilibriumSolver;
import burlap.behavior.stochasticgames.agents.twoplayer.singlestage.equilibriumplayer.equilibriumsolvers.MaxMax;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MaxMax_ESTest extends MaxMax_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MaxMax maxMax0 = new MaxMax();
      double[][] doubleArray0 = new double[8][7];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = Double.NEGATIVE_INFINITY;
      doubleArray0[0] = doubleArray1;
      // Undeclared exception!
      try { 
        maxMax0.computeColStrategy(doubleArray0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 7 out of bounds for length 7
         //
         verifyException("burlap.behavior.stochasticgames.agents.twoplayer.singlestage.equilibriumplayer.equilibriumsolvers.MaxMax", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MaxMax maxMax0 = new MaxMax();
      double[][] doubleArray0 = new double[3][4];
      double[][] doubleArray1 = new double[5][4];
      double[] doubleArray2 = maxMax0.computeColStrategy(doubleArray0, doubleArray1);
      assertArrayEquals(new double[] {0.25, 0.25, 0.25, 0.25}, doubleArray2, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MaxMax maxMax0 = new MaxMax();
      double[][] doubleArray0 = new double[4][7];
      double[][] doubleArray1 = new double[8][0];
      double[] doubleArray2 = maxMax0.computeColStrategy(doubleArray0, doubleArray1);
      assertEquals(0, doubleArray2.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MaxMax maxMax0 = new MaxMax();
      double[][] doubleArray0 = new double[3][7];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = Double.NEGATIVE_INFINITY;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = maxMax0.computeRowStrategy(doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {0.3333333333333333, 0.3333333333333333, 0.3333333333333333}, doubleArray2, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MaxMax maxMax0 = new MaxMax();
      double[][] doubleArray0 = new double[4][1];
      double[][] doubleArray1 = new double[7][5];
      double[] doubleArray2 = maxMax0.computeRowStrategy(doubleArray0, doubleArray1);
      assertArrayEquals(new double[] {0.25, 0.25, 0.25, 0.25}, doubleArray2, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MaxMax maxMax0 = new MaxMax();
      double[][] doubleArray0 = new double[0][7];
      double[] doubleArray1 = maxMax0.computeRowStrategy(doubleArray0, doubleArray0);
      double[][] doubleArray2 = new double[4][7];
      doubleArray2[0] = doubleArray1;
      double[] doubleArray3 = maxMax0.computeColStrategy(doubleArray2, doubleArray2);
      assertArrayEquals(new double[] {}, doubleArray3, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MaxMax maxMax0 = new MaxMax();
      // Undeclared exception!
      try { 
        maxMax0.computeRowStrategy((double[][]) null, (double[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.stochasticgames.agents.twoplayer.singlestage.equilibriumplayer.equilibriumsolvers.MaxMax", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MaxMax maxMax0 = new MaxMax();
      // Undeclared exception!
      try { 
        maxMax0.computeColStrategy((double[][]) null, (double[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.stochasticgames.agents.twoplayer.singlestage.equilibriumplayer.equilibriumsolvers.MaxMax", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MaxMax maxMax0 = new MaxMax();
      double[][] doubleArray0 = new double[1][2];
      double[] doubleArray1 = new double[2];
      doubleArray1[1] = 1.0E-8;
      doubleArray0[0] = doubleArray1;
      maxMax0.solve(doubleArray0, doubleArray0);
      assertEquals(1, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      MaxMax maxMax0 = new MaxMax();
      double[][] doubleArray0 = new double[2][1];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 1.0E-8;
      doubleArray0[0] = doubleArray1;
      maxMax0.solve(doubleArray0, doubleArray0);
      assertEquals(1.0E-8, BimatrixEquilibriumSolver.doubleEpislon, 0.01);
  }
}
