/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 02:41:20 GMT 2022
 */

package burlap.behavior.singleagent.learnfromdemo.mlirl.support;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.behavior.functionapproximation.FunctionGradient;
import burlap.behavior.singleagent.learnfromdemo.mlirl.differentiableplanners.DifferentiableVI;
import burlap.behavior.singleagent.learnfromdemo.mlirl.differentiableplanners.dpoperator.DifferentiableSoftmaxOperator;
import burlap.behavior.singleagent.learnfromdemo.mlirl.support.BoltzmannPolicyGradient;
import burlap.behavior.singleagent.learnfromdemo.mlirl.support.DifferentiableQFunction;
import burlap.behavior.singleagent.learnfromdemo.mlirl.support.DifferentiableRF;
import burlap.mdp.core.action.Action;
import burlap.mdp.core.state.State;
import burlap.mdp.singleagent.pomdp.PODomain;
import burlap.mdp.stochasticgames.JointAction;
import burlap.statehashing.ReflectiveHashableStateFactory;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BoltzmannPolicyGradient_ESTest extends BoltzmannPolicyGradient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[4] = (-58.0);
      double double0 = BoltzmannPolicyGradient.logSum(doubleArray0, (-3711.24), (-732.7673939));
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FunctionGradient.SparseGradient functionGradient_SparseGradient0 = new FunctionGradient.SparseGradient();
      DifferentiableSoftmaxOperator differentiableSoftmaxOperator0 = new DifferentiableSoftmaxOperator();
      double[] doubleArray0 = new double[4];
      FunctionGradient[] functionGradientArray0 = new FunctionGradient[4];
      functionGradientArray0[0] = (FunctionGradient) functionGradient_SparseGradient0;
      functionGradientArray0[1] = (FunctionGradient) functionGradient_SparseGradient0;
      functionGradientArray0[2] = (FunctionGradient) functionGradient_SparseGradient0;
      functionGradientArray0[3] = (FunctionGradient) functionGradient_SparseGradient0;
      FunctionGradient functionGradient0 = differentiableSoftmaxOperator0.gradient(doubleArray0, functionGradientArray0);
      assertEquals(0, functionGradient0.numNonZeroPDs());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      double double0 = BoltzmannPolicyGradient.maxBetaScaled(doubleArray0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double double0 = BoltzmannPolicyGradient.maxBetaScaled(doubleArray0, (-747.647087474));
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[2] = 0.15707963267948966;
      double double0 = BoltzmannPolicyGradient.maxBetaScaled(doubleArray0, (-1.0));
      assertEquals((-0.15707963267948966), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double double0 = BoltzmannPolicyGradient.logSum(doubleArray0, 0.0, 418.036070453);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double double0 = BoltzmannPolicyGradient.logSum(doubleArray0, 1050.9283173382, 0.0);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FunctionGradient.SparseGradient functionGradient_SparseGradient0 = new FunctionGradient.SparseGradient();
      double[] doubleArray0 = new double[1];
      FunctionGradient[] functionGradientArray0 = new FunctionGradient[1];
      functionGradientArray0[0] = (FunctionGradient) functionGradient_SparseGradient0;
      FunctionGradient functionGradient0 = BoltzmannPolicyGradient.computePolicyGradient(doubleArray0, functionGradientArray0, 0, (-589.48457502));
      assertEquals(0, functionGradient0.numNonZeroPDs());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FunctionGradient[] functionGradientArray0 = new FunctionGradient[0];
      DifferentiableSoftmaxOperator differentiableSoftmaxOperator0 = new DifferentiableSoftmaxOperator(278.2482);
      double[] doubleArray0 = new double[0];
      FunctionGradient functionGradient0 = differentiableSoftmaxOperator0.gradient(doubleArray0, functionGradientArray0);
      double[] doubleArray1 = new double[9];
      doubleArray1[0] = 278.2482;
      functionGradient0.put((-2146677838), 3554.549472);
      FunctionGradient[] functionGradientArray1 = new FunctionGradient[7];
      functionGradientArray1[0] = functionGradient0;
      FunctionGradient functionGradient1 = BoltzmannPolicyGradient.computePolicyGradient(doubleArray1, doubleArray0, functionGradientArray1, 0, 278.2482);
      assertEquals(1, functionGradient1.numNonZeroPDs());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        BoltzmannPolicyGradient.maxBetaScaled((double[]) null, 598.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learnfromdemo.mlirl.support.BoltzmannPolicyGradient", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        BoltzmannPolicyGradient.logSum((double[]) null, (-168.33717273827216), (-168.33717273827216));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learnfromdemo.mlirl.support.BoltzmannPolicyGradient", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      // Undeclared exception!
      try { 
        BoltzmannPolicyGradient.computePolicyGradient(doubleArray0, (FunctionGradient[]) null, 4, (double) 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learnfromdemo.mlirl.support.BoltzmannPolicyGradient", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FunctionGradient[] functionGradientArray0 = new FunctionGradient[0];
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        BoltzmannPolicyGradient.computePolicyGradient(doubleArray0, functionGradientArray0, 1040, (double) 1040);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1040 out of bounds for length 0
         //
         verifyException("burlap.behavior.singleagent.learnfromdemo.mlirl.support.BoltzmannPolicyGradient", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        BoltzmannPolicyGradient.computePolicyGradient((double[]) null, (double[]) null, (FunctionGradient[]) null, 6, (double) 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learnfromdemo.mlirl.support.BoltzmannPolicyGradient", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JointAction jointAction0 = new JointAction();
      // Undeclared exception!
      try { 
        BoltzmannPolicyGradient.computeBoltzmannPolicyGradient((State) null, jointAction0, (DifferentiableQFunction) null, 1437.528261145);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learnfromdemo.mlirl.support.BoltzmannPolicyGradient", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FunctionGradient[] functionGradientArray0 = new FunctionGradient[7];
      // Undeclared exception!
      try { 
        BoltzmannPolicyGradient.combinedNonZeroPDParameters(functionGradientArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learnfromdemo.mlirl.support.BoltzmannPolicyGradient", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FunctionGradient.SparseGradient functionGradient_SparseGradient0 = new FunctionGradient.SparseGradient();
      double[] doubleArray0 = new double[4];
      FunctionGradient[] functionGradientArray0 = new FunctionGradient[1];
      functionGradientArray0[0] = (FunctionGradient) functionGradient_SparseGradient0;
      // Undeclared exception!
      try { 
        BoltzmannPolicyGradient.computePolicyGradient(doubleArray0, doubleArray0, functionGradientArray0, 0, 0.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("burlap.behavior.singleagent.learnfromdemo.mlirl.support.BoltzmannPolicyGradient", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FunctionGradient[] functionGradientArray0 = new FunctionGradient[0];
      DifferentiableSoftmaxOperator differentiableSoftmaxOperator0 = new DifferentiableSoftmaxOperator(278.2482);
      double[] doubleArray0 = new double[0];
      FunctionGradient functionGradient0 = differentiableSoftmaxOperator0.gradient(doubleArray0, functionGradientArray0);
      double[] doubleArray1 = new double[9];
      FunctionGradient[] functionGradientArray1 = new FunctionGradient[7];
      functionGradientArray1[0] = functionGradient0;
      FunctionGradient functionGradient1 = BoltzmannPolicyGradient.computePolicyGradient(doubleArray1, doubleArray0, functionGradientArray1, 0, 278.2482);
      assertEquals(0, functionGradient1.numNonZeroPDs());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FunctionGradient[] functionGradientArray0 = new FunctionGradient[1];
      FunctionGradient.SparseGradient functionGradient_SparseGradient0 = new FunctionGradient.SparseGradient();
      functionGradient_SparseGradient0.put(16, 16);
      functionGradientArray0[0] = (FunctionGradient) functionGradient_SparseGradient0;
      Set<Integer> set0 = BoltzmannPolicyGradient.combinedNonZeroPDParameters(functionGradientArray0);
      assertTrue(set0.contains(16));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FunctionGradient.SparseGradient functionGradient_SparseGradient0 = new FunctionGradient.SparseGradient();
      FunctionGradient[] functionGradientArray0 = new FunctionGradient[1];
      functionGradientArray0[0] = (FunctionGradient) functionGradient_SparseGradient0;
      Set<Integer> set0 = BoltzmannPolicyGradient.combinedNonZeroPDParameters(functionGradientArray0);
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PODomain pODomain0 = new PODomain();
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      DifferentiableVI differentiableVI0 = new DifferentiableVI(pODomain0, (DifferentiableRF) null, 39, 39, reflectiveHashableStateFactory0, 39, 39);
      // Undeclared exception!
      try { 
        BoltzmannPolicyGradient.computeBoltzmannPolicyGradient((State) null, (Action) null, differentiableVI0, 39);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error in computing BoltzmannPolicyGradient: Could not find query action in Q-value list.
         //
         verifyException("burlap.behavior.singleagent.learnfromdemo.mlirl.support.BoltzmannPolicyGradient", e);
      }
  }
}
