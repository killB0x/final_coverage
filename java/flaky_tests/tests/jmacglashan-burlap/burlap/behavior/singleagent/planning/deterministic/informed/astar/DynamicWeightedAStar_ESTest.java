/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 02:21:00 GMT 2022
 */

package burlap.behavior.singleagent.planning.deterministic.informed.astar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.behavior.singleagent.auxiliary.StateEnumerator;
import burlap.behavior.singleagent.planning.deterministic.SearchNode;
import burlap.behavior.singleagent.planning.deterministic.informed.NullHeuristic;
import burlap.behavior.singleagent.planning.deterministic.informed.PrioritizedSearchNode;
import burlap.behavior.singleagent.planning.deterministic.informed.astar.DynamicWeightedAStar;
import burlap.datastructures.HashIndexedHeap;
import burlap.domain.singleagent.blockdude.BlockDudeModel;
import burlap.domain.singleagent.blockdude.state.BlockDudeCell;
import burlap.mdp.auxiliary.common.GoalConditionTF;
import burlap.mdp.auxiliary.common.NullTermination;
import burlap.mdp.auxiliary.stateconditiontest.SinglePFSCT;
import burlap.mdp.auxiliary.stateconditiontest.StateConditionTest;
import burlap.mdp.auxiliary.stateconditiontest.TFGoalCondition;
import burlap.mdp.core.action.Action;
import burlap.mdp.core.oo.propositional.PropositionalFunction;
import burlap.mdp.singleagent.common.GoalBasedRF;
import burlap.mdp.singleagent.environment.EnvironmentOutcome;
import burlap.mdp.singleagent.model.FactoredModel;
import burlap.mdp.singleagent.oo.OOSADomain;
import burlap.mdp.singleagent.pomdp.PODomain;
import burlap.mdp.singleagent.pomdp.beliefstate.TabularBeliefState;
import burlap.mdp.stochasticgames.JointAction;
import burlap.statehashing.HashableState;
import burlap.statehashing.HashableStateFactory;
import burlap.statehashing.ReflectiveHashableStateFactory;
import burlap.statehashing.discretized.IDDiscHashableState;
import burlap.statehashing.masked.IDMaskedHashableState;
import burlap.statehashing.simple.IDSimpleHashableState;
import java.util.Comparator;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DynamicWeightedAStar_ESTest extends DynamicWeightedAStar_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      NullHeuristic nullHeuristic0 = new NullHeuristic();
      DynamicWeightedAStar dynamicWeightedAStar0 = new DynamicWeightedAStar(oOSADomain0, singlePFSCT0, reflectiveHashableStateFactory0, nullHeuristic0, 1.5707963267948966, 912);
      IDSimpleHashableState iDSimpleHashableState0 = new IDSimpleHashableState();
      dynamicWeightedAStar0.lastComputedDepth = (-1);
      double double0 = dynamicWeightedAStar0.computeF((PrioritizedSearchNode) null, (Action) null, (HashableState) iDSimpleHashableState0, (EnvironmentOutcome) null);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      NullHeuristic nullHeuristic0 = new NullHeuristic();
      NullTermination nullTermination0 = new NullTermination();
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      DynamicWeightedAStar dynamicWeightedAStar0 = new DynamicWeightedAStar(oOSADomain0, tFGoalCondition0, reflectiveHashableStateFactory0, nullHeuristic0, 2372.1, 1);
      dynamicWeightedAStar0.lastComputedCumR = 291.391558667;
      // Undeclared exception!
      try { 
        dynamicWeightedAStar0.planFromState(tabularBeliefState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.planning.deterministic.informed.astar.DynamicWeightedAStar", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      NullHeuristic nullHeuristic0 = new NullHeuristic();
      DynamicWeightedAStar dynamicWeightedAStar0 = new DynamicWeightedAStar(oOSADomain0, singlePFSCT0, reflectiveHashableStateFactory0, nullHeuristic0, 912, 0);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      // Undeclared exception!
      try { 
        dynamicWeightedAStar0.planFromState(tabularBeliefState0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class burlap.mdp.singleagent.pomdp.beliefstate.TabularBeliefState cannot be cast to class burlap.mdp.core.oo.state.OOState (burlap.mdp.singleagent.pomdp.beliefstate.TabularBeliefState and burlap.mdp.core.oo.state.OOState are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @658dd75d)
         //
         verifyException("burlap.mdp.auxiliary.stateconditiontest.SinglePFSCT", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      IDMaskedHashableState iDMaskedHashableState0 = new IDMaskedHashableState();
      SearchNode searchNode0 = new SearchNode(iDMaskedHashableState0);
      PrioritizedSearchNode prioritizedSearchNode0 = new PrioritizedSearchNode(searchNode0.s, searchNode0.generatingAction, searchNode0, 0.0);
      Comparator<PrioritizedSearchNode> comparator0 = (Comparator<PrioritizedSearchNode>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      HashIndexedHeap<PrioritizedSearchNode> hashIndexedHeap0 = new HashIndexedHeap<PrioritizedSearchNode>(comparator0);
      PrioritizedSearchNode prioritizedSearchNode1 = new PrioritizedSearchNode(prioritizedSearchNode0.s, (-3227.1));
      NullHeuristic nullHeuristic0 = new NullHeuristic();
      DynamicWeightedAStar dynamicWeightedAStar0 = new DynamicWeightedAStar(oOSADomain0, singlePFSCT0, (HashableStateFactory) null, nullHeuristic0, (-1377.1187635602098), 59);
      // Undeclared exception!
      try { 
        dynamicWeightedAStar0.updateOpen(hashIndexedHeap0, prioritizedSearchNode0, prioritizedSearchNode1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.planning.deterministic.informed.astar.AStar", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PODomain pODomain0 = new PODomain();
      OOSADomain oOSADomain0 = new OOSADomain();
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      NullHeuristic nullHeuristic0 = new NullHeuristic();
      DynamicWeightedAStar dynamicWeightedAStar0 = new DynamicWeightedAStar(pODomain0, singlePFSCT0, reflectiveHashableStateFactory0, nullHeuristic0, 1373.1800513, 0);
      dynamicWeightedAStar0.prePlanPrep();
      Comparator<PrioritizedSearchNode> comparator0 = (Comparator<PrioritizedSearchNode>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      HashIndexedHeap<PrioritizedSearchNode> hashIndexedHeap0 = new HashIndexedHeap<PrioritizedSearchNode>(comparator0);
      StateEnumerator stateEnumerator0 = new StateEnumerator(oOSADomain0, reflectiveHashableStateFactory0);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState(pODomain0, stateEnumerator0);
      Vector<Action> vector0 = new Vector<Action>();
      JointAction jointAction0 = new JointAction(vector0);
      PrioritizedSearchNode prioritizedSearchNode0 = new PrioritizedSearchNode(tabularBeliefState0, jointAction0, (SearchNode) null, (-3769.22493957));
      dynamicWeightedAStar0.insertIntoOpen(hashIndexedHeap0, prioritizedSearchNode0);
      assertEquals(0, dynamicWeightedAStar0.getDebugCode());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      NullHeuristic nullHeuristic0 = new NullHeuristic();
      NullTermination nullTermination0 = new NullTermination();
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      DynamicWeightedAStar dynamicWeightedAStar0 = new DynamicWeightedAStar(oOSADomain0, tFGoalCondition0, reflectiveHashableStateFactory0, nullHeuristic0, (-649), (-649));
      double double0 = dynamicWeightedAStar0.epsilonWeight((-649));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PODomain pODomain0 = new PODomain();
      NullHeuristic nullHeuristic0 = new NullHeuristic();
      DynamicWeightedAStar dynamicWeightedAStar0 = new DynamicWeightedAStar(pODomain0, (StateConditionTest) null, (HashableStateFactory) null, nullHeuristic0, (-42.37093819031904), 1874);
      double double0 = dynamicWeightedAStar0.epsilonWeight(0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      NullTermination nullTermination0 = new NullTermination();
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      GoalConditionTF goalConditionTF0 = new GoalConditionTF(tFGoalCondition0);
      tFGoalCondition0.setTf(goalConditionTF0);
      NullHeuristic nullHeuristic0 = new NullHeuristic();
      DynamicWeightedAStar dynamicWeightedAStar0 = new DynamicWeightedAStar(oOSADomain0, tFGoalCondition0, reflectiveHashableStateFactory0, nullHeuristic0, (-649), (-649));
      // Undeclared exception!
      try { 
        dynamicWeightedAStar0.planFromState(tabularBeliefState0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      NullTermination nullTermination0 = new NullTermination();
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      NullHeuristic nullHeuristic0 = new NullHeuristic();
      DynamicWeightedAStar dynamicWeightedAStar0 = new DynamicWeightedAStar(oOSADomain0, tFGoalCondition0, reflectiveHashableStateFactory0, nullHeuristic0, 1391.8787629669, 3296);
      BlockDudeCell blockDudeCell0 = new BlockDudeCell();
      // Undeclared exception!
      try { 
        dynamicWeightedAStar0.planFromState(blockDudeCell0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Reflective Hashable State should only be used with State objects that also already implement HashableState.
         //
         verifyException("burlap.statehashing.ReflectiveHashableStateFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      NullHeuristic nullHeuristic0 = new NullHeuristic();
      NullTermination nullTermination0 = new NullTermination();
      IDDiscHashableState iDDiscHashableState0 = new IDDiscHashableState();
      PrioritizedSearchNode prioritizedSearchNode0 = new PrioritizedSearchNode(iDDiscHashableState0, 3262);
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      DynamicWeightedAStar dynamicWeightedAStar0 = new DynamicWeightedAStar(oOSADomain0, tFGoalCondition0, reflectiveHashableStateFactory0, nullHeuristic0, 3262.0, 3262);
      dynamicWeightedAStar0.prePlanPrep();
      // Undeclared exception!
      try { 
        dynamicWeightedAStar0.computeF(prioritizedSearchNode0, (Action) null, (HashableState) iDDiscHashableState0, (EnvironmentOutcome) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/builder/HashCodeBuilder
         //
         verifyException("burlap.statehashing.simple.IDSimpleHashableState", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PODomain pODomain0 = new PODomain();
      OOSADomain oOSADomain0 = new OOSADomain();
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      NullHeuristic nullHeuristic0 = new NullHeuristic();
      DynamicWeightedAStar dynamicWeightedAStar0 = new DynamicWeightedAStar(pODomain0, singlePFSCT0, reflectiveHashableStateFactory0, nullHeuristic0, 1373.1800513, 0);
      Comparator<PrioritizedSearchNode> comparator0 = (Comparator<PrioritizedSearchNode>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      HashIndexedHeap<PrioritizedSearchNode> hashIndexedHeap0 = new HashIndexedHeap<PrioritizedSearchNode>(comparator0);
      StateEnumerator stateEnumerator0 = new StateEnumerator(oOSADomain0, reflectiveHashableStateFactory0);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState(pODomain0, stateEnumerator0);
      Vector<Action> vector0 = new Vector<Action>();
      JointAction jointAction0 = new JointAction(vector0);
      PrioritizedSearchNode prioritizedSearchNode0 = new PrioritizedSearchNode(tabularBeliefState0, jointAction0, (SearchNode) null, (-3769.22493957));
      // Undeclared exception!
      try { 
        dynamicWeightedAStar0.insertIntoOpen(hashIndexedHeap0, prioritizedSearchNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.planning.deterministic.informed.astar.AStar", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      NullHeuristic nullHeuristic0 = new NullHeuristic();
      NullTermination nullTermination0 = new NullTermination();
      IDDiscHashableState iDDiscHashableState0 = new IDDiscHashableState();
      PrioritizedSearchNode prioritizedSearchNode0 = new PrioritizedSearchNode(iDDiscHashableState0, 3262);
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      DynamicWeightedAStar dynamicWeightedAStar0 = new DynamicWeightedAStar(oOSADomain0, tFGoalCondition0, reflectiveHashableStateFactory0, nullHeuristic0, 3262.0, 3262);
      // Undeclared exception!
      try { 
        dynamicWeightedAStar0.computeF(prioritizedSearchNode0, (Action) null, (HashableState) iDDiscHashableState0, (EnvironmentOutcome) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.planning.deterministic.informed.astar.DynamicWeightedAStar", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      NullHeuristic nullHeuristic0 = new NullHeuristic();
      NullTermination nullTermination0 = new NullTermination();
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      GoalConditionTF goalConditionTF0 = new GoalConditionTF(tFGoalCondition0);
      GoalBasedRF goalBasedRF0 = new GoalBasedRF(goalConditionTF0, (-2702.0555027384216), 0.0);
      BlockDudeModel blockDudeModel0 = new BlockDudeModel((-1), 0);
      FactoredModel factoredModel0 = new FactoredModel(blockDudeModel0, goalBasedRF0, nullTermination0);
      oOSADomain0.setModel(factoredModel0);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      DynamicWeightedAStar dynamicWeightedAStar0 = new DynamicWeightedAStar(oOSADomain0, tFGoalCondition0, reflectiveHashableStateFactory0, nullHeuristic0, 2372.1, 1);
      // Undeclared exception!
      try { 
        dynamicWeightedAStar0.planFromState(tabularBeliefState0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Planning failed to find the goal state
         //
         verifyException("burlap.behavior.singleagent.planning.deterministic.DeterministicPlanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      NullHeuristic nullHeuristic0 = new NullHeuristic();
      NullTermination nullTermination0 = new NullTermination();
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      DynamicWeightedAStar dynamicWeightedAStar0 = new DynamicWeightedAStar(oOSADomain0, tFGoalCondition0, reflectiveHashableStateFactory0, nullHeuristic0, (-635), (-635));
      dynamicWeightedAStar0.postPlanPrep();
      assertEquals(0, dynamicWeightedAStar0.getDebugCode());
  }
}
