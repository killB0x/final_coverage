/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 03:35:45 GMT 2022
 */

package burlap.behavior.singleagent.options;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.behavior.policy.BoltzmannQPolicy;
import burlap.behavior.policy.CachedPolicy;
import burlap.behavior.policy.EpsilonGreedy;
import burlap.behavior.policy.GreedyDeterministicQPolicy;
import burlap.behavior.policy.GreedyQPolicy;
import burlap.behavior.policy.Policy;
import burlap.behavior.policy.RandomPolicy;
import burlap.behavior.singleagent.Episode;
import burlap.behavior.singleagent.auxiliary.StateEnumerator;
import burlap.behavior.singleagent.learnfromdemo.RewardValueProjection;
import burlap.behavior.singleagent.learning.actorcritic.actor.BoltzmannActor;
import burlap.behavior.singleagent.learning.tdmethods.SarsaLam;
import burlap.behavior.singleagent.options.SubgoalOption;
import burlap.behavior.singleagent.planning.stochastic.DynamicProgramming;
import burlap.behavior.singleagent.pomdp.qmdp.QMDP;
import burlap.domain.singleagent.blockdude.state.BlockDudeCell;
import burlap.domain.singleagent.blockdude.state.BlockDudeMap;
import burlap.domain.singleagent.blockdude.state.BlockDudeState;
import burlap.domain.singleagent.blocksworld.BlocksWorldBlock;
import burlap.mdp.auxiliary.common.ConstantStateGenerator;
import burlap.mdp.auxiliary.common.GoalConditionTF;
import burlap.mdp.auxiliary.common.NullTermination;
import burlap.mdp.auxiliary.common.SinglePFTF;
import burlap.mdp.auxiliary.stateconditiontest.SinglePFSCT;
import burlap.mdp.auxiliary.stateconditiontest.StateConditionTest;
import burlap.mdp.auxiliary.stateconditiontest.TFGoalCondition;
import burlap.mdp.core.TerminalFunction;
import burlap.mdp.core.action.ActionType;
import burlap.mdp.core.oo.propositional.PropositionalFunction;
import burlap.mdp.core.oo.state.generic.GenericOOState;
import burlap.mdp.core.state.State;
import burlap.mdp.singleagent.SADomain;
import burlap.mdp.singleagent.common.UniformCostRF;
import burlap.mdp.singleagent.environment.Environment;
import burlap.mdp.singleagent.environment.SimulatedEnvironment;
import burlap.mdp.singleagent.model.SampleModel;
import burlap.mdp.singleagent.oo.OOSADomain;
import burlap.mdp.singleagent.pomdp.PODomain;
import burlap.mdp.singleagent.pomdp.beliefstate.TabularBeliefState;
import burlap.statehashing.HashableStateFactory;
import burlap.statehashing.ReflectiveHashableStateFactory;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import javax.management.RuntimeErrorException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SubgoalOption_ESTest extends SubgoalOption_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition((TerminalFunction) null);
      subgoalOption0.terminationStates = (StateConditionTest) tFGoalCondition0;
      SubgoalOption subgoalOption1 = (SubgoalOption)subgoalOption0.copy();
      assertTrue(subgoalOption1.markov());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      GenericOOState genericOOState0 = new GenericOOState();
      Episode episode0 = new Episode();
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      subgoalOption0.setInitiationTest(singlePFSCT0);
      // Undeclared exception!
      try { 
        subgoalOption0.probabilityOfTermination(genericOOState0, episode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.options.SubgoalOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      subgoalOption0.setTerminationStates(singlePFSCT0);
      boolean boolean0 = subgoalOption0.enumerable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      subgoalOption0.terminationStates = (StateConditionTest) singlePFSCT0;
      StateConditionTest stateConditionTest0 = subgoalOption0.getInitiationTest();
      assertNull(stateConditionTest0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      Vector<ActionType> vector0 = new Vector<ActionType>();
      RandomPolicy randomPolicy0 = new RandomPolicy(vector0);
      CachedPolicy cachedPolicy0 = new CachedPolicy(reflectiveHashableStateFactory0, randomPolicy0, 1052);
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      SubgoalOption subgoalOption0 = new SubgoalOption("Somo", cachedPolicy0, singlePFSCT0, singlePFSCT0);
      subgoalOption0.hashCode();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DynamicProgramming dynamicProgramming0 = new DynamicProgramming();
      EpsilonGreedy epsilonGreedy0 = new EpsilonGreedy(dynamicProgramming0, (-2175.0478));
      CachedPolicy cachedPolicy0 = new CachedPolicy((HashableStateFactory) null, epsilonGreedy0, 26);
      SinglePFTF singlePFTF0 = new SinglePFTF((PropositionalFunction) null, true);
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(singlePFTF0);
      SubgoalOption subgoalOption0 = new SubgoalOption("SQ&].P}r%;.", cachedPolicy0, tFGoalCondition0, tFGoalCondition0);
      String string0 = subgoalOption0.toString();
      assertEquals("SQ&].P}r%;.", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      subgoalOption0.setName("");
      String string0 = subgoalOption0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      NullTermination nullTermination0 = new NullTermination();
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      subgoalOption0.setInitiationTest(tFGoalCondition0);
      boolean boolean0 = subgoalOption0.inInitiationSet((State) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      Policy policy0 = subgoalOption0.getPolicy();
      assertNull(policy0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      subgoalOption0.setName("Em6+wk(zib@k}R<Q0");
      String string0 = subgoalOption0.getName();
      assertEquals("Em6+wk(zib@k}R<Q0", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EpsilonGreedy epsilonGreedy0 = new EpsilonGreedy((-1.0));
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      SubgoalOption subgoalOption0 = new SubgoalOption("", epsilonGreedy0, singlePFSCT0, singlePFSCT0);
      String string0 = subgoalOption0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      BoltzmannActor boltzmannActor0 = new BoltzmannActor(oOSADomain0, reflectiveHashableStateFactory0, (-1863.085516263353));
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      SubgoalOption subgoalOption0 = new SubgoalOption("ffFdp^>[sF", boltzmannActor0, singlePFSCT0, singlePFSCT0);
      String string0 = subgoalOption0.actionName();
      assertEquals("ffFdp^>[sF", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BlockDudeState blockDudeState0 = new BlockDudeState();
      Episode episode0 = new Episode();
      GreedyDeterministicQPolicy greedyDeterministicQPolicy0 = new GreedyDeterministicQPolicy();
      NullTermination nullTermination0 = new NullTermination();
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      GoalConditionTF goalConditionTF0 = new GoalConditionTF(tFGoalCondition0);
      tFGoalCondition0.setTf(goalConditionTF0);
      SubgoalOption subgoalOption0 = new SubgoalOption("", greedyDeterministicQPolicy0, tFGoalCondition0, tFGoalCondition0);
      // Undeclared exception!
      try { 
        subgoalOption0.probabilityOfTermination(blockDudeState0, episode0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BlockDudeState blockDudeState0 = new BlockDudeState();
      Episode episode0 = new Episode();
      GreedyDeterministicQPolicy greedyDeterministicQPolicy0 = new GreedyDeterministicQPolicy();
      NullTermination nullTermination0 = new NullTermination();
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      CachedPolicy cachedPolicy0 = new CachedPolicy(reflectiveHashableStateFactory0, greedyDeterministicQPolicy0, 17);
      SubgoalOption subgoalOption0 = new SubgoalOption("burlap.behavior.singleagent.learnfromdemo.CustomRewardModel", cachedPolicy0, tFGoalCondition0, tFGoalCondition0);
      // Undeclared exception!
      try { 
        subgoalOption0.probabilityOfTermination(blockDudeState0, episode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Reflective Hashable State should only be used with State objects that also already implement HashableState.
         //
         verifyException("burlap.statehashing.ReflectiveHashableStateFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SinglePFTF singlePFTF0 = new SinglePFTF((PropositionalFunction) null);
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(singlePFTF0);
      SubgoalOption subgoalOption0 = new SubgoalOption((String) null, (Policy) null, tFGoalCondition0, tFGoalCondition0);
      BlocksWorldBlock blocksWorldBlock0 = new BlocksWorldBlock((String) null);
      Episode episode0 = new Episode();
      // Undeclared exception!
      try { 
        subgoalOption0.probabilityOfTermination(blocksWorldBlock0, episode0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class burlap.domain.singleagent.blocksworld.BlocksWorldBlock cannot be cast to class burlap.mdp.core.oo.state.OOState (burlap.domain.singleagent.blocksworld.BlocksWorldBlock and burlap.mdp.core.oo.state.OOState are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5580bbe7)
         //
         verifyException("burlap.mdp.auxiliary.common.SinglePFTF", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<ActionType> linkedList0 = new LinkedList<ActionType>();
      RandomPolicy randomPolicy0 = new RandomPolicy(linkedList0);
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      SubgoalOption subgoalOption0 = new SubgoalOption("9{ BL", randomPolicy0, singlePFSCT0, singlePFSCT0);
      BlockDudeMap blockDudeMap0 = new BlockDudeMap(1, 1);
      Episode episode0 = new Episode(blockDudeMap0);
      // Undeclared exception!
      try { 
        subgoalOption0.policyDistribution(blockDudeMap0, episode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Policy is undefined for the provided state
         //
         verifyException("burlap.behavior.policy.RandomPolicy", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      RandomPolicy randomPolicy0 = new RandomPolicy(oOSADomain0);
      SinglePFTF singlePFTF0 = new SinglePFTF((PropositionalFunction) null);
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(singlePFTF0);
      SubgoalOption subgoalOption0 = new SubgoalOption("", randomPolicy0, tFGoalCondition0, tFGoalCondition0);
      // Undeclared exception!
      try { 
        subgoalOption0.policy((State) null, (Episode) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Policy is undefined for the provided state
         //
         verifyException("burlap.behavior.policy.RandomPolicy", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      PODomain pODomain0 = new PODomain();
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      StateEnumerator stateEnumerator0 = new StateEnumerator(pODomain0, reflectiveHashableStateFactory0);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState(pODomain0, stateEnumerator0);
      GreedyQPolicy greedyQPolicy0 = new GreedyQPolicy();
      SarsaLam sarsaLam0 = new SarsaLam(pODomain0, 835.65951249495, reflectiveHashableStateFactory0, 835.65951249495, 0.0, greedyQPolicy0, 4, 0.0);
      GreedyDeterministicQPolicy greedyDeterministicQPolicy0 = new GreedyDeterministicQPolicy(sarsaLam0);
      subgoalOption0.policy = (Policy) greedyDeterministicQPolicy0;
      Episode episode0 = new Episode();
      // Undeclared exception!
      try { 
        subgoalOption0.policy(tabularBeliefState0, episode0);
        fail("Expecting exception: RuntimeErrorException");
      
      } catch(RuntimeErrorException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learning.tdmethods.QLearning", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BlockDudeState blockDudeState0 = new BlockDudeState();
      NullTermination nullTermination0 = new NullTermination();
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      Episode episode0 = new Episode();
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      GreedyQPolicy greedyQPolicy0 = new GreedyQPolicy();
      CachedPolicy cachedPolicy0 = new CachedPolicy(reflectiveHashableStateFactory0, greedyQPolicy0);
      SubgoalOption subgoalOption0 = new SubgoalOption((String) null, cachedPolicy0, tFGoalCondition0, tFGoalCondition0);
      // Undeclared exception!
      try { 
        subgoalOption0.policy(blockDudeState0, episode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Reflective Hashable State should only be used with State objects that also already implement HashableState.
         //
         verifyException("burlap.statehashing.ReflectiveHashableStateFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BlockDudeState blockDudeState0 = new BlockDudeState();
      Episode episode0 = new Episode();
      NullTermination nullTermination0 = new NullTermination();
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      UniformCostRF uniformCostRF0 = new UniformCostRF();
      RewardValueProjection.RewardProjectionType rewardValueProjection_RewardProjectionType0 = RewardValueProjection.RewardProjectionType.STATEACTION;
      SADomain sADomain0 = new SADomain();
      RewardValueProjection rewardValueProjection0 = new RewardValueProjection(uniformCostRF0, rewardValueProjection_RewardProjectionType0, sADomain0);
      GreedyQPolicy greedyQPolicy0 = new GreedyQPolicy(rewardValueProjection0);
      SubgoalOption subgoalOption0 = new SubgoalOption("d/KrG4q<j<]Fyux", greedyQPolicy0, tFGoalCondition0, tFGoalCondition0);
      // Undeclared exception!
      try { 
        subgoalOption0.policy(blockDudeState0, episode0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      subgoalOption0.setInitiationTest(singlePFSCT0);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      // Undeclared exception!
      try { 
        subgoalOption0.inInitiationSet(tabularBeliefState0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class burlap.mdp.singleagent.pomdp.beliefstate.TabularBeliefState cannot be cast to class burlap.mdp.core.oo.state.OOState (burlap.mdp.singleagent.pomdp.beliefstate.TabularBeliefState and burlap.mdp.core.oo.state.OOState are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5580bbe7)
         //
         verifyException("burlap.mdp.auxiliary.stateconditiontest.SinglePFSCT", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PODomain pODomain0 = new PODomain();
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      SarsaLam sarsaLam0 = new SarsaLam(pODomain0, 0.0, reflectiveHashableStateFactory0, 0.0, 851.0, 851.0);
      QMDP qMDP0 = new QMDP(pODomain0, sarsaLam0);
      GreedyDeterministicQPolicy greedyDeterministicQPolicy0 = new GreedyDeterministicQPolicy(qMDP0);
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      GoalConditionTF goalConditionTF0 = new GoalConditionTF(singlePFSCT0);
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(goalConditionTF0);
      SubgoalOption subgoalOption0 = new SubgoalOption("", greedyDeterministicQPolicy0, singlePFSCT0, tFGoalCondition0);
      BlockDudeCell blockDudeCell0 = BlockDudeCell.exit((-1753), (-1753));
      ConstantStateGenerator constantStateGenerator0 = new ConstantStateGenerator(blockDudeCell0);
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment((SampleModel) null, constantStateGenerator0);
      // Undeclared exception!
      try { 
        subgoalOption0.control(simulatedEnvironment0, 851.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // QMDP cannot return the Q-values for the given state, because the given state is not a EnumerableBeliefState instance. It is a burlap.domain.singleagent.blockdude.state.BlockDudeCell
         //
         verifyException("burlap.behavior.singleagent.pomdp.qmdp.QMDP", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      // Undeclared exception!
      try { 
        subgoalOption0.control((Environment) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.options.Option$Helper", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      PODomain pODomain0 = new PODomain();
      BoltzmannActor boltzmannActor0 = new BoltzmannActor(pODomain0, reflectiveHashableStateFactory0, 20);
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      SubgoalOption subgoalOption0 = new SubgoalOption((String) null, boltzmannActor0, singlePFSCT0, singlePFSCT0);
      SubgoalOption subgoalOption1 = (SubgoalOption)subgoalOption0.copy();
      // Undeclared exception!
      try { 
        subgoalOption1.equals(subgoalOption0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      boolean boolean0 = subgoalOption0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      boolean boolean0 = subgoalOption0.equals(subgoalOption0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      Object object0 = new Object();
      boolean boolean0 = subgoalOption0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      BlockDudeMap blockDudeMap0 = new BlockDudeMap();
      // Undeclared exception!
      try { 
        subgoalOption0.policyDistribution(blockDudeMap0, (Episode) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SubgoalOption cannot return policy distribution because underlying policy is not an EnumberablePolicy
         //
         verifyException("burlap.behavior.singleagent.options.SubgoalOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BlockDudeState blockDudeState0 = new BlockDudeState();
      Episode episode0 = new Episode();
      NullTermination nullTermination0 = new NullTermination();
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      LinkedList<ActionType> linkedList0 = new LinkedList<ActionType>();
      RandomPolicy randomPolicy0 = new RandomPolicy(linkedList0);
      SubgoalOption subgoalOption0 = new SubgoalOption("bH<X_f7fM pj%d2", randomPolicy0, tFGoalCondition0, tFGoalCondition0);
      double double0 = subgoalOption0.probabilityOfTermination(blockDudeState0, episode0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BlockDudeState blockDudeState0 = new BlockDudeState();
      Episode episode0 = new Episode(blockDudeState0);
      GreedyDeterministicQPolicy greedyDeterministicQPolicy0 = new GreedyDeterministicQPolicy();
      NullTermination nullTermination0 = new NullTermination();
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      SubgoalOption subgoalOption0 = new SubgoalOption("burlap.behavior.singleagent.options.SubgoalOption", greedyDeterministicQPolicy0, tFGoalCondition0, tFGoalCondition0);
      double double0 = subgoalOption0.probabilityOfTermination(blockDudeState0, episode0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      // Undeclared exception!
      try { 
        subgoalOption0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.options.SubgoalOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      String string0 = subgoalOption0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      List<ActionType> list0 = oOSADomain0.getActionTypes();
      RandomPolicy randomPolicy0 = new RandomPolicy(list0);
      NullTermination nullTermination0 = new NullTermination();
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(nullTermination0);
      SubgoalOption subgoalOption0 = new SubgoalOption("mAE`", randomPolicy0, tFGoalCondition0, tFGoalCondition0);
      BlockDudeMap blockDudeMap0 = new BlockDudeMap();
      ConstantStateGenerator constantStateGenerator0 = new ConstantStateGenerator(blockDudeMap0);
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment((SampleModel) null, constantStateGenerator0);
      // Undeclared exception!
      try { 
        subgoalOption0.control(simulatedEnvironment0, (-3380.5));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Policy is undefined for the provided state
         //
         verifyException("burlap.behavior.policy.RandomPolicy", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      // Undeclared exception!
      try { 
        subgoalOption0.inInitiationSet((State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.options.SubgoalOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      String string0 = subgoalOption0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      StateConditionTest stateConditionTest0 = subgoalOption0.getTerminationStates();
      assertNull(stateConditionTest0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      BoltzmannQPolicy boltzmannQPolicy0 = new BoltzmannQPolicy((-1.0));
      subgoalOption0.setPolicy(boltzmannQPolicy0);
      // Undeclared exception!
      try { 
        subgoalOption0.policyDistribution((State) null, (Episode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.policy.BoltzmannQPolicy", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      PODomain pODomain0 = new PODomain();
      BoltzmannActor boltzmannActor0 = new BoltzmannActor(pODomain0, reflectiveHashableStateFactory0, 20);
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      SubgoalOption subgoalOption0 = new SubgoalOption((String) null, boltzmannActor0, singlePFSCT0, singlePFSCT0);
      Policy policy0 = subgoalOption0.getPolicy();
      assertSame(boltzmannActor0, policy0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      GreedyQPolicy greedyQPolicy0 = new GreedyQPolicy();
      SinglePFTF singlePFTF0 = new SinglePFTF((PropositionalFunction) null, false);
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(singlePFTF0);
      SubgoalOption subgoalOption0 = new SubgoalOption("d@6mA2g$]X~U+V:D0", greedyQPolicy0, tFGoalCondition0, tFGoalCondition0);
      StateConditionTest stateConditionTest0 = subgoalOption0.getInitiationTest();
      assertSame(tFGoalCondition0, stateConditionTest0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      String string0 = subgoalOption0.actionName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      subgoalOption0.setName("");
      String string0 = subgoalOption0.actionName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      PODomain pODomain0 = new PODomain();
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      StateEnumerator stateEnumerator0 = new StateEnumerator(pODomain0, reflectiveHashableStateFactory0);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState(pODomain0, stateEnumerator0);
      Episode episode0 = new Episode();
      // Undeclared exception!
      try { 
        subgoalOption0.policy(tabularBeliefState0, episode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.options.SubgoalOption", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      subgoalOption0.setTerminationStates(singlePFSCT0);
      StateConditionTest stateConditionTest0 = subgoalOption0.getTerminationStates();
      assertSame(stateConditionTest0, singlePFSCT0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SubgoalOption subgoalOption0 = new SubgoalOption();
      boolean boolean0 = subgoalOption0.markov();
      assertTrue(boolean0);
  }
}
