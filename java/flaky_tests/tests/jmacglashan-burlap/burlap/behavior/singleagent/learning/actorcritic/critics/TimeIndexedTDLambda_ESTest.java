/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 04:10:48 GMT 2022
 */

package burlap.behavior.singleagent.learning.actorcritic.critics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.behavior.singleagent.Episode;
import burlap.behavior.singleagent.auxiliary.StateEnumerator;
import burlap.behavior.singleagent.learnfromdemo.RewardValueProjection;
import burlap.behavior.singleagent.learning.actorcritic.critics.TDLambda;
import burlap.behavior.singleagent.learning.actorcritic.critics.TimeIndexedTDLambda;
import burlap.behavior.singleagent.learning.tdmethods.QLearning;
import burlap.behavior.singleagent.learning.tdmethods.SarsaLam;
import burlap.behavior.singleagent.options.EnvironmentOptionOutcome;
import burlap.behavior.singleagent.options.SubgoalOption;
import burlap.behavior.singleagent.pomdp.qmdp.QMDP;
import burlap.behavior.valuefunction.ConstantValueFunction;
import burlap.behavior.valuefunction.ValueFunction;
import burlap.domain.singleagent.blockdude.state.BlockDudeAgent;
import burlap.domain.singleagent.blockdude.state.BlockDudeCell;
import burlap.domain.singleagent.blockdude.state.BlockDudeMap;
import burlap.domain.singleagent.blockdude.state.BlockDudeState;
import burlap.domain.singleagent.blocksworld.BlocksWorldBlock;
import burlap.mdp.auxiliary.common.NullTermination;
import burlap.mdp.auxiliary.common.SinglePFTF;
import burlap.mdp.core.TerminalFunction;
import burlap.mdp.core.action.Action;
import burlap.mdp.core.oo.propositional.PropositionalFunction;
import burlap.mdp.core.state.State;
import burlap.mdp.singleagent.SADomain;
import burlap.mdp.singleagent.common.GoalBasedRF;
import burlap.mdp.singleagent.common.NullRewardFunction;
import burlap.mdp.singleagent.common.UniformCostRF;
import burlap.mdp.singleagent.environment.EnvironmentOutcome;
import burlap.mdp.singleagent.pomdp.PODomain;
import burlap.mdp.singleagent.pomdp.beliefstate.TabularBeliefState;
import burlap.mdp.stochasticgames.JointAction;
import burlap.statehashing.HashableState;
import burlap.statehashing.ReflectiveHashableStateFactory;
import burlap.statehashing.discretized.IIDiscHashableState;
import burlap.statehashing.masked.IDMaskedHashableState;
import burlap.statehashing.maskeddiscretized.IDDiscMaskedHashableState;
import burlap.statehashing.maskeddiscretized.IIDiscMaskedHashableState;
import java.util.LinkedList;
import javax.management.RuntimeErrorException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TimeIndexedTDLambda_ESTest extends TimeIndexedTDLambda_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(1373.9960890549214, reflectiveHashableStateFactory0, 1373.9960890549214, 1373.9960890549214, 1373.9960890549214);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      TimeIndexedTDLambda timeIndexedTDLambda1 = new TimeIndexedTDLambda(1373.9960890549214, reflectiveHashableStateFactory0, 1373.9960890549214, timeIndexedTDLambda0, 1373.9960890549214, (-1));
      LinkedList<TDLambda.StateEligibilityTrace> linkedList0 = new LinkedList<TDLambda.StateEligibilityTrace>();
      timeIndexedTDLambda1.traces = linkedList0;
      EnvironmentOutcome environmentOutcome0 = new EnvironmentOutcome(tabularBeliefState0, (Action) null, tabularBeliefState0, 1373.9960890549214, false);
      timeIndexedTDLambda1.curTime = 2955;
      timeIndexedTDLambda1.critique(environmentOutcome0);
      double double0 = timeIndexedTDLambda1.critique(environmentOutcome0);
      assertEquals(2957, timeIndexedTDLambda1.getCurTime());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda((-691.45374967531), reflectiveHashableStateFactory0, (-137.8005), (-691.45374967531), 1370.1470742858082);
      PODomain pODomain0 = new PODomain();
      StateEnumerator stateEnumerator0 = new StateEnumerator(pODomain0, reflectiveHashableStateFactory0);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState(pODomain0, stateEnumerator0);
      TabularBeliefState tabularBeliefState1 = new TabularBeliefState(tabularBeliefState0);
      EnvironmentOutcome environmentOutcome0 = new EnvironmentOutcome(tabularBeliefState0, (Action) null, tabularBeliefState1, (-1029.0344527976), false);
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.critique(environmentOutcome0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learning.actorcritic.critics.TimeIndexedTDLambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      UniformCostRF uniformCostRF0 = new UniformCostRF();
      RewardValueProjection rewardValueProjection0 = new RewardValueProjection(uniformCostRF0);
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(0.1, reflectiveHashableStateFactory0, (-1.0), rewardValueProjection0, 0.0, 1);
      EnvironmentOutcome environmentOutcome0 = new EnvironmentOutcome(tabularBeliefState0, (Action) null, tabularBeliefState0, (-1.0), false);
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.critique(environmentOutcome0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learning.actorcritic.critics.TimeIndexedTDLambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(1772.7689148422, reflectiveHashableStateFactory0, 1772.7689148422, 1772.7689148422, 1772.7689148422);
      timeIndexedTDLambda0.curTime = 1564;
      PODomain pODomain0 = new PODomain();
      StateEnumerator stateEnumerator0 = new StateEnumerator(pODomain0, reflectiveHashableStateFactory0);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState(pODomain0, stateEnumerator0);
      EnvironmentOutcome environmentOutcome0 = new EnvironmentOutcome(tabularBeliefState0, (Action) null, tabularBeliefState0, 1772.7689148422, false);
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.critique(environmentOutcome0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learning.actorcritic.critics.TimeIndexedTDLambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(1365.8565, reflectiveHashableStateFactory0, 0.0, 0.0, (-137.8005));
      PODomain pODomain0 = new PODomain();
      StateEnumerator stateEnumerator0 = new StateEnumerator(pODomain0, reflectiveHashableStateFactory0);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState(pODomain0, stateEnumerator0);
      TabularBeliefState tabularBeliefState1 = new TabularBeliefState(tabularBeliefState0);
      EnvironmentOutcome environmentOutcome0 = new EnvironmentOutcome(tabularBeliefState1, (Action) null, tabularBeliefState0, 70.0, true);
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.critique(environmentOutcome0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learning.actorcritic.critics.TimeIndexedTDLambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda((-2544.2614592634045), reflectiveHashableStateFactory0, (-2544.2614592634045), (-2544.2614592634045), (-2544.2614592634045));
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      SubgoalOption subgoalOption0 = new SubgoalOption();
      Episode episode0 = new Episode();
      episode0.transition((Action) subgoalOption0, (State) tabularBeliefState0, (-2544.2614592634045));
      EnvironmentOptionOutcome environmentOptionOutcome0 = new EnvironmentOptionOutcome(tabularBeliefState0, subgoalOption0, tabularBeliefState0, (-2544.2614592634045), true, 0.0, episode0);
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.critique(environmentOptionOutcome0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learning.actorcritic.critics.TimeIndexedTDLambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda((-2710.46842), reflectiveHashableStateFactory0, (-2710.46842), (ValueFunction) null, (-1407.85261605886), 0);
      timeIndexedTDLambda0.setCurTime(12);
      assertEquals(12, timeIndexedTDLambda0.getCurTime());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      PODomain pODomain0 = new PODomain();
      QLearning qLearning0 = new QLearning(pODomain0, 504.76, reflectiveHashableStateFactory0, 504.76, 504.76, (-1239));
      QMDP qMDP0 = new QMDP(pODomain0, qLearning0);
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(504.76, reflectiveHashableStateFactory0, 504.76, qMDP0, (-2591.99051), 0);
      timeIndexedTDLambda0.startEpisode((State) null);
      timeIndexedTDLambda0.reset();
      assertEquals(0, timeIndexedTDLambda0.getCurTime());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      ConstantValueFunction constantValueFunction0 = new ConstantValueFunction();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(0.0, reflectiveHashableStateFactory0, 0.0, constantValueFunction0, 0.0, 586);
      BlockDudeAgent blockDudeAgent0 = new BlockDudeAgent(1551, 1551, (-45), false);
      int[][] intArray0 = new int[2][3];
      BlockDudeMap blockDudeMap0 = new BlockDudeMap(intArray0);
      BlockDudeCell[] blockDudeCellArray0 = new BlockDudeCell[3];
      BlockDudeState blockDudeState0 = new BlockDudeState(blockDudeAgent0, blockDudeMap0, (BlockDudeCell) null, blockDudeCellArray0);
      timeIndexedTDLambda0.startEpisode(blockDudeState0);
      timeIndexedTDLambda0.endEpisode();
      assertEquals(0, timeIndexedTDLambda0.getCurTime());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(9, reflectiveHashableStateFactory0, 6.949931438166644, 800, 6.949931438166644);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      TDLambda.VValue tDLambda_VValue0 = timeIndexedTDLambda0.getV(tabularBeliefState0, 538);
      assertNotNull(tDLambda_VValue0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda((-1.0), reflectiveHashableStateFactory0, 0.0, (-1.0), 0.0);
      timeIndexedTDLambda0.curTime = 850;
      int int0 = timeIndexedTDLambda0.getCurTime();
      assertEquals(850, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(1097.6057631362762, reflectiveHashableStateFactory0, 1097.6057631362762, 1097.6057631362762, 1097.6057631362762);
      timeIndexedTDLambda0.curTime = (-736);
      int int0 = timeIndexedTDLambda0.getCurTime();
      assertEquals((-736), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(1365.8565, reflectiveHashableStateFactory0, 1365.8565, 1365.8565, 1365.8565);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      TimeIndexedTDLambda timeIndexedTDLambda1 = new TimeIndexedTDLambda(1365.8565, reflectiveHashableStateFactory0, 1365.8565, timeIndexedTDLambda0, 1365.8565, 100);
      LinkedList<TDLambda.StateEligibilityTrace> linkedList0 = new LinkedList<TDLambda.StateEligibilityTrace>();
      timeIndexedTDLambda1.traces = linkedList0;
      EnvironmentOutcome environmentOutcome0 = new EnvironmentOutcome(tabularBeliefState0, (Action) null, tabularBeliefState0, 1365.8565, false);
      double double0 = timeIndexedTDLambda1.critique(environmentOutcome0);
      assertEquals(1, timeIndexedTDLambda1.getCurTime());
      assertEquals(1865563.9785922503, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(1365.8565, reflectiveHashableStateFactory0, 1365.8565, 1365.8565, 1365.8565);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      TimeIndexedTDLambda timeIndexedTDLambda1 = new TimeIndexedTDLambda(1365.8565, reflectiveHashableStateFactory0, 1365.8565, timeIndexedTDLambda0, 1365.8565, (-1));
      LinkedList<TDLambda.StateEligibilityTrace> linkedList0 = new LinkedList<TDLambda.StateEligibilityTrace>();
      timeIndexedTDLambda1.traces = linkedList0;
      EnvironmentOutcome environmentOutcome0 = new EnvironmentOutcome(tabularBeliefState0, (Action) null, tabularBeliefState0, (-871.8672888257), false);
      double double0 = timeIndexedTDLambda1.critique(environmentOutcome0);
      assertEquals(1, timeIndexedTDLambda1.getCurTime());
      assertEquals((-2237.7237888257), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda((-2554.10628280848), reflectiveHashableStateFactory0, (-2554.10628280848), (-2554.10628280848), (-2554.10628280848));
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.reset();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learning.actorcritic.critics.TDLambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      SADomain sADomain0 = new SADomain();
      SarsaLam sarsaLam0 = new SarsaLam(sADomain0, 1.0, reflectiveHashableStateFactory0, 289, 0.07, 0.0);
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda((-1812.01094377), reflectiveHashableStateFactory0, 289, sarsaLam0, (-4195.9549466), 289);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.getV(tabularBeliefState0, 2645);
        fail("Expecting exception: RuntimeErrorException");
      
      } catch(RuntimeErrorException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learning.tdmethods.QLearning", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      PODomain pODomain0 = new PODomain();
      NullRewardFunction nullRewardFunction0 = new NullRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      QMDP qMDP0 = new QMDP(pODomain0, nullRewardFunction0, nullTermination0, (-1580.53697426), reflectiveHashableStateFactory0, (-1580.53697426), 2361);
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(0.0, reflectiveHashableStateFactory0, 0.0, qMDP0, 0.0, 1);
      StateEnumerator stateEnumerator0 = new StateEnumerator(pODomain0, reflectiveHashableStateFactory0);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState(pODomain0, stateEnumerator0);
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.getV(tabularBeliefState0, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error; could not sample from belief state because the beliefs did not sum to 1; they summed to: 0.0
         //
         verifyException("burlap.mdp.singleagent.pomdp.beliefstate.TabularBeliefState", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda((-1.0), reflectiveHashableStateFactory0, (-1.0), (-1.0), (-1.0));
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.getV((HashableState) null, 9997);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(157.2373713, reflectiveHashableStateFactory0, 157.2373713, 157.2373713, 157.2373713);
      IIDiscHashableState iIDiscHashableState0 = new IIDiscHashableState();
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.getV(iIDiscHashableState0, 1394);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/builder/HashCodeBuilder
         //
         verifyException("burlap.statehashing.simple.IISimpleHashableState", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(37.95839099022437, reflectiveHashableStateFactory0, 37.95839099022437, 37.95839099022437, 37.95839099022437);
      IDMaskedHashableState iDMaskedHashableState0 = new IDMaskedHashableState();
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.getV(iDMaskedHashableState0, (-2467));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      PODomain pODomain0 = new PODomain();
      QLearning qLearning0 = new QLearning(pODomain0, 0.0, reflectiveHashableStateFactory0, (-929.8), 0.0);
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(0.0, reflectiveHashableStateFactory0, 0.0, qLearning0, 0.0, 6347);
      EnvironmentOutcome environmentOutcome0 = new EnvironmentOutcome(tabularBeliefState0, (Action) null, tabularBeliefState0, 0.0, false);
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.critique(environmentOutcome0);
        fail("Expecting exception: RuntimeErrorException");
      
      } catch(RuntimeErrorException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learning.tdmethods.QLearning", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(1373.9960890549214, reflectiveHashableStateFactory0, 1373.9960890549214, 1373.9960890549214, 1373.9960890549214);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      timeIndexedTDLambda0.vInitFunction = (ValueFunction) timeIndexedTDLambda0;
      EnvironmentOutcome environmentOutcome0 = new EnvironmentOutcome(tabularBeliefState0, (Action) null, tabularBeliefState0, 1373.9960890549214, false);
      // Undeclared exception!
      timeIndexedTDLambda0.critique(environmentOutcome0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda((-1.0), reflectiveHashableStateFactory0, (-1.0), (-1.0), (-1.0));
      BlocksWorldBlock blocksWorldBlock0 = new BlocksWorldBlock();
      JointAction jointAction0 = new JointAction();
      EnvironmentOutcome environmentOutcome0 = new EnvironmentOutcome(blocksWorldBlock0, jointAction0, blocksWorldBlock0, 9997, true);
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.critique(environmentOutcome0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Reflective Hashable State should only be used with State objects that also already implement HashableState.
         //
         verifyException("burlap.statehashing.ReflectiveHashableStateFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      SADomain sADomain0 = new SADomain();
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      SinglePFTF singlePFTF0 = new SinglePFTF((PropositionalFunction) null);
      GoalBasedRF goalBasedRF0 = new GoalBasedRF(singlePFTF0, 0.0);
      RewardValueProjection.RewardProjectionType rewardValueProjection_RewardProjectionType0 = RewardValueProjection.RewardProjectionType.ONESTEP;
      RewardValueProjection rewardValueProjection0 = new RewardValueProjection(goalBasedRF0, rewardValueProjection_RewardProjectionType0, sADomain0);
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda((-1), reflectiveHashableStateFactory0, (-2544.2614592634045), rewardValueProjection0, (-2544.2614592634045), 15);
      EnvironmentOutcome environmentOutcome0 = new EnvironmentOutcome(tabularBeliefState0, (Action) null, tabularBeliefState0, 15, false);
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.critique(environmentOutcome0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/builder/HashCodeBuilder
         //
         verifyException("burlap.statehashing.simple.IISimpleHashableState", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      UniformCostRF uniformCostRF0 = new UniformCostRF();
      RewardValueProjection rewardValueProjection0 = new RewardValueProjection(uniformCostRF0);
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(0, reflectiveHashableStateFactory0, 0, rewardValueProjection0, 0, 0);
      timeIndexedTDLambda0.curTime = (-2411);
      EnvironmentOutcome environmentOutcome0 = new EnvironmentOutcome(tabularBeliefState0, (Action) null, tabularBeliefState0, 0, false);
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.critique(environmentOutcome0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda((-2544.2614592634045), reflectiveHashableStateFactory0, (-2544.2614592634045), (-2544.2614592634045), (-2544.2614592634045));
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      SubgoalOption subgoalOption0 = new SubgoalOption();
      EnvironmentOutcome environmentOutcome0 = new EnvironmentOutcome(tabularBeliefState0, subgoalOption0, tabularBeliefState0, (-2544.2614592634045), true);
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.critique(environmentOutcome0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class burlap.mdp.singleagent.environment.EnvironmentOutcome cannot be cast to class burlap.behavior.singleagent.options.EnvironmentOptionOutcome (burlap.mdp.singleagent.environment.EnvironmentOutcome and burlap.behavior.singleagent.options.EnvironmentOptionOutcome are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3eb47529)
         //
         verifyException("burlap.behavior.singleagent.learning.actorcritic.critics.TimeIndexedTDLambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IDDiscMaskedHashableState iDDiscMaskedHashableState0 = new IDDiscMaskedHashableState();
      TimeIndexedTDLambda.StateTimeElibilityTrace timeIndexedTDLambda_StateTimeElibilityTrace0 = new TimeIndexedTDLambda.StateTimeElibilityTrace(iDDiscMaskedHashableState0, 3844, 1.0E-15, (TDLambda.VValue) null);
      assertEquals(3844, timeIndexedTDLambda_StateTimeElibilityTrace0.timeIndex);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(1373.9960890549214, reflectiveHashableStateFactory0, 0.0, 0.0, 0.0);
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      SubgoalOption subgoalOption0 = new SubgoalOption();
      Episode episode0 = new Episode();
      EnvironmentOptionOutcome environmentOptionOutcome0 = new EnvironmentOptionOutcome(tabularBeliefState0, subgoalOption0, tabularBeliefState0, 50.0, false, 825.52835302, episode0);
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.critique(environmentOptionOutcome0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learning.actorcritic.critics.TimeIndexedTDLambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(1097.6057631362762, reflectiveHashableStateFactory0, 1097.6057631362762, 1097.6057631362762, 1097.6057631362762);
      int int0 = timeIndexedTDLambda0.getCurTime();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      ConstantValueFunction constantValueFunction0 = new ConstantValueFunction();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(0.0, reflectiveHashableStateFactory0, 0.0, constantValueFunction0, 0.0, 586);
      // Undeclared exception!
      try { 
        timeIndexedTDLambda0.endEpisode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.learning.actorcritic.critics.TDLambda", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(0.0, reflectiveHashableStateFactory0, 0.0, 0.0, 0.0);
      IIDiscMaskedHashableState iIDiscMaskedHashableState0 = new IIDiscMaskedHashableState();
      // Undeclared exception!
      timeIndexedTDLambda0.getV(iIDiscMaskedHashableState0, Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      UniformCostRF uniformCostRF0 = new UniformCostRF();
      TimeIndexedTDLambda timeIndexedTDLambda0 = new TimeIndexedTDLambda(uniformCostRF0, (TerminalFunction) null, (-1.0), reflectiveHashableStateFactory0, (-1.0), (-1.0), (-1.0), 100);
      assertEquals(0, timeIndexedTDLambda0.getCurTime());
  }
}
