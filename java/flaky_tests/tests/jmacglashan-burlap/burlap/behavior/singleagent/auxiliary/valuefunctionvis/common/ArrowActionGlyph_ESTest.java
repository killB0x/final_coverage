/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 04:12:13 GMT 2022
 */

package burlap.behavior.singleagent.auxiliary.valuefunctionvis.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.behavior.singleagent.auxiliary.valuefunctionvis.common.ArrowActionGlyph;
import burlap.behavior.singleagent.auxiliary.valuefunctionvis.common.PolicyGlyphPainter2D;
import burlap.mdp.core.state.vardomain.VariableDomain;
import java.awt.Graphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ArrowActionGlyph_ESTest extends ArrowActionGlyph_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrowActionGlyph arrowActionGlyph0 = new ArrowActionGlyph(30);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(graphics2D0).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      arrowActionGlyph0.paintGlyph(graphics2D0, 30, 30, 30, 30);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      VariableDomain variableDomain0 = new VariableDomain();
      ArrowActionGlyph.getNSEWPolicyGlyphPainter(object0, object0, (VariableDomain) null, variableDomain0, 1.0, (-815.0), "Z5di& J%O{", "h2", (String) null, "g(f{38`m?3@b`");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrowActionGlyph arrowActionGlyph0 = new ArrowActionGlyph(2143009723);
      // Undeclared exception!
      arrowActionGlyph0.paintGlyph((Graphics2D) null, 2143009723, (-1758.0336F), 2143009723, 2143009723);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrowActionGlyph arrowActionGlyph0 = new ArrowActionGlyph(497);
      // Undeclared exception!
      try { 
        arrowActionGlyph0.paintGlyph((Graphics2D) null, 497, 497, 1.77073216E9F, 2683.97F);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1805762560
         //
         verifyException("java.awt.image.DataBufferInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrowActionGlyph arrowActionGlyph0 = new ArrowActionGlyph(3);
      // Undeclared exception!
      try { 
        arrowActionGlyph0.paintGlyph((Graphics2D) null, (-2758.09F), (-2758.09F), 2660.7832F, 1307.7495F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.auxiliary.valuefunctionvis.common.ArrowActionGlyph", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrowActionGlyph arrowActionGlyph0 = new ArrowActionGlyph(2);
      // Undeclared exception!
      try { 
        arrowActionGlyph0.paintGlyph((Graphics2D) null, 1, 476.736F, 1098.7081F, 3397.9F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.auxiliary.valuefunctionvis.common.ArrowActionGlyph", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArrowActionGlyph arrowActionGlyph0 = new ArrowActionGlyph(1);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(graphics2D0).drawImage(any(java.awt.Image.class) , anyInt() , anyInt() , any(java.awt.image.ImageObserver.class));
      arrowActionGlyph0.paintGlyph(graphics2D0, 1, 1, 325.42F, 325.42F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrowActionGlyph arrowActionGlyph0 = new ArrowActionGlyph(0);
      // Undeclared exception!
      try { 
        arrowActionGlyph0.paintGlyph((Graphics2D) null, 34.895596F, (-1.0F), 606.2F, 606.2F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.auxiliary.valuefunctionvis.common.ArrowActionGlyph", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrowActionGlyph arrowActionGlyph0 = new ArrowActionGlyph(2475);
      arrowActionGlyph0.paintGlyph((Graphics2D) null, (-1409.38F), 2652, 43.9F, 2.0F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrowActionGlyph arrowActionGlyph0 = new ArrowActionGlyph(2475);
      arrowActionGlyph0.paintGlyph((Graphics2D) null, 1.0F, (-1409.38F), (-6025.65F), 317.0F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrowActionGlyph arrowActionGlyph0 = new ArrowActionGlyph(2475);
      PolicyGlyphPainter2D policyGlyphPainter2D0 = ArrowActionGlyph.getNSEWPolicyGlyphPainter(arrowActionGlyph0, "|)K!mT!YgH{", (VariableDomain) null, (VariableDomain) null, (-2064.302F), 0.0, "~JJr)Tj)q", "", "", "");
      assertEquals(PolicyGlyphPainter2D.PolicyGlyphRenderStyle.DISTSCALED, policyGlyphPainter2D0.getRenderStyle());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrowActionGlyph arrowActionGlyph0 = new ArrowActionGlyph(317);
      Graphics2D graphics2D0 = mock(Graphics2D.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        arrowActionGlyph0.paintGlyph(graphics2D0, 317, 2.14748365E9F, 2.14748365E9F, 317);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Dimensions (width=2147483647 height=2147483647) are too large
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }
}
