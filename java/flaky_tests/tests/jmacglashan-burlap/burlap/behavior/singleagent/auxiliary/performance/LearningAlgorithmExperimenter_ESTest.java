/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 01:43:52 GMT 2022
 */

package burlap.behavior.singleagent.auxiliary.performance;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.behavior.singleagent.auxiliary.performance.LearningAlgorithmExperimenter;
import burlap.behavior.singleagent.auxiliary.performance.PerformanceMetric;
import burlap.behavior.singleagent.auxiliary.performance.TrialMode;
import burlap.behavior.singleagent.learning.LearningAgentFactory;
import burlap.mdp.singleagent.environment.Environment;
import burlap.mdp.singleagent.environment.SimulatedEnvironment;
import burlap.mdp.singleagent.environment.extensions.EnvironmentObserver;
import burlap.mdp.singleagent.environment.extensions.EnvironmentServer;
import burlap.mdp.singleagent.model.DelegatedModel;
import burlap.mdp.singleagent.model.SampleModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LearningAlgorithmExperimenter_ESTest extends LearningAlgorithmExperimenter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[5];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, 7, 0, learningAgentFactoryArray0);
      // Undeclared exception!
      try { 
        learningAlgorithmExperimenter0.startExperiment();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jfree/data/xy/XYDataset
         //
         verifyException("burlap.behavior.singleagent.auxiliary.performance.LearningAlgorithmExperimenter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EnvironmentObserver[] environmentObserverArray0 = new EnvironmentObserver[0];
      EnvironmentServer environmentServer0 = EnvironmentServer.constructor((Environment) null, environmentObserverArray0);
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[1];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter(environmentServer0, 0, 0, learningAgentFactoryArray0);
      learningAlgorithmExperimenter0.toggleTrialLengthInterpretation(false);
      assertEquals(63634013, learningAlgorithmExperimenter0.debugCode);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment((SampleModel) null);
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[6];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter(simulatedEnvironment0, 0, 0, learningAgentFactoryArray0);
      learningAlgorithmExperimenter0.toggleVisualPlots(false);
      assertEquals(63634013, learningAlgorithmExperimenter0.debugCode);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment((SampleModel) null);
      EnvironmentServer environmentServer0 = EnvironmentServer.constructor(simulatedEnvironment0, (EnvironmentObserver[]) null);
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[2];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter(environmentServer0, 28, 10, learningAgentFactoryArray0);
      learningAlgorithmExperimenter0.setPlotRefreshDelay((-3502));
      assertEquals(63634013, learningAlgorithmExperimenter0.debugCode);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[3];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, 22, 0, learningAgentFactoryArray0);
      TrialMode trialMode0 = TrialMode.MOST_RECENT_AND_AVERAGE;
      PerformanceMetric[] performanceMetricArray0 = new PerformanceMetric[4];
      // Undeclared exception!
      try { 
        learningAlgorithmExperimenter0.setUpPlottingConfiguration(5, (-1), 0, 5, trialMode0, performanceMetricArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jfree/data/xy/XYDataset
         //
         verifyException("burlap.behavior.singleagent.auxiliary.performance.LearningAlgorithmExperimenter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[2];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, (-242), (-242), learningAgentFactoryArray0);
      // Undeclared exception!
      try { 
        learningAlgorithmExperimenter0.setUpPlottingConfiguration((-242), (-242), (-242), (-242), (TrialMode) null, (PerformanceMetric[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.auxiliary.performance.LearningAlgorithmExperimenter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[6];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, 59, 59, learningAgentFactoryArray0);
      // Undeclared exception!
      try { 
        learningAlgorithmExperimenter0.runStepBoundTrial((LearningAgentFactory) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.auxiliary.performance.LearningAlgorithmExperimenter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[7];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, 195, 195, learningAgentFactoryArray0);
      // Undeclared exception!
      try { 
        learningAlgorithmExperimenter0.runEpisodeBoundTrial(learningAgentFactoryArray0[1]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.auxiliary.performance.LearningAlgorithmExperimenter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = null;
      try {
        learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, (-2827), (-2827), (LearningAgentFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.auxiliary.performance.LearningAlgorithmExperimenter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DelegatedModel delegatedModel0 = new DelegatedModel((SampleModel) null);
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(delegatedModel0);
      EnvironmentObserver[] environmentObserverArray0 = new EnvironmentObserver[0];
      EnvironmentServer environmentServer0 = EnvironmentServer.constructor(simulatedEnvironment0, environmentObserverArray0);
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[1];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter(environmentServer0, (-1653), 763, learningAgentFactoryArray0);
      learningAlgorithmExperimenter0.writeEpisodeDataToCSV("(jo:w`kW!h:F>+I");
      assertEquals(63634013, learningAlgorithmExperimenter0.debugCode);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[4];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, (-251), 8, learningAgentFactoryArray0);
      learningAlgorithmExperimenter0.completedExperiment = true;
      // Undeclared exception!
      try { 
        learningAlgorithmExperimenter0.writeEpisodeDataToCSV("R*dNsZnm7xGO");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.auxiliary.performance.LearningAlgorithmExperimenter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[3];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, 22, 0, learningAgentFactoryArray0);
      learningAlgorithmExperimenter0.writeStepDataToCSV((String) null);
      assertEquals(63634013, learningAlgorithmExperimenter0.debugCode);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[6];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, (-261), (-261), learningAgentFactoryArray0);
      learningAlgorithmExperimenter0.completedExperiment = true;
      // Undeclared exception!
      try { 
        learningAlgorithmExperimenter0.writeStepDataToCSV("Experiment was already run and has completed. If you want to run a new experiment create a new Experiment object.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.auxiliary.performance.LearningAlgorithmExperimenter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[8];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, 1000, 1, learningAgentFactoryArray0);
      learningAlgorithmExperimenter0.writeStepAndEpisodeDataToCSV(".y;MdZ2w");
      assertEquals(63634013, learningAlgorithmExperimenter0.debugCode);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[4];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, (-251), 8, learningAgentFactoryArray0);
      learningAlgorithmExperimenter0.completedExperiment = true;
      // Undeclared exception!
      try { 
        learningAlgorithmExperimenter0.writeStepAndEpisodeDataToCSV((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.auxiliary.performance.LearningAlgorithmExperimenter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[15];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, 1, 1, learningAgentFactoryArray0);
      // Undeclared exception!
      try { 
        learningAlgorithmExperimenter0.startExperiment();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jfree/data/xy/XYDataset
         //
         verifyException("burlap.behavior.singleagent.auxiliary.performance.LearningAlgorithmExperimenter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[4];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, (-251), (-251), learningAgentFactoryArray0);
      learningAlgorithmExperimenter0.completedExperiment = true;
      learningAlgorithmExperimenter0.startExperiment();
      assertEquals(63634013, learningAlgorithmExperimenter0.debugCode);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[4];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, (-251), (-251), learningAgentFactoryArray0);
      learningAlgorithmExperimenter0.setPlotCISignificance(0.0);
      assertEquals(63634013, learningAlgorithmExperimenter0.debugCode);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment((SampleModel) null);
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[6];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter(simulatedEnvironment0, 1, 1, learningAgentFactoryArray0);
      TrialMode trialMode0 = TrialMode.MOST_RECENT_AND_AVERAGE;
      PerformanceMetric[] performanceMetricArray0 = new PerformanceMetric[9];
      // Undeclared exception!
      try { 
        learningAlgorithmExperimenter0.setUpPlottingConfiguration(26, 1, 26, 1, trialMode0, performanceMetricArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jfree/data/xy/XYDataset
         //
         verifyException("burlap.behavior.singleagent.auxiliary.performance.LearningAlgorithmExperimenter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[3];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, (-232), (-232), learningAgentFactoryArray0);
      TrialMode trialMode0 = TrialMode.MOST_RECENT_TRIAL_ONLY;
      // Undeclared exception!
      try { 
        learningAlgorithmExperimenter0.setUpPlottingConfiguration((-232), (-232), (-232), (-232), trialMode0, (PerformanceMetric[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jfree/data/xy/XYDataset
         //
         verifyException("burlap.behavior.singleagent.auxiliary.performance.LearningAlgorithmExperimenter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[0];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = null;
      try {
        learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, 998, 998, learningAgentFactoryArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Zero agent factories provided. At least one must be given for an experiment
         //
         verifyException("burlap.behavior.singleagent.auxiliary.performance.LearningAlgorithmExperimenter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[2];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, 8, 8, learningAgentFactoryArray0);
      learningAlgorithmExperimenter0.toggleTrialLengthInterpretation(true);
      assertEquals(63634013, learningAlgorithmExperimenter0.debugCode);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LearningAgentFactory[] learningAgentFactoryArray0 = new LearningAgentFactory[4];
      LearningAlgorithmExperimenter learningAlgorithmExperimenter0 = new LearningAlgorithmExperimenter((Environment) null, (-709), (-709), learningAgentFactoryArray0);
      learningAlgorithmExperimenter0.toggleVisualPlots(true);
      assertEquals(63634013, learningAlgorithmExperimenter0.debugCode);
  }
}
