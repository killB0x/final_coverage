/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 03:03:07 GMT 2022
 */

package burlap.behavior.singleagent.auxiliary.valuefunctionvis.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.behavior.policy.GreedyQPolicy;
import burlap.behavior.singleagent.auxiliary.valuefunctionvis.common.ArrowActionGlyph;
import burlap.behavior.singleagent.auxiliary.valuefunctionvis.common.PolicyGlyphPainter2D;
import burlap.domain.singleagent.blockdude.state.BlockDudeMap;
import burlap.domain.singleagent.blocksworld.BlocksWorldBlock;
import burlap.mdp.core.state.vardomain.VariableDomain;
import java.awt.Graphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PolicyGlyphPainter2D_ESTest extends PolicyGlyphPainter2D_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PolicyGlyphPainter2D policyGlyphPainter2D0 = new PolicyGlyphPainter2D();
      float[] floatArray0 = policyGlyphPainter2D0.rescaleRect(1420.2F, 1420.2F, 0.2F, 0.2F, 1420.2F);
      assertEquals(0.01, policyGlyphPainter2D0.getSoftTieRenderStyleDelta(), 0.01);
      assertArrayEquals(new float[] {1278.2799F, 1278.2799F, 284.04F, 284.04F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GreedyQPolicy greedyQPolicy0 = new GreedyQPolicy();
      BlockDudeMap blockDudeMap0 = new BlockDudeMap();
      VariableDomain variableDomain0 = new VariableDomain(0.01, 0.0);
      PolicyGlyphPainter2D policyGlyphPainter2D0 = ArrowActionGlyph.getNSEWPolicyGlyphPainter((Object) null, variableDomain0, variableDomain0, variableDomain0, (-3531.79F), 1.0E-6, (String) null, "burlap.domain.singleagent.blockdude.BlockDudeVisualizer$BricksPainter", "turnRight", "DISTSCALED");
      // Undeclared exception!
      try { 
        policyGlyphPainter2D0.paintStatePolicy((Graphics2D) null, blockDudeMap0, greedyQPolicy0, (-672.26F), 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.auxiliary.valuefunctionvis.common.PolicyGlyphPainter2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GreedyQPolicy greedyQPolicy0 = new GreedyQPolicy();
      BlockDudeMap blockDudeMap0 = new BlockDudeMap();
      VariableDomain variableDomain0 = new VariableDomain();
      VariableDomain variableDomain1 = new VariableDomain(1.0F, 0.0);
      PolicyGlyphPainter2D policyGlyphPainter2D0 = ArrowActionGlyph.getNSEWPolicyGlyphPainter((Object) null, (Object) null, variableDomain0, variableDomain1, 0.0, 0.0, "MAXACTION", "MAXACTION", "", (String) null);
      // Undeclared exception!
      try { 
        policyGlyphPainter2D0.paintStatePolicy((Graphics2D) null, blockDudeMap0, greedyQPolicy0, (-794.7208F), 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.auxiliary.valuefunctionvis.common.PolicyGlyphPainter2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PolicyGlyphPainter2D policyGlyphPainter2D0 = new PolicyGlyphPainter2D();
      GreedyQPolicy greedyQPolicy0 = new GreedyQPolicy();
      BlockDudeMap blockDudeMap0 = new BlockDudeMap();
      ArrowActionGlyph arrowActionGlyph0 = new ArrowActionGlyph((-3146));
      PolicyGlyphPainter2D policyGlyphPainter2D1 = ArrowActionGlyph.getNSEWPolicyGlyphPainter(policyGlyphPainter2D0, arrowActionGlyph0, (VariableDomain) null, (VariableDomain) null, 0.99, 1.0E-15, "", "", "lYv$m(eu#RRXk", "+ Q]u3*)Lu");
      // Undeclared exception!
      try { 
        policyGlyphPainter2D1.paintStatePolicy((Graphics2D) null, blockDudeMap0, greedyQPolicy0, 0.0F, 2736.9016F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.auxiliary.valuefunctionvis.common.PolicyGlyphPainter2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PolicyGlyphPainter2D policyGlyphPainter2D0 = new PolicyGlyphPainter2D();
      ArrowActionGlyph arrowActionGlyph0 = new ArrowActionGlyph(15);
      policyGlyphPainter2D0.setActionNameGlyphPainter("dir", arrowActionGlyph0);
      assertEquals(0.01, policyGlyphPainter2D0.getSoftTieRenderStyleDelta(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PolicyGlyphPainter2D policyGlyphPainter2D0 = new PolicyGlyphPainter2D();
      VariableDomain variableDomain0 = new VariableDomain();
      policyGlyphPainter2D0.setXYKeys((Object) null, (Object) null, variableDomain0, variableDomain0, 0.0, 0.0);
      assertEquals(0.01, policyGlyphPainter2D0.getSoftTieRenderStyleDelta(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GreedyQPolicy greedyQPolicy0 = new GreedyQPolicy();
      BlockDudeMap blockDudeMap0 = new BlockDudeMap();
      VariableDomain variableDomain0 = new VariableDomain(0.01, 0.0);
      PolicyGlyphPainter2D policyGlyphPainter2D0 = ArrowActionGlyph.getNSEWPolicyGlyphPainter((Object) null, (Object) null, variableDomain0, variableDomain0, 0.0, (-3531.79F), "", "", "", "O6J");
      // Undeclared exception!
      try { 
        policyGlyphPainter2D0.paintStatePolicy((Graphics2D) null, blockDudeMap0, greedyQPolicy0, (-3280.3923F), (-0.032632418F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.auxiliary.valuefunctionvis.common.PolicyGlyphPainter2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PolicyGlyphPainter2D policyGlyphPainter2D0 = new PolicyGlyphPainter2D();
      assertEquals(0.01, policyGlyphPainter2D0.getSoftTieRenderStyleDelta(), 0.01);
      
      policyGlyphPainter2D0.setSoftTieRenderStyleDelta(0.0);
      double double0 = policyGlyphPainter2D0.getSoftTieRenderStyleDelta();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PolicyGlyphPainter2D policyGlyphPainter2D0 = new PolicyGlyphPainter2D();
      policyGlyphPainter2D0.setSoftTieRenderStyleDelta((-1117.2175300087));
      double double0 = policyGlyphPainter2D0.getSoftTieRenderStyleDelta();
      assertEquals((-1117.2175300087), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PolicyGlyphPainter2D policyGlyphPainter2D0 = new PolicyGlyphPainter2D();
      PolicyGlyphPainter2D.PolicyGlyphRenderStyle policyGlyphPainter2D_PolicyGlyphRenderStyle0 = PolicyGlyphPainter2D.PolicyGlyphRenderStyle.MAXACTION;
      policyGlyphPainter2D0.setRenderStyle(policyGlyphPainter2D_PolicyGlyphRenderStyle0);
      policyGlyphPainter2D0.getRenderStyle();
      assertEquals(PolicyGlyphPainter2D.PolicyGlyphRenderStyle.MAXACTION, policyGlyphPainter2D0.getRenderStyle());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PolicyGlyphPainter2D policyGlyphPainter2D0 = new PolicyGlyphPainter2D();
      policyGlyphPainter2D0.actionNameToGlyphPainter = null;
      ArrowActionGlyph arrowActionGlyph0 = new ArrowActionGlyph(12);
      // Undeclared exception!
      try { 
        policyGlyphPainter2D0.setActionNameGlyphPainter("MAXACTION", arrowActionGlyph0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.singleagent.auxiliary.valuefunctionvis.common.PolicyGlyphPainter2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PolicyGlyphPainter2D policyGlyphPainter2D0 = new PolicyGlyphPainter2D();
      GreedyQPolicy greedyQPolicy0 = new GreedyQPolicy();
      BlocksWorldBlock blocksWorldBlock0 = new BlocksWorldBlock();
      // Undeclared exception!
      try { 
        policyGlyphPainter2D0.paintStatePolicy((Graphics2D) null, blocksWorldBlock0, greedyQPolicy0, 190.57204F, 190.57204F);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Key must be a string
         //
         verifyException("burlap.domain.singleagent.blocksworld.BlocksWorldBlock", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PolicyGlyphPainter2D policyGlyphPainter2D0 = new PolicyGlyphPainter2D();
      GreedyQPolicy greedyQPolicy0 = new GreedyQPolicy();
      BlockDudeMap blockDudeMap0 = new BlockDudeMap(0, 0);
      // Undeclared exception!
      try { 
        policyGlyphPainter2D0.paintStatePolicy((Graphics2D) null, blockDudeMap0, greedyQPolicy0, 0, (-0.8942622F));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class [[I cannot be cast to class java.lang.Number ([[I and java.lang.Number are in module java.base of loader 'bootstrap')
         //
         verifyException("burlap.behavior.singleagent.auxiliary.valuefunctionvis.common.PolicyGlyphPainter2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object object0 = new Object();
      VariableDomain variableDomain0 = new VariableDomain();
      PolicyGlyphPainter2D policyGlyphPainter2D0 = ArrowActionGlyph.getNSEWPolicyGlyphPainter(object0, object0, variableDomain0, variableDomain0, 0.0, 0.0, (String) null, "", "", "");
      PolicyGlyphPainter2D.PolicyGlyphRenderStyle policyGlyphPainter2D_PolicyGlyphRenderStyle0 = policyGlyphPainter2D0.getRenderStyle();
      int int0 = policyGlyphPainter2D_PolicyGlyphRenderStyle0.toInt();
      assertEquals(0.01, policyGlyphPainter2D0.getSoftTieRenderStyleDelta(), 0.01);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PolicyGlyphPainter2D policyGlyphPainter2D0 = new PolicyGlyphPainter2D();
      float[] floatArray0 = policyGlyphPainter2D0.rescaleRect(0.73333335F, (-1128.0203F), (-349.97F), (-2483.8596F), (-2483.8596F));
      assertArrayEquals(new float[] {(-434812.44F), (-3087149.2F), 869276.4F, 6169558.5F}, floatArray0, 0.01F);
      assertEquals(0.01, policyGlyphPainter2D0.getSoftTieRenderStyleDelta(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PolicyGlyphPainter2D policyGlyphPainter2D0 = new PolicyGlyphPainter2D();
      double double0 = policyGlyphPainter2D0.getSoftTieRenderStyleDelta();
      assertEquals(0.01, double0, 0.01);
  }
}
