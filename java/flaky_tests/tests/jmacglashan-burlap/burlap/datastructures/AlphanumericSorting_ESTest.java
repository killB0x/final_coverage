/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 02:36:13 GMT 2022
 */

package burlap.datastructures;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.datastructures.AlphanumericSorting;
import java.util.function.Function;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AlphanumericSorting_ESTest extends AlphanumericSorting_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AlphanumericSorting alphanumericSorting0 = new AlphanumericSorting();
      Object object0 = new Object();
      Function<Object, Object> function0 = Function.identity();
      int int0 = alphanumericSorting0.compare(object0, function0);
      assertEquals((-9), int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AlphanumericSorting alphanumericSorting0 = new AlphanumericSorting();
      // Undeclared exception!
      try { 
        alphanumericSorting0.compare((Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AlphanumericSorting alphanumericSorting0 = new AlphanumericSorting();
      Object object0 = new Object();
      Object object1 = new Object();
      int int0 = alphanumericSorting0.compare(object0, object1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AlphanumericSorting alphanumericSorting0 = new AlphanumericSorting();
      Object object0 = new Object();
      int int0 = alphanumericSorting0.compare(object0, object0);
      assertEquals(0, int0);
      
      Object object1 = new Object();
      int int1 = alphanumericSorting0.compare(object1, object0);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[0];
      AlphanumericSorting.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }
}
