/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 00:47:03 GMT 2022
 */

package burlap.mdp.stochasticgames.world;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.behavior.policy.GreedyDeterministicQPolicy;
import burlap.behavior.singleagent.learning.tdmethods.SarsaLam;
import burlap.behavior.stochasticgames.GameEpisode;
import burlap.behavior.stochasticgames.JointPolicy;
import burlap.behavior.stochasticgames.agents.RandomSGAgent;
import burlap.behavior.stochasticgames.agents.SetStrategySGAgent;
import burlap.behavior.stochasticgames.agents.maql.MultiAgentQLearning;
import burlap.behavior.stochasticgames.madynamicprogramming.SGBackupOperator;
import burlap.behavior.stochasticgames.madynamicprogramming.policies.ECorrelatedQJointPolicy;
import burlap.behavior.stochasticgames.madynamicprogramming.policies.EGreedyJointPolicy;
import burlap.behavior.stochasticgames.madynamicprogramming.policies.EMinMaxPolicy;
import burlap.behavior.stochasticgames.solvers.CorrelatedEquilibriumSolver;
import burlap.domain.singleagent.blockdude.state.BlockDudeAgent;
import burlap.domain.singleagent.blockdude.state.BlockDudeCell;
import burlap.domain.singleagent.blockdude.state.BlockDudeState;
import burlap.mdp.auxiliary.StateGenerator;
import burlap.mdp.auxiliary.common.ConstantStateGenerator;
import burlap.mdp.auxiliary.common.GoalConditionTF;
import burlap.mdp.auxiliary.common.IdentityStateMapping;
import burlap.mdp.auxiliary.common.NullTermination;
import burlap.mdp.auxiliary.common.ShallowIdentityStateMapping;
import burlap.mdp.auxiliary.common.SinglePFTF;
import burlap.mdp.auxiliary.stateconditiontest.SinglePFSCT;
import burlap.mdp.auxiliary.stateconditiontest.StateConditionTest;
import burlap.mdp.auxiliary.stateconditiontest.TFGoalCondition;
import burlap.mdp.core.TerminalFunction;
import burlap.mdp.core.action.ActionType;
import burlap.mdp.core.oo.propositional.PropositionalFunction;
import burlap.mdp.core.oo.state.generic.GenericOOState;
import burlap.mdp.core.state.NullState;
import burlap.mdp.core.state.State;
import burlap.mdp.singleagent.SADomain;
import burlap.mdp.singleagent.pomdp.beliefstate.TabularBeliefState;
import burlap.mdp.stochasticgames.JointAction;
import burlap.mdp.stochasticgames.SGDomain;
import burlap.mdp.stochasticgames.agent.SGAgent;
import burlap.mdp.stochasticgames.agent.SGAgentBase;
import burlap.mdp.stochasticgames.agent.SGAgentType;
import burlap.mdp.stochasticgames.common.NullJointRewardFunction;
import burlap.mdp.stochasticgames.common.StaticRepeatedGameModel;
import burlap.mdp.stochasticgames.model.JointModel;
import burlap.mdp.stochasticgames.model.JointRewardFunction;
import burlap.mdp.stochasticgames.oo.OOSGDomain;
import burlap.mdp.stochasticgames.world.World;
import burlap.mdp.stochasticgames.world.WorldObserver;
import burlap.shell.command.world.ManualAgentsCommands;
import burlap.statehashing.HashableStateFactory;
import burlap.statehashing.ReflectiveHashableStateFactory;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class World_ESTest extends World_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      RandomSGAgent randomSGAgent0 = new RandomSGAgent();
      GenericOOState genericOOState0 = new GenericOOState();
      world0.runGame(0, (State) genericOOState0);
      world0.join(randomSGAgent0);
      // Undeclared exception!
      try { 
        world0.runStage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.stochasticgames.agents.RandomSGAgent", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      EMinMaxPolicy eMinMaxPolicy0 = new EMinMaxPolicy(284673923);
      world0.rolloutJointPolicyFromState(eMinMaxPolicy0, nullState0, 0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      BlockDudeAgent blockDudeAgent0 = new BlockDudeAgent((-1), (-1), (-1), false);
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, nullTermination0, blockDudeAgent0);
      EMinMaxPolicy eMinMaxPolicy0 = new EMinMaxPolicy(0.0);
      world0.rolloutJointPolicyFromState(eMinMaxPolicy0, nullState0, (-1));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      EGreedyJointPolicy eGreedyJointPolicy0 = new EGreedyJointPolicy(1.0);
      world0.rolloutJointPolicy(eGreedyJointPolicy0, 0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      BlockDudeState blockDudeState0 = new BlockDudeState();
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, nullTermination0, blockDudeState0);
      world0.setCurrentState(blockDudeState0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.setDomain((SGDomain) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      StaticRepeatedGameModel staticRepeatedGameModel0 = new StaticRepeatedGameModel();
      sGDomain0.setJointActionModel(staticRepeatedGameModel0);
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      GameEpisode gameEpisode0 = world0.runGame(3373, (State) nullState0);
      assertEquals(284673923, world0.getDebugId());
      assertEquals(3373, gameEpisode0.maxTimeStep());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.runGame((-2599));
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      BlockDudeCell blockDudeCell0 = new BlockDudeCell();
      ConstantStateGenerator constantStateGenerator0 = new ConstantStateGenerator(blockDudeCell0);
      ShallowIdentityStateMapping shallowIdentityStateMapping0 = new ShallowIdentityStateMapping();
      World world0 = new World(sGDomain0, nullJointRewardFunction0, (TerminalFunction) null, constantStateGenerator0, shallowIdentityStateMapping0);
      world0.getTF();
      assertEquals(284673923, world0.getDebugId());
      assertFalse(world0.gameIsRunning());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      GoalConditionTF goalConditionTF0 = new GoalConditionTF(singlePFSCT0);
      GenericOOState genericOOState0 = new GenericOOState();
      World world0 = new World(oOSGDomain0, (JointRewardFunction) null, goalConditionTF0, genericOOState0);
      world0.getRewardFunction();
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.getRegisteredAgents();
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      RandomSGAgent randomSGAgent0 = new RandomSGAgent();
      BlockDudeCell blockDudeCell0 = new BlockDudeCell();
      ConstantStateGenerator constantStateGenerator0 = new ConstantStateGenerator(blockDudeCell0);
      ShallowIdentityStateMapping shallowIdentityStateMapping0 = new ShallowIdentityStateMapping();
      World world0 = new World(sGDomain0, nullJointRewardFunction0, (TerminalFunction) null, constantStateGenerator0, shallowIdentityStateMapping0);
      world0.join(randomSGAgent0);
      List<SGAgent> list0 = world0.getRegisteredAgents();
      assertEquals(284673923, world0.getDebugId());
      assertEquals(1, list0.size());
      assertFalse(world0.gameIsRunning());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      StaticRepeatedGameModel staticRepeatedGameModel0 = new StaticRepeatedGameModel();
      sGDomain0.setJointActionModel(staticRepeatedGameModel0);
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      GameEpisode gameEpisode0 = world0.runGame(1);
      assertEquals(1, gameEpisode0.maxTimeStep());
      
      world0.getLastRewards();
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      StaticRepeatedGameModel staticRepeatedGameModel0 = new StaticRepeatedGameModel();
      sGDomain0.setJointActionModel(staticRepeatedGameModel0);
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      GameEpisode gameEpisode0 = world0.runGame(1);
      assertEquals(1, gameEpisode0.maxTimeStep());
      
      JointAction jointAction0 = world0.getLastJointAction();
      assertEquals(284673923, world0.getDebugId());
      assertNotNull(jointAction0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      StaticRepeatedGameModel staticRepeatedGameModel0 = new StaticRepeatedGameModel();
      oOSGDomain0.setJointActionModel(staticRepeatedGameModel0);
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.getActionModel();
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullState nullState0 = NullState.instance;
      GoalConditionTF goalConditionTF0 = new GoalConditionTF((StateConditionTest) null);
      World world0 = new World(oOSGDomain0, (JointRewardFunction) null, goalConditionTF0, nullState0);
      // Undeclared exception!
      try { 
        world0.worldStateIsTerminal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.auxiliary.common.GoalConditionTF", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      SADomain sADomain0 = new SADomain();
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      CorrelatedEquilibriumSolver.CorrelatedEquilibriumObjective correlatedEquilibriumSolver_CorrelatedEquilibriumObjective0 = CorrelatedEquilibriumSolver.CorrelatedEquilibriumObjective.UTILITARIAN;
      ECorrelatedQJointPolicy eCorrelatedQJointPolicy0 = new ECorrelatedQJointPolicy(correlatedEquilibriumSolver_CorrelatedEquilibriumObjective0, (-1321.97767321874));
      SarsaLam sarsaLam0 = new SarsaLam(sADomain0, 6.0, reflectiveHashableStateFactory0, 6.0, (-1321.97767321874), eCorrelatedQJointPolicy0, (-2296), 0.0);
      GreedyDeterministicQPolicy greedyDeterministicQPolicy0 = new GreedyDeterministicQPolicy(sarsaLam0);
      Stack<ActionType> stack0 = new Stack<ActionType>();
      SGAgentType sGAgentType0 = new SGAgentType("4;[Cac", stack0);
      SetStrategySGAgent setStrategySGAgent0 = new SetStrategySGAgent(sGDomain0, greedyDeterministicQPolicy0, "4;[Cac", sGAgentType0);
      world0.join(setStrategySGAgent0);
      // Undeclared exception!
      try { 
        world0.runStage();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Reflective Hashable State should only be used with State objects that also already implement HashableState.
         //
         verifyException("burlap.statehashing.ReflectiveHashableStateFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullState nullState0 = NullState.instance;
      SinglePFTF singlePFTF0 = new SinglePFTF((PropositionalFunction) null);
      World world0 = new World(sGDomain0, (JointRewardFunction) null, singlePFTF0, nullState0);
      // Undeclared exception!
      try { 
        world0.runStage();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class burlap.mdp.core.state.NullState cannot be cast to class burlap.mdp.core.oo.state.OOState (burlap.mdp.core.state.NullState and burlap.mdp.core.oo.state.OOState are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3c2abd25)
         //
         verifyException("burlap.mdp.auxiliary.common.SinglePFTF", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, (JointRewardFunction) null, nullTermination0, nullState0);
      RandomSGAgent randomSGAgent0 = new RandomSGAgent();
      Stack<ActionType> stack0 = new Stack<ActionType>();
      SGAgentType sGAgentType0 = new SGAgentType("burlap.mdp.auxiliary.common.ShallowIdentityStateMapping", stack0);
      randomSGAgent0.setAgentDetails("burlap.mdp.auxiliary.common.ShallowIdentityStateMapping", sGAgentType0);
      world0.join(randomSGAgent0);
      // Undeclared exception!
      try { 
        world0.runStage();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.evosuite.runtime.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      RandomSGAgent randomSGAgent0 = new RandomSGAgent();
      MultiAgentQLearning multiAgentQLearning0 = new MultiAgentQLearning(sGDomain0, 3693.0, 3283.41497393, (HashableStateFactory) null, 3283.41497393, (SGBackupOperator) null, true, ".P", (SGAgentType) null);
      randomSGAgent0.init(sGDomain0, "@^G?9=*;w", (SGAgentType) null);
      BlockDudeCell blockDudeCell0 = new BlockDudeCell();
      ConstantStateGenerator constantStateGenerator0 = new ConstantStateGenerator(blockDudeCell0);
      ShallowIdentityStateMapping shallowIdentityStateMapping0 = new ShallowIdentityStateMapping();
      World world0 = new World(sGDomain0, nullJointRewardFunction0, (TerminalFunction) null, constantStateGenerator0, shallowIdentityStateMapping0);
      world0.join(randomSGAgent0);
      world0.join(multiAgentQLearning0);
      // Undeclared exception!
      try { 
        world0.runGame(0, (State) blockDudeCell0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // All agents passed to the MAQLControlledQSourceMap object must be of type MultiAgentQLearning
         //
         verifyException("burlap.behavior.stochasticgames.madynamicprogramming.AgentQSourceMap$MAQLControlledQSourceMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      SinglePFTF singlePFTF0 = new SinglePFTF((PropositionalFunction) null);
      TFGoalCondition tFGoalCondition0 = new TFGoalCondition(singlePFTF0);
      GoalConditionTF goalConditionTF0 = new GoalConditionTF(tFGoalCondition0);
      BlockDudeCell blockDudeCell0 = new BlockDudeCell("burlap.domain.singleagent.mountaincar.MountainCar$MCPhysicsParams", "Agent with provided name has already joined.");
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, goalConditionTF0, blockDudeCell0);
      // Undeclared exception!
      try { 
        world0.runGame(0, (State) blockDudeCell0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class burlap.domain.singleagent.blockdude.state.BlockDudeCell cannot be cast to class burlap.mdp.core.oo.state.OOState (burlap.domain.singleagent.blockdude.state.BlockDudeCell and burlap.mdp.core.oo.state.OOState are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3c2abd25)
         //
         verifyException("burlap.mdp.auxiliary.common.SinglePFTF", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      StaticRepeatedGameModel staticRepeatedGameModel0 = new StaticRepeatedGameModel();
      sGDomain0.setJointActionModel(staticRepeatedGameModel0);
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      // Undeclared exception!
      world0.runGame((-1));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullState nullState0 = NullState.instance;
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      GoalConditionTF goalConditionTF0 = new GoalConditionTF(singlePFSCT0);
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, goalConditionTF0, nullState0);
      // Undeclared exception!
      try { 
        world0.runGame((-1));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class burlap.mdp.core.state.NullState cannot be cast to class burlap.mdp.core.oo.state.OOState (burlap.mdp.core.state.NullState and burlap.mdp.core.oo.state.OOState are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3c2abd25)
         //
         verifyException("burlap.mdp.auxiliary.stateconditiontest.SinglePFSCT", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      StaticRepeatedGameModel staticRepeatedGameModel0 = new StaticRepeatedGameModel();
      sGDomain0.setJointActionModel(staticRepeatedGameModel0);
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      // Undeclared exception!
      world0.runGame();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      RandomSGAgent randomSGAgent0 = new RandomSGAgent();
      MultiAgentQLearning multiAgentQLearning0 = new MultiAgentQLearning(oOSGDomain0, 3689.0496144539784, 3689.0496144539784, (HashableStateFactory) null, 3689.0496144539784, (SGBackupOperator) null, true, "doNothing", (SGAgentType) null);
      randomSGAgent0.init((SGDomain) oOSGDomain0, "v<X?>);w", (SGAgentType) null);
      BlockDudeCell blockDudeCell0 = new BlockDudeCell();
      ConstantStateGenerator constantStateGenerator0 = new ConstantStateGenerator(blockDudeCell0);
      ShallowIdentityStateMapping shallowIdentityStateMapping0 = new ShallowIdentityStateMapping();
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, (TerminalFunction) null, constantStateGenerator0, shallowIdentityStateMapping0);
      world0.join(randomSGAgent0);
      world0.join(multiAgentQLearning0);
      // Undeclared exception!
      try { 
        world0.runGame();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // All agents passed to the MAQLControlledQSourceMap object must be of type MultiAgentQLearning
         //
         verifyException("burlap.behavior.stochasticgames.madynamicprogramming.AgentQSourceMap$MAQLControlledQSourceMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullState nullState0 = NullState.instance;
      SinglePFTF singlePFTF0 = new SinglePFTF((PropositionalFunction) null, true);
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, singlePFTF0, nullState0);
      // Undeclared exception!
      try { 
        world0.runGame();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class burlap.mdp.core.state.NullState cannot be cast to class burlap.mdp.core.oo.state.OOState (burlap.mdp.core.state.NullState and burlap.mdp.core.oo.state.OOState are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3c2abd25)
         //
         verifyException("burlap.mdp.auxiliary.common.SinglePFTF", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      ConstantStateGenerator constantStateGenerator0 = new ConstantStateGenerator(nullState0);
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, constantStateGenerator0);
      RandomSGAgent randomSGAgent0 = new RandomSGAgent();
      Stack<ActionType> stack0 = new Stack<ActionType>();
      SGAgentType sGAgentType0 = new SGAgentType("6rllk`mIm[/!QU", stack0);
      randomSGAgent0.setAgentDetails("Agent with provided name has already joined.", sGAgentType0);
      world0.join(randomSGAgent0);
      // Undeclared exception!
      try { 
        world0.runGame();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.evosuite.runtime.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      // Undeclared exception!
      try { 
        world0.rolloutOneStageOfJointPolicy((JointPolicy) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.stochasticgames.world.World", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullState nullState0 = NullState.instance;
      EGreedyJointPolicy eGreedyJointPolicy0 = new EGreedyJointPolicy(1);
      SinglePFTF singlePFTF0 = new SinglePFTF((PropositionalFunction) null);
      World world0 = new World(sGDomain0, nullJointRewardFunction0, singlePFTF0, nullState0);
      // Undeclared exception!
      try { 
        world0.rolloutOneStageOfJointPolicy(eGreedyJointPolicy0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class burlap.mdp.core.state.NullState cannot be cast to class burlap.mdp.core.oo.state.OOState (burlap.mdp.core.state.NullState and burlap.mdp.core.oo.state.OOState are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3c2abd25)
         //
         verifyException("burlap.mdp.auxiliary.common.SinglePFTF", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullState nullState0 = NullState.instance;
      SinglePFTF singlePFTF0 = new SinglePFTF((PropositionalFunction) null);
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, singlePFTF0, nullState0);
      EMinMaxPolicy eMinMaxPolicy0 = new EMinMaxPolicy(0.0);
      // Undeclared exception!
      try { 
        world0.rolloutJointPolicyFromState(eMinMaxPolicy0, nullState0, 284673923);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class burlap.mdp.core.state.NullState cannot be cast to class burlap.mdp.core.oo.state.OOState (burlap.mdp.core.state.NullState and burlap.mdp.core.oo.state.OOState are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3c2abd25)
         //
         verifyException("burlap.mdp.auxiliary.common.SinglePFTF", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullState nullState0 = NullState.instance;
      SinglePFTF singlePFTF0 = new SinglePFTF((PropositionalFunction) null);
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, singlePFTF0, nullState0);
      EGreedyJointPolicy eGreedyJointPolicy0 = new EGreedyJointPolicy((-2044.02161));
      // Undeclared exception!
      try { 
        world0.rolloutJointPolicy(eGreedyJointPolicy0, 34);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class burlap.mdp.core.state.NullState cannot be cast to class burlap.mdp.core.oo.state.OOState (burlap.mdp.core.state.NullState and burlap.mdp.core.oo.state.OOState are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3c2abd25)
         //
         verifyException("burlap.mdp.auxiliary.common.SinglePFTF", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      // Undeclared exception!
      try { 
        world0.join((SGAgent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.stochasticgames.world.World", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(oOSGDomain0, (JointRewardFunction) null, nullTermination0, nullState0);
      RandomSGAgent randomSGAgent0 = new RandomSGAgent();
      world0.join(randomSGAgent0);
      // Undeclared exception!
      try { 
        world0.agentWithName("sc#AdD");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = null;
      try {
        world0 = new World((SGDomain) null, nullJointRewardFunction0, nullTermination0, nullState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.stochasticgames.world.World", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullTermination nullTermination0 = new NullTermination();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      IdentityStateMapping identityStateMapping0 = new IdentityStateMapping();
      World world0 = null;
      try {
        world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, (StateGenerator) null, identityStateMapping0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.stochasticgames.world.World", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      World world0 = null;
      try {
        world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, (StateGenerator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.stochasticgames.world.World", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      // Undeclared exception!
      try { 
        world0.runGame((-1), (State) nullState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      SGDomain sGDomain0 = new SGDomain();
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.generateNewCurrentState();
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      RandomSGAgent randomSGAgent0 = new RandomSGAgent();
      randomSGAgent0.init(sGDomain0, "@^G?9=*;w", (SGAgentType) null);
      BlockDudeCell blockDudeCell0 = new BlockDudeCell();
      ConstantStateGenerator constantStateGenerator0 = new ConstantStateGenerator(blockDudeCell0);
      ShallowIdentityStateMapping shallowIdentityStateMapping0 = new ShallowIdentityStateMapping();
      World world0 = new World(sGDomain0, nullJointRewardFunction0, (TerminalFunction) null, constantStateGenerator0, shallowIdentityStateMapping0);
      world0.join(randomSGAgent0);
      SGAgent sGAgent0 = world0.agentWithName("@^G?9=*;w");
      assertEquals(284673923, world0.getDebugId());
      assertNotNull(sGAgent0);
      assertFalse(world0.gameIsRunning());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.gameIsRunning();
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      RandomSGAgent randomSGAgent0 = new RandomSGAgent();
      randomSGAgent0.setAgentDetails("@^G?9=*;w", (SGAgentType) null);
      world0.join(randomSGAgent0);
      int int0 = world0.getPlayerNumberForAgent("@^G?9=*;w");
      assertEquals(284673923, world0.getDebugId());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      RandomSGAgent randomSGAgent0 = new RandomSGAgent();
      randomSGAgent0.setAgentDetails("doNothing", (SGAgentType) null);
      world0.join(randomSGAgent0);
      int int0 = world0.getPlayerNumberForAgent("@^G?9=*;w");
      assertEquals(284673923, world0.getDebugId());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      RandomSGAgent randomSGAgent0 = new RandomSGAgent();
      world0.join(randomSGAgent0);
      // Undeclared exception!
      try { 
        world0.getPlayerNumberForAgent("@^G?9=*;w");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      ManualAgentsCommands.ManualSGAgent manualAgentsCommands_ManualSGAgent0 = new ManualAgentsCommands.ManualSGAgent();
      world0.join(manualAgentsCommands_ManualSGAgent0);
      List<SGAgentType> list0 = world0.getAgentDefinitions();
      assertEquals(1, list0.size());
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.getAgentDefinitions();
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      StaticRepeatedGameModel staticRepeatedGameModel0 = new StaticRepeatedGameModel();
      sGDomain0.setJointActionModel(staticRepeatedGameModel0);
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      TabularBeliefState tabularBeliefState0 = new TabularBeliefState();
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, tabularBeliefState0);
      // Undeclared exception!
      world0.runGame(4958, (State) tabularBeliefState0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      StaticRepeatedGameModel staticRepeatedGameModel0 = new StaticRepeatedGameModel();
      sGDomain0.setJointActionModel(staticRepeatedGameModel0);
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      BlockDudeState blockDudeState0 = new BlockDudeState();
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, blockDudeState0);
      assertFalse(world0.gameIsRunning());
      
      world0.runStage();
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      EMinMaxPolicy eMinMaxPolicy0 = new EMinMaxPolicy(284673923);
      // Undeclared exception!
      try { 
        world0.rolloutJointPolicyFromState(eMinMaxPolicy0, nullState0, 284673923);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.behavior.stochasticgames.madynamicprogramming.policies.EMinMaxPolicy", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      EGreedyJointPolicy eGreedyJointPolicy0 = new EGreedyJointPolicy((-6));
      world0.rolloutJointPolicy(eGreedyJointPolicy0, (-6));
      assertFalse(world0.gameIsRunning());
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      EGreedyJointPolicy eGreedyJointPolicy0 = new EGreedyJointPolicy(1);
      // Undeclared exception!
      try { 
        world0.rolloutJointPolicy(eGreedyJointPolicy0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.stochasticgames.JointAction", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(oOSGDomain0, (JointRewardFunction) null, nullTermination0, nullState0);
      RandomSGAgent randomSGAgent0 = new RandomSGAgent();
      world0.join(randomSGAgent0);
      assertFalse(world0.gameIsRunning());
      
      world0.runGame((-2487), (State) nullState0);
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      BlockDudeCell blockDudeCell0 = new BlockDudeCell((-1277), (-1277), "[(Uo>cJ%_V.x/Y", "G<*/s:wN\",N/;^w");
      ConstantStateGenerator constantStateGenerator0 = new ConstantStateGenerator(blockDudeCell0);
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, constantStateGenerator0);
      world0.addWorldObserver((WorldObserver) null);
      // Undeclared exception!
      try { 
        world0.runGame((-4059), (State) blockDudeCell0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      StaticRepeatedGameModel staticRepeatedGameModel0 = new StaticRepeatedGameModel();
      sGDomain0.setJointActionModel(staticRepeatedGameModel0);
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      JointAction jointAction0 = new JointAction();
      world0.executeJointAction(jointAction0);
      assertFalse(world0.gameIsRunning());
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullState nullState0 = NullState.instance;
      NullTermination nullTermination0 = new NullTermination();
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      // Undeclared exception!
      try { 
        world0.executeJointAction((JointAction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.stochasticgames.world.World", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullState nullState0 = NullState.instance;
      SinglePFSCT singlePFSCT0 = new SinglePFSCT((PropositionalFunction) null);
      GoalConditionTF goalConditionTF0 = new GoalConditionTF(singlePFSCT0);
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, goalConditionTF0, nullState0);
      JointAction jointAction0 = new JointAction();
      // Undeclared exception!
      try { 
        world0.executeJointAction(jointAction0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class burlap.mdp.core.state.NullState cannot be cast to class burlap.mdp.core.oo.state.OOState (burlap.mdp.core.state.NullState and burlap.mdp.core.oo.state.OOState are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3c2abd25)
         //
         verifyException("burlap.mdp.auxiliary.stateconditiontest.SinglePFSCT", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      assertFalse(world0.gameIsRunning());
      
      world0.isRecordingGame = true;
      world0.setCurrentState(nullState0);
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      assertFalse(world0.gameIsRunning());
      
      world0.isRecordingGame = true;
      world0.generateNewCurrentState();
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      MultiAgentQLearning multiAgentQLearning0 = new MultiAgentQLearning(sGDomain0, 0.0, 3693.0, (HashableStateFactory) null, 3283.41497393, (SGBackupOperator) null, true, "@^G?9=*;w", (SGAgentType) null);
      world0.join(multiAgentQLearning0);
      SGAgent sGAgent0 = world0.agentWithName("");
      assertNull(sGAgent0);
      assertEquals(284673923, world0.getDebugId());
      assertFalse(world0.gameIsRunning());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullState nullState0 = NullState.instance;
      NullTermination nullTermination0 = new NullTermination();
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      RandomSGAgent randomSGAgent0 = new RandomSGAgent();
      SGAgentBase sGAgentBase0 = randomSGAgent0.setAgentDetails("Y]", (SGAgentType) null);
      world0.join(sGAgentBase0);
      // Undeclared exception!
      try { 
        world0.join(randomSGAgent0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Agent with provided name has already joined.
         //
         verifyException("burlap.mdp.stochasticgames.world.World", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullState nullState0 = NullState.instance;
      NullTermination nullTermination0 = new NullTermination();
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.removeWorldObserver((WorldObserver) null);
      assertEquals(284673923, world0.getDebugId());
      assertFalse(world0.gameIsRunning());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      // Undeclared exception!
      try { 
        world0.runGame();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.getTF();
      assertEquals(284673923, world0.getDebugId());
      assertFalse(world0.gameIsRunning());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullState nullState0 = NullState.instance;
      SinglePFTF singlePFTF0 = new SinglePFTF((PropositionalFunction) null, true);
      ConstantStateGenerator constantStateGenerator0 = new ConstantStateGenerator(nullState0);
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, singlePFTF0, constantStateGenerator0);
      ShallowIdentityStateMapping shallowIdentityStateMapping0 = new ShallowIdentityStateMapping();
      world0.init(oOSGDomain0, (JointModel) null, nullJointRewardFunction0, singlePFTF0, constantStateGenerator0, shallowIdentityStateMapping0);
      assertFalse(world0.gameIsRunning());
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      ReflectiveHashableStateFactory reflectiveHashableStateFactory0 = new ReflectiveHashableStateFactory();
      Vector<ActionType> vector0 = new Vector<ActionType>();
      SGAgentType sGAgentType0 = new SGAgentType("", vector0);
      MultiAgentQLearning multiAgentQLearning0 = new MultiAgentQLearning(sGDomain0, 0.0, 0.0, reflectiveHashableStateFactory0, 0.0, (SGBackupOperator) null, false, "", sGAgentType0);
      world0.join(multiAgentQLearning0);
      // Undeclared exception!
      try { 
        world0.runGame(1, (State) nullState0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.evosuite.runtime.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.getLastJointAction();
      assertEquals(284673923, world0.getDebugId());
      assertFalse(world0.gameIsRunning());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.clearAllWorldObserver();
      assertFalse(world0.gameIsRunning());
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      int int0 = world0.getDebugId();
      assertFalse(world0.gameIsRunning());
      assertEquals(284673923, int0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      SGDomain sGDomain1 = world0.getDomain();
      assertEquals(284673923, world0.getDebugId());
      assertNotNull(sGDomain1);
      assertFalse(world0.gameIsRunning());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.getLastRewards();
      assertFalse(world0.gameIsRunning());
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.setDebugId((-2599));
      assertEquals((-2599), world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      OOSGDomain oOSGDomain0 = new OOSGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(oOSGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      // Undeclared exception!
      try { 
        world0.runGame(4967);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      State state0 = world0.getCurrentWorldState();
      assertEquals(284673923, world0.getDebugId());
      assertNotNull(state0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.getCumulativeRewardForAgent("~481&i%9cD$9bM$:8J");
      assertFalse(world0.gameIsRunning());
      assertEquals(284673923, world0.getDebugId());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.getActionModel();
      assertEquals(284673923, world0.getDebugId());
      assertFalse(world0.gameIsRunning());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      JointRewardFunction jointRewardFunction0 = world0.getRewardFunction();
      assertEquals(284673923, world0.getDebugId());
      assertFalse(world0.gameIsRunning());
      assertNotNull(jointRewardFunction0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      SGDomain sGDomain0 = new SGDomain();
      NullJointRewardFunction nullJointRewardFunction0 = new NullJointRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      NullState nullState0 = NullState.instance;
      World world0 = new World(sGDomain0, nullJointRewardFunction0, nullTermination0, nullState0);
      world0.worldStateIsTerminal();
      assertFalse(world0.gameIsRunning());
      assertEquals(284673923, world0.getDebugId());
  }
}
