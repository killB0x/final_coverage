/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 02:55:14 GMT 2022
 */

package burlap.mdp.singleagent.environment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.domain.singleagent.blockdude.state.BlockDudeAgent;
import burlap.domain.singleagent.blockdude.state.BlockDudeCell;
import burlap.domain.singleagent.blockdude.state.BlockDudeMap;
import burlap.domain.singleagent.blocksworld.BWModel;
import burlap.domain.singleagent.blocksworld.BlocksWorldBlock;
import burlap.mdp.auxiliary.StateGenerator;
import burlap.mdp.auxiliary.common.ConstantStateGenerator;
import burlap.mdp.auxiliary.common.NullTermination;
import burlap.mdp.core.action.Action;
import burlap.mdp.core.action.SimpleAction;
import burlap.mdp.core.state.NullState;
import burlap.mdp.core.state.State;
import burlap.mdp.singleagent.SADomain;
import burlap.mdp.singleagent.common.NullRewardFunction;
import burlap.mdp.singleagent.common.UniformCostRF;
import burlap.mdp.singleagent.environment.SimulatedEnvironment;
import burlap.mdp.singleagent.environment.extensions.EnvironmentObserver;
import burlap.mdp.singleagent.model.FactoredModel;
import burlap.mdp.singleagent.model.SampleModel;
import burlap.mdp.singleagent.oo.OOSADomain;
import burlap.visualizer.StateRenderLayer;
import java.util.ArrayList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimulatedEnvironment_ESTest extends SimulatedEnvironment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0, (State) null);
      EnvironmentObserver[] environmentObserverArray0 = new EnvironmentObserver[10];
      simulatedEnvironment0.addObservers(environmentObserverArray0);
      List<EnvironmentObserver> list0 = simulatedEnvironment0.observers();
      assertEquals(0.0, simulatedEnvironment0.lastReward(), 0.01);
      assertEquals(10, list0.size());
      assertFalse(simulatedEnvironment0.isInTerminalState());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0);
      ArrayList<EnvironmentObserver> arrayList0 = new ArrayList<EnvironmentObserver>();
      simulatedEnvironment0.observers = (List<EnvironmentObserver>) arrayList0;
      simulatedEnvironment0.observers();
      assertFalse(simulatedEnvironment0.isInTerminalState());
      assertEquals(0.0, simulatedEnvironment0.lastReward(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0);
      simulatedEnvironment0.lastReward = (-1882.962891043945);
      double double0 = simulatedEnvironment0.lastReward();
      assertEquals((-1882.962891043945), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0);
      assertFalse(simulatedEnvironment0.isInTerminalState());
      
      simulatedEnvironment0.terminated = true;
      simulatedEnvironment0.isInTerminalState();
      assertEquals(0.0, simulatedEnvironment0.lastReward(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0, (State) null);
      simulatedEnvironment0.getStateGenerator();
      assertEquals(0.0, simulatedEnvironment0.lastReward(), 0.01);
      assertFalse(simulatedEnvironment0.isInTerminalState());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BWModel bWModel0 = new BWModel();
      UniformCostRF uniformCostRF0 = new UniformCostRF();
      NullTermination nullTermination0 = new NullTermination();
      FactoredModel factoredModel0 = new FactoredModel(bWModel0, uniformCostRF0, nullTermination0);
      BlockDudeCell blockDudeCell0 = BlockDudeCell.exit(0, 4053);
      ConstantStateGenerator constantStateGenerator0 = new ConstantStateGenerator(blockDudeCell0);
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0, constantStateGenerator0);
      simulatedEnvironment0.currentObservation();
      assertEquals(0.0, simulatedEnvironment0.lastReward(), 0.01);
      assertFalse(simulatedEnvironment0.isInTerminalState());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0);
      // Undeclared exception!
      try { 
        simulatedEnvironment0.removeObservers((EnvironmentObserver[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.singleagent.environment.SimulatedEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0);
      // Undeclared exception!
      try { 
        simulatedEnvironment0.addObservers((EnvironmentObserver[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.singleagent.environment.SimulatedEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimulatedEnvironment simulatedEnvironment0 = null;
      try {
        simulatedEnvironment0 = new SimulatedEnvironment((SADomain) null, (State) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.singleagent.environment.SimulatedEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      SimulatedEnvironment simulatedEnvironment0 = null;
      try {
        simulatedEnvironment0 = new SimulatedEnvironment(oOSADomain0, (StateGenerator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.singleagent.environment.SimulatedEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimulatedEnvironment simulatedEnvironment0 = null;
      try {
        simulatedEnvironment0 = new SimulatedEnvironment((SADomain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.singleagent.environment.SimulatedEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0);
      // Undeclared exception!
      try { 
        simulatedEnvironment0.currentObservation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.singleagent.environment.SimulatedEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0);
      boolean boolean0 = simulatedEnvironment0.isInTerminalState();
      assertFalse(boolean0);
      assertEquals(0.0, simulatedEnvironment0.lastReward(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      BlockDudeAgent blockDudeAgent0 = new BlockDudeAgent();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0, blockDudeAgent0);
      EnvironmentObserver[] environmentObserverArray0 = new EnvironmentObserver[15];
      simulatedEnvironment0.addObservers(environmentObserverArray0);
      // Undeclared exception!
      try { 
        simulatedEnvironment0.resetEnvironment();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.singleagent.environment.SimulatedEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SADomain sADomain0 = new SADomain();
      FactoredModel factoredModel0 = new FactoredModel();
      sADomain0.setModel(factoredModel0);
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(sADomain0);
      NullState nullState0 = NullState.instance;
      simulatedEnvironment0.setCurStateTo(nullState0);
      simulatedEnvironment0.resetEnvironment();
      assertEquals(0.0, simulatedEnvironment0.lastReward(), 0.01);
      assertFalse(simulatedEnvironment0.isInTerminalState());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0);
      simulatedEnvironment0.terminated = true;
      // Undeclared exception!
      try { 
        simulatedEnvironment0.executeAction((Action) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.singleagent.environment.SimulatedEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment((SampleModel) null);
      simulatedEnvironment0.allowActionFromTerminalStates = true;
      // Undeclared exception!
      try { 
        simulatedEnvironment0.executeAction((Action) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.singleagent.environment.SimulatedEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0);
      BlocksWorldBlock blocksWorldBlock0 = new BlocksWorldBlock(".N");
      simulatedEnvironment0.setCurStateTo(blocksWorldBlock0);
      assertFalse(simulatedEnvironment0.isInTerminalState());
      
      simulatedEnvironment0.terminated = true;
      simulatedEnvironment0.executeAction((Action) null);
      assertTrue(simulatedEnvironment0.isInTerminalState());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      StateRenderLayer stateRenderLayer0 = new StateRenderLayer();
      State state0 = stateRenderLayer0.getCurState();
      BlockDudeAgent blockDudeAgent0 = new BlockDudeAgent();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0, blockDudeAgent0);
      simulatedEnvironment0.setCurStateTo(state0);
      assertEquals(0.0, simulatedEnvironment0.lastReward(), 0.01);
      assertFalse(simulatedEnvironment0.isInTerminalState());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0, (State) null);
      EnvironmentObserver[] environmentObserverArray0 = new EnvironmentObserver[1];
      simulatedEnvironment0.removeObservers(environmentObserverArray0);
      assertEquals(0.0, simulatedEnvironment0.lastReward(), 0.01);
      assertFalse(simulatedEnvironment0.isInTerminalState());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BlockDudeAgent blockDudeAgent0 = new BlockDudeAgent();
      OOSADomain oOSADomain0 = new OOSADomain();
      ConstantStateGenerator constantStateGenerator0 = new ConstantStateGenerator(blockDudeAgent0);
      SimulatedEnvironment simulatedEnvironment0 = null;
      try {
        simulatedEnvironment0 = new SimulatedEnvironment(oOSADomain0, constantStateGenerator0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SimulatedEnvironment requires a Domain with a model, but the input domain does not have one.
         //
         verifyException("burlap.mdp.singleagent.environment.SimulatedEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SADomain sADomain0 = new SADomain();
      BlockDudeMap blockDudeMap0 = new BlockDudeMap();
      sADomain0.setModel(factoredModel0);
      ConstantStateGenerator constantStateGenerator0 = new ConstantStateGenerator(blockDudeMap0);
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(sADomain0, constantStateGenerator0);
      assertFalse(simulatedEnvironment0.isInTerminalState());
      assertEquals(0.0, simulatedEnvironment0.lastReward(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      SimulatedEnvironment simulatedEnvironment0 = null;
      try {
        simulatedEnvironment0 = new SimulatedEnvironment(oOSADomain0, (State) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SimulatedEnvironment requires a Domain with a model, but the input domain does not have one.
         //
         verifyException("burlap.mdp.singleagent.environment.SimulatedEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SADomain sADomain0 = new SADomain();
      FactoredModel factoredModel0 = new FactoredModel();
      sADomain0.setModel(factoredModel0);
      NullState nullState0 = NullState.instance;
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(sADomain0, nullState0);
      assertFalse(simulatedEnvironment0.isInTerminalState());
      assertEquals(0.0, simulatedEnvironment0.lastReward(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OOSADomain oOSADomain0 = new OOSADomain();
      SimulatedEnvironment simulatedEnvironment0 = null;
      try {
        simulatedEnvironment0 = new SimulatedEnvironment(oOSADomain0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SimulatedEnvironment requires a Domain with a model, but the input domain does not have one.
         //
         verifyException("burlap.mdp.singleagent.environment.SimulatedEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0);
      // Undeclared exception!
      try { 
        simulatedEnvironment0.executeAction((Action) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.singleagent.model.FactoredModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SADomain sADomain0 = new SADomain();
      FactoredModel factoredModel0 = new FactoredModel();
      sADomain0.setModel(factoredModel0);
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(sADomain0);
      simulatedEnvironment0.getStateGenerator();
      assertEquals(0.0, simulatedEnvironment0.lastReward(), 0.01);
      assertFalse(simulatedEnvironment0.isInTerminalState());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimulatedEnvironment simulatedEnvironment0 = null;
      try {
        simulatedEnvironment0 = new SimulatedEnvironment((SampleModel) null, (StateGenerator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.singleagent.environment.SimulatedEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0);
      simulatedEnvironment0.setAllowActionFromTerminalStates(true);
      assertEquals(0.0, simulatedEnvironment0.lastReward(), 0.01);
      assertFalse(simulatedEnvironment0.isInTerminalState());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0);
      EnvironmentObserver[] environmentObserverArray0 = new EnvironmentObserver[7];
      simulatedEnvironment0.addObservers(environmentObserverArray0);
      SimpleAction simpleAction0 = new SimpleAction();
      // Undeclared exception!
      try { 
        simulatedEnvironment0.executeAction(simpleAction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.mdp.singleagent.environment.SimulatedEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0);
      simulatedEnvironment0.clearAllObservers();
      assertEquals(0.0, simulatedEnvironment0.lastReward(), 0.01);
      assertFalse(simulatedEnvironment0.isInTerminalState());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0);
      double double0 = simulatedEnvironment0.lastReward();
      assertEquals(0.0, double0, 0.01);
      assertFalse(simulatedEnvironment0.isInTerminalState());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FactoredModel factoredModel0 = new FactoredModel();
      BlockDudeCell blockDudeCell0 = new BlockDudeCell();
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0, blockDudeCell0);
      simulatedEnvironment0.setStateGenerator((StateGenerator) null);
      assertEquals(0.0, simulatedEnvironment0.lastReward(), 0.01);
      assertFalse(simulatedEnvironment0.isInTerminalState());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BlockDudeAgent blockDudeAgent0 = new BlockDudeAgent();
      BWModel bWModel0 = new BWModel();
      NullRewardFunction nullRewardFunction0 = new NullRewardFunction();
      NullTermination nullTermination0 = new NullTermination();
      FactoredModel factoredModel0 = new FactoredModel(bWModel0, nullRewardFunction0, nullTermination0);
      SimulatedEnvironment simulatedEnvironment0 = new SimulatedEnvironment(factoredModel0, blockDudeAgent0);
      SimpleAction simpleAction0 = new SimpleAction();
      // Undeclared exception!
      try { 
        simulatedEnvironment0.executeAction(simpleAction0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class burlap.domain.singleagent.blockdude.state.BlockDudeAgent cannot be cast to class burlap.domain.singleagent.blocksworld.BlocksWorldState (burlap.domain.singleagent.blockdude.state.BlockDudeAgent and burlap.domain.singleagent.blocksworld.BlocksWorldState are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @aa48af6)
         //
         verifyException("burlap.domain.singleagent.blocksworld.BWModel", e);
      }
  }
}
