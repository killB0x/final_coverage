/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 04:05:45 GMT 2022
 */

package burlap.statehashing.maskeddiscretized;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import burlap.mdp.core.state.NullState;
import burlap.statehashing.HashableState;
import burlap.statehashing.maskeddiscretized.DiscretizingMaskedHashableStateFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DiscretizingMaskedHashableStateFactory_ESTest extends DiscretizingMaskedHashableStateFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[6];
      DiscretizingMaskedHashableStateFactory discretizingMaskedHashableStateFactory0 = new DiscretizingMaskedHashableStateFactory(false, (-1.0), true, stringArray0);
      assertFalse(discretizingMaskedHashableStateFactory0.objectIdentifierIndependent());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DiscretizingMaskedHashableStateFactory discretizingMaskedHashableStateFactory0 = new DiscretizingMaskedHashableStateFactory(753.5775323377566);
      discretizingMaskedHashableStateFactory0.config = null;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        discretizingMaskedHashableStateFactory0.addFloorDiscretizingMultipleFor(object0, 753.5775323377566);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.statehashing.maskeddiscretized.DiscretizingMaskedHashableStateFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DiscretizingMaskedHashableStateFactory discretizingMaskedHashableStateFactory0 = null;
      try {
        discretizingMaskedHashableStateFactory0 = new DiscretizingMaskedHashableStateFactory(false, (-2372.4446772), false, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.statehashing.maskeddiscretized.DiscretizingMaskedHashableStateFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[6];
      DiscretizingMaskedHashableStateFactory discretizingMaskedHashableStateFactory0 = new DiscretizingMaskedHashableStateFactory(true, 3130.81, true, stringArray0);
      NullState nullState0 = NullState.instance;
      HashableState hashableState0 = discretizingMaskedHashableStateFactory0.hashState(nullState0);
      assertNotNull(hashableState0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DiscretizingMaskedHashableStateFactory discretizingMaskedHashableStateFactory0 = new DiscretizingMaskedHashableStateFactory(false, 3908.6859063843403, false, stringArray0);
      NullState nullState0 = NullState.instance;
      HashableState hashableState0 = discretizingMaskedHashableStateFactory0.hashState(nullState0);
      // Undeclared exception!
      try { 
        discretizingMaskedHashableStateFactory0.addFloorDiscretizingMultipleFor(hashableState0, 0.0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/builder/HashCodeBuilder
         //
         verifyException("burlap.statehashing.simple.IDSimpleHashableState", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DiscretizingMaskedHashableStateFactory discretizingMaskedHashableStateFactory0 = new DiscretizingMaskedHashableStateFactory(false, 3908.6859063843403, false, stringArray0);
      discretizingMaskedHashableStateFactory0.setDefaultFloorDiscretizingMultiple(3908.6859063843403);
      assertFalse(discretizingMaskedHashableStateFactory0.objectIdentifierIndependent());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DiscretizingMaskedHashableStateFactory discretizingMaskedHashableStateFactory0 = new DiscretizingMaskedHashableStateFactory(false, 0.0);
      assertFalse(discretizingMaskedHashableStateFactory0.objectIdentifierIndependent());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DiscretizingMaskedHashableStateFactory discretizingMaskedHashableStateFactory0 = new DiscretizingMaskedHashableStateFactory(false, 3908.6859063843403, false, stringArray0);
      Object object0 = new Object();
      discretizingMaskedHashableStateFactory0.addFloorDiscretizingMultipleFor(object0, 0.0);
      assertFalse(discretizingMaskedHashableStateFactory0.objectIdentifierIndependent());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DiscretizingMaskedHashableStateFactory discretizingMaskedHashableStateFactory0 = new DiscretizingMaskedHashableStateFactory(0.0);
      discretizingMaskedHashableStateFactory0.config = null;
      // Undeclared exception!
      try { 
        discretizingMaskedHashableStateFactory0.setDefaultFloorDiscretizingMultiple(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("burlap.statehashing.maskeddiscretized.DiscretizingMaskedHashableStateFactory", e);
      }
  }
}
