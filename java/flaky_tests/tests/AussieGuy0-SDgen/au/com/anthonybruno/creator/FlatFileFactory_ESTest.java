/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 05:24:38 GMT 2022
 */

package au.com.anthonybruno.creator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import au.com.anthonybruno.creator.CsvFactory;
import au.com.anthonybruno.creator.FixedWidthFactory;
import au.com.anthonybruno.record.factory.ClassRecordFactory;
import au.com.anthonybruno.record.factory.RecordFactory;
import au.com.anthonybruno.settings.CsvSettings;
import au.com.anthonybruno.settings.FixedWidthField;
import au.com.anthonybruno.settings.FixedWidthSettings;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FlatFileFactory_ESTest extends FlatFileFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<FixedWidthField> linkedList0 = new LinkedList<FixedWidthField>();
      FixedWidthSettings fixedWidthSettings0 = new FixedWidthSettings(true, linkedList0);
      Class<Object> class0 = Object.class;
      ClassRecordFactory classRecordFactory0 = new ClassRecordFactory(class0);
      FixedWidthFactory fixedWidthFactory0 = new FixedWidthFactory(fixedWidthSettings0, classRecordFactory0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ClassRecordFactory classRecordFactory0 = new ClassRecordFactory(class0);
      CsvFactory csvFactory0 = null;
      try {
        csvFactory0 = new CsvFactory((CsvSettings) null, classRecordFactory0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Settings cannot be null!
         //
         verifyException("au.com.anthonybruno.creator.FlatFileFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<FixedWidthField> linkedList0 = new LinkedList<FixedWidthField>();
      FixedWidthSettings fixedWidthSettings0 = new FixedWidthSettings(true, linkedList0);
      FixedWidthFactory fixedWidthFactory0 = null;
      try {
        fixedWidthFactory0 = new FixedWidthFactory(fixedWidthSettings0, (RecordFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // recordFactory cannot be null!
         //
         verifyException("au.com.anthonybruno.creator.FlatFileFactory", e);
      }
  }
}
