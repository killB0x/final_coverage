/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 05:25:47 GMT 2022
 */

package au.com.anthonybruno.settings;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import au.com.anthonybruno.settings.FixedWidthField;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FixedWidthField_ESTest extends FixedWidthField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FixedWidthField fixedWidthField0 = new FixedWidthField(1);
      int int0 = fixedWidthField0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FixedWidthField fixedWidthField0 = new FixedWidthField((-1927));
      int int0 = fixedWidthField0.getLength();
      assertEquals((-1927), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        FixedWidthField.create((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("au.com.anthonybruno.settings.FixedWidthField", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[7];
      List<FixedWidthField> list0 = FixedWidthField.create(intArray0);
      assertEquals(7, list0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[0];
      List<FixedWidthField> list0 = FixedWidthField.create(intArray0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FixedWidthField fixedWidthField0 = new FixedWidthField(0);
      int int0 = fixedWidthField0.getLength();
      assertEquals(0, int0);
  }
}
