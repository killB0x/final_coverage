/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 05:42:13 GMT 2022
 */

package au.com.anthonybruno.generator.defaults;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import au.com.anthonybruno.generator.defaults.DoubleGenerator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleGenerator_ESTest extends DoubleGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Double double0 = new Double(0.0);
      Double double1 = new Double(4.9E-324);
      DoubleGenerator doubleGenerator0 = new DoubleGenerator(double0, double1);
      Double double2 = doubleGenerator0.generate();
      assertEquals((double)double2, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Double double0 = new Double((-1.0));
      Double double1 = new Double(0.0);
      DoubleGenerator doubleGenerator0 = new DoubleGenerator(double0, double1);
      Double double2 = doubleGenerator0.generate();
      assertNotEquals((double)double2, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DoubleGenerator doubleGenerator0 = new DoubleGenerator((Double) null, (Double) null);
      // Undeclared exception!
      try { 
        doubleGenerator0.generate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("au.com.anthonybruno.generator.defaults.DoubleGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DoubleGenerator doubleGenerator0 = new DoubleGenerator();
      Double double0 = doubleGenerator0.generate();
      assertEquals(9.226622522312668E307, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Double double0 = new Double(0.0);
      DoubleGenerator doubleGenerator0 = new DoubleGenerator(double0, double0);
      // Undeclared exception!
      try { 
        doubleGenerator0.generate();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         verifyException("java.util.concurrent.ThreadLocalRandom", e);
      }
  }
}
