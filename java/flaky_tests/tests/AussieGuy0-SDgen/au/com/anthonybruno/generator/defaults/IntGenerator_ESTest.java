/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 05:40:14 GMT 2022
 */

package au.com.anthonybruno.generator.defaults;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import au.com.anthonybruno.generator.defaults.IntGenerator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntGenerator_ESTest extends IntGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IntGenerator intGenerator0 = new IntGenerator(2730, 2730);
      // Undeclared exception!
      try { 
        intGenerator0.generate();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bound must be greater than origin
         //
         verifyException("java.util.concurrent.ThreadLocalRandom", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IntGenerator intGenerator0 = new IntGenerator();
      Integer integer0 = intGenerator0.generate();
      assertEquals(856945757, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IntGenerator intGenerator0 = new IntGenerator(0, 1);
      Integer integer0 = intGenerator0.generate();
      assertEquals(0, (int)integer0);
  }
}
