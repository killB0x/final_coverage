/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 05:38:54 GMT 2022
 */

package au.com.anthonybruno.record.factory;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import au.com.anthonybruno.definition.FieldData;
import au.com.anthonybruno.record.RecordSupplier;
import au.com.anthonybruno.record.factory.FieldsRecordFactory;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FieldsRecordFactory_ESTest extends FieldsRecordFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<FieldData> linkedList0 = new LinkedList<FieldData>();
      FieldsRecordFactory fieldsRecordFactory0 = new FieldsRecordFactory(linkedList0);
      RecordSupplier recordSupplier0 = fieldsRecordFactory0.getRecordSupplier();
      assertNotNull(recordSupplier0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FieldsRecordFactory fieldsRecordFactory0 = new FieldsRecordFactory((List<FieldData>) null);
      // Undeclared exception!
      try { 
        fieldsRecordFactory0.getRecordSupplier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("au.com.anthonybruno.record.factory.FieldsRecordFactory", e);
      }
  }
}
