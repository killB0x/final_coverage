/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 22:08:05 GMT 2022
 */

package com.contrastsecurity.cassandra.migration.script;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contrastsecurity.cassandra.migration.script.Delimiter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Delimiter_ESTest extends Delimiter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Delimiter delimiter0 = new Delimiter("", true);
      boolean boolean0 = delimiter0.isAloneOnLine();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Delimiter delimiter0 = new Delimiter((String) null, true);
      delimiter0.getDelimiter();
      assertTrue(delimiter0.isAloneOnLine());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Delimiter delimiter0 = new Delimiter("", false);
      delimiter0.getDelimiter();
      assertFalse(delimiter0.isAloneOnLine());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Delimiter delimiter0 = new Delimiter((String) null, true);
      // Undeclared exception!
      try { 
        delimiter0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contrastsecurity.cassandra.migration.script.Delimiter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Delimiter delimiter0 = new Delimiter((String) null, false);
      Delimiter delimiter1 = new Delimiter((String) null, false);
      // Undeclared exception!
      try { 
        delimiter1.equals(delimiter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Delimiter delimiter0 = new Delimiter("u%KUE}]", true);
      delimiter0.hashCode();
      assertTrue(delimiter0.isAloneOnLine());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Delimiter delimiter0 = new Delimiter("U;af6@\"Z", false);
      delimiter0.hashCode();
      assertFalse(delimiter0.isAloneOnLine());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Delimiter delimiter0 = new Delimiter("", false);
      Delimiter delimiter1 = new Delimiter("", false);
      boolean boolean0 = delimiter0.equals(delimiter1);
      assertTrue(boolean0);
      assertFalse(delimiter1.isAloneOnLine());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Delimiter delimiter0 = new Delimiter((String) null, false);
      Delimiter delimiter1 = new Delimiter((String) null, true);
      boolean boolean0 = delimiter0.equals(delimiter1);
      assertFalse(boolean0);
      assertTrue(delimiter1.isAloneOnLine());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Delimiter delimiter0 = new Delimiter("U;af6@\"Z", false);
      Object object0 = new Object();
      boolean boolean0 = delimiter0.equals(object0);
      assertFalse(delimiter0.isAloneOnLine());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Delimiter delimiter0 = new Delimiter("U;af6@\"Z", false);
      boolean boolean0 = delimiter0.equals((Object) null);
      assertFalse(delimiter0.isAloneOnLine());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Delimiter delimiter0 = new Delimiter("3Rlss)T{", false);
      boolean boolean0 = delimiter0.equals(delimiter0);
      assertTrue(boolean0);
      assertFalse(delimiter0.isAloneOnLine());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Delimiter delimiter0 = new Delimiter("U;af6@\"Z", false);
      Delimiter delimiter1 = new Delimiter("", false);
      boolean boolean0 = delimiter0.equals(delimiter1);
      assertFalse(delimiter1.isAloneOnLine());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Delimiter delimiter0 = new Delimiter("U;af6@\"Z", false);
      delimiter0.getDelimiter();
      assertFalse(delimiter0.isAloneOnLine());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Delimiter delimiter0 = new Delimiter("U;af6@\"Z", false);
      boolean boolean0 = delimiter0.isAloneOnLine();
      assertFalse(boolean0);
  }
}
