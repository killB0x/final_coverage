/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 22:23:36 GMT 2022
 */

package com.contrastsecurity.cassandra.migration.utils.scanner.filesystem;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contrastsecurity.cassandra.migration.utils.scanner.filesystem.FileSystemResource;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileSystemResource_ESTest extends FileSystemResource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemResource fileSystemResource0 = new FileSystemResource("!RqCvXXdcv");
      String string0 = fileSystemResource0.getLocation();
      assertEquals("!RqCvXXdcv", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemResource fileSystemResource0 = new FileSystemResource("'/=]9Q=59SyK");
      String string0 = fileSystemResource0.getFilename();
      assertEquals("=]9Q=59SyK", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemResource fileSystemResource0 = new FileSystemResource("");
      FileSystemResource fileSystemResource1 = new FileSystemResource("/home/user");
      int int0 = fileSystemResource0.compareTo(fileSystemResource1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemResource fileSystemResource0 = new FileSystemResource("");
      FileSystemResource fileSystemResource1 = new FileSystemResource("PNrdQXRw$K%MU@IY!");
      int int0 = fileSystemResource0.compareTo(fileSystemResource1);
      assertEquals((-33), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "0");
      FileSystemResource fileSystemResource0 = new FileSystemResource("0");
      // Undeclared exception!
      try { 
        fileSystemResource0.loadAsString("0");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // 0
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(" (encoding: ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, " (encoding: ");
      FileSystemResource fileSystemResource0 = new FileSystemResource(" (encoding: ");
      // Undeclared exception!
      try { 
        fileSystemResource0.loadAsString(" (encoding: ");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         //  (encoding: 
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemResource fileSystemResource0 = new FileSystemResource("]");
      // Undeclared exception!
      try { 
        fileSystemResource0.compareTo((FileSystemResource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contrastsecurity.cassandra.migration.utils.scanner.filesystem.FileSystemResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemResource fileSystemResource0 = null;
      try {
        fileSystemResource0 = new FileSystemResource((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemResource fileSystemResource0 = new FileSystemResource("");
      int int0 = fileSystemResource0.compareTo(fileSystemResource0);
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemResource fileSystemResource0 = new FileSystemResource("");
      String string0 = fileSystemResource0.getLocation();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemResource fileSystemResource0 = new FileSystemResource(" (encoding: ");
      // Undeclared exception!
      try { 
        fileSystemResource0.loadAsString(" (encoding: ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to load filesystem resource:  (encoding:  (encoding:  (encoding: )
         //
         verifyException("com.contrastsecurity.cassandra.migration.utils.scanner.filesystem.FileSystemResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemResource fileSystemResource0 = new FileSystemResource("E#m:7");
      // Undeclared exception!
      try { 
        fileSystemResource0.loadAsBytes();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to load filesystem resource: E#m:7
         //
         verifyException("com.contrastsecurity.cassandra.migration.utils.scanner.filesystem.FileSystemResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemResource fileSystemResource0 = new FileSystemResource("'/=]9Q=59SyK");
      String string0 = fileSystemResource0.getLocationOnDisk();
      assertEquals("/home/user/'/=]9Q=59SyK", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemResource fileSystemResource0 = new FileSystemResource("");
      String string0 = fileSystemResource0.getFilename();
      assertEquals("", string0);
  }
}
