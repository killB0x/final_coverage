/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 22:26:31 GMT 2022
 */

package com.contrastsecurity.cassandra.migration.utils.scanner.classpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.contrastsecurity.cassandra.migration.utils.scanner.classpath.DefaultUrlResolver;
import java.net.URL;
import java.net.URLStreamHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultUrlResolver_ESTest extends DefaultUrlResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultUrlResolver defaultUrlResolver0 = new DefaultUrlResolver();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("wyd$9Ew=A(Dm&arZ=", "wyd$9Ew=A(Dm&arZ=", 0, "wyd$9Ew=A(Dm&arZ=", uRLStreamHandler0);
      URL uRL1 = defaultUrlResolver0.toStandardJavaUrl(uRL0);
      assertNull(uRL1.getQuery());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultUrlResolver defaultUrlResolver0 = new DefaultUrlResolver();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("", "", 1, ";~uejZYioYW3*I", uRLStreamHandler0);
      URL uRL1 = defaultUrlResolver0.toStandardJavaUrl(uRL0);
      assertEquals(":1", uRL1.getAuthority());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultUrlResolver defaultUrlResolver0 = new DefaultUrlResolver();
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = defaultUrlResolver0.toStandardJavaUrl(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultUrlResolver defaultUrlResolver0 = new DefaultUrlResolver();
      URL uRL0 = defaultUrlResolver0.toStandardJavaUrl((URL) null);
      assertNull(uRL0);
  }
}
