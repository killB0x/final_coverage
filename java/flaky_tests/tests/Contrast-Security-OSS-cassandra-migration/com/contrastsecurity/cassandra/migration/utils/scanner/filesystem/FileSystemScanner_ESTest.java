/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 21:57:52 GMT 2022
 */

package com.contrastsecurity.cassandra.migration.utils.scanner.filesystem;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contrastsecurity.cassandra.migration.utils.scanner.Resource;
import com.contrastsecurity.cassandra.migration.utils.scanner.filesystem.FileSystemScanner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileSystemScanner_ESTest extends FileSystemScanner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileSystemScanner fileSystemScanner0 = new FileSystemScanner();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("d@>To,1]WO+(xMe$MT@");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      Resource[] resourceArray0 = fileSystemScanner0.scanForResources("", "", "d@>To,1]WO+(xMe$MT@");
      assertEquals(0, resourceArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileSystemScanner fileSystemScanner0 = new FileSystemScanner();
      // Undeclared exception!
      try { 
        fileSystemScanner0.scanForResources((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FileSystemScanner fileSystemScanner0 = new FileSystemScanner();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("d@>To,1]WO+(xMe$MT@");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      Resource[] resourceArray0 = fileSystemScanner0.scanForResources("", "d@>To,1]WO+(xMe$MT@", "d@>To,1]WO+(xMe$MT@");
      assertEquals(0, resourceArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileSystemScanner fileSystemScanner0 = new FileSystemScanner();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("d@>To,1]WO+(xMe$MT@");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      Resource[] resourceArray0 = fileSystemScanner0.scanForResources("", "", ")");
      assertEquals(0, resourceArray0.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileSystemScanner fileSystemScanner0 = new FileSystemScanner();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("d@>To,1]WO+(xMe$MT@");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      Resource[] resourceArray0 = fileSystemScanner0.scanForResources("", "UTF-8", "");
      assertEquals(0, resourceArray0.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileSystemScanner fileSystemScanner0 = new FileSystemScanner();
      Resource[] resourceArray0 = fileSystemScanner0.scanForResources("/", "/", "/");
      assertEquals(0, resourceArray0.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileSystemScanner fileSystemScanner0 = new FileSystemScanner();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("d@>To,1]WO+(xMe$MT@");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      Resource[] resourceArray0 = fileSystemScanner0.scanForResources("", "", "");
      assertEquals(1, resourceArray0.length);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FileSystemScanner fileSystemScanner0 = new FileSystemScanner();
      // Undeclared exception!
      try { 
        fileSystemScanner0.scanForResources("O8", "", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid filesystem path: O8
         //
         verifyException("com.contrastsecurity.cassandra.migration.utils.scanner.filesystem.FileSystemScanner", e);
      }
  }
}
