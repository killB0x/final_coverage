/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 22:17:33 GMT 2022
 */

package com.contrastsecurity.cassandra.migration.logging.javautil;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contrastsecurity.cassandra.migration.logging.javautil.JavaUtilLog;
import java.util.logging.Logger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JavaUtilLog_ESTest extends JavaUtilLog_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Logger logger0 = Logger.getGlobal();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      javaUtilLog0.info((String) null);
      javaUtilLog0.warn((String) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Logger logger0 = Logger.getGlobal();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      javaUtilLog0.warn("0RvY#Emo:");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Logger logger0 = Logger.getGlobal();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      // Undeclared exception!
      javaUtilLog0.error((String) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Logger logger0 = Logger.getGlobal();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      MockException mockException0 = new MockException("ol");
      // Undeclared exception!
      javaUtilLog0.error("ol", (Exception) mockException0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Logger logger0 = Logger.getAnonymousLogger();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      JavaUtilLog javaUtilLog1 = new JavaUtilLog(logger0);
      // Undeclared exception!
      try { 
        javaUtilLog1.debug("*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Logger logger0 = Logger.getAnonymousLogger();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      MockException mockException0 = new MockException("");
      // Undeclared exception!
      try { 
        javaUtilLog0.error("", (Exception) mockException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Logger logger0 = Logger.getGlobal();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      // Undeclared exception!
      javaUtilLog0.error("com.contrastsecurity.cassandra.migration.logging.javautil.JavaUtilLog", (Exception) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Logger logger0 = Logger.getGlobal();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      String string0 = "_AM|cKG6";
      javaUtilLog0.info("_AM|cKG6");
      javaUtilLog0.debug("cpn0Y|B=_w");
      // Undeclared exception!
      javaUtilLog0.error("");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Logger logger0 = Logger.getLogger("com.contrastsecurity.cassandra.migration.logging.javautil.JavaUtilLog");
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      javaUtilLog0.error("com.contrastsecurity.cassandra.migration.logging.javautil.JavaUtilLog");
      javaUtilLog0.warn("com.contrastsecurity.cassandra.migration.logging.javautil.JavaUtilLog");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Logger logger0 = Logger.getLogger("ZX<ir)");
      Logger logger1 = logger0.getParent();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger1);
      javaUtilLog0.debug("ZX<ir)");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JavaUtilLog javaUtilLog0 = new JavaUtilLog((Logger) null);
      String string0 = "e}Jj&";
      // Undeclared exception!
      try { 
        javaUtilLog0.error("e}Jj&");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contrastsecurity.cassandra.migration.logging.javautil.JavaUtilLog", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Logger logger0 = Logger.getGlobal();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      javaUtilLog0.warn("y1");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Logger logger0 = Logger.getGlobal();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      logger0.finest((String) null);
      javaUtilLog0.info("");
      logger0.config((String) null);
      String string0 = "";
      javaUtilLog0.info("");
      // Undeclared exception!
      javaUtilLog0.error("");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JavaUtilLog javaUtilLog0 = new JavaUtilLog((Logger) null);
      String string0 = "";
      // Undeclared exception!
      try { 
        javaUtilLog0.info("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.contrastsecurity.cassandra.migration.logging.javautil.JavaUtilLog", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Logger logger0 = Logger.getAnonymousLogger();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      String string0 = null;
      // Undeclared exception!
      try { 
        javaUtilLog0.info((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Logger logger0 = Logger.getAnonymousLogger();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      // Undeclared exception!
      try { 
        javaUtilLog0.warn("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
