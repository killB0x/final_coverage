/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:08:57 GMT 2022
 */

package io.github.joseerodrigues.utils.dbutil.mapper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.joseerodrigues.utils.dbutil.ResultSetMapper;
import io.github.joseerodrigues.utils.dbutil.mapper.Mappers;
import io.github.joseerodrigues.utils.dbutil.mapper.ResultSetMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Mappers_ESTest extends Mappers_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultSetMapper<Integer> resultSetMapper0 = Mappers.intMapper("W)Hc9SF");
      assertNotNull(resultSetMapper0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultSetMapper<Integer> resultSetMapper0 = Mappers.intMapper(533);
      assertNotNull(resultSetMapper0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        Mappers.stringMapper((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // colName
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        Mappers.stringMapper("", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // colName is empty
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        Mappers.stringMapper((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // colName
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        Mappers.stringMapper("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // colName is empty
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        Mappers.stringMapper(0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // colIndex < 1 : 0
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        Mappers.stringMapper(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // colIndex < 1 : 0
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Mappers.intMapper((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // colName
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        Mappers.beanMapper((Class<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ResultSetMapper<Object> resultSetMapper0 = Mappers.beanMapper(class0);
      assertNotNull(resultSetMapper0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultSetMapper<String> resultSetMapper0 = Mappers.stringMapper(533, false);
      assertNotNull(resultSetMapper0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultSetMapper<String> resultSetMapper0 = Mappers.stringMapper(1);
      assertNotNull(resultSetMapper0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultSetMapper<String> resultSetMapper0 = Mappers.stringMapper("zF< ,7:M\r?Sv#", false);
      assertNotNull(resultSetMapper0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        Mappers.intMapper("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // colName is empty
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultSetMapper<String> resultSetMapper0 = Mappers.stringMapper("zF< ,7:M\r?Sv#");
      assertNotNull(resultSetMapper0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        Mappers.intMapper(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // colIndex < 1 : 0
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultSetMapper<ResultSetMap> resultSetMapper0 = Mappers.mapMapper();
      assertNotNull(resultSetMapper0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Mappers mappers0 = new Mappers();
  }
}
