/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:01:55 GMT 2022
 */

package io.github.joseerodrigues.utils.dbutil.mapper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.joseerodrigues.utils.dbutil.mapper.StringResultSetMapper;
import java.sql.ResultSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringResultSetMapper_ESTest extends StringResultSetMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringResultSetMapper stringResultSetMapper0 = new StringResultSetMapper("g(qR/~I!(Ey-", true);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("").when(resultSet0).getObject(anyString());
      String string0 = stringResultSetMapper0.mapObject(resultSet0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringResultSetMapper stringResultSetMapper0 = new StringResultSetMapper("g(qR/~I!(Ey-", true);
      // Undeclared exception!
      try { 
        stringResultSetMapper0.mapObject((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringResultSetMapper stringResultSetMapper0 = new StringResultSetMapper(11, true);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(stringResultSetMapper0).when(resultSet0).getObject(anyInt());
      // Undeclared exception!
      try { 
        stringResultSetMapper0.mapObject(resultSet0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class io.github.joseerodrigues.utils.dbutil.mapper.StringResultSetMapper cannot be cast to class java.lang.String (io.github.joseerodrigues.utils.dbutil.mapper.StringResultSetMapper is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @236e9c78; java.lang.String is in module java.base of loader 'bootstrap')
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.StringResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringResultSetMapper stringResultSetMapper0 = null;
      try {
        stringResultSetMapper0 = new StringResultSetMapper((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // colName
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringResultSetMapper stringResultSetMapper0 = null;
      try {
        stringResultSetMapper0 = new StringResultSetMapper("", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // colName is empty
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StringResultSetMapper stringResultSetMapper0 = null;
      try {
        stringResultSetMapper0 = new StringResultSetMapper(0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // colIndex < 1 : 0
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StringResultSetMapper stringResultSetMapper0 = new StringResultSetMapper("Ua", false);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("Ua").when(resultSet0).getObject(anyString());
      String string0 = stringResultSetMapper0.mapObject(resultSet0);
      assertEquals("Ua", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StringResultSetMapper stringResultSetMapper0 = new StringResultSetMapper(1, false);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(resultSet0).getObject(anyInt());
      String string0 = stringResultSetMapper0.mapObject(resultSet0);
      assertNull(string0);
  }
}
