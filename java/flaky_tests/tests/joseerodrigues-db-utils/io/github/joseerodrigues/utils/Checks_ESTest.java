/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:03:48 GMT 2022
 */

package io.github.joseerodrigues.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.joseerodrigues.utils.Checks;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Checks_ESTest extends Checks_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Checks.checkNullOrEmpty("!)BJGY", "ocK8BxNwvxy");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.checkNullOrEmpty((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.joseerodrigues.utils.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.checkNullOrEmpty("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 
         //
         verifyException("io.github.joseerodrigues.utils.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.checkEmpty((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Checks.checkEmpty("ocK8BxNwvxy", "M`>.AaU_,#");
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Object object0 = new Object();
      Checks.checkNull(object0, "M`>.AaU_,#");
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.checkEmpty("", "M`>.AaU_,#");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // M`>.AaU_,#
         //
         verifyException("io.github.joseerodrigues.utils.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.checkNull((Object) null, "g6p");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // g6p
         //
         verifyException("io.github.joseerodrigues.utils.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Checks checks0 = new Checks();
  }
}
