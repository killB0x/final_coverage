/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 12:58:08 GMT 2022
 */

package io.github.joseerodrigues.utils.dbutil.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.joseerodrigues.utils.dbutil.helper.SQLStatementHelper;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SQLStatementHelper_ESTest extends SQLStatementHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SQLStatementHelper sQLStatementHelper0 = new SQLStatementHelper(" IN (");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("");
      sQLStatementHelper0.addInParam(" IN (", linkedHashSet0);
      Object[] objectArray0 = sQLStatementHelper0.getParamValues();
      assertEquals(1, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SQLStatementHelper sQLStatementHelper0 = new SQLStatementHelper("B(\"H(k");
      // Undeclared exception!
      try { 
        sQLStatementHelper0.addInParam("B(\"H(k", (Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.helper.SQLStatementHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SQLStatementHelper sQLStatementHelper0 = null;
      try {
        sQLStatementHelper0 = new SQLStatementHelper((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SQLStatementHelper sQLStatementHelper0 = new SQLStatementHelper(" IN (");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("");
      linkedHashSet0.add(" IN (");
      sQLStatementHelper0.addInParam((String) null, linkedHashSet0);
      sQLStatementHelper0.addParam(" IN (", " IN (");
      StringBuilder stringBuilder0 = sQLStatementHelper0.getSQLQuery();
      assertEquals(" IN ( IN ( AND null IN (?,?)", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SQLStatementHelper sQLStatementHelper0 = new SQLStatementHelper(" IN (");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      sQLStatementHelper0.addParam(" IN (", " IN (");
      sQLStatementHelper0.addParam(" IN (", linkedHashSet0);
      StringBuilder stringBuilder0 = sQLStatementHelper0.getSQLQuery();
      assertEquals(" IN ( IN ( AND  IN (", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SQLStatementHelper sQLStatementHelper0 = new SQLStatementHelper(" IN (");
      Object[] objectArray0 = sQLStatementHelper0.getParamValues();
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SQLStatementHelper sQLStatementHelper0 = new SQLStatementHelper("");
      StringBuilder stringBuilder0 = sQLStatementHelper0.getSQLQuery();
      assertEquals("", stringBuilder0.toString());
  }
}
