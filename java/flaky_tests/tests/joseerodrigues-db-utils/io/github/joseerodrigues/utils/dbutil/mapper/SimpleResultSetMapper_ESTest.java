/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:08:17 GMT 2022
 */

package io.github.joseerodrigues.utils.dbutil.mapper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper;
import io.github.joseerodrigues.utils.dbutil.mapper.BeanResultSetMapper;
import java.sql.ResultSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleResultSetMapper_ESTest extends SimpleResultSetMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BasicResultSetMapper<Integer> basicResultSetMapper0 = new BasicResultSetMapper<Integer>("qi2dI");
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(resultSet0).getObject(anyString());
      Integer integer0 = basicResultSetMapper0.mapObject(resultSet0);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Object> class0 = Object.class;
      BeanResultSetMapper<Object> beanResultSetMapper0 = new BeanResultSetMapper<Object>(class0);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      Object object0 = beanResultSetMapper0.mapObject(resultSet0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Object> class0 = Object.class;
      BeanResultSetMapper<Object> beanResultSetMapper0 = new BeanResultSetMapper<Object>(class0);
      // Undeclared exception!
      try { 
        beanResultSetMapper0.init((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BeanResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object> class0 = Object.class;
      BeanResultSetMapper<Object> beanResultSetMapper0 = new BeanResultSetMapper<Object>(class0);
      beanResultSetMapper0.terminate();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BasicResultSetMapper<Integer> basicResultSetMapper0 = new BasicResultSetMapper<Integer>("Column '");
      basicResultSetMapper0.init((ResultSet) null);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BasicResultSetMapper<Object> basicResultSetMapper0 = new BasicResultSetMapper<Object>("Tjf(^x");
      // Undeclared exception!
      try { 
        basicResultSetMapper0.mapObject((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper", e);
      }
  }
}
