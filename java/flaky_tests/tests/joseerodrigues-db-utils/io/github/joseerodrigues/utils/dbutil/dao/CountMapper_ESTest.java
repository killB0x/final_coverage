/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:05:00 GMT 2022
 */

package io.github.joseerodrigues.utils.dbutil.dao;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.joseerodrigues.utils.dbutil.dao.CountMapper;
import java.sql.ResultSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CountMapper_ESTest extends CountMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CountMapper countMapper0 = new CountMapper();
      Integer integer0 = new Integer(0);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(integer0).when(resultSet0).getObject(anyString());
      Long long0 = countMapper0.mapObject(resultSet0);
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CountMapper countMapper0 = new CountMapper();
      Integer integer0 = new Integer(1);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(integer0).when(resultSet0).getObject(anyString());
      Long long0 = countMapper0.mapObject(resultSet0);
      assertEquals(1L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CountMapper countMapper0 = new CountMapper();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(resultSet0).getObject(anyString());
      Long long0 = countMapper0.mapObject(resultSet0);
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CountMapper countMapper0 = new CountMapper();
      // Undeclared exception!
      try { 
        countMapper0.mapObject((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.dao.CountMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CountMapper countMapper0 = new CountMapper();
      Integer integer0 = new Integer((-1514));
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(integer0).when(resultSet0).getObject(anyString());
      Long long0 = countMapper0.mapObject(resultSet0);
      assertEquals((-1514L), (long)long0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CountMapper countMapper0 = new CountMapper();
      Object object0 = new Object();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(object0).when(resultSet0).getObject(anyString());
      // Undeclared exception!
      try { 
        countMapper0.mapObject(resultSet0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.lang.Long (java.lang.Object and java.lang.Long are in module java.base of loader 'bootstrap')
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.dao.CountMapper", e);
      }
  }
}
