/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:02:54 GMT 2022
 */

package io.github.joseerodrigues.utils.properties;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.joseerodrigues.utils.properties.ResourceBundles;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ResourceBundles_ESTest extends ResourceBundles_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceBundles.fromFile("CjEkgsO5\"~Rq=eH^/");
        fail("Expecting exception: MissingResourceException");
      
      } catch(MissingResourceException e) {
         //
         // Can't find bundle for base name CjEkgsO5\"~Rq=eH^/, locale en
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceBundles.fromFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // baseName
         //
         verifyException("io.github.joseerodrigues.utils.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ResourceBundle[] resourceBundleArray0 = new ResourceBundle[2];
      ResourceBundle resourceBundle0 = ResourceBundles.fromMultiple(resourceBundleArray0);
      resourceBundleArray0[1] = resourceBundle0;
      ResourceBundle resourceBundle1 = ResourceBundles.fromMultiple(resourceBundleArray0);
      assertNotSame(resourceBundle1, resourceBundle0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceBundles.fromFile("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // baseName
         //
         verifyException("io.github.joseerodrigues.utils.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceBundles.fromMultiple((ResourceBundle[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bundles
         //
         verifyException("io.github.joseerodrigues.utils.Checks", e);
      }
  }
}
