/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Nov 07 12:56:41 GMT 2022
 */

package io.github.joseerodrigues.utils.dbutil.dao;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class DAOBuilder_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "io.github.joseerodrigues.utils.dbutil.dao.DAOBuilder"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DAOBuilder_ESTest_scaffolding.class.getClassLoader() ,
      "io.github.joseerodrigues.utils.dbutil.mapper.BeanResultSetMapper",
      "io.github.joseerodrigues.utils.dbutil.dao.DAOBuilder$InitContainer",
      "io.github.joseerodrigues.utils.dbutil.dao.DAO",
      "io.github.joseerodrigues.utils.dbutil.annotation.DefaultSelectClause",
      "io.github.joseerodrigues.utils.dbutil.dao.SimpleDAOImpl",
      "io.github.joseerodrigues.utils.dbutil.DBUtil",
      "io.github.joseerodrigues.utils.dbutil.annotation.DBTable",
      "io.github.joseerodrigues.utils.Checks",
      "io.github.joseerodrigues.utils.dbutil.mapper.MapResultSetMapper",
      "io.github.joseerodrigues.utils.dbutil.dao.DAOBuilder",
      "io.github.joseerodrigues.utils.dbutil.dao.DAOBuilder$FieldInfo",
      "io.github.joseerodrigues.utils.dbutil.mapper.SimpleResultSetMapper",
      "io.github.joseerodrigues.utils.dbutil.mapper.Mappers",
      "io.github.joseerodrigues.utils.dbutil.ResultSetMapper",
      "io.github.joseerodrigues.utils.dbutil.dao.CountMapper",
      "io.github.joseerodrigues.utils.dbutil.annotation.DBColumn",
      "io.github.joseerodrigues.utils.reflection.ReflectionUtils"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DAOBuilder_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "io.github.joseerodrigues.utils.dbutil.dao.DAOBuilder",
      "io.github.joseerodrigues.utils.dbutil.dao.DAOBuilder$InitContainer",
      "io.github.joseerodrigues.utils.dbutil.dao.DAOBuilder$FieldInfo",
      "io.github.joseerodrigues.utils.dbutil.mapper.SimpleResultSetIterator",
      "io.github.joseerodrigues.utils.dbutil.DBUtil$NoOpSingleResultSetIterator",
      "io.github.joseerodrigues.utils.dbutil.DBUtil",
      "io.github.joseerodrigues.utils.dbutil.SimpleQueryTranslator",
      "io.github.joseerodrigues.utils.Checks",
      "io.github.joseerodrigues.utils.dbutil.ListSimpleResultSetIterator",
      "io.github.joseerodrigues.utils.dbutil.mapper.SimpleResultSetMapper",
      "io.github.joseerodrigues.utils.dbutil.DBUtil$RsResultSetMapper",
      "io.github.joseerodrigues.utils.dbutil.mapper.Mappers",
      "io.github.joseerodrigues.utils.dbutil.mapper.MapResultSetMapper",
      "io.github.joseerodrigues.utils.reflection.ReflectionUtils",
      "io.github.joseerodrigues.utils.dbutil.mapper.BeanResultSetMapper",
      "io.github.joseerodrigues.utils.dbutil.dao.CountMapper",
      "io.github.joseerodrigues.utils.dbutil.dao.SimpleDAOImpl",
      "io.github.joseerodrigues.utils.dbutil.ResourceBundleQueryTranslator",
      "io.github.joseerodrigues.utils.dbutil.mapper.ResultSetMap",
      "io.github.joseerodrigues.utils.properties.InterpolationResourceBundle",
      "io.github.joseerodrigues.utils.dbutil.mapper.BasicResultSetMapper",
      "io.github.joseerodrigues.utils.dbutil.UncloseableConnectionImpl",
      "io.github.joseerodrigues.utils.dbutil.mapper.StringResultSetMapper",
      "io.github.joseerodrigues.utils.dbutil.DataAccessException"
    );
  }
}
