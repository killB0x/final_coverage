/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 12:55:11 GMT 2022
 */

package io.github.joseerodrigues.utils.dbutil.mapper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.joseerodrigues.utils.dbutil.mapper.BeanResultSetMapper;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BeanResultSetMapper_ESTest extends BeanResultSetMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Object> class0 = Object.class;
      BeanResultSetMapper<Object> beanResultSetMapper0 = new BeanResultSetMapper<Object>(class0);
      // Undeclared exception!
      try { 
        beanResultSetMapper0.init((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.joseerodrigues.utils.dbutil.mapper.BeanResultSetMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BeanResultSetMapper<String> beanResultSetMapper0 = null;
      try {
        beanResultSetMapper0 = new BeanResultSetMapper<String>((Class<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<String> class0 = String.class;
      BeanResultSetMapper<String> beanResultSetMapper0 = new BeanResultSetMapper<String>(class0);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      String string0 = beanResultSetMapper0.mapObject(resultSet0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<String> class0 = String.class;
      BeanResultSetMapper<String> beanResultSetMapper0 = new BeanResultSetMapper<String>(class0);
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(2).when(resultSetMetaData0).getColumnCount();
      doReturn((String) null, (String) null).when(resultSetMetaData0).getColumnLabel(anyInt());
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      beanResultSetMapper0.init(resultSet0);
  }
}
