/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 12:56:41 GMT 2022
 */

package io.github.joseerodrigues.utils.dbutil.dao;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.joseerodrigues.utils.dbutil.DBUtil;
import io.github.joseerodrigues.utils.dbutil.dao.DAO;
import io.github.joseerodrigues.utils.dbutil.dao.DAOBuilder;
import java.io.SequenceInputStream;
import java.lang.annotation.Annotation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DAOBuilder_ESTest extends DAOBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      // Undeclared exception!
      try { 
        DAOBuilder.build((DBUtil) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.joseerodrigues.utils.reflection.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DAOBuilder.FieldInfo dAOBuilder_FieldInfo0 = new DAOBuilder.FieldInfo();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<SequenceInputStream> class0 = SequenceInputStream.class;
      DAO<SequenceInputStream> dAO0 = DAOBuilder.build((DBUtil) null, class0);
      assertEquals("", dAO0.getTableName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DAOBuilder dAOBuilder0 = new DAOBuilder();
  }
}
