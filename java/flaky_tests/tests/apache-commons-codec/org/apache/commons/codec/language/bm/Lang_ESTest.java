/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 18:24:25 GMT 2022
 */

package org.apache.commons.codec.language.bm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.language.bm.Lang;
import org.apache.commons.codec.language.bm.Languages;
import org.apache.commons.codec.language.bm.NameType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Lang_ESTest extends Lang_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        Lang.loadFromResource((String) null, (Languages) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NameType nameType0 = NameType.ASHKENAZI;
      Lang lang0 = Lang.instance(nameType0);
      // Undeclared exception!
      try { 
        lang0.guessLanguages((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.bm.Lang", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NameType nameType0 = NameType.GENERIC;
      Lang lang0 = Lang.instance(nameType0);
      // Undeclared exception!
      try { 
        lang0.guessLanguage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.language.bm.Lang", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NameType nameType0 = NameType.GENERIC;
      Lang lang0 = Lang.instance(nameType0);
      Languages.LanguageSet languages_LanguageSet0 = lang0.guessLanguages(".H6],h=");
      assertFalse(languages_LanguageSet0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NameType nameType0 = NameType.GENERIC;
      Lang lang0 = Lang.instance(nameType0);
      Languages.LanguageSet languages_LanguageSet0 = lang0.guessLanguages("Languages(");
      assertNotNull(languages_LanguageSet0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NameType nameType0 = NameType.SEPHARDIC;
      Lang lang0 = Lang.instance(nameType0);
      String string0 = lang0.guessLanguage("\u05E9 ");
      assertEquals("hebrew", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        Lang.loadFromResource("", (Languages) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed line 'META-INF' in language resource ''
         //
         verifyException("org.apache.commons.codec.language.bm.Lang", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Lang lang0 = Lang.loadFromResource("ch", (Languages) null);
      assertNotNull(lang0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NameType nameType0 = NameType.GENERIC;
      Lang lang0 = Lang.instance(nameType0);
      String string0 = lang0.guessLanguage("Can't fetch any language from the any language set.");
      //  // Unstable assertion: assertEquals("any", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Lang lang0 = Lang.instance((NameType) null);
      assertNull(lang0);
  }
}
