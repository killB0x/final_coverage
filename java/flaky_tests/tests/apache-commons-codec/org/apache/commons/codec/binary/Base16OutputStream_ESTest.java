/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 18:53:05 GMT 2022
 */

package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.codec.CodecPolicy;
import org.apache.commons.codec.binary.Base16OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Base16OutputStream_ESTest extends Base16OutputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("1*");
      Base16OutputStream base16OutputStream0 = new Base16OutputStream(mockFileOutputStream0);
      CodecPolicy codecPolicy0 = CodecPolicy.STRICT;
      Base16OutputStream base16OutputStream1 = new Base16OutputStream(base16OutputStream0, false, false, codecPolicy0);
      assertTrue(base16OutputStream1.isStrictDecoding());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("1*");
      Base16OutputStream base16OutputStream0 = new Base16OutputStream(mockFileOutputStream0);
      Base16OutputStream base16OutputStream1 = new Base16OutputStream(base16OutputStream0, false, true);
      assertFalse(base16OutputStream1.isStrictDecoding());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("1*");
      Base16OutputStream base16OutputStream0 = new Base16OutputStream(mockFileOutputStream0, true);
      assertFalse(base16OutputStream0.isStrictDecoding());
  }
}
