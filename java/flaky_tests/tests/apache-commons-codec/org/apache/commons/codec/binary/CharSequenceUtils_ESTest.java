/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 18:34:35 GMT 2022
 */

package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.apache.commons.codec.binary.CharSequenceUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharSequenceUtils_ESTest extends CharSequenceUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2148);
      char[] charArray0 = new char[2];
      charArray0[0] = 'V';
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer1, true, 0, charBuffer0, 0, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2148);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, false, 952, charBuffer0, 1, 22);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      boolean boolean0 = CharSequenceUtils.regionMatches("", false, (-961), "J[O+sgx-9CgF7", (-1143), 1323);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2317);
      // Undeclared exception!
      try { 
        CharSequenceUtils.regionMatches("J[8d!sgx-9l@l7", true, 2317, charBuffer0, 2317, 2317);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.regionMatches((CharSequence) null, true, 1558, (CharSequence) null, 1558, 1558);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.codec.binary.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2407);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, false, 1, "J[O+!sgx-9lgF7", 1, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      boolean boolean0 = CharSequenceUtils.regionMatches((CharSequence) null, true, (-1248), (CharSequence) null, (-1248), (-1248));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(10);
      // Undeclared exception!
      try { 
        CharSequenceUtils.regionMatches("[O+sx-lgF7", true, 10, charBuffer0, 10, 10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2407);
      boolean boolean0 = CharSequenceUtils.regionMatches(charBuffer0, true, 1, "J[O+!sgx-9lgF7", 1, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CharSequenceUtils charSequenceUtils0 = new CharSequenceUtils();
  }
}
