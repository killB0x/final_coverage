/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 18:29:06 GMT 2022
 */

package org.apache.commons.codec.digest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.codec.digest.Blake3;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Blake3_ESTest extends Blake3_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      Blake3 blake3_0 = Blake3.initKeyDerivationFunction(byteArray0);
      blake3_0.doFinalize(byteArray0);
      Blake3.initHash();
      Blake3 blake3_1 = Blake3.initKeyDerivationFunction(byteArray0);
      byte[] byteArray1 = blake3_1.doFinalize(5689);
      // Undeclared exception!
      Blake3.initKeyDerivationFunction(byteArray1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Blake3 blake3_0 = Blake3.initHash();
      assertNotNull(blake3_0);
      
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        blake3_0.update((byte[]) null, 0, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Blake3.hash(byteArray0);
      Blake3 blake3_0 = Blake3.initHash();
      byte[] byteArray1 = blake3_0.doFinalize(1667);
      blake3_0.update(byteArray1);
      blake3_0.doFinalize(1667);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)4;
      Blake3 blake3_0 = Blake3.initKeyDerivationFunction(byteArray0);
      blake3_0.doFinalize(byteArray0);
      Blake3.initHash();
      Blake3 blake3_1 = Blake3.initKeyDerivationFunction(byteArray0);
      byte[] byteArray1 = blake3_1.doFinalize(5689);
      Blake3 blake3_2 = Blake3.initHash();
      // Undeclared exception!
      blake3_2.update(byteArray1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte byte0 = (byte)0;
      byte byte1 = (byte)0;
      byte byte2 = (byte)89;
      byte byte3 = (byte)16;
      byte byte4 = (byte)113;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)4;
      Blake3 blake3_0 = Blake3.initKeyDerivationFunction(byteArray0);
      blake3_0.doFinalize(byteArray0);
      Blake3.initHash();
      Blake3 blake3_1 = Blake3.initKeyDerivationFunction(byteArray0);
      byte[] byteArray1 = blake3_1.doFinalize(5689);
      Blake3 blake3_2 = Blake3.initKeyDerivationFunction(byteArray0);
      // Undeclared exception!
      blake3_2.update(byteArray1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Blake3 blake3_0 = Blake3.initHash();
      byte[] byteArray0 = blake3_0.doFinalize(1667);
      blake3_0.update(byteArray0);
      blake3_0.update(byteArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)113;
      byte byte1 = (byte) (-48);
      byte byte2 = (byte)127;
      Blake3 blake3_0 = Blake3.initKeyDerivationFunction(byteArray0);
      blake3_0.doFinalize(byteArray0);
      Blake3 blake3_1 = Blake3.initHash();
      byte[] byteArray1 = blake3_1.doFinalize(466);
      blake3_0.update(byteArray1);
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)127;
      byte byte3 = (byte)1;
      blake3_0.update(byteArray2);
      byteArray2[1] = (byte)1;
      // Undeclared exception!
      try { 
        blake3_1.doFinalize(byteArray1, (int) (byte) (-48), 1729);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Offset must be non-negative
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Blake3.hash(byteArray0);
      Blake3 blake3_0 = Blake3.initHash();
      int int0 = 1667;
      byte[] byteArray1 = blake3_0.doFinalize(1667);
      blake3_0.update(byteArray1);
      // Undeclared exception!
      try { 
        Blake3.initKeyedHash(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Blake3 keys must be 32 bytes
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Blake3.hash((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte[] byteArray1 = Blake3.hash(byteArray0);
      assertEquals(32, byteArray1.length);
      
      byte[] byteArray2 = Blake3.keyedHash(byteArray1, byteArray1);
      Blake3 blake3_0 = Blake3.initKeyDerivationFunction(byteArray2);
      // Undeclared exception!
      try { 
        blake3_0.doFinalize((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte0 = (byte)16;
      byte byte1 = (byte)113;
      byte byte2 = (byte) (-48);
      byte byte3 = (byte)127;
      Blake3 blake3_0 = Blake3.initKeyDerivationFunction(byteArray0);
      blake3_0.doFinalize(byteArray0);
      Blake3.initHash();
      byte[] byteArray1 = blake3_0.doFinalize(464);
      blake3_0.update(byteArray1);
      // Undeclared exception!
      try { 
        Blake3.initKeyedHash(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Blake3 keys must be 32 bytes
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-36);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)102;
      byteArray0[3] = (byte)0;
      Blake3 blake3_0 = Blake3.initKeyDerivationFunction(byteArray0);
      byte[] byteArray1 = Blake3.hash(byteArray0);
      blake3_0.reset();
      Blake3.initKeyDerivationFunction(byteArray0);
      Blake3.keyedHash(byteArray1, byteArray1);
      byte[] byteArray2 = null;
      // Undeclared exception!
      try { 
        Blake3.initKeyDerivationFunction((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Blake3 blake3_0 = Blake3.initHash();
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)108;
      byteArray0[0] = (byte)108;
      byte[] byteArray1 = blake3_0.doFinalize(2573);
      blake3_0.doFinalize(byteArray1);
      Blake3.initHash();
      Blake3.initHash();
      Blake3 blake3_1 = Blake3.initKeyDerivationFunction(byteArray0);
      blake3_1.doFinalize(byteArray1);
      blake3_1.reset();
      // Undeclared exception!
      try { 
        Blake3.initKeyedHash(byteArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Blake3 keys must be 32 bytes
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Blake3.initHash();
      byte[] byteArray0 = new byte[9];
      Blake3 blake3_0 = Blake3.initHash();
      Blake3.initKeyDerivationFunction(byteArray0);
      int int0 = 0;
      // Undeclared exception!
      try { 
        blake3_0.update(byteArray0, 0, (-2196));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Length must be non-negative
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Blake3 blake3_0 = Blake3.initHash();
      byte[] byteArray0 = blake3_0.doFinalize(1667);
      Blake3.hash(byteArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)113;
      byteArray0[4] = (byte)89;
      byteArray0[5] = (byte)16;
      byteArray0[6] = (byte)113;
      byteArray0[7] = (byte) (-48);
      byteArray0[8] = (byte)127;
      Blake3 blake3_0 = Blake3.initKeyDerivationFunction(byteArray0);
      blake3_0.doFinalize(byteArray0);
      Blake3.initHash();
      byte[] byteArray1 = blake3_0.doFinalize((int) (byte)89);
      blake3_0.update(byteArray1);
      // Undeclared exception!
      try { 
        Blake3.initKeyedHash(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Blake3 keys must be 32 bytes
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Blake3 blake3_0 = Blake3.initHash();
      byte[] byteArray0 = blake3_0.doFinalize(0);
      blake3_0.doFinalize(byteArray0);
      Blake3.initHash();
      Blake3.initHash();
      Blake3.initKeyDerivationFunction(byteArray0);
      blake3_0.doFinalize(byteArray0);
      blake3_0.reset();
      blake3_0.doFinalize(0);
      // Undeclared exception!
      try { 
        Blake3.keyedHash(byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Blake3 keys must be 32 bytes
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)53;
      byteArray0[1] = (byte) (-39);
      byteArray0[2] = (byte) (-96);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)16;
      byteArray0[6] = (byte)69;
      byteArray0[7] = (byte) (-13);
      Blake3 blake3_0 = Blake3.initKeyDerivationFunction(byteArray0);
      Blake3.initHash();
      blake3_0.update(byteArray0, (int) (byte)1, (int) (byte)1);
      blake3_0.doFinalize((int) (byte)53);
      // Undeclared exception!
      try { 
        Blake3.initKeyedHash(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Blake3 keys must be 32 bytes
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Blake3 blake3_0 = Blake3.initHash();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-72);
      byteArray0[1] = (byte) (-128);
      byteArray0[2] = (byte) (-15);
      byte byte0 = (byte)125;
      byteArray0[3] = (byte)125;
      byteArray0[4] = (byte)0;
      byte byte1 = (byte)56;
      byteArray0[5] = (byte)56;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)45;
      Blake3 blake3_1 = Blake3.initKeyDerivationFunction(byteArray0);
      blake3_1.doFinalize(byteArray0, (int) (byte)0, (int) (byte)0);
      blake3_0.reset();
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)14;
      byte byte2 = (byte)126;
      byteArray1[1] = (byte)126;
      byteArray1[2] = (byte)37;
      // Undeclared exception!
      try { 
        Blake3.keyedHash(byteArray1, byteArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Blake3 keys must be 32 bytes
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Blake3 blake3_0 = Blake3.initHash();
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        blake3_0.doFinalize((byte[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Blake3 blake3_0 = Blake3.initHash();
      blake3_0.reset();
      blake3_0.update(byteArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Blake3 blake3_0 = Blake3.initHash();
      blake3_0.reset();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-96);
      byteArray0[3] = (byte) (-78);
      byteArray0[4] = (byte)40;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)39;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)13;
      blake3_0.update(byteArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Blake3 blake3_0 = Blake3.initHash();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        blake3_0.update(byteArray0, (-149), (-149));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Offset must be non-negative
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Blake3 blake3_0 = Blake3.initHash();
      // Undeclared exception!
      try { 
        blake3_0.update(byteArray0, 9, (-1869));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Length must be non-negative
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Blake3 blake3_0 = Blake3.initKeyDerivationFunction(byteArray0);
      blake3_0.update(byteArray0);
      // Undeclared exception!
      try { 
        blake3_0.update(byteArray0, 0, (-1691));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Length must be non-negative
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Blake3 blake3_0 = Blake3.initHash();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)29;
      byteArray0[1] = (byte)12;
      // Undeclared exception!
      try { 
        blake3_0.doFinalize(byteArray0, (int) (byte)12, (int) (byte)29);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Offset 12 and length 29 out of bounds with buffer length 2
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        Blake3.initKeyedHash((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Blake3 blake3_0 = Blake3.initHash();
      // Undeclared exception!
      try { 
        blake3_0.doFinalize(byteArray0, 762, 1253);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Offset 762 and length 1253 out of bounds with buffer length 3
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Blake3 blake3_0 = Blake3.initHash();
      int int0 = (-268);
      // Undeclared exception!
      try { 
        blake3_0.doFinalize((-268));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested bytes must be non-negative
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Blake3 blake3_0 = Blake3.initHash();
      // Undeclared exception!
      try { 
        blake3_0.doFinalize((-1336));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Requested bytes must be non-negative
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte)0;
      Blake3 blake3_0 = Blake3.initKeyDerivationFunction(byteArray0);
      blake3_0.update(byteArray0);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-42);
      byteArray1[1] = (byte) (-1);
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte) (-42);
      // Undeclared exception!
      try { 
        Blake3.keyedHash(byteArray1, byteArray1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Blake3 keys must be 32 bytes
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Blake3.initHash();
      // Undeclared exception!
      try { 
        Blake3.initKeyedHash(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Blake3 keys must be 32 bytes
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-30);
      byteArray0[1] = (byte)107;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte) (-87);
      byteArray0[4] = (byte) (-31);
      byteArray0[5] = (byte)62;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      // Undeclared exception!
      try { 
        Blake3.initKeyedHash(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Blake3 keys must be 32 bytes
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = Blake3.hash(byteArray0);
      Blake3 blake3_0 = Blake3.initKeyedHash(byteArray1);
      // Undeclared exception!
      try { 
        blake3_0.doFinalize(byteArray1, 1253, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Offset 1253 and length 0 out of bounds with buffer length 32
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)5;
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-1);
      byte byte1 = (byte) (-96);
      byteArray0[2] = (byte) (-96);
      byte byte2 = (byte)1;
      byteArray0[3] = (byte)1;
      byte byte3 = (byte)61;
      byteArray0[4] = (byte)61;
      // Undeclared exception!
      try { 
        Blake3.keyedHash(byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Blake3 keys must be 32 bytes
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        Blake3.keyedHash((byte[]) null, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Blake3.keyedHash(byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Blake3 keys must be 32 bytes
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Blake3 blake3_0 = Blake3.initHash();
      byte[] byteArray0 = blake3_0.doFinalize(1667);
      Blake3 blake3_1 = Blake3.initKeyDerivationFunction(byteArray0);
      // Undeclared exception!
      try { 
        blake3_1.doFinalize(byteArray0, 1, 2353);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Offset 1 and length 2353 out of bounds with buffer length 1667
         //
         verifyException("org.apache.commons.codec.digest.Blake3", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        Blake3.initKeyDerivationFunction((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-61);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-5);
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte) (-108);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)0;
      Blake3 blake3_0 = Blake3.initKeyDerivationFunction(byteArray0);
      assertNotNull(blake3_0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Blake3 blake3_0 = Blake3.initHash();
      // Undeclared exception!
      try { 
        blake3_0.update((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Blake3 blake3_0 = Blake3.initHash();
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        blake3_0.update((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }
}
