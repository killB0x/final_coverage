/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 07:41:16 GMT 2022
 */

package org.opengis.cite.transformers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import javax.imageio.metadata.IIOMetadataNode;
import javax.swing.JCheckBox;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.opengis.cite.transformers.ImageStats;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ImageStats_ESTest extends ImageStats_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("subilage");
      Node node0 = iIOMetadataNode0.removeChild(iIOMetadataNode0);
      ImageStats.processBufferedImage((BufferedImage) null, iIOMetadataNode0);
      assertSame(iIOMetadataNode0, node0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JCheckBox jCheckBox0 = new JCheckBox("eaz5KT043GJA0RkH#", false);
      ImageStats imageStats0 = new ImageStats(jCheckBox0, "d_E{VGpc-A[8key*8");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2387, (-416));
      String string0 = imageStats0.transform((Object) null, byteArrayInputStream0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      ImageStats imageStats0 = null;
      try {
        imageStats0 = new ImageStats(object0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.transformers.ImageStats", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      NodeList nodeList0 = iIOMetadataNode0.getElementsByTagName("");
      ImageStats.processBufferedImage((BufferedImage) null, nodeList0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("checksum");
      NodeList nodeList0 = iIOMetadataNode0.getElementsByTagName("checksum");
      try { 
        ImageStats.processBufferedImage((BufferedImage) null, nodeList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.opengis.cite.transformers.ImageStats", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("subimage");
      NodeList nodeList0 = iIOMetadataNode0.getElementsByTagName("subimage");
      try { 
        ImageStats.processBufferedImage((BufferedImage) null, nodeList0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("count");
      NodeList nodeList0 = iIOMetadataNode0.getElementsByTagName("count");
      try { 
        ImageStats.processBufferedImage((BufferedImage) null, nodeList0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Zero length string
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ImageStats imageStats0 = new ImageStats();
      String string0 = imageStats0.getTransformedDocument();
      assertNull(string0);
  }
}
