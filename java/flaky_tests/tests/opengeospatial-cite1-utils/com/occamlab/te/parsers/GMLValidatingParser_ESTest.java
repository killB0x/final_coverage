/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 08:00:09 GMT 2022
 */

package com.occamlab.te.parsers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.galdosinc.glib.xml.jaxp.ValidatingDocument;
import com.occamlab.te.parsers.GMLValidatingParser;
import java.io.FileNotFoundException;
import java.net.MalformedURLException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xml.sax.SAXParseException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GMLValidatingParser_ESTest extends GMLValidatingParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      try { 
        GMLValidatingParser.main(stringArray0);
        fail("Expecting exception: SAXParseException");
      
      } catch(SAXParseException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Lsd@l:*8dbP<Ktc";
      try { 
        GMLValidatingParser.main(stringArray0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: Lsd@l:*8dbP<Ktc
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[2];
      try { 
        GMLValidatingParser.main(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI cannot be null
         //
         verifyException("javax.xml.parsers.DocumentBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[0];
      try { 
        GMLValidatingParser.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.occamlab.te.parsers.GMLValidatingParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "com.galdosinc.glib.xml.jaxp.ValidatingDocumentBuilderFactory";
      try { 
        GMLValidatingParser.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // /home/user/com.galdosinc.glib.xml.jaxp.ValidatingDocumentBuilderFactory (No such file or directory)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      GMLValidatingParser gMLValidatingParser0 = null;
      try {
        gMLValidatingParser0 = new GMLValidatingParser(validatingDocument0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      try { 
        GMLValidatingParser.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.occamlab.te.parsers.GMLValidatingParser", e);
      }
  }
}
