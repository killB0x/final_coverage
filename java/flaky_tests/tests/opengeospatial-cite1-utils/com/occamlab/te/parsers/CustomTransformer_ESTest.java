/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 08:12:25 GMT 2022
 */

package com.occamlab.te.parsers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.occamlab.te.parsers.CustomTransformer;
import java.io.PrintWriter;
import java.net.URLConnection;
import javax.imageio.metadata.IIOMetadataNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CustomTransformer_ESTest extends CustomTransformer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2in10|DIbI]T\"D");
      try { 
        CustomTransformer.parse((URLConnection) null, iIOMetadataNode0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.occamlab.te.parsers.CustomTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Object object0 = new Object();
      URLConnection uRLConnection0 = mock(URLConnection.class, new ViolatedAssumptionAnswer());
      doReturn(object0).when(uRLConnection0).getContent();
      doReturn("1&[G|j2SK", "1&[G|j2SK", (String) null, "\"`tjt", "\"`tjt").when(uRLConnection0).getHeaderField(anyInt());
      doReturn("NKo", "LS`nuOFrj}vK7A", "SN:#ZU", "", (String) null).when(uRLConnection0).getHeaderFieldKey(anyInt());
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("GyD");
      CustomTransformer.parse(uRLConnection0, iIOMetadataNode0, mockPrintWriter0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      URLConnection uRLConnection0 = mock(URLConnection.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(uRLConnection0).getContent();
      doReturn((String) null).when(uRLConnection0).getHeaderField(anyInt());
      doReturn((String) null).when(uRLConnection0).getHeaderFieldKey(anyInt());
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      try { 
        CustomTransformer.parse(uRLConnection0, iIOMetadataNode0, (PrintWriter) null);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // Method not supported
         //
         verifyException("javax.imageio.metadata.IIOMetadataNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CustomTransformer customTransformer0 = new CustomTransformer();
  }
}
