/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 07:52:30 GMT 2022
 */

package com.galdosinc.glib.xml.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.galdosinc.glib.xml.dom.DomChildAccess;
import java.util.Iterator;
import java.util.List;
import javax.imageio.metadata.IIOMetadataNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DomChildAccess_ESTest extends DomChildAccess_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("OY");
      iIOMetadataNode0.appendChild(iIOMetadataNode1);
      int int0 = DomChildAccess.getChildElemCount((Node) iIOMetadataNode0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("");
      iIOMetadataNode0.appendChild(iIOMetadataNode1);
      int int0 = DomChildAccess.removeAllChildNodes(iIOMetadataNode0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("");
      iIOMetadataNode0.appendChild(iIOMetadataNode1);
      Element element0 = DomChildAccess.getFirstChildElement((Node) iIOMetadataNode0);
      assertNotNull(element0);
      assertSame(element0, iIOMetadataNode1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = DomChildAccess.getChildElemCount((Node) null, "com.galdosinc.glib.xml.dom.DomChildAccess", "");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        DomChildAccess.removeAllChildNodes((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.galdosinc.glib.xml.dom.DomChildAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        DomChildAccess.getFirstChildElement((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.galdosinc.glib.xml.dom.DomChildAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        DomChildAccess.getElementTextContent((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.galdosinc.glib.xml.dom.DomChildAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        DomChildAccess.getChildElements((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.galdosinc.glib.xml.dom.DomChildAccess$2", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        DomChildAccess.getChildElementIterator((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.galdosinc.glib.xml.dom.DomChildAccess$2", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.appendChild(iIOMetadataNode0);
      Node node1 = node0.insertBefore(iIOMetadataNode0, iIOMetadataNode0);
      // Undeclared exception!
      DomChildAccess.getChildElemCount(node1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        DomChildAccess.getChildElemCount((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.galdosinc.glib.xml.dom.DomChildAccess$2", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode((String) null);
      Iterator iterator0 = DomChildAccess.getChildElementIterator((Node) iIOMetadataNode0, "", "");
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode((String) null);
      Iterator iterator0 = DomChildAccess.getChildElementIterator((Node) iIOMetadataNode0);
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.appendChild(iIOMetadataNode0);
      iIOMetadataNode0.insertBefore(node0, node0);
      // Undeclared exception!
      DomChildAccess.getChildElements(node0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode((String) null);
      int int0 = DomChildAccess.removeAllChildNodes(iIOMetadataNode0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("");
      iIOMetadataNode0.appendChild(iIOMetadataNode1);
      Element element0 = DomChildAccess.getFirstChildElement((Node) iIOMetadataNode0, "", "");
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("");
      Node node0 = iIOMetadataNode0.appendChild(iIOMetadataNode1);
      Element element0 = DomChildAccess.getFirstChildElement((Node) iIOMetadataNode0, (String) null, "");
      assertNotNull(element0);
      assertSame(element0, node0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode("");
      iIOMetadataNode0.appendChild(iIOMetadataNode1);
      Element element0 = DomChildAccess.getFirstChildElement((Node) iIOMetadataNode0, "", "wIA[6=");
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      // Undeclared exception!
      try { 
        DomChildAccess.getFirstChildElement((Node) iIOMetadataNode0, (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode((String) null);
      Element element0 = DomChildAccess.getFirstChildElement((Node) iIOMetadataNode0);
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      int int0 = DomChildAccess.getChildElemCount((Node) iIOMetadataNode0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.appendChild(iIOMetadataNode0);
      List list0 = DomChildAccess.getChildElements(node0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = (IIOMetadataNode)iIOMetadataNode0.appendChild(iIOMetadataNode0);
      StringBuffer stringBuffer0 = DomChildAccess.getElementTextContent(iIOMetadataNode1);
      assertEquals(0, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      StringBuffer stringBuffer0 = DomChildAccess.getElementTextContent(iIOMetadataNode0);
      assertEquals("", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DomChildAccess domChildAccess0 = new DomChildAccess();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      List list0 = DomChildAccess.getChildElementsByTagName(iIOMetadataNode0, ">7J:2", "fA");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      List list0 = DomChildAccess.getChildElements(iIOMetadataNode0);
      assertTrue(list0.isEmpty());
  }
}
