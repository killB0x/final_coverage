/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 08:24:24 GMT 2022
 */

package com.galdosinc.glib.xml.jaxp;

import org.junit.Test;
import static org.junit.Assert.*;
import com.galdosinc.glib.xml.jaxp.ValidatingDocument;
import javax.imageio.metadata.IIOMetadataNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;
import org.w3c.dom.CDATASection;
import org.w3c.dom.Comment;
import org.w3c.dom.DOMConfiguration;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;
import org.w3c.dom.EntityReference;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.ProcessingInstruction;
import org.w3c.dom.Text;
import org.w3c.dom.UserDataHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ValidatingDocument_ESTest extends ValidatingDocument_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      String string0 = validatingDocument0.getXmlEncoding();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Element element0 = validatingDocument0.createElementNS("E,", "E,");
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Attr attr0 = validatingDocument0.createAttributeNS("`H<daSNZdv", "`H<daSNZdv");
      assertNull(attr0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      NodeList nodeList0 = validatingDocument0.getChildNodes();
      assertNull(nodeList0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Attr attr0 = validatingDocument0.createAttribute((String) null);
      assertNull(attr0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      boolean boolean0 = validatingDocument0.getXmlStandalone();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Object object0 = validatingDocument0.getUserData((String) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      String string0 = validatingDocument0.getBaseURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      String string0 = validatingDocument0.lookupPrefix("l{_L7gR");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      validatingDocument0.setDocumentURI("L&KsRu|2AUOA)");
      assertNull(validatingDocument0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Node node0 = validatingDocument0.renameNode((Node) null, "PV#9pLt_&O9O(2:", "PV#9pLt_&O9O(2:");
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      String string0 = validatingDocument0.getTextContent();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      validatingDocument0.normalizeDocument();
      assertNull(validatingDocument0.getNamespaceURI());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Node node0 = validatingDocument0.getFirstChild();
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Node node0 = validatingDocument0.replaceChild((Node) null, (Node) null);
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Node node0 = validatingDocument0.importNode((Node) null, false);
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      NodeList nodeList0 = validatingDocument0.getElementsByTagName("LJs2(R~`E&{Li5");
      assertNull(nodeList0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      validatingDocument0.setPrefix("0uuoA`X:|`gA");
      assertNull(validatingDocument0.getNodeValue());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Node node0 = validatingDocument0.getLastChild();
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Object object0 = validatingDocument0.getFeature((String) null, "5<d\"~");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Object object0 = validatingDocument0.setUserData((String) null, (Object) null, (UserDataHandler) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Node node0 = validatingDocument0.removeChild(iIOMetadataNode0);
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      validatingDocument0.setStrictErrorChecking(false);
      assertNull(validatingDocument0.getNodeValue());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Element element0 = validatingDocument0.getElementById("");
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Node node0 = validatingDocument0.getPreviousSibling();
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      boolean boolean0 = validatingDocument0.hasChildNodes();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      short short0 = validatingDocument0.compareDocumentPosition((Node) null);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      String string0 = validatingDocument0.getLocalName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      short short0 = validatingDocument0.getNodeType();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      boolean boolean0 = validatingDocument0.isSameNode((Node) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Document document0 = validatingDocument0.getOwnerDocument();
      assertNull(document0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      DocumentType documentType0 = validatingDocument0.getDoctype();
      assertNull(documentType0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Element element0 = validatingDocument0.createElement("1T,-(9[k&");
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      validatingDocument0.normalize();
      assertNull(validatingDocument0.getXmlEncoding());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      validatingDocument0.setNodeValue("");
      assertNull(validatingDocument0.getNodeName());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      DocumentFragment documentFragment0 = validatingDocument0.createDocumentFragment();
      assertNull(documentFragment0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      boolean boolean0 = validatingDocument0.isEqualNode((Node) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      boolean boolean0 = validatingDocument0.hasAttributes();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Comment comment0 = validatingDocument0.createComment((String) null);
      assertNull(comment0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      String string0 = validatingDocument0.getInputEncoding();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      DOMConfiguration dOMConfiguration0 = validatingDocument0.getDomConfig();
      assertNull(dOMConfiguration0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      String string0 = validatingDocument0.getXmlVersion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      DOMImplementation dOMImplementation0 = validatingDocument0.getImplementation();
      assertNull(dOMImplementation0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Node node0 = validatingDocument0.getNextSibling();
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      String string0 = validatingDocument0.getNodeName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Element element0 = validatingDocument0.getDocumentElement();
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      CDATASection cDATASection0 = validatingDocument0.createCDATASection("t");
      assertNull(cDATASection0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      String string0 = validatingDocument0.getPrefix();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      NodeList nodeList0 = validatingDocument0.getElementsByTagNameNS("iwe-q~n?JYo", "iwe-q~n?JYo");
      assertNull(nodeList0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      String string0 = validatingDocument0.getNamespaceURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      boolean boolean0 = validatingDocument0.getStrictErrorChecking();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      EntityReference entityReference0 = validatingDocument0.createEntityReference((String) null);
      assertNull(entityReference0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      String string0 = validatingDocument0.getNodeValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      NamedNodeMap namedNodeMap0 = validatingDocument0.getAttributes();
      assertNull(namedNodeMap0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Node node0 = validatingDocument0.adoptNode((Node) null);
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Node node0 = validatingDocument0.appendChild((Node) null);
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Node node0 = validatingDocument0.getParentNode();
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      boolean boolean0 = validatingDocument0.isDefaultNamespace("LJs2(R~`E&{Li5");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      validatingDocument0.setTextContent("");
      assertNull(validatingDocument0.getDocumentURI());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      ProcessingInstruction processingInstruction0 = validatingDocument0.createProcessingInstruction("_fb$o`QxW<$\"", "_fb$o`QxW<$\"");
      assertNull(processingInstruction0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      validatingDocument0.setXmlStandalone(false);
      assertNull(validatingDocument0.getNodeName());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Node node0 = validatingDocument0.insertBefore((Node) null, (Node) null);
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      String string0 = validatingDocument0.getDocumentURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      validatingDocument0.setXmlVersion((String) null);
      assertEquals((short)0, validatingDocument0.getNodeType());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      String string0 = validatingDocument0.lookupNamespaceURI("0uuoA`X:|`gA");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Node node0 = validatingDocument0.cloneNode(false);
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      boolean boolean0 = validatingDocument0.isSupported("", (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ValidatingDocument validatingDocument0 = new ValidatingDocument();
      Text text0 = validatingDocument0.createTextNode((String) null);
      assertNull(text0);
  }
}
