/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 07:58:38 GMT 2022
 */

package com.galdosinc.glib.gml.coord;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.galdosinc.glib.gml.coord.Coord;
import java.util.List;
import javax.imageio.metadata.IIOMetadataNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Coord_ESTest extends Coord_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Coord coord0 = new Coord();
      assertNotNull(coord0);
      assertEquals(Integer.MAX_VALUE, Coord.SCAN_ALL);
      
      int int0 = coord0.scan((Element) null, (-1763));
      assertEquals(0, int0);
      assertEquals(Integer.MAX_VALUE, Coord.SCAN_ALL);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Coord coord0 = new Coord();
      assertNotNull(coord0);
      assertEquals(Integer.MAX_VALUE, Coord.SCAN_ALL);
      
      int int0 = coord0.scan((Element) null);
      assertEquals(0, int0);
      assertEquals(Integer.MAX_VALUE, Coord.SCAN_ALL);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Coord coord0 = new Coord();
      assertNotNull(coord0);
      assertEquals(Integer.MAX_VALUE, Coord.SCAN_ALL);
      
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      assertNotNull(iIOMetadataNode0);
      
      int int0 = coord0.scan((Element) iIOMetadataNode0, (-279));
      assertEquals(1, int0);
      assertEquals(Integer.MAX_VALUE, Coord.SCAN_ALL);
      
      List list0 = coord0.getCoordsValues();
      assertNotNull(list0);
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertEquals(Integer.MAX_VALUE, Coord.SCAN_ALL);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Coord coord0 = new Coord();
      assertNotNull(coord0);
      assertEquals(Integer.MAX_VALUE, Coord.SCAN_ALL);
      
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      assertNotNull(iIOMetadataNode0);
      
      Node node0 = iIOMetadataNode0.appendChild(iIOMetadataNode0);
      assertNotNull(node0);
      assertSame(iIOMetadataNode0, node0);
      assertSame(node0, iIOMetadataNode0);
      
      // Undeclared exception!
      try { 
        coord0.scan((Element) iIOMetadataNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Coord coord0 = new Coord();
      assertNotNull(coord0);
      assertEquals(Integer.MAX_VALUE, Coord.SCAN_ALL);
      
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      assertNotNull(iIOMetadataNode0);
      
      Node node0 = iIOMetadataNode0.insertBefore(iIOMetadataNode0, iIOMetadataNode0);
      assertNotNull(node0);
      assertSame(iIOMetadataNode0, node0);
      assertSame(node0, iIOMetadataNode0);
      
      int int0 = coord0.scan((Element) iIOMetadataNode0, 1);
      assertEquals(1, int0);
      assertEquals(Integer.MAX_VALUE, Coord.SCAN_ALL);
      assertSame(iIOMetadataNode0, node0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Coord coord0 = new Coord();
      assertNotNull(coord0);
      assertEquals(Integer.MAX_VALUE, Coord.SCAN_ALL);
      
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X");
      assertNotNull(iIOMetadataNode0);
      
      Node node0 = iIOMetadataNode0.appendChild(iIOMetadataNode0);
      assertNotNull(node0);
      assertSame(iIOMetadataNode0, node0);
      assertSame(node0, iIOMetadataNode0);
      
      // Undeclared exception!
      try { 
        coord0.scan((Element) iIOMetadataNode0, 1775);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Encountered unexpected child of gml:coord: X
         //
         verifyException("com.galdosinc.glib.gml.coord.Coord", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Coord coord0 = new Coord();
      assertNotNull(coord0);
      assertEquals(Integer.MAX_VALUE, Coord.SCAN_ALL);
      
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Y");
      assertNotNull(iIOMetadataNode0);
      
      IIOMetadataNode iIOMetadataNode1 = (IIOMetadataNode)iIOMetadataNode0.appendChild(iIOMetadataNode0);
      assertNotNull(iIOMetadataNode1);
      assertSame(iIOMetadataNode0, iIOMetadataNode1);
      assertSame(iIOMetadataNode1, iIOMetadataNode0);
      
      // Undeclared exception!
      try { 
        coord0.scan((Element) iIOMetadataNode1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Encountered unexpected child of gml:coord: Y
         //
         verifyException("com.galdosinc.glib.gml.coord.Coord", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Coord coord0 = new Coord();
      assertNotNull(coord0);
      assertEquals(Integer.MAX_VALUE, Coord.SCAN_ALL);
      
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      assertNotNull(iIOMetadataNode0);
      
      Node node0 = iIOMetadataNode0.appendChild(iIOMetadataNode0);
      assertNotNull(node0);
      assertSame(iIOMetadataNode0, node0);
      assertSame(node0, iIOMetadataNode0);
      
      // Undeclared exception!
      try { 
        coord0.scan((Element) iIOMetadataNode0, 1775);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Coord coord0 = new Coord();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = (IIOMetadataNode)iIOMetadataNode0.insertBefore(iIOMetadataNode0, iIOMetadataNode0);
      // Undeclared exception!
      coord0.scan((Element) iIOMetadataNode1, Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Coord coord0 = new Coord();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = (IIOMetadataNode)iIOMetadataNode0.insertBefore(iIOMetadataNode0, iIOMetadataNode0);
      int int0 = coord0.scan((Element) iIOMetadataNode1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Coord coord0 = new Coord();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      coord0.scan((Element) iIOMetadataNode0, (-1));
      double[] doubleArray0 = coord0.getCoordValues();
      assertEquals(0, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Coord coord0 = new Coord();
      List list0 = coord0.getCoordsValues();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Coord coord0 = new Coord();
      // Undeclared exception!
      try { 
        coord0.getCoordValues();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }
}
