/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 08:04:41 GMT 2022
 */

package com.galdosinc.glib.gml.coord;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.galdosinc.glib.gml.coord.CoordinateTupleLinkedList;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CoordinateTupleLinkedList_ESTest extends CoordinateTupleLinkedList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      double[][] doubleArray0 = new double[1][0];
      coordinateTupleLinkedList0.setCoordinateTuples(doubleArray0, true);
      int int0 = coordinateTupleLinkedList0.getDimension();
      assertEquals(1, coordinateTupleLinkedList0.getCoordinateTupleCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      double[][] doubleArray0 = new double[4][0];
      double[] doubleArray1 = new double[3];
      doubleArray0[0] = doubleArray1;
      coordinateTupleLinkedList0.setCoordinateTuples(doubleArray0, false);
      int int0 = coordinateTupleLinkedList0.getDimension();
      assertEquals(4, coordinateTupleLinkedList0.getCoordinateTupleCount());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      double[][] doubleArray0 = new double[3][4];
      coordinateTupleLinkedList0.setCoordinateTuples(doubleArray0, true);
      int int0 = coordinateTupleLinkedList0.getCoordinateTupleCount();
      assertEquals(4, coordinateTupleLinkedList0.getDimension());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      double[][] doubleArray0 = new double[1][5];
      coordinateTupleLinkedList0.setCoordinateTuples(doubleArray0, true);
      coordinateTupleLinkedList0.asSequentialAccessList(true);
      assertEquals(5, coordinateTupleLinkedList0.getDimension());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      coordinateTupleLinkedList0.asRandomAccessList(false);
      assertEquals((-1), coordinateTupleLinkedList0.getDimension());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      double[][] doubleArray0 = new double[1][9];
      coordinateTupleLinkedList0.setCoordinateTuples(doubleArray0, false);
      coordinateTupleLinkedList0.asLiveList();
      assertEquals(1, coordinateTupleLinkedList0.getCoordinateTupleCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      double[][] doubleArray0 = new double[0][7];
      coordinateTupleLinkedList0.asArray(doubleArray0);
      assertEquals((-1), coordinateTupleLinkedList0.getDimension());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      double[][] doubleArray0 = new double[1][0];
      coordinateTupleLinkedList0.asArray(doubleArray0);
      try { 
        coordinateTupleLinkedList0.setCoordinateTuples(doubleArray0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The members of the coordinate tuple list must be arrays of doubles.
         //
         verifyException("com.galdosinc.glib.gml.coord.CoordinateTupleLinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      // Undeclared exception!
      try { 
        coordinateTupleLinkedList0.setCoordinateTuples((double[][]) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.galdosinc.glib.gml.coord.CoordinateTupleLinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      // Undeclared exception!
      try { 
        coordinateTupleLinkedList0.asArray((double[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      double[][] doubleArray0 = coordinateTupleLinkedList0.asArray(true);
      assertEquals((-1), coordinateTupleLinkedList0.getDimension());
      assertEquals(0, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      double[][] doubleArray0 = new double[1][5];
      coordinateTupleLinkedList0.setCoordinateTuples(doubleArray0, true);
      coordinateTupleLinkedList0.asArray(true);
      assertEquals(1, coordinateTupleLinkedList0.getCoordinateTupleCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      coordinateTupleLinkedList0.asSequentialAccessList(true);
      assertEquals((-1), coordinateTupleLinkedList0.getDimension());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      coordinateTupleLinkedList0.asSequentialAccessList(false);
      assertEquals((-1), coordinateTupleLinkedList0.getDimension());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) coordinateTupleLinkedList0);
      try { 
        coordinateTupleLinkedList0.setCoordinateTuples((List) linkedList0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The members of the coordinate tuple list must be arrays of doubles.
         //
         verifyException("com.galdosinc.glib.gml.coord.CoordinateTupleLinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      coordinateTupleLinkedList0.setCoordinateTuples((List) null, true);
      assertEquals((-1), coordinateTupleLinkedList0.getDimension());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      coordinateTupleLinkedList0.setCoordinateTuples((List) linkedList0, false);
      assertEquals((-1), coordinateTupleLinkedList0.getDimension());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      int int0 = coordinateTupleLinkedList0.getDimension();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      coordinateTupleLinkedList0.getCoordinateTupleCount();
      assertEquals((-1), coordinateTupleLinkedList0.getDimension());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      coordinateTupleLinkedList0.asLiveList();
      assertEquals((-1), coordinateTupleLinkedList0.getDimension());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CoordinateTupleLinkedList coordinateTupleLinkedList0 = new CoordinateTupleLinkedList();
      double[][] doubleArray0 = new double[1][5];
      coordinateTupleLinkedList0.setCoordinateTuples(doubleArray0, true);
      coordinateTupleLinkedList0.asRandomAccessList(true);
      assertEquals(1, coordinateTupleLinkedList0.getCoordinateTupleCount());
  }
}
