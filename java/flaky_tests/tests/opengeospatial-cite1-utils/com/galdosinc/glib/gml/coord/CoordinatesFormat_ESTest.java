/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 08:11:03 GMT 2022
 */

package com.galdosinc.glib.gml.coord;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.galdosinc.glib.gml.coord.CoordinatesFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CoordinatesFormat_ESTest extends CoordinatesFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat(",", ",", ".", (-1));
      assertEquals(",", coordinatesFormat0.getTupleSeparator());
      assertEquals(".", coordinatesFormat0.getDecimalPoint());
      assertEquals(",", coordinatesFormat0.getCoordinateSeparator());
      assertEquals((-1), coordinatesFormat0.getMaxDecimalDigits());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = null;
      try {
        coordinatesFormat0 = new CoordinatesFormat(".", "", " ", (-2354));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // () cannot be the coordinate tuple separator in coordinates.
         //
         verifyException("com.galdosinc.glib.gml.coord.CoordinatesFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      int int0 = coordinatesFormat0.getMaxDecimalDigits();
      assertEquals(Integer.MAX_VALUE, int0);
      assertEquals(",", coordinatesFormat0.getCoordinateSeparator());
      assertEquals(" ", coordinatesFormat0.getTupleSeparator());
      assertEquals(".", coordinatesFormat0.getDecimalPoint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      coordinatesFormat0.setMaxDecimalDigits((-2806));
      int int0 = coordinatesFormat0.getMaxDecimalDigits();
      assertEquals((-2806), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      // Undeclared exception!
      try { 
        coordinatesFormat0.setTupleSeparator((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.galdosinc.glib.gml.coord.CoordinatesFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      // Undeclared exception!
      try { 
        coordinatesFormat0.setDecimalPoint((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.galdosinc.glib.gml.coord.CoordinatesFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      // Undeclared exception!
      try { 
        coordinatesFormat0.setCoordinateSeparator((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.galdosinc.glib.gml.coord.CoordinatesFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = null;
      try {
        coordinatesFormat0 = new CoordinatesFormat((String) null, (String) null, (String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.galdosinc.glib.gml.coord.CoordinatesFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      // Undeclared exception!
      try { 
        coordinatesFormat0.setCoordinateSeparator("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // () cannot be the coordinate separator in coordinates.
         //
         verifyException("com.galdosinc.glib.gml.coord.CoordinatesFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      assertEquals(",", coordinatesFormat0.getCoordinateSeparator());
      
      coordinatesFormat0.setCoordinateSeparator(",");
      assertEquals(" ", coordinatesFormat0.getTupleSeparator());
      assertEquals(".", coordinatesFormat0.getDecimalPoint());
      assertEquals(Integer.MAX_VALUE, coordinatesFormat0.getMaxDecimalDigits());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      assertEquals(" ", coordinatesFormat0.getTupleSeparator());
      
      coordinatesFormat0.setTupleSeparator(",");
      boolean boolean0 = coordinatesFormat0.isValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      assertEquals(".", coordinatesFormat0.getDecimalPoint());
      
      coordinatesFormat0.setDecimalPoint(",");
      boolean boolean0 = coordinatesFormat0.isValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      boolean boolean0 = coordinatesFormat0.isValid();
      assertEquals(",", coordinatesFormat0.getCoordinateSeparator());
      assertEquals(" ", coordinatesFormat0.getTupleSeparator());
      assertEquals(".", coordinatesFormat0.getDecimalPoint());
      assertEquals(Integer.MAX_VALUE, coordinatesFormat0.getMaxDecimalDigits());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      assertEquals(".", coordinatesFormat0.getDecimalPoint());
      
      coordinatesFormat0.setDecimalPoint(" ");
      boolean boolean0 = coordinatesFormat0.isValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      // Undeclared exception!
      try { 
        coordinatesFormat0.setDecimalPoint("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // () cannot be the decimal point in coordinates.
         //
         verifyException("com.galdosinc.glib.gml.coord.CoordinatesFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      // Undeclared exception!
      try { 
        coordinatesFormat0.setTupleSeparator("mi");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // (mi) cannot be the coordinate tuple separator in coordinates.
         //
         verifyException("com.galdosinc.glib.gml.coord.CoordinatesFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      String string0 = coordinatesFormat0.getCoordinateSeparator();
      assertEquals(" ", coordinatesFormat0.getTupleSeparator());
      assertEquals(",", string0);
      assertEquals(Integer.MAX_VALUE, coordinatesFormat0.getMaxDecimalDigits());
      assertEquals(".", coordinatesFormat0.getDecimalPoint());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      String string0 = coordinatesFormat0.getTupleSeparator();
      assertEquals(" ", string0);
      assertEquals(Integer.MAX_VALUE, coordinatesFormat0.getMaxDecimalDigits());
      assertEquals(".", coordinatesFormat0.getDecimalPoint());
      assertEquals(",", coordinatesFormat0.getCoordinateSeparator());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = CoordinatesFormat.getDefaultDecimalPoint();
      assertEquals(".", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat();
      String string0 = coordinatesFormat0.getDecimalPoint();
      assertEquals(".", string0);
      assertEquals(Integer.MAX_VALUE, coordinatesFormat0.getMaxDecimalDigits());
      assertEquals(" ", coordinatesFormat0.getTupleSeparator());
      assertEquals(",", coordinatesFormat0.getCoordinateSeparator());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = CoordinatesFormat.getDefaultCoordinateSeparator();
      assertEquals(",", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CoordinatesFormat coordinatesFormat0 = new CoordinatesFormat(".", "", "", 0);
      int int0 = coordinatesFormat0.getMaxDecimalDigits();
      assertEquals("", coordinatesFormat0.getTupleSeparator());
      assertEquals(0, int0);
      assertEquals(".", coordinatesFormat0.getCoordinateSeparator());
      assertEquals("", coordinatesFormat0.getDecimalPoint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = CoordinatesFormat.getDefaultTupleSeparator();
      assertEquals(" ", string0);
  }
}
