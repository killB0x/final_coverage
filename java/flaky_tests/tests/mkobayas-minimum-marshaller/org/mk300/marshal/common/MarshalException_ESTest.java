/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 14:00:22 GMT 2022
 */

package org.mk300.marshal.common;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;
import org.mk300.marshal.common.MarshalException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MarshalException_ESTest extends MarshalException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MarshalException marshalException0 = new MarshalException("org.mk300.marshal.common.MarshalException");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("org.mk300.marshal.common.MarshalException");
      MarshalException marshalException0 = new MarshalException(mockThrowable0);
      MarshalException marshalException1 = new MarshalException("org.mk300.marshal.common.MarshalException", marshalException0);
      assertFalse(marshalException1.equals((Object)marshalException0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MarshalException marshalException0 = new MarshalException();
  }
}
