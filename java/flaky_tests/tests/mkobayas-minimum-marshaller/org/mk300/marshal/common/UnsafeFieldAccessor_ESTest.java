/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:49:41 GMT 2022
 */

package org.mk300.marshal.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Field;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mk300.marshal.common.UnsafeFieldAccessor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnsafeFieldAccessor_ESTest extends UnsafeFieldAccessor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Field[] fieldArray0 = new Field[9];
      // Undeclared exception!
      try { 
        UnsafeFieldAccessor.convert(fieldArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Field[] fieldArray0 = new Field[0];
      UnsafeFieldAccessor[] unsafeFieldAccessorArray0 = UnsafeFieldAccessor.convert(fieldArray0);
      assertEquals(0, unsafeFieldAccessorArray0.length);
  }
}
