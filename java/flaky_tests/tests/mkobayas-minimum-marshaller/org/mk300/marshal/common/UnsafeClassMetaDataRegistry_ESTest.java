/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:23:55 GMT 2022
 */

package org.mk300.marshal.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mk300.marshal.common.UnsafeClassMetaDataRegistry;
import org.mk300.marshal.common.UnsafeFieldAccessor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnsafeClassMetaDataRegistry_ESTest extends UnsafeClassMetaDataRegistry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        UnsafeClassMetaDataRegistry.getFieldList((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<UnsafeFieldAccessor> class0 = UnsafeFieldAccessor.class;
      UnsafeFieldAccessor[] unsafeFieldAccessorArray0 = UnsafeClassMetaDataRegistry.getFieldList(class0);
      assertEquals(3, unsafeFieldAccessorArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UnsafeClassMetaDataRegistry unsafeClassMetaDataRegistry0 = new UnsafeClassMetaDataRegistry();
  }
}
