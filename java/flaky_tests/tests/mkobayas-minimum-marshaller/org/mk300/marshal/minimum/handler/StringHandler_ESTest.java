/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:50:45 GMT 2022
 */

package org.mk300.marshal.minimum.handler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mk300.marshal.minimum.handler.StringHandler;
import org.mk300.marshal.minimum.io.OInput;
import org.mk300.marshal.minimum.io.OInputImpl;
import org.mk300.marshal.minimum.io.OOutput;
import org.mk300.marshal.minimum.io.OOutputImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringHandler_ESTest extends StringHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringHandler stringHandler0 = new StringHandler();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)1;
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<String> class0 = String.class;
      String string0 = stringHandler0.readObject(oInputImpl0, class0);
      assertEquals("\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringHandler stringHandler0 = new StringHandler();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<String> class0 = String.class;
      String string0 = stringHandler0.readObject(oInputImpl0, class0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringHandler stringHandler0 = new StringHandler();
      // Undeclared exception!
      try { 
        stringHandler0.writeObject((OOutput) null, "writeReplace");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mk300.marshal.minimum.handler.StringHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringHandler stringHandler0 = new StringHandler();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-59);
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        stringHandler0.readObject(oInputImpl0, class0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringHandler stringHandler0 = new StringHandler();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        stringHandler0.readObject((OInput) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mk300.marshal.minimum.handler.StringHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StringHandler stringHandler0 = new StringHandler();
      byte[] byteArray0 = new byte[2];
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<String> class0 = String.class;
      stringHandler0.readObject(oInputImpl0, class0);
      stringHandler0.readObject(oInputImpl0, class0);
      // Undeclared exception!
      try { 
        stringHandler0.readObject(oInputImpl0, class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2 out of bounds for length 2
         //
         verifyException("org.mk300.marshal.minimum.io.OInputImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StringHandler stringHandler0 = new StringHandler();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<String> class0 = String.class;
      try { 
        stringHandler0.readObject(oInputImpl0, class0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unkwown marker(String). mark=-1
         //
         verifyException("org.mk300.marshal.minimum.io.OInputImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StringHandler stringHandler0 = new StringHandler();
      OOutputImpl oOutputImpl0 = new OOutputImpl(0);
      stringHandler0.writeObject((OOutput) oOutputImpl0, "");
      assertEquals(1, oOutputImpl0.size());
  }
}
