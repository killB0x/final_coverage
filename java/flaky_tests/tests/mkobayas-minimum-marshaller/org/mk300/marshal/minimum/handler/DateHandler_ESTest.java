/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:54:12 GMT 2022
 */

package org.mk300.marshal.minimum.handler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;
import org.mk300.marshal.minimum.handler.DateHandler;
import org.mk300.marshal.minimum.io.OInput;
import org.mk300.marshal.minimum.io.OInputImpl;
import org.mk300.marshal.minimum.io.OOutput;
import org.mk300.marshal.minimum.io.OOutputImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DateHandler_ESTest extends DateHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateHandler dateHandler0 = new DateHandler();
      OOutputImpl oOutputImpl0 = new OOutputImpl(2697);
      MockDate mockDate0 = new MockDate(3, 3, 3, 2990, 0, 2990);
      dateHandler0.writeObject((OOutput) oOutputImpl0, (Date) mockDate0);
      assertEquals("Wed Aug 05 14:49:50 GMT 1903", mockDate0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DateHandler dateHandler0 = new DateHandler();
      Class<Date> class0 = Date.class;
      // Undeclared exception!
      try { 
        dateHandler0.readObject((OInput) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mk300.marshal.minimum.handler.DateHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DateHandler dateHandler0 = new DateHandler();
      byte[] byteArray0 = new byte[0];
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<Date> class0 = Date.class;
      // Undeclared exception!
      try { 
        dateHandler0.readObject(oInputImpl0, class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.mk300.marshal.minimum.io.OInputImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DateHandler dateHandler0 = new DateHandler();
      byte[] byteArray0 = new byte[9];
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<Date> class0 = Date.class;
      Date date0 = dateHandler0.readObject(oInputImpl0, class0);
      assertEquals("Thu Jan 01 00:00:00 GMT 1970", date0.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DateHandler dateHandler0 = new DateHandler();
      MockDate mockDate0 = new MockDate(0);
      // Undeclared exception!
      try { 
        dateHandler0.writeObject((OOutput) null, (Date) mockDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mk300.marshal.minimum.handler.DateHandler", e);
      }
  }
}
