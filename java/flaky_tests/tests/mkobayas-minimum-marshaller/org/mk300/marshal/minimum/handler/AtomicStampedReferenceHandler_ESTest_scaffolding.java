/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Nov 11 13:59:31 GMT 2022
 */

package org.mk300.marshal.minimum.handler;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class AtomicStampedReferenceHandler_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.mk300.marshal.minimum.handler.AtomicStampedReferenceHandler"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AtomicStampedReferenceHandler_ESTest_scaffolding.class.getClassLoader() ,
      "org.mk300.marshal.minimum.handler.EnumMapHandler",
      "org.mk300.marshal.minimum.handler.LinkedBlockingQueueHandler",
      "org.mk300.marshal.minimum.registry.ShortHMap",
      "org.mk300.marshal.minimum.registry.ConfigReader",
      "org.mk300.marshal.minimum.handler.ConcurrentSkipListMapHandler",
      "org.mk300.marshal.minimum.io.OInputImpl",
      "org.mk300.marshal.minimum.handler.LinkedBlockingDequeHandler",
      "org.mk300.marshal.minimum.handler.SqlDateHandler",
      "org.mk300.marshal.minimum.handler.StringHandler",
      "org.mk300.marshal.minimum.handler.SqlTimestampHandler",
      "org.mk300.marshal.minimum.handler.EnumSetHandler",
      "org.mk300.marshal.minimum.handler.BigIntegerHandler",
      "org.mk300.marshal.minimum.MarshalHandler",
      "org.mk300.marshal.minimum.io.OInput",
      "org.mk300.marshal.minimum.handler.BigDecimalHandler",
      "org.mk300.marshal.minimum.handler.AtomicReferenceHandler",
      "org.mk300.marshal.minimum.handler.PrimitiveArrayHandler",
      "org.mk300.marshal.minimum.registry.ShortCMap",
      "org.mk300.marshal.minimum.handler.DateHandler",
      "org.mk300.marshal.minimum.handler.SynchronousQueueHandler",
      "org.mk300.marshal.minimum.handler.PrimitiveWrapperHandler",
      "org.mk300.marshal.minimum.handler.PriorityQueueHandler",
      "org.mk300.marshal.common.InfiniteLoopException",
      "org.mk300.marshal.minimum.handler.AtomicBooleanHandler",
      "org.mk300.marshal.minimum.handler.StringArrayHandler",
      "org.mk300.marshal.minimum.handler.ArrayListHandler",
      "org.mk300.marshal.minimum.handler.AtomicIntegerHandler",
      "org.mk300.marshal.minimum.handler.CollectionHandler",
      "org.mk300.marshal.minimum.handler.PriorityBlockingQueueHandler",
      "org.mk300.marshal.minimum.handler.MapHandler",
      "org.mk300.marshal.minimum.handler.ClassHandler",
      "org.mk300.marshal.minimum.registry.HandlerRegistry",
      "org.mk300.marshal.minimum.handler.AtomicLongArrayHandler",
      "org.mk300.marshal.minimum.handler.SqlTimeHandler",
      "org.mk300.marshal.minimum.registry.ConfigElement",
      "org.mk300.marshal.minimum.handler.GenericArrayHandler",
      "org.mk300.marshal.minimum.handler.ObjectHandler",
      "org.mk300.marshal.minimum.handler.GenericEnumHandler",
      "org.mk300.marshal.minimum.handler.ObjectArrayHandler",
      "org.mk300.marshal.minimum.handler.AtomicStampedReferenceHandler",
      "org.mk300.marshal.minimum.handler.AtomicIntegerArrayHandler",
      "org.mk300.marshal.minimum.io.OOutputImpl",
      "org.mk300.marshal.minimum.io.OOutput",
      "org.mk300.marshal.minimum.handler.ArrayBlockingQueueHandler",
      "org.mk300.marshal.minimum.handler.TreeMapHandler",
      "org.mk300.marshal.minimum.handler.AtomicLongHandler",
      "org.mk300.marshal.minimum.handler.ConcurrentSkipListSetHandler",
      "org.mk300.marshal.minimum.handler.LinkedHashMapHandler",
      "org.mk300.marshal.common.MarshalException",
      "org.mk300.marshal.minimum.handler.AtomicReferenceArrayHandler",
      "org.mk300.marshal.minimum.handler.TreeSetHandler"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AtomicStampedReferenceHandler_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.mk300.marshal.minimum.handler.AtomicStampedReferenceHandler",
      "org.mk300.marshal.minimum.handler.ObjectHandler",
      "org.mk300.marshal.minimum.handler.GenericArrayHandler",
      "org.mk300.marshal.minimum.io.OOutputImpl",
      "org.mk300.marshal.minimum.io.OInputImpl",
      "org.mk300.marshal.minimum.registry.ShortHMap",
      "org.mk300.marshal.minimum.registry.ShortCMap",
      "org.mk300.marshal.minimum.registry.ConfigReader",
      "org.mk300.marshal.minimum.registry.ConfigElement",
      "org.mk300.marshal.minimum.handler.GenericEnumHandler",
      "org.mk300.marshal.minimum.handler.StringHandler",
      "org.mk300.marshal.minimum.handler.DateHandler",
      "org.mk300.marshal.minimum.handler.BigDecimalHandler",
      "org.mk300.marshal.minimum.handler.BigIntegerHandler",
      "org.mk300.marshal.minimum.handler.SqlDateHandler",
      "org.mk300.marshal.minimum.handler.SqlTimeHandler",
      "org.mk300.marshal.minimum.handler.SqlTimestampHandler",
      "org.mk300.marshal.minimum.handler.AtomicIntegerHandler",
      "org.mk300.marshal.minimum.handler.AtomicLongHandler",
      "org.mk300.marshal.minimum.handler.AtomicBooleanHandler",
      "org.mk300.marshal.minimum.handler.AtomicReferenceHandler",
      "org.mk300.marshal.minimum.handler.AtomicIntegerArrayHandler",
      "org.mk300.marshal.minimum.handler.AtomicLongArrayHandler",
      "org.mk300.marshal.minimum.handler.AtomicReferenceArrayHandler",
      "org.mk300.marshal.minimum.handler.ArrayListHandler",
      "org.mk300.marshal.minimum.handler.CollectionHandler",
      "org.mk300.marshal.minimum.handler.TreeSetHandler",
      "org.mk300.marshal.minimum.handler.ConcurrentSkipListSetHandler",
      "org.mk300.marshal.minimum.handler.ArrayBlockingQueueHandler",
      "org.mk300.marshal.minimum.handler.LinkedBlockingDequeHandler",
      "org.mk300.marshal.minimum.handler.LinkedBlockingQueueHandler",
      "org.mk300.marshal.minimum.handler.PriorityQueueHandler",
      "org.mk300.marshal.minimum.handler.PriorityBlockingQueueHandler",
      "org.mk300.marshal.minimum.handler.SynchronousQueueHandler",
      "org.mk300.marshal.minimum.handler.EnumSetHandler",
      "org.mk300.marshal.minimum.handler.EnumMapHandler",
      "org.mk300.marshal.minimum.handler.MapHandler",
      "org.mk300.marshal.minimum.handler.LinkedHashMapHandler",
      "org.mk300.marshal.minimum.handler.TreeMapHandler",
      "org.mk300.marshal.minimum.handler.ConcurrentSkipListMapHandler",
      "org.mk300.marshal.minimum.handler.PrimitiveWrapperHandler",
      "org.mk300.marshal.minimum.handler.PrimitiveArrayHandler",
      "org.mk300.marshal.minimum.handler.ObjectArrayHandler",
      "org.mk300.marshal.minimum.handler.StringArrayHandler",
      "org.mk300.marshal.minimum.handler.ClassHandler",
      "org.mk300.marshal.minimum.registry.HandlerRegistry"
    );
  }
}
