/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:58:01 GMT 2022
 */

package org.mk300.marshal.minimum.registry;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mk300.marshal.minimum.registry.ConfigElement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConfigElement_ESTest extends ConfigElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConfigElement configElement0 = new ConfigElement();
      configElement0.setId((short)1055);
      short short0 = configElement0.getId();
      assertEquals((short)1055, short0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConfigElement configElement0 = new ConfigElement();
      configElement0.setId((short) (-145));
      short short0 = configElement0.getId();
      assertEquals((short) (-145), short0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConfigElement configElement0 = new ConfigElement();
      configElement0.setHandlerName("2guKu");
      String string0 = configElement0.getHandlerName();
      assertEquals("2guKu", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConfigElement configElement0 = new ConfigElement();
      configElement0.setClassName("74-mW82uY;");
      String string0 = configElement0.getClassName();
      assertEquals("74-mW82uY;", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ConfigElement configElement0 = new ConfigElement();
      configElement0.setClassName("");
      String string0 = configElement0.getClassName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ConfigElement configElement0 = new ConfigElement();
      String string0 = configElement0.getHandlerName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ConfigElement configElement0 = new ConfigElement();
      short short0 = configElement0.getId();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ConfigElement configElement0 = new ConfigElement();
      String string0 = configElement0.getClassName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ConfigElement configElement0 = new ConfigElement();
      configElement0.setHandlerName("");
      String string0 = configElement0.getHandlerName();
      assertEquals("", string0);
  }
}
