/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 14:00:11 GMT 2022
 */

package org.mk300.marshal.minimum.handler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.atomic.AtomicLong;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mk300.marshal.minimum.handler.AtomicLongHandler;
import org.mk300.marshal.minimum.io.OInput;
import org.mk300.marshal.minimum.io.OInputImpl;
import org.mk300.marshal.minimum.io.OOutput;
import org.mk300.marshal.minimum.io.OOutputImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AtomicLongHandler_ESTest extends AtomicLongHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AtomicLongHandler atomicLongHandler0 = new AtomicLongHandler();
      byte[] byteArray0 = new byte[8];
      byteArray0[6] = (byte) (-66);
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<AtomicLong> class0 = AtomicLong.class;
      AtomicLong atomicLong0 = atomicLongHandler0.readObject(oInputImpl0, class0);
      assertEquals(48640.0, atomicLong0.doubleValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AtomicLongHandler atomicLongHandler0 = new AtomicLongHandler();
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-35);
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<AtomicLong> class0 = AtomicLong.class;
      AtomicLong atomicLong0 = atomicLongHandler0.readObject(oInputImpl0, class0);
      assertEquals(3707764736L, atomicLong0.longValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AtomicLongHandler atomicLongHandler0 = new AtomicLongHandler();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-108);
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<AtomicLong> class0 = AtomicLong.class;
      AtomicLong atomicLong0 = atomicLongHandler0.readObject(oInputImpl0, class0);
      assertEquals((-7.7822201560962171E18), atomicLong0.doubleValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AtomicLongHandler atomicLongHandler0 = new AtomicLongHandler();
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte)47;
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<AtomicLong> class0 = AtomicLong.class;
      AtomicLong atomicLong0 = atomicLongHandler0.readObject(oInputImpl0, class0);
      assertEquals(47.0, atomicLong0.doubleValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AtomicLongHandler atomicLongHandler0 = new AtomicLongHandler();
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte) (-36);
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<AtomicLong> class0 = AtomicLong.class;
      AtomicLong atomicLong0 = atomicLongHandler0.readObject(oInputImpl0, class0);
      assertEquals(220.0F, atomicLong0.floatValue(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AtomicLongHandler atomicLongHandler0 = new AtomicLongHandler();
      AtomicLong atomicLong0 = new AtomicLong((-1437L));
      // Undeclared exception!
      try { 
        atomicLongHandler0.writeObject((OOutput) null, atomicLong0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mk300.marshal.minimum.handler.AtomicLongHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AtomicLongHandler atomicLongHandler0 = new AtomicLongHandler();
      Class<AtomicLong> class0 = AtomicLong.class;
      // Undeclared exception!
      try { 
        atomicLongHandler0.readObject((OInput) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mk300.marshal.minimum.handler.AtomicLongHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AtomicLongHandler atomicLongHandler0 = new AtomicLongHandler();
      byte[] byteArray0 = new byte[0];
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<AtomicLong> class0 = AtomicLong.class;
      // Undeclared exception!
      try { 
        atomicLongHandler0.readObject(oInputImpl0, class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.mk300.marshal.minimum.io.OInputImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AtomicLongHandler atomicLongHandler0 = new AtomicLongHandler();
      OOutputImpl oOutputImpl0 = new OOutputImpl(628);
      AtomicLong atomicLong0 = new AtomicLong(2061L);
      atomicLongHandler0.writeObject((OOutput) oOutputImpl0, atomicLong0);
      assertEquals((byte)13, atomicLong0.byteValue());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      AtomicLongHandler atomicLongHandler0 = new AtomicLongHandler();
      byte[] byteArray0 = new byte[9];
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<AtomicLong> class0 = AtomicLong.class;
      AtomicLong atomicLong0 = atomicLongHandler0.readObject(oInputImpl0, class0);
      assertEquals(0.0F, atomicLong0.floatValue(), 0.01F);
  }
}
