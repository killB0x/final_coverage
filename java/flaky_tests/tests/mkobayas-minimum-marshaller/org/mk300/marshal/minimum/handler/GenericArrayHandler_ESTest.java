/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:40:22 GMT 2022
 */

package org.mk300.marshal.minimum.handler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mk300.marshal.minimum.handler.GenericArrayHandler;
import org.mk300.marshal.minimum.io.OInputImpl;
import org.mk300.marshal.minimum.io.OOutput;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GenericArrayHandler_ESTest extends GenericArrayHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GenericArrayHandler genericArrayHandler0 = new GenericArrayHandler();
      byte[] byteArray0 = new byte[3];
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        genericArrayHandler0.readObject(oInputImpl0, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GenericArrayHandler genericArrayHandler0 = new GenericArrayHandler();
      // Undeclared exception!
      try { 
        genericArrayHandler0.writeObject((OOutput) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GenericArrayHandler genericArrayHandler0 = new GenericArrayHandler();
      // Undeclared exception!
      try { 
        genericArrayHandler0.writeObject((OOutput) null, genericArrayHandler0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument is not an array
         //
         verifyException("java.lang.reflect.Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GenericArrayHandler genericArrayHandler0 = new GenericArrayHandler();
      byte[] byteArray0 = new byte[0];
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        genericArrayHandler0.readObject(oInputImpl0, class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.mk300.marshal.minimum.io.OInputImpl", e);
      }
  }
}
