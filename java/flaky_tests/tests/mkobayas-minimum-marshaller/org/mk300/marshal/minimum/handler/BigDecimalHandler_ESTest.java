/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 13:52:52 GMT 2022
 */

package org.mk300.marshal.minimum.handler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.UTFDataFormatException;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.MathContext;
import java.math.RoundingMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mk300.marshal.minimum.handler.BigDecimalHandler;
import org.mk300.marshal.minimum.io.OInputImpl;
import org.mk300.marshal.minimum.io.OOutput;
import org.mk300.marshal.minimum.io.OOutputImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BigDecimalHandler_ESTest extends BigDecimalHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BigDecimalHandler bigDecimalHandler0 = new BigDecimalHandler();
      OOutputImpl oOutputImpl0 = new OOutputImpl(3829);
      // Undeclared exception!
      try { 
        bigDecimalHandler0.writeObject((OOutput) oOutputImpl0, (BigDecimal) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mk300.marshal.minimum.handler.BigDecimalHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BigDecimalHandler bigDecimalHandler0 = new BigDecimalHandler();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-125);
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<BigDecimal> class0 = BigDecimal.class;
      // Undeclared exception!
      try { 
        bigDecimalHandler0.readObject(oInputImpl0, class0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BigDecimalHandler bigDecimalHandler0 = new BigDecimalHandler();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)56;
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<BigDecimal> class0 = BigDecimal.class;
      // Undeclared exception!
      bigDecimalHandler0.readObject(oInputImpl0, class0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BigDecimalHandler bigDecimalHandler0 = new BigDecimalHandler();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<BigDecimal> class0 = BigDecimal.class;
      // Undeclared exception!
      try { 
        bigDecimalHandler0.readObject(oInputImpl0, class0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BigDecimalHandler bigDecimalHandler0 = new BigDecimalHandler();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-99);
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<BigDecimal> class0 = BigDecimal.class;
      // Undeclared exception!
      try { 
        bigDecimalHandler0.readObject(oInputImpl0, class0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1660944384
         //
         verifyException("org.mk300.marshal.minimum.io.OInputImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<BigDecimal> class0 = BigDecimal.class;
      BigDecimalHandler bigDecimalHandler0 = new BigDecimalHandler();
      // Undeclared exception!
      try { 
        bigDecimalHandler0.readObject(oInputImpl0, class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.mk300.marshal.minimum.io.OInputImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BigDecimalHandler bigDecimalHandler0 = new BigDecimalHandler();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)1;
      byteArray0[5] = (byte) (-70);
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<BigDecimal> class0 = BigDecimal.class;
      try { 
        bigDecimalHandler0.readObject(oInputImpl0, class0);
        fail("Expecting exception: UTFDataFormatException");
      
      } catch(UTFDataFormatException e) {
         //
         // malformed input around byte 5
         //
         verifyException("org.mk300.marshal.minimum.io.OInputImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BigDecimalHandler bigDecimalHandler0 = new BigDecimalHandler();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-6);
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<BigDecimal> class0 = BigDecimal.class;
      try { 
        bigDecimalHandler0.readObject(oInputImpl0, class0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unkwown marker(String). mark=-6
         //
         verifyException("org.mk300.marshal.minimum.io.OInputImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      BigDecimalHandler bigDecimalHandler0 = new BigDecimalHandler();
      byte[] byteArray0 = new byte[9];
      OInputImpl oInputImpl0 = new OInputImpl(byteArray0);
      Class<BigDecimal> class0 = BigDecimal.class;
      // Undeclared exception!
      try { 
        bigDecimalHandler0.readObject(oInputImpl0, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      BigDecimalHandler bigDecimalHandler0 = new BigDecimalHandler();
      OOutputImpl oOutputImpl0 = new OOutputImpl(15);
      BigInteger bigInteger0 = BigInteger.TEN;
      RoundingMode roundingMode0 = RoundingMode.FLOOR;
      MathContext mathContext0 = new MathContext(15, roundingMode0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, mathContext0);
      bigDecimalHandler0.writeObject((OOutput) oOutputImpl0, bigDecimal0);
      assertEquals((byte)10, bigDecimal0.byteValue());
  }
}
