/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 23:48:39 GMT 2022
 */

package com.hubspot.jinjava.tree.parse;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.tree.parse.LenientWhitespaceControlParser;
import com.hubspot.jinjava.tree.parse.WhitespaceControlParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LenientWhitespaceControlParser_ESTest extends LenientWhitespaceControlParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LenientWhitespaceControlParser lenientWhitespaceControlParser0 = (LenientWhitespaceControlParser)WhitespaceControlParser.LENIENT;
      String string0 = lenientWhitespaceControlParser0.stripRight("com.hubspot.jinjava.tree.parse.WhitespaceControlParser");
      assertEquals("com.hubspot.jinjava.tree.parse.WhitespaceControlParse", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LenientWhitespaceControlParser lenientWhitespaceControlParser0 = new LenientWhitespaceControlParser();
      String string0 = lenientWhitespaceControlParser0.stripRight("-");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LenientWhitespaceControlParser lenientWhitespaceControlParser0 = new LenientWhitespaceControlParser();
      String string0 = lenientWhitespaceControlParser0.stripLeft("Y");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LenientWhitespaceControlParser lenientWhitespaceControlParser0 = (LenientWhitespaceControlParser)WhitespaceControlParser.LENIENT;
      boolean boolean0 = lenientWhitespaceControlParser0.hasRightTrim("com.hubspot.jinjava.tree.parse.LenientWhitespaceControlParser");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LenientWhitespaceControlParser lenientWhitespaceControlParser0 = new LenientWhitespaceControlParser();
      boolean boolean0 = lenientWhitespaceControlParser0.hasLeftTrim("j W}F'RLr");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LenientWhitespaceControlParser lenientWhitespaceControlParser0 = new LenientWhitespaceControlParser();
      // Undeclared exception!
      try { 
        lenientWhitespaceControlParser0.stripRight((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.util.WhitespaceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LenientWhitespaceControlParser lenientWhitespaceControlParser0 = new LenientWhitespaceControlParser();
      // Undeclared exception!
      try { 
        lenientWhitespaceControlParser0.stripLeft("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LenientWhitespaceControlParser lenientWhitespaceControlParser0 = new LenientWhitespaceControlParser();
      // Undeclared exception!
      try { 
        lenientWhitespaceControlParser0.stripLeft((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.util.WhitespaceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LenientWhitespaceControlParser lenientWhitespaceControlParser0 = new LenientWhitespaceControlParser();
      String string0 = lenientWhitespaceControlParser0.stripLeft("QGLpK*");
      assertEquals("GLpK*", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LenientWhitespaceControlParser lenientWhitespaceControlParser0 = new LenientWhitespaceControlParser();
      boolean boolean0 = lenientWhitespaceControlParser0.hasLeftTrim("-c*'mn!A28,0 -\";`");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LenientWhitespaceControlParser lenientWhitespaceControlParser0 = new LenientWhitespaceControlParser();
      boolean boolean0 = lenientWhitespaceControlParser0.hasRightTrim("-");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LenientWhitespaceControlParser lenientWhitespaceControlParser0 = (LenientWhitespaceControlParser)WhitespaceControlParser.LENIENT;
      // Undeclared exception!
      try { 
        lenientWhitespaceControlParser0.stripRight("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
