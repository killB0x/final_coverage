/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 22:12:32 GMT 2022
 */

package com.hubspot.jinjava.tree;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.interpret.JinjavaInterpreter;
import com.hubspot.jinjava.tree.Node;
import com.hubspot.jinjava.tree.RootNode;
import com.hubspot.jinjava.tree.TextNode;
import com.hubspot.jinjava.tree.parse.DefaultTokenScannerSymbols;
import com.hubspot.jinjava.tree.parse.TextToken;
import com.hubspot.jinjava.tree.parse.TokenScannerSymbols;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      RootNode rootNode0 = new RootNode(defaultTokenScannerSymbols0);
      RootNode rootNode1 = new RootNode(defaultTokenScannerSymbols0);
      rootNode0.setParent(rootNode1);
      assertEquals(0, rootNode1.getStartPosition());
      assertEquals(0, rootNode1.getLineNumber());
      assertEquals(0, rootNode0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      TextToken textToken0 = new TextToken("5lk)PpMoM)]>3h5)=~5", 0, 0, defaultTokenScannerSymbols0);
      TextNode textNode0 = new TextNode(textToken0);
      textNode0.reconstructImage();
      assertEquals(0, textNode0.getLineNumber());
      assertEquals(0, textNode0.getStartPosition());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextToken textToken0 = new TextToken("", 431, 431, (TokenScannerSymbols) null);
      TextNode textNode0 = new TextNode(textToken0);
      textNode0.reconstructImage();
      assertEquals(431, textNode0.getStartPosition());
      assertEquals(431, textNode0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RootNode rootNode0 = new RootNode((TokenScannerSymbols) null);
      rootNode0.getSymbols();
      assertEquals(0, rootNode0.getLineNumber());
      assertEquals(0, rootNode0.getStartPosition());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      TextToken textToken0 = new TextToken("|~6j", 10, 10, defaultTokenScannerSymbols0);
      TextNode textNode0 = new TextNode(textToken0);
      int int0 = textNode0.getStartPosition();
      assertEquals(10, textNode0.getLineNumber());
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      RootNode rootNode0 = new RootNode(defaultTokenScannerSymbols0);
      rootNode0.getName();
      assertEquals(0, rootNode0.getLineNumber());
      assertEquals(0, rootNode0.getStartPosition());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      RootNode rootNode0 = new RootNode(defaultTokenScannerSymbols0);
      rootNode0.getMaster();
      assertEquals(0, rootNode0.getLineNumber());
      assertEquals(0, rootNode0.getStartPosition());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      TextToken textToken0 = new TextToken("vzo", 10, 30, defaultTokenScannerSymbols0);
      TextNode textNode0 = new TextNode(textToken0);
      textToken0.setLeftTrim(true);
      textNode0.getMaster();
      assertEquals(10, textNode0.getLineNumber());
      assertEquals(30, textNode0.getStartPosition());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      TextToken textToken0 = new TextToken("vzo", 10, 0, defaultTokenScannerSymbols0);
      TextNode textNode0 = new TextNode(textToken0);
      textNode0.getMaster();
      assertEquals(10, textNode0.getLineNumber());
      assertEquals(0, textNode0.getStartPosition());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      TextToken textToken0 = new TextToken("", 0, 4, defaultTokenScannerSymbols0);
      TextNode textNode0 = new TextNode(textToken0);
      textNode0.getMaster();
      assertEquals(0, textNode0.getLineNumber());
      assertEquals(4, textNode0.getStartPosition());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      TextToken textToken0 = new TextToken("xRbW/.D`'?+=I!D(U", (-2464), (-2464), defaultTokenScannerSymbols0);
      TextNode textNode0 = new TextNode(textToken0);
      textNode0.getMaster();
      assertEquals((-2464), textNode0.getLineNumber());
      assertEquals((-2464), textNode0.getStartPosition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      TextToken textToken0 = new TextToken("", 1664, 0, defaultTokenScannerSymbols0);
      TextNode textNode0 = new TextNode(textToken0);
      int int0 = textNode0.getLineNumber();
      assertEquals(0, textNode0.getStartPosition());
      assertEquals(1664, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      TextToken textToken0 = new TextToken("xRbW/.D`'?+=I!D(U", (-2464), (-2464), defaultTokenScannerSymbols0);
      TextNode textNode0 = new TextNode(textToken0);
      int int0 = textNode0.getLineNumber();
      assertEquals((-2464), int0);
      assertEquals((-2464), textNode0.getStartPosition());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      RootNode rootNode0 = new RootNode(defaultTokenScannerSymbols0);
      rootNode0.setChildren((LinkedList<Node>) null);
      rootNode0.getChildren();
      assertEquals(0, rootNode0.getLineNumber());
      assertEquals(0, rootNode0.getStartPosition());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      RootNode rootNode0 = new RootNode(defaultTokenScannerSymbols0);
      // Undeclared exception!
      try { 
        rootNode0.toTreeString(1099);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.hubspot.jinjava.tree.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      RootNode rootNode0 = new RootNode(defaultTokenScannerSymbols0);
      // Undeclared exception!
      try { 
        rootNode0.render((JinjavaInterpreter) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Please render RootNode by interpreter
         //
         verifyException("com.hubspot.jinjava.tree.RootNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      TextToken textToken0 = new TextToken("Encountered a deferred value: ", (-1), (-1), defaultTokenScannerSymbols0);
      TextNode textNode0 = new TextNode(textToken0);
      // Undeclared exception!
      try { 
        textNode0.render((JinjavaInterpreter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.tree.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      RootNode rootNode0 = new RootNode(defaultTokenScannerSymbols0);
      // Undeclared exception!
      try { 
        rootNode0.reconstructImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.tree.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      TextToken textToken0 = new TextToken("5lk)PpMoM)]>3h5)=~5", 0, 0, defaultTokenScannerSymbols0);
      TextNode textNode0 = new TextNode(textToken0);
      textNode0.checkForInterrupt();
      assertEquals(0, textNode0.getLineNumber());
      assertEquals(0, textNode0.getStartPosition());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      RootNode rootNode0 = new RootNode(defaultTokenScannerSymbols0);
      // Undeclared exception!
      try { 
        rootNode0.preProcess((JinjavaInterpreter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.tree.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      RootNode rootNode0 = new RootNode(defaultTokenScannerSymbols0);
      rootNode0.getChildren();
      assertEquals(0, rootNode0.getStartPosition());
      assertEquals(0, rootNode0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TextToken textToken0 = new TextToken((String) null, 0, 0, (TokenScannerSymbols) null);
      TextNode textNode0 = new TextNode(textToken0);
      // Undeclared exception!
      try { 
        textNode0.toTreeString();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.hubspot.jinjava.tree.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      RootNode rootNode0 = new RootNode(defaultTokenScannerSymbols0);
      int int0 = rootNode0.getLineNumber();
      assertEquals(0, rootNode0.getStartPosition());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      RootNode rootNode0 = new RootNode(defaultTokenScannerSymbols0);
      rootNode0.setParent(rootNode0);
      Node node0 = rootNode0.getParent();
      assertEquals(0, node0.getStartPosition());
      assertEquals(0, node0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      RootNode rootNode0 = new RootNode(defaultTokenScannerSymbols0);
      int int0 = rootNode0.getStartPosition();
      assertEquals(0, int0);
      assertEquals(0, rootNode0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      TextToken textToken0 = new TextToken("xRbW/.D`'?+=I!D(U", (-2464), (-2464), defaultTokenScannerSymbols0);
      TextNode textNode0 = new TextNode(textToken0);
      textNode0.getParent();
      assertEquals((-2464), textNode0.getLineNumber());
      assertEquals((-2464), textNode0.getStartPosition());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      TextToken textToken0 = new TextToken((String) null, 4253, 1688, defaultTokenScannerSymbols0);
      TextNode textNode0 = new TextNode(textToken0);
      textNode0.getSymbols();
      assertEquals(1688, textNode0.getStartPosition());
      assertEquals(4253, textNode0.getLineNumber());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TextToken textToken0 = new TextToken((String) null, 0, 0, (TokenScannerSymbols) null);
      TextNode textNode0 = new TextNode(textToken0);
      textNode0.reconstructImage();
      assertEquals(0, textNode0.getStartPosition());
      assertEquals(0, textNode0.getLineNumber());
  }
}
