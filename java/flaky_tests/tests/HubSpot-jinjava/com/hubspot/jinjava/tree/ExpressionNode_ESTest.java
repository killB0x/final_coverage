/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 23:13:14 GMT 2022
 */

package com.hubspot.jinjava.tree;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.interpret.JinjavaInterpreter;
import com.hubspot.jinjava.lib.expression.DefaultExpressionStrategy;
import com.hubspot.jinjava.lib.expression.EagerExpressionStrategy;
import com.hubspot.jinjava.tree.ExpressionNode;
import com.hubspot.jinjava.tree.parse.ExpressionToken;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExpressionNode_ESTest extends ExpressionNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExpressionToken expressionToken0 = mock(ExpressionToken.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(expressionToken0).toString();
      doReturn((-971)).when(expressionToken0).getLineNumber();
      doReturn(1).when(expressionToken0).getStartPosition();
      ExpressionNode expressionNode0 = new ExpressionNode(expressionToken0);
      String string0 = expressionNode0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExpressionToken expressionToken0 = mock(ExpressionToken.class, new ViolatedAssumptionAnswer());
      doReturn("").when(expressionToken0).toString();
      doReturn((-971)).when(expressionToken0).getLineNumber();
      doReturn(1).when(expressionToken0).getStartPosition();
      ExpressionNode expressionNode0 = new ExpressionNode(expressionToken0);
      String string0 = expressionNode0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExpressionNode expressionNode0 = null;
      try {
        expressionNode0 = new ExpressionNode((ExpressionToken) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.tree.ExpressionNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultExpressionStrategy defaultExpressionStrategy0 = new DefaultExpressionStrategy();
      ExpressionNode expressionNode0 = null;
      try {
        expressionNode0 = new ExpressionNode(defaultExpressionStrategy0, (ExpressionToken) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.tree.ExpressionNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ExpressionToken expressionToken0 = mock(ExpressionToken.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(expressionToken0).toString();
      doReturn((-889)).when(expressionToken0).getLineNumber();
      doReturn((-889)).when(expressionToken0).getStartPosition();
      ExpressionNode expressionNode0 = new ExpressionNode(expressionToken0);
      String string0 = expressionNode0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ExpressionToken expressionToken0 = mock(ExpressionToken.class, new ViolatedAssumptionAnswer());
      doReturn((-889)).when(expressionToken0).getLineNumber();
      doReturn((-889)).when(expressionToken0).getStartPosition();
      ExpressionNode expressionNode0 = new ExpressionNode(expressionToken0);
      // Undeclared exception!
      try { 
        expressionNode0.render((JinjavaInterpreter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.tree.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ExpressionToken expressionToken0 = mock(ExpressionToken.class, new ViolatedAssumptionAnswer());
      doReturn((-889)).when(expressionToken0).getLineNumber();
      doReturn((-889)).when(expressionToken0).getStartPosition();
      EagerExpressionStrategy eagerExpressionStrategy0 = new EagerExpressionStrategy();
      ExpressionNode expressionNode0 = new ExpressionNode(eagerExpressionStrategy0, expressionToken0);
      assertNull(expressionNode0.reconstructImage());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ExpressionToken expressionToken0 = mock(ExpressionToken.class, new ViolatedAssumptionAnswer());
      doReturn((-889)).when(expressionToken0).getLineNumber();
      doReturn((-889)).when(expressionToken0).getStartPosition();
      ExpressionNode expressionNode0 = new ExpressionNode(expressionToken0);
      String string0 = expressionNode0.getName();
      assertEquals("ExpressionNode", string0);
  }
}
