/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 21:53:34 GMT 2022
 */

package com.hubspot.jinjava.tree.parse;

import org.junit.Test;
import static org.junit.Assert.*;
import com.hubspot.jinjava.tree.parse.DefaultTokenScannerSymbols;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokenScannerSymbols_ESTest extends TokenScannerSymbols_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      char char0 = defaultTokenScannerSymbols0.getTrimChar();
      assertEquals('-', char0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_TRIM_CHAR = '3';
      char char0 = defaultTokenScannerSymbols0.getTrimChar();
      assertEquals('3', char0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_TRIM_CHAR = 'V';
      char char0 = defaultTokenScannerSymbols0.getTrimChar();
      assertEquals('V', char0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_TRIM_CHAR = '\u0000';
      int int0 = defaultTokenScannerSymbols0.getTrim();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      char char0 = defaultTokenScannerSymbols0.getTagChar();
      assertEquals('%', char0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_TAG_CHAR = '3';
      char char0 = defaultTokenScannerSymbols0.getTagChar();
      assertEquals('3', char0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_TAG_CHAR = 'x';
      char char0 = defaultTokenScannerSymbols0.getTagChar();
      assertEquals('x', char0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_TAG_CHAR = '\u0000';
      int int0 = defaultTokenScannerSymbols0.getTag();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      char char0 = defaultTokenScannerSymbols0.getPrefixChar();
      assertEquals('{', char0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_PREFIX_CHAR = '6';
      char char0 = defaultTokenScannerSymbols0.getPrefixChar();
      assertEquals('6', char0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_PREFIX_CHAR = 'n';
      char char0 = defaultTokenScannerSymbols0.getPrefixChar();
      assertEquals('n', char0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_PREFIX_CHAR = '\u0000';
      int int0 = defaultTokenScannerSymbols0.getPrefix();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      char char0 = defaultTokenScannerSymbols0.getPostfixChar();
      assertEquals('}', char0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_POSTFIX_CHAR = '9';
      char char0 = defaultTokenScannerSymbols0.getPostfixChar();
      assertEquals('9', char0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_POSTFIX_CHAR = 'G';
      char char0 = defaultTokenScannerSymbols0.getPostfixChar();
      assertEquals('G', char0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_POSTFIX_CHAR = '\u0000';
      int int0 = defaultTokenScannerSymbols0.getPostfix();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      char char0 = defaultTokenScannerSymbols0.getNoteChar();
      assertEquals('#', char0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_NOTE_CHAR = '3';
      char char0 = defaultTokenScannerSymbols0.getNoteChar();
      assertEquals('3', char0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_NOTE_CHAR = 'K';
      char char0 = defaultTokenScannerSymbols0.getNoteChar();
      assertEquals('K', char0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_NOTE_CHAR = '\u0000';
      int int0 = defaultTokenScannerSymbols0.getNote();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      char char0 = defaultTokenScannerSymbols0.getNewlineChar();
      assertEquals('\n', char0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_NEWLINE_CHAR = '0';
      char char0 = defaultTokenScannerSymbols0.getNewlineChar();
      assertEquals('0', char0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_NEWLINE_CHAR = 'G';
      char char0 = defaultTokenScannerSymbols0.getNewlineChar();
      assertEquals('G', char0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_NEWLINE_CHAR = '\u0000';
      int int0 = defaultTokenScannerSymbols0.getNewline();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      char char0 = defaultTokenScannerSymbols0.getFixedChar();
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_FIXED_CHAR = '8';
      char char0 = defaultTokenScannerSymbols0.getFixedChar();
      assertEquals('8', char0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_FIXED_CHAR = '1';
      defaultTokenScannerSymbols0.TOKEN_FIXED_CHAR = 'h';
      char char0 = defaultTokenScannerSymbols0.getFixedChar();
      assertEquals('h', char0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_FIXED_CHAR = 'd';
      int int0 = defaultTokenScannerSymbols0.getFixed();
      assertEquals(100, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      char char0 = defaultTokenScannerSymbols0.getExprStartChar();
      assertEquals('{', char0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_EXPR_START_CHAR = '2';
      char char0 = defaultTokenScannerSymbols0.getExprStartChar();
      assertEquals('2', char0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_EXPR_START_CHAR = '<';
      defaultTokenScannerSymbols0.TOKEN_EXPR_START_CHAR = 'i';
      char char0 = defaultTokenScannerSymbols0.getExprStartChar();
      assertEquals('i', char0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_EXPR_START_CHAR = '\u0000';
      int int0 = defaultTokenScannerSymbols0.getExprStart();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      char char0 = defaultTokenScannerSymbols0.getExprEndChar();
      assertEquals('}', char0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_EXPR_END_CHAR = '7';
      char char0 = defaultTokenScannerSymbols0.getExprEndChar();
      assertEquals('7', char0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_EXPR_END_CHAR = 'w';
      char char0 = defaultTokenScannerSymbols0.getExprEndChar();
      assertEquals('w', char0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.TOKEN_EXPR_END_CHAR = '\u0000';
      int int0 = defaultTokenScannerSymbols0.getExprEnd();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.getClosingComment();
      String string0 = defaultTokenScannerSymbols0.getClosingComment();
      assertEquals("#}", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.getExpressionEndWithTag();
      String string0 = defaultTokenScannerSymbols0.getExpressionEndWithTag();
      assertEquals("%}", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.getExpressionStartWithTag();
      String string0 = defaultTokenScannerSymbols0.getExpressionStartWithTag();
      assertEquals("{%", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.getExpressionEnd();
      String string0 = defaultTokenScannerSymbols0.getExpressionEnd();
      assertEquals("}}", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      defaultTokenScannerSymbols0.getExpressionStart();
      String string0 = defaultTokenScannerSymbols0.getExpressionStart();
      assertEquals("{{", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      int int0 = defaultTokenScannerSymbols0.getExprEnd();
      assertEquals(125, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      int int0 = defaultTokenScannerSymbols0.getTag();
      assertEquals(37, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      int int0 = defaultTokenScannerSymbols0.getExprStart();
      assertEquals(123, int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      int int0 = defaultTokenScannerSymbols0.getPostfix();
      assertEquals(125, int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      int int0 = defaultTokenScannerSymbols0.getNewline();
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      int int0 = defaultTokenScannerSymbols0.getTrim();
      assertEquals(45, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      int int0 = defaultTokenScannerSymbols0.getNote();
      assertEquals(35, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      int int0 = defaultTokenScannerSymbols0.getFixed();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultTokenScannerSymbols defaultTokenScannerSymbols0 = new DefaultTokenScannerSymbols();
      int int0 = defaultTokenScannerSymbols0.getPrefix();
      assertEquals(123, int0);
  }
}
