/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 22:18:14 GMT 2022
 */

package com.hubspot.jinjava.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.util.LengthLimitingStringBuilder;
import java.util.stream.IntStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LengthLimitingStringBuilder_ESTest extends LengthLimitingStringBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder(1L);
      lengthLimitingStringBuilder0.append("2");
      String string0 = lengthLimitingStringBuilder0.toString();
      assertEquals("2", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder(1486L);
      CharSequence charSequence0 = lengthLimitingStringBuilder0.subSequence(0, 0);
      assertEquals("", charSequence0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder(1143L);
      Object object0 = new Object();
      lengthLimitingStringBuilder0.append(object0);
      CharSequence charSequence0 = lengthLimitingStringBuilder0.subSequence(1, 2);
      assertEquals("a", charSequence0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder(1486L);
      IntStream intStream0 = lengthLimitingStringBuilder0.codePoints();
      lengthLimitingStringBuilder0.append((Object) intStream0);
      int int0 = lengthLimitingStringBuilder0.length();
      assertEquals(41, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder(4189L);
      lengthLimitingStringBuilder0.append("$97hNN&S)*}&[er");
      char char0 = lengthLimitingStringBuilder0.charAt(0);
      assertEquals('$', char0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder(4189L);
      lengthLimitingStringBuilder0.append("$97hNN&S)*}&[er");
      char char0 = lengthLimitingStringBuilder0.charAt(2);
      assertEquals('7', char0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder(0L);
      lengthLimitingStringBuilder0.append("WXNR3|l%e-n}B.");
      char char0 = lengthLimitingStringBuilder0.charAt(0);
      assertEquals('W', char0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder((-652L));
      lengthLimitingStringBuilder0.append("");
      assertEquals("", lengthLimitingStringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder(4L);
      // Undeclared exception!
      try { 
        lengthLimitingStringBuilder0.append("com.hubspot.jinjava.util.LengthLimitingStringBuilder");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 52 byte output rendered, over limit of 4 bytes
         //
         verifyException("com.hubspot.jinjava.util.LengthLimitingStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder(1L);
      lengthLimitingStringBuilder0.append("2");
      // Undeclared exception!
      try { 
        lengthLimitingStringBuilder0.append((Object) "2");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 2 byte output rendered, over limit of 1 bytes
         //
         verifyException("com.hubspot.jinjava.util.LengthLimitingStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder(4189L);
      lengthLimitingStringBuilder0.append((String) null);
      assertEquals("", lengthLimitingStringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder(4189L);
      IntStream intStream0 = lengthLimitingStringBuilder0.chars();
      assertNotNull(intStream0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder(4189L);
      int int0 = lengthLimitingStringBuilder0.length();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder(1143L);
      // Undeclared exception!
      try { 
        lengthLimitingStringBuilder0.subSequence(1, 2);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // start 1, end 2, length 0
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder(1143L);
      String string0 = lengthLimitingStringBuilder0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LengthLimitingStringBuilder lengthLimitingStringBuilder0 = new LengthLimitingStringBuilder(4189L);
      // Undeclared exception!
      try { 
        lengthLimitingStringBuilder0.charAt(0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
