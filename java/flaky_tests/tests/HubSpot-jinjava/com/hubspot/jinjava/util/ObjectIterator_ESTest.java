/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 21:09:12 GMT 2022
 */

package com.hubspot.jinjava.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.util.ForLoop;
import com.hubspot.jinjava.util.ObjectIterator;
import java.sql.ClientInfoStatus;
import java.sql.SQLNonTransientConnectionException;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ObjectIterator_ESTest extends ObjectIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        ObjectIterator.getLoop(object0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Iterators
         //
         verifyException("com.hubspot.jinjava.util.ObjectIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException();
      ForLoop forLoop0 = ObjectIterator.getLoop(sQLNonTransientConnectionException0);
      assertEquals(0, forLoop0.getCounter());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<String, ClientInfoStatus> hashMap0 = new HashMap<String, ClientInfoStatus>();
      // Undeclared exception!
      try { 
        ObjectIterator.getLoop(hashMap0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/fasterxml/jackson/core/PrettyPrinter
         //
         verifyException("com.hubspot.jinjava.util.ObjectIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ForLoop forLoop0 = ObjectIterator.getLoop((Object) null);
      ObjectIterator.getLoop(forLoop0);
      assertEquals(0, forLoop0.getLength());
  }
}
