/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 22:11:23 GMT 2022
 */

package com.hubspot.jinjava.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.util.LengthLimitingStringJoiner;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LengthLimitingStringJoiner_ESTest extends LengthLimitingStringJoiner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      LengthLimitingStringJoiner lengthLimitingStringJoiner0 = new LengthLimitingStringJoiner((-3078L), charBuffer0);
      LengthLimitingStringJoiner lengthLimitingStringJoiner1 = lengthLimitingStringJoiner0.add((CharSequence) charBuffer0);
      String string0 = lengthLimitingStringJoiner1.toString();
      assertEquals("\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      LengthLimitingStringJoiner lengthLimitingStringJoiner0 = new LengthLimitingStringJoiner(4054L, charBuffer0);
      Object object0 = new Object();
      lengthLimitingStringJoiner0.add(object0);
      int int0 = lengthLimitingStringJoiner0.length();
      assertEquals(25, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      LengthLimitingStringJoiner lengthLimitingStringJoiner0 = new LengthLimitingStringJoiner(0, charBuffer0);
      // Undeclared exception!
      try { 
        lengthLimitingStringJoiner0.add((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.util.LengthLimitingStringJoiner", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(28);
      LengthLimitingStringJoiner lengthLimitingStringJoiner0 = new LengthLimitingStringJoiner(2401L, charBuffer0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.put('*');
      // Undeclared exception!
      try { 
        lengthLimitingStringJoiner0.add((CharSequence) charBuffer1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LengthLimitingStringJoiner lengthLimitingStringJoiner0 = null;
      try {
        lengthLimitingStringJoiner0 = new LengthLimitingStringJoiner(1463L, (CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The delimiter must not be null
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer0.get(charArray0);
      LengthLimitingStringJoiner lengthLimitingStringJoiner0 = null;
      try {
        lengthLimitingStringJoiner0 = new LengthLimitingStringJoiner((-948L), charBuffer1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      LengthLimitingStringJoiner lengthLimitingStringJoiner0 = new LengthLimitingStringJoiner(1L, charBuffer0);
      // Undeclared exception!
      try { 
        lengthLimitingStringJoiner0.add((CharSequence) charBuffer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 3 byte output rendered, over limit of 1 bytes
         //
         verifyException("com.hubspot.jinjava.util.LengthLimitingStringJoiner", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      LengthLimitingStringJoiner lengthLimitingStringJoiner0 = new LengthLimitingStringJoiner(4054L, charBuffer0);
      Object object0 = new Object();
      LengthLimitingStringJoiner lengthLimitingStringJoiner1 = lengthLimitingStringJoiner0.add(object0);
      LengthLimitingStringJoiner lengthLimitingStringJoiner2 = lengthLimitingStringJoiner1.add((CharSequence) charBuffer0);
      assertSame(lengthLimitingStringJoiner2, lengthLimitingStringJoiner0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      LengthLimitingStringJoiner lengthLimitingStringJoiner0 = new LengthLimitingStringJoiner(70L, charBuffer0);
      String string0 = lengthLimitingStringJoiner0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      LengthLimitingStringJoiner lengthLimitingStringJoiner0 = new LengthLimitingStringJoiner(0, charBuffer0);
      LengthLimitingStringJoiner lengthLimitingStringJoiner1 = lengthLimitingStringJoiner0.add((CharSequence) charBuffer0);
      assertSame(lengthLimitingStringJoiner0, lengthLimitingStringJoiner1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(32);
      LengthLimitingStringJoiner lengthLimitingStringJoiner0 = new LengthLimitingStringJoiner(32, charBuffer0);
      LengthLimitingStringJoiner lengthLimitingStringJoiner1 = lengthLimitingStringJoiner0.add((Object) charBuffer0);
      // Undeclared exception!
      try { 
        lengthLimitingStringJoiner1.add((Object) lengthLimitingStringJoiner0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 96 byte output rendered, over limit of 32 bytes
         //
         verifyException("com.hubspot.jinjava.util.LengthLimitingStringJoiner", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      LengthLimitingStringJoiner lengthLimitingStringJoiner0 = new LengthLimitingStringJoiner(0, charBuffer0);
      int int0 = lengthLimitingStringJoiner0.length();
      assertEquals(0, int0);
  }
}
