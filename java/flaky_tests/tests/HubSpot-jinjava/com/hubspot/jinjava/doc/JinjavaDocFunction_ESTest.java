/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 23:51:32 GMT 2022
 */

package com.hubspot.jinjava.doc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.doc.JinjavaDocFunction;
import com.hubspot.jinjava.doc.JinjavaDocParam;
import com.hubspot.jinjava.doc.JinjavaDocSnippet;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JinjavaDocFunction_ESTest extends JinjavaDocFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[2];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[1];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocFunction jinjavaDocFunction0 = null;
      try {
        jinjavaDocFunction0 = new JinjavaDocFunction("", "T9`I&i", "v#cQ", false, jinjavaDocParamArray0, (JinjavaDocParam[]) null, jinjavaDocSnippetArray0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.doc.JinjavaDocItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[1];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[2];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocFunction jinjavaDocFunction0 = new JinjavaDocFunction("uV&Qx:!8l", "uV&Qx:!8l", "com.hubspot.jinjava.doc.JinjavaDocParam", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      assertEquals("com.hubspot.jinjava.doc.JinjavaDocParam", jinjavaDocFunction0.getAliasOf());
  }
}
