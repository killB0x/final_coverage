/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 23:37:42 GMT 2022
 */

package com.hubspot.jinjava.doc;

import org.junit.Test;
import static org.junit.Assert.*;
import com.hubspot.jinjava.doc.JinjavaDocExpTest;
import com.hubspot.jinjava.doc.JinjavaDocFilter;
import com.hubspot.jinjava.doc.JinjavaDocFunction;
import com.hubspot.jinjava.doc.JinjavaDocParam;
import com.hubspot.jinjava.doc.JinjavaDocSnippet;
import com.hubspot.jinjava.doc.JinjavaDocTag;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JinjavaDocItem_ESTest extends JinjavaDocItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[3];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[1];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocFilter jinjavaDocFilter0 = new JinjavaDocFilter("", "", "5-E8Ipa(A9z?fv", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      JinjavaDocParam[] jinjavaDocParamArray1 = jinjavaDocFilter0.getInputs();
      JinjavaDocTag jinjavaDocTag0 = new JinjavaDocTag("", false, "", "", false, jinjavaDocParamArray0, jinjavaDocParamArray1, jinjavaDocSnippetArray0, hashMap0);
      assertFalse(jinjavaDocTag0.isDeprecated());
      assertEquals("", jinjavaDocFilter0.getDesc());
      assertEquals("5-E8Ipa(A9z?fv", jinjavaDocFilter0.getAliasOf());
      assertEquals("", jinjavaDocFilter0.getName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[1];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[21];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocExpTest jinjavaDocExpTest0 = new JinjavaDocExpTest((String) null, (String) null, "", true, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      boolean boolean0 = jinjavaDocExpTest0.isDeprecated();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[0];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[0];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocTag jinjavaDocTag0 = new JinjavaDocTag("+@+z i", true, "+@+z i", "ST@iV.L*x@ZK$Ydz", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      jinjavaDocTag0.getSnippets();
      assertEquals("+@+z i", jinjavaDocTag0.getName());
      assertEquals("ST@iV.L*x@ZK$Ydz", jinjavaDocTag0.getAliasOf());
      assertEquals("+@+z i", jinjavaDocTag0.getDesc());
      assertFalse(jinjavaDocTag0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[3];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[1];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocTag jinjavaDocTag0 = new JinjavaDocTag("", false, "", "", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      jinjavaDocTag0.getParams();
      assertFalse(jinjavaDocTag0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[0];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[0];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocTag jinjavaDocTag0 = new JinjavaDocTag("+@+z i", true, "+@+z i", "ST@iV.L*x@ZK$Ydz", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      String string0 = jinjavaDocTag0.getName();
      assertEquals("+@+z i", string0);
      assertEquals("+@+z i", jinjavaDocTag0.getDesc());
      assertEquals("ST@iV.L*x@ZK$Ydz", jinjavaDocTag0.getAliasOf());
      assertFalse(jinjavaDocTag0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[9];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[0];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocExpTest jinjavaDocExpTest0 = new JinjavaDocExpTest("", "com.hubspot.jinjava.doc.JinjavaDocParam", "com.hubspot.jinjava.doc.JinjavaDocItem", true, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      String string0 = jinjavaDocExpTest0.getName();
      assertTrue(jinjavaDocExpTest0.isDeprecated());
      assertEquals("", string0);
      assertEquals("com.hubspot.jinjava.doc.JinjavaDocItem", jinjavaDocExpTest0.getAliasOf());
      assertEquals("com.hubspot.jinjava.doc.JinjavaDocParam", jinjavaDocExpTest0.getDesc());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[4];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[2];
      JinjavaDocFunction jinjavaDocFunction0 = new JinjavaDocFunction((String) null, "SEvc", "com.hubspot.jinjava.doc.JinjavaDocItem", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, (Map<String, String>) null);
      jinjavaDocFunction0.getMeta();
      assertFalse(jinjavaDocFunction0.isDeprecated());
      assertEquals("SEvc", jinjavaDocFunction0.getDesc());
      assertEquals("com.hubspot.jinjava.doc.JinjavaDocItem", jinjavaDocFunction0.getAliasOf());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[4];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[2];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("B/,mK10B4]|o_E.>-", "");
      JinjavaDocFilter jinjavaDocFilter0 = new JinjavaDocFilter("", "com.hubspot.jinjava.doc.JinjavaDocItem", "bWX}WnZj'.", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      jinjavaDocFilter0.getMeta();
      assertEquals("com.hubspot.jinjava.doc.JinjavaDocItem", jinjavaDocFilter0.getDesc());
      assertFalse(jinjavaDocFilter0.isDeprecated());
      assertEquals("", jinjavaDocFilter0.getName());
      assertEquals("bWX}WnZj'.", jinjavaDocFilter0.getAliasOf());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[0];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[0];
      JinjavaDocExpTest jinjavaDocExpTest0 = new JinjavaDocExpTest("/1N@WV[| /G@*{aJ", "/1N@WV[| /G@*{aJ", "/1N@WV[| /G@*{aJ", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      jinjavaDocExpTest0.getInputs();
      assertFalse(jinjavaDocExpTest0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[3];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[2];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocExpTest jinjavaDocExpTest0 = new JinjavaDocExpTest(" bXHm) =tM|$w2QX", (String) null, (String) null, false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      String string0 = jinjavaDocExpTest0.getDesc();
      assertNull(string0);
      assertFalse(jinjavaDocExpTest0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[3];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[1];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocTag jinjavaDocTag0 = new JinjavaDocTag("", false, "", "", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      jinjavaDocTag0.getDesc();
      assertFalse(jinjavaDocTag0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[1];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[3];
      JinjavaDocExpTest jinjavaDocExpTest0 = new JinjavaDocExpTest("Xc5:)`_i@'m_X", "Xc5:)`_i@'m_X", "Xc5:)`_i@'m_X", true, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, (Map<String, String>) null);
      jinjavaDocExpTest0.getAliasOf();
      assertTrue(jinjavaDocExpTest0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[3];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[1];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocTag jinjavaDocTag0 = new JinjavaDocTag("", false, "", "", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      jinjavaDocTag0.getAliasOf();
      assertFalse(jinjavaDocTag0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[4];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[2];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocFilter jinjavaDocFilter0 = new JinjavaDocFilter("", "com.hubspot.jinjava.doc.JinjavaDocItem", "bWX}WnZj'.", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      jinjavaDocFilter0.getMeta();
      assertEquals("com.hubspot.jinjava.doc.JinjavaDocItem", jinjavaDocFilter0.getDesc());
      assertFalse(jinjavaDocFilter0.isDeprecated());
      assertEquals("", jinjavaDocFilter0.getName());
      assertEquals("bWX}WnZj'.", jinjavaDocFilter0.getAliasOf());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[0];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[0];
      JinjavaDocExpTest jinjavaDocExpTest0 = new JinjavaDocExpTest("/1N@WV[| /G@*{aJ", "/1N@WV[| /G@*{aJ", "/1N@WV[| /G@*{aJ", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      jinjavaDocExpTest0.getParams();
      assertFalse(jinjavaDocExpTest0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[4];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[2];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocTag jinjavaDocTag0 = new JinjavaDocTag("UnA", false, "[VkxEw}@f|$?:v", "[VkxEw}@f|$?:v", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      jinjavaDocTag0.getSnippets();
      assertFalse(jinjavaDocTag0.isDeprecated());
      assertEquals("[VkxEw}@f|$?:v", jinjavaDocTag0.getDesc());
      assertEquals("UnA", jinjavaDocTag0.getName());
      assertEquals("[VkxEw}@f|$?:v", jinjavaDocTag0.getAliasOf());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[1];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[21];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocFilter jinjavaDocFilter0 = new JinjavaDocFilter("", "{", (String) null, true, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      String string0 = jinjavaDocFilter0.getAliasOf();
      assertEquals("", jinjavaDocFilter0.getName());
      assertNull(string0);
      assertEquals("{", jinjavaDocFilter0.getDesc());
      assertTrue(jinjavaDocFilter0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[4];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[2];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocTag jinjavaDocTag0 = new JinjavaDocTag("UnA", false, "[VkxEw}@f|$?:v", "[VkxEw}@f|$?:v", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      boolean boolean0 = jinjavaDocTag0.isDeprecated();
      assertEquals("UnA", jinjavaDocTag0.getName());
      assertFalse(boolean0);
      assertEquals("[VkxEw}@f|$?:v", jinjavaDocTag0.getAliasOf());
      assertEquals("[VkxEw}@f|$?:v", jinjavaDocTag0.getDesc());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[4];
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[2];
      JinjavaDocFunction jinjavaDocFunction0 = new JinjavaDocFunction((String) null, "SEvc", "com.hubspot.jinjava.doc.JinjavaDocItem", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, (Map<String, String>) null);
      String string0 = jinjavaDocFunction0.getName();
      assertEquals("SEvc", jinjavaDocFunction0.getDesc());
      assertNull(string0);
      assertEquals("com.hubspot.jinjava.doc.JinjavaDocItem", jinjavaDocFunction0.getAliasOf());
      assertFalse(jinjavaDocFunction0.isDeprecated());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JinjavaDocSnippet[] jinjavaDocSnippetArray0 = new JinjavaDocSnippet[0];
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      JinjavaDocParam[] jinjavaDocParamArray0 = new JinjavaDocParam[0];
      JinjavaDocExpTest jinjavaDocExpTest0 = new JinjavaDocExpTest("/1N@WV[| /G@*{aJ", "/1N@WV[| /G@*{aJ", "/1N@WV[| /G@*{aJ", false, jinjavaDocParamArray0, jinjavaDocParamArray0, jinjavaDocSnippetArray0, hashMap0);
      jinjavaDocExpTest0.getDesc();
      assertFalse(jinjavaDocExpTest0.isDeprecated());
  }
}
