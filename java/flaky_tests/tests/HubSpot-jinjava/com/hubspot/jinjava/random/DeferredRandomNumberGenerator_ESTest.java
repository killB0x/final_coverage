/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 23:18:43 GMT 2022
 */

package com.hubspot.jinjava.random;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.random.DeferredRandomNumberGenerator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DeferredRandomNumberGenerator_ESTest extends DeferredRandomNumberGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.nextLong();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Generating random number
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.longs((-3317L), (-3317L), (-3317L));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.ints((-4366L), (-194), (-194));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.nextGaussian();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Generating random number
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.nextFloat();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Generating random number
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.longs(0L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.nextBoolean();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Generating random number
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.nextBytes(byteArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.doubles(1227L, (double) 1227L, (double) 1227L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.longs();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.doubles(1251L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.next(1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Generating random number
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.doubles();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.nextInt();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Generating random number
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.longs((-2396L), (-2396L));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.ints(1L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.nextInt((-594));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Generating random number
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.nextDouble();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Generating random number
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.doubles(0.0, 0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.ints(34, 34);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DeferredRandomNumberGenerator deferredRandomNumberGenerator0 = new DeferredRandomNumberGenerator();
      // Undeclared exception!
      try { 
        deferredRandomNumberGenerator0.ints();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.random.DeferredRandomNumberGenerator", e);
      }
  }
}
