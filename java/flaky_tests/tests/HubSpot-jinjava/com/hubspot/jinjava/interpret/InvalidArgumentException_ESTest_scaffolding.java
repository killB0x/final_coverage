/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Oct 31 22:15:59 GMT 2022
 */

package com.hubspot.jinjava.interpret;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class InvalidArgumentException_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.hubspot.jinjava.interpret.InvalidArgumentException"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "ANSI_X3.4-1968"); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(InvalidArgumentException_ESTest_scaffolding.class.getClassLoader() ,
      "com.hubspot.jinjava.lib.exptest.ExpTest",
      "com.hubspot.jinjava.objects.serialization.PyishSerializable",
      "com.hubspot.jinjava.objects.PyWrapper",
      "com.hubspot.jinjava.doc.annotations.JinjavaParam",
      "com.hubspot.jinjava.doc.annotations.JinjavaDoc",
      "com.hubspot.jinjava.interpret.InvalidReason",
      "com.hubspot.jinjava.doc.annotations.JinjavaMetaValue",
      "com.hubspot.jinjava.lib.exptest.IsDefinedExpTest",
      "com.hubspot.jinjava.lib.filter.Base64DecodeFilter",
      "com.hubspot.jinjava.lib.filter.Filter",
      "com.hubspot.jinjava.doc.annotations.JinjavaSnippet",
      "com.hubspot.jinjava.lib.Importable",
      "com.hubspot.jinjava.interpret.InvalidArgumentException",
      "com.hubspot.jinjava.objects.SafeString",
      "com.hubspot.jinjava.interpret.JinjavaInterpreter"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(InvalidArgumentException_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.hubspot.jinjava.interpret.InvalidArgumentException",
      "com.hubspot.jinjava.lib.filter.DateTimeFormatFilter",
      "com.hubspot.jinjava.lib.fn.Functions",
      "com.hubspot.jinjava.lib.filter.RootFilter",
      "com.hubspot.jinjava.lib.filter.SelectFilter",
      "com.hubspot.jinjava.lib.filter.LowerFilter",
      "com.hubspot.jinjava.lib.exptest.IsDefinedExpTest",
      "com.hubspot.jinjava.lib.filter.CutFilter",
      "com.hubspot.jinjava.objects.SafeString",
      "com.hubspot.jinjava.lib.tag.DoTag",
      "com.hubspot.jinjava.lib.filter.UrlEncodeFilter",
      "com.hubspot.jinjava.interpret.InterpretException",
      "com.hubspot.jinjava.interpret.TemplateSyntaxException",
      "com.hubspot.jinjava.lib.filter.ForceEscapeFilter",
      "com.hubspot.jinjava.lib.exptest.IsIntegerExpTest",
      "com.hubspot.jinjava.lib.filter.AddFilter",
      "com.hubspot.jinjava.interpret.InvalidInputException",
      "com.hubspot.jinjava.lib.exptest.IsStringExpTest",
      "com.hubspot.jinjava.lib.exptest.IsUndefinedExpTest",
      "com.hubspot.jinjava.lib.tag.FromTag",
      "com.hubspot.jinjava.lib.filter.SliceFilter",
      "com.hubspot.jinjava.lib.filter.RejectFilter",
      "com.hubspot.jinjava.lib.filter.AttrFilter",
      "com.hubspot.jinjava.lib.filter.SplitFilter",
      "com.hubspot.jinjava.lib.tag.CallTag",
      "com.hubspot.jinjava.tree.parse.TokenScannerSymbols",
      "com.hubspot.jinjava.tree.parse.DefaultTokenScannerSymbols",
      "com.hubspot.jinjava.tree.parse.Token",
      "com.hubspot.jinjava.tree.parse.TagToken",
      "com.hubspot.jinjava.lib.tag.AutoEscapeTag",
      "com.hubspot.jinjava.lib.filter.MapFilter",
      "com.hubspot.jinjava.lib.filter.StripTagsFilter",
      "com.hubspot.jinjava.lib.tag.ImportTag",
      "com.hubspot.jinjava.lib.filter.StringFilter",
      "com.hubspot.jinjava.lib.filter.XmlAttrFilter",
      "com.hubspot.jinjava.lib.filter.Base64DecodeFilter",
      "com.hubspot.jinjava.lib.exptest.IsEvenExpTest",
      "com.hubspot.jinjava.lib.tag.SetTag",
      "com.hubspot.jinjava.lib.filter.SumFilter",
      "com.hubspot.jinjava.lib.filter.SortFilter",
      "com.hubspot.jinjava.lib.exptest.IsSequenceExpTest",
      "com.hubspot.jinjava.lib.exptest.IsIterableExpTest",
      "com.hubspot.jinjava.lib.exptest.IsBooleanExpTest",
      "com.hubspot.jinjava.lib.filter.ListFilter",
      "com.hubspot.jinjava.lib.filter.BaseDateFilter",
      "com.hubspot.jinjava.lib.filter.BetweenTimesFilter",
      "com.hubspot.jinjava.lib.filter.AbsFilter",
      "com.hubspot.jinjava.lib.tag.IfchangedTag",
      "com.hubspot.jinjava.lib.filter.AbstractFilter",
      "com.hubspot.jinjava.lib.filter.DefaultFilter",
      "com.hubspot.jinjava.lib.filter.MinusTimeFilter",
      "com.hubspot.jinjava.lib.filter.StringToTimeFilter",
      "com.hubspot.jinjava.lib.filter.DivisibleFilter",
      "com.hubspot.jinjava.lib.filter.SelectAttrFilter",
      "com.hubspot.jinjava.lib.filter.AbstractSetFilter",
      "com.hubspot.jinjava.lib.filter.IntersectFilter",
      "com.hubspot.jinjava.util.ObjectIterator",
      "com.hubspot.jinjava.util.ForLoop",
      "com.hubspot.jinjava.lib.filter.Base64EncodeFilter",
      "com.hubspot.jinjava.tree.output.RenderedOutputNode",
      "com.hubspot.jinjava.lib.filter.CenterFilter",
      "com.hubspot.jinjava.lib.filter.RandomFilter",
      "com.hubspot.jinjava.lib.filter.UniqueFilter",
      "com.hubspot.jinjava.lib.filter.BoolFilter",
      "com.hubspot.jinjava.lib.filter.IpAddrFilter",
      "com.hubspot.jinjava.lib.exptest.IsTrueExpTest",
      "com.hubspot.jinjava.lib.filter.DatetimeFilter",
      "com.hubspot.jinjava.lib.filter.UrlDecodeFilter",
      "com.hubspot.jinjava.lib.filter.LengthFilter",
      "com.hubspot.jinjava.lib.filter.CountFilter",
      "com.hubspot.jinjava.lib.filter.TruncateFilter",
      "com.hubspot.jinjava.lib.tag.ElseTag",
      "com.hubspot.jinjava.lib.exptest.IsUpperExpTest",
      "com.hubspot.jinjava.lib.filter.DictSortFilter",
      "com.hubspot.jinjava.lib.filter.JoinFilter",
      "com.hubspot.jinjava.lib.exptest.IsTruthyExpTest",
      "com.hubspot.jinjava.lib.filter.EscapeFilter",
      "com.hubspot.jinjava.lib.filter.FileSizeFormatFilter",
      "com.hubspot.jinjava.lib.tag.IfTag",
      "com.hubspot.jinjava.lib.tag.UnlessTag",
      "com.hubspot.jinjava.lib.filter.UrlizeFilter",
      "com.hubspot.jinjava.lib.filter.SymmetricDifferenceFilter",
      "com.hubspot.jinjava.lib.exptest.IsStringStartingWithExpTest",
      "com.hubspot.jinjava.lib.filter.FloatFilter",
      "com.hubspot.jinjava.lib.filter.UpperFilter",
      "com.hubspot.jinjava.lib.filter.CapitalizeFilter",
      "com.hubspot.jinjava.lib.filter.FromYamlFilter",
      "com.hubspot.jinjava.lib.exptest.IsNoneExpTest",
      "com.hubspot.jinjava.lib.filter.EscapeJsFilter",
      "com.hubspot.jinjava.lib.exptest.IsNumberExpTest",
      "com.hubspot.jinjava.lib.filter.PlusTimeFilter",
      "com.hubspot.jinjava.lib.filter.RejectAttrFilter",
      "com.hubspot.jinjava.lib.exptest.IsLowerExpTest",
      "com.hubspot.jinjava.lib.tag.IncludeTag",
      "com.hubspot.jinjava.lib.exptest.IsFalseExpTest",
      "com.hubspot.jinjava.lib.tag.PrintTag",
      "com.hubspot.jinjava.lib.filter.SafeFilter",
      "com.hubspot.jinjava.lib.filter.FormatFilter",
      "com.hubspot.jinjava.lib.fn.ELFunctionDefinition",
      "com.hubspot.jinjava.lib.exptest.IsSameAsExpTest",
      "com.hubspot.jinjava.lib.filter.FirstFilter",
      "com.hubspot.jinjava.lib.tag.CycleTag",
      "com.hubspot.jinjava.lib.filter.ReplaceFilter",
      "com.hubspot.jinjava.lib.tag.BlockTag",
      "com.hubspot.jinjava.lib.filter.TrimFilter",
      "com.hubspot.jinjava.lib.tag.ForTag",
      "com.hubspot.jinjava.lib.filter.DifferenceFilter",
      "com.hubspot.jinjava.lib.tag.ExtendsTag",
      "com.hubspot.jinjava.tree.Node",
      "com.hubspot.jinjava.tree.TagNode",
      "com.hubspot.jinjava.lib.filter.DAliasedDefaultFilter",
      "com.hubspot.jinjava.lib.tag.EndTag",
      "com.hubspot.jinjava.lib.filter.EscapeJsonFilter",
      "com.hubspot.jinjava.lib.exptest.IsMappingExpTest",
      "com.hubspot.jinjava.lib.filter.UnixTimestampFilter",
      "com.hubspot.jinjava.lib.filter.LogFilter",
      "com.hubspot.jinjava.lib.filter.WordWrapFilter",
      "com.hubspot.jinjava.lib.filter.EAliasedEscapeFilter",
      "com.hubspot.jinjava.lib.filter.IndentFilter",
      "com.hubspot.jinjava.lib.filter.RenderFilter",
      "com.hubspot.jinjava.lib.filter.BatchFilter",
      "com.hubspot.jinjava.lib.filter.EscapeJinjavaFilter",
      "com.hubspot.jinjava.lib.filter.ShuffleFilter",
      "com.hubspot.jinjava.lib.filter.RoundFilter",
      "com.hubspot.jinjava.lib.tag.MacroTag",
      "com.hubspot.jinjava.lib.filter.TitleFilter",
      "com.hubspot.jinjava.lib.tag.RawTag",
      "com.hubspot.jinjava.util.LengthLimitingStringBuilder",
      "com.hubspot.jinjava.lib.filter.PrettyPrintFilter",
      "com.hubspot.jinjava.lib.filter.ReverseFilter",
      "com.hubspot.jinjava.objects.date.StrftimeFormatter",
      "com.hubspot.jinjava.lib.filter.Md5Filter",
      "com.hubspot.jinjava.lib.filter.IntFilter",
      "com.hubspot.jinjava.lib.exptest.IsStringContainingExpTest",
      "com.hubspot.jinjava.lib.tag.ElseIfTag",
      "com.hubspot.jinjava.lib.exptest.IsOddExpTest",
      "com.hubspot.jinjava.lib.filter.StringToDateFilter",
      "com.hubspot.jinjava.lib.filter.LastFilter",
      "com.hubspot.jinjava.lib.filter.WordCountFilter",
      "com.hubspot.jinjava.lib.filter.UnionFilter",
      "com.hubspot.jinjava.lib.exptest.IsDivisibleByExpTest",
      "com.hubspot.jinjava.lib.filter.FromJsonFilter",
      "com.hubspot.jinjava.lib.exptest.IsFloatExpTest",
      "com.hubspot.jinjava.util.ObjectTruthValue",
      "com.hubspot.jinjava.lib.expression.DefaultExpressionStrategy",
      "com.hubspot.jinjava.tree.parse.ExpressionToken",
      "com.hubspot.jinjava.util.WhitespaceUtils",
      "com.hubspot.jinjava.interpret.DeferredValueException"
    );
  }
}
