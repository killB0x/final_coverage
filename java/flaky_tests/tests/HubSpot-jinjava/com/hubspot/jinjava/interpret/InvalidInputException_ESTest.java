/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 23:47:57 GMT 2022
 */

package com.hubspot.jinjava.interpret;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.interpret.InvalidInputException;
import com.hubspot.jinjava.interpret.InvalidReason;
import com.hubspot.jinjava.interpret.JinjavaInterpreter;
import com.hubspot.jinjava.lib.filter.MapFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InvalidInputException_ESTest extends InvalidInputException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InvalidInputException invalidInputException0 = null;
      try {
        invalidInputException0 = new InvalidInputException((JinjavaInterpreter) null, "0q0Yq!B", "0q0Yq!B");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.interpret.InvalidInputException", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InvalidReason invalidReason0 = InvalidReason.NUMBER_FORMAT;
      MapFilter mapFilter0 = new MapFilter();
      InvalidInputException invalidInputException0 = null;
      try {
        invalidInputException0 = new InvalidInputException((JinjavaInterpreter) null, mapFilter0, invalidReason0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.interpret.InvalidInputException", e);
      }
  }
}
