/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 22:55:19 GMT 2022
 */

package com.hubspot.jinjava.lib.tag;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.lib.tag.ElseIfTag;
import com.hubspot.jinjava.lib.tag.ElseTag;
import com.hubspot.jinjava.lib.tag.ExtendsTag;
import com.hubspot.jinjava.lib.tag.IfTag;
import com.hubspot.jinjava.lib.tag.RawTag;
import com.hubspot.jinjava.lib.tag.Tag;
import com.hubspot.jinjava.lib.tag.TagLibrary;
import java.lang.reflect.Array;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TagLibrary_ESTest extends TagLibrary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TagLibrary tagLibrary0 = new TagLibrary(false, (Set<String>) null);
      ElseIfTag elseIfTag0 = new ElseIfTag();
      tagLibrary0.register("", (Tag) elseIfTag0);
      Tag tag0 = tagLibrary0.getTag("");
      assertEquals("elif", tag0.getName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TagLibrary tagLibrary0 = new TagLibrary(false, (Set<String>) null);
      ExtendsTag extendsTag0 = new ExtendsTag();
      tagLibrary0.register("", (Tag) extendsTag0);
      Tag tag0 = tagLibrary0.getTag("");
      assertNull(tag0.getEndTagName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TagLibrary tagLibrary0 = new TagLibrary(false, (Set<String>) null);
      // Undeclared exception!
      try { 
        tagLibrary0.register((Tag) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.lib.SimpleLibrary", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TagLibrary tagLibrary0 = new TagLibrary(false, (Set<String>) null);
      // Undeclared exception!
      try { 
        tagLibrary0.addTag((Tag) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.lib.SimpleLibrary", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TagLibrary tagLibrary0 = null;
      try {
        tagLibrary0 = new TagLibrary(true, (Set<String>) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TagLibrary tagLibrary0 = new TagLibrary(false, (Set<String>) null);
      ElseTag elseTag0 = new ElseTag();
      tagLibrary0.register((Tag) elseTag0);
      assertTrue(elseTag0.isRenderedInValidationMode());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TagLibrary tagLibrary0 = new TagLibrary(false, (Set<String>) null);
      Class<RawTag>[] classArray0 = (Class<RawTag>[]) Array.newInstance(Class.class, 7);
      Class<RawTag> class0 = RawTag.class;
      classArray0[0] = class0;
      // Undeclared exception!
      try { 
        tagLibrary0.registerClasses(classArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Throwables
         //
         verifyException("com.hubspot.jinjava.lib.SimpleLibrary", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TagLibrary tagLibrary0 = new TagLibrary(false, (Set<String>) null);
      Tag tag0 = tagLibrary0.getTag("");
      assertNull(tag0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TagLibrary tagLibrary0 = new TagLibrary(false, (Set<String>) null);
      // Undeclared exception!
      try { 
        tagLibrary0.registerDefaults();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      TagLibrary tagLibrary0 = new TagLibrary(false, (Set<String>) null);
      IfTag ifTag0 = new IfTag();
      tagLibrary0.addTag(ifTag0);
      assertEquals("if", ifTag0.getName());
  }
}
