/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 22:02:51 GMT 2022
 */

package com.hubspot.jinjava.lib.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.interpret.JinjavaInterpreter;
import com.hubspot.jinjava.lib.filter.DivisibleFilter;
import com.hubspot.jinjava.objects.SafeString;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DivisibleFilter_ESTest extends DivisibleFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DivisibleFilter divisibleFilter0 = new DivisibleFilter();
      String[] stringArray0 = new String[11];
      stringArray0[0] = "23";
      Integer integer0 = new Integer((-17));
      Object object0 = divisibleFilter0.filter((Object) integer0, (JinjavaInterpreter) null, stringArray0);
      assertEquals(false, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DivisibleFilter divisibleFilter0 = new DivisibleFilter();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "23";
      Integer integer0 = new Integer(0);
      Object object0 = divisibleFilter0.filter((Object) integer0, (JinjavaInterpreter) null, stringArray0);
      assertEquals(true, object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DivisibleFilter divisibleFilter0 = new DivisibleFilter();
      Integer integer0 = new Integer(20);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "23";
      Object object0 = divisibleFilter0.filter((Object) integer0, (JinjavaInterpreter) null, stringArray0);
      assertEquals(false, object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DivisibleFilter divisibleFilter0 = new DivisibleFilter();
      String[] stringArray0 = new String[0];
      Integer integer0 = new Integer(582);
      // Undeclared exception!
      try { 
        divisibleFilter0.filter((Object) integer0, (JinjavaInterpreter) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.interpret.TemplateSyntaxException", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DivisibleFilter divisibleFilter0 = new DivisibleFilter();
      String[] stringArray0 = new String[8];
      SafeString safeString0 = new SafeString("j|82LDf^XM+;");
      Object object0 = divisibleFilter0.filter(safeString0, (JinjavaInterpreter) null, stringArray0);
      assertEquals(false, object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DivisibleFilter divisibleFilter0 = new DivisibleFilter();
      String[] stringArray0 = new String[2];
      Object object0 = divisibleFilter0.filter((SafeString) null, (JinjavaInterpreter) null, stringArray0);
      assertEquals(false, object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DivisibleFilter divisibleFilter0 = new DivisibleFilter();
      String[] stringArray0 = new String[11];
      Integer integer0 = new Integer((-17));
      // Undeclared exception!
      try { 
        divisibleFilter0.filter((Object) integer0, (JinjavaInterpreter) null, stringArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DivisibleFilter divisibleFilter0 = new DivisibleFilter();
      String string0 = divisibleFilter0.getName();
      assertEquals("divisible", string0);
  }
}
