/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 22:14:48 GMT 2022
 */

package com.hubspot.jinjava.lib.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.interpret.JinjavaInterpreter;
import com.hubspot.jinjava.lib.filter.FormatFilter;
import java.util.HashMap;
import java.util.Map;
import java.util.MissingFormatWidthException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormatFilter_ESTest extends FormatFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FormatFilter formatFilter0 = new FormatFilter();
      Object object0 = new Object();
      Object[] objectArray0 = new Object[6];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Object object1 = formatFilter0.filter(object0, (JinjavaInterpreter) null, objectArray0, (Map<String, Object>) hashMap0);
      assertNotNull(object1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FormatFilter formatFilter0 = new FormatFilter();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "format";
      // Undeclared exception!
      try { 
        formatFilter0.filter((Object) "%d%s", (JinjavaInterpreter) null, objectArray0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.interpret.InvalidArgumentException", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FormatFilter formatFilter0 = new FormatFilter();
      MissingFormatWidthException missingFormatWidthException0 = new MissingFormatWidthException("%s in `%s`%s: %s");
      Object[] objectArray0 = new Object[1];
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        formatFilter0.filter((Object) missingFormatWidthException0, (JinjavaInterpreter) null, objectArray0, (Map<String, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.interpret.InvalidArgumentException", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FormatFilter formatFilter0 = new FormatFilter();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        formatFilter0.filter((Object) "<4+4C%+T,", (JinjavaInterpreter) null, (Object[]) null, (Map<String, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.interpret.InvalidArgumentException", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FormatFilter formatFilter0 = new FormatFilter();
      String string0 = formatFilter0.getName();
      assertEquals("format", string0);
  }
}
