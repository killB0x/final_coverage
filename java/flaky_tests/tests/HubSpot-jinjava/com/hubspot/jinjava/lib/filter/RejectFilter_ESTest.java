/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 22:57:48 GMT 2022
 */

package com.hubspot.jinjava.lib.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.interpret.JinjavaInterpreter;
import com.hubspot.jinjava.lib.exptest.ExpTest;
import com.hubspot.jinjava.lib.exptest.IsLowerExpTest;
import com.hubspot.jinjava.lib.exptest.IsNumberExpTest;
import com.hubspot.jinjava.lib.exptest.IsTruthyExpTest;
import com.hubspot.jinjava.lib.filter.RejectFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RejectFilter_ESTest extends RejectFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RejectFilter rejectFilter0 = new RejectFilter();
      Object[] objectArray0 = new Object[6];
      // Undeclared exception!
      try { 
        rejectFilter0.evaluate((JinjavaInterpreter) null, objectArray0, (ExpTest) null, objectArray0[2]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.lib.filter.SelectFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RejectFilter rejectFilter0 = new RejectFilter();
      Object[] objectArray0 = new Object[0];
      IsLowerExpTest isLowerExpTest0 = new IsLowerExpTest();
      // Undeclared exception!
      try { 
        rejectFilter0.evaluate((JinjavaInterpreter) null, objectArray0, isLowerExpTest0, "reject");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.hubspot.jinjava.lib.exptest.IsLowerExpTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RejectFilter rejectFilter0 = new RejectFilter();
      IsNumberExpTest isNumberExpTest0 = new IsNumberExpTest();
      Object object0 = new Object();
      boolean boolean0 = rejectFilter0.evaluate((JinjavaInterpreter) null, (Object[]) null, isNumberExpTest0, object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RejectFilter rejectFilter0 = new RejectFilter();
      IsTruthyExpTest isTruthyExpTest0 = new IsTruthyExpTest();
      Object[] objectArray0 = new Object[0];
      boolean boolean0 = rejectFilter0.evaluate((JinjavaInterpreter) null, objectArray0, isTruthyExpTest0, rejectFilter0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RejectFilter rejectFilter0 = new RejectFilter();
      String string0 = rejectFilter0.getName();
      assertEquals("reject", string0);
  }
}
