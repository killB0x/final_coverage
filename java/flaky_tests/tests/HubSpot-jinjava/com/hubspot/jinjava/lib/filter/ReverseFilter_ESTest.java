/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 21:22:46 GMT 2022
 */

package com.hubspot.jinjava.lib.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import com.hubspot.jinjava.interpret.JinjavaInterpreter;
import com.hubspot.jinjava.lib.filter.ReverseFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReverseFilter_ESTest extends ReverseFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReverseFilter reverseFilter0 = new ReverseFilter();
      Object object0 = reverseFilter0.filter((Object) reverseFilter0, (JinjavaInterpreter) null, (String[]) null);
      assertSame(object0, reverseFilter0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReverseFilter reverseFilter0 = new ReverseFilter();
      Object object0 = reverseFilter0.filter((Object) null, (JinjavaInterpreter) null, (String[]) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReverseFilter reverseFilter0 = new ReverseFilter();
      Object object0 = reverseFilter0.filter((Object) "No random number generator with strategy ", (JinjavaInterpreter) null, (String[]) null);
      assertNotNull(object0);
      assertEquals(" ygetarts htiw rotareneg rebmun modnar oN", object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ReverseFilter reverseFilter0 = new ReverseFilter();
      String string0 = reverseFilter0.getName();
      assertEquals("reverse", string0);
  }
}
