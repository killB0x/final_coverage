/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 22:05:25 GMT 2022
 */

package com.hubspot.jinjava.lib.exptest;

import org.junit.Test;
import static org.junit.Assert.*;
import com.hubspot.jinjava.interpret.JinjavaInterpreter;
import com.hubspot.jinjava.lib.exptest.IsFloatExpTest;
import java.math.BigDecimal;
import java.math.MathContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IsFloatExpTest_ESTest extends IsFloatExpTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IsFloatExpTest isFloatExpTest0 = new IsFloatExpTest();
      Object[] objectArray0 = new Object[6];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      BigDecimal bigDecimal1 = new BigDecimal(2976.2598413022743);
      MathContext mathContext0 = MathContext.UNLIMITED;
      BigDecimal bigDecimal2 = bigDecimal0.divideToIntegralValue(bigDecimal1, mathContext0);
      boolean boolean0 = isFloatExpTest0.evaluate(bigDecimal2, (JinjavaInterpreter) null, objectArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IsFloatExpTest isFloatExpTest0 = new IsFloatExpTest();
      BigDecimal bigDecimal0 = new BigDecimal((-3910.31771));
      Object[] objectArray0 = new Object[8];
      boolean boolean0 = isFloatExpTest0.evaluate(bigDecimal0, (JinjavaInterpreter) null, objectArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IsFloatExpTest isFloatExpTest0 = new IsFloatExpTest();
      Object[] objectArray0 = new Object[6];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      boolean boolean0 = isFloatExpTest0.evaluate(bigDecimal0, (JinjavaInterpreter) null, objectArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IsFloatExpTest isFloatExpTest0 = new IsFloatExpTest();
      Object object0 = new Object();
      Object[] objectArray0 = new Object[6];
      boolean boolean0 = isFloatExpTest0.evaluate(object0, (JinjavaInterpreter) null, objectArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IsFloatExpTest isFloatExpTest0 = new IsFloatExpTest();
      String string0 = isFloatExpTest0.getName();
      assertEquals("float", string0);
  }
}
