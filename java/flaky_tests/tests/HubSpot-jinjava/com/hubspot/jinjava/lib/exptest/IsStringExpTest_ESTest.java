/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 22:10:15 GMT 2022
 */

package com.hubspot.jinjava.lib.exptest;

import org.junit.Test;
import static org.junit.Assert.*;
import com.hubspot.jinjava.interpret.JinjavaInterpreter;
import com.hubspot.jinjava.lib.exptest.IsStringExpTest;
import com.hubspot.jinjava.objects.SafeString;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IsStringExpTest_ESTest extends IsStringExpTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IsStringExpTest isStringExpTest0 = new IsStringExpTest();
      Object[] objectArray0 = new Object[0];
      SafeString safeString0 = new SafeString("");
      boolean boolean0 = isStringExpTest0.evaluate(safeString0, (JinjavaInterpreter) null, objectArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IsStringExpTest isStringExpTest0 = new IsStringExpTest();
      Object object0 = new Object();
      Object[] objectArray0 = new Object[7];
      boolean boolean0 = isStringExpTest0.evaluate(object0, (JinjavaInterpreter) null, objectArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IsStringExpTest isStringExpTest0 = new IsStringExpTest();
      Object[] objectArray0 = new Object[4];
      boolean boolean0 = isStringExpTest0.evaluate("string", (JinjavaInterpreter) null, objectArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IsStringExpTest isStringExpTest0 = new IsStringExpTest();
      Object[] objectArray0 = new Object[7];
      boolean boolean0 = isStringExpTest0.evaluate((Object) null, (JinjavaInterpreter) null, objectArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IsStringExpTest isStringExpTest0 = new IsStringExpTest();
      String string0 = isStringExpTest0.getName();
      assertEquals("string", string0);
  }
}
