/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 22:00:18 GMT 2022
 */

package com.hubspot.jinjava.lib.tag;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.interpret.JinjavaInterpreter;
import com.hubspot.jinjava.lib.tag.AutoEscapeTag;
import com.hubspot.jinjava.tree.TagNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AutoEscapeTag_ESTest extends AutoEscapeTag_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AutoEscapeTag autoEscapeTag0 = new AutoEscapeTag();
      String string0 = autoEscapeTag0.getName();
      assertEquals("autoescape", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AutoEscapeTag autoEscapeTag0 = new AutoEscapeTag();
      // Undeclared exception!
      try { 
        autoEscapeTag0.interpret((TagNode) null, (JinjavaInterpreter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.lib.tag.AutoEscapeTag", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AutoEscapeTag autoEscapeTag0 = new AutoEscapeTag();
      boolean boolean0 = autoEscapeTag0.isRenderedInValidationMode();
      assertTrue(boolean0);
  }
}
