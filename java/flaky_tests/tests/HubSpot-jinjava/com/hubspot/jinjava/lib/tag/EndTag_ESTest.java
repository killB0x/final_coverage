/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 23:10:27 GMT 2022
 */

package com.hubspot.jinjava.lib.tag;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.interpret.JinjavaInterpreter;
import com.hubspot.jinjava.lib.tag.ElseIfTag;
import com.hubspot.jinjava.lib.tag.EndTag;
import com.hubspot.jinjava.lib.tag.FromTag;
import com.hubspot.jinjava.lib.tag.IfchangedTag;
import com.hubspot.jinjava.lib.tag.Tag;
import com.hubspot.jinjava.tree.TagNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EndTag_ESTest extends EndTag_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IfchangedTag ifchangedTag0 = new IfchangedTag();
      EndTag endTag0 = new EndTag(ifchangedTag0);
      String string0 = endTag0.getName();
      assertEquals("endifchanged", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IfchangedTag ifchangedTag0 = new IfchangedTag();
      EndTag endTag0 = new EndTag(ifchangedTag0);
      String string0 = endTag0.getEndTagName();
      assertEquals("endifchanged", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EndTag endTag0 = null;
      try {
        endTag0 = new EndTag((Tag) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.lib.tag.EndTag", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FromTag fromTag0 = new FromTag();
      EndTag endTag0 = new EndTag(fromTag0);
      String string0 = endTag0.interpret((TagNode) null, (JinjavaInterpreter) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ElseIfTag elseIfTag0 = new ElseIfTag();
      EndTag endTag0 = new EndTag(elseIfTag0);
      String string0 = endTag0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FromTag fromTag0 = new FromTag();
      EndTag endTag0 = new EndTag(fromTag0);
      String string0 = endTag0.getEndTagName();
      assertNull(string0);
  }
}
