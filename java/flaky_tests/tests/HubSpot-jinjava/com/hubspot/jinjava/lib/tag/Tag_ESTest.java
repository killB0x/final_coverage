/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 23:21:35 GMT 2022
 */

package com.hubspot.jinjava.lib.tag;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.interpret.JinjavaInterpreter;
import com.hubspot.jinjava.lib.tag.CycleTag;
import com.hubspot.jinjava.lib.tag.ElseIfTag;
import com.hubspot.jinjava.lib.tag.IfchangedTag;
import com.hubspot.jinjava.lib.tag.PrintTag;
import com.hubspot.jinjava.lib.tag.SetTag;
import com.hubspot.jinjava.lib.tag.UnlessTag;
import com.hubspot.jinjava.tree.TagNode;
import com.hubspot.jinjava.tree.output.OutputNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Tag_ESTest extends Tag_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UnlessTag unlessTag0 = new UnlessTag();
      boolean boolean0 = unlessTag0.isRenderedInValidationMode();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ElseIfTag elseIfTag0 = new ElseIfTag();
      OutputNode outputNode0 = elseIfTag0.interpretOutput((TagNode) null, (JinjavaInterpreter) null);
      assertEquals("", outputNode0.getValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PrintTag printTag0 = new PrintTag();
      String string0 = printTag0.getEndTagName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CycleTag cycleTag0 = new CycleTag();
      // Undeclared exception!
      try { 
        cycleTag0.interpretOutput((TagNode) null, (JinjavaInterpreter) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/hubspot/jinjava/util/HelperStringTokenizer
         //
         verifyException("com.hubspot.jinjava.lib.tag.CycleTag", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SetTag setTag0 = new SetTag();
      boolean boolean0 = setTag0.isRenderedInValidationMode();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IfchangedTag ifchangedTag0 = new IfchangedTag();
      String string0 = ifchangedTag0.getEndTagName();
      assertEquals("endifchanged", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IfchangedTag ifchangedTag0 = new IfchangedTag();
      // Undeclared exception!
      try { 
        ifchangedTag0.interpretOutput((TagNode) null, (JinjavaInterpreter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.lib.tag.IfchangedTag", e);
      }
  }
}
