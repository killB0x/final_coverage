/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 20:20:33 GMT 2022
 */

package com.hubspot.jinjava.lib.fn;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.interpret.Context;
import com.hubspot.jinjava.interpret.JinjavaInterpreter;
import com.hubspot.jinjava.lib.fn.MacroFunction;
import com.hubspot.jinjava.tree.Node;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MacroFunction_ESTest extends MacroFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();
      MacroFunction macroFunction0 = new MacroFunction(linkedList0, "", linkedHashMap0, true, (Context) null, (-8), (-8));
      assertFalse(macroFunction0.isDeferred());
      
      macroFunction0.setDeferred(true);
      boolean boolean0 = macroFunction0.isDeferred();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MacroFunction macroFunction0 = new MacroFunction((List<Node>) null, "kwargs", (LinkedHashMap<String, Object>) null, false, (Context) null, (-1239), (-1239));
      boolean boolean0 = macroFunction0.isCaller();
      assertFalse(boolean0);
      assertFalse(macroFunction0.isDeferred());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();
      MacroFunction macroFunction0 = new MacroFunction(linkedList0, (String) null, linkedHashMap0, true, (Context) null, 405, 405);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        macroFunction0.getEvaluationResult(linkedHashMap0, linkedHashMap0, linkedList1, (JinjavaInterpreter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.lib.fn.MacroFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MacroFunction macroFunction0 = new MacroFunction((List<Node>) null, "", (LinkedHashMap<String, Object>) null, false, (Context) null, 61, 61);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        macroFunction0.doEvaluate((Map<String, Object>) null, (Map<String, Object>) null, linkedList0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/fasterxml/jackson/core/PrettyPrinter
         //
         verifyException("com.hubspot.jinjava.lib.fn.MacroFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MacroFunction macroFunction0 = null;
      try {
        macroFunction0 = new MacroFunction((MacroFunction) null, "foe!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.lib.fn.MacroFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();
      MacroFunction macroFunction0 = new MacroFunction(linkedList0, "varargs", linkedHashMap0, true, (Context) null, 2147483645, 2147483645);
      MacroFunction macroFunction1 = new MacroFunction(macroFunction0, "varargs");
      // Undeclared exception!
      try { 
        macroFunction0.equals(macroFunction1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.lib.fn.MacroFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      MacroFunction macroFunction0 = new MacroFunction(linkedList0, "Bo&si]CKhZ7", linkedHashMap0, false, (Context) null, 2737, 2737);
      MacroFunction macroFunction1 = new MacroFunction(linkedList0, (String) null, linkedHashMap0, true, (Context) null, (-1), 491);
      boolean boolean0 = macroFunction0.equals(macroFunction1);
      assertFalse(macroFunction1.isDeferred());
      assertTrue(macroFunction1.isCaller());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();
      MacroFunction macroFunction0 = new MacroFunction(linkedList0, "varargs", linkedHashMap0, true, (Context) null, 2147483645, 2147483645);
      MacroFunction macroFunction1 = new MacroFunction(linkedList0, "", linkedHashMap0, true, (Context) null, 1331, 2147483645);
      boolean boolean0 = macroFunction0.equals(macroFunction1);
      assertFalse(boolean0);
      assertFalse(macroFunction1.isDeferred());
      assertTrue(macroFunction1.isCaller());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();
      MacroFunction macroFunction0 = new MacroFunction((List<Node>) null, (String) null, linkedHashMap0, true, (Context) null, 574, 574);
      LinkedHashMap<MacroFunction, String> linkedHashMap1 = new LinkedHashMap<MacroFunction, String>();
      boolean boolean0 = macroFunction0.equals(linkedHashMap1);
      assertFalse(boolean0);
      assertFalse(macroFunction0.isDeferred());
      assertTrue(macroFunction0.isCaller());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();
      MacroFunction macroFunction0 = new MacroFunction((List<Node>) null, "Too many Deferred Tokens, max is ", linkedHashMap0, false, (Context) null, 2737, 2737);
      boolean boolean0 = macroFunction0.equals(macroFunction0);
      assertTrue(boolean0);
      assertFalse(macroFunction0.isDeferred());
      assertFalse(macroFunction0.isCaller());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();
      MacroFunction macroFunction0 = new MacroFunction(linkedList0, (String) null, linkedHashMap0, true, (Context) null, 34, 0);
      boolean boolean0 = macroFunction0.equals((Object) null);
      assertFalse(macroFunction0.isDeferred());
      assertFalse(boolean0);
      assertTrue(macroFunction0.isCaller());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      linkedList0.add((Node) null);
      MacroFunction macroFunction0 = new MacroFunction(linkedList0, "", (LinkedHashMap<String, Object>) null, true, (Context) null, 4472, 4472);
      // Undeclared exception!
      try { 
        macroFunction0.reconstructImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.lib.fn.MacroFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();
      MacroFunction macroFunction0 = new MacroFunction(linkedList0, "varargs", linkedHashMap0, true, (Context) null, 2147483645, 2147483645);
      macroFunction0.reconstructImage();
      assertTrue(macroFunction0.isCaller());
      assertFalse(macroFunction0.isDeferred());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();
      MacroFunction macroFunction0 = new MacroFunction((List<Node>) null, (String) null, linkedHashMap0, true, (Context) null, 574, 574);
      macroFunction0.reconstructImage();
      assertTrue(macroFunction0.isCaller());
      assertFalse(macroFunction0.isDeferred());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      MacroFunction macroFunction0 = new MacroFunction(linkedList0, "Bo&si]CKhZ7", linkedHashMap0, false, (Context) null, 2737, 2737);
      // Undeclared exception!
      try { 
        macroFunction0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.lib.fn.MacroFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();
      MacroFunction macroFunction0 = new MacroFunction((List<Node>) null, (String) null, linkedHashMap0, true, (Context) null, 574, 574);
      boolean boolean0 = macroFunction0.isDeferred();
      assertFalse(boolean0);
      assertTrue(macroFunction0.isCaller());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MacroFunction macroFunction0 = new MacroFunction((List<Node>) null, "2f/Qk1xGU[", (LinkedHashMap<String, Object>) null, false, (Context) null, (-1333), (-1333));
      // Undeclared exception!
      try { 
        macroFunction0.getImportFile((JinjavaInterpreter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hubspot.jinjava.lib.fn.MacroFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();
      MacroFunction macroFunction0 = new MacroFunction((List<Node>) null, "", linkedHashMap0, true, (Context) null, 2147483645, 2147483645);
      boolean boolean0 = macroFunction0.isCaller();
      assertTrue(boolean0);
      assertFalse(macroFunction0.isDeferred());
  }
}
