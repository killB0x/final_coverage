/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 22:25:04 GMT 2022
 */

package com.hubspot.jinjava.lib.exptest;

import org.junit.Test;
import static org.junit.Assert.*;
import com.hubspot.jinjava.interpret.JinjavaInterpreter;
import com.hubspot.jinjava.lib.exptest.IsIterableExpTest;
import java.sql.SQLNonTransientConnectionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IsIterableExpTest_ESTest extends IsIterableExpTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IsIterableExpTest isIterableExpTest0 = new IsIterableExpTest();
      boolean boolean0 = IsIterableExpTest.isIterable(isIterableExpTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IsIterableExpTest isIterableExpTest0 = new IsIterableExpTest();
      Object[] objectArray0 = new Object[0];
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException("/Y#&!DCF_EoXMg", "`", (-542));
      boolean boolean0 = isIterableExpTest0.evaluate(sQLNonTransientConnectionException0, (JinjavaInterpreter) null, objectArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException("", "", 0);
      boolean boolean0 = IsIterableExpTest.isIterable(sQLNonTransientConnectionException0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object[] objectArray0 = new Object[16];
      objectArray0[0] = (Object) objectArray0;
      boolean boolean0 = IsIterableExpTest.isIterable(objectArray0[0]);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IsIterableExpTest isIterableExpTest0 = new IsIterableExpTest();
      boolean boolean0 = isIterableExpTest0.evaluate((Object) null, (JinjavaInterpreter) null, (Object[]) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IsIterableExpTest isIterableExpTest0 = new IsIterableExpTest();
      String string0 = isIterableExpTest0.getName();
      assertEquals("iterable", string0);
  }
}
