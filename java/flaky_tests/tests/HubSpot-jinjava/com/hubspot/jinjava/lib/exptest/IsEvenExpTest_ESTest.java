/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 22:20:30 GMT 2022
 */

package com.hubspot.jinjava.lib.exptest;

import org.junit.Test;
import static org.junit.Assert.*;
import com.hubspot.jinjava.interpret.JinjavaInterpreter;
import com.hubspot.jinjava.lib.exptest.IsEvenExpTest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IsEvenExpTest_ESTest extends IsEvenExpTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IsEvenExpTest isEvenExpTest0 = new IsEvenExpTest();
      Integer integer0 = new Integer(2155);
      Object[] objectArray0 = new Object[1];
      boolean boolean0 = isEvenExpTest0.evaluate(integer0, (JinjavaInterpreter) null, objectArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IsEvenExpTest isEvenExpTest0 = new IsEvenExpTest();
      Object[] objectArray0 = new Object[7];
      Integer integer0 = new Integer((-1));
      boolean boolean0 = isEvenExpTest0.evaluateNegated(integer0, (JinjavaInterpreter) null, objectArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IsEvenExpTest isEvenExpTest0 = new IsEvenExpTest();
      Object object0 = new Object();
      Object[] objectArray0 = new Object[7];
      boolean boolean0 = isEvenExpTest0.evaluate(object0, (JinjavaInterpreter) null, objectArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IsEvenExpTest isEvenExpTest0 = new IsEvenExpTest();
      Object[] objectArray0 = new Object[7];
      Integer integer0 = new Integer(0);
      boolean boolean0 = isEvenExpTest0.evaluate(integer0, (JinjavaInterpreter) null, objectArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IsEvenExpTest isEvenExpTest0 = new IsEvenExpTest();
      boolean boolean0 = isEvenExpTest0.evaluateNegated((Object) null, (JinjavaInterpreter) null, (Object[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IsEvenExpTest isEvenExpTest0 = new IsEvenExpTest();
      String string0 = isEvenExpTest0.getName();
      assertEquals("even", string0);
  }
}
