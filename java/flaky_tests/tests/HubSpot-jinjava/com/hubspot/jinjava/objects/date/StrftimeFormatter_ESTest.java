/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 20:24:28 GMT 2022
 */

package com.hubspot.jinjava.objects.date;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hubspot.jinjava.objects.date.StrftimeFormatter;
import java.time.Clock;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.ZonedDateTime;
import java.time.chrono.IsoChronology;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.evosuite.runtime.mock.java.time.MockLocalTime;
import org.evosuite.runtime.mock.java.time.MockZonedDateTime;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StrftimeFormatter_ESTest extends StrftimeFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Period period0 = Period.ofYears(3);
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutes(3, 3);
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, (ZoneId) zoneOffset0);
      Clock clock0 = MockClock.tickSeconds(zoneOffset0);
      LocalTime localTime0 = MockLocalTime.now(clock0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.of(localDate0, localTime0, (ZoneId) zoneOffset0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      String string0 = StrftimeFormatter.format(zonedDateTime0, "short", locale0);
      assertEquals("2014/2/14 \u4E0B\u534811:24", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.ofStrict(localDateTime0, zoneOffset0, zoneOffset0);
      String string0 = StrftimeFormatter.format(zonedDateTime0, "short");
      assertEquals("2/14/14, 8:21 PM", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        StrftimeFormatter.toJavaDateTimeFormat("XLVI(fJPO");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.hubspot.jinjava.objects.date.StrftimeFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        StrftimeFormatter.formatter("#b?3dAJK%1:&");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.hubspot.jinjava.objects.date.StrftimeFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      // Undeclared exception!
      try { 
        StrftimeFormatter.format(zonedDateTime0, "g9+j", locale0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.hubspot.jinjava.objects.date.StrftimeFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        StrftimeFormatter.format((ZonedDateTime) null, "%H:%M / %d-%m-%Y");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.hubspot.jinjava.objects.date.StrftimeFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      DateTimeFormatter dateTimeFormatter0 = StrftimeFormatter.formatter("medium", locale0);
      assertNotNull(dateTimeFormatter0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        StrftimeFormatter.formatter("short", (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // locale
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      // Undeclared exception!
      try { 
        StrftimeFormatter.format((ZonedDateTime) null, "medium", locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // temporal
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        StrftimeFormatter.format((ZonedDateTime) null, "full");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // temporal
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      DateTimeFormatter dateTimeFormatter0 = StrftimeFormatter.formatter("long", locale0);
      assertNotNull(dateTimeFormatter0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      DateTimeFormatter dateTimeFormatter0 = StrftimeFormatter.formatter("full", locale0);
      assertNotNull(dateTimeFormatter0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DateTimeFormatter dateTimeFormatter0 = StrftimeFormatter.formatter("medium");
      assertNotNull(dateTimeFormatter0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      // Undeclared exception!
      try { 
        StrftimeFormatter.formatter((String) null, locale0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.hubspot.jinjava.objects.date.StrftimeFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      Locale locale0 = Locale.CHINESE;
      // Undeclared exception!
      try { 
        StrftimeFormatter.format(zonedDateTime0, locale0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.hubspot.jinjava.objects.date.StrftimeFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StrftimeFormatter strftimeFormatter0 = new StrftimeFormatter();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        StrftimeFormatter.format((ZonedDateTime) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.hubspot.jinjava.objects.date.StrftimeFormatter", e);
      }
  }
}
