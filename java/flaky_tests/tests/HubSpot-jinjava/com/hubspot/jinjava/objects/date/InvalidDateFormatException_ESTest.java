/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 23:43:17 GMT 2022
 */

package com.hubspot.jinjava.objects.date;

import org.junit.Test;
import static org.junit.Assert.*;
import com.hubspot.jinjava.objects.date.InvalidDateFormatException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InvalidDateFormatException_ESTest extends InvalidDateFormatException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("]");
      InvalidDateFormatException invalidDateFormatException0 = new InvalidDateFormatException((String) null, mockThrowable0);
      String string0 = invalidDateFormatException0.getFormat();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      InvalidDateFormatException invalidDateFormatException0 = new InvalidDateFormatException("", mockThrowable0);
      String string0 = invalidDateFormatException0.getFormat();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InvalidDateFormatException invalidDateFormatException0 = new InvalidDateFormatException("GNWOo|hk9K6T}1N", (Throwable) null);
      String string0 = invalidDateFormatException0.getFormat();
      assertEquals("GNWOo|hk9K6T}1N", string0);
  }
}
