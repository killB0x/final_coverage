/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 07:34:28 GMT 2022
 */

package software.kes.kraftwerk.weights;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import software.kes.kraftwerk.weights.BinaryWeights;
import software.kes.kraftwerk.weights.BooleanWeights;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BooleanWeights_ESTest extends BooleanWeights_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BooleanWeights.BooleanWeightsBuilderTrues booleanWeights_BooleanWeightsBuilderTrues0 = BooleanWeights.trues(0);
      BooleanWeights booleanWeights0 = booleanWeights_BooleanWeightsBuilderTrues0.toFalses(3160);
      BinaryWeights binaryWeights0 = booleanWeights0.getWeights();
      assertEquals(3160, binaryWeights0.getTotalWeight());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BooleanWeights.BooleanWeightsBuilderFalses booleanWeights_BooleanWeightsBuilderFalses0 = BooleanWeights.falses(0);
      BooleanWeights booleanWeights0 = booleanWeights_BooleanWeightsBuilderFalses0.toTrues(270);
      BinaryWeights binaryWeights0 = booleanWeights0.getWeights();
      assertEquals(270, binaryWeights0.getTotalWeight());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BooleanWeights.BooleanWeightsBuilderFalses booleanWeights_BooleanWeightsBuilderFalses0 = BooleanWeights.falses(0);
      BooleanWeights booleanWeights0 = booleanWeights_BooleanWeightsBuilderFalses0.toTrues(270);
      int int0 = booleanWeights0.getFalseWeight();
      assertEquals(270, booleanWeights0.getTrueWeight());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BooleanWeights booleanWeights0 = BooleanWeights.booleanWeights(2400, 0);
      int int0 = booleanWeights0.getTrueWeight();
      assertEquals(2400, booleanWeights0.getFalseWeight());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BooleanWeights booleanWeights0 = BooleanWeights.booleanWeights(0, 298);
      assertEquals(0, booleanWeights0.getFalseWeight());
      assertEquals(298, booleanWeights0.getTrueWeight());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanWeights.trues((-2881));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weight must be >= 0
         //
         verifyException("software.kes.kraftwerk.weights.BinaryWeights", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanWeights.falses((-1675));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weight must be >= 0
         //
         verifyException("software.kes.kraftwerk.weights.BinaryWeights", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanWeights.booleanWeights(0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // sum of weights must be >= 1
         //
         verifyException("software.kes.kraftwerk.weights.BinaryWeights", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BooleanWeights.BooleanWeightsBuilderFalses booleanWeights_BooleanWeightsBuilderFalses0 = BooleanWeights.falses(626);
      BooleanWeights booleanWeights0 = booleanWeights_BooleanWeightsBuilderFalses0.toTrues(626);
      boolean boolean0 = booleanWeights0.equals(booleanWeights_BooleanWeightsBuilderFalses0);
      assertEquals(626, booleanWeights0.getTrueWeight());
      assertFalse(boolean0);
      assertEquals(626, booleanWeights0.getFalseWeight());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BooleanWeights booleanWeights0 = BooleanWeights.booleanWeights(362, 362);
      boolean boolean0 = booleanWeights0.equals((Object) null);
      assertEquals(362, booleanWeights0.getTrueWeight());
      assertEquals(362, booleanWeights0.getFalseWeight());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BooleanWeights.BooleanWeightsBuilderTrues booleanWeights_BooleanWeightsBuilderTrues0 = BooleanWeights.trues(78);
      BooleanWeights booleanWeights0 = booleanWeights_BooleanWeightsBuilderTrues0.toFalses(78);
      boolean boolean0 = booleanWeights0.equals(booleanWeights0);
      assertEquals(78, booleanWeights0.getFalseWeight());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BooleanWeights.BooleanWeightsBuilderTrues booleanWeights_BooleanWeightsBuilderTrues0 = BooleanWeights.trues(78);
      BooleanWeights booleanWeights0 = booleanWeights_BooleanWeightsBuilderTrues0.toFalses(78);
      BooleanWeights booleanWeights1 = BooleanWeights.booleanWeights(78, 78);
      boolean boolean0 = booleanWeights0.equals(booleanWeights1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BooleanWeights.BooleanWeightsBuilderFalses booleanWeights_BooleanWeightsBuilderFalses0 = BooleanWeights.falses(3160);
      BooleanWeights booleanWeights0 = booleanWeights_BooleanWeightsBuilderFalses0.toTrues(3160);
      int int0 = booleanWeights0.getFalseWeight();
      assertEquals(3160, int0);
      assertEquals(3160, booleanWeights0.getTrueWeight());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BooleanWeights.BooleanWeightsBuilderFalses booleanWeights_BooleanWeightsBuilderFalses0 = BooleanWeights.falses(3160);
      BooleanWeights booleanWeights0 = booleanWeights_BooleanWeightsBuilderFalses0.toTrues(3160);
      booleanWeights0.hashCode();
      assertEquals(3160, booleanWeights0.getFalseWeight());
      assertEquals(3160, booleanWeights0.getTrueWeight());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BooleanWeights.BooleanWeightsBuilderTrues booleanWeights_BooleanWeightsBuilderTrues0 = BooleanWeights.trues(78);
      BooleanWeights booleanWeights0 = booleanWeights_BooleanWeightsBuilderTrues0.toFalses(78);
      String string0 = booleanWeights0.toString();
      assertEquals("BooleanWeights{weights=BinaryWeights{weightA=78, weightB=78}}", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BooleanWeights booleanWeights0 = BooleanWeights.booleanWeights(3160, 3160);
      int int0 = booleanWeights0.getTrueWeight();
      assertEquals(3160, int0);
      assertEquals(3160, booleanWeights0.getFalseWeight());
  }
}
