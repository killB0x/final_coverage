/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 20:37:44 GMT 2022
 */

package com.coveo.spillway.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.coveo.spillway.exception.SpillwayLimitExceededException;
import com.coveo.spillway.limit.LimitDefinition;
import java.time.Duration;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SpillwayLimitExceededException_ESTest extends SpillwayLimitExceededException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<LimitDefinition> linkedList0 = new LinkedList<LimitDefinition>();
      Duration duration0 = Duration.ofNanos(0);
      LimitDefinition limitDefinition0 = new LimitDefinition("", 0, duration0);
      SpillwayLimitExceededException spillwayLimitExceededException0 = new SpillwayLimitExceededException(linkedList0, limitDefinition0, (-920));
      Object object0 = spillwayLimitExceededException0.getContext();
      assertSame(object0, limitDefinition0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SpillwayLimitExceededException spillwayLimitExceededException0 = null;
      try {
        spillwayLimitExceededException0 = new SpillwayLimitExceededException((List<LimitDefinition>) null, (Object) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LimitDefinition limitDefinition0 = new LimitDefinition("xmQe|5$v!T5,VM.D`", 1, (Duration) null);
      SpillwayLimitExceededException spillwayLimitExceededException0 = new SpillwayLimitExceededException(limitDefinition0, (Object) null, 1);
      List<LimitDefinition> list0 = spillwayLimitExceededException0.getExceededLimits();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SpillwayLimitExceededException spillwayLimitExceededException0 = new SpillwayLimitExceededException((LimitDefinition) null, (Object) null, (-1));
      Object object0 = spillwayLimitExceededException0.getContext();
      assertNull(object0);
  }
}
