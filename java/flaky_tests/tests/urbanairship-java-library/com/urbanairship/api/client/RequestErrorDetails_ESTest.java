/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 18:32:54 GMT 2022
 */

package com.urbanairship.api.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.urbanairship.api.client.RequestErrorDetails;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RequestErrorDetails_ESTest extends RequestErrorDetails_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder0 = RequestErrorDetails.Location.newBuilder();
      RequestErrorDetails.Location requestErrorDetails_Location0 = requestErrorDetails_Location_Builder0.build();
      String string0 = requestErrorDetails_Location0.toString();
      assertEquals("Location:\nLine:null\nColumn:null", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = new RequestErrorDetails.Builder();
      requestErrorDetails_Builder0.setPath("';h]oW1)wqK+z`");
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      String string0 = requestErrorDetails0.getPath();
      assertEquals("';h]oW1)wqK+z`", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = RequestErrorDetails.newBuilder();
      requestErrorDetails_Builder0.setPath("");
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      String string0 = requestErrorDetails0.getPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = new RequestErrorDetails.Builder();
      requestErrorDetails_Builder0.setError("com.urbanairship.api.client.RequestErrorDetails$Builder");
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      String string0 = requestErrorDetails0.getError();
      assertEquals("com.urbanairship.api.client.RequestErrorDetails$Builder", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = new RequestErrorDetails.Builder();
      RequestErrorDetails.Builder requestErrorDetails_Builder1 = requestErrorDetails_Builder0.setError("");
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder1.build();
      String string0 = requestErrorDetails0.getError();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder0 = RequestErrorDetails.Location.newBuilder();
      Integer integer0 = Integer.getInteger((String) null, (-1805));
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder1 = requestErrorDetails_Location_Builder0.setColumn(integer0);
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder2 = requestErrorDetails_Location_Builder1.setLine(integer0);
      RequestErrorDetails.Location requestErrorDetails_Location0 = requestErrorDetails_Location_Builder2.build();
      RequestErrorDetails.Location requestErrorDetails_Location1 = requestErrorDetails_Location_Builder0.build();
      boolean boolean0 = requestErrorDetails_Location0.equals(requestErrorDetails_Location1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder0 = RequestErrorDetails.Location.newBuilder();
      Integer integer0 = Integer.valueOf((-1989));
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder1 = requestErrorDetails_Location_Builder0.setLine(integer0);
      requestErrorDetails_Location_Builder1.setColumn(integer0);
      RequestErrorDetails.Location requestErrorDetails_Location0 = requestErrorDetails_Location_Builder1.build();
      Integer integer1 = Integer.getInteger("line:%s:column:%s", 2147483645);
      requestErrorDetails_Location_Builder1.setColumn(integer1);
      RequestErrorDetails.Location requestErrorDetails_Location1 = requestErrorDetails_Location_Builder1.build();
      boolean boolean0 = requestErrorDetails_Location0.equals(requestErrorDetails_Location1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = Integer.getInteger("QE,QmM=o+=Mx", (-1795));
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder0 = RequestErrorDetails.Location.newBuilder();
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder1 = requestErrorDetails_Location_Builder0.setLine(integer0);
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder2 = RequestErrorDetails.Location.newBuilder();
      RequestErrorDetails.Location requestErrorDetails_Location0 = requestErrorDetails_Location_Builder2.build();
      RequestErrorDetails.Location requestErrorDetails_Location1 = requestErrorDetails_Location_Builder1.build();
      boolean boolean0 = requestErrorDetails_Location1.equals(requestErrorDetails_Location0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder0 = RequestErrorDetails.Location.newBuilder();
      RequestErrorDetails.Location requestErrorDetails_Location0 = requestErrorDetails_Location_Builder0.build();
      Object object0 = new Object();
      boolean boolean0 = requestErrorDetails_Location0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder0 = RequestErrorDetails.Location.newBuilder();
      RequestErrorDetails.Location requestErrorDetails_Location0 = requestErrorDetails_Location_Builder0.build();
      boolean boolean0 = requestErrorDetails_Location0.equals(requestErrorDetails_Location0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = RequestErrorDetails.newBuilder();
      requestErrorDetails_Builder0.setError("");
      RequestErrorDetails.Builder requestErrorDetails_Builder1 = requestErrorDetails_Builder0.setPath("");
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder0 = RequestErrorDetails.Location.newBuilder();
      RequestErrorDetails.Location requestErrorDetails_Location0 = requestErrorDetails_Location_Builder0.build();
      requestErrorDetails_Builder0.setLocation(requestErrorDetails_Location0);
      RequestErrorDetails requestErrorDetails1 = requestErrorDetails_Builder1.build();
      boolean boolean0 = requestErrorDetails1.equals(requestErrorDetails0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = RequestErrorDetails.newBuilder();
      requestErrorDetails_Builder0.setError("");
      requestErrorDetails_Builder0.setPath("");
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      RequestErrorDetails requestErrorDetails1 = requestErrorDetails_Builder0.build();
      boolean boolean0 = requestErrorDetails1.equals(requestErrorDetails0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = RequestErrorDetails.newBuilder();
      RequestErrorDetails.Builder requestErrorDetails_Builder1 = requestErrorDetails_Builder0.setPath("N");
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      RequestErrorDetails.Builder requestErrorDetails_Builder2 = requestErrorDetails_Builder1.setError("N");
      RequestErrorDetails requestErrorDetails1 = requestErrorDetails_Builder2.build();
      boolean boolean0 = requestErrorDetails0.equals(requestErrorDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = RequestErrorDetails.newBuilder();
      requestErrorDetails_Builder0.setPath("");
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      RequestErrorDetails requestErrorDetails1 = requestErrorDetails_Builder0.build();
      // Undeclared exception!
      try { 
        requestErrorDetails1.equals(requestErrorDetails0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = new RequestErrorDetails.Builder();
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      RequestErrorDetails.Builder requestErrorDetails_Builder1 = requestErrorDetails_Builder0.setPath("N");
      RequestErrorDetails requestErrorDetails1 = requestErrorDetails_Builder1.build();
      boolean boolean0 = requestErrorDetails0.equals(requestErrorDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object object0 = new Object();
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = new RequestErrorDetails.Builder();
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      boolean boolean0 = requestErrorDetails0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = new RequestErrorDetails.Builder();
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      boolean boolean0 = requestErrorDetails0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = RequestErrorDetails.newBuilder();
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      boolean boolean0 = requestErrorDetails0.equals(requestErrorDetails0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = RequestErrorDetails.newBuilder();
      RequestErrorDetails.Builder requestErrorDetails_Builder1 = requestErrorDetails_Builder0.setError("M");
      RequestErrorDetails.Builder requestErrorDetails_Builder2 = requestErrorDetails_Builder1.setPath("M");
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder2.build();
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder0 = RequestErrorDetails.Location.newBuilder();
      RequestErrorDetails.Location requestErrorDetails_Location0 = requestErrorDetails_Location_Builder0.build();
      requestErrorDetails_Builder2.setLocation(requestErrorDetails_Location0);
      RequestErrorDetails requestErrorDetails1 = requestErrorDetails_Builder0.build();
      boolean boolean0 = requestErrorDetails0.equals(requestErrorDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = new RequestErrorDetails.Builder();
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      String string0 = requestErrorDetails0.getPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = RequestErrorDetails.newBuilder();
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      requestErrorDetails0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = new RequestErrorDetails.Builder();
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      Optional<RequestErrorDetails.Location> optional0 = requestErrorDetails0.getLocation();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = new RequestErrorDetails.Builder();
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      String string0 = requestErrorDetails0.getError();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder0 = RequestErrorDetails.Location.newBuilder();
      RequestErrorDetails.Location requestErrorDetails_Location0 = requestErrorDetails_Location_Builder0.build();
      Number number0 = requestErrorDetails_Location0.getColumn();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder0 = RequestErrorDetails.Location.newBuilder();
      RequestErrorDetails.Location requestErrorDetails_Location0 = requestErrorDetails_Location_Builder0.build();
      RequestErrorDetails.Builder requestErrorDetails_Builder0 = new RequestErrorDetails.Builder();
      requestErrorDetails_Builder0.setLocation(requestErrorDetails_Location0);
      RequestErrorDetails requestErrorDetails0 = requestErrorDetails_Builder0.build();
      String string0 = requestErrorDetails0.toString();
      assertEquals("\nAPIErrorDetails: \nPath:null\nError:null\nOptional Location:Optional[Location:\nLine:null\nColumn:null]", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RequestErrorDetails.Location.Builder requestErrorDetails_Location_Builder0 = RequestErrorDetails.Location.newBuilder();
      RequestErrorDetails.Location requestErrorDetails_Location0 = requestErrorDetails_Location_Builder0.build();
      Number number0 = requestErrorDetails_Location0.getLine();
      assertNull(number0);
  }
}
