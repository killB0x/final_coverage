/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 17:46:13 GMT 2022
 */

package com.urbanairship.api.common.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.urbanairship.api.common.model.ErrorDetails;
import com.urbanairship.api.common.model.GenericResponse;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GenericResponse_ESTest extends GenericResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("");
      ErrorDetails errorDetails0 = new ErrorDetails("y#qBbQ'.\"rTx", "`~Kto0{(>U>");
      Integer integer0 = new Integer((-707));
      GenericResponse genericResponse0 = new GenericResponse(boolean0, "e>+pKKs", "", errorDetails0, integer0, "e>+pKKs");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      GenericResponse genericResponse0 = new GenericResponse(boolean0, "", "", (ErrorDetails) null, (Integer) null, "");
      boolean boolean1 = genericResponse0.equals("");
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GenericResponse genericResponse0 = new GenericResponse((Boolean) null, "", "", (ErrorDetails) null, (Integer) null, "");
      boolean boolean0 = genericResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      GenericResponse genericResponse0 = new GenericResponse(boolean0, "\" }", "\" }", (ErrorDetails) null, (Integer) null, "\" }");
      boolean boolean1 = genericResponse0.equals(genericResponse0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      GenericResponse genericResponse0 = new GenericResponse(boolean0, "\" }", "\" }", (ErrorDetails) null, (Integer) null, "\" }");
      GenericResponse genericResponse1 = new GenericResponse(boolean0, "\" }", "\" }", (ErrorDetails) null, (Integer) null, "\" }");
      // Undeclared exception!
      try { 
        genericResponse0.equals(genericResponse1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.common.model.GenericResponse", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GenericResponse genericResponse0 = new GenericResponse((Boolean) null, "", "", (ErrorDetails) null, (Integer) null, "");
      Optional<Integer> optional0 = genericResponse0.getErrorCode();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GenericResponse genericResponse0 = new GenericResponse((Boolean) null, "", "", (ErrorDetails) null, (Integer) null, "");
      Optional<ErrorDetails> optional0 = genericResponse0.getErrorDetails();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GenericResponse genericResponse0 = new GenericResponse((Boolean) null, "", "", (ErrorDetails) null, (Integer) null, "");
      // Undeclared exception!
      try { 
        genericResponse0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.common.model.GenericResponse", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GenericResponse genericResponse0 = new GenericResponse((Boolean) null, "", "", (ErrorDetails) null, (Integer) null, "");
      String string0 = genericResponse0.toString();
      assertEquals("GenericResponse{ok=null, operationId=, error=, errorDetails=null, errorCode=null, warning=}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      GenericResponse genericResponse0 = new GenericResponse(boolean0, "", "", (ErrorDetails) null, (Integer) null, "");
      Optional<String> optional0 = genericResponse0.getError();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      ErrorDetails errorDetails0 = new ErrorDetails("M *l+j,ps", "kNj=}");
      Integer integer0 = new Integer(0);
      GenericResponse genericResponse0 = new GenericResponse(boolean0, "com.urbanairship.api.common.model.ErrorDetails", "com.urbanairship.api.common.model.ErrorDetails", errorDetails0, integer0, ", path=");
      Optional<String> optional0 = genericResponse0.getOperationId();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GenericResponse genericResponse0 = new GenericResponse((Boolean) null, "", "", (ErrorDetails) null, (Integer) null, "");
      Optional<Boolean> optional0 = genericResponse0.getOk();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GenericResponse genericResponse0 = new GenericResponse((Boolean) null, "", "", (ErrorDetails) null, (Integer) null, "");
      Optional<String> optional0 = genericResponse0.getWarning();
      assertNotNull(optional0);
  }
}
