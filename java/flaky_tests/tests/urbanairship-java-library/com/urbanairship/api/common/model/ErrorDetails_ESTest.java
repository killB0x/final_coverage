/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 18:55:51 GMT 2022
 */

package com.urbanairship.api.common.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.urbanairship.api.common.model.ErrorDetails;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ErrorDetails_ESTest extends ErrorDetails_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ErrorDetails errorDetails0 = new ErrorDetails("com.urbanairship.api.common.model.ErrorDetails", "4S");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ErrorDetails errorDetails0 = new ErrorDetails("", "");
      boolean boolean0 = errorDetails0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ErrorDetails errorDetails0 = new ErrorDetails((String) null, (String) null);
      boolean boolean0 = errorDetails0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ErrorDetails errorDetails0 = new ErrorDetails("bf,", "bf,");
      boolean boolean0 = errorDetails0.equals(errorDetails0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ErrorDetails errorDetails0 = new ErrorDetails("bf,", "bf,");
      Optional<String> optional0 = errorDetails0.getError();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ErrorDetails errorDetails0 = new ErrorDetails((String) null, (String) null);
      String string0 = errorDetails0.toString();
      assertEquals("ErrorDetails{error=null, path=null}", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ErrorDetails errorDetails0 = new ErrorDetails("", "");
      // Undeclared exception!
      try { 
        errorDetails0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.common.model.ErrorDetails", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ErrorDetails errorDetails0 = new ErrorDetails("bf,", "bf,");
      Optional<String> optional0 = errorDetails0.getPath();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ErrorDetails errorDetails0 = new ErrorDetails("'X3.P4!T8vqd(-NgSz", "'X3.P4!T8vqd(-NgSz");
      ErrorDetails errorDetails1 = new ErrorDetails("'X3.P4!T8vqd(-NgSz", "'X3.P4!T8vqd(-NgSz");
      // Undeclared exception!
      try { 
        errorDetails0.equals(errorDetails1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.common.model.ErrorDetails", e);
      }
  }
}
