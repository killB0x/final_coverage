/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 18:12:17 GMT 2022
 */

package com.urbanairship.api.templates.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.urbanairship.api.templates.model.TemplateSelector;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TemplateSelector_ESTest extends TemplateSelector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TemplateSelector.Builder templateSelector_Builder0 = new TemplateSelector.Builder();
      TemplateSelector.Builder templateSelector_Builder1 = templateSelector_Builder0.addSubstitution("TemplateSelector{templateId='", "com.urbanairship.api.templates.model.TemplateSelector$1");
      assertSame(templateSelector_Builder0, templateSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TemplateSelector.Builder templateSelector_Builder0 = TemplateSelector.newBuilder();
      TemplateSelector.Builder templateSelector_Builder1 = templateSelector_Builder0.addSubstitution("]6ST'@S", "]6ST'@S");
      assertSame(templateSelector_Builder0, templateSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TemplateSelector.Builder templateSelector_Builder0 = TemplateSelector.newBuilder();
      TemplateSelector.Builder templateSelector_Builder1 = templateSelector_Builder0.setTemplateId("com.urbanairship.api.templates.model.TemplateSelector$Builder");
      assertSame(templateSelector_Builder0, templateSelector_Builder1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TemplateSelector.Builder templateSelector_Builder0 = TemplateSelector.newBuilder();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      TemplateSelector.Builder templateSelector_Builder1 = templateSelector_Builder0.addSubstitutions(hashMap0);
      assertSame(templateSelector_Builder1, templateSelector_Builder0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TemplateSelector.Builder templateSelector_Builder0 = TemplateSelector.newBuilder();
      // Undeclared exception!
      try { 
        templateSelector_Builder0.build();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.urbanairship.api.templates.model.TemplateSelector$Builder", e);
      }
  }
}
