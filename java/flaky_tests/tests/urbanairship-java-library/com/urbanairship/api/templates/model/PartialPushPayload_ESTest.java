/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 18:16:07 GMT 2022
 */

package com.urbanairship.api.templates.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.urbanairship.api.push.model.InApp;
import com.urbanairship.api.push.model.PushOptions;
import com.urbanairship.api.push.model.notification.Notification;
import com.urbanairship.api.push.model.notification.richpush.RichPushMessage;
import com.urbanairship.api.templates.model.PartialPushPayload;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PartialPushPayload_ESTest extends PartialPushPayload_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PartialPushPayload.Builder partialPushPayload_Builder0 = new PartialPushPayload.Builder();
      // Undeclared exception!
      try { 
        partialPushPayload_Builder0.build();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.urbanairship.api.templates.model.PartialPushPayload$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PartialPushPayload.Builder partialPushPayload_Builder0 = new PartialPushPayload.Builder();
      PartialPushPayload.Builder partialPushPayload_Builder1 = partialPushPayload_Builder0.setInApp((InApp) null);
      assertSame(partialPushPayload_Builder1, partialPushPayload_Builder0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PartialPushPayload.Builder partialPushPayload_Builder0 = new PartialPushPayload.Builder();
      PartialPushPayload.Builder partialPushPayload_Builder1 = partialPushPayload_Builder0.setPushOptions((PushOptions) null);
      assertSame(partialPushPayload_Builder1, partialPushPayload_Builder0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PartialPushPayload.Builder partialPushPayload_Builder0 = new PartialPushPayload.Builder();
      PartialPushPayload.Builder partialPushPayload_Builder1 = partialPushPayload_Builder0.setNotification((Notification) null);
      assertSame(partialPushPayload_Builder0, partialPushPayload_Builder1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PartialPushPayload.Builder partialPushPayload_Builder0 = PartialPushPayload.newBuilder();
      PartialPushPayload.Builder partialPushPayload_Builder1 = partialPushPayload_Builder0.setRichPushMessage((RichPushMessage) null);
      assertSame(partialPushPayload_Builder0, partialPushPayload_Builder1);
  }
}
