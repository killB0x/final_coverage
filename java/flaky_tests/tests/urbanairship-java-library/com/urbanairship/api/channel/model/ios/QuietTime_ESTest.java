/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 18:47:53 GMT 2022
 */

package com.urbanairship.api.channel.model.ios;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.urbanairship.api.channel.model.ios.QuietTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuietTime_ESTest extends QuietTime_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QuietTime.Builder quietTime_Builder0 = QuietTime.newBuilder();
      quietTime_Builder0.setStart("@+)3/@0f5L$Jr");
      QuietTime quietTime0 = quietTime_Builder0.build();
      String string0 = quietTime0.getStart();
      assertEquals("@+)3/@0f5L$Jr", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QuietTime.Builder quietTime_Builder0 = QuietTime.newBuilder();
      QuietTime.Builder quietTime_Builder1 = quietTime_Builder0.setEnd("K_SLuut");
      QuietTime quietTime0 = quietTime_Builder1.build();
      String string0 = quietTime0.getEnd();
      assertEquals("K_SLuut", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QuietTime.Builder quietTime_Builder0 = QuietTime.newBuilder();
      QuietTime quietTime0 = quietTime_Builder0.build();
      QuietTime quietTime1 = quietTime_Builder0.build();
      // Undeclared exception!
      try { 
        quietTime0.equals(quietTime1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.channel.model.ios.QuietTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QuietTime.Builder quietTime_Builder0 = QuietTime.newBuilder();
      QuietTime quietTime0 = quietTime_Builder0.build();
      boolean boolean0 = quietTime0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QuietTime.Builder quietTime_Builder0 = QuietTime.newBuilder();
      QuietTime quietTime0 = quietTime_Builder0.build();
      boolean boolean0 = quietTime0.equals(quietTime0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QuietTime.Builder quietTime_Builder0 = QuietTime.newBuilder();
      QuietTime quietTime0 = quietTime_Builder0.build();
      boolean boolean0 = quietTime0.equals(quietTime_Builder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QuietTime.Builder quietTime_Builder0 = QuietTime.newBuilder();
      quietTime_Builder0.setEnd("");
      QuietTime quietTime0 = quietTime_Builder0.build();
      String string0 = quietTime0.getEnd();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QuietTime.Builder quietTime_Builder0 = QuietTime.newBuilder();
      QuietTime.Builder quietTime_Builder1 = quietTime_Builder0.setStart("");
      QuietTime quietTime0 = quietTime_Builder1.build();
      String string0 = quietTime0.getStart();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QuietTime.Builder quietTime_Builder0 = QuietTime.newBuilder();
      QuietTime quietTime0 = quietTime_Builder0.build();
      // Undeclared exception!
      try { 
        quietTime0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.channel.model.ios.QuietTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QuietTime.Builder quietTime_Builder0 = QuietTime.newBuilder();
      QuietTime quietTime0 = quietTime_Builder0.build();
      String string0 = quietTime0.getEnd();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QuietTime.Builder quietTime_Builder0 = QuietTime.newBuilder();
      QuietTime quietTime0 = quietTime_Builder0.build();
      String string0 = quietTime0.toString();
      assertEquals("QuietTime{start='null', end='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QuietTime.Builder quietTime_Builder0 = QuietTime.newBuilder();
      QuietTime quietTime0 = quietTime_Builder0.build();
      String string0 = quietTime0.getStart();
      assertNull(string0);
  }
}
