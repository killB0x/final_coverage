/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 17:56:28 GMT 2022
 */

package com.urbanairship.api.channel.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.urbanairship.api.channel.model.SmsRegistrationResponse;
import com.urbanairship.api.common.model.ErrorDetails;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SmsRegistrationResponse_ESTest extends SmsRegistrationResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      SmsRegistrationResponse smsRegistrationResponse0 = smsRegistrationResponse_Builder0.build();
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder1 = smsRegistrationResponse_Builder0.setOk(true);
      SmsRegistrationResponse smsRegistrationResponse1 = smsRegistrationResponse_Builder1.build();
      assertTrue(smsRegistrationResponse1.isOk());
      
      boolean boolean0 = smsRegistrationResponse1.equals(smsRegistrationResponse0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      SmsRegistrationResponse smsRegistrationResponse0 = smsRegistrationResponse_Builder0.build();
      SmsRegistrationResponse smsRegistrationResponse1 = smsRegistrationResponse_Builder0.build();
      // Undeclared exception!
      try { 
        smsRegistrationResponse0.equals(smsRegistrationResponse1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.channel.model.SmsRegistrationResponse", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      SmsRegistrationResponse smsRegistrationResponse0 = smsRegistrationResponse_Builder0.build();
      boolean boolean0 = smsRegistrationResponse0.equals(smsRegistrationResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      SmsRegistrationResponse smsRegistrationResponse0 = smsRegistrationResponse_Builder0.build();
      Object object0 = new Object();
      boolean boolean0 = smsRegistrationResponse0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder1 = smsRegistrationResponse_Builder0.setStatus("\" }");
      assertSame(smsRegistrationResponse_Builder0, smsRegistrationResponse_Builder1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder1 = smsRegistrationResponse_Builder0.setError("BNH$~FYKQ_Qr)");
      assertSame(smsRegistrationResponse_Builder1, smsRegistrationResponse_Builder0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder1 = smsRegistrationResponse_Builder0.setChannelId("|Gx");
      assertSame(smsRegistrationResponse_Builder0, smsRegistrationResponse_Builder1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      ErrorDetails errorDetails0 = new ErrorDetails("", (String) null);
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder1 = smsRegistrationResponse_Builder0.setErrorDetails(errorDetails0);
      assertSame(smsRegistrationResponse_Builder1, smsRegistrationResponse_Builder0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      smsRegistrationResponse_Builder0.setOk(true);
      SmsRegistrationResponse smsRegistrationResponse0 = smsRegistrationResponse_Builder0.build();
      boolean boolean0 = smsRegistrationResponse0.isOk();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      SmsRegistrationResponse smsRegistrationResponse0 = smsRegistrationResponse_Builder0.build();
      Optional<ErrorDetails> optional0 = smsRegistrationResponse0.getErrorDetails();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      SmsRegistrationResponse smsRegistrationResponse0 = smsRegistrationResponse_Builder0.build();
      boolean boolean0 = smsRegistrationResponse0.isOk();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      SmsRegistrationResponse smsRegistrationResponse0 = smsRegistrationResponse_Builder0.build();
      Optional<String> optional0 = smsRegistrationResponse0.getError();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = SmsRegistrationResponse.newBuilder();
      SmsRegistrationResponse smsRegistrationResponse0 = smsRegistrationResponse_Builder0.build();
      boolean boolean0 = smsRegistrationResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      SmsRegistrationResponse smsRegistrationResponse0 = smsRegistrationResponse_Builder0.build();
      // Undeclared exception!
      try { 
        smsRegistrationResponse0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.channel.model.SmsRegistrationResponse", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      SmsRegistrationResponse smsRegistrationResponse0 = smsRegistrationResponse_Builder0.build();
      String string0 = smsRegistrationResponse0.toString();
      assertEquals("SmsRegistrationResponse{ok=false, channelId='Optional.empty, status='Optional.empty, error='Optional.empty, errorDetails=Optional.empty}", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      SmsRegistrationResponse smsRegistrationResponse0 = smsRegistrationResponse_Builder0.build();
      Optional<String> optional0 = smsRegistrationResponse0.getChannelId();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SmsRegistrationResponse.Builder smsRegistrationResponse_Builder0 = new SmsRegistrationResponse.Builder();
      SmsRegistrationResponse smsRegistrationResponse0 = smsRegistrationResponse_Builder0.build();
      Optional<String> optional0 = smsRegistrationResponse0.getStatus();
      assertNotNull(optional0);
  }
}
