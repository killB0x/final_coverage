/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 19:09:29 GMT 2022
 */

package com.urbanairship.api.channel.model.open;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.urbanairship.api.channel.model.open.Channel;
import com.urbanairship.api.channel.model.open.OpenChannelPayload;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OpenChannelPayload_ESTest extends OpenChannelPayload_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OpenChannelPayload openChannelPayload0 = new OpenChannelPayload((Channel) null);
      OpenChannelPayload openChannelPayload1 = new OpenChannelPayload((Channel) null);
      // Undeclared exception!
      try { 
        openChannelPayload0.equals(openChannelPayload1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.channel.model.open.OpenChannelPayload", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OpenChannelPayload openChannelPayload0 = new OpenChannelPayload((Channel) null);
      Object object0 = new Object();
      boolean boolean0 = openChannelPayload0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OpenChannelPayload openChannelPayload0 = new OpenChannelPayload((Channel) null);
      boolean boolean0 = openChannelPayload0.equals(openChannelPayload0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OpenChannelPayload openChannelPayload0 = new OpenChannelPayload((Channel) null);
      boolean boolean0 = openChannelPayload0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OpenChannelPayload openChannelPayload0 = new OpenChannelPayload((Channel) null);
      // Undeclared exception!
      try { 
        openChannelPayload0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.channel.model.open.OpenChannelPayload", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OpenChannelPayload openChannelPayload0 = new OpenChannelPayload((Channel) null);
      String string0 = openChannelPayload0.toString();
      assertEquals("OpenChannelPayload{channel=null}", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OpenChannelPayload openChannelPayload0 = new OpenChannelPayload((Channel) null);
      Channel channel0 = openChannelPayload0.getChannel();
      assertNull(channel0);
  }
}
