/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 19:14:11 GMT 2022
 */

package com.urbanairship.api.push.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.urbanairship.api.push.model.Position;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Position_ESTest extends Position_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Optional<Position> optional0 = Position.find("top");
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Position[] positionArray0 = Position.values();
      assertEquals(2, positionArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Position position0 = Position.valueOf("TOP");
      assertEquals("top", position0.getType());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Position position0 = Position.BOTTOM;
      String string0 = position0.getType();
      assertEquals("bottom", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Optional<Position> optional0 = Position.find("bottom");
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Optional<Position> optional0 = Position.find("{v2");
      assertNotNull(optional0);
  }
}
