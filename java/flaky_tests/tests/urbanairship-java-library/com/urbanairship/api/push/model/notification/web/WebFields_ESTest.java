/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 18:22:14 GMT 2022
 */

package com.urbanairship.api.push.model.notification.web;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.urbanairship.api.push.model.notification.web.WebFields;
import com.urbanairship.api.push.model.notification.web.WebIcon;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WebFields_ESTest extends WebFields_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WebFields.Builder webFields_Builder0 = new WebFields.Builder();
      WebFields webFields0 = webFields_Builder0.build();
      WebFields webFields1 = webFields_Builder0.build();
      // Undeclared exception!
      try { 
        webFields0.equals(webFields1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.push.model.notification.web.WebFields", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WebFields.Builder webFields_Builder0 = new WebFields.Builder();
      WebFields webFields0 = webFields_Builder0.build();
      boolean boolean0 = webFields0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WebFields.Builder webFields_Builder0 = new WebFields.Builder();
      WebFields.Builder webFields_Builder1 = webFields_Builder0.setTitle(", title=");
      assertSame(webFields_Builder0, webFields_Builder1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WebFields.Builder webFields_Builder0 = new WebFields.Builder();
      WebFields.Builder webFields_Builder1 = webFields_Builder0.setAlert("ED^");
      assertSame(webFields_Builder1, webFields_Builder0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WebFields.Builder webFields_Builder0 = new WebFields.Builder();
      WebIcon webIcon0 = mock(WebIcon.class, new ViolatedAssumptionAnswer());
      WebFields.Builder webFields_Builder1 = webFields_Builder0.setWebIcon(webIcon0);
      assertSame(webFields_Builder0, webFields_Builder1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WebFields.Builder webFields_Builder0 = new WebFields.Builder();
      WebFields webFields0 = webFields_Builder0.build();
      Optional<String> optional0 = webFields0.getAlert();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WebFields.Builder webFields_Builder0 = new WebFields.Builder();
      WebFields webFields0 = webFields_Builder0.build();
      // Undeclared exception!
      try { 
        webFields0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.push.model.notification.web.WebFields", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WebFields.Builder webFields_Builder0 = new WebFields.Builder();
      WebFields webFields0 = webFields_Builder0.build();
      Optional<WebIcon> optional0 = webFields0.getWebIcon();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WebFields.Builder webFields_Builder0 = WebFields.newBuilder();
      WebFields webFields0 = webFields_Builder0.build();
      boolean boolean0 = webFields0.equals(webFields0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WebFields.Builder webFields_Builder0 = new WebFields.Builder();
      WebFields webFields0 = webFields_Builder0.build();
      Optional<String> optional0 = webFields0.getTitle();
      boolean boolean0 = webFields0.equals(optional0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WebFields.Builder webFields_Builder0 = new WebFields.Builder();
      WebFields webFields0 = webFields_Builder0.build();
      String string0 = webFields0.toString();
      assertEquals("WebFields{alert=Optional.empty, webIcon=Optional.empty, title=Optional.empty}", string0);
  }
}
