/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 17:44:45 GMT 2022
 */

package com.urbanairship.api.push.model.notification;

import org.junit.Test;
import static org.junit.Assert.*;
import com.urbanairship.api.push.model.DeviceType;
import com.urbanairship.api.push.model.notification.DevicePayloadOverride;
import com.urbanairship.api.push.model.notification.NotificationPayloadOverrideKey;
import com.urbanairship.api.push.model.notification.wns.WNSDevicePayload;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NotificationPayloadOverrideKey_ESTest extends NotificationPayloadOverrideKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<WNSDevicePayload> class0 = WNSDevicePayload.class;
      NotificationPayloadOverrideKey notificationPayloadOverrideKey0 = new NotificationPayloadOverrideKey((DeviceType) null, class0);
      Class<? extends DevicePayloadOverride> class1 = notificationPayloadOverrideKey0.getOverrideClass();
      assertEquals("class com.urbanairship.api.push.model.notification.wns.WNSDevicePayload", class1.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<WNSDevicePayload> class0 = WNSDevicePayload.class;
      NotificationPayloadOverrideKey notificationPayloadOverrideKey0 = new NotificationPayloadOverrideKey((DeviceType) null, class0);
      notificationPayloadOverrideKey0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NotificationPayloadOverrideKey notificationPayloadOverrideKey0 = new NotificationPayloadOverrideKey((DeviceType) null, (Class<? extends DevicePayloadOverride>) null);
      notificationPayloadOverrideKey0.hashCode();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NotificationPayloadOverrideKey notificationPayloadOverrideKey0 = new NotificationPayloadOverrideKey((DeviceType) null, (Class<? extends DevicePayloadOverride>) null);
      Class<WNSDevicePayload> class0 = WNSDevicePayload.class;
      NotificationPayloadOverrideKey notificationPayloadOverrideKey1 = new NotificationPayloadOverrideKey((DeviceType) null, class0);
      boolean boolean0 = notificationPayloadOverrideKey0.equals(notificationPayloadOverrideKey1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<WNSDevicePayload> class0 = WNSDevicePayload.class;
      NotificationPayloadOverrideKey notificationPayloadOverrideKey0 = new NotificationPayloadOverrideKey((DeviceType) null, class0);
      NotificationPayloadOverrideKey notificationPayloadOverrideKey1 = new NotificationPayloadOverrideKey((DeviceType) null, class0);
      boolean boolean0 = notificationPayloadOverrideKey0.equals(notificationPayloadOverrideKey1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<WNSDevicePayload> class0 = WNSDevicePayload.class;
      NotificationPayloadOverrideKey notificationPayloadOverrideKey0 = new NotificationPayloadOverrideKey((DeviceType) null, (Class<? extends DevicePayloadOverride>) null);
      NotificationPayloadOverrideKey notificationPayloadOverrideKey1 = new NotificationPayloadOverrideKey((DeviceType) null, class0);
      boolean boolean0 = notificationPayloadOverrideKey1.equals(notificationPayloadOverrideKey0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object object0 = new Object();
      NotificationPayloadOverrideKey notificationPayloadOverrideKey0 = new NotificationPayloadOverrideKey((DeviceType) null, (Class<? extends DevicePayloadOverride>) null);
      boolean boolean0 = notificationPayloadOverrideKey0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NotificationPayloadOverrideKey notificationPayloadOverrideKey0 = new NotificationPayloadOverrideKey((DeviceType) null, (Class<? extends DevicePayloadOverride>) null);
      boolean boolean0 = notificationPayloadOverrideKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<WNSDevicePayload> class0 = WNSDevicePayload.class;
      NotificationPayloadOverrideKey notificationPayloadOverrideKey0 = new NotificationPayloadOverrideKey((DeviceType) null, class0);
      boolean boolean0 = notificationPayloadOverrideKey0.equals(notificationPayloadOverrideKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NotificationPayloadOverrideKey notificationPayloadOverrideKey0 = new NotificationPayloadOverrideKey((DeviceType) null, (Class<? extends DevicePayloadOverride>) null);
      NotificationPayloadOverrideKey notificationPayloadOverrideKey1 = new NotificationPayloadOverrideKey((DeviceType) null, (Class<? extends DevicePayloadOverride>) null);
      boolean boolean0 = notificationPayloadOverrideKey0.equals(notificationPayloadOverrideKey1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NotificationPayloadOverrideKey notificationPayloadOverrideKey0 = new NotificationPayloadOverrideKey((DeviceType) null, (Class<? extends DevicePayloadOverride>) null);
      DeviceType deviceType0 = notificationPayloadOverrideKey0.getDeviceType();
      assertNull(deviceType0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NotificationPayloadOverrideKey notificationPayloadOverrideKey0 = new NotificationPayloadOverrideKey((DeviceType) null, (Class<? extends DevicePayloadOverride>) null);
      String string0 = notificationPayloadOverrideKey0.toString();
      assertEquals("NotificationPayloadOverrideKey{deviceType=null, clazz=null}", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NotificationPayloadOverrideKey notificationPayloadOverrideKey0 = new NotificationPayloadOverrideKey((DeviceType) null, (Class<? extends DevicePayloadOverride>) null);
      Class<? extends DevicePayloadOverride> class0 = notificationPayloadOverrideKey0.getOverrideClass();
      assertNull(class0);
  }
}
