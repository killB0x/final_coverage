/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 17:24:34 GMT 2022
 */

package com.urbanairship.api.push.parse.audience;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.urbanairship.api.push.model.audience.CompoundSelector;
import com.urbanairship.api.push.model.audience.Selector;
import com.urbanairship.api.push.model.audience.SelectorType;
import com.urbanairship.api.push.model.audience.ValueSelector;
import com.urbanairship.api.push.parse.audience.Validation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Validation_ESTest extends Validation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        Validation.validate((ValueSelector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.urbanairship.api.push.parse.audience.Validation", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        Validation.validate((CompoundSelector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.urbanairship.api.push.parse.audience.Validation", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CompoundSelector compoundSelector0 = mock(CompoundSelector.class, new ViolatedAssumptionAnswer());
      doReturn((SelectorType) null).when(compoundSelector0).getType();
      // Undeclared exception!
      try { 
        Validation.validate((Selector) compoundSelector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.urbanairship.api.push.parse.audience.Validation", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ValueSelector valueSelector0 = mock(ValueSelector.class, new ViolatedAssumptionAnswer());
      doReturn((SelectorType) null).when(valueSelector0).getType();
      // Undeclared exception!
      try { 
        Validation.validate((Selector) valueSelector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.urbanairship.api.push.parse.audience.Validation", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Selector selector0 = Validation.validate((Selector) null);
      assertNull(selector0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Validation validation0 = new Validation();
  }
}
