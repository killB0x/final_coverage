/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 17:30:01 GMT 2022
 */

package com.urbanairship.api.push.model.notification.ios;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.urbanairship.api.push.model.notification.ios.Crop;
import com.urbanairship.api.push.model.notification.ios.IOSMediaOptions;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IOSMediaOptions_ESTest extends IOSMediaOptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IOSMediaOptions.Builder iOSMediaOptions_Builder0 = IOSMediaOptions.newBuilder();
      Crop crop0 = mock(Crop.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(crop0).toString();
      IOSMediaOptions.Builder iOSMediaOptions_Builder1 = iOSMediaOptions_Builder0.setCrop(crop0);
      IOSMediaOptions iOSMediaOptions0 = iOSMediaOptions_Builder1.build();
      iOSMediaOptions0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IOSMediaOptions.Builder iOSMediaOptions_Builder0 = IOSMediaOptions.newBuilder();
      Integer integer0 = new Integer(1);
      iOSMediaOptions_Builder0.setTime(integer0);
      IOSMediaOptions iOSMediaOptions0 = iOSMediaOptions_Builder0.build();
      iOSMediaOptions0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IOSMediaOptions.Builder iOSMediaOptions_Builder0 = IOSMediaOptions.newBuilder();
      IOSMediaOptions iOSMediaOptions0 = iOSMediaOptions_Builder0.build();
      Crop crop0 = mock(Crop.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(crop0).toString();
      iOSMediaOptions_Builder0.setCrop(crop0);
      IOSMediaOptions iOSMediaOptions1 = iOSMediaOptions_Builder0.build();
      boolean boolean0 = iOSMediaOptions0.equals(iOSMediaOptions1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IOSMediaOptions.Builder iOSMediaOptions_Builder0 = IOSMediaOptions.newBuilder();
      IOSMediaOptions iOSMediaOptions0 = iOSMediaOptions_Builder0.build();
      Integer integer0 = new Integer(0);
      IOSMediaOptions.Builder iOSMediaOptions_Builder1 = iOSMediaOptions_Builder0.setTime(integer0);
      IOSMediaOptions iOSMediaOptions1 = iOSMediaOptions_Builder1.build();
      boolean boolean0 = iOSMediaOptions1.equals(iOSMediaOptions0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IOSMediaOptions.Builder iOSMediaOptions_Builder0 = IOSMediaOptions.newBuilder();
      IOSMediaOptions iOSMediaOptions0 = iOSMediaOptions_Builder0.build();
      IOSMediaOptions iOSMediaOptions1 = iOSMediaOptions_Builder0.build();
      boolean boolean0 = iOSMediaOptions1.equals(iOSMediaOptions0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IOSMediaOptions.Builder iOSMediaOptions_Builder0 = IOSMediaOptions.newBuilder();
      IOSMediaOptions iOSMediaOptions0 = iOSMediaOptions_Builder0.build();
      boolean boolean0 = iOSMediaOptions0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IOSMediaOptions.Builder iOSMediaOptions_Builder0 = IOSMediaOptions.newBuilder();
      IOSMediaOptions iOSMediaOptions0 = iOSMediaOptions_Builder0.build();
      boolean boolean0 = iOSMediaOptions0.equals(iOSMediaOptions0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IOSMediaOptions.Builder iOSMediaOptions_Builder0 = IOSMediaOptions.newBuilder();
      IOSMediaOptions iOSMediaOptions0 = iOSMediaOptions_Builder0.build();
      boolean boolean0 = iOSMediaOptions0.equals(iOSMediaOptions_Builder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IOSMediaOptions.Builder iOSMediaOptions_Builder0 = IOSMediaOptions.newBuilder();
      IOSMediaOptions.Builder iOSMediaOptions_Builder1 = iOSMediaOptions_Builder0.setHidden((Boolean) null);
      assertSame(iOSMediaOptions_Builder1, iOSMediaOptions_Builder0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IOSMediaOptions.Builder iOSMediaOptions_Builder0 = IOSMediaOptions.newBuilder();
      IOSMediaOptions iOSMediaOptions0 = iOSMediaOptions_Builder0.build();
      Optional<Integer> optional0 = iOSMediaOptions0.getTime();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IOSMediaOptions.Builder iOSMediaOptions_Builder0 = IOSMediaOptions.newBuilder();
      IOSMediaOptions iOSMediaOptions0 = iOSMediaOptions_Builder0.build();
      Optional<Boolean> optional0 = iOSMediaOptions0.getHidden();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IOSMediaOptions.Builder iOSMediaOptions_Builder0 = IOSMediaOptions.newBuilder();
      IOSMediaOptions iOSMediaOptions0 = iOSMediaOptions_Builder0.build();
      Optional<Crop> optional0 = iOSMediaOptions0.getCrop();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IOSMediaOptions.Builder iOSMediaOptions_Builder0 = IOSMediaOptions.newBuilder();
      IOSMediaOptions iOSMediaOptions0 = iOSMediaOptions_Builder0.build();
      String string0 = iOSMediaOptions0.toString();
      assertEquals("IOSMediaOptions{time=Optional.empty, crop=Optional.empty}", string0);
  }
}
