/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 19:16:51 GMT 2022
 */

package com.urbanairship.api.push.model.notification.ios;

import org.junit.Test;
import static org.junit.Assert.*;
import com.urbanairship.api.push.model.notification.ios.IOSInterruptionLevel;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IOSInterruptionLevel_ESTest extends IOSInterruptionLevel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Optional<IOSInterruptionLevel> optional0 = IOSInterruptionLevel.find("passive");
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IOSInterruptionLevel[] iOSInterruptionLevelArray0 = IOSInterruptionLevel.values();
      assertEquals(4, iOSInterruptionLevelArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IOSInterruptionLevel iOSInterruptionLevel0 = IOSInterruptionLevel.valueOf("PASSIVE");
      assertEquals("passive", iOSInterruptionLevel0.getInterruptionLevel());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IOSInterruptionLevel iOSInterruptionLevel0 = IOSInterruptionLevel.TIME_SENSITIVE;
      String string0 = iOSInterruptionLevel0.getInterruptionLevel();
      assertEquals("time-sensitive", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Optional<IOSInterruptionLevel> optional0 = IOSInterruptionLevel.find("time-sensitive");
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Optional<IOSInterruptionLevel> optional0 = IOSInterruptionLevel.find("CRITICAL");
      assertNotNull(optional0);
  }
}
