/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 17:22:49 GMT 2022
 */

package com.urbanairship.api.push.model.notification.ios;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.urbanairship.api.push.model.notification.ios.IOSMediaContent;
import com.urbanairship.api.push.model.notification.ios.IOSMediaOptions;
import com.urbanairship.api.push.model.notification.ios.MediaAttachment;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MediaAttachment_ESTest extends MediaAttachment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MediaAttachment.Builder mediaAttachment_Builder0 = MediaAttachment.newBuilder();
      IOSMediaContent iOSMediaContent0 = mock(IOSMediaContent.class, new ViolatedAssumptionAnswer());
      MediaAttachment.Builder mediaAttachment_Builder1 = mediaAttachment_Builder0.setContent(iOSMediaContent0);
      assertSame(mediaAttachment_Builder0, mediaAttachment_Builder1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MediaAttachment.Builder mediaAttachment_Builder0 = MediaAttachment.newBuilder();
      // Undeclared exception!
      try { 
        mediaAttachment_Builder0.build();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("com.urbanairship.api.push.model.notification.ios.MediaAttachment$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MediaAttachment.Builder mediaAttachment_Builder0 = MediaAttachment.newBuilder();
      IOSMediaOptions iOSMediaOptions0 = mock(IOSMediaOptions.class, new ViolatedAssumptionAnswer());
      MediaAttachment.Builder mediaAttachment_Builder1 = mediaAttachment_Builder0.setOptions(iOSMediaOptions0);
      assertSame(mediaAttachment_Builder0, mediaAttachment_Builder1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MediaAttachment.Builder mediaAttachment_Builder0 = MediaAttachment.newBuilder();
      MediaAttachment.Builder mediaAttachment_Builder1 = mediaAttachment_Builder0.setUrl(", options=");
      assertSame(mediaAttachment_Builder1, mediaAttachment_Builder0);
  }
}
