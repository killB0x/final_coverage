/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 18:13:35 GMT 2022
 */

package com.urbanairship.api.segments.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.urbanairship.api.common.model.ErrorDetails;
import com.urbanairship.api.push.model.audience.Selector;
import com.urbanairship.api.segments.model.SegmentView;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SegmentView_ESTest extends SegmentView_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      ErrorDetails errorDetails0 = new ErrorDetails("tag", "tag");
      segmentView_Builder0.setErrorDetails(errorDetails0);
      SegmentView segmentView0 = segmentView_Builder0.build();
      ErrorDetails errorDetails1 = segmentView0.getErrorDetails();
      assertSame(errorDetails1, errorDetails0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      segmentView_Builder0.setError("com.urbanairship.api.segments.model.SegmentView$Builder");
      SegmentView segmentView0 = segmentView_Builder0.build();
      String string0 = segmentView0.getError();
      assertEquals("com.urbanairship.api.segments.model.SegmentView$Builder", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      segmentView_Builder0.setDisplayName("com.urbanairship.api.common.model.APIModelObject");
      SegmentView segmentView0 = segmentView_Builder0.build();
      String string0 = segmentView0.getDisplayName();
      assertEquals("com.urbanairship.api.common.model.APIModelObject", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      Selector selector0 = mock(Selector.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(selector0).toString();
      SegmentView.Builder segmentView_Builder1 = segmentView_Builder0.setCriteria(selector0);
      SegmentView segmentView0 = segmentView_Builder1.build();
      Selector selector1 = segmentView0.getCriteria();
      assertSame(selector1, selector0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      ErrorDetails errorDetails0 = new ErrorDetails("tag", "tag");
      SegmentView.Builder segmentView_Builder1 = segmentView_Builder0.setErrorDetails(errorDetails0);
      SegmentView segmentView0 = segmentView_Builder1.build();
      // Undeclared exception!
      try { 
        segmentView0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.common.model.ErrorDetails", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      SegmentView segmentView0 = segmentView_Builder0.build();
      ErrorDetails errorDetails0 = new ErrorDetails("BI:t6QlEjUYp;", "`e&j:Tc{F");
      SegmentView.Builder segmentView_Builder1 = segmentView_Builder0.setErrorDetails(errorDetails0);
      SegmentView segmentView1 = segmentView_Builder1.build();
      boolean boolean0 = segmentView0.equals(segmentView1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      SegmentView segmentView0 = segmentView_Builder0.build();
      segmentView_Builder0.setError("com.urbanairship.api.segments.model.SegmentView$Builder");
      SegmentView segmentView1 = segmentView_Builder0.build();
      boolean boolean0 = segmentView0.equals(segmentView1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      SegmentView segmentView0 = segmentView_Builder0.build();
      SegmentView.Builder segmentView_Builder1 = segmentView_Builder0.setDisplayName("G L");
      SegmentView segmentView1 = segmentView_Builder1.build();
      boolean boolean0 = segmentView0.equals(segmentView1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      SegmentView segmentView0 = segmentView_Builder0.build();
      Selector selector0 = mock(Selector.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(selector0).toString();
      SegmentView.Builder segmentView_Builder1 = segmentView_Builder0.setCriteria(selector0);
      SegmentView segmentView1 = segmentView_Builder1.build();
      boolean boolean0 = segmentView0.equals(segmentView1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      SegmentView segmentView0 = segmentView_Builder0.build();
      SegmentView segmentView1 = segmentView_Builder0.build();
      boolean boolean0 = segmentView0.equals(segmentView1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      SegmentView segmentView0 = segmentView_Builder0.build();
      boolean boolean0 = segmentView0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      SegmentView segmentView0 = segmentView_Builder0.build();
      boolean boolean0 = segmentView0.equals(segmentView0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      SegmentView segmentView0 = segmentView_Builder0.build();
      boolean boolean0 = segmentView0.equals("com.urbanairship.api.segments.model.SegmentView$Builder");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      SegmentView.Builder segmentView_Builder1 = segmentView_Builder0.setDisplayName("");
      SegmentView segmentView0 = segmentView_Builder1.build();
      String string0 = segmentView0.getDisplayName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      segmentView_Builder0.setError("");
      SegmentView segmentView0 = segmentView_Builder0.build();
      String string0 = segmentView0.getError();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      SegmentView segmentView0 = segmentView_Builder0.build();
      String string0 = segmentView0.getError();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      SegmentView segmentView0 = segmentView_Builder0.build();
      Selector selector0 = segmentView0.getCriteria();
      assertNull(selector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      SegmentView segmentView0 = segmentView_Builder0.build();
      String string0 = segmentView0.toString();
      assertEquals("SegmentView{criteria=null, displayName='null', error='null', errorDetails=null}", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      SegmentView segmentView0 = segmentView_Builder0.build();
      String string0 = segmentView0.getDisplayName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      SegmentView segmentView0 = segmentView_Builder0.build();
      segmentView0.hashCode();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SegmentView.Builder segmentView_Builder0 = SegmentView.newBuilder();
      SegmentView segmentView0 = segmentView_Builder0.build();
      ErrorDetails errorDetails0 = segmentView0.getErrorDetails();
      assertNull(errorDetails0);
  }
}
