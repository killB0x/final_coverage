/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 19:01:34 GMT 2022
 */

package com.urbanairship.api.segments.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.urbanairship.api.common.model.ErrorDetails;
import com.urbanairship.api.segments.model.SegmentRequestResponse;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SegmentRequestResponse_ESTest extends SegmentRequestResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      ErrorDetails errorDetails0 = new ErrorDetails("com.urbanairship.api.segments.model.SegmentRequestResponse", "");
      Integer integer0 = new Integer(0);
      SegmentRequestResponse segmentRequestResponse0 = new SegmentRequestResponse(boolean0, ":frMUs=w.x:\"", "uJ?|AL'quwF15Qo;*Ok", errorDetails0, integer0, "SegmentRequestResponse{segmentId='", "");
      boolean boolean1 = segmentRequestResponse0.equals((Object) null);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      ErrorDetails errorDetails0 = new ErrorDetails(":frMUs=w.x:\"", ":frMUs=w.x:\"");
      Integer integer0 = new Integer(0);
      SegmentRequestResponse segmentRequestResponse0 = new SegmentRequestResponse(boolean0, ":frMUs=w.x:\"", "uJ?|AL'quwF15Qo;*Ok", errorDetails0, integer0, "SegmentRequesiResppnse{segmentId='", ":frMUs=w.x:\"");
      boolean boolean1 = segmentRequestResponse0.equals(segmentRequestResponse0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      ErrorDetails errorDetails0 = new ErrorDetails("ErrorDetails{error=", "ErrorDetails{error=");
      Integer integer0 = new Integer(2203);
      SegmentRequestResponse segmentRequestResponse0 = new SegmentRequestResponse(boolean0, "ErrorDetails{error=", "ErrorDetails{error=", errorDetails0, integer0, "ErrorDetails{error=", "ErrorDetails{error=");
      Object object0 = new Object();
      boolean boolean1 = segmentRequestResponse0.equals(object0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      ErrorDetails errorDetails0 = new ErrorDetails("ErrorDetails{error=", "ErrorDetails{error=");
      Integer integer0 = new Integer(2203);
      SegmentRequestResponse segmentRequestResponse0 = new SegmentRequestResponse(boolean0, "ErrorDetails{error=", "ErrorDetails{error=", errorDetails0, integer0, "ErrorDetails{error=", "ErrorDetails{error=");
      Optional<String> optional0 = segmentRequestResponse0.getSegmentId();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      ErrorDetails errorDetails0 = new ErrorDetails("ErrorDetails{error=", "ErrorDetails{error=");
      Integer integer0 = new Integer(2203);
      SegmentRequestResponse segmentRequestResponse0 = new SegmentRequestResponse(boolean0, "ErrorDetails{error=", "ErrorDetails{error=", errorDetails0, integer0, "ErrorDetails{error=", "ErrorDetails{error=");
      String string0 = segmentRequestResponse0.toString();
      assertEquals("SegmentRequestResponse{segmentId='ErrorDetails{error='}", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      ErrorDetails errorDetails0 = new ErrorDetails("ErrorDetails{error=", "ErrorDetails{error=");
      Integer integer0 = new Integer(2203);
      SegmentRequestResponse segmentRequestResponse0 = new SegmentRequestResponse(boolean0, "ErrorDetails{error=", "ErrorDetails{error=", errorDetails0, integer0, "ErrorDetails{error=", "ErrorDetails{error=");
      // Undeclared exception!
      try { 
        segmentRequestResponse0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.common.model.GenericResponse", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      SegmentRequestResponse segmentRequestResponse0 = new SegmentRequestResponse(boolean0, "\", \"message\" : \"", "\", \"message\" : \"", (ErrorDetails) null, (Integer) null, "\", \"message\" : \"", "\", \"message\" : \"");
      SegmentRequestResponse segmentRequestResponse1 = new SegmentRequestResponse(boolean0, "\", \"message\" : \"", "\", \"message\" : \"", (ErrorDetails) null, (Integer) null, "\", \"message\" : \"", "\", \"message\" : \"");
      // Undeclared exception!
      try { 
        segmentRequestResponse1.equals(segmentRequestResponse0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.common.model.GenericResponse", e);
      }
  }
}
