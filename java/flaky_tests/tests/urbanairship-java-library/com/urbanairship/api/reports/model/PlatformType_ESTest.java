/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 19:17:52 GMT 2022
 */

package com.urbanairship.api.reports.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.urbanairship.api.reports.model.PlatformType;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PlatformType_ESTest extends PlatformType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Optional<PlatformType> optional0 = PlatformType.find("variant");
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PlatformType[] platformTypeArray0 = PlatformType.values();
      assertEquals(6, platformTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PlatformType platformType0 = PlatformType.valueOf("ALL");
      assertEquals(PlatformType.ALL, platformType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PlatformType platformType0 = PlatformType.AMAZON;
      String string0 = platformType0.getIdentifier();
      assertEquals("amazon", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Optional<PlatformType> optional0 = PlatformType.find("amazon");
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Optional<PlatformType> optional0 = PlatformType.find("BNYd-QFdy2e:+");
      assertNotNull(optional0);
  }
}
