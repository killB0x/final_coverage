/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 17:49:21 GMT 2022
 */

package com.urbanairship.api.reports.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.urbanairship.api.reports.model.ExperimentVariantStats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExperimentVariantStats_ESTest extends ExperimentVariantStats_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer((-2240));
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("`Fs`^5dM{[\"Lk-?4s", integer0, integer0, integer0, integer0);
      String string0 = experimentVariantStats0.getType();
      assertEquals("`Fs`^5dM{[\"Lk-?4s", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("", integer0, (Integer) null, integer0, integer0);
      String string0 = experimentVariantStats0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("", integer0, integer0, integer0, integer0);
      Integer integer1 = experimentVariantStats0.getSends();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(754);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("NeeWq$'8$I!0A~*J%O", integer0, integer0, integer0, (Integer) null);
      Integer integer1 = experimentVariantStats0.getSends();
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer((-2240));
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("`Fs`^5dM{[\"Lk-?4s", integer0, integer0, integer0, integer0);
      Integer integer1 = experimentVariantStats0.getSends();
      assertEquals((-2240), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      Integer integer1 = Integer.getInteger("", 0);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("", integer0, (Integer) null, integer1, integer0);
      Integer integer2 = experimentVariantStats0.getInfluencedResponses();
      assertNotNull(integer2);
      assertEquals(0, (int)integer2);
      assertEquals((-1), (int)experimentVariantStats0.getSends());
      assertEquals((-1), (int)experimentVariantStats0.getDirectResponses());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats((String) null, (Integer) null, (Integer) null, (Integer) null, (Integer) null);
      Integer integer0 = experimentVariantStats0.getInfluencedResponses();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer((-2240));
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("`Fs`^5dM{[\"Lk-?4s", integer0, integer0, integer0, integer0);
      Integer integer1 = experimentVariantStats0.getInfluencedResponses();
      assertEquals((-2240), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("", integer0, integer0, integer0, integer0);
      Integer integer1 = experimentVariantStats0.getIndirectResponses();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(1074);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("#8,enGDV.;x()v_Ye", (Integer) null, integer0, integer0, integer0);
      Integer integer1 = experimentVariantStats0.getIndirectResponses();
      assertEquals(1074, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats((String) null, integer0, integer0, integer0, integer0);
      Integer integer1 = experimentVariantStats0.getIndirectResponses();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("", integer0, integer0, integer0, integer0);
      Integer integer1 = experimentVariantStats0.getDirectResponses();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(1627);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats((String) null, integer0, integer0, integer0, integer0);
      Integer integer1 = experimentVariantStats0.getDirectResponses();
      assertEquals(1627, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer((-2240));
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("`Fs`^5dM{[\"Lk-?4s", integer0, integer0, integer0, integer0);
      Integer integer1 = experimentVariantStats0.getDirectResponses();
      assertEquals((-2240), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(1627);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats((String) null, integer0, integer0, integer0, integer0);
      Integer integer1 = new Integer((-158));
      ExperimentVariantStats experimentVariantStats1 = new ExperimentVariantStats((String) null, integer0, integer0, integer0, integer1);
      boolean boolean0 = experimentVariantStats0.equals(experimentVariantStats1);
      assertEquals(1627, (int)experimentVariantStats1.getInfluencedResponses());
      assertFalse(boolean0);
      assertEquals(1627, (int)experimentVariantStats1.getDirectResponses());
      assertEquals(1627, (int)experimentVariantStats1.getIndirectResponses());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(2360);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("ExperimentVariantStats{type='", integer0, integer0, integer0, integer1);
      ExperimentVariantStats experimentVariantStats1 = new ExperimentVariantStats("ExperimentVariantStats{type='", integer0, integer0, integer1, integer0);
      boolean boolean0 = experimentVariantStats0.equals(experimentVariantStats1);
      assertEquals(1, (int)experimentVariantStats0.getIndirectResponses());
      assertEquals(2360, (int)experimentVariantStats0.getSends());
      assertEquals(1, (int)experimentVariantStats0.getDirectResponses());
      assertEquals(2360, (int)experimentVariantStats1.getInfluencedResponses());
      assertEquals(1, (int)experimentVariantStats1.getIndirectResponses());
      assertEquals(1, (int)experimentVariantStats1.getDirectResponses());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer((-189));
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("r;(=`OoC8rB", (Integer) null, (Integer) null, integer0, (Integer) null);
      ExperimentVariantStats experimentVariantStats1 = new ExperimentVariantStats("r;(=`OoC8rB", (Integer) null, integer0, (Integer) null, integer0);
      boolean boolean0 = experimentVariantStats0.equals(experimentVariantStats1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("ExprimentVariatStats{type='", (Integer) null, (Integer) null, (Integer) null, (Integer) null);
      Integer integer0 = new Integer((-122));
      ExperimentVariantStats experimentVariantStats1 = new ExperimentVariantStats("ExprimentVariatStats{type='", integer0, (Integer) null, integer0, integer0);
      boolean boolean0 = experimentVariantStats0.equals(experimentVariantStats1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("N6AHpMY8-", (Integer) null, (Integer) null, (Integer) null, (Integer) null);
      ExperimentVariantStats experimentVariantStats1 = new ExperimentVariantStats("8|d\u0003Bxd", (Integer) null, (Integer) null, (Integer) null, (Integer) null);
      boolean boolean0 = experimentVariantStats0.equals(experimentVariantStats1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Integer integer0 = new Integer(1627);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats((String) null, integer0, integer0, integer0, integer0);
      ExperimentVariantStats experimentVariantStats1 = new ExperimentVariantStats((String) null, integer0, integer0, integer0, integer0);
      boolean boolean0 = experimentVariantStats0.equals(experimentVariantStats1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats((String) null, (Integer) null, (Integer) null, (Integer) null, (Integer) null);
      boolean boolean0 = experimentVariantStats0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats("", integer0, integer0, integer0, integer0);
      boolean boolean0 = experimentVariantStats0.equals(experimentVariantStats0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = new Integer(1627);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats((String) null, integer0, integer0, integer0, integer0);
      Object object0 = new Object();
      boolean boolean0 = experimentVariantStats0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Integer integer0 = new Integer(1627);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats((String) null, integer0, integer0, integer0, integer0);
      String string0 = experimentVariantStats0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = new Integer(1627);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats((String) null, integer0, integer0, integer0, integer0);
      String string0 = experimentVariantStats0.toString();
      assertEquals("ExperimentVariantStats{type='null, directResponses=1627, indirectResponses=1627, influencedResponses=1627, sends=1627}", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Integer integer0 = new Integer(3511);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats((String) null, integer0, integer0, integer0, integer0);
      Integer integer1 = experimentVariantStats0.getSends();
      assertEquals(3511, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats((String) null, (Integer) null, (Integer) null, (Integer) null, (Integer) null);
      Integer integer0 = experimentVariantStats0.getIndirectResponses();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Integer integer0 = new Integer(1627);
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats((String) null, integer0, integer0, integer0, integer0);
      Integer integer1 = experimentVariantStats0.getInfluencedResponses();
      assertEquals(1627, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats((String) null, (Integer) null, (Integer) null, (Integer) null, (Integer) null);
      Integer integer0 = experimentVariantStats0.getDirectResponses();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ExperimentVariantStats experimentVariantStats0 = new ExperimentVariantStats((String) null, (Integer) null, (Integer) null, (Integer) null, (Integer) null);
      experimentVariantStats0.hashCode();
  }
}
