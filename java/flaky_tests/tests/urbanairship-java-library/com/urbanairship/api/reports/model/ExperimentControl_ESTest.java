/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 18:04:36 GMT 2022
 */

package com.urbanairship.api.reports.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.urbanairship.api.reports.model.ExperimentControl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExperimentControl_ESTest extends ExperimentControl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Float float0 = new Float((-1820.44F));
      Integer integer0 = new Integer(0);
      ExperimentControl experimentControl0 = new ExperimentControl(float0, integer0, integer0, float0);
      Integer integer1 = experimentControl0.getSends();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Float float0 = new Float(953.03F);
      Integer integer0 = new Integer(1353);
      ExperimentControl experimentControl0 = new ExperimentControl(float0, integer0, integer0, float0);
      Integer integer1 = experimentControl0.getSends();
      assertEquals(1353, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer((-565));
      ExperimentControl experimentControl0 = new ExperimentControl((Float) null, integer0, integer0, (Float) null);
      Integer integer1 = experimentControl0.getSends();
      assertEquals((-565), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(1835);
      Float float0 = new Float(0.0F);
      ExperimentControl experimentControl0 = new ExperimentControl((Float) null, integer0, integer0, float0);
      Float float1 = experimentControl0.getResponsesRatePct();
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Float float0 = new Float((float) 1);
      ExperimentControl experimentControl0 = new ExperimentControl(float0, (Integer) null, (Integer) null, float0);
      Float float1 = experimentControl0.getResponsesRatePct();
      assertEquals(1.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(1353);
      Float float0 = new Float((-1.0));
      ExperimentControl experimentControl0 = new ExperimentControl(float0, (Integer) null, integer0, float0);
      Float float1 = experimentControl0.getResponsesRatePct();
      assertEquals((-1.0F), (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Float float0 = new Float(2212.6523F);
      Integer integer0 = new Integer(0);
      ExperimentControl experimentControl0 = new ExperimentControl(float0, integer0, integer0, float0);
      Integer integer1 = experimentControl0.getResponses();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Float float0 = new Float(953.03F);
      Integer integer0 = new Integer(1353);
      ExperimentControl experimentControl0 = new ExperimentControl(float0, integer0, integer0, float0);
      Integer integer1 = experimentControl0.getResponses();
      assertEquals(1353, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExperimentControl experimentControl0 = new ExperimentControl((Float) null, (Integer) null, (Integer) null, (Float) null);
      Integer integer0 = experimentControl0.getResponses();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Float float0 = new Float(0.0);
      Integer integer0 = new Integer((-1));
      ExperimentControl experimentControl0 = new ExperimentControl(float0, integer0, integer0, float0);
      Float float1 = experimentControl0.getAudiencePct();
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Float float0 = new Float(953.03F);
      Integer integer0 = new Integer(1353);
      ExperimentControl experimentControl0 = new ExperimentControl(float0, integer0, integer0, float0);
      Float float1 = experimentControl0.getAudiencePct();
      assertEquals(953.03F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Float float0 = new Float(953.03F);
      Integer integer0 = new Integer(1353);
      Float float1 = new Float((-1.0));
      ExperimentControl experimentControl0 = new ExperimentControl(float1, (Integer) null, integer0, float0);
      Float float2 = experimentControl0.getAudiencePct();
      assertEquals(953.03F, experimentControl0.getResponsesRatePct(), 0.01F);
      assertEquals((-1.0F), (float)float2, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer((-565));
      ExperimentControl experimentControl0 = new ExperimentControl((Float) null, integer0, integer0, (Float) null);
      Float float0 = new Float(0.0F);
      ExperimentControl experimentControl1 = new ExperimentControl((Float) null, integer0, integer0, float0);
      boolean boolean0 = experimentControl0.equals(experimentControl1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer((-2566));
      ExperimentControl experimentControl0 = new ExperimentControl((Float) null, integer0, integer0, (Float) null);
      Integer integer1 = new Integer(1);
      ExperimentControl experimentControl1 = new ExperimentControl((Float) null, integer0, integer1, (Float) null);
      boolean boolean0 = experimentControl0.equals(experimentControl1);
      assertFalse(boolean0);
      assertEquals((-2566), (int)experimentControl1.getSends());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer((-864));
      Float float0 = new Float((float) (-864));
      ExperimentControl experimentControl0 = new ExperimentControl(float0, integer0, integer0, float0);
      ExperimentControl experimentControl1 = new ExperimentControl(float0, (Integer) null, (Integer) null, float0);
      boolean boolean0 = experimentControl0.equals(experimentControl1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Float float0 = new Float(953.03F);
      Integer integer0 = new Integer(1353);
      ExperimentControl experimentControl0 = new ExperimentControl(float0, integer0, integer0, float0);
      Float float1 = new Float((-1.0));
      ExperimentControl experimentControl1 = new ExperimentControl(float1, (Integer) null, integer0, float1);
      boolean boolean0 = experimentControl0.equals(experimentControl1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Float float0 = new Float((-657.9071F));
      Integer integer0 = new Integer((-939));
      ExperimentControl experimentControl0 = new ExperimentControl(float0, integer0, integer0, float0);
      boolean boolean0 = experimentControl0.equals(float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExperimentControl experimentControl0 = new ExperimentControl((Float) null, (Integer) null, (Integer) null, (Float) null);
      boolean boolean0 = experimentControl0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer integer0 = new Integer((-2550));
      ExperimentControl experimentControl0 = new ExperimentControl((Float) null, integer0, integer0, (Float) null);
      boolean boolean0 = experimentControl0.equals(experimentControl0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Float float0 = new Float((-657.9071F));
      Integer integer0 = new Integer((-939));
      ExperimentControl experimentControl0 = new ExperimentControl(float0, integer0, integer0, float0);
      ExperimentControl experimentControl1 = new ExperimentControl(float0, integer0, integer0, float0);
      boolean boolean0 = experimentControl0.equals(experimentControl1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Float float0 = new Float((-657.9071F));
      Integer integer0 = new Integer((-939));
      ExperimentControl experimentControl0 = new ExperimentControl(float0, integer0, integer0, float0);
      String string0 = experimentControl0.toString();
      assertEquals("ExperimentControl{audiencePct=-657.9071, sends=-939, responses=-939, responsesRatePct=-657.9071}", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Float float0 = new Float((-657.9071F));
      Integer integer0 = new Integer((-939));
      ExperimentControl experimentControl0 = new ExperimentControl(float0, integer0, integer0, float0);
      experimentControl0.hashCode();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = new Integer((-2550));
      ExperimentControl experimentControl0 = new ExperimentControl((Float) null, integer0, integer0, (Float) null);
      Integer integer1 = experimentControl0.getResponses();
      assertEquals((-2550), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ExperimentControl experimentControl0 = new ExperimentControl((Float) null, (Integer) null, (Integer) null, (Float) null);
      Integer integer0 = experimentControl0.getSends();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = new Integer((-565));
      ExperimentControl experimentControl0 = new ExperimentControl((Float) null, integer0, integer0, (Float) null);
      Float float0 = experimentControl0.getResponsesRatePct();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ExperimentControl experimentControl0 = new ExperimentControl((Float) null, (Integer) null, (Integer) null, (Float) null);
      Float float0 = experimentControl0.getAudiencePct();
      assertNull(float0);
  }
}
