/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 18:03:17 GMT 2022
 */

package com.urbanairship.api.nameduser.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.urbanairship.api.common.model.ErrorDetails;
import com.urbanairship.api.nameduser.model.NamedUserAttributeResponse;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NamedUserAttributeResponse_ESTest extends NamedUserAttributeResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder0 = NamedUserAttributeResponse.newBuilder();
      namedUserAttributeResponse_Builder0.setOk(true);
      NamedUserAttributeResponse namedUserAttributeResponse0 = namedUserAttributeResponse_Builder0.build();
      boolean boolean0 = namedUserAttributeResponse0.isOk();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder0 = new NamedUserAttributeResponse.Builder();
      NamedUserAttributeResponse namedUserAttributeResponse0 = namedUserAttributeResponse_Builder0.build();
      Object object0 = new Object();
      boolean boolean0 = namedUserAttributeResponse0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder0 = NamedUserAttributeResponse.newBuilder();
      NamedUserAttributeResponse namedUserAttributeResponse0 = namedUserAttributeResponse_Builder0.build();
      boolean boolean0 = namedUserAttributeResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder0 = NamedUserAttributeResponse.newBuilder();
      NamedUserAttributeResponse namedUserAttributeResponse0 = namedUserAttributeResponse_Builder0.build();
      boolean boolean0 = namedUserAttributeResponse0.equals(namedUserAttributeResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder0 = new NamedUserAttributeResponse.Builder();
      NamedUserAttributeResponse namedUserAttributeResponse0 = namedUserAttributeResponse_Builder0.build();
      NamedUserAttributeResponse namedUserAttributeResponse1 = namedUserAttributeResponse_Builder0.build();
      // Undeclared exception!
      try { 
        namedUserAttributeResponse0.equals(namedUserAttributeResponse1);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.nameduser.model.NamedUserAttributeResponse", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder0 = new NamedUserAttributeResponse.Builder();
      ErrorDetails errorDetails0 = new ErrorDetails("jL<", "jL<");
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder1 = namedUserAttributeResponse_Builder0.setErrorDetails(errorDetails0);
      assertSame(namedUserAttributeResponse_Builder1, namedUserAttributeResponse_Builder0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder0 = new NamedUserAttributeResponse.Builder();
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder1 = namedUserAttributeResponse_Builder0.setWarning("jL<");
      assertSame(namedUserAttributeResponse_Builder1, namedUserAttributeResponse_Builder0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder0 = new NamedUserAttributeResponse.Builder();
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder1 = namedUserAttributeResponse_Builder0.setError("jL<");
      assertSame(namedUserAttributeResponse_Builder0, namedUserAttributeResponse_Builder1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder0 = new NamedUserAttributeResponse.Builder();
      NamedUserAttributeResponse namedUserAttributeResponse0 = namedUserAttributeResponse_Builder0.build();
      String string0 = namedUserAttributeResponse0.toString();
      assertEquals("NamedUserAttributeResponse{ok=false, error=Optional.empty, errorDetails=Optional.empty, warning=Optional.empty}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder0 = new NamedUserAttributeResponse.Builder();
      NamedUserAttributeResponse namedUserAttributeResponse0 = namedUserAttributeResponse_Builder0.build();
      Optional<String> optional0 = namedUserAttributeResponse0.getError();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder0 = new NamedUserAttributeResponse.Builder();
      NamedUserAttributeResponse namedUserAttributeResponse0 = namedUserAttributeResponse_Builder0.build();
      Optional<String> optional0 = namedUserAttributeResponse0.getWarning();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder0 = new NamedUserAttributeResponse.Builder();
      NamedUserAttributeResponse namedUserAttributeResponse0 = namedUserAttributeResponse_Builder0.build();
      boolean boolean0 = namedUserAttributeResponse0.isOk();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder0 = new NamedUserAttributeResponse.Builder();
      NamedUserAttributeResponse namedUserAttributeResponse0 = namedUserAttributeResponse_Builder0.build();
      Optional<ErrorDetails> optional0 = namedUserAttributeResponse0.getErrorDetails();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NamedUserAttributeResponse.Builder namedUserAttributeResponse_Builder0 = NamedUserAttributeResponse.newBuilder();
      NamedUserAttributeResponse namedUserAttributeResponse0 = namedUserAttributeResponse_Builder0.build();
      // Undeclared exception!
      try { 
        namedUserAttributeResponse0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.urbanairship.api.nameduser.model.NamedUserAttributeResponse", e);
      }
  }
}
