/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 19:51:40 GMT 2022
 */

package iot.jcypher.graph;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.graph.GrLabel;
import iot.jcypher.graph.SyncState;
import iot.jcypher.graph.internal.ChangeListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PersistableItem_ESTest extends PersistableItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GrLabel grLabel0 = new GrLabel("?rsdzGY");
      ChangeListener changeListener0 = mock(ChangeListener.class, new ViolatedAssumptionAnswer());
      grLabel0.addChangeListener(changeListener0);
      SyncState syncState0 = SyncState.CHANGED;
      grLabel0.fireChanged(syncState0, syncState0);
      assertEquals("?rsdzGY", grLabel0.getName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GrLabel grLabel0 = new GrLabel("?rsdzGY");
      SyncState syncState0 = SyncState.CHANGED;
      grLabel0.fireChanged(syncState0, syncState0);
      assertEquals("?rsdzGY", grLabel0.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GrLabel grLabel0 = new GrLabel(" _8SUov8`|tV6i");
      ChangeListener changeListener0 = mock(ChangeListener.class, new ViolatedAssumptionAnswer());
      grLabel0.addChangeListener(changeListener0);
      grLabel0.remove();
      assertEquals(" _8SUov8`|tV6i", grLabel0.getName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GrLabel grLabel0 = new GrLabel("");
      grLabel0.addChangeListener((ChangeListener) null);
      // Undeclared exception!
      try { 
        grLabel0.notifyState();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.graph.PersistableItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GrLabel grLabel0 = new GrLabel("iot.jcypher.query.values.operators.OPERATOR$Number");
      SyncState syncState0 = SyncState.NEW;
      grLabel0.addChangeListener((ChangeListener) null);
      // Undeclared exception!
      try { 
        grLabel0.fireChanged(syncState0, syncState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.graph.PersistableItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GrLabel grLabel0 = new GrLabel(" _8SUov8`|tV6i");
      ChangeListener changeListener0 = mock(ChangeListener.class, new ViolatedAssumptionAnswer());
      grLabel0.addChangeListener(changeListener0);
      grLabel0.notifyState();
      assertEquals(" _8SUov8`|tV6i", grLabel0.getName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GrLabel grLabel0 = new GrLabel(" _8SUov8`|tV6i");
      grLabel0.notifyState();
      assertEquals(" _8SUov8`|tV6i", grLabel0.getName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GrLabel grLabel0 = new GrLabel("");
      grLabel0.addChangeListener((ChangeListener) null);
      // Undeclared exception!
      try { 
        grLabel0.remove();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.graph.PersistableItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GrLabel grLabel0 = new GrLabel("");
      grLabel0.addChangeListener((ChangeListener) null);
      grLabel0.removeChangeListener((ChangeListener) null);
      grLabel0.remove();
      assertEquals("", grLabel0.getName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GrLabel grLabel0 = new GrLabel(" _8SUov8`|tV6i");
      ChangeListener changeListener0 = mock(ChangeListener.class, new ViolatedAssumptionAnswer());
      grLabel0.removeChangeListener(changeListener0);
      assertEquals(" _8SUov8`|tV6i", grLabel0.getName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GrLabel grLabel0 = new GrLabel("stringProperty");
      grLabel0.addChangeListener((ChangeListener) null);
      grLabel0.addChangeListener((ChangeListener) null);
      assertEquals("stringProperty", grLabel0.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GrLabel grLabel0 = new GrLabel(" _8SUov8`|tV6i");
      grLabel0.remove();
      grLabel0.remove();
      assertEquals(" _8SUov8`|tV6i", grLabel0.getName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GrLabel grLabel0 = new GrLabel(" _8SUov8`|tV6i");
      SyncState syncState0 = SyncState.SYNC;
      grLabel0.setSyncState(syncState0);
      grLabel0.remove();
      assertEquals(" _8SUov8`|tV6i", grLabel0.getName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GrLabel grLabel0 = new GrLabel(" _8SUov8`|tV6i");
      SyncState syncState0 = grLabel0.getSyncState();
      assertEquals(SyncState.NEW, syncState0);
  }
}
