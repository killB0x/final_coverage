/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 21:11:00 GMT 2022
 */

package iot.jcypher.domain.mapping.surrogate;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.domain.mapping.FieldMapping;
import iot.jcypher.domain.mapping.surrogate.AbstractSurrogate;
import iot.jcypher.domain.mapping.surrogate.Array;
import iot.jcypher.domain.mapping.surrogate.Collection;
import iot.jcypher.domain.mapping.surrogate.Deferred2DO;
import iot.jcypher.domain.mapping.surrogate.Map;
import iot.jcypher.domain.mapping.surrogate.MapEntry;
import iot.jcypher.domain.mapping.surrogate.Surrogate2MapEntry;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Deferred2DO_ESTest extends Deferred2DO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Deferred2DO deferred2DO0 = new Deferred2DO((FieldMapping) null, (AbstractSurrogate) null, (Object) null);
      AbstractSurrogate abstractSurrogate0 = deferred2DO0.getDeferred();
      assertNull(abstractSurrogate0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Deferred2DO deferred2DO0 = new Deferred2DO((FieldMapping) null, (AbstractSurrogate) null, (Object) null);
      deferred2DO0.downInTree = null;
      // Undeclared exception!
      try { 
        deferred2DO0.breakLoops();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domain.mapping.surrogate.Deferred2DO", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Array array0 = new Array();
      Deferred2DO deferred2DO0 = new Deferred2DO((FieldMapping) null, array0, (Object) null);
      MapEntry mapEntry0 = new MapEntry();
      Surrogate2MapEntry surrogate2MapEntry0 = new Surrogate2MapEntry("", mapEntry0, array0);
      deferred2DO0.addDownInTree(surrogate2MapEntry0);
      deferred2DO0.breakLoops();
      assertTrue(deferred2DO0.isRoot());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Collection collection0 = new Collection();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Map map0 = new Map(hashMap0);
      Deferred2DO deferred2DO0 = new Deferred2DO((FieldMapping) null, collection0, map0);
      boolean boolean0 = deferred2DO0.isRoot();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Collection collection0 = new Collection();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Map map0 = new Map(hashMap0);
      Deferred2DO deferred2DO0 = new Deferred2DO((FieldMapping) null, collection0, map0);
      AbstractSurrogate abstractSurrogate0 = deferred2DO0.getDeferred();
      assertSame(collection0, abstractSurrogate0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Map map0 = new Map();
      Deferred2DO deferred2DO0 = new Deferred2DO((FieldMapping) null, map0, (Object) null);
      // Undeclared exception!
      try { 
        deferred2DO0.performUpdate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domain.mapping.surrogate.Deferred2DO", e);
      }
  }
}
