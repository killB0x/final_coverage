/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 21:00:02 GMT 2022
 */

package iot.jcypher.domain.mapping;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.domain.mapping.NodeLabelMapping;
import iot.jcypher.graph.GrLabel;
import iot.jcypher.graph.GrNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NodeLabelMapping_ESTest extends NodeLabelMapping_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NodeLabelMapping nodeLabelMapping0 = new NodeLabelMapping((String) null);
      String string0 = nodeLabelMapping0.getLabel();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NodeLabelMapping nodeLabelMapping0 = new NodeLabelMapping("");
      String string0 = nodeLabelMapping0.getLabel();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NodeLabelMapping nodeLabelMapping0 = new NodeLabelMapping("1&I_XKvZv[");
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        nodeLabelMapping0.mapLabel(object0, (GrNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domain.mapping.NodeLabelMapping", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NodeLabelMapping nodeLabelMapping0 = new NodeLabelMapping("");
      Object object0 = new Object();
      GrNode grNode0 = mock(GrNode.class, new ViolatedAssumptionAnswer());
      doReturn((GrLabel) null).when(grNode0).addLabel(anyString());
      doReturn((GrLabel) null).when(grNode0).getLabel(anyString());
      nodeLabelMapping0.mapLabel(object0, grNode0);
      assertEquals("", nodeLabelMapping0.getLabel());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NodeLabelMapping nodeLabelMapping0 = new NodeLabelMapping("iot.jcypher.graph.GrPropertyContainer");
      GrLabel grLabel0 = mock(GrLabel.class, new ViolatedAssumptionAnswer());
      GrNode grNode0 = mock(GrNode.class, new ViolatedAssumptionAnswer());
      doReturn((GrLabel) null).when(grNode0).addLabel(anyString());
      doReturn((GrLabel) null).when(grNode0).getLabel(anyString());
      nodeLabelMapping0.mapLabel("iot.jcypher.graph.GrPropertyContainer", grNode0);
      assertEquals("iot.jcypher.graph.GrPropertyContainer", nodeLabelMapping0.getLabel());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NodeLabelMapping nodeLabelMapping0 = new NodeLabelMapping((String) null);
      Object object0 = new Object();
      GrNode grNode0 = mock(GrNode.class, new ViolatedAssumptionAnswer());
      nodeLabelMapping0.mapLabel(object0, grNode0);
      assertNull(nodeLabelMapping0.getLabel());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NodeLabelMapping nodeLabelMapping0 = new NodeLabelMapping("iot.jcypher.graph.GrPropertyContainer");
      String string0 = nodeLabelMapping0.getLabel();
      assertEquals("iot.jcypher.graph.GrPropertyContainer", string0);
  }
}
