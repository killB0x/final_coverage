/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 20:51:19 GMT 2022
 */

package iot.jcypher.domainquery;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.database.remote.RemoteDBAccess;
import iot.jcypher.domain.IDomainAccess;
import iot.jcypher.domain.internal.DomainAccess;
import iot.jcypher.domainquery.AbstractDomainQuery;
import iot.jcypher.domainquery.CountQueryResult;
import iot.jcypher.domainquery.DomainQuery;
import iot.jcypher.domainquery.api.DomainObjectMatch;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CountQueryResult_ESTest extends CountQueryResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RemoteDBAccess remoteDBAccess0 = new RemoteDBAccess();
      IDomainAccess.DomainLabelUse iDomainAccess_DomainLabelUse0 = IDomainAccess.DomainLabelUse.NEVER;
      DomainAccess domainAccess0 = new DomainAccess(remoteDBAccess0, "", iDomainAccess_DomainLabelUse0);
      DomainQuery domainQuery0 = new DomainQuery(domainAccess0);
      CountQueryResult countQueryResult0 = new CountQueryResult(domainQuery0);
      countQueryResult0.getDomainQuery();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CountQueryResult countQueryResult0 = new CountQueryResult((AbstractDomainQuery) null);
      // Undeclared exception!
      try { 
        countQueryResult0.countOf((DomainObjectMatch<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.InternalAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CountQueryResult countQueryResult0 = new CountQueryResult((AbstractDomainQuery) null);
      AbstractDomainQuery abstractDomainQuery0 = countQueryResult0.getDomainQuery();
      assertNull(abstractDomainQuery0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RemoteDBAccess remoteDBAccess0 = new RemoteDBAccess();
      IDomainAccess.DomainLabelUse iDomainAccess_DomainLabelUse0 = IDomainAccess.DomainLabelUse.NEVER;
      DomainAccess domainAccess0 = new DomainAccess(remoteDBAccess0, "", iDomainAccess_DomainLabelUse0);
      DomainQuery domainQuery0 = domainAccess0.createQuery();
      CountQueryResult countQueryResult0 = new CountQueryResult(domainQuery0);
      // Undeclared exception!
      try { 
        countQueryResult0.countOf((DomainObjectMatch<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.api.APIAccess", e);
      }
  }
}
