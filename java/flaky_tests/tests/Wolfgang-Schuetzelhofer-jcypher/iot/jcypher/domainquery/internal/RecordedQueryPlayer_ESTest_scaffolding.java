/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Oct 25 18:58:29 GMT 2022
 */

package iot.jcypher.domainquery.internal;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class RecordedQueryPlayer_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "iot.jcypher.domainquery.internal.RecordedQueryPlayer"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(RecordedQueryPlayer_ESTest_scaffolding.class.getClassLoader() ,
      "iot.jcypher.query.writer.JSONWriter",
      "iot.jcypher.query.factories.xpression.X",
      "iot.jcypher.query.writer.PreparedQuery",
      "iot.jcypher.query.values.Operator",
      "iot.jcypher.query.ast.modify.ModifyExpression",
      "iot.jcypher.database.remote.AbstractRemoteDBAccess$2",
      "iot.jcypher.domain.internal.DomainAccess$Exec",
      "iot.jcypher.database.remote.AbstractRemoteDBAccess$1",
      "iot.jcypher.query.api.pattern.Relation",
      "iot.jcypher.domainquery.GDomainQuery",
      "iot.jcypher.query.writer.WriterContext",
      "iot.jcypher.domain.IDomainAccess$DomainLabelUse",
      "iot.jcypher.domain.internal.DomainAccess$PathElement",
      "iot.jcypher.query.writer.ContextAccess",
      "iot.jcypher.query.api.pattern.Property",
      "iot.jcypher.util.QueriesPrintObserver$ContentToObserve",
      "iot.jcypher.domainquery.internal.RecordedQuery$Reference",
      "iot.jcypher.domainquery.DomainQueryResult",
      "iot.jcypher.query.ast.pattern.PatternExpression",
      "iot.jcypher.query.writer.PreparedQuery$PQContext",
      "iot.jcypher.domainquery.internal.RecordedQuery$Assignment",
      "iot.jcypher.domainquery.api.Traverse",
      "iot.jcypher.query.writer.CypherWriter$ReturnCypherWriter",
      "iot.jcypher.query.api.predicate.Concatenator",
      "iot.jcypher.query.api.collection.ICollectExpression",
      "iot.jcypher.domain.IDomainAccess",
      "iot.jcypher.query.ast.ClauseType",
      "iot.jcypher.domainquery.internal.QueryRecorder$QueriesPerThread",
      "iot.jcypher.domain.internal.DomainAccess$ReResolve",
      "iot.jcypher.domainquery.api.Select",
      "iot.jcypher.domainquery.internal.RecordedQuery$Literal",
      "iot.jcypher.concurrency.Locking",
      "iot.jcypher.domainquery.api.DomainObjectMatch",
      "iot.jcypher.query.api.modify.ModifyTerminal",
      "iot.jcypher.query.values.operators.OPTYPE$String",
      "iot.jcypher.query.ast.returns.ReturnCollection",
      "iot.jcypher.domainquery.QueryPersistor",
      "iot.jcypher.domainquery.internal.QueryRecorder$Literal",
      "iot.jcypher.query.values.JcElement",
      "iot.jcypher.query.ast.pattern.PatternProperty",
      "iot.jcypher.domainquery.internal.RecordedQuery$1",
      "iot.jcypher.query.api.modify.ModifyFactory",
      "iot.jcypher.query.factories.clause.ON_CREATE",
      "iot.jcypher.query.writer.QueryParamSet",
      "iot.jcypher.domain.genericmodel.DOType",
      "iot.jcypher.domainquery.api.Collect",
      "iot.jcypher.query.ast.returns.ReturnPattern",
      "iot.jcypher.query.values.operators.OPERATOR$PropertyContainer",
      "iot.jcypher.query.ast.returns.ReturnAggregate",
      "iot.jcypher.query.writer.Format",
      "iot.jcypher.domainquery.AbstractDomainQuery",
      "iot.jcypher.query.api.modify.CopyProperties",
      "iot.jcypher.query.ast.pattern.PatternNode",
      "iot.jcypher.query.writer.CypherWriter$PrimitiveCypherWriter",
      "iot.jcypher.database.remote.AbstractRemoteDBAccess",
      "iot.jcypher.query.values.IHas",
      "iot.jcypher.database.IDBAccess",
      "iot.jcypher.domain.SyncInfo",
      "iot.jcypher.query.factories.clause.RETURN",
      "iot.jcypher.domain.internal.DomainAccessFactoryImpl$SyncType",
      "iot.jcypher.domainquery.internal.Settings$1",
      "iot.jcypher.database.remote.RemoteDBAccess",
      "iot.jcypher.domain.genericmodel.DomainObject",
      "iot.jcypher.query.api.collection.IPredicateFunction",
      "iot.jcypher.query.api.pattern.Node",
      "iot.jcypher.domain.internal.DomainAccess$IRecursionExit",
      "iot.jcypher.domainquery.internal.Settings",
      "iot.jcypher.domainquery.internal.QueryExecutor$MappingInfo",
      "iot.jcypher.query.values.operators.OPTYPE$PropertyContainer",
      "iot.jcypher.domainquery.internal.QueryExecutor$RecordedQueryContext",
      "iot.jcypher.database.internal.PlannerStrategy",
      "iot.jcypher.domain.mapping.surrogate.SurrogateState",
      "iot.jcypher.query.ast.modify.ModifyExpression$ModifyAction",
      "iot.jcypher.domainquery.InternalAccess",
      "iot.jcypher.domainquery.ast.IASTObject",
      "iot.jcypher.query.JcQueryParameter",
      "iot.jcypher.domain.genericmodel.internal.InternalAccess",
      "iot.jcypher.query.api.pattern.IElement",
      "iot.jcypher.domainquery.internal.QueryRecorder$1",
      "iot.jcypher.domain.internal.DomainAccess$QueryNode2ResultNode",
      "iot.jcypher.domain.internal.DomainAccess$GenericDomainAccess",
      "iot.jcypher.domainquery.api.APIObject",
      "iot.jcypher.domain.internal.DomainAccessSync",
      "iot.jcypher.query.api.returns.AggregateDistinct",
      "iot.jcypher.query.ast.pattern.PatternElement",
      "iot.jcypher.domain.internal.DomainAccess$FillModelContext",
      "iot.jcypher.domainquery.internal.QueryRecorder$PlaceHolder",
      "iot.jcypher.domainquery.internal.QueryExecutor",
      "iot.jcypher.domain.IGenericDomainAccess",
      "iot.jcypher.query.api.collection.DoConcat",
      "iot.jcypher.domainquery.api.BooleanOperation",
      "iot.jcypher.query.writer.CypherWriter$PatternCypherWriter",
      "iot.jcypher.query.factories.clause.OPTIONAL_MATCH",
      "iot.jcypher.query.values.JcCollection",
      "iot.jcypher.domainquery.internal.ReplayedQueryContext",
      "iot.jcypher.domainquery.api.Order",
      "iot.jcypher.domain.internal.CurrentDomain",
      "iot.jcypher.domain.internal.DomainAccess",
      "iot.jcypher.query.api.IClause",
      "iot.jcypher.query.result.JcError",
      "iot.jcypher.domain.genericmodel.DOTypeBuilderFactory",
      "iot.jcypher.query.writer.CypherWriter",
      "iot.jcypher.domainquery.QueryLoader",
      "iot.jcypher.domain.internal.DomainAccess$UpdateContext",
      "iot.jcypher.query.api.returns.RSortable",
      "iot.jcypher.query.writer.JSONWriter$Statement",
      "iot.jcypher.query.api.returns.RElement",
      "iot.jcypher.query.result.JcResultException",
      "iot.jcypher.query.JcQuery",
      "iot.jcypher.domainquery.internal.IASTObjectsContainer",
      "iot.jcypher.query.api.returns.RDistinct",
      "iot.jcypher.query.writer.IQueryParam",
      "iot.jcypher.domainquery.api.APIAccess",
      "iot.jcypher.query.ast.returns.ReturnValue",
      "iot.jcypher.domain.internal.DomainAccess$DomainInfo",
      "iot.jcypher.domain.internal.DomainAccess$ExecContext",
      "iot.jcypher.domainquery.internal.QueryRecorder$RecQueryHolder",
      "iot.jcypher.domainquery.api.TerminalResult",
      "iot.jcypher.query.api.pattern.Element",
      "iot.jcypher.query.values.JcPath",
      "iot.jcypher.query.values.JcProperty",
      "iot.jcypher.domainquery.CountQueryResult",
      "iot.jcypher.database.internal.IDBAccessInit",
      "iot.jcypher.domainquery.ast.Parameter",
      "iot.jcypher.domain.internal.DomainAccess$DomainAccessHandler",
      "iot.jcypher.domain.internal.DomainAccess$InternalDomainAccess",
      "iot.jcypher.query.values.JcString",
      "iot.jcypher.domainquery.internal.QueryRecorder$Reference",
      "iot.jcypher.domain.internal.DomainAccess$DomainAccessHandler$DBAccessWrapper",
      "iot.jcypher.query.ast.separate.SeparateExpression",
      "iot.jcypher.query.api.APIObjectAccess",
      "iot.jcypher.domain.mapping.CompoundObjectMapping",
      "iot.jcypher.domain.mapping.DomainState$IRelation",
      "iot.jcypher.domain.mapping.DomainState",
      "iot.jcypher.domain.genericmodel.internal.DomainModel",
      "iot.jcypher.domainquery.api.IPredicateOperand1",
      "iot.jcypher.query.values.ValueElement",
      "iot.jcypher.query.api.pattern.Path",
      "iot.jcypher.domain.internal.DomainAccess$ClosureCalculator",
      "iot.jcypher.query.values.IOperatorOrFunction",
      "iot.jcypher.query.values.JcNode",
      "iot.jcypher.query.values.JcValue",
      "iot.jcypher.domain.internal.DomainAccessSync$GenericDomainAccessSync",
      "iot.jcypher.domain.mapping.ObjectMapping",
      "iot.jcypher.query.api.returns.Aggregate",
      "iot.jcypher.database.DBVersion",
      "iot.jcypher.domain.internal.DomainAccess$ClosureQueryContext",
      "iot.jcypher.domainquery.internal.QueryRecorder",
      "iot.jcypher.domainquery.internal.RecordedQueryPlayer",
      "iot.jcypher.util.MultiOutputStream",
      "iot.jcypher.util.QueriesPrintObserver",
      "iot.jcypher.query.values.JcLabel",
      "iot.jcypher.query.api.returns.RCount",
      "iot.jcypher.domainquery.internal.RecordedQuery",
      "iot.jcypher.query.api.modify.Set",
      "iot.jcypher.domainquery.internal.RecordedQuery$Statement",
      "iot.jcypher.query.factories.clause.MERGE",
      "iot.jcypher.domainquery.internal.RecordedQuery$Invocation",
      "iot.jcypher.domainquery.internal.RecordedQuery$DOMatchRef",
      "iot.jcypher.query.values.JcBoolean",
      "iot.jcypher.query.values.ValueWriter",
      "iot.jcypher.transaction.ITransaction",
      "iot.jcypher.query.values.JcNumber",
      "iot.jcypher.query.api.pattern.XFactory",
      "iot.jcypher.query.writer.CypherWriter$STCypherWriter",
      "iot.jcypher.query.ast.returns.ReturnElement",
      "iot.jcypher.query.ast.returns.ReturnExpression",
      "iot.jcypher.query.values.JcRelation",
      "iot.jcypher.domain.internal.IIntDomainAccess",
      "iot.jcypher.query.values.IFragment",
      "iot.jcypher.util.Util",
      "iot.jcypher.query.values.MathFunctions",
      "iot.jcypher.query.writer.QueryParam",
      "iot.jcypher.query.ast.pattern.PatternRelation",
      "iot.jcypher.query.writer.PreparedQueries",
      "iot.jcypher.domainquery.DomainQuery",
      "iot.jcypher.query.ast.returns.ReturnBoolean",
      "iot.jcypher.query.values.JcPrimitive",
      "iot.jcypher.query.api.APIObject",
      "iot.jcypher.query.api.returns.IRElement",
      "iot.jcypher.query.factories.clause.SEPARATE",
      "iot.jcypher.query.factories.clause.WITH",
      "iot.jcypher.query.api.returns.RTerminal",
      "iot.jcypher.domain.internal.DomainAccess$SurrogateChangeLog",
      "iot.jcypher.util.QueriesPrintObserver$QueryToObserve",
      "iot.jcypher.query.ast.ASTNode",
      "iot.jcypher.query.writer.Pretty",
      "iot.jcypher.domain.internal.DomainAccess$QueryRelation2ResultRelation",
      "iot.jcypher.query.api.returns.RFactory",
      "iot.jcypher.query.values.FunctionInstance",
      "iot.jcypher.domain.internal.DomainAccess$DomRelation2ResultRelation",
      "iot.jcypher.query.values.operators.OPERATOR$Common"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("iot.jcypher.domain.internal.DomainAccessSync", false, RecordedQueryPlayer_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(RecordedQueryPlayer_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "iot.jcypher.domainquery.internal.RecordedQueryPlayer",
      "iot.jcypher.database.internal.PlannerStrategy",
      "iot.jcypher.domainquery.internal.Settings$1",
      "iot.jcypher.domainquery.internal.Settings",
      "iot.jcypher.domainquery.internal.QueryRecorder$1",
      "iot.jcypher.domainquery.internal.QueryRecorder",
      "iot.jcypher.database.remote.AbstractRemoteDBAccess",
      "iot.jcypher.database.remote.RemoteDBAccess",
      "iot.jcypher.domain.internal.DomainAccess",
      "iot.jcypher.domain.internal.DomainAccess$DomainAccessHandler",
      "iot.jcypher.domain.internal.DomainAccess$DomainAccessHandler$DBAccessWrapper",
      "iot.jcypher.domain.mapping.DomainState",
      "iot.jcypher.domain.mapping.surrogate.SurrogateState",
      "iot.jcypher.domain.internal.DomainAccess$InternalDomainAccess",
      "iot.jcypher.domain.genericmodel.internal.InternalAccess",
      "iot.jcypher.domain.genericmodel.internal.DomainModel",
      "iot.jcypher.domain.internal.DomainAccess$GenericDomainAccess",
      "iot.jcypher.domainquery.internal.ReplayedQueryContext",
      "iot.jcypher.domainquery.AbstractDomainQuery",
      "iot.jcypher.domainquery.GDomainQuery",
      "iot.jcypher.domainquery.internal.QueryExecutor",
      "iot.jcypher.domainquery.InternalAccess",
      "iot.jcypher.domainquery.internal.RecordedQuery",
      "iot.jcypher.database.internal.DBUtil",
      "iot.jcypher.query.values.ValueElement",
      "iot.jcypher.query.values.JcValue",
      "iot.jcypher.query.values.JcElement",
      "iot.jcypher.query.values.JcNode",
      "iot.jcypher.query.values.JcRelation",
      "iot.jcypher.query.JcQuery",
      "iot.jcypher.query.factories.clause.MATCH",
      "iot.jcypher.query.factories.xpression.X",
      "iot.jcypher.query.api.pattern.XFactory",
      "iot.jcypher.query.ast.ASTNode",
      "iot.jcypher.query.ast.pattern.PatternExpression",
      "iot.jcypher.query.ast.pattern.PatternElement",
      "iot.jcypher.query.ast.pattern.PatternNode",
      "iot.jcypher.query.api.APIObject",
      "iot.jcypher.query.api.pattern.Element",
      "iot.jcypher.query.api.pattern.Node",
      "iot.jcypher.query.api.APIObjectAccess",
      "iot.jcypher.query.ast.ClauseType",
      "iot.jcypher.query.factories.clause.SEPARATE",
      "iot.jcypher.query.ast.separate.SeparateExpression",
      "iot.jcypher.query.ast.pattern.PatternRelation",
      "iot.jcypher.query.ast.pattern.PatternRelation$Direction",
      "iot.jcypher.query.api.pattern.Relation",
      "iot.jcypher.query.factories.clause.RETURN",
      "iot.jcypher.query.api.returns.RFactory",
      "iot.jcypher.query.ast.returns.ReturnExpression",
      "iot.jcypher.query.ast.returns.ReturnValue",
      "iot.jcypher.query.ast.returns.ReturnElement",
      "iot.jcypher.query.api.returns.RTerminal",
      "iot.jcypher.query.writer.WriterContext",
      "iot.jcypher.query.writer.Format",
      "iot.jcypher.query.writer.ContextAccess",
      "iot.jcypher.query.writer.JSONWriter",
      "iot.jcypher.query.writer.PreparedQueries",
      "iot.jcypher.query.writer.QueryParam",
      "iot.jcypher.query.writer.PreparedQuery",
      "iot.jcypher.query.writer.PreparedQuery$PQContext",
      "iot.jcypher.query.writer.CypherWriter",
      "iot.jcypher.database.DBVersion",
      "iot.jcypher.query.writer.Pretty",
      "iot.jcypher.query.writer.CypherWriter$PatternCypherWriter",
      "iot.jcypher.query.values.ValueWriter",
      "iot.jcypher.query.writer.CypherWriter$ReturnCypherWriter",
      "iot.jcypher.query.writer.QueryParamSet",
      "iot.jcypher.query.writer.JSONWriter$Statement",
      "iot.jcypher.domain.internal.DomainAccessSync",
      "iot.jcypher.domain.internal.DomainAccessSync$GenericDomainAccessSync",
      "iot.jcypher.domainquery.DomainQuery",
      "iot.jcypher.transaction.internal.AbstractTransaction",
      "iot.jcypher.database.remote.RTransactionImpl",
      "iot.jcypher.domain.internal.CurrentDomain",
      "iot.jcypher.domain.mapping.MappingUtil",
      "iot.jcypher.domain.internal.DomainAccess$ExecContext",
      "iot.jcypher.query.factories.clause.MERGE",
      "iot.jcypher.query.ast.pattern.PatternProperty",
      "iot.jcypher.query.api.pattern.Property",
      "iot.jcypher.query.values.JcProperty",
      "iot.jcypher.query.values.Operator",
      "iot.jcypher.query.values.operators.OPTYPE$PropertyContainer",
      "iot.jcypher.query.values.operators.OPERATOR$PropertyContainer",
      "iot.jcypher.domainquery.internal.QueryRecorder$Literal",
      "iot.jcypher.query.factories.clause.ON_CREATE",
      "iot.jcypher.query.api.modify.ModifyFactory",
      "iot.jcypher.query.ast.modify.ModifyExpression",
      "iot.jcypher.query.ast.modify.ModifyExpression$ModifyAction",
      "iot.jcypher.query.api.modify.Set",
      "iot.jcypher.query.api.modify.ModifyTerminal",
      "iot.jcypher.query.factories.clause.WITH",
      "iot.jcypher.query.api.returns.RElement",
      "iot.jcypher.query.api.returns.RSortable",
      "iot.jcypher.query.factories.clause.OPTIONAL_MATCH",
      "iot.jcypher.query.api.returns.RDistinct",
      "iot.jcypher.query.api.returns.RCount",
      "iot.jcypher.query.values.JcPrimitive",
      "iot.jcypher.query.values.JcNumber",
      "iot.jcypher.domain.internal.DomainAccess$Exec",
      "iot.jcypher.util.QueriesPrintObserver$QueryToObserve",
      "iot.jcypher.util.Util",
      "iot.jcypher.util.MultiOutputStream",
      "iot.jcypher.util.QueriesPrintObserver",
      "iot.jcypher.util.QueriesPrintObserver$ContentToObserve",
      "iot.jcypher.query.writer.CypherWriter$PrimitiveCypherWriter",
      "iot.jcypher.query.writer.CypherWriter$STCypherWriter",
      "iot.jcypher.query.values.operators.OPTYPE$String",
      "iot.jcypher.query.values.operators.OPERATOR$Common",
      "iot.jcypher.domainquery.internal.QueryRecorder$RecQueryHolder",
      "iot.jcypher.domainquery.internal.QueryRecorder$QueriesPerThread",
      "iot.jcypher.domainquery.internal.QueryExecutor$RecordedQueryContext",
      "iot.jcypher.query.values.ValueAccess",
      "iot.jcypher.domainquery.internal.RecordedQuery$DOMatchRef",
      "iot.jcypher.domainquery.internal.RecordedQuery$Literal",
      "iot.jcypher.domainquery.ast.Parameter",
      "iot.jcypher.domainquery.internal.RecordedQuery$Reference",
      "iot.jcypher.domainquery.QueryLoader",
      "iot.jcypher.database.remote.AbstractRemoteDBAccess$1",
      "iot.jcypher.query.factories.clause.DO",
      "iot.jcypher.domain.SyncInfo",
      "iot.jcypher.domain.genericmodel.internal.DomainModel$TypeBuilderFactory",
      "iot.jcypher.domainquery.QueryPersistor",
      "iot.jcypher.domain.internal.DomainAccess$UpdateContext",
      "iot.jcypher.domain.internal.DomainAccess$SurrogateChangeLog",
      "iot.jcypher.domain.internal.DomainAccess$ClosureCalculator",
      "iot.jcypher.graph.internal.LockUtil$Removes",
      "iot.jcypher.graph.Graph",
      "iot.jcypher.query.result.util.ResultHandler$1",
      "iot.jcypher.query.result.util.ResultHandler",
      "iot.jcypher.query.result.util.ResultHandler$LocalElements",
      "iot.jcypher.graph.GrAccess",
      "iot.jcypher.graph.SyncState",
      "iot.jcypher.query.result.util.ResultHandler$AContentHandler",
      "iot.jcypher.query.result.util.JSONContentHandler",
      "iot.jcypher.domainquery.internal.QueryExecutor$MappingInfo",
      "iot.jcypher.domainquery.api.APIAccess",
      "iot.jcypher.domainquery.api.DomainObjectMatch",
      "iot.jcypher.domainquery.internal.RecordedQuery$Invocation",
      "iot.jcypher.domainquery.internal.RecordedQueryToString",
      "iot.jcypher.domainquery.internal.RecordedQueryToString$Context",
      "iot.jcypher.domainquery.internal.RecordedQueryToString$Indent",
      "iot.jcypher.domain.genericmodel.internal.DomainModel$TransactionState",
      "iot.jcypher.domainquery.internal.RecordedQuery$Assignment",
      "iot.jcypher.domain.mapping.DefaultObjectMappingCreator",
      "iot.jcypher.domain.mapping.ObjectMapping",
      "iot.jcypher.domain.mapping.SimpleObjectMapping",
      "iot.jcypher.domain.genericmodel.DomainObject",
      "iot.jcypher.domainquery.ast.ConcatenateExpression",
      "iot.jcypher.domainquery.ast.ConcatenateExpression$Concatenator",
      "iot.jcypher.domainquery.api.APIObject",
      "iot.jcypher.domainquery.api.TerminalResult",
      "iot.jcypher.domainquery.DomainQueryResult",
      "iot.jcypher.domain.genericmodel.InternalAccess",
      "iot.jcypher.domainquery.CountQueryResult",
      "iot.jcypher.concurrency.QExecution",
      "iot.jcypher.concurrency.QExecution$ExecType",
      "iot.jcypher.domainquery.internal.QueryExecutor$QueryContext",
      "iot.jcypher.domainquery.internal.QueryExecutor$QueryBuilder",
      "iot.jcypher.domainquery.internal.QueryExecutor$QueryBuilder$ClauseBuilder",
      "iot.jcypher.domainquery.internal.QueryExecutor$QueryBuilder$ClauseBuilderContext",
      "iot.jcypher.concurrency.Locking"
    );
  }
}
