/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:11:22 GMT 2022
 */

package iot.jcypher.domainquery.api;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.domainquery.api.DomainObjectMatch;
import iot.jcypher.domainquery.api.TraversalStep;
import iot.jcypher.domainquery.api.Traverse;
import iot.jcypher.domainquery.ast.IASTObject;
import iot.jcypher.domainquery.ast.TraversalExpression;
import iot.jcypher.domainquery.ast.UnionExpression;
import iot.jcypher.domainquery.internal.QueryExecutor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Traverse_ESTest extends Traverse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TraversalExpression traversalExpression0 = new TraversalExpression((DomainObjectMatch<?>) null, (QueryExecutor) null);
      Traverse traverse0 = new Traverse(traversalExpression0);
      TraversalStep traversalStep0 = traverse0.FORTH("M4w;}&0G!@^d1NFs/yK");
      assertNotNull(traversalStep0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Traverse traverse0 = new Traverse((TraversalExpression) null);
      UnionExpression unionExpression0 = new UnionExpression(false);
      traverse0.astObject = (IASTObject) unionExpression0;
      // Undeclared exception!
      try { 
        traverse0.FORTH("");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.domainquery.ast.UnionExpression cannot be cast to class iot.jcypher.domainquery.ast.TraversalExpression (iot.jcypher.domainquery.ast.UnionExpression and iot.jcypher.domainquery.ast.TraversalExpression are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @64a4e331)
         //
         verifyException("iot.jcypher.domainquery.api.Traverse", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Traverse traverse0 = new Traverse((TraversalExpression) null);
      // Undeclared exception!
      try { 
        traverse0.BACK("M=^ q[)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.api.Traverse", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Traverse traverse0 = new Traverse((TraversalExpression) null);
      UnionExpression unionExpression0 = new UnionExpression(false);
      traverse0.astObject = (IASTObject) unionExpression0;
      // Undeclared exception!
      try { 
        traverse0.BACK("_REPLAY_QUERY");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.domainquery.ast.UnionExpression cannot be cast to class iot.jcypher.domainquery.ast.TraversalExpression (iot.jcypher.domainquery.ast.UnionExpression and iot.jcypher.domainquery.ast.TraversalExpression are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @64a4e331)
         //
         verifyException("iot.jcypher.domainquery.api.Traverse", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Traverse traverse0 = new Traverse((TraversalExpression) null);
      // Undeclared exception!
      try { 
        traverse0.FORTH("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.api.Traverse", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TraversalExpression traversalExpression0 = new TraversalExpression((DomainObjectMatch<?>) null, (QueryExecutor) null);
      Traverse traverse0 = new Traverse(traversalExpression0);
      TraversalStep traversalStep0 = traverse0.BACK("");
      assertNotNull(traversalStep0);
  }
}
