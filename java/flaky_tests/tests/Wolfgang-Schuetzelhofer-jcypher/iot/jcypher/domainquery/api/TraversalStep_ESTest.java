/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 20:52:33 GMT 2022
 */

package iot.jcypher.domainquery.api;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.database.IDBAccess;
import iot.jcypher.database.remote.RemoteDBAccess;
import iot.jcypher.domain.IDomainAccess;
import iot.jcypher.domain.internal.DomainAccess;
import iot.jcypher.domainquery.AbstractDomainQuery;
import iot.jcypher.domainquery.GDomainQuery;
import iot.jcypher.domainquery.api.DomainObjectMatch;
import iot.jcypher.domainquery.api.TraversalStep;
import iot.jcypher.domainquery.ast.ConcatenateExpression;
import iot.jcypher.domainquery.ast.FromPreviousQueryExpression;
import iot.jcypher.domainquery.ast.IASTObject;
import iot.jcypher.domainquery.ast.TraversalExpression;
import iot.jcypher.domainquery.ast.UnionExpression;
import iot.jcypher.domainquery.internal.QueryExecutor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TraversalStep_ESTest extends TraversalStep_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TraversalExpression traversalExpression0 = new TraversalExpression((DomainObjectMatch<?>) null, (QueryExecutor) null);
      TraversalStep traversalStep0 = new TraversalStep(traversalExpression0);
      TraversalStep traversalStep1 = traversalStep0.FORTH((String) null);
      TraversalStep traversalStep2 = traversalStep1.DISTANCE(1, 1040);
      assertNotSame(traversalStep2, traversalStep0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TraversalStep traversalStep0 = new TraversalStep((TraversalExpression) null);
      traversalStep0.astObject = (IASTObject) null;
      ConcatenateExpression.Concatenator concatenateExpression_Concatenator0 = ConcatenateExpression.Concatenator.OR;
      ConcatenateExpression concatenateExpression0 = new ConcatenateExpression(concatenateExpression_Concatenator0);
      traversalStep0.astObject = (IASTObject) concatenateExpression0;
      // Undeclared exception!
      try { 
        traversalStep0.TO_GENERIC("q65}]Tfsm'\"'@'hT");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.domainquery.ast.ConcatenateExpression cannot be cast to class iot.jcypher.domainquery.ast.TraversalExpression (iot.jcypher.domainquery.ast.ConcatenateExpression and iot.jcypher.domainquery.ast.TraversalExpression are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5edd68d6)
         //
         verifyException("iot.jcypher.domainquery.api.TraversalStep", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RemoteDBAccess remoteDBAccess0 = new RemoteDBAccess();
      IDomainAccess.DomainLabelUse iDomainAccess_DomainLabelUse0 = IDomainAccess.DomainLabelUse.NEVER;
      DomainAccess domainAccess0 = new DomainAccess(remoteDBAccess0, "P[~~KDBjiy", iDomainAccess_DomainLabelUse0);
      QueryExecutor queryExecutor0 = new QueryExecutor(domainAccess0);
      TraversalExpression traversalExpression0 = new TraversalExpression((DomainObjectMatch<?>) null, queryExecutor0);
      TraversalStep traversalStep0 = new TraversalStep(traversalExpression0);
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        traversalStep0.TO(class0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // javax/json/Json
         //
         verifyException("iot.jcypher.query.writer.JSONWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TraversalStep traversalStep0 = new TraversalStep((TraversalExpression) null);
      UnionExpression unionExpression0 = new UnionExpression(true);
      traversalStep0.astObject = (IASTObject) unionExpression0;
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        traversalStep0.TO(class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.domainquery.ast.UnionExpression cannot be cast to class iot.jcypher.domainquery.ast.TraversalExpression (iot.jcypher.domainquery.ast.UnionExpression and iot.jcypher.domainquery.ast.TraversalExpression are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5edd68d6)
         //
         verifyException("iot.jcypher.domainquery.api.TraversalStep", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TraversalStep traversalStep0 = new TraversalStep((TraversalExpression) null);
      // Undeclared exception!
      try { 
        traversalStep0.FORTH("createMatch");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.api.TraversalStep", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TraversalStep traversalStep0 = new TraversalStep((TraversalExpression) null);
      FromPreviousQueryExpression fromPreviousQueryExpression0 = new FromPreviousQueryExpression((DomainObjectMatch<?>) null, (DomainObjectMatch<?>) null);
      traversalStep0.astObject = (IASTObject) fromPreviousQueryExpression0;
      // Undeclared exception!
      try { 
        traversalStep0.FORTH((String) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.domainquery.ast.FromPreviousQueryExpression cannot be cast to class iot.jcypher.domainquery.ast.TraversalExpression (iot.jcypher.domainquery.ast.FromPreviousQueryExpression and iot.jcypher.domainquery.ast.TraversalExpression are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5edd68d6)
         //
         verifyException("iot.jcypher.domainquery.api.TraversalStep", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TraversalStep traversalStep0 = new TraversalStep((TraversalExpression) null);
      // Undeclared exception!
      try { 
        traversalStep0.DISTANCE(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.api.TraversalStep", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TraversalStep traversalStep0 = new TraversalStep((TraversalExpression) null);
      FromPreviousQueryExpression fromPreviousQueryExpression0 = new FromPreviousQueryExpression((DomainObjectMatch<?>) null, (DomainObjectMatch<?>) null);
      traversalStep0.astObject = (IASTObject) fromPreviousQueryExpression0;
      // Undeclared exception!
      try { 
        traversalStep0.DISTANCE((-676), (-676));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.domainquery.ast.FromPreviousQueryExpression cannot be cast to class iot.jcypher.domainquery.ast.TraversalExpression (iot.jcypher.domainquery.ast.FromPreviousQueryExpression and iot.jcypher.domainquery.ast.TraversalExpression are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5edd68d6)
         //
         verifyException("iot.jcypher.domainquery.api.TraversalStep", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TraversalStep traversalStep0 = new TraversalStep((TraversalExpression) null);
      // Undeclared exception!
      try { 
        traversalStep0.BACK("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.api.TraversalStep", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TraversalStep traversalStep0 = new TraversalStep((TraversalExpression) null);
      FromPreviousQueryExpression fromPreviousQueryExpression0 = new FromPreviousQueryExpression((DomainObjectMatch<?>) null, (DomainObjectMatch<?>) null);
      traversalStep0.astObject = (IASTObject) fromPreviousQueryExpression0;
      // Undeclared exception!
      try { 
        traversalStep0.BACK((String) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.domainquery.ast.FromPreviousQueryExpression cannot be cast to class iot.jcypher.domainquery.ast.TraversalExpression (iot.jcypher.domainquery.ast.FromPreviousQueryExpression and iot.jcypher.domainquery.ast.TraversalExpression are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5edd68d6)
         //
         verifyException("iot.jcypher.domainquery.api.TraversalStep", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IDomainAccess.DomainLabelUse iDomainAccess_DomainLabelUse0 = IDomainAccess.DomainLabelUse.ALWAYS;
      DomainAccess domainAccess0 = new DomainAccess((IDBAccess) null, "", iDomainAccess_DomainLabelUse0);
      QueryExecutor queryExecutor0 = new QueryExecutor(domainAccess0);
      TraversalExpression traversalExpression0 = new TraversalExpression((DomainObjectMatch<?>) null, queryExecutor0);
      TraversalStep traversalStep0 = new TraversalStep(traversalExpression0);
      // Undeclared exception!
      try { 
        traversalStep0.TO_GENERIC("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domain.internal.DomainAccess$DomainAccessHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RemoteDBAccess remoteDBAccess0 = new RemoteDBAccess();
      IDomainAccess.DomainLabelUse iDomainAccess_DomainLabelUse0 = IDomainAccess.DomainLabelUse.ALWAYS;
      DomainAccess domainAccess0 = new DomainAccess(remoteDBAccess0, "Uds#q{", iDomainAccess_DomainLabelUse0);
      GDomainQuery gDomainQuery0 = new GDomainQuery(domainAccess0);
      AbstractDomainQuery.IntAccess abstractDomainQuery_IntAccess0 = gDomainQuery0.new IntAccess();
      QueryExecutor queryExecutor0 = abstractDomainQuery_IntAccess0.getQueryExecutor();
      TraversalExpression traversalExpression0 = new TraversalExpression((DomainObjectMatch<?>) null, queryExecutor0);
      TraversalStep traversalStep0 = new TraversalStep(traversalExpression0);
      // Undeclared exception!
      try { 
        traversalStep0.TO_GENERIC("Uds#q{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoClassDefFoundError: javax/json/Json
         //
         verifyException("iot.jcypher.domainquery.api.TraversalStep", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IDomainAccess.DomainLabelUse iDomainAccess_DomainLabelUse0 = IDomainAccess.DomainLabelUse.ALWAYS;
      DomainAccess domainAccess0 = new DomainAccess((IDBAccess) null, "", iDomainAccess_DomainLabelUse0);
      QueryExecutor queryExecutor0 = new QueryExecutor(domainAccess0);
      TraversalExpression traversalExpression0 = new TraversalExpression((DomainObjectMatch<?>) null, queryExecutor0);
      TraversalStep traversalStep0 = new TraversalStep(traversalExpression0);
      TraversalStep traversalStep1 = traversalStep0.BACK("");
      assertNotSame(traversalStep1, traversalStep0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IDomainAccess.DomainLabelUse iDomainAccess_DomainLabelUse0 = IDomainAccess.DomainLabelUse.ALWAYS;
      DomainAccess domainAccess0 = new DomainAccess((IDBAccess) null, "", iDomainAccess_DomainLabelUse0);
      QueryExecutor queryExecutor0 = new QueryExecutor(domainAccess0);
      TraversalExpression traversalExpression0 = new TraversalExpression((DomainObjectMatch<?>) null, queryExecutor0);
      TraversalStep traversalStep0 = new TraversalStep(traversalExpression0);
      // Undeclared exception!
      try { 
        traversalStep0.DISTANCE(1, 991);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TraversalStep traversalStep0 = new TraversalStep((TraversalExpression) null);
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        traversalStep0.TO(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.api.TraversalStep", e);
      }
  }
}
