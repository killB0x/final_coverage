/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 20:58:34 GMT 2022
 */

package iot.jcypher.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.util.QueriesPrintObserver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QueriesPrintObserver_ESTest extends QueriesPrintObserver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QueriesPrintObserver.QueryToObserve queriesPrintObserver_QueryToObserve0 = QueriesPrintObserver.QueryToObserve.DOMAINACCESS_EXECUTE_INTERNAL;
      QueriesPrintObserver.ContentToObserve queriesPrintObserver_ContentToObserve0 = QueriesPrintObserver.ContentToObserve.JSON;
      QueriesPrintObserver.addToEnabledQueries(queriesPrintObserver_QueryToObserve0, queriesPrintObserver_ContentToObserve0);
      // Undeclared exception!
      try { 
        QueriesPrintObserver.removeFromEnabledQueries((QueriesPrintObserver.QueryToObserve) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.util.QueriesPrintObserver", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QueriesPrintObserver.QueryToObserve queriesPrintObserver_QueryToObserve0 = QueriesPrintObserver.QueryToObserve.DOMAINACCESS_EXECUTE_INTERNAL;
      QueriesPrintObserver.ContentToObserve queriesPrintObserver_ContentToObserve0 = QueriesPrintObserver.ContentToObserve.JSON;
      QueriesPrintObserver.addToEnabledQueries(queriesPrintObserver_QueryToObserve0, queriesPrintObserver_ContentToObserve0);
      // Undeclared exception!
      try { 
        QueriesPrintObserver.contentToObserve((QueriesPrintObserver.QueryToObserve) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.util.QueriesPrintObserver", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QueriesPrintObserver.ContentToObserve queriesPrintObserver_ContentToObserve0 = QueriesPrintObserver.ContentToObserve.CYPHER_JSON;
      // Undeclared exception!
      try { 
        QueriesPrintObserver.addToEnabledQueries((QueriesPrintObserver.QueryToObserve) null, queriesPrintObserver_ContentToObserve0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.util.QueriesPrintObserver", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QueriesPrintObserver.QueryToObserve queriesPrintObserver_QueryToObserve0 = QueriesPrintObserver.QueryToObserve.CLOSURE_QUERY;
      String string0 = queriesPrintObserver_QueryToObserve0.getTitle();
      assertEquals("CLOSURE", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QueriesPrintObserver.QueryToObserve queriesPrintObserver_QueryToObserve0 = QueriesPrintObserver.QueryToObserve.CLOSURE_QUERY;
      QueriesPrintObserver.ContentToObserve queriesPrintObserver_ContentToObserve0 = QueriesPrintObserver.ContentToObserve.CYPHER;
      QueriesPrintObserver.addToEnabledQueries(queriesPrintObserver_QueryToObserve0, queriesPrintObserver_ContentToObserve0);
      QueriesPrintObserver.removeFromEnabledQueries(queriesPrintObserver_QueryToObserve0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QueriesPrintObserver.QueryToObserve queriesPrintObserver_QueryToObserve0 = QueriesPrintObserver.QueryToObserve.CLOSURE_QUERY;
      QueriesPrintObserver.removeFromEnabledQueries(queriesPrintObserver_QueryToObserve0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QueriesPrintObserver.QueryToObserve queriesPrintObserver_QueryToObserve0 = QueriesPrintObserver.QueryToObserve.DOMAINACCESS_EXECUTE_INTERNAL;
      QueriesPrintObserver.ContentToObserve queriesPrintObserver_ContentToObserve0 = QueriesPrintObserver.ContentToObserve.CYPHER;
      QueriesPrintObserver.addToEnabledQueries(queriesPrintObserver_QueryToObserve0, queriesPrintObserver_ContentToObserve0);
      QueriesPrintObserver.ContentToObserve queriesPrintObserver_ContentToObserve1 = QueriesPrintObserver.contentToObserve(queriesPrintObserver_QueryToObserve0);
      assertEquals(QueriesPrintObserver.ContentToObserve.CYPHER, queriesPrintObserver_ContentToObserve1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QueriesPrintObserver.QueryToObserve queriesPrintObserver_QueryToObserve0 = QueriesPrintObserver.QueryToObserve.DOM_QUERY;
      QueriesPrintObserver.contentToObserve(queriesPrintObserver_QueryToObserve0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QueriesPrintObserver.QueryToObserve queriesPrintObserver_QueryToObserve0 = QueriesPrintObserver.QueryToObserve.CLOSURE_QUERY;
      QueriesPrintObserver.ContentToObserve queriesPrintObserver_ContentToObserve0 = QueriesPrintObserver.ContentToObserve.CYPHER;
      QueriesPrintObserver.addToEnabledQueries(queriesPrintObserver_QueryToObserve0, queriesPrintObserver_ContentToObserve0);
      QueriesPrintObserver.addToEnabledQueries(queriesPrintObserver_QueryToObserve0, queriesPrintObserver_ContentToObserve0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QueriesPrintObserver queriesPrintObserver0 = new QueriesPrintObserver();
      QueriesPrintObserver.addOutputStream(queriesPrintObserver0.printStream);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QueriesPrintObserver.removeAllEnabledQueries();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QueriesPrintObserver.removeAllOutputStreams();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QueriesPrintObserver queriesPrintObserver0 = new QueriesPrintObserver();
      QueriesPrintObserver.removeOutputStream(queriesPrintObserver0.printStream);
  }
}
