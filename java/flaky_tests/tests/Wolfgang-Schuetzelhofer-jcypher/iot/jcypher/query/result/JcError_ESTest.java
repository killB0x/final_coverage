/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 20:54:56 GMT 2022
 */

package iot.jcypher.query.result;

import org.junit.Test;
import static org.junit.Assert.*;
import iot.jcypher.query.result.JcError;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JcError_ESTest extends JcError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JcError jcError0 = new JcError("SL&__9", ", Message: ", ", Message: ");
      String string0 = jcError0.getMessage();
      assertEquals("SL&__9", jcError0.getCodeOrType());
      assertEquals(", Message: ", string0);
      assertEquals(", Message: ", jcError0.getAdditionalInfo());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JcError jcError0 = new JcError((String) null, "", (String) null);
      String string0 = jcError0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JcError jcError0 = new JcError((String) null, "", (String) null);
      String string0 = jcError0.getCodeOrType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JcError jcError0 = new JcError("", "", "");
      String string0 = jcError0.getCodeOrType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JcError jcError0 = new JcError((String) null, "", (String) null);
      String string0 = jcError0.getAdditionalInfo();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JcError jcError0 = new JcError("", "", "");
      String string0 = jcError0.getAdditionalInfo();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JcError jcError0 = new JcError("3TM*_=2v;;eP", (String) null, "3TM*_=2v;;eP");
      String string0 = jcError0.toString();
      assertEquals("CodeOrType: 3TM*_=2v;;eP, Message: \nAdditionalInfo: 3TM*_=2v;;eP", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JcError jcError0 = new JcError((String) null, "", (String) null);
      String string0 = jcError0.toString();
      assertEquals("CodeOrType: , Message: ", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JcError jcError0 = new JcError("3TM*_=2v;;eP", (String) null, "3TM*_=2v;;eP");
      String string0 = jcError0.getAdditionalInfo();
      assertEquals("3TM*_=2v;;eP", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JcError jcError0 = new JcError("3TM*_=2v;;eP", (String) null, "3TM*_=2v;;eP");
      String string0 = jcError0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JcError jcError0 = new JcError("sQxdZ0v", "sQxdZ0v", "sQxdZ0v");
      String string0 = jcError0.getCodeOrType();
      assertEquals("sQxdZ0v", string0);
  }
}
