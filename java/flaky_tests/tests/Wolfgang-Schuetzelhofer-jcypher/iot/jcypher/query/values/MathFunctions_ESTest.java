/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:46:01 GMT 2022
 */

package iot.jcypher.query.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.domainquery.internal.QueryRecorder;
import iot.jcypher.query.values.JcNumber;
import iot.jcypher.query.values.MathFunctions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MathFunctions_ESTest extends MathFunctions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      JcNumber jcNumber0 = mathFunctions0.getArgument();
      assertNull(jcNumber0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JcNumber jcNumber0 = new JcNumber("booleanProperty");
      MathFunctions mathFunctions0 = jcNumber0.math();
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.tan();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JcNumber jcNumber0 = new JcNumber();
      MathFunctions mathFunctions0 = new MathFunctions(jcNumber0);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.sqrt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JcNumber jcNumber0 = new JcNumber("xhKgpNz");
      MathFunctions mathFunctions0 = new MathFunctions(jcNumber0);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.sin();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.sign();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.round();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.radians();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.log10();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.log();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JcNumber jcNumber0 = new JcNumber();
      MathFunctions mathFunctions0 = new MathFunctions(jcNumber0);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.haversin();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.floor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.exp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.degrees();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.cot();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.cos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.atan();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.asin();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.acos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        mathFunctions0.abs();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      JcNumber jcNumber0 = mathFunctions0.tan();
      assertNotNull(jcNumber0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JcNumber jcNumber0 = new JcNumber("xhKgpNz");
      MathFunctions mathFunctions0 = new MathFunctions(jcNumber0);
      JcNumber jcNumber1 = mathFunctions0.exp();
      assertNotSame(jcNumber0, jcNumber1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      JcNumber jcNumber0 = mathFunctions0.floor();
      assertNotNull(jcNumber0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JcNumber jcNumber0 = new JcNumber();
      MathFunctions mathFunctions0 = jcNumber0.math();
      JcNumber jcNumber1 = mathFunctions0.log10();
      assertNotSame(jcNumber0, jcNumber1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JcNumber jcNumber0 = new JcNumber();
      MathFunctions mathFunctions0 = jcNumber0.math();
      JcNumber jcNumber1 = mathFunctions0.acos();
      assertNotSame(jcNumber0, jcNumber1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      JcNumber jcNumber0 = mathFunctions0.cos();
      assertNotNull(jcNumber0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      JcNumber jcNumber0 = mathFunctions0.radians();
      assertNotNull(jcNumber0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      JcNumber jcNumber0 = mathFunctions0.sin();
      assertNotNull(jcNumber0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JcNumber jcNumber0 = new JcNumber();
      MathFunctions mathFunctions0 = jcNumber0.math();
      JcNumber jcNumber1 = mathFunctions0.abs();
      assertNotSame(jcNumber1, jcNumber0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JcNumber jcNumber0 = new JcNumber();
      MathFunctions mathFunctions0 = jcNumber0.math();
      JcNumber jcNumber1 = mathFunctions0.sqrt();
      assertNotSame(jcNumber1, jcNumber0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JcNumber jcNumber0 = new JcNumber();
      MathFunctions mathFunctions0 = jcNumber0.math();
      JcNumber jcNumber1 = mathFunctions0.cot();
      assertNotSame(jcNumber1, jcNumber0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      JcNumber jcNumber0 = mathFunctions0.sign();
      assertNotNull(jcNumber0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      JcNumber jcNumber0 = mathFunctions0.log();
      assertNotNull(jcNumber0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JcNumber jcNumber0 = new JcNumber();
      MathFunctions mathFunctions0 = jcNumber0.math();
      JcNumber jcNumber1 = mathFunctions0.getArgument();
      assertSame(jcNumber1, jcNumber0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      JcNumber jcNumber0 = mathFunctions0.round();
      assertNotNull(jcNumber0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JcNumber jcNumber0 = new JcNumber();
      MathFunctions mathFunctions0 = jcNumber0.math();
      JcNumber jcNumber1 = mathFunctions0.atan();
      assertNotSame(jcNumber0, jcNumber1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JcNumber jcNumber0 = new JcNumber();
      MathFunctions mathFunctions0 = jcNumber0.math();
      JcNumber jcNumber1 = mathFunctions0.haversin();
      assertNotSame(jcNumber1, jcNumber0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JcNumber jcNumber0 = new JcNumber("xhKgpNz");
      MathFunctions mathFunctions0 = new MathFunctions(jcNumber0);
      JcNumber jcNumber1 = mathFunctions0.degrees();
      assertNotSame(jcNumber0, jcNumber1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MathFunctions mathFunctions0 = new MathFunctions((JcNumber) null);
      JcNumber jcNumber0 = mathFunctions0.asin();
      assertNotNull(jcNumber0);
  }
}
