/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:39:37 GMT 2022
 */

package iot.jcypher.query.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.domainquery.internal.QueryRecorder;
import iot.jcypher.query.values.IOperatorOrFunction;
import iot.jcypher.query.values.JcBoolean;
import iot.jcypher.query.values.JcCollection;
import iot.jcypher.query.values.JcNumber;
import iot.jcypher.query.values.JcString;
import iot.jcypher.query.values.JcValue;
import iot.jcypher.query.values.ValueElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JcValue_ESTest extends JcValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JcValue jcValue0 = new JcValue();
      JcValue jcValue1 = new JcValue("xtUrp", jcValue0, (IOperatorOrFunction) null);
      assertFalse(jcValue1.equals((Object)jcValue0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JcValue jcValue0 = new JcValue("iot.jcypher.query.values.ReplaceWith");
      JcNumber jcNumber0 = jcValue0.toFloat();
      String string0 = jcNumber0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JcValue jcValue0 = new JcValue("iot.jcypher.query.values.ReplaceWith");
      String string0 = jcValue0.getName();
      assertEquals("iot.jcypher.query.values.ReplaceWith", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JcValue jcValue0 = new JcValue();
      // Undeclared exception!
      try { 
        jcValue0.copyShallowTo((ValueElement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.values.ValueElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JcValue jcValue0 = new JcValue("iot.jcypher.query.values.ReplaceWith");
      JcNumber jcNumber0 = jcValue0.toFloat();
      JcCollection<JcValue> jcCollection0 = jcNumber0.asCollection();
      // Undeclared exception!
      try { 
        jcNumber0.copyShallowTo(jcCollection0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.query.values.JcCollection cannot be cast to class iot.jcypher.query.values.JcPrimitive (iot.jcypher.query.values.JcCollection and iot.jcypher.query.values.JcPrimitive are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6b35a360)
         //
         verifyException("iot.jcypher.query.values.JcPrimitive", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JcValue jcValue0 = new JcValue();
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        jcValue0.asString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JcValue jcValue0 = new JcValue();
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        jcValue0.asNumber();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JcValue jcValue0 = new JcValue();
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        jcValue0.asCollection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JcValue jcValue0 = new JcValue();
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        jcValue0.asBoolean();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JcValue jcValue0 = new JcValue("");
      jcValue0.setName("");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JcValue jcValue0 = new JcValue("");
      JcNumber jcNumber0 = jcValue0.asNumber();
      JcString jcString0 = jcNumber0.asString();
      assertNotNull(jcString0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JcValue jcValue0 = new JcValue("");
      JcNumber jcNumber0 = jcValue0.asNumber();
      jcValue0.copyShallowTo(jcNumber0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JcValue jcValue0 = new JcValue("");
      String string0 = jcValue0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JcValue jcValue0 = new JcValue();
      JcBoolean jcBoolean0 = jcValue0.asBoolean();
      assertNotNull(jcBoolean0);
  }
}
