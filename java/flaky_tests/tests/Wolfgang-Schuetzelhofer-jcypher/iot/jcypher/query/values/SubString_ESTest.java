/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:35:40 GMT 2022
 */

package iot.jcypher.query.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.domainquery.internal.QueryRecorder;
import iot.jcypher.query.values.IOperatorOrFunction;
import iot.jcypher.query.values.JcString;
import iot.jcypher.query.values.SubString;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SubString_ESTest extends SubString_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      SubString subString0 = new SubString();
      SubString subString1 = new SubString(object0, subString0, (IOperatorOrFunction) null);
      assertFalse(subString1.equals((Object)subString0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SubString subString0 = new SubString();
      QueryRecorder.blockRecording = null;
      // Undeclared exception!
      try { 
        subString0.subLength(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.domainquery.internal.QueryRecorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SubString subString0 = new SubString();
      JcString jcString0 = subString0.subLength((-1513));
      assertNotNull(jcString0);
  }
}
