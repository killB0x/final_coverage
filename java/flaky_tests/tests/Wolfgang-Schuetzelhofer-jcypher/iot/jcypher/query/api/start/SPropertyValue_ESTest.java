/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:31:25 GMT 2022
 */

package iot.jcypher.query.api.start;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.query.api.start.SPropertyValue;
import iot.jcypher.query.api.start.StartPoint;
import iot.jcypher.query.ast.start.PropertyOrQuery;
import iot.jcypher.query.ast.start.StartExpression;
import iot.jcypher.query.values.JcNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SPropertyValue_ESTest extends SPropertyValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JcNode jcNode0 = new JcNode("ON MATCH SET");
      StartExpression startExpression0 = new StartExpression(jcNode0);
      PropertyOrQuery propertyOrQuery0 = new PropertyOrQuery("**XDhw&Ao(td*k)R", "ON MATCH SET");
      startExpression0.setPropertyOrQuery(propertyOrQuery0);
      SPropertyValue sPropertyValue0 = new SPropertyValue(startExpression0);
      StartPoint startPoint0 = sPropertyValue0.value(jcNode0);
      assertNotNull(startPoint0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SPropertyValue sPropertyValue0 = new SPropertyValue((StartExpression) null);
      // Undeclared exception!
      try { 
        sPropertyValue0.value((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.start.SPropertyValue", e);
      }
  }
}
