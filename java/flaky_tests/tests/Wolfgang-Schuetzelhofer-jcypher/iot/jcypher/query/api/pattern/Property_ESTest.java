/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 21:10:04 GMT 2022
 */

package iot.jcypher.query.api.pattern;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.query.api.pattern.Property;
import iot.jcypher.query.ast.pattern.PatternExpression;
import iot.jcypher.query.ast.pattern.PatternRelation;
import iot.jcypher.query.values.JcNode;
import iot.jcypher.query.values.JcNumber;
import iot.jcypher.query.values.JcRelation;
import iot.jcypher.query.values.ValueElement;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Property_ESTest extends Property_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Property<Object> property0 = new Property<Object>(patternExpression0, patternExpression0);
      PatternExpression[] patternExpressionArray0 = new PatternExpression[5];
      JcRelation jcRelation0 = new JcRelation((String) null);
      PatternRelation patternRelation0 = new PatternRelation(jcRelation0);
      patternExpression0.addElement(patternRelation0);
      // Undeclared exception!
      try { 
        property0.values(patternExpressionArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Property", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      JcRelation jcRelation0 = new JcRelation("");
      PatternRelation patternRelation0 = new PatternRelation(jcRelation0);
      patternExpression0.addElement(patternRelation0);
      Property<Object> property0 = new Property<Object>(patternExpression0, patternExpression0);
      // Undeclared exception!
      try { 
        property0.value((Object) patternExpression0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Property", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Property<Object> property0 = new Property<Object>(patternExpression0, patternExpression0);
      JcRelation jcRelation0 = new JcRelation("");
      JcNode jcNode0 = jcRelation0.startNode();
      PatternRelation patternRelation0 = new PatternRelation((JcRelation) null);
      patternExpression0.addElement(patternRelation0);
      JcNumber jcNumber0 = jcNode0.asNumber();
      // Undeclared exception!
      try { 
        property0.value((ValueElement) jcNumber0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Property", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Property<PatternExpression> property0 = new Property<PatternExpression>((PatternExpression) null, (PatternExpression) null);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        property0.values((List<Object>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Property", e);
      }
  }
}
