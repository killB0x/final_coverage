/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:38:04 GMT 2022
 */

package iot.jcypher.query.api.pattern;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.query.api.pattern.Node;
import iot.jcypher.query.api.pattern.Path;
import iot.jcypher.query.ast.pattern.PatternExpression;
import iot.jcypher.query.values.JcNode;
import iot.jcypher.query.values.JcRelation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Path_ESTest extends Path_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Path path0 = new Path(patternExpression0);
      Node node0 = path0.node();
      assertNotNull(node0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Path path0 = new Path((PatternExpression) null);
      // Undeclared exception!
      try { 
        path0.node((JcNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Path path0 = new Path(patternExpression0);
      JcRelation jcRelation0 = new JcRelation("");
      JcNode jcNode0 = jcRelation0.startNode();
      Node node0 = path0.node(jcNode0);
      assertNotNull(node0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Path path0 = new Path((PatternExpression) null);
      // Undeclared exception!
      try { 
        path0.node();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Path", e);
      }
  }
}
