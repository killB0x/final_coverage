/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:03:21 GMT 2022
 */

package iot.jcypher.query.api.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.query.api.collection.CFrom;
import iot.jcypher.query.api.collection.CTerminal;
import iot.jcypher.query.api.collection.CWhere;
import iot.jcypher.query.api.collection.CollectFrom;
import iot.jcypher.query.api.collection.Collection;
import iot.jcypher.query.api.collection.EXProperty;
import iot.jcypher.query.api.collection.ExtractExpression;
import iot.jcypher.query.api.collection.ReduceTo;
import iot.jcypher.query.ast.collection.CollectExpression;
import iot.jcypher.query.values.JcCollection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Collection_ESTest extends Collection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CollectExpression collectExpression0 = new CollectExpression();
      Collection collection0 = new Collection(collectExpression0);
      CTerminal cTerminal0 = collection0.TAIL((JcCollection) null);
      assertNotNull(cTerminal0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Collection collection0 = new Collection((CollectExpression) null);
      // Undeclared exception!
      try { 
        collection0.TAIL();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.collection.Collection", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Collection collection0 = new Collection((CollectExpression) null);
      // Undeclared exception!
      try { 
        collection0.REDUCE();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.collection.Collection", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Collection collection0 = new Collection((CollectExpression) null);
      // Undeclared exception!
      try { 
        collection0.FILTER();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.collection.Collection", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Collection collection0 = new Collection((CollectExpression) null);
      // Undeclared exception!
      try { 
        collection0.EXTRACT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.collection.Collection", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Collection collection0 = new Collection((CollectExpression) null);
      // Undeclared exception!
      try { 
        collection0.COLLECT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.collection.Collection", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CollectExpression collectExpression0 = new CollectExpression();
      Collection collection0 = new Collection(collectExpression0);
      Collection collection1 = collection0.TAIL();
      assertNotSame(collection1, collection0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CollectExpression collectExpression0 = new CollectExpression();
      Collection collection0 = new Collection(collectExpression0);
      EXProperty<CollectFrom> eXProperty0 = collection0.COLLECT();
      assertNotNull(eXProperty0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CollectExpression collectExpression0 = new CollectExpression();
      Collection collection0 = new Collection(collectExpression0);
      CFrom<CWhere> cFrom0 = collection0.FILTER();
      assertNotNull(cFrom0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CollectExpression collectExpression0 = new CollectExpression();
      Collection collection0 = new Collection(collectExpression0);
      ExtractExpression extractExpression0 = collection0.EXTRACT();
      assertNotNull(extractExpression0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CollectExpression collectExpression0 = new CollectExpression();
      Collection collection0 = new Collection(collectExpression0);
      CFrom<ReduceTo> cFrom0 = collection0.REDUCE();
      assertNotNull(cFrom0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Collection collection0 = new Collection((CollectExpression) null);
      // Undeclared exception!
      try { 
        collection0.TAIL((JcCollection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.collection.Collection", e);
      }
  }
}
