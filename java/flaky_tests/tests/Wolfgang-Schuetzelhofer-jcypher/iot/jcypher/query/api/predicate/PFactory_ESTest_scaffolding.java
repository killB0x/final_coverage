/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Oct 25 21:08:19 GMT 2022
 */

package iot.jcypher.query.api.predicate;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class PFactory_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "iot.jcypher.query.api.predicate.PFactory"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PFactory_ESTest_scaffolding.class.getClassLoader() ,
      "iot.jcypher.query.api.IClause",
      "iot.jcypher.query.ast.collection.CollectExpression",
      "iot.jcypher.query.ast.collection.DoEvalExpression",
      "iot.jcypher.query.api.predicate.PFactory",
      "iot.jcypher.query.ast.predicate.Negation",
      "iot.jcypher.query.values.Function",
      "iot.jcypher.query.api.collection.ICollection",
      "iot.jcypher.query.values.JcPath",
      "iot.jcypher.query.ast.collection.PropertyEvalExpresssion",
      "iot.jcypher.query.api.predicate.Concatenator",
      "iot.jcypher.query.values.JcProperty",
      "iot.jcypher.query.ast.collection.ReduceEvalExpression",
      "iot.jcypher.query.ast.collection.PredicateEvalExpression",
      "iot.jcypher.query.api.collection.ICollectExpression",
      "iot.jcypher.query.ast.ClauseType",
      "iot.jcypher.query.values.JcString",
      "iot.jcypher.query.values.functions.FUNCTION$Relation",
      "iot.jcypher.query.api.predicate.BooleanOperation",
      "iot.jcypher.query.ast.collection.PredicateFunctionEvalExpression",
      "iot.jcypher.query.api.APIObjectAccess",
      "iot.jcypher.query.api.predicate.IBeforePredicate",
      "iot.jcypher.query.values.JcElement",
      "iot.jcypher.query.ast.collection.EvalExpression",
      "iot.jcypher.domainquery.api.IPredicateOperand1",
      "iot.jcypher.query.values.ValueElement",
      "iot.jcypher.query.values.IOperatorOrFunction",
      "iot.jcypher.query.values.JcNode",
      "iot.jcypher.query.ast.predicate.SubExpression",
      "iot.jcypher.query.ast.predicate.PredicateFunction",
      "iot.jcypher.query.values.JcValue",
      "iot.jcypher.query.ast.predicate.PredicateExpression",
      "iot.jcypher.query.ast.pattern.PatternNode",
      "iot.jcypher.query.values.IHas",
      "iot.jcypher.query.api.collection.EachDoConcat",
      "iot.jcypher.query.values.JcLabel",
      "iot.jcypher.query.api.collection.IPredicateFunction",
      "iot.jcypher.query.values.JcBoolean",
      "iot.jcypher.query.values.JcNumber",
      "iot.jcypher.query.ast.predicate.BooleanOp$Operator",
      "iot.jcypher.query.ast.collection.ExtractEvalExpression",
      "iot.jcypher.query.api.pattern.XFactory",
      "iot.jcypher.query.api.collection.CWhere",
      "iot.jcypher.query.api.pattern.IElement",
      "iot.jcypher.query.values.JcRelation",
      "iot.jcypher.query.values.IFragment",
      "iot.jcypher.query.api.collection.ReduceTo",
      "iot.jcypher.query.ast.predicate.IPredicateHolder",
      "iot.jcypher.query.ast.pattern.PatternRelation",
      "iot.jcypher.query.ast.pattern.PatternElement",
      "iot.jcypher.query.values.JcPrimitive",
      "iot.jcypher.query.api.collection.CFactory",
      "iot.jcypher.query.api.APIObject",
      "iot.jcypher.query.api.predicate.Concat",
      "iot.jcypher.query.ast.predicate.Predicate",
      "iot.jcypher.query.ast.predicate.ExistsPattern",
      "iot.jcypher.query.ast.ASTNode",
      "iot.jcypher.query.ast.predicate.BooleanOp",
      "iot.jcypher.query.values.functions.FTYPE$Relation",
      "iot.jcypher.query.values.FunctionInstance",
      "iot.jcypher.query.values.JcCollection"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PFactory_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "iot.jcypher.query.api.predicate.PFactory",
      "iot.jcypher.query.ast.predicate.BooleanOp$Operator",
      "iot.jcypher.query.ast.ASTNode",
      "iot.jcypher.query.ast.predicate.PredicateExpression",
      "iot.jcypher.query.api.APIObject",
      "iot.jcypher.query.api.predicate.Concat",
      "iot.jcypher.query.ast.predicate.Predicate",
      "iot.jcypher.query.ast.predicate.BooleanOp",
      "iot.jcypher.query.api.predicate.BooleanOperation",
      "iot.jcypher.query.api.collection.CFactory",
      "iot.jcypher.query.api.APIObjectAccess",
      "iot.jcypher.query.api.predicate.Concatenator",
      "iot.jcypher.query.ast.predicate.PredicateFunction",
      "iot.jcypher.query.ast.predicate.Negation",
      "iot.jcypher.query.values.ValueElement",
      "iot.jcypher.query.values.JcValue",
      "iot.jcypher.query.values.JcElement",
      "iot.jcypher.query.values.JcRelation",
      "iot.jcypher.query.values.JcNode",
      "iot.jcypher.query.values.FunctionInstance",
      "iot.jcypher.query.values.Function",
      "iot.jcypher.query.values.functions.FTYPE$Relation",
      "iot.jcypher.query.values.functions.FUNCTION$Relation",
      "iot.jcypher.query.values.JcPrimitive",
      "iot.jcypher.query.values.JcString",
      "iot.jcypher.query.values.functions.FTYPE$Common",
      "iot.jcypher.query.values.functions.FUNCTION$Common",
      "iot.jcypher.domainquery.internal.QueryRecorder$1",
      "iot.jcypher.domainquery.internal.QueryRecorder",
      "iot.jcypher.query.values.JcLabel",
      "iot.jcypher.query.values.Operator",
      "iot.jcypher.query.values.operators.OPTYPE$Node",
      "iot.jcypher.query.values.operators.OPERATOR$Node",
      "iot.jcypher.query.ast.predicate.PredicateConcatenator",
      "iot.jcypher.query.ast.predicate.SubExpression",
      "iot.jcypher.query.values.JcBoolean",
      "iot.jcypher.query.values.JcNumber",
      "iot.jcypher.query.values.functions.FTYPE$Collection",
      "iot.jcypher.query.values.functions.FUNCTION$Collection",
      "iot.jcypher.query.values.JcProperty",
      "iot.jcypher.query.values.operators.OPTYPE$PropertyContainer",
      "iot.jcypher.query.values.operators.OPERATOR$PropertyContainer",
      "iot.jcypher.domainquery.internal.QueryRecorder$Literal",
      "iot.jcypher.query.values.functions.FTYPE$String",
      "iot.jcypher.query.values.functions.FUNCTION$String",
      "iot.jcypher.query.values.operators.OPTYPE$String",
      "iot.jcypher.query.values.operators.OPERATOR$Common",
      "iot.jcypher.query.values.SubString",
      "iot.jcypher.query.values.JcCollection",
      "iot.jcypher.query.values.functions.FTYPE$PropertyContainer",
      "iot.jcypher.query.values.functions.FUNCTION$PropertyContainer",
      "iot.jcypher.query.ast.collection.CollectExpression",
      "iot.jcypher.query.ast.collection.EvalExpression",
      "iot.jcypher.query.ast.collection.PredicateEvalExpression",
      "iot.jcypher.query.ast.collection.PredicateFunctionEvalExpression",
      "iot.jcypher.query.values.ReplaceWith",
      "iot.jcypher.query.values.functions.FTYPE$Node",
      "iot.jcypher.query.values.functions.FUNCTION$Node",
      "iot.jcypher.query.values.JcPath",
      "iot.jcypher.query.values.functions.FTYPE$Path",
      "iot.jcypher.query.values.functions.FUNCTION$Path",
      "iot.jcypher.domainquery.internal.QueryRecorder$PlaceHolder",
      "iot.jcypher.query.values.operators.OPERATOR$String",
      "iot.jcypher.query.api.union.UnionTerminal",
      "iot.jcypher.query.ast.collection.CollectionSpec",
      "iot.jcypher.query.ast.collection.ExtractEvalExpression",
      "iot.jcypher.query.ast.predicate.BooleanValue",
      "iot.jcypher.query.values.MathFunctions",
      "iot.jcypher.query.values.operators.OPTYPE$Number",
      "iot.jcypher.query.values.operators.OPERATOR$Number",
      "iot.jcypher.query.ast.collection.ReduceEvalExpression",
      "iot.jcypher.query.values.operators.OPTYPE$Collection",
      "iot.jcypher.query.values.operators.OPERATOR$Collection",
      "iot.jcypher.query.ast.pattern.PatternElement",
      "iot.jcypher.query.ast.pattern.PatternNode",
      "iot.jcypher.query.ast.predicate.ExistsPattern",
      "iot.jcypher.query.ast.pattern.PatternExpression",
      "iot.jcypher.query.ast.collection.DoEvalExpression",
      "iot.jcypher.query.ast.collection.PropertyEvalExpresssion",
      "iot.jcypher.query.api.pattern.XFactory"
    );
  }
}
