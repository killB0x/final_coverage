/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:38:45 GMT 2022
 */

package iot.jcypher.query.api.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.query.api.collection.CTerminal;
import iot.jcypher.query.api.collection.CollectFrom;
import iot.jcypher.query.ast.collection.CollectExpression;
import iot.jcypher.query.values.JcCollection;
import iot.jcypher.query.values.JcString;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CollectFrom_ESTest extends CollectFrom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CollectExpression collectExpression0 = new CollectExpression();
      CollectFrom collectFrom0 = new CollectFrom(collectExpression0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      JcCollection<JcString> jcCollection0 = new JcCollection<JcString>(linkedList0);
      CTerminal cTerminal0 = collectFrom0.from(jcCollection0);
      assertNotNull(cTerminal0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CollectFrom collectFrom0 = new CollectFrom((CollectExpression) null);
      // Undeclared exception!
      try { 
        collectFrom0.from((JcCollection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.collection.CollectFrom", e);
      }
  }
}
