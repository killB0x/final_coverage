/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:43:14 GMT 2022
 */

package iot.jcypher.query.api.pattern;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.query.api.pattern.IElement;
import iot.jcypher.query.api.pattern.Node;
import iot.jcypher.query.api.pattern.Path;
import iot.jcypher.query.api.pattern.Relation;
import iot.jcypher.query.api.pattern.XFactory;
import iot.jcypher.query.ast.pattern.PatternExpression;
import iot.jcypher.query.values.JcNode;
import iot.jcypher.query.values.JcPath;
import iot.jcypher.query.values.JcRelation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XFactory_ESTest extends XFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Node node0 = new Node((PatternExpression) null);
      PatternExpression patternExpression0 = XFactory.getExpression(node0);
      assertNull(patternExpression0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        XFactory.getExpression((IElement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.APIObjectAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JcRelation jcRelation0 = new JcRelation("iot.jcypher.query.api.pattern.XFactory");
      Relation relation0 = XFactory.relation(jcRelation0);
      assertNotNull(relation0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JcRelation jcRelation0 = new JcRelation("iot.jcypher.query.api.pattern.XFactory");
      JcNode jcNode0 = jcRelation0.startNode();
      Node node0 = XFactory.node(jcNode0);
      assertNotNull(node0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JcPath jcPath0 = new JcPath("iot.jcypher.query.api.pattern.Path");
      Path path0 = XFactory.path(jcPath0);
      assertNotNull(path0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JcPath jcPath0 = new JcPath("iot.jcypher.query.api.pattern.Path");
      Path path0 = XFactory.allShortestPaths(jcPath0);
      assertNotNull(path0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JcPath jcPath0 = new JcPath("iot.jcypher.query.api.pattern.Path");
      Path path0 = XFactory.shortestPath(jcPath0);
      assertNotNull(path0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Relation relation0 = XFactory.relation();
      PatternExpression patternExpression0 = XFactory.getExpression(relation0);
      assertNull(patternExpression0.getClauseType());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      XFactory xFactory0 = new XFactory();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Node node0 = XFactory.node();
      assertNotNull(node0);
  }
}
