/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 21:23:36 GMT 2022
 */

package iot.jcypher.query.api.pattern;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.query.api.pattern.Node;
import iot.jcypher.query.api.pattern.Relation;
import iot.jcypher.query.ast.ClauseType;
import iot.jcypher.query.ast.pattern.PatternExpression;
import iot.jcypher.query.ast.pattern.PatternRelation;
import iot.jcypher.query.values.JcNode;
import iot.jcypher.query.values.JcRelation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Relation_ESTest extends Relation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      JcRelation jcRelation0 = new JcRelation("_P");
      PatternRelation patternRelation0 = new PatternRelation(jcRelation0);
      patternExpression0.addElement(patternRelation0);
      Relation relation0 = new Relation(patternExpression0);
      Relation relation1 = relation0.type("DROP_INDEX");
      assertSame(relation1, relation0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClauseType clauseType0 = ClauseType.UNION;
      PatternExpression patternExpression0 = new PatternExpression();
      JcRelation jcRelation0 = new JcRelation("");
      PatternRelation patternRelation0 = new PatternRelation(jcRelation0);
      patternExpression0.addElement(patternRelation0);
      Relation relation0 = new Relation(patternExpression0);
      Relation relation1 = relation0.type((Enum<?>) clauseType0);
      assertSame(relation1, relation0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      PatternRelation patternRelation0 = new PatternRelation((JcRelation) null);
      patternExpression0.addElement(patternRelation0);
      Relation relation0 = new Relation(patternExpression0);
      Relation relation1 = relation0.out();
      assertSame(relation1, relation0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      JcRelation jcRelation0 = new JcRelation("`nab7HgOi");
      JcNode jcNode0 = jcRelation0.endNode();
      Node node0 = relation0.node(jcNode0);
      assertNotNull(node0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      PatternRelation patternRelation0 = new PatternRelation((JcRelation) null);
      patternExpression0.addElement(patternRelation0);
      Relation relation0 = new Relation(patternExpression0);
      Relation relation1 = relation0.minHops(1396);
      assertSame(relation1, relation0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      PatternRelation patternRelation0 = new PatternRelation((JcRelation) null);
      patternExpression0.addElement(patternRelation0);
      Relation relation0 = new Relation(patternExpression0);
      Relation relation1 = relation0.maxHopsUnbound();
      assertSame(relation0, relation1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      JcRelation jcRelation0 = new JcRelation("_P");
      PatternRelation patternRelation0 = new PatternRelation(jcRelation0);
      patternExpression0.addElement(patternRelation0);
      Relation relation0 = new Relation(patternExpression0);
      Relation relation1 = relation0.maxHops(3384);
      assertSame(relation1, relation0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      JcRelation jcRelation0 = new JcRelation("`nab7HgOi");
      PatternRelation patternRelation0 = new PatternRelation(jcRelation0);
      patternExpression0.addElement(patternRelation0);
      Relation relation1 = relation0.in();
      assertSame(relation0, relation1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      JcRelation jcRelation0 = new JcRelation("_P");
      PatternRelation patternRelation0 = new PatternRelation(jcRelation0);
      patternExpression0.addElement(patternRelation0);
      Relation relation0 = new Relation(patternExpression0);
      Relation relation1 = relation0.hopsUnbound();
      assertSame(relation1, relation0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      PatternRelation patternRelation0 = new PatternRelation((JcRelation) null);
      patternExpression0.addElement(patternRelation0);
      Relation relation0 = new Relation(patternExpression0);
      Relation relation1 = relation0.hops(1396);
      assertSame(relation0, relation1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      relation0.node();
      // Undeclared exception!
      try { 
        relation0.type("+RpJD2io6xWhsmSF");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.query.ast.pattern.PatternNode cannot be cast to class iot.jcypher.query.ast.pattern.PatternRelation (iot.jcypher.query.ast.pattern.PatternNode and iot.jcypher.query.ast.pattern.PatternRelation are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1dae878e)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      ClauseType clauseType0 = ClauseType.MERGE;
      Relation relation0 = new Relation(patternExpression0);
      relation0.node();
      // Undeclared exception!
      try { 
        relation0.type((Enum<?>) clauseType0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.query.ast.pattern.PatternNode cannot be cast to class iot.jcypher.query.ast.pattern.PatternRelation (iot.jcypher.query.ast.pattern.PatternNode and iot.jcypher.query.ast.pattern.PatternRelation are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1dae878e)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      relation0.node();
      // Undeclared exception!
      try { 
        relation0.out();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.query.ast.pattern.PatternNode cannot be cast to class iot.jcypher.query.ast.pattern.PatternRelation (iot.jcypher.query.ast.pattern.PatternNode and iot.jcypher.query.ast.pattern.PatternRelation are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1dae878e)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Relation relation0 = new Relation((PatternExpression) null);
      // Undeclared exception!
      try { 
        relation0.node();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      relation0.node();
      // Undeclared exception!
      try { 
        relation0.minHops(1926);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.query.ast.pattern.PatternNode cannot be cast to class iot.jcypher.query.ast.pattern.PatternRelation (iot.jcypher.query.ast.pattern.PatternNode and iot.jcypher.query.ast.pattern.PatternRelation are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1dae878e)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      relation0.node();
      // Undeclared exception!
      try { 
        relation0.maxHopsUnbound();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.query.ast.pattern.PatternNode cannot be cast to class iot.jcypher.query.ast.pattern.PatternRelation (iot.jcypher.query.ast.pattern.PatternNode and iot.jcypher.query.ast.pattern.PatternRelation are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1dae878e)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      relation0.node();
      // Undeclared exception!
      try { 
        relation0.maxHops((-2687));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.query.ast.pattern.PatternNode cannot be cast to class iot.jcypher.query.ast.pattern.PatternRelation (iot.jcypher.query.ast.pattern.PatternNode and iot.jcypher.query.ast.pattern.PatternRelation are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1dae878e)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      relation0.node();
      // Undeclared exception!
      try { 
        relation0.in();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.query.ast.pattern.PatternNode cannot be cast to class iot.jcypher.query.ast.pattern.PatternRelation (iot.jcypher.query.ast.pattern.PatternNode and iot.jcypher.query.ast.pattern.PatternRelation are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1dae878e)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      relation0.node();
      // Undeclared exception!
      try { 
        relation0.hopsUnbound();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.query.ast.pattern.PatternNode cannot be cast to class iot.jcypher.query.ast.pattern.PatternRelation (iot.jcypher.query.ast.pattern.PatternNode and iot.jcypher.query.ast.pattern.PatternRelation are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1dae878e)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      // Undeclared exception!
      try { 
        relation0.minHops(1396);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      ClauseType clauseType0 = ClauseType.MERGE;
      Relation relation0 = new Relation(patternExpression0);
      // Undeclared exception!
      try { 
        relation0.type((Enum<?>) clauseType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      relation0.node();
      // Undeclared exception!
      try { 
        relation0.hops(91);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.query.ast.pattern.PatternNode cannot be cast to class iot.jcypher.query.ast.pattern.PatternRelation (iot.jcypher.query.ast.pattern.PatternNode and iot.jcypher.query.ast.pattern.PatternRelation are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1dae878e)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      // Undeclared exception!
      try { 
        relation0.maxHopsUnbound();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      // Undeclared exception!
      try { 
        relation0.type("d>pCTSvM# Sxi0.8|Bw");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      // Undeclared exception!
      try { 
        relation0.hops(91);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      // Undeclared exception!
      try { 
        relation0.maxHops((-2687));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      // Undeclared exception!
      try { 
        relation0.out();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      // Undeclared exception!
      try { 
        relation0.hopsUnbound();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      // Undeclared exception!
      try { 
        relation0.in();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Relation relation0 = new Relation((PatternExpression) null);
      // Undeclared exception!
      try { 
        relation0.node((JcNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Relation", e);
      }
  }
}
