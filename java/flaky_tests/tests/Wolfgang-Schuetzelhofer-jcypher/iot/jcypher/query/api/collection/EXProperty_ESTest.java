/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 21:52:36 GMT 2022
 */

package iot.jcypher.query.api.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.query.api.collection.EXProperty;
import iot.jcypher.query.ast.collection.CollectExpression;
import iot.jcypher.query.ast.collection.PropertyEvalExpresssion;
import iot.jcypher.query.ast.collection.ReduceEvalExpression;
import iot.jcypher.query.values.JcCollection;
import iot.jcypher.query.values.JcValue;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EXProperty_ESTest extends EXProperty_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CollectExpression collectExpression0 = new CollectExpression();
      PropertyEvalExpresssion propertyEvalExpresssion0 = new PropertyEvalExpresssion();
      collectExpression0.setEvalExpression(propertyEvalExpresssion0);
      EXProperty<Object> eXProperty0 = new EXProperty<Object>(collectExpression0, (Object) null);
      Object object0 = eXProperty0.property("xrLyocc}d2!r.Z<t\"aF");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CollectExpression collectExpression0 = new CollectExpression();
      PropertyEvalExpresssion propertyEvalExpresssion0 = new PropertyEvalExpresssion();
      collectExpression0.setEvalExpression(propertyEvalExpresssion0);
      LinkedList<JcValue> linkedList0 = new LinkedList<JcValue>();
      JcCollection<JcValue> jcCollection0 = new JcCollection<JcValue>(linkedList0);
      EXProperty<JcValue> eXProperty0 = new EXProperty<JcValue>(collectExpression0, jcCollection0);
      JcValue jcValue0 = eXProperty0.property("iot.jcypher.query.api.pattern.Node");
      assertNotNull(jcValue0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CollectExpression collectExpression0 = new CollectExpression();
      ReduceEvalExpression reduceEvalExpression0 = new ReduceEvalExpression();
      collectExpression0.setEvalExpression(reduceEvalExpression0);
      EXProperty<Object> eXProperty0 = new EXProperty<Object>(collectExpression0, collectExpression0);
      // Undeclared exception!
      try { 
        eXProperty0.property("qJy");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.query.ast.collection.ReduceEvalExpression cannot be cast to class iot.jcypher.query.ast.collection.PropertyEvalExpresssion (iot.jcypher.query.ast.collection.ReduceEvalExpression and iot.jcypher.query.ast.collection.PropertyEvalExpresssion are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @77f91a35)
         //
         verifyException("iot.jcypher.query.api.collection.EXProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CollectExpression collectExpression0 = new CollectExpression();
      EXProperty<Object> eXProperty0 = new EXProperty<Object>(collectExpression0, (Object) null);
      // Undeclared exception!
      try { 
        eXProperty0.property("xrLyocc}d2!r.Z<t\"aF");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.collection.EXProperty", e);
      }
  }
}
