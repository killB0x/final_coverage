/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 21:49:33 GMT 2022
 */

package iot.jcypher.query.api.pattern;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.query.api.pattern.Node;
import iot.jcypher.query.api.pattern.Property;
import iot.jcypher.query.api.pattern.Relation;
import iot.jcypher.query.ast.pattern.PatternExpression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Node node0 = new Node(patternExpression0);
      node0.relation();
      Property<Node> property0 = node0.property("#$/&@SCuBN?");
      assertNotNull(property0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      Relation relation0 = new Relation(patternExpression0);
      // Undeclared exception!
      try { 
        relation0.property("N%UDd(,p");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.pattern.Element", e);
      }
  }
}
