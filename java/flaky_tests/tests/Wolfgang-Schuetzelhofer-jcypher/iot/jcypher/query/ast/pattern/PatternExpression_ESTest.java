/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 21:16:24 GMT 2022
 */

package iot.jcypher.query.ast.pattern;

import org.junit.Test;
import static org.junit.Assert.*;
import iot.jcypher.query.ast.pattern.PatternElement;
import iot.jcypher.query.ast.pattern.PatternExpression;
import iot.jcypher.query.ast.pattern.PatternNode;
import iot.jcypher.query.ast.pattern.PatternPath;
import iot.jcypher.query.values.JcNode;
import iot.jcypher.query.values.JcPath;
import iot.jcypher.query.values.JcRelation;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PatternExpression_ESTest extends PatternExpression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      JcRelation jcRelation0 = new JcRelation("");
      JcNode jcNode0 = jcRelation0.startNode();
      PatternNode patternNode0 = new PatternNode(jcNode0);
      patternExpression0.addElement(patternNode0);
      patternExpression0.addElement(patternNode0);
      PatternElement patternElement0 = patternExpression0.getLastElement();
      assertFalse(patternElement0.hasProperties());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      JcPath jcPath0 = new JcPath("<zn<s@aV)4P~,");
      PatternPath.PathFunction patternPath_PathFunction0 = PatternPath.PathFunction.ALL_SHORTEST_PATHS;
      PatternPath patternPath0 = new PatternPath(jcPath0, patternPath_PathFunction0);
      patternExpression0.setPath(patternPath0);
      PatternPath patternPath1 = patternExpression0.getPath();
      assertSame(patternPath1, patternPath0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      JcRelation jcRelation0 = new JcRelation("");
      JcNode jcNode0 = jcRelation0.startNode();
      PatternNode patternNode0 = new PatternNode(jcNode0);
      patternExpression0.addElement(patternNode0);
      List<PatternElement> list0 = patternExpression0.getElements();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      PatternElement patternElement0 = patternExpression0.getLastElement();
      assertNull(patternElement0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      List<PatternElement> list0 = patternExpression0.getElements();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PatternExpression patternExpression0 = new PatternExpression();
      PatternPath patternPath0 = patternExpression0.getPath();
      assertNull(patternPath0);
  }
}
