/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:25:13 GMT 2022
 */

package iot.jcypher.query.ast.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import iot.jcypher.query.ast.collection.ExtractEvalExpression;
import iot.jcypher.query.values.JcBoolean;
import iot.jcypher.query.values.JcNumber;
import iot.jcypher.query.values.JcString;
import iot.jcypher.query.values.JcValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExtractEvalExpression_ESTest extends ExtractEvalExpression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExtractEvalExpression extractEvalExpression0 = new ExtractEvalExpression();
      JcValue jcValue0 = new JcValue("3F}DCy8L:X^n7C");
      JcNumber jcNumber0 = jcValue0.toFloat();
      JcBoolean jcBoolean0 = jcNumber0.asBoolean();
      JcString jcString0 = jcBoolean0.str();
      extractEvalExpression0.setExpression(jcString0);
      JcValue jcValue1 = extractEvalExpression0.getExpression();
      assertSame(jcValue1, jcString0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExtractEvalExpression extractEvalExpression0 = new ExtractEvalExpression();
      JcValue jcValue0 = extractEvalExpression0.getExpression();
      assertNull(jcValue0);
  }
}
