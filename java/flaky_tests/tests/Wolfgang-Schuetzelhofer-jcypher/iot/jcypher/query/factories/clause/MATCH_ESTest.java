/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:23:27 GMT 2022
 */

package iot.jcypher.query.factories.clause;

import org.junit.Test;
import static org.junit.Assert.*;
import iot.jcypher.query.api.pattern.Node;
import iot.jcypher.query.api.pattern.Path;
import iot.jcypher.query.api.pattern.Relation;
import iot.jcypher.query.factories.clause.MATCH;
import iot.jcypher.query.values.JcNode;
import iot.jcypher.query.values.JcPath;
import iot.jcypher.query.values.JcRelation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MATCH_ESTest extends MATCH_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JcRelation jcRelation0 = new JcRelation("");
      Relation relation0 = MATCH.relation(jcRelation0);
      assertNotNull(relation0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Node node0 = MATCH.node();
      assertNotNull(node0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Path path0 = MATCH.shortestPath((JcPath) null);
      assertNotNull(path0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Relation relation0 = MATCH.relation();
      assertNotNull(relation0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MATCH mATCH0 = new MATCH();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JcNode jcNode0 = new JcNode("%b<<`BlCYfmq5Ta ");
      Node node0 = MATCH.node(jcNode0);
      assertNotNull(node0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Path path0 = MATCH.allShortestPaths((JcPath) null);
      assertNotNull(path0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Path path0 = MATCH.path((JcPath) null);
      assertNotNull(path0);
  }
}
