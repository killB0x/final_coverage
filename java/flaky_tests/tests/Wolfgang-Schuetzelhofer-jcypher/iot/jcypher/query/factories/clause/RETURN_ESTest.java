/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 22:22:47 GMT 2022
 */

package iot.jcypher.query.factories.clause;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.query.api.collection.ICollectExpression;
import iot.jcypher.query.api.pattern.IElement;
import iot.jcypher.query.api.predicate.Concatenator;
import iot.jcypher.query.api.returns.AggregateDistinct;
import iot.jcypher.query.api.returns.RCount;
import iot.jcypher.query.api.returns.RDistinct;
import iot.jcypher.query.api.returns.RElement;
import iot.jcypher.query.api.returns.RSortable;
import iot.jcypher.query.api.returns.RTerminal;
import iot.jcypher.query.factories.clause.RETURN;
import iot.jcypher.query.values.JcCollection;
import iot.jcypher.query.values.JcValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RETURN_ESTest extends RETURN_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        RETURN.evalPredicate((Concatenator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.APIObjectAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        RETURN.collection((ICollectExpression) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.APIObjectAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ICollectExpression iCollectExpression0 = mock(ICollectExpression.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        RETURN.collection(iCollectExpression0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class iot.jcypher.query.api.collection.ICollectExpression$MockitoMock$151595371 cannot be cast to class iot.jcypher.query.api.APIObject (iot.jcypher.query.api.collection.ICollectExpression$MockitoMock$151595371 and iot.jcypher.query.api.APIObject are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @42a1d447)
         //
         verifyException("iot.jcypher.query.api.returns.RFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RElement<RElement<?>> rElement0 = RETURN.collection((JcCollection) null);
      assertNotNull(rElement0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RDistinct rDistinct0 = RETURN.DISTINCT();
      assertNotNull(rDistinct0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RTerminal rTerminal0 = RETURN.ALL();
      assertNotNull(rTerminal0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RETURN rETURN0 = new RETURN();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RCount rCount0 = RETURN.count();
      assertNotNull(rCount0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        RETURN.existsPattern((IElement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.api.APIObjectAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RSortable rSortable0 = RETURN.value((JcValue) null);
      assertNotNull(rSortable0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AggregateDistinct aggregateDistinct0 = RETURN.aggregate();
      assertNotNull(aggregateDistinct0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Concatenator concatenator0 = mock(Concatenator.class, new ViolatedAssumptionAnswer());
      RElement<RElement<?>> rElement0 = RETURN.evalPredicate(concatenator0);
      assertNotNull(rElement0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Concatenator concatenator0 = mock(Concatenator.class, new ViolatedAssumptionAnswer());
      RElement<RElement<?>> rElement0 = RETURN.collection((ICollectExpression) concatenator0);
      assertNotNull(rElement0);
  }
}
