/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 21:34:34 GMT 2022
 */

package iot.jcypher.query.factories;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.query.factories.JC;
import iot.jcypher.query.values.JcNumber;
import iot.jcypher.query.values.JcString;
import iot.jcypher.query.values.JcValue;
import iot.jcypher.query.values.ValueElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JC_ESTest extends JC_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        JC.coalesce((ValueElement[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.values.ValueAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JC jC0 = new JC();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ValueElement[] valueElementArray0 = new ValueElement[2];
      JcValue jcValue0 = JC.coalesce(valueElementArray0);
      assertNotNull(jcValue0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JcValue jcValue0 = JC.timeStamp();
      ValueElement[] valueElementArray0 = new ValueElement[2];
      JcNumber jcNumber0 = jcValue0.toInt();
      valueElementArray0[0] = (ValueElement) jcNumber0;
      JcString jcString0 = jcNumber0.str();
      valueElementArray0[1] = (ValueElement) jcString0;
      JC.coalesce(valueElementArray0);
      // Undeclared exception!
      JC.coalesce(valueElementArray0);
  }
}
