/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 19:57:02 GMT 2022
 */

package iot.jcypher.query.writer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import iot.jcypher.query.writer.Format;
import iot.jcypher.query.writer.Pretty;
import iot.jcypher.query.writer.WriterContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Pretty_ESTest extends Pretty_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WriterContext writerContext0 = new WriterContext();
      // Undeclared exception!
      try { 
        Pretty.writeStatementSeparator(writerContext0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.writer.Pretty", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        Pretty.writePreFunctionSeparator((WriterContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.writer.Pretty", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WriterContext writerContext0 = new WriterContext();
      // Undeclared exception!
      try { 
        Pretty.writePreClauseSeparator(writerContext0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.writer.Pretty", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WriterContext writerContext0 = new WriterContext();
      // Undeclared exception!
      try { 
        Pretty.writePostClauseSeparator(writerContext0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("iot.jcypher.query.writer.Pretty", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WriterContext writerContext0 = new WriterContext();
      Format format0 = Format.PRETTY_3;
      writerContext0.cypherFormat = format0;
      Pretty.writePreFunctionSeparator(writerContext0);
      assertFalse(writerContext0.inFunction);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WriterContext writerContext0 = new WriterContext();
      Pretty.writePreFunctionSeparator(writerContext0);
      assertFalse(writerContext0.inFunction);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WriterContext writerContext0 = new WriterContext();
      Format format0 = Format.PRETTY_2;
      writerContext0.cypherFormat = format0;
      Pretty.writePreFunctionSeparator(writerContext0);
      assertFalse(writerContext0.inFunction);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WriterContext writerContext0 = new WriterContext();
      writerContext0.cypherFormat = writerContext0.cypherFormat;
      Format format0 = Format.PRETTY_3;
      writerContext0.cypherFormat = format0;
      Pretty.writePreClauseSeparator(writerContext0, writerContext0.buffer);
      assertFalse(writerContext0.inFunction);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WriterContext writerContext0 = new WriterContext();
      Format format0 = Format.PRETTY_2;
      writerContext0.cypherFormat = format0;
      Pretty.writePreClauseSeparator(writerContext0, writerContext0.buffer);
      assertFalse(writerContext0.inFunction);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WriterContext writerContext0 = new WriterContext();
      Format format0 = Format.PRETTY_1;
      writerContext0.cypherFormat = format0;
      Pretty.writePreClauseSeparator(writerContext0, writerContext0.buffer);
      assertFalse(writerContext0.inFunction);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WriterContext writerContext0 = new WriterContext();
      writerContext0.inFunction = true;
      Pretty.writePreClauseSeparator(writerContext0, writerContext0.buffer);
      assertTrue(writerContext0.inFunction);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WriterContext writerContext0 = new WriterContext();
      Format format0 = Format.PRETTY_3;
      writerContext0.cypherFormat = format0;
      Pretty.writePostClauseSeparator(writerContext0, writerContext0.buffer);
      assertFalse(writerContext0.inFunction);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WriterContext writerContext0 = new WriterContext();
      Format format0 = Format.PRETTY_2;
      writerContext0.cypherFormat = format0;
      Pretty.writePostClauseSeparator(writerContext0, writerContext0.buffer);
      assertFalse(writerContext0.inFunction);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WriterContext writerContext0 = new WriterContext();
      writerContext0.inFunction = true;
      Pretty.writePostClauseSeparator(writerContext0, writerContext0.buffer);
      assertTrue(writerContext0.inFunction);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      WriterContext writerContext0 = new WriterContext();
      Format format0 = Format.PRETTY_3;
      writerContext0.cypherFormat = format0;
      Pretty.writeStatementSeparator(writerContext0, writerContext0.buffer);
      assertFalse(writerContext0.inFunction);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WriterContext writerContext0 = new WriterContext();
      Pretty.writeKeyword("     ", writerContext0);
      assertFalse(writerContext0.inFunction);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Pretty pretty0 = new Pretty();
  }
}
