/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 11:04:12 GMT 2022
 */

package sh.nerd.async.process;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;
import sh.nerd.async.process.NamedThreadFactory;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NamedThreadFactory_ESTest extends NamedThreadFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        NamedThreadFactory.withPrefix((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NamedThreadFactory namedThreadFactory0 = NamedThreadFactory.withPrefix("");
      assertNotNull(namedThreadFactory0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NamedThreadFactory namedThreadFactory0 = new NamedThreadFactory("");
      MockThread mockThread0 = new MockThread();
      Thread thread0 = namedThreadFactory0.newThread(mockThread0);
      assertFalse(thread0.isDaemon());
  }
}
