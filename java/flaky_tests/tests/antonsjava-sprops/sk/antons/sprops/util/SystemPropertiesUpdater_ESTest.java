/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 13:29:09 GMT 2022
 */

package sk.antons.sprops.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sk.antons.sprops.util.SystemPropertiesUpdater;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SystemPropertiesUpdater_ESTest extends SystemPropertiesUpdater_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Properties properties0 = new Properties();
      SystemPropertiesUpdater systemPropertiesUpdater0 = new SystemPropertiesUpdater(properties0);
      properties0.put("", "");
      // Undeclared exception!
      try { 
        systemPropertiesUpdater0.map("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Properties properties0 = new Properties();
      SystemPropertiesUpdater systemPropertiesUpdater0 = new SystemPropertiesUpdater(properties0);
      properties0.put("vXO:57)/&O ", "");
      SystemPropertiesUpdater systemPropertiesUpdater1 = systemPropertiesUpdater0.map("vXO:57)/&O ", "=:'WhvJVLNm");
      assertSame(systemPropertiesUpdater0, systemPropertiesUpdater1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Properties properties0 = new Properties();
      SystemPropertiesUpdater systemPropertiesUpdater0 = new SystemPropertiesUpdater(properties0);
      SystemPropertiesUpdater systemPropertiesUpdater1 = systemPropertiesUpdater0.map("", "#Z:Q-");
      assertSame(systemPropertiesUpdater0, systemPropertiesUpdater1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Properties properties0 = new Properties();
      SystemPropertiesUpdater systemPropertiesUpdater0 = SystemPropertiesUpdater.instance(properties0);
      // Undeclared exception!
      try { 
        systemPropertiesUpdater0.map((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
