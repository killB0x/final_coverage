/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 13:24:25 GMT 2022
 */

package sk.antons.sprops.tool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sk.antons.sprops.tool.Resolved;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Resolved_ESTest extends Resolved_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Resolved.password("");
      String string0 = Resolved.password();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        Resolved.algorithm("Fg4e{| _+0d/y");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // sk/antons/jaul/Is
         //
         verifyException("sk.antons.sprops.tool.Resolved", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Resolved.password();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No password provided.
         //
         verifyException("sk.antons.sprops.tool.Resolved", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Resolved.password("sk\"*R~");
      String string0 = Resolved.password();
      assertEquals("sk\"*R~", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Resolved resolved0 = new Resolved();
      assertEquals(1, resolved0.algorithm());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int int0 = Resolved.algorithm();
      assertEquals(1, int0);
  }
}
