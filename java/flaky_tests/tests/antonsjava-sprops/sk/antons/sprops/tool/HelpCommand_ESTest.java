/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 13:31:10 GMT 2022
 */

package sk.antons.sprops.tool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sk.antons.sprops.tool.Args;
import sk.antons.sprops.tool.HelpCommand;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HelpCommand_ESTest extends HelpCommand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HelpCommand helpCommand0 = new HelpCommand();
      boolean boolean0 = helpCommand0.requirePassword();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HelpCommand helpCommand0 = new HelpCommand();
      Args args0 = Args.instance();
      // Undeclared exception!
      try { 
        helpCommand0.realize(args0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HelpCommand helpCommand0 = new HelpCommand();
      boolean boolean0 = helpCommand0.checkInput((Args) null);
      assertTrue(boolean0);
  }
}
