/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 13:06:33 GMT 2022
 */

package sk.antons.sprops.tool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sk.antons.sprops.tool.Args;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Args_ESTest extends Args_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Args args0 = new Args();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      Args args1 = args0.parse(stringArray0);
      assertSame(args0, args1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Args args0 = new Args();
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        args0.isSet(stringArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // sk/antons/jaul/Is
         //
         verifyException("sk.antons.sprops.tool.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Args args0 = new Args();
      boolean boolean0 = args0.isSet((String[]) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Args args0 = Args.instance();
      String[] stringArray0 = new String[0];
      boolean boolean0 = args0.isSet(stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Args args0 = new Args();
      String[] stringArray0 = new String[0];
      String string0 = args0.first(stringArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Args args0 = new Args();
      String string0 = args0.first((String[]) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Args args0 = Args.instance();
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        args0.first(stringArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // sk/antons/jaul/Is
         //
         verifyException("sk.antons.sprops.tool.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Args args0 = new Args();
      String[] stringArray0 = new String[5];
      stringArray0[2] = "";
      Args args1 = args0.parse(stringArray0);
      List<String> list0 = args1.all(stringArray0);
      assertEquals(5, list0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Args args0 = new Args();
      List<String> list0 = args0.all((String[]) null);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[10];
      Args args0 = new Args();
      Args args1 = args0.single((String) null);
      Args args2 = args1.parse(stringArray0);
      assertSame(args2, args1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[2];
      Args args0 = Args.instance();
      args0.pair((String) null);
      Args args1 = args0.parse(stringArray0);
      assertSame(args1, args0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Args args0 = new Args();
      Args args1 = args0.parse((String[]) null);
      assertSame(args1, args0);
  }
}
