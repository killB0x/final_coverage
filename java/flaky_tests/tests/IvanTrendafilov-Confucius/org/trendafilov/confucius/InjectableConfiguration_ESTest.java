/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 18:48:19 GMT 2022
 */

package org.trendafilov.confucius;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.trendafilov.confucius.InjectableConfiguration;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InjectableConfiguration_ESTest extends InjectableConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      InjectableConfiguration injectableConfiguration0 = null;
      try {
        injectableConfiguration0 = new InjectableConfiguration(pushbackInputStream0, (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to read configuration
         //
         verifyException("org.trendafilov.confucius.core.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InjectableConfiguration injectableConfiguration0 = new InjectableConfiguration((InputStream) null, "[");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InjectableConfiguration injectableConfiguration0 = null;
      try {
        injectableConfiguration0 = new InjectableConfiguration("[", "[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to read configuration
         //
         verifyException("org.trendafilov.confucius.core.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InjectableConfiguration injectableConfiguration0 = new InjectableConfiguration();
  }
}
