/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 15:28:43 GMT 2022
 */

package fun.fengwk.jwt4j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import fun.fengwk.jwt4j.Signer;
import fun.fengwk.jwt4j.SignerProvider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SignerProvider_ESTest extends SignerProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SignerProvider signerProvider0 = new SignerProvider();
      // Undeclared exception!
      try { 
        signerProvider0.getSigner("Lw@Q#8s\"+.bEO");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unsupported sign alg 'Lw@Q#8s\"+.bEO'
         //
         verifyException("fun.fengwk.jwt4j.SignerProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SignerProvider signerProvider0 = new SignerProvider();
      Signer signer0 = signerProvider0.getSigner("HS256");
      assertEquals("HS256", signer0.alg());
  }
}
