/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 15:30:20 GMT 2022
 */

package fun.fengwk.jwt4j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import fun.fengwk.jwt4j.Validator;
import fun.fengwk.jwt4j.ValidatorProvider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ValidatorProvider_ESTest extends ValidatorProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValidatorProvider validatorProvider0 = new ValidatorProvider();
      // Undeclared exception!
      try { 
        validatorProvider0.getValidator("X>n438d>UU2");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unsupported validate alg 'X>n438d>UU2'
         //
         verifyException("fun.fengwk.jwt4j.ValidatorProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ValidatorProvider validatorProvider0 = new ValidatorProvider();
      Validator validator0 = validatorProvider0.getValidator("RS256");
      assertEquals("RS256", validator0.alg());
  }
}
