/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 19:47:08 GMT 2022
 */

package org.sevensource.magnolia.responsivedam.configuration;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sevensource.magnolia.responsivedam.configuration.DamSizeConstraints;
import org.sevensource.magnolia.responsivedam.configuration.DamVariation;
import org.sevensource.magnolia.responsivedam.configuration.DamVariationSet;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DamVariation_ESTest extends DamVariation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DamVariation damVariation0 = new DamVariation();
      DamVariationSet damVariationSet0 = new DamVariationSet(":");
      damVariation0.setVariationSet(damVariationSet0);
      DamVariationSet damVariationSet1 = damVariation0.getVariationSet();
      assertSame(damVariationSet1, damVariationSet0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DamVariation damVariation0 = new DamVariation();
      Double double0 = new Double(0.0);
      damVariation0.setRatio(double0);
      Double double1 = damVariation0.getRatio();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DamVariation damVariation0 = new DamVariation();
      Double double0 = new Double(3762.9571295277);
      damVariation0.setRatio(double0);
      Double double1 = damVariation0.getRatio();
      assertEquals(3762.9571295277, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DamVariation damVariation0 = new DamVariation();
      Double double0 = new Double((-1.0));
      damVariation0.setRatio(double0);
      Double double1 = damVariation0.getRatio();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DamVariation damVariation0 = new DamVariation();
      damVariation0.setName("Omt?a;KxD]uw OC,");
      String string0 = damVariation0.getName();
      assertEquals("Omt?a;KxD]uw OC,", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DamVariation damVariation0 = new DamVariation();
      // Undeclared exception!
      try { 
        damVariation0.setAspect((String) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("org.sevensource.magnolia.responsivedam.configuration.DamVariation", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DamVariation damVariation0 = new DamVariation();
      damVariation0.setName("");
      String string0 = damVariation0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DamVariation damVariation0 = new DamVariation();
      DamSizeConstraints damSizeConstraints0 = damVariation0.getConstraints();
      assertNull(damSizeConstraints0.getMaximumResolutions());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DamVariation damVariation0 = new DamVariation();
      Double double0 = damVariation0.getRatio();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DamVariation damVariation0 = new DamVariation();
      DamVariationSet damVariationSet0 = damVariation0.getVariationSet();
      assertNull(damVariationSet0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DamVariation damVariation0 = new DamVariation();
      String string0 = damVariation0.getAspect();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DamVariation damVariation0 = new DamVariation();
      String string0 = damVariation0.getName();
      assertNull(string0);
  }
}
