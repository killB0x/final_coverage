/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:09:50 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.option.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.option.model.OptionChainModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OptionChainModel_ESTest extends OptionChainModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OptionChainModel optionChainModel0 = new OptionChainModel("}o+s; k_pQaZHg=dv", "A`,cv");
      optionChainModel0.setSymbol((String) null);
      String string0 = optionChainModel0.getSymbol();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OptionChainModel optionChainModel0 = new OptionChainModel("}o+s; k_pQaZHg=dv", "A`,cv");
      optionChainModel0.setSymbol("");
      String string0 = optionChainModel0.getSymbol();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OptionChainModel optionChainModel0 = new OptionChainModel();
      Long long0 = new Long(4967L);
      optionChainModel0.setExpiry(long0);
      Long long1 = optionChainModel0.getExpiry();
      assertEquals(4967L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Long long0 = new Long(0L);
      OptionChainModel optionChainModel0 = new OptionChainModel("kb!CokJxH?!i\u0004dI,", long0);
      Long long1 = new Long((-1L));
      optionChainModel0.setExpiry(long1);
      Long long2 = optionChainModel0.getExpiry();
      assertEquals((-1L), (long)long2);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Long long0 = new Long(0L);
      OptionChainModel optionChainModel0 = new OptionChainModel("kb!CokJxH?!i\u0004dI,", long0);
      optionChainModel0.setExpiry((String) null);
      assertEquals("kb!CokJxH?!i\u0004dI,", optionChainModel0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OptionChainModel optionChainModel0 = new OptionChainModel();
      Long long0 = optionChainModel0.getExpiry();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Long long0 = new Long(0L);
      OptionChainModel optionChainModel0 = new OptionChainModel("kb!CokJxH?!i\u0004dI,", long0);
      String string0 = optionChainModel0.toString();
      assertEquals("OptionChainModel{symbol='kb!CokJxH?!i\u0004dI,', expiry='0'}", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Long long0 = new Long(0L);
      OptionChainModel optionChainModel0 = new OptionChainModel("kb!CokJxH?!i\u0004dI,", long0);
      Long long1 = optionChainModel0.getExpiry();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Long long0 = new Long(0L);
      OptionChainModel optionChainModel0 = new OptionChainModel("kb!CokJxH?!i\u0004dI,", long0);
      String string0 = optionChainModel0.getSymbol();
      assertEquals("kb!CokJxH?!i\u0004dI,", string0);
  }
}
