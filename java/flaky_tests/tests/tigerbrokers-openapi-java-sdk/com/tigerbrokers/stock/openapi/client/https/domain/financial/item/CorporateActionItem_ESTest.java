/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:29:51 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.financial.item;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.financial.item.CorporateActionItem;
import com.tigerbrokers.stock.openapi.client.struct.enums.CorporateActionType;
import java.time.LocalDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CorporateActionItem_ESTest extends CorporateActionItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      corporateActionItem0.setSymbol("_-7AhS.ypuAA");
      String string0 = corporateActionItem0.getSymbol();
      assertEquals("_-7AhS.ypuAA", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      corporateActionItem0.setSymbol("");
      String string0 = corporateActionItem0.getSymbol();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      corporateActionItem0.setMarket(", market='");
      String string0 = corporateActionItem0.getMarket();
      assertEquals(", market='", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      corporateActionItem0.setMarket("");
      String string0 = corporateActionItem0.getMarket();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      Long long0 = new Long(0L);
      corporateActionItem0.setId(long0);
      Long long1 = corporateActionItem0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      Long long0 = new Long(344L);
      corporateActionItem0.setId(long0);
      Long long1 = corporateActionItem0.getId();
      assertEquals(344L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      Long long0 = new Long((-2487L));
      corporateActionItem0.setId(long0);
      Long long1 = corporateActionItem0.getId();
      assertEquals((-2487L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      corporateActionItem0.setExchange("DIVIDEND");
      String string0 = corporateActionItem0.getExchange();
      assertEquals("DIVIDEND", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      corporateActionItem0.setExchange("");
      String string0 = corporateActionItem0.getExchange();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      LocalDate localDate0 = MockLocalDate.now();
      corporateActionItem0.setExecuteDate(localDate0);
      LocalDate localDate1 = corporateActionItem0.getExecuteDate();
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      String string0 = corporateActionItem0.getMarket();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      String string0 = corporateActionItem0.toString();
      assertEquals("CorporateActionItem{id=null, symbol='null', market='null', exchange='null', executeDate=null, actionType=null}", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      CorporateActionType corporateActionType0 = CorporateActionType.DIVIDEND;
      corporateActionItem0.setActionType(corporateActionType0);
      CorporateActionType corporateActionType1 = corporateActionItem0.getActionType();
      assertSame(corporateActionType1, corporateActionType0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      String string0 = corporateActionItem0.getExchange();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      corporateActionItem0.getActionType();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      String string0 = corporateActionItem0.getSymbol();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      LocalDate localDate0 = corporateActionItem0.getExecuteDate();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CorporateActionItem corporateActionItem0 = new CorporateActionItem();
      Long long0 = corporateActionItem0.getId();
      corporateActionItem0.setId(long0);
      assertNull(corporateActionItem0.getId());
  }
}
