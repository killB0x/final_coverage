/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 06:10:40 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.option.item;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.option.item.OptionChainItem;
import com.tigerbrokers.stock.openapi.client.https.domain.option.item.OptionRealTimeQuoteGroup;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OptionChainItem_ESTest extends OptionChainItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OptionChainItem optionChainItem0 = new OptionChainItem();
      optionChainItem0.setSymbol("GuFHK<");
      String string0 = optionChainItem0.getSymbol();
      assertEquals("GuFHK<", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OptionChainItem optionChainItem0 = new OptionChainItem();
      LinkedList<OptionRealTimeQuoteGroup> linkedList0 = new LinkedList<OptionRealTimeQuoteGroup>();
      optionChainItem0.setItems(linkedList0);
      List<OptionRealTimeQuoteGroup> list0 = optionChainItem0.getItems();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OptionChainItem optionChainItem0 = new OptionChainItem();
      LinkedList<OptionRealTimeQuoteGroup> linkedList0 = new LinkedList<OptionRealTimeQuoteGroup>();
      OptionRealTimeQuoteGroup optionRealTimeQuoteGroup0 = new OptionRealTimeQuoteGroup();
      linkedList0.add(optionRealTimeQuoteGroup0);
      optionChainItem0.setItems(linkedList0);
      List<OptionRealTimeQuoteGroup> list0 = optionChainItem0.getItems();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OptionChainItem optionChainItem0 = new OptionChainItem();
      Long long0 = new Long(0L);
      optionChainItem0.setExpiry(long0);
      Long long1 = optionChainItem0.getExpiry();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OptionChainItem optionChainItem0 = new OptionChainItem();
      Long long0 = new Long(72L);
      optionChainItem0.setExpiry(long0);
      Long long1 = optionChainItem0.getExpiry();
      assertEquals(72L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OptionChainItem optionChainItem0 = new OptionChainItem();
      String string0 = optionChainItem0.getSymbol();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OptionChainItem optionChainItem0 = new OptionChainItem();
      String string0 = optionChainItem0.toString();
      assertEquals("OptionChainItem{symbol='null', expiry=null, items=null}", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OptionChainItem optionChainItem0 = new OptionChainItem();
      optionChainItem0.setSymbol("");
      String string0 = optionChainItem0.getSymbol();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OptionChainItem optionChainItem0 = new OptionChainItem();
      Long long0 = Long.valueOf((-1L));
      optionChainItem0.setExpiry(long0);
      Long long1 = optionChainItem0.getExpiry();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OptionChainItem optionChainItem0 = new OptionChainItem();
      List<OptionRealTimeQuoteGroup> list0 = optionChainItem0.getItems();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OptionChainItem optionChainItem0 = new OptionChainItem();
      Long long0 = optionChainItem0.getExpiry();
      assertNull(long0);
  }
}
