/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 04:51:29 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.validator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tigerbrokers.stock.openapi.client.https.domain.financial.model.FinancialReportModel;
import com.tigerbrokers.stock.openapi.client.https.validator.FinancialReportRequestValidator;
import com.tigerbrokers.stock.openapi.client.struct.enums.FinancialPeriodType;
import com.tigerbrokers.stock.openapi.client.struct.enums.Market;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FinancialReportRequestValidator_ESTest extends FinancialReportRequestValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FinancialReportRequestValidator financialReportRequestValidator0 = new FinancialReportRequestValidator();
      // Undeclared exception!
      try { 
        financialReportRequestValidator0.validate((FinancialReportModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialReportRequestValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      financialReportModel0.setSymbols(linkedList0);
      FinancialPeriodType financialPeriodType0 = FinancialPeriodType.Annual;
      financialReportModel0.setPeriodType(financialPeriodType0);
      Market market0 = Market.ALL;
      financialReportModel0.setMarket(market0);
      financialReportModel0.setFields(linkedList0);
      linkedList0.add("fielCs");
      FinancialReportRequestValidator financialReportRequestValidator0 = new FinancialReportRequestValidator();
      financialReportRequestValidator0.validate(financialReportModel0);
      assertEquals(Market.ALL, financialReportModel0.getMarket());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FinancialReportRequestValidator financialReportRequestValidator0 = new FinancialReportRequestValidator();
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      financialReportModel0.setSymbols(linkedList1);
      Market market0 = Market.ALL;
      financialReportModel0.setMarket(market0);
      financialReportModel0.setFields(linkedList0);
      linkedList1.add("fielCs");
      try { 
        financialReportRequestValidator0.validate(financialReportModel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 10101:client biz param error(fields is requried)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialReportRequestValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FinancialReportRequestValidator financialReportRequestValidator0 = new FinancialReportRequestValidator();
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      financialReportModel0.setSymbols(linkedList0);
      Market market0 = Market.ALL;
      financialReportModel0.setMarket(market0);
      financialReportModel0.setFields(linkedList0);
      linkedList0.add("fielCs");
      try { 
        financialReportRequestValidator0.validate(financialReportModel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 10101:client biz param error(period_type is requried)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialReportRequestValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FinancialReportRequestValidator financialReportRequestValidator0 = new FinancialReportRequestValidator();
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      financialReportModel0.setSymbols(linkedList0);
      Market market0 = Market.ALL;
      financialReportModel0.setMarket(market0);
      linkedList0.add("fielCs");
      try { 
        financialReportRequestValidator0.validate(financialReportModel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 10101:client biz param error(fields is requried)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialReportRequestValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FinancialReportRequestValidator financialReportRequestValidator0 = new FinancialReportRequestValidator();
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      financialReportModel0.setSymbols(linkedList0);
      Market market0 = Market.ALL;
      financialReportModel0.setMarket(market0);
      try { 
        financialReportRequestValidator0.validate(financialReportModel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 10101:client biz param error(symbols is requried)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialReportRequestValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FinancialReportRequestValidator financialReportRequestValidator0 = new FinancialReportRequestValidator();
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      try { 
        financialReportRequestValidator0.validate(financialReportModel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 10101:client biz param error(market is requried)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialReportRequestValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FinancialReportRequestValidator financialReportRequestValidator0 = new FinancialReportRequestValidator();
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      Market market0 = Market.ALL;
      financialReportModel0.setMarket(market0);
      try { 
        financialReportRequestValidator0.validate(financialReportModel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 10101:client biz param error(symbols is requried)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialReportRequestValidator", e);
      }
  }
}
