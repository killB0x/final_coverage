/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 06:20:18 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.quote.item;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.quote.item.QuoteContract;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuoteContract_ESTest extends QuoteContract_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setRight("T@i1Lq@FB?");
      String string0 = quoteContract0.toString();
      assertEquals("QuoteContract{symbol='null', name='null', exchange='null', market='null', secType='null', currency='null', expiry='null', strike='null', multiplier=null, right='T@i1Lq@FB?'}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setExpiry("");
      String string0 = quoteContract0.toString();
      assertEquals("QuoteContract{symbol='null', name='null', exchange='null', market='null', secType='null', currency='null', expiry='', strike='null', multiplier=null, right='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setCurrency("*1_4r$jKW>!%v");
      String string0 = quoteContract0.toString();
      assertEquals("QuoteContract{symbol='null', name='null', exchange='null', market='null', secType='null', currency='*1_4r$jKW>!%v', expiry='null', strike='null', multiplier=null, right='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setStrike("*1_4r$jKW>!%v");
      String string0 = quoteContract0.toString();
      assertEquals("QuoteContract{symbol='null', name='null', exchange='null', market='null', secType='null', currency='null', expiry='null', strike='*1_4r$jKW>!%v', multiplier=null, right='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setExchange("AuS6(\"mo");
      String string0 = quoteContract0.toString();
      assertEquals("QuoteContract{symbol='null', name='null', exchange='AuS6(\"mo', market='null', secType='null', currency='null', expiry='null', strike='null', multiplier=null, right='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setName("T@i1Lq@FB?");
      String string0 = quoteContract0.toString();
      assertEquals("QuoteContract{symbol='null', name='T@i1Lq@FB?', exchange='null', market='null', secType='null', currency='null', expiry='null', strike='null', multiplier=null, right='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.market = "";
      String string0 = quoteContract0.toString();
      assertEquals("QuoteContract{symbol='null', name='null', exchange='null', market='', secType='null', currency='null', expiry='null', strike='null', multiplier=null, right='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setSymbol("*1_4r$jKW>!%v");
      String string0 = quoteContract0.getSymbol();
      assertEquals("*1_4r$jKW>!%v", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.symbol = "";
      String string0 = quoteContract0.getSymbol();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.strike = "h@Fguh/{u[<&";
      String string0 = quoteContract0.getStrike();
      assertEquals("h@Fguh/{u[<&", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.secType = "N>";
      String string0 = quoteContract0.getSecType();
      assertEquals("N>", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setSecType("");
      String string0 = quoteContract0.getSecType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setRight("");
      String string0 = quoteContract0.getRight();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setName("");
      String string0 = quoteContract0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      Double double0 = Double.valueOf(0.0);
      quoteContract0.multiplier = double0;
      Double double1 = quoteContract0.getMultiplier();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      Double double0 = Double.valueOf(1.0);
      quoteContract0.setMultiplier(double0);
      Double double1 = quoteContract0.getMultiplier();
      assertEquals(1.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      Double double0 = Double.valueOf((-4928.777));
      quoteContract0.setMultiplier(double0);
      Double double1 = quoteContract0.getMultiplier();
      assertEquals((-4928.777), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.market = ".";
      String string0 = quoteContract0.getMarket();
      assertEquals(".", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setExpiry("Sv R,");
      String string0 = quoteContract0.getExpiry();
      assertEquals("Sv R,", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.expiry = "";
      String string0 = quoteContract0.getExpiry();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.exchange = "S =V|05'cJ!J,2R{wk";
      String string0 = quoteContract0.getExchange();
      assertEquals("S =V|05'cJ!J,2R{wk", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.exchange = "";
      String string0 = quoteContract0.getExchange();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.currency = "i|vgL)Kh&#ftw(H";
      String string0 = quoteContract0.getCurrency();
      assertEquals("i|vgL)Kh&#ftw(H", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setStrike("");
      String string0 = quoteContract0.getStrike();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      String string0 = quoteContract0.getExchange();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      String string0 = quoteContract0.getCurrency();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setMarket("");
      String string0 = quoteContract0.getMarket();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      String string0 = quoteContract0.getMarket();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      String string0 = quoteContract0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      String string0 = quoteContract0.getExpiry();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setName("T@i1Lq@FB?");
      String string0 = quoteContract0.getName();
      assertEquals("T@i1Lq@FB?", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setRight("T@i1Lq@FB?");
      String string0 = quoteContract0.getRight();
      assertEquals("T@i1Lq@FB?", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      Double double0 = quoteContract0.getMultiplier();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      String string0 = quoteContract0.getStrike();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      String string0 = quoteContract0.getSymbol();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      String string0 = quoteContract0.getRight();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      quoteContract0.setCurrency("");
      String string0 = quoteContract0.getCurrency();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      QuoteContract quoteContract0 = new QuoteContract();
      String string0 = quoteContract0.getSecType();
      assertNull(string0);
  }
}
