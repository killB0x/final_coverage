/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:13:03 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.user.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.user.model.UserLoginModel;
import com.tigerbrokers.stock.openapi.client.struct.enums.GrantType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UserLoginModel_ESTest extends UserLoginModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GrantType grantType0 = GrantType.email;
      UserLoginModel userLoginModel0 = new UserLoginModel((String) null, (String) null, grantType0);
      String string0 = userLoginModel0.getUserName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GrantType grantType0 = GrantType.email;
      UserLoginModel userLoginModel0 = new UserLoginModel("", "com.tigerbrokers.stock.openapi.client.struct.enums.GrantType", grantType0);
      String string0 = userLoginModel0.getUserName();
      assertEquals("", string0);
      assertEquals("com.tigerbrokers.stock.openapi.client.struct.enums.GrantType", userLoginModel0.getPassword());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UserLoginModel userLoginModel0 = new UserLoginModel((String) null, (String) null);
      String string0 = userLoginModel0.getPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UserLoginModel userLoginModel0 = new UserLoginModel("\"~GxfffH6<)^'S", "j");
      assertEquals("j", userLoginModel0.getPassword());
      
      userLoginModel0.setPassword("");
      userLoginModel0.getPassword();
      assertEquals("\"~GxfffH6<)^'S", userLoginModel0.getUserName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserLoginModel userLoginModel0 = new UserLoginModel((String) null, (String) null);
      userLoginModel0.setGrantType((String) null);
      String string0 = userLoginModel0.getGrantType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GrantType grantType0 = GrantType.phone;
      UserLoginModel userLoginModel0 = new UserLoginModel("|lwN.sXS", "|lwN.sXS", grantType0);
      userLoginModel0.setGrantType("");
      String string0 = userLoginModel0.getGrantType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserLoginModel userLoginModel0 = new UserLoginModel((String) null, (String) null, (GrantType) null);
      userLoginModel0.setPassword("uspQb(GR");
      assertEquals("uspQb(GR", userLoginModel0.getPassword());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GrantType grantType0 = GrantType.phone;
      UserLoginModel userLoginModel0 = new UserLoginModel("mwZb<dM?", "mwZb<dM?", grantType0);
      String string0 = userLoginModel0.getPassword();
      assertEquals("mwZb<dM?", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UserLoginModel userLoginModel0 = new UserLoginModel("\"~GxfffH6<)^'S", "j");
      userLoginModel0.getGrantType();
      assertEquals("j", userLoginModel0.getPassword());
      assertEquals("\"~GxfffH6<)^'S", userLoginModel0.getUserName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserLoginModel userLoginModel0 = new UserLoginModel("\"~GxfffH6<)^'S", "j");
      assertEquals("\"~GxfffH6<)^'S", userLoginModel0.getUserName());
      
      userLoginModel0.setUserName("'k(E_|+[(8]");
      assertEquals("j", userLoginModel0.getPassword());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GrantType grantType0 = GrantType.phone;
      UserLoginModel userLoginModel0 = new UserLoginModel("mwZb<dM?", "mwZb<dM?", grantType0);
      String string0 = userLoginModel0.getUserName();
      assertEquals("mwZb<dM?", string0);
  }
}
