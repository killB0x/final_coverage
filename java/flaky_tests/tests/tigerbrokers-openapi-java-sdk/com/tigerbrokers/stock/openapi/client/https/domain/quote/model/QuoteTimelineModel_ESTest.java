/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:11:33 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.quote.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.quote.model.QuoteTimelineModel;
import com.tigerbrokers.stock.openapi.client.struct.enums.Language;
import com.tigerbrokers.stock.openapi.client.struct.enums.TimeLineType;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuoteTimelineModel_ESTest extends QuoteTimelineModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Long long0 = new Long(752L);
      QuoteTimelineModel quoteTimelineModel0 = new QuoteTimelineModel(linkedList0, long0);
      quoteTimelineModel0.setPeriod((String) null);
      String string0 = quoteTimelineModel0.getPeriod();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Long long0 = new Long(3570L);
      TimeLineType timeLineType0 = TimeLineType.day5;
      Language language0 = Language.en_US;
      QuoteTimelineModel quoteTimelineModel0 = new QuoteTimelineModel(linkedList0, long0, true, timeLineType0, language0);
      quoteTimelineModel0.setPeriod("");
      String string0 = quoteTimelineModel0.getPeriod();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Long long0 = new Long(2762L);
      Language language0 = Language.en_US;
      QuoteTimelineModel quoteTimelineModel0 = new QuoteTimelineModel(linkedList0, long0, true, language0);
      Long long1 = quoteTimelineModel0.getBeginTime();
      assertEquals(2762L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Long long0 = Long.getLong("2$*Rg^", 0L);
      QuoteTimelineModel quoteTimelineModel0 = new QuoteTimelineModel(linkedList0, long0);
      quoteTimelineModel0.setBeginTime((Long) null);
      Long long1 = quoteTimelineModel0.getBeginTime();
      assertNull(long1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Long long0 = new Long((-2469L));
      Language language0 = Language.zh_TW;
      QuoteTimelineModel quoteTimelineModel0 = new QuoteTimelineModel(linkedList0, long0, false, language0);
      Long long1 = quoteTimelineModel0.getBeginTime();
      assertEquals((-2469L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Long long0 = new Long(3052L);
      Language language0 = Language.zh_CN;
      QuoteTimelineModel quoteTimelineModel0 = new QuoteTimelineModel(linkedList0, long0, true, (TimeLineType) null, language0);
      assertNull(quoteTimelineModel0.getPeriod());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Long long0 = new Long(752L);
      QuoteTimelineModel quoteTimelineModel0 = new QuoteTimelineModel(linkedList0, long0);
      String string0 = quoteTimelineModel0.getPeriod();
      assertFalse(linkedList0.contains(string0));
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Long long0 = new Long(0L);
      QuoteTimelineModel quoteTimelineModel0 = new QuoteTimelineModel((List<String>) null, long0, false);
      assertFalse(quoteTimelineModel0.isIncludeHourTrading());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Long long0 = Long.valueOf(0L);
      TimeLineType timeLineType0 = TimeLineType.day5;
      Language language0 = Language.zh_TW;
      QuoteTimelineModel quoteTimelineModel0 = new QuoteTimelineModel(linkedList0, long0, true, timeLineType0, language0);
      Long long1 = quoteTimelineModel0.getBeginTime();
      assertEquals(0L, (long)long1);
  }
}
