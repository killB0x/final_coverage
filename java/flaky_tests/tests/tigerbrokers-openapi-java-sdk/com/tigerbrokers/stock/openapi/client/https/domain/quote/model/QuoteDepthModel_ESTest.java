/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 06:33:31 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.quote.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.quote.model.QuoteDepthModel;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuoteDepthModel_ESTest extends QuoteDepthModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      QuoteDepthModel quoteDepthModel0 = new QuoteDepthModel(linkedList0, "");
      List<String> list0 = quoteDepthModel0.getSymbols();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      QuoteDepthModel quoteDepthModel0 = new QuoteDepthModel(linkedList0, "");
      linkedList0.offer("com.tigerbrokers.stock.openapi.client.https.domain.ApiModel");
      List<String> list0 = quoteDepthModel0.getSymbols();
      assertFalse(list0.contains(""));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      QuoteDepthModel quoteDepthModel0 = new QuoteDepthModel(linkedList0, "");
      String string0 = quoteDepthModel0.getMarket();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      QuoteDepthModel quoteDepthModel0 = new QuoteDepthModel(linkedList0, "");
      quoteDepthModel0.setMarket("!Xto(zKO5*e?`e");
      String string0 = quoteDepthModel0.getMarket();
      assertEquals("!Xto(zKO5*e?`e", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QuoteDepthModel quoteDepthModel0 = new QuoteDepthModel((List<String>) null, (String) null);
      String string0 = quoteDepthModel0.getMarket();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QuoteDepthModel quoteDepthModel0 = new QuoteDepthModel((List<String>) null, (String) null);
      List<String> list0 = quoteDepthModel0.getSymbols();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      QuoteDepthModel quoteDepthModel0 = new QuoteDepthModel((List<String>) null, (String) null);
      quoteDepthModel0.setSymbols((List<String>) null);
      assertNull(quoteDepthModel0.getMarket());
  }
}
