/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:37:11 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.quote.item;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.quote.item.HourTrading;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HourTrading_ESTest extends HourTrading_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Double double0 = Double.valueOf((double) (-584L));
      hourTrading0.preClose = double0;
      String string0 = hourTrading0.toString();
      assertEquals("HourTrading{tag='null', latestPrice=null, preClose=-584.0, latestTime='null', volume=null, timestamp=null}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Long long0 = new Long(0L);
      hourTrading0.setVolume(long0);
      Long long1 = hourTrading0.getVolume();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Long long0 = new Long(2225L);
      hourTrading0.setVolume(long0);
      Long long1 = hourTrading0.getVolume();
      assertEquals(2225L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Long long0 = new Long((-976L));
      hourTrading0.setVolume(long0);
      Long long1 = hourTrading0.getVolume();
      assertEquals((-976L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Long long0 = new Long(2225L);
      hourTrading0.setTimestamp(long0);
      Long long1 = hourTrading0.getTimestamp();
      assertEquals(2225L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Long long0 = new Long((-493L));
      hourTrading0.setTimestamp(long0);
      Long long1 = hourTrading0.getTimestamp();
      assertEquals((-493L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      hourTrading0.setTag(", volume=");
      String string0 = hourTrading0.getTag();
      assertEquals(", volume=", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      hourTrading0.setTag("");
      String string0 = hourTrading0.getTag();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Double double0 = Double.valueOf(0.0);
      hourTrading0.setPreClose(double0);
      Double double1 = hourTrading0.getPreClose();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Double double0 = Double.valueOf(136.6);
      hourTrading0.setPreClose(double0);
      Double double1 = hourTrading0.getPreClose();
      assertEquals(136.6, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Double double0 = Double.valueOf((double) (-584L));
      hourTrading0.preClose = double0;
      Double double1 = hourTrading0.getPreClose();
      assertEquals((-584.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      hourTrading0.setLatestTime(", timestamp=");
      String string0 = hourTrading0.getLatestTime();
      assertEquals(", timestamp=", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Double double0 = Double.valueOf(337.05271234424);
      hourTrading0.latestPrice = double0;
      Double double1 = hourTrading0.getLatestPrice();
      assertEquals(337.05271234424, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Double double0 = Double.valueOf((-4319.5662));
      hourTrading0.latestPrice = double0;
      Double double1 = hourTrading0.getLatestPrice();
      assertEquals((-4319.5662), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Long long0 = new Long(0L);
      hourTrading0.setTimestamp(long0);
      Long long1 = hourTrading0.getTimestamp();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      hourTrading0.setLatestTime("");
      String string0 = hourTrading0.getLatestTime();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Double double0 = hourTrading0.getLatestPrice();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Long long0 = hourTrading0.getVolume();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Double double0 = Double.valueOf(0.0);
      hourTrading0.setLatestPrice(double0);
      Double double1 = hourTrading0.getLatestPrice();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      String string0 = hourTrading0.getLatestTime();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Double double0 = hourTrading0.getPreClose();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      Long long0 = hourTrading0.getTimestamp();
      hourTrading0.setVolume(long0);
      assertNull(hourTrading0.getLatestPrice());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HourTrading hourTrading0 = new HourTrading();
      String string0 = hourTrading0.getTag();
      assertNull(string0);
  }
}
