/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 06:37:59 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.request.future;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.request.future.FutureContinuousContractRequest;
import com.tigerbrokers.stock.openapi.client.struct.enums.Language;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FutureContinuousContractRequest_ESTest extends FutureContinuousContractRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Language language0 = Language.zh_TW;
      FutureContinuousContractRequest futureContinuousContractRequest0 = FutureContinuousContractRequest.newRequest((String) null, language0);
      assertEquals("future_continuous_contracts", futureContinuousContractRequest0.getApiMethodName());
      assertEquals("1.0", futureContinuousContractRequest0.getApiVersion());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FutureContinuousContractRequest futureContinuousContractRequest0 = new FutureContinuousContractRequest();
      futureContinuousContractRequest0.getResponseClass();
      assertEquals("1.0", futureContinuousContractRequest0.getApiVersion());
      assertEquals("future_continuous_contracts", futureContinuousContractRequest0.getApiMethodName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FutureContinuousContractRequest futureContinuousContractRequest0 = FutureContinuousContractRequest.newRequest("future_continuous_contracts");
      assertEquals("future_continuous_contracts", futureContinuousContractRequest0.getApiMethodName());
      assertEquals("1.0", futureContinuousContractRequest0.getApiVersion());
  }
}
