/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 06:02:28 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.quote.item;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.quote.item.TimelineItem;
import com.tigerbrokers.stock.openapi.client.https.domain.quote.item.TimelineRange;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TimelineItem_ESTest extends TimelineItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      timelineItem0.setSymbol("wZ\".Xwb3Q^aL");
      String string0 = timelineItem0.getSymbol();
      assertEquals("wZ\".Xwb3Q^aL", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      TimelineRange timelineRange0 = new TimelineRange();
      timelineItem0.setPreMarket(timelineRange0);
      TimelineRange timelineRange1 = timelineItem0.getPreMarket();
      assertNull(timelineRange1.getEndTime());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      Double double0 = new Double(0.0);
      timelineItem0.setPreClose(double0);
      Double double1 = timelineItem0.getPreClose();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      Double double0 = new Double(851.41);
      timelineItem0.setPreClose(double0);
      Double double1 = timelineItem0.getPreClose();
      assertEquals(851.41, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      Double double0 = new Double((-1.0));
      timelineItem0.setPreClose(double0);
      Double double1 = timelineItem0.getPreClose();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      timelineItem0.setPeriod("TimelineItem{symbol='");
      String string0 = timelineItem0.getPeriod();
      assertEquals("TimelineItem{symbol='", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      TimelineRange timelineRange0 = new TimelineRange();
      timelineItem0.setIntraday(timelineRange0);
      TimelineRange timelineRange1 = timelineItem0.getIntraday();
      assertNull(timelineRange1.getBeginTime());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      TimelineRange timelineRange0 = new TimelineRange();
      timelineItem0.setAfterHours(timelineRange0);
      TimelineRange timelineRange1 = timelineItem0.getAfterHours();
      assertSame(timelineRange1, timelineRange0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      TimelineRange timelineRange0 = timelineItem0.getPreMarket();
      assertNull(timelineRange0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      timelineItem0.setSymbol("");
      String string0 = timelineItem0.getSymbol();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      String string0 = timelineItem0.getPeriod();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      String string0 = timelineItem0.getSymbol();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      Double double0 = timelineItem0.getPreClose();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      TimelineRange timelineRange0 = timelineItem0.getAfterHours();
      assertNull(timelineRange0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      TimelineRange timelineRange0 = timelineItem0.getIntraday();
      assertNull(timelineRange0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      String string0 = timelineItem0.toString();
      assertEquals("TimelineItem{symbol='null', period='null', preClose=null, intraday=null, preMarket=null, afterHours=null}", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TimelineItem timelineItem0 = new TimelineItem();
      timelineItem0.setPeriod("");
      String string0 = timelineItem0.getPeriod();
      assertEquals("", string0);
  }
}
