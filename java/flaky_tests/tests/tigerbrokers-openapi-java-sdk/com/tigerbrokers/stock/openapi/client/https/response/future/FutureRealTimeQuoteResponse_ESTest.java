/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 07:04:09 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.response.future;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.future.item.FutureRealTimeItem;
import com.tigerbrokers.stock.openapi.client.https.response.future.FutureRealTimeQuoteResponse;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FutureRealTimeQuoteResponse_ESTest extends FutureRealTimeQuoteResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FutureRealTimeQuoteResponse futureRealTimeQuoteResponse0 = new FutureRealTimeQuoteResponse();
      LinkedList<FutureRealTimeItem> linkedList0 = new LinkedList<FutureRealTimeItem>();
      futureRealTimeQuoteResponse0.setFutureRealTimeItems(linkedList0);
      List<FutureRealTimeItem> list0 = futureRealTimeQuoteResponse0.getFutureRealTimeItems();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FutureRealTimeQuoteResponse futureRealTimeQuoteResponse0 = new FutureRealTimeQuoteResponse();
      LinkedList<FutureRealTimeItem> linkedList0 = new LinkedList<FutureRealTimeItem>();
      FutureRealTimeItem futureRealTimeItem0 = new FutureRealTimeItem();
      linkedList0.add(futureRealTimeItem0);
      futureRealTimeQuoteResponse0.setFutureRealTimeItems(linkedList0);
      List<FutureRealTimeItem> list0 = futureRealTimeQuoteResponse0.getFutureRealTimeItems();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FutureRealTimeQuoteResponse futureRealTimeQuoteResponse0 = new FutureRealTimeQuoteResponse();
      List<FutureRealTimeItem> list0 = futureRealTimeQuoteResponse0.getFutureRealTimeItems();
      assertNull(list0);
  }
}
