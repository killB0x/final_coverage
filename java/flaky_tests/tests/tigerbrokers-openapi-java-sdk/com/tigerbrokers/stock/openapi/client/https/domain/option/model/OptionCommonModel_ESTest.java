/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:15:22 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.option.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tigerbrokers.stock.openapi.client.https.domain.option.model.OptionCommonModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OptionCommonModel_ESTest extends OptionCommonModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel("", "", "", (Long) null);
      optionCommonModel0.symbol = "";
      String string0 = optionCommonModel0.toString();
      assertEquals("OptionCommonModel{symbol='', right='', strike='', expiry='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Long long0 = new Long(0L);
      OptionCommonModel optionCommonModel0 = new OptionCommonModel("", "", "", long0);
      String string0 = optionCommonModel0.getSymbol();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel();
      optionCommonModel0.setStrike("EP-&;@nI");
      String string0 = optionCommonModel0.getStrike();
      assertEquals("EP-&;@nI", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel("", "", "", (Long) null);
      String string0 = optionCommonModel0.getStrike();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel();
      String string0 = optionCommonModel0.getRight();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel();
      optionCommonModel0.setRight("p3![1@");
      String string0 = optionCommonModel0.getRight();
      assertEquals("p3![1@", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel();
      Long long0 = new Long(0L);
      optionCommonModel0.expiry = long0;
      Long long1 = optionCommonModel0.getExpiry();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel("", "", "", (Long) null);
      Long long0 = new Long(1449L);
      optionCommonModel0.setExpiry(long0);
      Long long1 = optionCommonModel0.getExpiry();
      assertEquals(1449L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = new Long((-1816L));
      OptionCommonModel optionCommonModel0 = new OptionCommonModel("KT_r't]}[(< KJ^&", "9OHV=2pit", "?`wK+HpaF{FKM?", long0);
      Long long1 = optionCommonModel0.getExpiry();
      assertEquals("?`wK+HpaF{FKM?", optionCommonModel0.getStrike());
      assertEquals("9OHV=2pit", optionCommonModel0.getRight());
      assertNotNull(long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = null;
      try {
        optionCommonModel0 = new OptionCommonModel((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // option identifier format error
         //
         verifyException("com.tigerbrokers.stock.openapi.client.util.SymbolUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel("", "", "", (Long) null);
      optionCommonModel0.setExpiry("");
      assertNull(optionCommonModel0.getExpiry());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel("", "", "", (Long) null);
      String string0 = optionCommonModel0.getRight();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = null;
      try {
        optionCommonModel0 = new OptionCommonModel("yyyy-M-dd2HHmm:ss.SSS");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"m:ss.\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel();
      String string0 = optionCommonModel0.getStrike();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel();
      String string0 = optionCommonModel0.getSymbol();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel();
      Long long0 = optionCommonModel0.getExpiry();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel();
      optionCommonModel0.setSymbol("yyyy-MM-dd HH:mm:ss");
      String string0 = optionCommonModel0.getSymbol();
      assertEquals("yyyy-MM-dd HH:mm:ss", string0);
  }
}
