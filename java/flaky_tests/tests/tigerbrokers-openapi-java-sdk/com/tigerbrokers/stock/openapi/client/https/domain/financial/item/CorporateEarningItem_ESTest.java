/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:17:09 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.financial.item;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.financial.item.CorporateEarningItem;
import java.time.LocalDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CorporateEarningItem_ESTest extends CorporateEarningItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      corporateEarningItem0.setReportTime("V:p6xZkm~pDdQ8>;");
      String string0 = corporateEarningItem0.getReportTime();
      assertEquals("V:p6xZkm~pDdQ8>;", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      LocalDate localDate0 = MockLocalDate.now();
      corporateEarningItem0.setReportDate(localDate0);
      LocalDate localDate1 = corporateEarningItem0.getReportDate();
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      corporateEarningItem0.setFiscalQuarterEnding("com.tigerbrokers.stock.openapi.client.struct.enums.CorporateActionType");
      String string0 = corporateEarningItem0.getFiscalQuarterEnding();
      assertEquals("com.tigerbrokers.stock.openapi.client.struct.enums.CorporateActionType", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      corporateEarningItem0.setFiscalQuarterEnding("");
      String string0 = corporateEarningItem0.getFiscalQuarterEnding();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      Double double0 = new Double(0.0);
      corporateEarningItem0.setExpectedEps(double0);
      Double double1 = corporateEarningItem0.getExpectedEps();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      Double double0 = new Double(1.0);
      corporateEarningItem0.setExpectedEps(double0);
      Double double1 = corporateEarningItem0.getExpectedEps();
      assertEquals(1.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      Double double0 = new Double(0.0);
      corporateEarningItem0.setActualEps(double0);
      Double double1 = corporateEarningItem0.getActualEps();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      Double double0 = new Double((-1197.8467));
      corporateEarningItem0.setActualEps(double0);
      Double double1 = corporateEarningItem0.getActualEps();
      assertEquals((-1197.8467), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      corporateEarningItem0.setReportTime("");
      String string0 = corporateEarningItem0.getReportTime();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      Double double0 = corporateEarningItem0.getExpectedEps();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      String string0 = corporateEarningItem0.toString();
      assertEquals("CorporateEarningItem{expectedEps=null, actualEps=null, reportDate=null, reportTime='null', fiscalQuarterEnding='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      LocalDate localDate0 = corporateEarningItem0.getReportDate();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      Double double0 = corporateEarningItem0.getActualEps();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      String string0 = corporateEarningItem0.getFiscalQuarterEnding();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      String string0 = corporateEarningItem0.getReportTime();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      Double double0 = new Double((-1197.8467));
      corporateEarningItem0.setExpectedEps(double0);
      Double double1 = corporateEarningItem0.getExpectedEps();
      assertEquals((-1197.8467), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CorporateEarningItem corporateEarningItem0 = new CorporateEarningItem();
      Double double0 = new Double(836.12939);
      corporateEarningItem0.setActualEps(double0);
      Double double1 = corporateEarningItem0.getActualEps();
      assertEquals(836.12939, (double)double1, 0.01);
  }
}
