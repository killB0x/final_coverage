/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:24:30 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tigerbrokers.stock.openapi.client.struct.OptionFundamentals;
import com.tigerbrokers.stock.openapi.client.util.OptionResult;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OptionResult_ESTest extends OptionResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex(303.5954, 543.2551, 543.2551, 957.63228665, 303.5954);
      double double0 = optionResult_OptionIndex0.getRho();
      assertEquals(303.5954, optionResult_OptionIndex0.getDelta(), 0.01);
      assertEquals(543.2551, optionResult_OptionIndex0.getGamma(), 0.01);
      assertEquals(543.2551, optionResult_OptionIndex0.getTheta(), 0.01);
      assertEquals(303.5954, double0, 0.01);
      assertEquals(957.63228665, optionResult_OptionIndex0.getVega(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex((-1.0), (-1.0), (-2941.4), (-1.0), (-1.0));
      optionResult_OptionIndex0.setVega(1347.494822246108);
      assertEquals(1347.494822246108, optionResult_OptionIndex0.getVega(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex(1.0, 1997.71, 1.0, 0.0, (-39.0));
      assertEquals(0.0, optionResult_OptionIndex0.getVega(), 0.01);
      
      optionResult_OptionIndex0.setVega(1.0);
      assertEquals(1.0, optionResult_OptionIndex0.getVega(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex((-1.0), (-1.0), (-2941.4), (-1.0), (-1.0));
      optionResult_OptionIndex0.Vega = (-1202.720973806795);
      double double0 = optionResult_OptionIndex0.getVega();
      assertEquals((-1202.720973806795), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex((-1220.5299882781044), (-1220.5299882781044), (-1220.5299882781044), 0.0, (-1220.5299882781044));
      optionResult_OptionIndex0.setTheta(2685.744);
      double double0 = optionResult_OptionIndex0.getTheta();
      assertEquals(2685.744, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex(0.0, (-5678.196), 0.0, (-5678.196), 0.0);
      double double0 = optionResult_OptionIndex0.getGamma();
      assertEquals((-5678.196), optionResult_OptionIndex0.getVega(), 0.01);
      assertEquals(0.0, optionResult_OptionIndex0.getTheta(), 0.01);
      assertEquals(0.0, optionResult_OptionIndex0.getRho(), 0.01);
      assertEquals((-5678.196), double0, 0.01);
      assertEquals(0.0, optionResult_OptionIndex0.getDelta(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex(303.5954, 543.2551, 543.2551, 957.63228665, 303.5954);
      double double0 = optionResult_OptionIndex0.getGamma();
      assertEquals(303.5954, optionResult_OptionIndex0.getDelta(), 0.01);
      assertEquals(543.2551, optionResult_OptionIndex0.getTheta(), 0.01);
      assertEquals(543.2551, double0, 0.01);
      assertEquals(957.63228665, optionResult_OptionIndex0.getVega(), 0.01);
      assertEquals(303.5954, optionResult_OptionIndex0.getRho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex((-1220.5299882781044), (-1220.5299882781044), (-1220.5299882781044), 0.0, (-1220.5299882781044));
      optionResult_OptionIndex0.setTheta(2685.744);
      optionResult_OptionIndex0.getRhoString();
      assertEquals(2685.744, optionResult_OptionIndex0.getTheta(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex(0.0, (-5678.196), 0.0, (-5678.196), 0.0);
      String string0 = optionResult_OptionIndex0.getRhoString();
      assertEquals((-5678.196), optionResult_OptionIndex0.getVega(), 0.01);
      assertEquals((-5678.196), optionResult_OptionIndex0.getGamma(), 0.01);
      assertEquals("0.000", string0);
      assertEquals(0.0, optionResult_OptionIndex0.getDelta(), 0.01);
      assertEquals(0.0, optionResult_OptionIndex0.getTheta(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex((-1609.9573453), (-1609.9573453), 1.0, (-1609.9573453), 0.0);
      String string0 = optionResult_OptionIndex0.getGammaString();
      assertEquals(0.0, optionResult_OptionIndex0.getRho(), 0.01);
      assertEquals(1.0, optionResult_OptionIndex0.getTheta(), 0.01);
      assertEquals((-1609.9573453), optionResult_OptionIndex0.getVega(), 0.01);
      assertEquals((-1609.9573453), optionResult_OptionIndex0.getDelta(), 0.01);
      assertEquals("-1,609.957", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.insideValue = 1.0;
      String string0 = optionResult0.getInsideValueString();
      assertEquals("1.00", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.setProfitRate(1070.2776781922);
      optionResult0.getInsideValueString();
      assertEquals(1070.2776781922, optionResult0.getProfitRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.setPremiumRate(1070.2776781922);
      optionResult0.getInsideValueString();
      assertEquals(1070.2776781922, optionResult0.getPremiumRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.setLeverage(2669.5);
      optionResult0.getInsideValueString();
      assertEquals(2669.5, optionResult0.getLeverage(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.leverage = 1134.0;
      String string0 = optionResult0.getLeverageString();
      assertEquals("1,134.00", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.volatility = 1.0;
      // Undeclared exception!
      try { 
        optionResult0.toOptionFundamentals(0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.util.OptionResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.setLeverage((-1813.297359));
      optionResult0.getVolatilityString();
      assertEquals((-1813.297359), optionResult0.getLeverage(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.profitRate = 1.0;
      String string0 = optionResult0.getProfitRateString();
      assertEquals("100.00%", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.setTimeValue(2010.126630659393);
      optionResult0.getPremiumRateString();
      assertEquals(2010.126630659393, optionResult0.getTimeValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.setVolatility(4049.19622319146);
      optionResult0.getPremiumRateString();
      assertEquals(4049.19622319146, optionResult0.getVolatility(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.profitRate = 2227.436215816;
      String string0 = optionResult0.getPremiumRateString();
      assertEquals("0.00%", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.setInsideValue((-834.9));
      optionResult0.getPremiumRateString();
      assertEquals((-834.9), optionResult0.getInsideValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.leverage = 1134.0;
      String string0 = optionResult0.getPremiumRateString();
      assertEquals("0.00%", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.setTimeValue(1.0);
      optionResult0.getTimeValueString();
      assertEquals(1.0, optionResult0.getTimeValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.setVolatility(4049.19622319146);
      double double0 = optionResult0.getVolatility();
      assertEquals(4049.19622319146, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.volatility = (-1288.5890799044475);
      double double0 = optionResult0.getVolatility();
      assertEquals((-1288.5890799044475), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.timeValue = 2079.78538248;
      double double0 = optionResult0.getTimeValue();
      assertEquals(2079.78538248, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.setTimeValue((-6639.725740232664));
      double double0 = optionResult0.getTimeValue();
      assertEquals((-6639.725740232664), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.profitRate = 2227.436215816;
      double double0 = optionResult0.getProfitRate();
      assertEquals(2227.436215816, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.profitRate = (-5678.196);
      double double0 = optionResult0.getProfitRate();
      assertEquals((-5678.196), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.premiumRate = 560.11713329;
      double double0 = optionResult0.getPremiumRate();
      assertEquals(560.11713329, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.premiumRate = (-1476.4479);
      double double0 = optionResult0.getPremiumRate();
      assertEquals((-1476.4479), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.setLeverage(2669.5);
      double double0 = optionResult0.getLeverage();
      assertEquals(2669.5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.leverage = (-2600.502130027);
      double double0 = optionResult0.getLeverage();
      assertEquals((-2600.502130027), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.setInsideValue(1945.97717294081);
      double double0 = optionResult0.getInsideValue();
      assertEquals(1945.97717294081, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      optionResult0.setInsideValue((-979.5482));
      double double0 = optionResult0.getInsideValue();
      assertEquals((-979.5482), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex((-482.1766956206997), (-227.3), (-3960.863044269), 79.81309998840288, (-482.1766956206997));
      optionResult0.index = optionResult_OptionIndex0;
      OptionResult.OptionIndex optionResult_OptionIndex1 = optionResult0.getIndex();
      assertEquals((-227.3), optionResult_OptionIndex1.getGamma(), 0.01);
      assertEquals(79.81309998840288, optionResult_OptionIndex1.getVega(), 0.01);
      assertEquals((-482.1766956206997), optionResult_OptionIndex1.getRho(), 0.01);
      assertEquals((-3960.863044269), optionResult_OptionIndex1.getTheta(), 0.01);
      assertEquals((-482.1766956206997), optionResult_OptionIndex1.getDelta(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex((-105.832652), (-105.832652), (-105.832652), 0.0, 0.0);
      optionResult0.setIndex(optionResult_OptionIndex0);
      optionResult_OptionIndex0.setRho(1.0);
      assertEquals(1.0, optionResult_OptionIndex0.getRho(), 0.01);
      
      OptionResult.OptionIndex optionResult_OptionIndex1 = optionResult0.getIndex();
      assertEquals((-105.832652), optionResult_OptionIndex1.getGamma(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex((-1.0), (-1.0), (-2941.4), (-1.0), (-1.0));
      assertEquals((-1.0), optionResult_OptionIndex0.getDelta(), 0.01);
      
      optionResult_OptionIndex0.Delta = 0.0;
      OptionResult optionResult0 = new OptionResult();
      optionResult0.setIndex(optionResult_OptionIndex0);
      OptionResult.OptionIndex optionResult_OptionIndex1 = optionResult0.getIndex();
      assertEquals((-2941.4), optionResult_OptionIndex1.getTheta(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex(225.50436668001697, 0.0, 2405.131187257, (-1004.0), 0.0);
      optionResult0.setIndex(optionResult_OptionIndex0);
      OptionResult.OptionIndex optionResult_OptionIndex1 = optionResult0.getIndex();
      assertEquals(0.0, optionResult_OptionIndex1.getRho(), 0.01);
      assertEquals(225.50436668001697, optionResult_OptionIndex1.getDelta(), 0.01);
      assertNotNull(optionResult_OptionIndex1);
      assertEquals(2405.131187257, optionResult_OptionIndex1.getTheta(), 0.01);
      assertEquals((-1004.0), optionResult_OptionIndex1.getVega(), 0.01);
      assertEquals(0.0, optionResult_OptionIndex1.getGamma(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex((-3475.09384967), 1222.477385834, 0.0, (-3475.09384967), 0.0);
      optionResult0.setIndex(optionResult_OptionIndex0);
      OptionResult.OptionIndex optionResult_OptionIndex1 = optionResult0.getIndex();
      assertEquals(1222.477385834, optionResult_OptionIndex1.getGamma(), 0.01);
      assertEquals(0.0, optionResult_OptionIndex1.getTheta(), 0.01);
      assertEquals((-3475.09384967), optionResult_OptionIndex1.getVega(), 0.01);
      assertEquals(0.0, optionResult_OptionIndex1.getRho(), 0.01);
      assertNotNull(optionResult_OptionIndex1);
      assertEquals((-3475.09384967), optionResult_OptionIndex1.getDelta(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex(0.0, 0.0, 0.0, 0.0, 0.0);
      String string0 = optionResult_OptionIndex0.getVegaString();
      assertEquals(0.0, optionResult_OptionIndex0.getGamma(), 0.01);
      assertEquals(0.0, optionResult_OptionIndex0.getTheta(), 0.01);
      assertEquals("0.000", string0);
      assertEquals(0.0, optionResult_OptionIndex0.getDelta(), 0.01);
      assertEquals(0.0, optionResult_OptionIndex0.getRho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex((-1196.1222), (-1196.1222), (-1196.1222), 0.0, (-1196.1222));
      String string0 = optionResult_OptionIndex0.getThetaString();
      assertEquals("-1,196.122", string0);
      assertEquals((-1196.1222), optionResult_OptionIndex0.getRho(), 0.01);
      assertEquals(0.0, optionResult_OptionIndex0.getVega(), 0.01);
      assertEquals((-1196.1222), optionResult_OptionIndex0.getGamma(), 0.01);
      assertEquals((-1196.1222), optionResult_OptionIndex0.getDelta(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      OptionResult.OptionIndex optionResult_OptionIndex0 = optionResult0.getIndex();
      assertNull(optionResult_OptionIndex0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex((-1.0), 1494.77824, 1.0, 0.0, 1.0);
      String string0 = optionResult_OptionIndex0.getDeltaString();
      assertEquals(1.0, optionResult_OptionIndex0.getTheta(), 0.01);
      assertEquals(1.0, optionResult_OptionIndex0.getRho(), 0.01);
      assertEquals(1494.77824, optionResult_OptionIndex0.getGamma(), 0.01);
      assertEquals(0.0, optionResult_OptionIndex0.getVega(), 0.01);
      assertEquals("-1.000", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex((-1196.1222), (-1196.1222), (-1196.1222), 0.0, (-1196.1222));
      String string0 = optionResult_OptionIndex0.getGammaString();
      assertEquals(0.0, optionResult_OptionIndex0.getVega(), 0.01);
      assertEquals((-1196.1222), optionResult_OptionIndex0.getTheta(), 0.01);
      assertEquals((-1196.1222), optionResult_OptionIndex0.getDelta(), 0.01);
      assertEquals("-1,196.122", string0);
      assertEquals((-1196.1222), optionResult_OptionIndex0.getRho(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      double double0 = optionResult0.getVolatility();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      double double0 = optionResult0.getProfitRate();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      double double0 = optionResult0.getTimeValue();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      double double0 = optionResult0.getPremiumRate();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      double double0 = optionResult0.getInsideValue();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      double double0 = optionResult0.getLeverage();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex((-1196.1222), (-1196.1222), (-1196.1222), 0.0, (-1196.1222));
      optionResult_OptionIndex0.setDelta((-717.2725847315));
      optionResult_OptionIndex0.getRhoString();
      assertEquals((-717.2725847315), optionResult_OptionIndex0.getDelta(), 0.01);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex((-1.0), 1494.77824, 1.0, 0.0, 1.0);
      double double0 = optionResult_OptionIndex0.getRho();
      assertEquals(1.0, double0, 0.01);
      assertEquals((-1.0), optionResult_OptionIndex0.getDelta(), 0.01);
      assertEquals(1494.77824, optionResult_OptionIndex0.getGamma(), 0.01);
      assertEquals(1.0, optionResult_OptionIndex0.getTheta(), 0.01);
      assertEquals(0.0, optionResult_OptionIndex0.getVega(), 0.01);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex(0.0, 0.0, 0.0, 308.3053825909, 0.0);
      optionResult_OptionIndex0.setGamma(1.0);
      assertEquals(1.0, optionResult_OptionIndex0.getGamma(), 0.01);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      OptionResult optionResult0 = new OptionResult();
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex(225.50436668001697, 0.0, 2405.131187257, (-1004.0), 0.0);
      optionResult0.setIndex(optionResult_OptionIndex0);
      assertEquals(0.0, optionResult_OptionIndex0.getRho(), 0.01);
      
      OptionFundamentals optionFundamentals0 = optionResult0.toOptionFundamentals(0, "0.00%");
      assertEquals("0.000", optionFundamentals0.getGamma());
      assertEquals("0.00%", optionFundamentals0.getProfitRate());
      assertEquals("-1,004.000", optionFundamentals0.getVega());
      assertEquals("0.00", optionFundamentals0.getInsideValue());
      assertEquals("0.00", optionFundamentals0.getTimeValue());
      assertEquals("2,405.131", optionFundamentals0.getTheta());
      assertEquals("0.00%", optionFundamentals0.getVolatility());
      assertEquals("0.00%", optionFundamentals0.getPremiumRate());
      assertEquals("225.504", optionFundamentals0.getDelta());
      assertEquals("0.00", optionFundamentals0.getLeverage());
      assertEquals("0", optionFundamentals0.getOpenInterest());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      OptionResult.OptionIndex optionResult_OptionIndex0 = new OptionResult.OptionIndex((-1.0), 1494.77824, 1.0, 0.0, 1.0);
      double double0 = optionResult_OptionIndex0.getDelta();
      assertEquals((-1.0), double0, 0.01);
      assertEquals(1.0, optionResult_OptionIndex0.getTheta(), 0.01);
      assertEquals(1.0, optionResult_OptionIndex0.getRho(), 0.01);
      assertEquals(1494.77824, optionResult_OptionIndex0.getGamma(), 0.01);
      assertEquals(0.0, optionResult_OptionIndex0.getVega(), 0.01);
  }
}
