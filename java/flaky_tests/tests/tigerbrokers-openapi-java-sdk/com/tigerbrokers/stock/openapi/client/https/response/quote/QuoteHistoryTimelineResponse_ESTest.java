/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 07:01:25 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.response.quote;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.quote.item.HistoryTimelineItem;
import com.tigerbrokers.stock.openapi.client.https.response.quote.QuoteHistoryTimelineResponse;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuoteHistoryTimelineResponse_ESTest extends QuoteHistoryTimelineResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QuoteHistoryTimelineResponse quoteHistoryTimelineResponse0 = new QuoteHistoryTimelineResponse();
      HistoryTimelineItem historyTimelineItem0 = new HistoryTimelineItem();
      LinkedList<HistoryTimelineItem> linkedList0 = new LinkedList<HistoryTimelineItem>();
      linkedList0.offerLast(historyTimelineItem0);
      quoteHistoryTimelineResponse0.setTimelineItems(linkedList0);
      List<HistoryTimelineItem> list0 = quoteHistoryTimelineResponse0.getTimelineItems();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QuoteHistoryTimelineResponse quoteHistoryTimelineResponse0 = new QuoteHistoryTimelineResponse();
      List<HistoryTimelineItem> list0 = quoteHistoryTimelineResponse0.getTimelineItems();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QuoteHistoryTimelineResponse quoteHistoryTimelineResponse0 = new QuoteHistoryTimelineResponse();
      LinkedList<HistoryTimelineItem> linkedList0 = new LinkedList<HistoryTimelineItem>();
      quoteHistoryTimelineResponse0.setTimelineItems(linkedList0);
      List<HistoryTimelineItem> list0 = quoteHistoryTimelineResponse0.getTimelineItems();
      assertTrue(list0.isEmpty());
  }
}
