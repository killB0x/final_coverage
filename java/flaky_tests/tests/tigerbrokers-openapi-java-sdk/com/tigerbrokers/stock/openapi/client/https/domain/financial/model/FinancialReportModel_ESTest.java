/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 06:59:23 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.financial.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.financial.model.FinancialReportModel;
import com.tigerbrokers.stock.openapi.client.struct.enums.FinancialPeriodType;
import com.tigerbrokers.stock.openapi.client.struct.enums.Market;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FinancialReportModel_ESTest extends FinancialReportModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("#d37nVhg7q");
      financialReportModel0.setSymbols(linkedList0);
      List<String> list0 = financialReportModel0.getSymbols();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      FinancialPeriodType financialPeriodType0 = FinancialPeriodType.LTM;
      financialReportModel0.setPeriodType(financialPeriodType0);
      FinancialPeriodType financialPeriodType1 = financialReportModel0.getPeriodType();
      assertEquals(FinancialPeriodType.LTM, financialPeriodType1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      Market market0 = Market.US;
      financialReportModel0.setMarket(market0);
      Market market1 = financialReportModel0.getMarket();
      assertSame(market1, market0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      financialReportModel0.setFields(linkedList0);
      List<String> list0 = financialReportModel0.getFields();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("FinancialReportModel{symbols=null, market=US, fields=null, periodType=LTM}");
      financialReportModel0.setFields(linkedList0);
      List<String> list0 = financialReportModel0.getFields();
      assertTrue(list0.contains("FinancialReportModel{symbols=null, market=US, fields=null, periodType=LTM}"));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      financialReportModel0.getPeriodType();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      String string0 = financialReportModel0.toString();
      assertEquals("FinancialReportModel{symbols=null, market=null, fields=null, periodType=null}", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      List<String> list0 = financialReportModel0.getFields();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      financialReportModel0.getMarket();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      financialReportModel0.setSymbols(linkedList0);
      List<String> list0 = financialReportModel0.getSymbols();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FinancialReportModel financialReportModel0 = new FinancialReportModel();
      List<String> list0 = financialReportModel0.getSymbols();
      assertNull(list0);
  }
}
