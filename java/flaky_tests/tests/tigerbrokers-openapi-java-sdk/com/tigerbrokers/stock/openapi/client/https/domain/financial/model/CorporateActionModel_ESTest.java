/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:31:13 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.financial.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.financial.model.CorporateActionModel;
import com.tigerbrokers.stock.openapi.client.struct.enums.CorporateActionType;
import com.tigerbrokers.stock.openapi.client.struct.enums.Market;
import java.util.Collection;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CorporateActionModel_ESTest extends CorporateActionModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CorporateActionModel corporateActionModel0 = new CorporateActionModel();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      corporateActionModel0.setSymbols(linkedList0);
      List<String> list0 = corporateActionModel0.getSymbols();
      assertTrue(list0.contains(""));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CorporateActionModel corporateActionModel0 = new CorporateActionModel();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null);
      corporateActionModel0.setSymbols(list0);
      List<String> list1 = corporateActionModel0.getSymbols();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CorporateActionModel corporateActionModel0 = new CorporateActionModel();
      MockDate mockDate0 = new MockDate(3071L);
      corporateActionModel0.setEndDate(mockDate0);
      Date date0 = corporateActionModel0.getEndDate();
      assertEquals("Thu Jan 01 00:00:03 GMT 1970", date0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CorporateActionModel corporateActionModel0 = new CorporateActionModel();
      Market market0 = Market.HK;
      corporateActionModel0.setMarket(market0);
      Market market1 = corporateActionModel0.getMarket();
      assertEquals(Market.HK, market1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CorporateActionModel corporateActionModel0 = new CorporateActionModel();
      Date date0 = corporateActionModel0.getEndDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CorporateActionModel corporateActionModel0 = new CorporateActionModel();
      String string0 = corporateActionModel0.toString();
      assertEquals("CorporateActionModel{symbols=null, market=null, actionType=null, beginDate=null, endDate=null}", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CorporateActionModel corporateActionModel0 = new CorporateActionModel();
      CorporateActionType corporateActionType0 = CorporateActionType.DIVIDEND;
      corporateActionModel0.setActionType(corporateActionType0);
      CorporateActionType corporateActionType1 = corporateActionModel0.getActionType();
      assertSame(corporateActionType1, corporateActionType0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CorporateActionModel corporateActionModel0 = new CorporateActionModel();
      corporateActionModel0.getMarket();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CorporateActionModel corporateActionModel0 = new CorporateActionModel();
      List<String> list0 = corporateActionModel0.getSymbols();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CorporateActionModel corporateActionModel0 = new CorporateActionModel();
      MockDate mockDate0 = new MockDate();
      corporateActionModel0.setBeginDate(mockDate0);
      Date date0 = corporateActionModel0.getBeginDate();
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CorporateActionModel corporateActionModel0 = new CorporateActionModel();
      Date date0 = corporateActionModel0.getBeginDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CorporateActionModel corporateActionModel0 = new CorporateActionModel();
      corporateActionModel0.getActionType();
  }
}
