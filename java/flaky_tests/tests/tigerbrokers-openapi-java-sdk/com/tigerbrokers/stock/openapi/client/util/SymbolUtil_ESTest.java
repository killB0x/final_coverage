/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 04:35:31 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tigerbrokers.stock.openapi.client.util.SymbolUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SymbolUtil_ESTest extends SymbolUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      try { 
        SymbolUtil.convertToOptionSymbolObject("com.tigerbrokers.stock.openapi.client.struct.OptionSymbol");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // option identifier format error
         //
         verifyException("com.tigerbrokers.stock.openapi.client.util.SymbolUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      boolean boolean0 = SymbolUtil.isUsStockSymbol("C");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      boolean boolean0 = SymbolUtil.isUsStockSymbol("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      boolean boolean0 = SymbolUtil.isUsStockSymbol("-");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      boolean boolean0 = SymbolUtil.isUsStockSymbol((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      try { 
        SymbolUtil.convertToOptionSymbolObject("-");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // option identifier format error
         //
         verifyException("com.tigerbrokers.stock.openapi.client.util.SymbolUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      try { 
        SymbolUtil.convertToOptionSymbolObject((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // option identifier format error
         //
         verifyException("com.tigerbrokers.stock.openapi.client.util.SymbolUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SymbolUtil symbolUtil0 = new SymbolUtil();
  }
}
