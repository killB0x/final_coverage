/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 06:01:46 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.struct;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.struct.ClientHeartBeatData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClientHeartBeatData_ESTest extends ClientHeartBeatData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClientHeartBeatData clientHeartBeatData0 = new ClientHeartBeatData(1, 1);
      int int0 = clientHeartBeatData0.getSendInterval();
      assertEquals(1, int0);
      assertEquals(1, clientHeartBeatData0.getReceiveInterval());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClientHeartBeatData clientHeartBeatData0 = new ClientHeartBeatData();
      clientHeartBeatData0.setSendInterval((-332));
      int int0 = clientHeartBeatData0.getSendInterval();
      assertEquals((-332), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClientHeartBeatData clientHeartBeatData0 = new ClientHeartBeatData((-1103), 246);
      clientHeartBeatData0.setReceiveInterval(0);
      int int0 = clientHeartBeatData0.getReceiveInterval();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClientHeartBeatData clientHeartBeatData0 = new ClientHeartBeatData();
      clientHeartBeatData0.setReceiveInterval((-2181));
      int int0 = clientHeartBeatData0.getReceiveInterval();
      assertEquals((-2181), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClientHeartBeatData clientHeartBeatData0 = new ClientHeartBeatData((-1103), 246);
      int int0 = clientHeartBeatData0.getReceiveInterval();
      assertEquals(246, int0);
      assertEquals((-1103), clientHeartBeatData0.getSendInterval());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ClientHeartBeatData clientHeartBeatData0 = new ClientHeartBeatData();
      int int0 = clientHeartBeatData0.getSendInterval();
      assertEquals(0, clientHeartBeatData0.getReceiveInterval());
      assertEquals(0, int0);
  }
}
