/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:47:06 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.request.option;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.option.model.OptionCommonModel;
import com.tigerbrokers.stock.openapi.client.https.request.option.OptionBriefQueryRequest;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OptionBriefQueryRequest_ESTest extends OptionBriefQueryRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Long long0 = new Long(0L);
      OptionCommonModel optionCommonModel0 = new OptionCommonModel("e:Yw|Xr(kL", "C6S>;h^<O", "3.0", long0);
      OptionBriefQueryRequest optionBriefQueryRequest0 = OptionBriefQueryRequest.of((OptionCommonModel) null, optionCommonModel0, (OptionCommonModel) null, optionCommonModel0);
      assertEquals("1.0", optionBriefQueryRequest0.getApiVersion());
      assertEquals("option_brief", optionBriefQueryRequest0.getApiMethodName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel("H@/?", "H@/?", "K[[CC{=U", (Long) null);
      Long long0 = new Long(243L);
      OptionCommonModel optionCommonModel1 = new OptionCommonModel("", "K[[CC{=U", "K[[CC{=U", long0);
      OptionBriefQueryRequest optionBriefQueryRequest0 = OptionBriefQueryRequest.of(optionCommonModel0, optionCommonModel1, optionCommonModel1, optionCommonModel0);
      assertEquals("option_brief", optionBriefQueryRequest0.getApiMethodName());
      assertEquals("1.0", optionBriefQueryRequest0.getApiVersion());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel();
      Long long0 = new Long(396L);
      OptionCommonModel optionCommonModel1 = new OptionCommonModel("Y{<", "3.0", "et", long0);
      OptionBriefQueryRequest optionBriefQueryRequest0 = OptionBriefQueryRequest.of(optionCommonModel1, optionCommonModel0, optionCommonModel1);
      assertEquals("option_brief", optionBriefQueryRequest0.getApiMethodName());
      assertEquals("1.0", optionBriefQueryRequest0.getApiVersion());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel();
      Long long0 = new Long(396L);
      OptionCommonModel optionCommonModel1 = new OptionCommonModel("Y{<", "3.0", "et", long0);
      OptionBriefQueryRequest optionBriefQueryRequest0 = OptionBriefQueryRequest.of(optionCommonModel1, optionCommonModel0, optionCommonModel0);
      assertEquals("1.0", optionBriefQueryRequest0.getApiVersion());
      assertEquals("option_brief", optionBriefQueryRequest0.getApiMethodName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel("H@/?", "H@/?", "K[[CC{=U", (Long) null);
      Long long0 = new Long(243L);
      OptionCommonModel optionCommonModel1 = new OptionCommonModel("", "K[[CC{=U", "K[[CC{=U", long0);
      OptionBriefQueryRequest optionBriefQueryRequest0 = OptionBriefQueryRequest.of(optionCommonModel0, optionCommonModel1);
      assertEquals("option_brief", optionBriefQueryRequest0.getApiMethodName());
      assertEquals("1.0", optionBriefQueryRequest0.getApiVersion());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OptionBriefQueryRequest optionBriefQueryRequest0 = new OptionBriefQueryRequest((List<OptionCommonModel>) null);
      assertEquals("option_brief", optionBriefQueryRequest0.getApiMethodName());
      assertEquals("1.0", optionBriefQueryRequest0.getApiVersion());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OptionBriefQueryRequest optionBriefQueryRequest0 = new OptionBriefQueryRequest();
      optionBriefQueryRequest0.getResponseClass();
      assertEquals("1.0", optionBriefQueryRequest0.getApiVersion());
      assertEquals("option_brief", optionBriefQueryRequest0.getApiMethodName());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel();
      OptionBriefQueryRequest optionBriefQueryRequest0 = OptionBriefQueryRequest.of(optionCommonModel0);
      assertEquals("1.0", optionBriefQueryRequest0.getApiVersion());
      assertEquals("option_brief", optionBriefQueryRequest0.getApiMethodName());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      OptionBriefQueryRequest optionBriefQueryRequest0 = OptionBriefQueryRequest.of((List<OptionCommonModel>) null);
      assertEquals("1.0", optionBriefQueryRequest0.getApiVersion());
      assertEquals("option_brief", optionBriefQueryRequest0.getApiMethodName());
  }
}
