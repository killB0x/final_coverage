/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:48:11 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.contract.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.contract.model.BaseContractModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BaseContractModel_ESTest extends BaseContractModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      Double double0 = new Double(1.0);
      baseContractModel0.setStrike(double0);
      Double double1 = baseContractModel0.getStrike();
      assertEquals(1.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      Double double0 = Double.valueOf((-1747.3140307798883));
      baseContractModel0.setStrike(double0);
      Double double1 = baseContractModel0.getStrike();
      assertEquals((-1747.3140307798883), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      baseContractModel0.setSecType("^g");
      String string0 = baseContractModel0.getSecType();
      assertEquals("^g", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      baseContractModel0.setSecType("");
      String string0 = baseContractModel0.getSecType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      baseContractModel0.setRight("");
      String string0 = baseContractModel0.getRight();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      baseContractModel0.setExpiry("&2$|zXS.-Io^'sew");
      String string0 = baseContractModel0.getExpiry();
      assertEquals("&2$|zXS.-Io^'sew", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      baseContractModel0.setExpiry("");
      String string0 = baseContractModel0.getExpiry();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      baseContractModel0.setExchange("k_LH6D");
      String string0 = baseContractModel0.getExchange();
      assertEquals("k_LH6D", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      baseContractModel0.setExchange("");
      String string0 = baseContractModel0.getExchange();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      baseContractModel0.setCurrency("");
      String string0 = baseContractModel0.getCurrency();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      baseContractModel0.setAccount("^g");
      String string0 = baseContractModel0.getAccount();
      assertEquals("^g", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      String string0 = baseContractModel0.getSecType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      String string0 = baseContractModel0.getExpiry();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      String string0 = baseContractModel0.getRight();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      String string0 = baseContractModel0.getExchange();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      String string0 = baseContractModel0.getAccount();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      baseContractModel0.setRight("YN&&=*b~Co^2Y`Mg^6}");
      String string0 = baseContractModel0.getRight();
      assertEquals("YN&&=*b~Co^2Y`Mg^6}", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      Double double0 = baseContractModel0.getStrike();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      baseContractModel0.setCurrency("com.tigerbrokers.stock.openapi.client.https.domain.contract.model.BaseContractModel");
      String string0 = baseContractModel0.getCurrency();
      assertEquals("com.tigerbrokers.stock.openapi.client.https.domain.contract.model.BaseContractModel", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      String string0 = baseContractModel0.getCurrency();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      Double double0 = new Double(0.0);
      baseContractModel0.setStrike(double0);
      Double double1 = baseContractModel0.getStrike();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BaseContractModel baseContractModel0 = new BaseContractModel();
      baseContractModel0.setAccount("");
      String string0 = baseContractModel0.getAccount();
      assertEquals("", string0);
  }
}
