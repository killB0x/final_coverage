/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 06:40:53 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.request.option;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.option.model.OptionCommonModel;
import com.tigerbrokers.stock.openapi.client.https.request.option.OptionTradeTickQueryRequest;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OptionTradeTickQueryRequest_ESTest extends OptionTradeTickQueryRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Long long0 = new Long((-2180L));
      OptionCommonModel optionCommonModel0 = new OptionCommonModel("1.0", "1.0", "S#BnRX%p7Gbkwo", long0);
      OptionCommonModel optionCommonModel1 = new OptionCommonModel();
      OptionTradeTickQueryRequest optionTradeTickQueryRequest0 = OptionTradeTickQueryRequest.of(optionCommonModel1, (OptionCommonModel) null, optionCommonModel0);
      assertEquals("option_trade_tick", optionTradeTickQueryRequest0.getApiMethodName());
      assertEquals("1.0", optionTradeTickQueryRequest0.getApiVersion());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Long long0 = new Long(0L);
      OptionCommonModel optionCommonModel0 = new OptionCommonModel("5", "5", "m{;1;T@{|+kf<L", long0);
      OptionCommonModel optionCommonModel1 = new OptionCommonModel();
      OptionTradeTickQueryRequest optionTradeTickQueryRequest0 = OptionTradeTickQueryRequest.of(optionCommonModel0, optionCommonModel1);
      assertEquals("option_trade_tick", optionTradeTickQueryRequest0.getApiMethodName());
      assertEquals("1.0", optionTradeTickQueryRequest0.getApiVersion());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OptionTradeTickQueryRequest optionTradeTickQueryRequest0 = new OptionTradeTickQueryRequest();
      assertEquals("1.0", optionTradeTickQueryRequest0.getApiVersion());
      assertEquals("option_trade_tick", optionTradeTickQueryRequest0.getApiMethodName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<OptionCommonModel> linkedList0 = new LinkedList<OptionCommonModel>();
      OptionTradeTickQueryRequest optionTradeTickQueryRequest0 = new OptionTradeTickQueryRequest(linkedList0);
      assertEquals("option_trade_tick", optionTradeTickQueryRequest0.getApiMethodName());
      assertEquals("1.0", optionTradeTickQueryRequest0.getApiVersion());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<OptionCommonModel> linkedList0 = new LinkedList<OptionCommonModel>();
      OptionTradeTickQueryRequest optionTradeTickQueryRequest0 = OptionTradeTickQueryRequest.of((List<OptionCommonModel>) linkedList0);
      assertEquals("option_trade_tick", optionTradeTickQueryRequest0.getApiMethodName());
      assertEquals("1.0", optionTradeTickQueryRequest0.getApiVersion());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Long long0 = new Long((-2180L));
      OptionCommonModel optionCommonModel0 = new OptionCommonModel("1.0", "1.0", "S#BnRX%p7Gbkwo", long0);
      OptionTradeTickQueryRequest optionTradeTickQueryRequest0 = OptionTradeTickQueryRequest.of(optionCommonModel0, optionCommonModel0);
      optionTradeTickQueryRequest0.getResponseClass();
      assertEquals("option_trade_tick", optionTradeTickQueryRequest0.getApiMethodName());
      assertEquals("1.0", optionTradeTickQueryRequest0.getApiVersion());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OptionCommonModel optionCommonModel0 = new OptionCommonModel();
      OptionTradeTickQueryRequest optionTradeTickQueryRequest0 = OptionTradeTickQueryRequest.of(optionCommonModel0);
      assertEquals("option_trade_tick", optionTradeTickQueryRequest0.getApiMethodName());
      assertEquals("1.0", optionTradeTickQueryRequest0.getApiVersion());
  }
}
