/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 04:38:44 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.validator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tigerbrokers.stock.openapi.client.https.domain.financial.model.FinancialDailyModel;
import com.tigerbrokers.stock.openapi.client.https.validator.FinancialDailyRequestValidator;
import com.tigerbrokers.stock.openapi.client.struct.enums.Market;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FinancialDailyRequestValidator_ESTest extends FinancialDailyRequestValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FinancialDailyRequestValidator financialDailyRequestValidator0 = new FinancialDailyRequestValidator();
      // Undeclared exception!
      try { 
        financialDailyRequestValidator0.validate((FinancialDailyModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialDailyRequestValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FinancialDailyRequestValidator financialDailyRequestValidator0 = new FinancialDailyRequestValidator();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      FinancialDailyModel financialDailyModel0 = new FinancialDailyModel();
      financialDailyModel0.setFields(linkedList0);
      linkedList0.add("mdh6I$'[4M-");
      Market market0 = Market.CN;
      MockDate mockDate0 = new MockDate(3428, 3428, 3428);
      financialDailyModel0.setEndDate(mockDate0);
      financialDailyModel0.setMarket(market0);
      MockDate mockDate1 = new MockDate();
      financialDailyModel0.setBeginDate(mockDate1);
      financialDailyModel0.setSymbols(linkedList0);
      financialDailyRequestValidator0.validate(financialDailyModel0);
      assertEquals(Market.CN, financialDailyModel0.getMarket());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FinancialDailyRequestValidator financialDailyRequestValidator0 = new FinancialDailyRequestValidator();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      FinancialDailyModel financialDailyModel0 = new FinancialDailyModel();
      financialDailyModel0.setFields(linkedList0);
      linkedList0.add("mdh6I$'[4M-");
      Market market0 = Market.CN;
      MockDate mockDate0 = new MockDate(3428, 3428, 3428);
      financialDailyModel0.setEndDate(mockDate0);
      financialDailyModel0.setMarket(market0);
      financialDailyModel0.setBeginDate(mockDate0);
      financialDailyModel0.setSymbols(linkedList0);
      try { 
        financialDailyRequestValidator0.validate(financialDailyModel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 10103:client biz param error('begin_date' cannot be greater than 'end_date')
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialDailyRequestValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FinancialDailyRequestValidator financialDailyRequestValidator0 = new FinancialDailyRequestValidator();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      FinancialDailyModel financialDailyModel0 = new FinancialDailyModel();
      financialDailyModel0.setFields(linkedList0);
      linkedList0.add("mdh6I$'[4M-");
      Market market0 = Market.CN;
      MockDate mockDate0 = new MockDate(3428, 3428, 3428);
      financialDailyModel0.setMarket(market0);
      financialDailyModel0.setBeginDate(mockDate0);
      financialDailyModel0.setSymbols(linkedList0);
      try { 
        financialDailyRequestValidator0.validate(financialDailyModel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 10101:client biz param error(end_date is requried)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialDailyRequestValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FinancialDailyRequestValidator financialDailyRequestValidator0 = new FinancialDailyRequestValidator();
      FinancialDailyModel financialDailyModel0 = new FinancialDailyModel();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      financialDailyModel0.setFields(linkedList0);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList1.add("");
      Market market0 = Market.HK;
      financialDailyModel0.setMarket(market0);
      financialDailyModel0.setSymbols(linkedList1);
      try { 
        financialDailyRequestValidator0.validate(financialDailyModel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 10101:client biz param error(fields is requried)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialDailyRequestValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FinancialDailyRequestValidator financialDailyRequestValidator0 = new FinancialDailyRequestValidator();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      FinancialDailyModel financialDailyModel0 = new FinancialDailyModel();
      financialDailyModel0.setFields(linkedList0);
      linkedList0.add("mdh6I$'[4M-");
      Market market0 = Market.CN;
      financialDailyModel0.setMarket(market0);
      financialDailyModel0.setSymbols(linkedList0);
      try { 
        financialDailyRequestValidator0.validate(financialDailyModel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 10101:client biz param error(begin_date is requried)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialDailyRequestValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FinancialDailyRequestValidator financialDailyRequestValidator0 = new FinancialDailyRequestValidator();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      FinancialDailyModel financialDailyModel0 = new FinancialDailyModel();
      linkedList0.add("mdh6I$'[4M-");
      Market market0 = Market.CN;
      financialDailyModel0.setMarket(market0);
      financialDailyModel0.setSymbols(linkedList0);
      try { 
        financialDailyRequestValidator0.validate(financialDailyModel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 10101:client biz param error(fields is requried)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialDailyRequestValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FinancialDailyRequestValidator financialDailyRequestValidator0 = new FinancialDailyRequestValidator();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      FinancialDailyModel financialDailyModel0 = new FinancialDailyModel();
      Market market0 = Market.CN;
      financialDailyModel0.setMarket(market0);
      financialDailyModel0.setSymbols(linkedList0);
      try { 
        financialDailyRequestValidator0.validate(financialDailyModel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 10101:client biz param error(symbols is requried)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialDailyRequestValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      FinancialDailyRequestValidator financialDailyRequestValidator0 = new FinancialDailyRequestValidator();
      FinancialDailyModel financialDailyModel0 = new FinancialDailyModel();
      try { 
        financialDailyRequestValidator0.validate(financialDailyModel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 10101:client biz param error(market is requried)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialDailyRequestValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      FinancialDailyRequestValidator financialDailyRequestValidator0 = new FinancialDailyRequestValidator();
      FinancialDailyModel financialDailyModel0 = new FinancialDailyModel();
      Market market0 = Market.CN;
      financialDailyModel0.setMarket(market0);
      try { 
        financialDailyRequestValidator0.validate(financialDailyModel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 10101:client biz param error(symbols is requried)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FinancialDailyRequestValidator", e);
      }
  }
}
