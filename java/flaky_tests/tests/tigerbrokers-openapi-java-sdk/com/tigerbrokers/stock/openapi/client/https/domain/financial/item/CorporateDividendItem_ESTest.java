/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 06:16:08 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.financial.item;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.financial.item.CorporateDividendItem;
import java.time.LocalDate;
import java.time.Period;
import java.time.chrono.IsoChronology;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CorporateDividendItem_ESTest extends CorporateDividendItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      corporateDividendItem0.setType("CorporateDividendItem{recordDate=null, announcedDate=null, payDate=null, amount=1281.2207143862918, currency='null', type='null'}");
      String string0 = corporateDividendItem0.getType();
      assertEquals("CorporateDividendItem{recordDate=null, announcedDate=null, payDate=null, amount=1281.2207143862918, currency='null', type='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      LocalDate localDate0 = MockLocalDate.of(2, 2, 2);
      corporateDividendItem0.setRecordDate(localDate0);
      LocalDate localDate1 = corporateDividendItem0.getRecordDate();
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      LocalDate localDate0 = MockLocalDate.of(2, 2, 2);
      corporateDividendItem0.setPayDate(localDate0);
      LocalDate localDate1 = corporateDividendItem0.getPayDate();
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      corporateDividendItem0.setCurrency(", announcedDate=");
      String string0 = corporateDividendItem0.getCurrency();
      assertEquals(", announcedDate=", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      Double double0 = new Double(0.0);
      corporateDividendItem0.setAmount(double0);
      Double double1 = corporateDividendItem0.getAmount();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      Double double0 = new Double(1281.2207143862918);
      corporateDividendItem0.setAmount(double0);
      Double double1 = corporateDividendItem0.getAmount();
      assertEquals(1281.2207143862918, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      Double double0 = new Double((-1.0));
      corporateDividendItem0.setAmount(double0);
      Double double1 = corporateDividendItem0.getAmount();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      String string0 = corporateDividendItem0.getCurrency();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      Period period0 = Period.ofWeeks(0);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      corporateDividendItem0.setAnnouncedDate(localDate0);
      LocalDate localDate1 = corporateDividendItem0.getAnnouncedDate();
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      Double double0 = corporateDividendItem0.getAmount();
      corporateDividendItem0.setAmount(double0);
      assertNull(corporateDividendItem0.getId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      LocalDate localDate0 = corporateDividendItem0.getAnnouncedDate();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      LocalDate localDate0 = corporateDividendItem0.getRecordDate();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      LocalDate localDate0 = corporateDividendItem0.getPayDate();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      String string0 = corporateDividendItem0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      corporateDividendItem0.setCurrency("");
      String string0 = corporateDividendItem0.getCurrency();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      String string0 = corporateDividendItem0.toString();
      assertEquals("CorporateDividendItem{recordDate=null, announcedDate=null, payDate=null, amount=null, currency='null', type='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CorporateDividendItem corporateDividendItem0 = new CorporateDividendItem();
      corporateDividendItem0.setType("");
      String string0 = corporateDividendItem0.getType();
      assertEquals("", string0);
  }
}
