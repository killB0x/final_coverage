/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 06:21:00 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.request.quote;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.request.quote.QuoteTimelineRequest;
import com.tigerbrokers.stock.openapi.client.struct.enums.Language;
import com.tigerbrokers.stock.openapi.client.struct.enums.TimeLineType;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuoteTimelineRequest_ESTest extends QuoteTimelineRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Long long0 = new Long(0L);
      QuoteTimelineRequest quoteTimelineRequest0 = QuoteTimelineRequest.newRequest((List<String>) linkedList0, long0);
      assertEquals("2.0", quoteTimelineRequest0.getApiVersion());
      assertEquals("timeline", quoteTimelineRequest0.getApiMethodName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Long long0 = new Long(0L);
      Language language0 = Language.zh_CN;
      TimeLineType timeLineType0 = TimeLineType.day5;
      QuoteTimelineRequest quoteTimelineRequest0 = QuoteTimelineRequest.newRequest((List<String>) linkedList0, long0, false, timeLineType0, language0);
      assertEquals("2.0", quoteTimelineRequest0.getApiVersion());
      assertEquals("timeline", quoteTimelineRequest0.getApiMethodName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Long long0 = new Long(0L);
      TimeLineType timeLineType0 = TimeLineType.day5;
      QuoteTimelineRequest quoteTimelineRequest0 = QuoteTimelineRequest.newRequest((List<String>) linkedList0, long0, false, timeLineType0);
      assertEquals("timeline", quoteTimelineRequest0.getApiMethodName());
      assertEquals("2.0", quoteTimelineRequest0.getApiVersion());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Long long0 = new Long(0L);
      QuoteTimelineRequest quoteTimelineRequest0 = QuoteTimelineRequest.newRequest((List<String>) linkedList0, long0, false);
      assertEquals("timeline", quoteTimelineRequest0.getApiMethodName());
      assertEquals("2.0", quoteTimelineRequest0.getApiVersion());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QuoteTimelineRequest quoteTimelineRequest0 = new QuoteTimelineRequest();
      quoteTimelineRequest0.getResponseClass();
      assertEquals("timeline", quoteTimelineRequest0.getApiMethodName());
      assertEquals("2.0", quoteTimelineRequest0.getApiVersion());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      TimeLineType timeLineType0 = TimeLineType.day5;
      QuoteTimelineRequest quoteTimelineRequest0 = QuoteTimelineRequest.newRequest((List<String>) linkedList0, (Long) null, timeLineType0);
      assertEquals("2.0", quoteTimelineRequest0.getApiVersion());
      assertEquals("timeline", quoteTimelineRequest0.getApiMethodName());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Long long0 = new Long(0L);
      Language language0 = Language.zh_CN;
      QuoteTimelineRequest quoteTimelineRequest0 = QuoteTimelineRequest.newRequest((List<String>) linkedList0, long0, false, language0);
      assertEquals("timeline", quoteTimelineRequest0.getApiMethodName());
      assertEquals("2.0", quoteTimelineRequest0.getApiVersion());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      QuoteTimelineRequest quoteTimelineRequest0 = QuoteTimelineRequest.newRequest((List<String>) null);
      assertEquals("timeline", quoteTimelineRequest0.getApiMethodName());
      assertEquals("2.0", quoteTimelineRequest0.getApiVersion());
  }
}
