/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 06:25:32 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.quote.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.quote.model.QuoteHistoryTimelineModel;
import com.tigerbrokers.stock.openapi.client.struct.enums.Language;
import com.tigerbrokers.stock.openapi.client.struct.enums.RightOption;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuoteHistoryTimelineModel_ESTest extends QuoteHistoryTimelineModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      RightOption rightOption0 = RightOption.br;
      Language language0 = Language.en_US;
      QuoteHistoryTimelineModel quoteHistoryTimelineModel0 = new QuoteHistoryTimelineModel(linkedList0, "1d", rightOption0, language0);
      RightOption rightOption1 = quoteHistoryTimelineModel0.getRight();
      assertSame(rightOption0, rightOption1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      QuoteHistoryTimelineModel quoteHistoryTimelineModel0 = new QuoteHistoryTimelineModel(linkedList0, (String) null);
      String string0 = quoteHistoryTimelineModel0.getDate();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Language language0 = Language.en_US;
      QuoteHistoryTimelineModel quoteHistoryTimelineModel0 = new QuoteHistoryTimelineModel(linkedList0, "", language0);
      String string0 = quoteHistoryTimelineModel0.getDate();
      assertFalse(linkedList0.contains(string0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      QuoteHistoryTimelineModel quoteHistoryTimelineModel0 = new QuoteHistoryTimelineModel(linkedList0, "1d");
      quoteHistoryTimelineModel0.setDate("");
      assertEquals(Language.en_US, quoteHistoryTimelineModel0.getLang());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      QuoteHistoryTimelineModel quoteHistoryTimelineModel0 = new QuoteHistoryTimelineModel(linkedList0, "1d");
      quoteHistoryTimelineModel0.getRight();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      QuoteHistoryTimelineModel quoteHistoryTimelineModel0 = new QuoteHistoryTimelineModel(linkedList0, "1d");
      String string0 = quoteHistoryTimelineModel0.getDate();
      assertEquals("1d", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      RightOption rightOption0 = RightOption.br;
      Language language0 = Language.zh_CN;
      QuoteHistoryTimelineModel quoteHistoryTimelineModel0 = new QuoteHistoryTimelineModel(linkedList0, "!8}", rightOption0, language0);
      quoteHistoryTimelineModel0.setRight(rightOption0);
      assertFalse(quoteHistoryTimelineModel0.isIncludeHourTrading());
  }
}
