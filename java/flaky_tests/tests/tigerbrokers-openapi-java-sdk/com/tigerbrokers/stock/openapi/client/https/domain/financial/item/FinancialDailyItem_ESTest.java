/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:57:20 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.financial.item;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.financial.item.FinancialDailyItem;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FinancialDailyItem_ESTest extends FinancialDailyItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FinancialDailyItem financialDailyItem0 = new FinancialDailyItem();
      Double double0 = new Double(0.0);
      financialDailyItem0.setValue(double0);
      Double double1 = financialDailyItem0.getValue();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FinancialDailyItem financialDailyItem0 = new FinancialDailyItem();
      Double double0 = new Double(6082.731421987841);
      financialDailyItem0.setValue(double0);
      Double double1 = financialDailyItem0.getValue();
      assertEquals(6082.731421987841, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FinancialDailyItem financialDailyItem0 = new FinancialDailyItem();
      Double double0 = new Double((-1.0));
      financialDailyItem0.setValue(double0);
      Double double1 = financialDailyItem0.getValue();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FinancialDailyItem financialDailyItem0 = new FinancialDailyItem();
      financialDailyItem0.setSymbol(", field='");
      String string0 = financialDailyItem0.getSymbol();
      assertEquals(", field='", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FinancialDailyItem financialDailyItem0 = new FinancialDailyItem();
      financialDailyItem0.setField("com.tigerbrokers.stock.openapi.client.https.domain.ApiModel");
      String string0 = financialDailyItem0.getField();
      assertEquals("com.tigerbrokers.stock.openapi.client.https.domain.ApiModel", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FinancialDailyItem financialDailyItem0 = new FinancialDailyItem();
      MockDate mockDate0 = new MockDate(1, 1, 1);
      financialDailyItem0.setDate(mockDate0);
      Date date0 = financialDailyItem0.getDate();
      assertEquals("Fri Feb 01 00:00:00 GMT 1901", date0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FinancialDailyItem financialDailyItem0 = new FinancialDailyItem();
      String string0 = financialDailyItem0.toString();
      assertEquals("FinancialDailyItem{symbol='null', date=null, field='null', value=null}", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FinancialDailyItem financialDailyItem0 = new FinancialDailyItem();
      Double double0 = financialDailyItem0.getValue();
      financialDailyItem0.setValue(double0);
      assertNull(financialDailyItem0.getValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FinancialDailyItem financialDailyItem0 = new FinancialDailyItem();
      financialDailyItem0.setSymbol("");
      String string0 = financialDailyItem0.getSymbol();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FinancialDailyItem financialDailyItem0 = new FinancialDailyItem();
      String string0 = financialDailyItem0.getSymbol();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FinancialDailyItem financialDailyItem0 = new FinancialDailyItem();
      Date date0 = financialDailyItem0.getDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FinancialDailyItem financialDailyItem0 = new FinancialDailyItem();
      financialDailyItem0.setField("");
      String string0 = financialDailyItem0.getField();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FinancialDailyItem financialDailyItem0 = new FinancialDailyItem();
      String string0 = financialDailyItem0.getField();
      assertNull(string0);
  }
}
