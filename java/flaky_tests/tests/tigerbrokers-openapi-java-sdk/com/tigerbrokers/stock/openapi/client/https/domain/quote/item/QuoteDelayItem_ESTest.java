/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:19:03 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.quote.item;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.quote.item.QuoteDelayItem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuoteDelayItem_ESTest extends QuoteDelayItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Long long0 = new Long(1L);
      quoteDelayItem0.setVolume(long0);
      Long long1 = quoteDelayItem0.getVolume();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Long long0 = new Long((-1446L));
      quoteDelayItem0.setVolume(long0);
      Long long1 = quoteDelayItem0.getVolume();
      assertEquals((-1446L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Long long0 = Long.getLong("Vu\"eQ ZBw*h", 0L);
      quoteDelayItem0.setTime(long0);
      Long long1 = quoteDelayItem0.getTime();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Long long0 = new Long(1L);
      quoteDelayItem0.setTime(long0);
      Long long1 = quoteDelayItem0.getTime();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Long long0 = Long.getLong("", (-1L));
      quoteDelayItem0.setTime(long0);
      Long long1 = quoteDelayItem0.getTime();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      quoteDelayItem0.setSymbol("/&_Ri)A");
      String string0 = quoteDelayItem0.getSymbol();
      assertEquals("/&_Ri)A", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double(1.0);
      quoteDelayItem0.setPreClose(double0);
      Double double1 = quoteDelayItem0.getPreClose();
      assertEquals(1.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double((-1608.1764227151));
      quoteDelayItem0.setPreClose(double0);
      Double double1 = quoteDelayItem0.getPreClose();
      assertEquals((-1608.1764227151), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double(1.0);
      quoteDelayItem0.setOpen(double0);
      Double double1 = quoteDelayItem0.getOpen();
      assertEquals(1.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double((-1.0));
      quoteDelayItem0.setOpen(double0);
      Double double1 = quoteDelayItem0.getOpen();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double(0.0);
      quoteDelayItem0.setLow(double0);
      Double double1 = quoteDelayItem0.getLow();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double(538.477);
      quoteDelayItem0.setLow(double0);
      Double double1 = quoteDelayItem0.getLow();
      assertEquals(538.477, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double((-1.0));
      quoteDelayItem0.setLow(double0);
      Double double1 = quoteDelayItem0.getLow();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double(453.944404);
      quoteDelayItem0.setHigh(double0);
      Double double1 = quoteDelayItem0.getHigh();
      assertEquals(453.944404, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double((-1L));
      quoteDelayItem0.setHigh(double0);
      Double double1 = quoteDelayItem0.getHigh();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double(55.0);
      quoteDelayItem0.setHalted(double0);
      Double double1 = quoteDelayItem0.getHalted();
      assertEquals(55.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double((-4059.414276923153));
      quoteDelayItem0.setHalted(double0);
      Double double1 = quoteDelayItem0.getHalted();
      assertEquals((-4059.414276923153), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double(538.477);
      quoteDelayItem0.setClose(double0);
      Double double1 = quoteDelayItem0.getClose();
      assertEquals(538.477, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double((-1018.326338));
      quoteDelayItem0.setClose(double0);
      Double double1 = quoteDelayItem0.getClose();
      assertEquals((-1018.326338), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = quoteDelayItem0.getHigh();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double(0.0);
      quoteDelayItem0.setOpen(double0);
      Double double1 = quoteDelayItem0.getOpen();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Long long0 = quoteDelayItem0.getVolume();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = quoteDelayItem0.getOpen();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double(0.0);
      quoteDelayItem0.setClose(double0);
      Double double1 = quoteDelayItem0.getClose();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = quoteDelayItem0.getHalted();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = quoteDelayItem0.getLow();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Long long0 = quoteDelayItem0.getTime();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Long long0 = new Long(0L);
      quoteDelayItem0.setVolume(long0);
      Long long1 = quoteDelayItem0.getVolume();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = quoteDelayItem0.getClose();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double(0.0);
      quoteDelayItem0.setHalted(double0);
      Double double1 = quoteDelayItem0.getHalted();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      String string0 = quoteDelayItem0.getSymbol();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double(0.0);
      quoteDelayItem0.setPreClose(double0);
      Double double1 = quoteDelayItem0.getPreClose();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = quoteDelayItem0.getPreClose();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      quoteDelayItem0.setSymbol("");
      String string0 = quoteDelayItem0.getSymbol();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      QuoteDelayItem quoteDelayItem0 = new QuoteDelayItem();
      Double double0 = new Double(0.0);
      quoteDelayItem0.setHigh(double0);
      Double double1 = quoteDelayItem0.getHigh();
      assertEquals(0.0, (double)double1, 0.01);
  }
}
