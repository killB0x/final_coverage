/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:44:52 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.struct;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.struct.OptionSymbol;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OptionSymbol_ESTest extends OptionSymbol_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OptionSymbol optionSymbol0 = new OptionSymbol();
      optionSymbol0.setSymbol("8NragWJVlyG^w");
      String string0 = optionSymbol0.getSymbol();
      assertEquals("8NragWJVlyG^w", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OptionSymbol optionSymbol0 = new OptionSymbol();
      optionSymbol0.setSymbol("");
      String string0 = optionSymbol0.getSymbol();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OptionSymbol optionSymbol0 = new OptionSymbol();
      optionSymbol0.setStrike(":)Xg+Hch[vV");
      String string0 = optionSymbol0.getStrike();
      assertEquals(":)Xg+Hch[vV", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OptionSymbol optionSymbol0 = new OptionSymbol();
      optionSymbol0.setRight("");
      String string0 = optionSymbol0.getRight();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OptionSymbol optionSymbol0 = new OptionSymbol();
      optionSymbol0.setExpiry("CJq");
      String string0 = optionSymbol0.getExpiry();
      assertEquals("CJq", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OptionSymbol optionSymbol0 = new OptionSymbol();
      optionSymbol0.setStrike("");
      String string0 = optionSymbol0.getStrike();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OptionSymbol optionSymbol0 = new OptionSymbol();
      String string0 = optionSymbol0.getExpiry();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OptionSymbol optionSymbol0 = new OptionSymbol();
      String string0 = optionSymbol0.getSymbol();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OptionSymbol optionSymbol0 = new OptionSymbol();
      String string0 = optionSymbol0.getStrike();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OptionSymbol optionSymbol0 = new OptionSymbol();
      optionSymbol0.setRight("`fV-0jgvb8,c");
      String string0 = optionSymbol0.getRight();
      assertEquals("`fV-0jgvb8,c", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OptionSymbol optionSymbol0 = new OptionSymbol();
      String string0 = optionSymbol0.getRight();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OptionSymbol optionSymbol0 = new OptionSymbol();
      optionSymbol0.setExpiry("");
      String string0 = optionSymbol0.getExpiry();
      assertEquals("", string0);
  }
}
