/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 06:53:43 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.quote.item;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.quote.item.HourTrading;
import com.tigerbrokers.stock.openapi.client.https.domain.quote.item.RealTimeQuoteItem;
import com.tigerbrokers.stock.openapi.client.struct.enums.StockStatus;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RealTimeQuoteItem_ESTest extends RealTimeQuoteItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = new Long(0L);
      realTimeQuoteItem0.setVolume(long0);
      Long long1 = realTimeQuoteItem0.getVolume();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = new Long(3120L);
      realTimeQuoteItem0.setVolume(long0);
      Long long1 = realTimeQuoteItem0.getVolume();
      assertEquals(3120L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = new Long((-499L));
      realTimeQuoteItem0.setVolume(long0);
      Long long1 = realTimeQuoteItem0.getVolume();
      assertEquals((-499L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      realTimeQuoteItem0.setSymbol("RealTimeQuoteItem{symbol='null', open=null, high=null, low=null, close=null, preClose=null, latestPrice=null, latestTime=null, askPrice=null, askSize=1, bidPrice=null, bidSize=null, volume=null, status=ALTER, hourTrading=null}");
      String string0 = realTimeQuoteItem0.getSymbol();
      assertEquals("RealTimeQuoteItem{symbol='null', open=null, high=null, low=null, close=null, preClose=null, latestPrice=null, latestTime=null, askPrice=null, askSize=1, bidPrice=null, bidSize=null, volume=null, status=ALTER, hourTrading=null}", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      realTimeQuoteItem0.setSymbol("");
      String string0 = realTimeQuoteItem0.getSymbol();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.DELIST;
      realTimeQuoteItem0.setStatus(stockStatus0);
      StockStatus stockStatus1 = realTimeQuoteItem0.getStatus();
      assertEquals("\u9000\u5E02", stockStatus1.getDesc());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.ALTER;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setPreClose(double0);
      Double double1 = realTimeQuoteItem0.getPreClose();
      assertEquals(8.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Double double0 = Double.valueOf((-2910.7));
      realTimeQuoteItem0.setPreClose(double0);
      Double double1 = realTimeQuoteItem0.getPreClose();
      assertEquals((-2910.7), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      HourTrading hourTrading0 = new HourTrading();
      StockStatus stockStatus0 = StockStatus.NORMAL;
      Double double0 = stockStatus0.getValue();
      hourTrading0.latestPrice = double0;
      realTimeQuoteItem0.setOpen(hourTrading0.latestPrice);
      Double double1 = realTimeQuoteItem0.getOpen();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.HALTED;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setOpen(double0);
      Double double1 = realTimeQuoteItem0.getOpen();
      assertEquals(3.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.UNKNOWN;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setOpen(double0);
      Double double1 = realTimeQuoteItem0.getOpen();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.NORMAL;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setLow(double0);
      Double double1 = realTimeQuoteItem0.getLow();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.ALTER;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setLow(double0);
      Double double1 = realTimeQuoteItem0.getLow();
      assertEquals(8.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      HourTrading hourTrading0 = new HourTrading();
      Double double0 = Double.valueOf((-634.507395));
      hourTrading0.latestPrice = double0;
      realTimeQuoteItem0.setLow(hourTrading0.latestPrice);
      Double double1 = realTimeQuoteItem0.getLow();
      assertEquals((-634.507395), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = new Long(1L);
      realTimeQuoteItem0.setLatestTime(long0);
      Long long1 = realTimeQuoteItem0.getLatestTime();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = new Long((-2438L));
      realTimeQuoteItem0.setLatestTime(long0);
      Long long1 = realTimeQuoteItem0.getLatestTime();
      assertEquals((-2438L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Double double0 = Double.valueOf(0.0);
      realTimeQuoteItem0.setLatestPrice(double0);
      Double double1 = realTimeQuoteItem0.getLatestPrice();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.NEW;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setLatestPrice(double0);
      Double double1 = realTimeQuoteItem0.getLatestPrice();
      assertEquals(7.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Double double0 = Double.valueOf((-1.0));
      realTimeQuoteItem0.setLatestPrice(double0);
      Double double1 = realTimeQuoteItem0.getLatestPrice();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Double double0 = Double.valueOf(0.0);
      realTimeQuoteItem0.setHigh(double0);
      Double double1 = realTimeQuoteItem0.getHigh();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.NEW;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setHigh(double0);
      Double double1 = realTimeQuoteItem0.getHigh();
      assertEquals(7.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.NORMAL;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setClose(double0);
      Double double1 = realTimeQuoteItem0.getClose();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.NEW;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setClose(double0);
      Double double1 = realTimeQuoteItem0.getClose();
      assertEquals(7.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.UNKNOWN;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setClose(double0);
      Double double1 = realTimeQuoteItem0.getClose();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = new Long(0L);
      realTimeQuoteItem0.setBidSize(long0);
      Long long1 = realTimeQuoteItem0.getBidSize();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = new Long(1L);
      realTimeQuoteItem0.setBidSize(long0);
      Long long1 = realTimeQuoteItem0.getBidSize();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = new Long((-396L));
      realTimeQuoteItem0.setBidSize(long0);
      Long long1 = realTimeQuoteItem0.getBidSize();
      assertEquals((-396L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.ALTER;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setBidPrice(double0);
      Double double1 = realTimeQuoteItem0.getBidPrice();
      assertEquals(8.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.UNKNOWN;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setBidPrice(double0);
      Double double1 = realTimeQuoteItem0.getBidPrice();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = new Long(0L);
      realTimeQuoteItem0.setAskSize(long0);
      Long long1 = realTimeQuoteItem0.getAskSize();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = new Long(1L);
      realTimeQuoteItem0.setAskSize(long0);
      Long long1 = realTimeQuoteItem0.getAskSize();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = new Long((-1L));
      realTimeQuoteItem0.setAskSize(long0);
      Long long1 = realTimeQuoteItem0.getAskSize();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.NORMAL;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setAskPrice(double0);
      Double double1 = realTimeQuoteItem0.getAskPrice();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Double double0 = Double.valueOf((-2910.7));
      realTimeQuoteItem0.setAskPrice(double0);
      Double double1 = realTimeQuoteItem0.getAskPrice();
      assertEquals((-2910.7), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = new Long(0L);
      realTimeQuoteItem0.setLatestTime(long0);
      Long long1 = realTimeQuoteItem0.getLatestTime();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      realTimeQuoteItem0.getStatus();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = realTimeQuoteItem0.getAskSize();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      HourTrading hourTrading0 = realTimeQuoteItem0.getHourTrading();
      assertNull(hourTrading0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = realTimeQuoteItem0.getVolume();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Double double0 = realTimeQuoteItem0.getHigh();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Double double0 = realTimeQuoteItem0.getClose();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Double double0 = realTimeQuoteItem0.getBidPrice();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = realTimeQuoteItem0.getLatestTime();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Double double0 = realTimeQuoteItem0.getLatestPrice();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.NEW;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setAskPrice(double0);
      Double double1 = realTimeQuoteItem0.getAskPrice();
      assertEquals(7.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Double double0 = realTimeQuoteItem0.getAskPrice();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.UNKNOWN;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setHigh(double0);
      Double double1 = realTimeQuoteItem0.getHigh();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      String string0 = realTimeQuoteItem0.toString();
      assertEquals("RealTimeQuoteItem{symbol='null', open=null, high=null, low=null, close=null, preClose=null, latestPrice=null, latestTime=null, askPrice=null, askSize=null, bidPrice=null, bidSize=null, volume=null, status=null, hourTrading=null}", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Double double0 = realTimeQuoteItem0.getOpen();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      StockStatus stockStatus0 = StockStatus.NORMAL;
      Double double0 = stockStatus0.getValue();
      realTimeQuoteItem0.setBidPrice(double0);
      Double double1 = realTimeQuoteItem0.getBidPrice();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      String string0 = realTimeQuoteItem0.getSymbol();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      HourTrading hourTrading0 = new HourTrading();
      realTimeQuoteItem0.setHourTrading(hourTrading0);
      HourTrading hourTrading1 = realTimeQuoteItem0.getHourTrading();
      assertNull(hourTrading1.getLatestTime());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Double double0 = realTimeQuoteItem0.getPreClose();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Double double0 = realTimeQuoteItem0.getLow();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RealTimeQuoteItem realTimeQuoteItem0 = new RealTimeQuoteItem();
      Long long0 = realTimeQuoteItem0.getBidSize();
      realTimeQuoteItem0.setAskSize(long0);
      assertNull(realTimeQuoteItem0.getBidSize());
  }
}
