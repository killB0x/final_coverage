/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 06:47:07 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.quote.item;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.quote.item.TimelinePoint;
import com.tigerbrokers.stock.openapi.client.https.domain.quote.item.TimelineRange;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TimelineRange_ESTest extends TimelineRange_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TimelineRange timelineRange0 = new TimelineRange();
      LinkedList<TimelinePoint> linkedList0 = new LinkedList<TimelinePoint>();
      timelineRange0.setItems(linkedList0);
      List<TimelinePoint> list0 = timelineRange0.getItems();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TimelineRange timelineRange0 = new TimelineRange();
      LinkedList<TimelinePoint> linkedList0 = new LinkedList<TimelinePoint>();
      TimelinePoint timelinePoint0 = new TimelinePoint();
      linkedList0.add(timelinePoint0);
      timelineRange0.setItems(linkedList0);
      List<TimelinePoint> list0 = timelineRange0.getItems();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TimelineRange timelineRange0 = new TimelineRange();
      Long long0 = new Long(0L);
      timelineRange0.setEndTime(long0);
      Long long1 = timelineRange0.getEndTime();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TimelineRange timelineRange0 = new TimelineRange();
      Long long0 = new Long(3866L);
      timelineRange0.setEndTime(long0);
      Long long1 = timelineRange0.getEndTime();
      assertEquals(3866L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TimelineRange timelineRange0 = new TimelineRange();
      Long long0 = new Long(0L);
      timelineRange0.setBeginTime(long0);
      Long long1 = timelineRange0.getBeginTime();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TimelineRange timelineRange0 = new TimelineRange();
      Long long0 = new Long(3866L);
      timelineRange0.setBeginTime(long0);
      Long long1 = timelineRange0.getBeginTime();
      assertEquals(3866L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TimelineRange timelineRange0 = new TimelineRange();
      Long long0 = new Long((-1295L));
      timelineRange0.setBeginTime(long0);
      Long long1 = timelineRange0.getBeginTime();
      assertEquals((-1295L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TimelineRange timelineRange0 = new TimelineRange();
      Long long0 = timelineRange0.getBeginTime();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TimelineRange timelineRange0 = new TimelineRange();
      String string0 = timelineRange0.toString();
      assertEquals("TimelineRange{items=null, beginTime=null, endTime=null}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TimelineRange timelineRange0 = new TimelineRange();
      Long long0 = new Long((-1L));
      timelineRange0.setEndTime(long0);
      Long long1 = timelineRange0.getEndTime();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TimelineRange timelineRange0 = new TimelineRange();
      Long long0 = timelineRange0.getEndTime();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TimelineRange timelineRange0 = new TimelineRange();
      List<TimelinePoint> list0 = timelineRange0.getItems();
      assertNull(list0);
  }
}
