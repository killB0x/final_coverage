/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 06:55:06 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.option.item;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.option.item.TradeTickPoint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TradeTickPoint_ESTest extends TradeTickPoint_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TradeTickPoint tradeTickPoint0 = new TradeTickPoint();
      Long long0 = new Long(2502L);
      tradeTickPoint0.setVolume(long0);
      Long long1 = tradeTickPoint0.getVolume();
      assertEquals(2502L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TradeTickPoint tradeTickPoint0 = new TradeTickPoint();
      Long long0 = new Long((-1L));
      tradeTickPoint0.setVolume(long0);
      Long long1 = tradeTickPoint0.getVolume();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TradeTickPoint tradeTickPoint0 = new TradeTickPoint();
      Long long0 = new Long(2502L);
      tradeTickPoint0.setTime(long0);
      Long long1 = tradeTickPoint0.getTime();
      assertEquals(2502L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TradeTickPoint tradeTickPoint0 = new TradeTickPoint();
      Long long0 = new Long((-1L));
      tradeTickPoint0.setTime(long0);
      Long long1 = tradeTickPoint0.getTime();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TradeTickPoint tradeTickPoint0 = new TradeTickPoint();
      Double double0 = new Double(0.0);
      tradeTickPoint0.setPrice(double0);
      Double double1 = tradeTickPoint0.getPrice();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TradeTickPoint tradeTickPoint0 = new TradeTickPoint();
      Double double0 = Double.valueOf(103.448458928);
      tradeTickPoint0.setPrice(double0);
      Double double1 = tradeTickPoint0.getPrice();
      assertEquals(103.448458928, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TradeTickPoint tradeTickPoint0 = new TradeTickPoint();
      Long long0 = new Long(0L);
      tradeTickPoint0.setVolume(long0);
      Long long1 = tradeTickPoint0.getVolume();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TradeTickPoint tradeTickPoint0 = new TradeTickPoint();
      Long long0 = tradeTickPoint0.getVolume();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TradeTickPoint tradeTickPoint0 = new TradeTickPoint();
      Long long0 = new Long(0L);
      tradeTickPoint0.setTime(long0);
      Long long1 = tradeTickPoint0.getTime();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TradeTickPoint tradeTickPoint0 = new TradeTickPoint();
      Double double0 = new Double((-60.0));
      tradeTickPoint0.setPrice(double0);
      Double double1 = tradeTickPoint0.getPrice();
      assertEquals((-60.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TradeTickPoint tradeTickPoint0 = new TradeTickPoint();
      String string0 = tradeTickPoint0.toString();
      assertEquals("TradeTickPoint{price=null, time=null, volume=null}", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TradeTickPoint tradeTickPoint0 = new TradeTickPoint();
      Double double0 = tradeTickPoint0.getPrice();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TradeTickPoint tradeTickPoint0 = new TradeTickPoint();
      Long long0 = tradeTickPoint0.getTime();
      assertNull(long0);
  }
}
