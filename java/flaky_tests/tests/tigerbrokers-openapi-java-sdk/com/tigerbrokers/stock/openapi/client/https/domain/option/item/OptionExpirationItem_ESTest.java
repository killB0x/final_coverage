/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:43:58 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.option.item;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.option.item.OptionExpirationItem;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OptionExpirationItem_ESTest extends OptionExpirationItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OptionExpirationItem optionExpirationItem0 = new OptionExpirationItem();
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      optionExpirationItem0.setTimestamps(linkedList0);
      List<Long> list0 = optionExpirationItem0.getTimestamps();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OptionExpirationItem optionExpirationItem0 = new OptionExpirationItem();
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      Long long0 = new Long(2954L);
      linkedList0.add(long0);
      optionExpirationItem0.setTimestamps(linkedList0);
      List<Long> list0 = optionExpirationItem0.getTimestamps();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OptionExpirationItem optionExpirationItem0 = new OptionExpirationItem();
      optionExpirationItem0.setSymbol(", count=");
      String string0 = optionExpirationItem0.getSymbol();
      assertEquals(", count=", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OptionExpirationItem optionExpirationItem0 = new OptionExpirationItem();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      optionExpirationItem0.setDates(linkedList0);
      List<String> list0 = optionExpirationItem0.getDates();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OptionExpirationItem optionExpirationItem0 = new OptionExpirationItem();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      optionExpirationItem0.setDates(linkedList0);
      List<String> list0 = optionExpirationItem0.getDates();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OptionExpirationItem optionExpirationItem0 = new OptionExpirationItem();
      Integer integer0 = new Integer(0);
      optionExpirationItem0.setCount(integer0);
      Integer integer1 = optionExpirationItem0.getCount();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OptionExpirationItem optionExpirationItem0 = new OptionExpirationItem();
      Integer integer0 = Integer.valueOf(70);
      optionExpirationItem0.setCount(integer0);
      Integer integer1 = optionExpirationItem0.getCount();
      assertEquals(70, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OptionExpirationItem optionExpirationItem0 = new OptionExpirationItem();
      Integer integer0 = new Integer((-6108));
      optionExpirationItem0.setCount(integer0);
      Integer integer1 = optionExpirationItem0.getCount();
      assertEquals((-6108), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OptionExpirationItem optionExpirationItem0 = new OptionExpirationItem();
      String string0 = optionExpirationItem0.toString();
      assertEquals("OptionExpirationItem{symbol='null', dates=null, timestamps=null, count=null}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OptionExpirationItem optionExpirationItem0 = new OptionExpirationItem();
      Integer integer0 = optionExpirationItem0.getCount();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OptionExpirationItem optionExpirationItem0 = new OptionExpirationItem();
      List<String> list0 = optionExpirationItem0.getDates();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OptionExpirationItem optionExpirationItem0 = new OptionExpirationItem();
      optionExpirationItem0.setSymbol("");
      String string0 = optionExpirationItem0.getSymbol();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OptionExpirationItem optionExpirationItem0 = new OptionExpirationItem();
      List<Long> list0 = optionExpirationItem0.getTimestamps();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OptionExpirationItem optionExpirationItem0 = new OptionExpirationItem();
      String string0 = optionExpirationItem0.getSymbol();
      assertNull(string0);
  }
}
