/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:05:51 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.validator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tigerbrokers.stock.openapi.client.https.domain.ApiModel;
import com.tigerbrokers.stock.openapi.client.https.domain.future.model.FutureContractByConCodeModel;
import com.tigerbrokers.stock.openapi.client.https.domain.future.model.FutureTickModel;
import com.tigerbrokers.stock.openapi.client.https.domain.option.model.OptionCommonModel;
import com.tigerbrokers.stock.openapi.client.https.validator.ValidatorManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ValidatorManager_ESTest extends ValidatorManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValidatorManager validatorManager0 = ValidatorManager.getInstance();
      FutureContractByConCodeModel futureContractByConCodeModel0 = new FutureContractByConCodeModel("?/1IR=nJsYG'");
      validatorManager0.validate(futureContractByConCodeModel0);
      assertEquals("?/1IR=nJsYG'", futureContractByConCodeModel0.getContractCode());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ValidatorManager validatorManager0 = ValidatorManager.getInstance();
      FutureTickModel futureTickModel0 = new FutureTickModel();
      try { 
        validatorManager0.validate(futureTickModel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 10101:client biz param error(contract_codes is requried)
         //
         verifyException("com.tigerbrokers.stock.openapi.client.https.validator.FutureQuoteRequestValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ValidatorManager validatorManager0 = ValidatorManager.getInstance();
      validatorManager0.validate((ApiModel) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ValidatorManager validatorManager0 = ValidatorManager.getInstance();
      OptionCommonModel optionCommonModel0 = new OptionCommonModel();
      validatorManager0.validate(optionCommonModel0);
      assertNull(optionCommonModel0.getSymbol());
  }
}
