/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:38:07 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.response.future;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.future.item.FutureContractItem;
import com.tigerbrokers.stock.openapi.client.https.response.future.FutureContractResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FutureContractResponse_ESTest extends FutureContractResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FutureContractResponse futureContractResponse0 = new FutureContractResponse();
      FutureContractItem futureContractItem0 = new FutureContractItem();
      futureContractResponse0.setFutureContractItem(futureContractItem0);
      futureContractItem0.setTrade(true);
      FutureContractItem futureContractItem1 = futureContractResponse0.getFutureContractItem();
      assertNull(futureContractItem1.getContractMonth());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FutureContractResponse futureContractResponse0 = new FutureContractResponse();
      FutureContractItem futureContractItem0 = new FutureContractItem();
      futureContractResponse0.setFutureContractItem(futureContractItem0);
      futureContractItem0.setContinuous(true);
      FutureContractItem futureContractItem1 = futureContractResponse0.getFutureContractItem();
      assertNull(futureContractItem1.getLastTradingDate());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FutureContractResponse futureContractResponse0 = new FutureContractResponse();
      FutureContractItem futureContractItem0 = new FutureContractItem();
      futureContractResponse0.setFutureContractItem(futureContractItem0);
      futureContractItem0.setLastBiddingCloseTime(788L);
      FutureContractItem futureContractItem1 = futureContractResponse0.getFutureContractItem();
      assertNull(futureContractItem1.getFirstNoticeDate());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FutureContractResponse futureContractResponse0 = new FutureContractResponse();
      FutureContractItem futureContractItem0 = new FutureContractItem();
      futureContractResponse0.setFutureContractItem(futureContractItem0);
      futureContractItem0.setLastBiddingCloseTime((-1L));
      FutureContractItem futureContractItem1 = futureContractResponse0.getFutureContractItem();
      assertFalse(futureContractItem1.isContinuous());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FutureContractResponse futureContractResponse0 = new FutureContractResponse();
      FutureContractItem futureContractItem0 = futureContractResponse0.getFutureContractItem();
      assertNull(futureContractItem0);
  }
}
