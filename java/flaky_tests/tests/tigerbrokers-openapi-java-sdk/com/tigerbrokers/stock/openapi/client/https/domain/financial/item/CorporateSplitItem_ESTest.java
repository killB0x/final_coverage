/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 05:26:21 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.financial.item;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.financial.item.CorporateSplitItem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CorporateSplitItem_ESTest extends CorporateSplitItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CorporateSplitItem corporateSplitItem0 = new CorporateSplitItem();
      corporateSplitItem0.setType("");
      String string0 = corporateSplitItem0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CorporateSplitItem corporateSplitItem0 = new CorporateSplitItem();
      Double double0 = new Double(0.0);
      corporateSplitItem0.setToFactor(double0);
      Double double1 = corporateSplitItem0.getToFactor();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CorporateSplitItem corporateSplitItem0 = new CorporateSplitItem();
      Double double0 = new Double(2752L);
      corporateSplitItem0.setToFactor(double0);
      Double double1 = corporateSplitItem0.getToFactor();
      assertEquals(2752.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CorporateSplitItem corporateSplitItem0 = new CorporateSplitItem();
      Double double0 = new Double((-383.8814211395));
      corporateSplitItem0.setToFactor(double0);
      Double double1 = corporateSplitItem0.getToFactor();
      assertEquals((-383.8814211395), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CorporateSplitItem corporateSplitItem0 = new CorporateSplitItem();
      Double double0 = new Double(0.0);
      corporateSplitItem0.setRatio(double0);
      Double double1 = corporateSplitItem0.getRatio();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CorporateSplitItem corporateSplitItem0 = new CorporateSplitItem();
      Double double0 = new Double(2708.99);
      corporateSplitItem0.setRatio(double0);
      Double double1 = corporateSplitItem0.getRatio();
      assertEquals(2708.99, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CorporateSplitItem corporateSplitItem0 = new CorporateSplitItem();
      Double double0 = new Double((-383.8814211395));
      corporateSplitItem0.setRatio(double0);
      Double double1 = corporateSplitItem0.getRatio();
      assertEquals((-383.8814211395), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CorporateSplitItem corporateSplitItem0 = new CorporateSplitItem();
      Double double0 = new Double(0.0);
      corporateSplitItem0.setFromFactor(double0);
      Double double1 = corporateSplitItem0.getFromFactor();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CorporateSplitItem corporateSplitItem0 = new CorporateSplitItem();
      Double double0 = new Double(1357.8440388439672);
      corporateSplitItem0.setFromFactor(double0);
      Double double1 = corporateSplitItem0.getFromFactor();
      assertEquals(1357.8440388439672, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CorporateSplitItem corporateSplitItem0 = new CorporateSplitItem();
      Double double0 = new Double((-383.8814211395));
      corporateSplitItem0.setFromFactor(double0);
      Double double1 = corporateSplitItem0.getFromFactor();
      assertEquals((-383.8814211395), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CorporateSplitItem corporateSplitItem0 = new CorporateSplitItem();
      Double double0 = corporateSplitItem0.getToFactor();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CorporateSplitItem corporateSplitItem0 = new CorporateSplitItem();
      corporateSplitItem0.setType("com.tigerbrokers.stock.openapi.client.https.domain.financial.item.CorporateSplitItem");
      String string0 = corporateSplitItem0.getType();
      assertEquals("com.tigerbrokers.stock.openapi.client.https.domain.financial.item.CorporateSplitItem", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CorporateSplitItem corporateSplitItem0 = new CorporateSplitItem();
      String string0 = corporateSplitItem0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CorporateSplitItem corporateSplitItem0 = new CorporateSplitItem();
      Double double0 = corporateSplitItem0.getFromFactor();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CorporateSplitItem corporateSplitItem0 = new CorporateSplitItem();
      Double double0 = corporateSplitItem0.getRatio();
      assertNull(double0);
  }
}
