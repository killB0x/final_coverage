/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 07:06:52 GMT 2022
 */

package com.tigerbrokers.stock.openapi.client.https.domain.quote.item;

import org.junit.Test;
import static org.junit.Assert.*;
import com.tigerbrokers.stock.openapi.client.https.domain.quote.item.TimelinePoint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TimelinePoint_ESTest extends TimelinePoint_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Long long0 = new Long(0L);
      timelinePoint0.setVolume(long0);
      Long long1 = timelinePoint0.getVolume();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Long long0 = new Long(1L);
      timelinePoint0.setVolume(long0);
      Long long1 = timelinePoint0.getVolume();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Long long0 = new Long((-483L));
      timelinePoint0.setVolume(long0);
      Long long1 = timelinePoint0.getVolume();
      assertEquals((-483L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Long long0 = new Long(0L);
      timelinePoint0.setTime(long0);
      Long long1 = timelinePoint0.getTime();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Long long0 = new Long(1L);
      timelinePoint0.setTime(long0);
      Long long1 = timelinePoint0.getTime();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Long long0 = new Long((-1L));
      timelinePoint0.setTime(long0);
      Long long1 = timelinePoint0.getTime();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Double double0 = new Double(0.0);
      timelinePoint0.setPrice(double0);
      Double double1 = timelinePoint0.getPrice();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Double double0 = new Double(47.8966705);
      timelinePoint0.setPrice(double0);
      Double double1 = timelinePoint0.getPrice();
      assertEquals(47.8966705, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Double double0 = new Double((-1L));
      timelinePoint0.setPrice(double0);
      Double double1 = timelinePoint0.getPrice();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Double double0 = new Double(0.0);
      timelinePoint0.setAvgPrice(double0);
      Double double1 = timelinePoint0.getAvgPrice();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Double double0 = new Double(4786.521020041131);
      timelinePoint0.setAvgPrice(double0);
      Double double1 = timelinePoint0.getAvgPrice();
      assertEquals(4786.521020041131, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Double double0 = new Double((-1.0));
      timelinePoint0.setAvgPrice(double0);
      Double double1 = timelinePoint0.getAvgPrice();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      String string0 = timelinePoint0.toString();
      assertEquals("TimelinePoint{price=null, avgPrice=null, time=null, volume=null}", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Double double0 = timelinePoint0.getAvgPrice();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Double double0 = timelinePoint0.getPrice();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Long long0 = timelinePoint0.getVolume();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TimelinePoint timelinePoint0 = new TimelinePoint();
      Long long0 = timelinePoint0.getTime();
      assertNull(long0);
  }
}
