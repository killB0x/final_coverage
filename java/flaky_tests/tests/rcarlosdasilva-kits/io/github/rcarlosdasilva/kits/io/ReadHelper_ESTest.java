/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 09:13:32 GMT 2022
 */

package io.github.rcarlosdasilva.kits.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.rcarlosdasilva.kits.able.Convertible;
import io.github.rcarlosdasilva.kits.io.ReadHelper;
import java.io.File;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReadHelper_ESTest extends ReadHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockFile mockFile0 = new MockFile("big5", "big5");
      Class<String> class0 = String.class;
      Convertible<String, String> convertible0 = (Convertible<String, String>) mock(Convertible.class, new ViolatedAssumptionAnswer());
      Charset charset0 = Charset.forName("big5");
      // Undeclared exception!
      try { 
        ReadHelper.read((File) mockFile0, class0, convertible0, charset0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("io.github.rcarlosdasilva.kits.io.ReadHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        ReadHelper.read((File) null, class0, (Convertible<String, Object>) null, charset0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("io.github.rcarlosdasilva.kits.io.ReadHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      Class<String> class0 = String.class;
      Convertible<String, String> convertible0 = (Convertible<String, String>) mock(Convertible.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        ReadHelper.read((File) mockFile0, class0, convertible0, (Charset) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("io.github.rcarlosdasilva.kits.io.ReadHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockFile mockFile0 = new MockFile("b^#aE", "b^#aE");
      // Undeclared exception!
      try { 
        ReadHelper.read((File) mockFile0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("io.github.rcarlosdasilva.kits.io.ReadHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        ReadHelper.read((File) null, charset0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("io.github.rcarlosdasilva.kits.io.ReadHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        ReadHelper.read((File) null, class0, (Convertible<String, Object>) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("io.github.rcarlosdasilva.kits.io.ReadHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ReadHelper readHelper0 = new ReadHelper();
  }
}
