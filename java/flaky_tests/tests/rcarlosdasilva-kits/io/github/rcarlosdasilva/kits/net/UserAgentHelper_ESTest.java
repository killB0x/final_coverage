/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 09:18:37 GMT 2022
 */

package io.github.rcarlosdasilva.kits.net;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.rcarlosdasilva.kits.net.UserAgentHelper;
import io.github.rcarlosdasilva.kits.net.ua.Browser;
import io.github.rcarlosdasilva.kits.net.ua.OperatingSystem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UserAgentHelper_ESTest extends UserAgentHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UserAgentHelper.UserAgent userAgentHelper_UserAgent0 = new UserAgentHelper.UserAgent("");
      UserAgentHelper.UserAgent userAgentHelper_UserAgent1 = UserAgentHelper.parse("iOS 9 (iPhone)");
      boolean boolean0 = userAgentHelper_UserAgent0.equals(userAgentHelper_UserAgent1);
      assertFalse(boolean0);
      assertEquals(52953358, userAgentHelper_UserAgent1.getId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        UserAgentHelper.valueOf("uJvQD7-X,-to%a2Q");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid string for userAgent uJvQD7-X,-to%a2Q
         //
         verifyException("io.github.rcarlosdasilva.kits.net.UserAgentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        UserAgentHelper.valueOf((-1248));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum const for id -1
         //
         verifyException("io.github.rcarlosdasilva.kits.net.ua.OperatingSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UserAgentHelper.UserAgent userAgentHelper_UserAgent0 = UserAgentHelper.valueOf(16846090);
      UserAgentHelper.UserAgent userAgentHelper_UserAgent1 = UserAgentHelper.parse("Name is null");
      boolean boolean0 = userAgentHelper_UserAgent1.equals(userAgentHelper_UserAgent0);
      assertEquals(16843022, userAgentHelper_UserAgent1.getId());
      assertEquals(16846090, userAgentHelper_UserAgent0.getId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserAgentHelper.UserAgent userAgentHelper_UserAgent0 = new UserAgentHelper.UserAgent("");
      UserAgentHelper.UserAgent userAgentHelper_UserAgent1 = UserAgentHelper.parse("");
      boolean boolean0 = userAgentHelper_UserAgent0.equals(userAgentHelper_UserAgent1);
      assertTrue(boolean0);
      assertEquals(16843022, userAgentHelper_UserAgent1.getId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UserAgentHelper.UserAgent userAgentHelper_UserAgent0 = new UserAgentHelper.UserAgent("");
      Object object0 = new Object();
      boolean boolean0 = userAgentHelper_UserAgent0.equals(object0);
      assertFalse(boolean0);
      assertEquals(16843022, userAgentHelper_UserAgent0.getId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserAgentHelper.UserAgent userAgentHelper_UserAgent0 = new UserAgentHelper.UserAgent("");
      boolean boolean0 = userAgentHelper_UserAgent0.equals(userAgentHelper_UserAgent0);
      assertTrue(boolean0);
      assertEquals(16843022, userAgentHelper_UserAgent0.getId());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UserAgentHelper.UserAgent userAgentHelper_UserAgent0 = new UserAgentHelper.UserAgent("");
      boolean boolean0 = userAgentHelper_UserAgent0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(16843022, userAgentHelper_UserAgent0.getId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UserAgentHelper.UserAgent userAgentHelper_UserAgent0 = UserAgentHelper.parse((String) null);
      assertEquals(16843022, userAgentHelper_UserAgent0.getId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserAgentHelper.UserAgent userAgentHelper_UserAgent0 = UserAgentHelper.valueOf("UNKNOWN-UNKNOWN");
      assertEquals(16843022, userAgentHelper_UserAgent0.getId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        UserAgentHelper.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("io.github.rcarlosdasilva.kits.net.UserAgentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        UserAgentHelper.valueOf("jX#wPr(Ph^XO${zw#f|");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid string for userAgent jX#wPr(Ph^XO${zw#f|
         //
         verifyException("io.github.rcarlosdasilva.kits.net.UserAgentHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UserAgentHelper.UserAgent userAgentHelper_UserAgent0 = new UserAgentHelper.UserAgent("");
      userAgentHelper_UserAgent0.getOperatingSystem();
      assertEquals(16843022, userAgentHelper_UserAgent0.getId());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UserAgentHelper.UserAgent userAgentHelper_UserAgent0 = new UserAgentHelper.UserAgent("");
      int int0 = userAgentHelper_UserAgent0.getId();
      assertEquals(16843022, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UserAgentHelper.UserAgent userAgentHelper_UserAgent0 = new UserAgentHelper.UserAgent("");
      String string0 = userAgentHelper_UserAgent0.toString();
      assertEquals("UNKNOWN-UNKNOWN", string0);
      assertEquals(16843022, userAgentHelper_UserAgent0.getId());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UserAgentHelper.UserAgent userAgentHelper_UserAgent0 = new UserAgentHelper.UserAgent("");
      Browser browser0 = userAgentHelper_UserAgent0.getBrowser();
      OperatingSystem operatingSystem0 = OperatingSystem.ANDROID_MOBILE;
      UserAgentHelper.UserAgent userAgentHelper_UserAgent1 = new UserAgentHelper.UserAgent(operatingSystem0, browser0);
      boolean boolean0 = userAgentHelper_UserAgent1.equals(userAgentHelper_UserAgent0);
      assertFalse(boolean0);
      assertEquals(252379406, userAgentHelper_UserAgent1.getId());
      assertEquals(16843022, userAgentHelper_UserAgent0.getId());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UserAgentHelper.UserAgent userAgentHelper_UserAgent0 = new UserAgentHelper.UserAgent("");
      userAgentHelper_UserAgent0.getBrowserVersion();
      assertEquals(16843022, userAgentHelper_UserAgent0.getId());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UserAgentHelper userAgentHelper0 = new UserAgentHelper();
  }
}
