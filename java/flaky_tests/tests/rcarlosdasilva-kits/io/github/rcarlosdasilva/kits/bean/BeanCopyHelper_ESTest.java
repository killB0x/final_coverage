/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 08:52:59 GMT 2022
 */

package io.github.rcarlosdasilva.kits.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.rcarlosdasilva.kits.bean.BeanCopyHelper;
import java.beans.PropertyDescriptor;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BeanCopyHelper_ESTest extends BeanCopyHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<PropertyDescriptor> class0 = PropertyDescriptor.class;
      PropertyDescriptor propertyDescriptor0 = BeanCopyHelper.copyBean(class0, (Object) null);
      assertNull(propertyDescriptor0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        BeanCopyHelper.copyBeans((Class<Object>) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.rcarlosdasilva.kits.bean.BeanCopyHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        BeanCopyHelper.copyBeans(class0, (Object[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("io.github.rcarlosdasilva.kits.bean.BeanCopyHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PropertyDescriptor[] propertyDescriptorArray0 = new PropertyDescriptor[0];
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        BeanCopyHelper.copyBeans(class0, (Object) class0, (Object[]) propertyDescriptorArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("io.github.rcarlosdasilva.kits.bean.BeanCopyHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        BeanCopyHelper.copyBean(class0, (Object) class0, (Object) class0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("io.github.rcarlosdasilva.kits.bean.BeanCopyHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        BeanCopyHelper.copyBean((Class<Object>) null, (Object) class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.rcarlosdasilva.kits.bean.BeanCopyHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<Object> class0 = Object.class;
      LinkedList<PropertyDescriptor> linkedList0 = new LinkedList<PropertyDescriptor>();
      linkedList0.add((PropertyDescriptor) null);
      // Undeclared exception!
      try { 
        BeanCopyHelper.copyBeanList(class0, (List<?>) linkedList0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Lists
         //
         verifyException("io.github.rcarlosdasilva.kits.bean.BeanCopyHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<Object> class0 = Object.class;
      LinkedList<PropertyDescriptor> linkedList0 = new LinkedList<PropertyDescriptor>();
      List<Object> list0 = BeanCopyHelper.copyBeanList(class0, (List<?>) linkedList0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<Object> class0 = Object.class;
      List<Object> list0 = BeanCopyHelper.copyBeanList(class0, (List<?>) null);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<PropertyDescriptor> class0 = PropertyDescriptor.class;
      PropertyDescriptor propertyDescriptor0 = BeanCopyHelper.copyBeans(class0, (Object[]) null);
      assertNull(propertyDescriptor0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BeanCopyHelper beanCopyHelper0 = new BeanCopyHelper();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        BeanCopyHelper.copyBean(class0, (Object) beanCopyHelper0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("io.github.rcarlosdasilva.kits.bean.BeanCopyHelper", e);
      }
  }
}
