/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 08:54:27 GMT 2022
 */

package io.github.rcarlosdasilva.kits.convert.primitive;

import org.junit.Test;
import static org.junit.Assert.*;
import io.github.rcarlosdasilva.kits.convert.primitive.ShortConverter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ShortConverter_ESTest extends ShortConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ShortConverter shortConverter0 = new ShortConverter();
      Object object0 = new Object();
      Short short0 = shortConverter0.convert(object0, (Short) null);
      assertNull(short0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ShortConverter shortConverter0 = new ShortConverter();
      Object object0 = new Object();
      Integer integer0 = new Integer((-1));
      Short short0 = shortConverter0.convert((Object) integer0);
      Short short1 = shortConverter0.convert(object0, short0);
      assertEquals((short) (-1), (short)short1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ShortConverter shortConverter0 = new ShortConverter();
      Integer integer0 = new Integer(763);
      Short short0 = shortConverter0.convert((Object) integer0);
      Short short1 = shortConverter0.convert((Object) integer0, short0);
      assertTrue(short1.equals((Object)short0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ShortConverter shortConverter0 = new ShortConverter();
      Object object0 = new Object();
      Short short0 = new Short((short)0);
      Short short1 = shortConverter0.convert(object0, short0);
      assertEquals((short)0, (short)short1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ShortConverter shortConverter0 = new ShortConverter();
      Integer integer0 = new Integer(763);
      Short short0 = shortConverter0.convert((Object) integer0);
      Short short1 = shortConverter0.convert((Object) null, short0);
      assertEquals((short)763, (short)short1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ShortConverter shortConverter0 = new ShortConverter();
      Object object0 = new Object();
      Short short0 = shortConverter0.convert(object0);
      assertEquals((short)0, (short)short0);
  }
}
