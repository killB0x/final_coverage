/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 08:43:36 GMT 2022
 */

package io.github.rcarlosdasilva.kits.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.rcarlosdasilva.kits.io.PropertiesFileHelper;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PropertiesFileHelper_ESTest extends PropertiesFileHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        PropertiesFileHelper.write((String) null, (Map<String, String>) hashMap0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      try { 
        PropertiesFileHelper.write("H Jz:yAJiss^90*C)", (Map<String, String>) hashMap0, true);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        PropertiesFileHelper.write((String) null, (String) null, (Object) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile("W+%uVasF", "W+%uVasF");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put((String) null, (String) null);
      // Undeclared exception!
      try { 
        PropertiesFileHelper.write((File) mockFile0, (Map<String, String>) hashMap0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        PropertiesFileHelper.read((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      PropertiesFileHelper.write(";NE]kupY", (Map<String, String>) hashMap0, true);
      // Undeclared exception!
      try { 
        PropertiesFileHelper.read(";NE]kupY");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Maps
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        PropertiesFileHelper.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      File file0 = MockFile.createTempFile("io.githu.rcarlosdasilvakits.io.PropertiesFileHelper", "io.githu.rcarlosdasilvakits.io.PropertiesFileHelper");
      // Undeclared exception!
      try { 
        PropertiesFileHelper.write(file0, "io.githu.rcarlosdasilvakits.io.PropertiesFileHelper", (Object) "io.githu.rcarlosdasilvakits.io.PropertiesFileHelper", false);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Maps
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        PropertiesFileHelper.write((File) null, "", (Object) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        PropertiesFileHelper.write((File) null, (String) null, (Object) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      File file0 = MockFile.createTempFile("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", "io.github.rcarlosdasilva.kits.io.PropertiesFileHelper");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        PropertiesFileHelper.write(file0, (Map<String, String>) hashMap0, true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Maps
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      try { 
        PropertiesFileHelper.write((File) mockFile0, (Map<String, String>) hashMap0, false);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // expect properties file but directory
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      File file0 = MockFile.createTempFile(";NE]kupY", ";NE]kupY", (File) null);
      // Undeclared exception!
      try { 
        PropertiesFileHelper.write(file0, (Map<String, String>) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      File file0 = MockFile.createTempFile("mV&ycc?u;q-jrxM9", "mV&ycc?u;q-jrxM9");
      // Undeclared exception!
      try { 
        PropertiesFileHelper.read(file0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Maps
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      try { 
        PropertiesFileHelper.read((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // file not found or expect properties file but directory
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        PropertiesFileHelper.write(",eKX![iDQY", ",eKX![iDQY", (Object) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        PropertiesFileHelper.write("io.github.rcarlosdasilva.kits.io.Propert(esFileHelper", "io.github.rcarlosdasilva.kits.io.Propert(esFileHelper", (Object) "io.github.rcarlosdasilva.kits.io.Propert(esFileHelper", true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Maps
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      File file0 = MockFile.createTempFile("uIEn;0A_", "uIEn;0A_");
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        PropertiesFileHelper.write(file0, (Map<String, String>) hashMap0, false);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      PropertiesFileHelper.write("file not found or expect properties file but directory", (Map<String, String>) hashMap0, true);
      MockFile mockFile0 = new MockFile("file not found or expect properties file but directory", "file not found or expect properties file but directory");
      PropertiesFileHelper.write((File) mockFile0, (Map<String, String>) hashMap0, true);
      assertTrue(mockFile0.isFile());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      File file0 = MockFile.createTempFile("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", "io.github.rcarlosdasilva.kits.io.PropertiesFileHelper");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      PropertiesFileHelper.write(file0, (Map<String, String>) hashMap0, false);
      assertEquals(0L, file0.getTotalSpace());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      try { 
        PropertiesFileHelper.write("", (Map<String, String>) hashMap0, true);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // expect properties file but directory
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        PropertiesFileHelper.write("i@.githZb.rcarlosdasilva.kits.io.PropertiesFileHelper", (Map<String, String>) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        PropertiesFileHelper.write((File) null, (Map<String, String>) hashMap0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      File file0 = MockFile.createTempFile("3MT[gE(n7", "", (File) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        PropertiesFileHelper.read(file0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Maps
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      File file0 = MockFile.createTempFile("io.githu.rcarlosdasilvakits.io.Pr}pertiesFileHelper", "io.githu.rcarlosdasilvakits.io.Pr}pertiesFileHelper");
      file0.setReadable(false, false);
      // Undeclared exception!
      try { 
        PropertiesFileHelper.read(file0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Maps
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockFile mockFile0 = new MockFile("io.gthub.rcarlosdasilva.kits.io.PropertiesFileHelper");
      try { 
        PropertiesFileHelper.read((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // file not found or expect properties file but directory
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        PropertiesFileHelper.write("vImBR40t@TL5'e", (String) null, (Object) "vImBR40t@TL5'e", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PropertiesFileHelper propertiesFileHelper0 = new PropertiesFileHelper();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      PropertiesFileHelper.write("io.githu[.rcarlosdasilva.kits.io.PropertiesFileHelper", (Map<String, String>) hashMap0, true);
      // Undeclared exception!
      try { 
        PropertiesFileHelper.write("io.githu[.rcarlosdasilva.kits.io.PropertiesFileHelper", (Map<String, String>) hashMap0, true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Maps
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      try { 
        PropertiesFileHelper.read("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // file not found or expect properties file but directory
         //
         verifyException("io.github.rcarlosdasilva.kits.io.PropertiesFileHelper", e);
      }
  }
}
