/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 08:58:47 GMT 2022
 */

package io.github.rcarlosdasilva.kits.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.rcarlosdasilva.kits.io.WriteHelper;
import java.io.File;
import java.nio.charset.Charset;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WriteHelper_ESTest extends WriteHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        WriteHelper.write((File) null, (Iterable<?>) null, false, charset0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("io.github.rcarlosdasilva.kits.io.WriteHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".+A-DjDhk{f20K9", ".+A-DjDhk{f20K9");
      Stack<Object> stack0 = new Stack<Object>();
      HashSet<Object> hashSet0 = new HashSet<Object>(stack0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        WriteHelper.write((File) mockFile0, (Iterable<?>) hashSet0, false, charset0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("io.github.rcarlosdasilva.kits.io.WriteHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      Stack<Integer> stack0 = new Stack<Integer>();
      ArrayList<Object> arrayList0 = new ArrayList<Object>(stack0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        WriteHelper.write((File) mockFile0, (Iterable<?>) arrayList0, false, charset0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("io.github.rcarlosdasilva.kits.io.WriteHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        WriteHelper.write((File) null, (Iterable<?>) null, true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("io.github.rcarlosdasilva.kits.io.WriteHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockFile mockFile0 = new MockFile("line.separator");
      ArrayDeque<Object> arrayDeque0 = new ArrayDeque<Object>();
      // Undeclared exception!
      try { 
        WriteHelper.write((File) mockFile0, (Iterable<?>) arrayDeque0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Preconditions
         //
         verifyException("io.github.rcarlosdasilva.kits.io.WriteHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      WriteHelper writeHelper0 = new WriteHelper();
  }
}
