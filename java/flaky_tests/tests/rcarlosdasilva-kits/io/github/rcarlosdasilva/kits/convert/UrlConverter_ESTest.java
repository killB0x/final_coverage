/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 09:11:24 GMT 2022
 */

package io.github.rcarlosdasilva.kits.convert;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import io.github.rcarlosdasilva.kits.convert.UrlConverter;
import java.net.URL;
import java.net.URLStreamHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UrlConverter_ESTest extends UrlConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UrlConverter urlConverter0 = new UrlConverter();
      Object object0 = new Object();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("", "", 1, "!AkPMQC~", uRLStreamHandler0);
      URL uRL1 = urlConverter0.convert(object0, uRL0);
      assertEquals("!AkPMQC~", uRL1.getPath());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UrlConverter urlConverter0 = new UrlConverter();
      MockFile mockFile0 = new MockFile("");
      URL uRL0 = urlConverter0.convert((Object) mockFile0);
      assertEquals((-1), uRL0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UrlConverter urlConverter0 = new UrlConverter();
      Object object0 = new Object();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("", "", 0, "", uRLStreamHandler0);
      URL uRL1 = urlConverter0.convert(object0, uRL0);
      assertNull(uRL1.getRef());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UrlConverter urlConverter0 = new UrlConverter();
      MockFile mockFile0 = new MockFile("", "");
      URL uRL0 = urlConverter0.convert((Object) mockFile0, (URL) null);
      assertEquals((-1), uRL0.getDefaultPort());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UrlConverter urlConverter0 = new UrlConverter();
      URL uRL0 = MockURL.getFileExample();
      URL uRL1 = urlConverter0.convert((Object) uRL0, uRL0);
      assertNull(uRL1.getQuery());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      UrlConverter urlConverter0 = new UrlConverter();
      URL uRL0 = urlConverter0.convert((Object) null, (URL) null);
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      UrlConverter urlConverter0 = new UrlConverter();
      URL uRL0 = urlConverter0.convert((Object) urlConverter0);
      assertNull(uRL0);
  }
}
