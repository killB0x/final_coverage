/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 09:24:34 GMT 2022
 */

package io.github.rcarlosdasilva.kits.convert.collect.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.rcarlosdasilva.kits.convert.collect.MapInternalConverter;
import io.github.rcarlosdasilva.kits.convert.collect.impl.List2MapConverter;
import java.util.HashMap;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class List2MapConverter_ESTest extends List2MapConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      List2MapConverter<Object, Object, HashMap<Object, Object>> list2MapConverter0 = null;
      try {
        list2MapConverter0 = new List2MapConverter<Object, Object, HashMap<Object, Object>>((MapInternalConverter<Object, Object, HashMap<Object, Object>>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.rcarlosdasilva.kits.convert.collect.AbstractMapConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MapInternalConverter<Object, LinkedList<Object>, Object> mapInternalConverter0 = (MapInternalConverter<Object, LinkedList<Object>, Object>) mock(MapInternalConverter.class, new ViolatedAssumptionAnswer());
      List2MapConverter<Object, LinkedList<Object>, Object> list2MapConverter0 = new List2MapConverter<Object, LinkedList<Object>, Object>(mapInternalConverter0);
      // Undeclared exception!
      try { 
        list2MapConverter0.mapInstance();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Maps
         //
         verifyException("io.github.rcarlosdasilva.kits.convert.collect.impl.List2MapConverter", e);
      }
  }
}
