/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 09:06:28 GMT 2022
 */

package io.github.rcarlosdasilva.kits.convert;

import org.junit.Test;
import static org.junit.Assert.*;
import io.github.rcarlosdasilva.kits.convert.CharsetConverter;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharsetConverter_ESTest extends CharsetConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CharsetConverter charsetConverter0 = new CharsetConverter();
      Charset charset0 = charsetConverter0.convert("", (Charset) null);
      assertNull(charset0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CharsetConverter charsetConverter0 = new CharsetConverter();
      Charset charset0 = Charset.defaultCharset();
      Charset charset1 = charsetConverter0.convert("BIG5", charset0);
      assertEquals("Big5", charset1.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CharsetConverter charsetConverter0 = new CharsetConverter();
      Charset charset0 = charsetConverter0.convert("Ld;L%G;");
      Charset charset1 = charsetConverter0.convert("gbk", charset0);
      assertEquals("GBK", charset1.displayName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CharsetConverter charsetConverter0 = new CharsetConverter();
      Charset charset0 = Charset.defaultCharset();
      Charset charset1 = charsetConverter0.convert("UTF-8", charset0);
      assertEquals("UTF-8", charset1.name());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CharsetConverter charsetConverter0 = new CharsetConverter();
      Charset charset0 = charsetConverter0.convert("g.ctG=4z%lipz-]Ca");
      Charset charset1 = charsetConverter0.convert((String) null, charset0);
      assertSame(charset1, charset0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CharsetConverter charsetConverter0 = new CharsetConverter();
      Charset charset0 = charsetConverter0.convert("GB2312");
      Charset charset1 = charsetConverter0.convert("GB2312", charset0);
      assertEquals("GB2312", charset1.toString());
  }
}
