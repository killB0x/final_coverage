/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 09:03:55 GMT 2022
 */

package io.github.rcarlosdasilva.kits.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import io.github.rcarlosdasilva.kits.bean.SerializeHelper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SerializeHelper_ESTest extends SerializeHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Object object0 = SerializeHelper.deserialize(byteArray0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<Object> class0 = Object.class;
      byte[] byteArray0 = SerializeHelper.serialize(class0);
      Class class1 = (Class)SerializeHelper.deserialize(byteArray0, class0);
      assertFalse(class1.isArray());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<Object> class0 = Object.class;
      byte[] byteArray0 = new byte[3];
      Object object0 = SerializeHelper.deserialize(byteArray0, class0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = SerializeHelper.deserialize((byte[]) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<Object> class0 = Object.class;
      byte[] byteArray0 = SerializeHelper.serialize(class0);
      Class class1 = (Class)SerializeHelper.deserialize(byteArray0);
      assertFalse(class1.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = SerializeHelper.isEmpty(byteArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      boolean boolean0 = SerializeHelper.isEmpty(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = SerializeHelper.isEmpty((byte[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Class<Object> class0 = Object.class;
      Object object0 = SerializeHelper.deserialize(byteArray0, class0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SerializeHelper serializeHelper0 = new SerializeHelper();
      byte[] byteArray0 = SerializeHelper.serialize(serializeHelper0);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = SerializeHelper.serialize((Object) null);
      assertNull(byteArray0);
  }
}
