/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 09:25:14 GMT 2022
 */

package io.github.rcarlosdasilva.kits.convert.collect.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.rcarlosdasilva.kits.convert.collect.CollectionInternalConverter;
import io.github.rcarlosdasilva.kits.convert.collect.impl.Map2ListConverter;
import java.util.HashMap;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Map2ListConverter_ESTest extends Map2ListConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Map2ListConverter<Object, LinkedList<Object>, Object> map2ListConverter0 = null;
      try {
        map2ListConverter0 = new Map2ListConverter<Object, LinkedList<Object>, Object>((CollectionInternalConverter<Object, LinkedList<Object>, Object>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.rcarlosdasilva.kits.convert.collect.AbstractCollectionConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CollectionInternalConverter<HashMap<Object, Object>, Object, LinkedList<Object>> collectionInternalConverter0 = (CollectionInternalConverter<HashMap<Object, Object>, Object, LinkedList<Object>>) mock(CollectionInternalConverter.class, new ViolatedAssumptionAnswer());
      Map2ListConverter<HashMap<Object, Object>, Object, LinkedList<Object>> map2ListConverter0 = new Map2ListConverter<HashMap<Object, Object>, Object, LinkedList<Object>>(collectionInternalConverter0);
      // Undeclared exception!
      try { 
        map2ListConverter0.collectionInstance();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Lists
         //
         verifyException("io.github.rcarlosdasilva.kits.convert.collect.impl.Map2ListConverter", e);
      }
  }
}
