/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 13:54:13 GMT 2022
 */

package org.holmes.evaluator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.holmes.Joint;
import org.holmes.Validator;
import org.holmes.evaluator.ObjectEvaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ObjectEvaluator_ESTest extends ObjectEvaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(1294);
      ObjectEvaluator<Integer> objectEvaluator0 = new ObjectEvaluator<Integer>(integer0);
      Validator<Integer> validator0 = (Validator<Integer>) mock(Validator.class, new ViolatedAssumptionAnswer());
      Joint joint0 = objectEvaluator0.isValidBy(validator0);
      assertNull(joint0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      ObjectEvaluator<Object> objectEvaluator0 = new ObjectEvaluator<Object>(object0);
      Joint joint0 = objectEvaluator0.isNull();
      assertNull(joint0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      ObjectEvaluator<Object> objectEvaluator0 = new ObjectEvaluator<Object>(object0);
      Joint joint0 = objectEvaluator0.isNotNull();
      assertNull(joint0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      ObjectEvaluator<Object> objectEvaluator0 = new ObjectEvaluator<Object>(object0);
      Joint joint0 = objectEvaluator0.isEqualTo(object0);
      assertNull(joint0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      ObjectEvaluator<Object> objectEvaluator0 = new ObjectEvaluator<Object>(object0);
      Joint joint0 = objectEvaluator0.isNotEqualTo(object0);
      assertNull(joint0);
  }
}
