/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 13:58:30 GMT 2022
 */

package org.holmes.evaluator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.LinkedHashSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.holmes.Joint;
import org.holmes.evaluator.AbstractEvaluator;
import org.holmes.evaluator.CollectionEvaluator;
import org.holmes.evaluator.Evaluation;
import org.holmes.evaluator.NumberEvaluator;
import org.holmes.evaluator.ObjectEvaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractEvaluator_ESTest extends AbstractEvaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(1);
      ObjectEvaluator<Integer> objectEvaluator0 = new ObjectEvaluator<Integer>(integer0);
      objectEvaluator0.setJoint((Joint) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      CollectionEvaluator<Object> collectionEvaluator0 = new CollectionEvaluator<Object>(linkedHashSet0);
      NumberEvaluator numberEvaluator0 = collectionEvaluator0.size();
      Evaluation<Number> evaluation0 = (Evaluation<Number>) mock(Evaluation.class, new ViolatedAssumptionAnswer());
      AbstractEvaluator<Number> abstractEvaluator0 = numberEvaluator0.setEvaluation(evaluation0);
      assertFalse(abstractEvaluator0.evaluate());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ObjectEvaluator<Integer> objectEvaluator0 = new ObjectEvaluator<Integer>(integer0);
      Joint joint0 = objectEvaluator0.getJoint();
      assertNull(joint0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ObjectEvaluator<Integer> objectEvaluator0 = new ObjectEvaluator<Integer>(integer0);
      objectEvaluator0.isNotNull();
      boolean boolean0 = objectEvaluator0.evaluate();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ObjectEvaluator<Integer> objectEvaluator0 = new ObjectEvaluator<Integer>((Integer) null);
      boolean boolean0 = objectEvaluator0.evaluate();
      assertFalse(boolean0);
  }
}
