/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 13:57:09 GMT 2022
 */

package org.holmes.evaluator;

import org.junit.Test;
import static org.junit.Assert.*;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.holmes.Joint;
import org.holmes.evaluator.DateEvaluator;
import org.holmes.evaluator.NumberEvaluator;
import org.holmes.evaluator.support.Diff;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DateEvaluator_ESTest extends DateEvaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      DateEvaluator dateEvaluator0 = new DateEvaluator(mockDate0);
      MockDate mockDate1 = new MockDate();
      Joint joint0 = dateEvaluator0.belongsToOpenInterval(mockDate0, mockDate1);
      assertNull(joint0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1077, 1077, 1077, 561, 0);
      Instant instant0 = MockInstant.ofEpochMilli(561);
      Date date0 = Date.from(instant0);
      DateEvaluator dateEvaluator0 = new DateEvaluator(mockDate0);
      Joint joint0 = dateEvaluator0.belongsToRightOpenInterval(date0, mockDate0);
      assertNull(joint0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      DateEvaluator dateEvaluator0 = new DateEvaluator(mockDate0);
      Joint joint0 = dateEvaluator0.belongsToLeftOpenInterval(mockDate0, (Date) null);
      assertNull(joint0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      DateEvaluator dateEvaluator0 = new DateEvaluator(mockDate0);
      MockDate mockDate1 = new MockDate();
      Joint joint0 = dateEvaluator0.belongsToInterval(mockDate0, mockDate1);
      assertNull(joint0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      DateEvaluator dateEvaluator0 = new DateEvaluator(mockDate0);
      NumberEvaluator numberEvaluator0 = dateEvaluator0.applying((Diff) null);
      assertNotNull(numberEvaluator0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1077, 1077, 1077, 561, 0);
      DateEvaluator dateEvaluator0 = new DateEvaluator(mockDate0);
      Joint joint0 = dateEvaluator0.isFuture();
      assertNull(joint0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      DateEvaluator dateEvaluator0 = new DateEvaluator(mockDate0);
      Joint joint0 = dateEvaluator0.isPast();
      assertNull(joint0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1077, 1077, 1077, 561, 0);
      DateEvaluator dateEvaluator0 = new DateEvaluator(mockDate0);
      Joint joint0 = dateEvaluator0.isAfterThan(mockDate0);
      assertNull(joint0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DateEvaluator dateEvaluator0 = new DateEvaluator((Date) null);
      Joint joint0 = dateEvaluator0.isAfterThanOrEqualTo((Date) null);
      assertNull(joint0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      DateEvaluator dateEvaluator0 = new DateEvaluator(mockDate0);
      Joint joint0 = dateEvaluator0.isBeforeThan(mockDate0);
      assertNull(joint0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      DateEvaluator dateEvaluator0 = new DateEvaluator(mockDate0);
      Joint joint0 = dateEvaluator0.isBeforeThanOrEqualTo(mockDate0);
      assertNull(joint0);
  }
}
