/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 14:00:16 GMT 2022
 */

package org.holmes.statement;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.holmes.Evaluator;
import org.holmes.evaluator.ObjectEvaluator;
import org.holmes.statement.SimpleStatement;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleStatement_ESTest extends SimpleStatement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      ObjectEvaluator<Object> objectEvaluator0 = new ObjectEvaluator<Object>(object0);
      objectEvaluator0.isEqualTo(object0);
      SimpleStatement simpleStatement0 = new SimpleStatement(objectEvaluator0);
      boolean boolean0 = simpleStatement0.evaluate();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpleStatement simpleStatement0 = new SimpleStatement((Evaluator<?>) null);
      // Undeclared exception!
      try { 
        simpleStatement0.evaluate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.holmes.statement.SimpleStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      ObjectEvaluator<Object> objectEvaluator0 = new ObjectEvaluator<Object>(object0);
      SimpleStatement simpleStatement0 = new SimpleStatement(objectEvaluator0);
      boolean boolean0 = simpleStatement0.evaluate();
      assertFalse(boolean0);
  }
}
