/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 13:50:32 GMT 2022
 */

package org.holmes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.Date;
import java.util.MissingFormatArgumentException;
import java.util.UnknownFormatConversionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.holmes.HolmesEngine;
import org.holmes.MessageResolver;
import org.holmes.OperationMode;
import org.holmes.ResultCollector;
import org.holmes.ValidationResult;
import org.holmes.collector.EagerResultCollector;
import org.holmes.evaluator.BooleanEvaluator;
import org.holmes.evaluator.CollectionEvaluator;
import org.holmes.evaluator.NumberEvaluator;
import org.holmes.evaluator.ObjectEvaluator;
import org.holmes.evaluator.StringEvaluator;
import org.holmes.resolver.StringFormatterMessageResolver;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HolmesEngine_ESTest extends HolmesEngine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OperationMode operationMode0 = OperationMode.EAGER;
      HolmesEngine holmesEngine0 = HolmesEngine.init(operationMode0);
      Boolean boolean0 = Boolean.FALSE;
      BooleanEvaluator booleanEvaluator0 = holmesEngine0.ensureThat(boolean0);
      booleanEvaluator0.isEqualTo(boolean0);
      ValidationResult validationResult0 = holmesEngine0.run();
      assertFalse(validationResult0.hasViolations());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OperationMode operationMode0 = OperationMode.SILENT;
      ResultCollector resultCollector0 = operationMode0.getResultCollector();
      HolmesEngine holmesEngine0 = HolmesEngine.init(resultCollector0);
      holmesEngine0.withDefaultDescriptor("f^");
      String string0 = holmesEngine0.getDefaultViolationDescriptor();
      assertEquals("f^", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OperationMode operationMode0 = OperationMode.EAGER;
      HolmesEngine holmesEngine0 = HolmesEngine.init(operationMode0);
      HolmesEngine holmesEngine1 = holmesEngine0.withDefaultDescriptor("");
      String string0 = holmesEngine1.getDefaultViolationDescriptor();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HolmesEngine holmesEngine0 = HolmesEngine.init((ResultCollector) null);
      ResultCollector resultCollector0 = holmesEngine0.getCollector();
      assertNull(resultCollector0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HolmesEngine holmesEngine0 = HolmesEngine.init();
      StringFormatterMessageResolver stringFormatterMessageResolver0 = new StringFormatterMessageResolver();
      holmesEngine0.withMessageResolver(stringFormatterMessageResolver0);
      HolmesEngine holmesEngine1 = holmesEngine0.withDefaultDescriptor(";%2i4&Qf8E$");
      Boolean boolean0 = Boolean.valueOf(";%2i4&Qf8E$");
      holmesEngine1.ensureThat(boolean0);
      // Undeclared exception!
      try { 
        holmesEngine1.run();
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'i'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EagerResultCollector eagerResultCollector0 = new EagerResultCollector();
      HolmesEngine holmesEngine0 = HolmesEngine.init((ResultCollector) eagerResultCollector0);
      StringFormatterMessageResolver stringFormatterMessageResolver0 = new StringFormatterMessageResolver();
      HolmesEngine holmesEngine1 = holmesEngine0.withMessageResolver(stringFormatterMessageResolver0);
      HolmesEngine holmesEngine2 = holmesEngine1.withDefaultDescriptor("*(1c5!\"(xEJ%sm");
      Boolean boolean0 = Boolean.valueOf("aw`1K`");
      holmesEngine2.ensureThat(boolean0);
      // Undeclared exception!
      try { 
        holmesEngine0.run();
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%s'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HolmesEngine holmesEngine0 = HolmesEngine.init((ResultCollector) null);
      // Undeclared exception!
      try { 
        holmesEngine0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.holmes.HolmesEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        HolmesEngine.init((OperationMode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.holmes.HolmesEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OperationMode operationMode0 = OperationMode.SILENT;
      HolmesEngine holmesEngine0 = HolmesEngine.init(operationMode0);
      HolmesEngine holmesEngine1 = holmesEngine0.withDefaultDescriptor("rxne|SH# {");
      MockDate mockDate0 = new MockDate((-1), (-1), (-1));
      holmesEngine1.ensureThat((Date) mockDate0);
      holmesEngine1.run();
      ValidationResult validationResult0 = holmesEngine0.run();
      assertTrue(validationResult0.hasViolations());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EagerResultCollector eagerResultCollector0 = new EagerResultCollector();
      HolmesEngine holmesEngine0 = HolmesEngine.init((ResultCollector) eagerResultCollector0);
      Boolean boolean0 = Boolean.valueOf("aw`1K`");
      holmesEngine0.ensureThat(boolean0);
      try { 
        holmesEngine0.run();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.util.LinkedHashSet@0000000008
         //
         verifyException("org.holmes.collector.EagerResultCollector", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OperationMode operationMode0 = OperationMode.GREEDY;
      ResultCollector resultCollector0 = operationMode0.getResultCollector();
      HolmesEngine holmesEngine0 = HolmesEngine.init(resultCollector0);
      ResultCollector resultCollector1 = holmesEngine0.getCollector();
      assertSame(resultCollector0, resultCollector1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EagerResultCollector eagerResultCollector0 = new EagerResultCollector();
      HolmesEngine holmesEngine0 = HolmesEngine.init((ResultCollector) eagerResultCollector0);
      StringEvaluator stringEvaluator0 = holmesEngine0.ensureThat("EE8NSL(#eWBRuQbUD");
      assertNotNull(stringEvaluator0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OperationMode operationMode0 = OperationMode.EAGER;
      HolmesEngine holmesEngine0 = HolmesEngine.init(operationMode0);
      String string0 = holmesEngine0.getDefaultViolationDescriptor();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HolmesEngine holmesEngine0 = HolmesEngine.init();
      NumberEvaluator numberEvaluator0 = holmesEngine0.ensureThat((Number) null);
      assertNotNull(numberEvaluator0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OperationMode operationMode0 = OperationMode.SILENT;
      HolmesEngine holmesEngine0 = HolmesEngine.init(operationMode0);
      CollectionEvaluator<CollectionEvaluator<BooleanEvaluator>> collectionEvaluator0 = holmesEngine0.ensureThat((Collection<CollectionEvaluator<BooleanEvaluator>>) null);
      assertNotNull(collectionEvaluator0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HolmesEngine holmesEngine0 = HolmesEngine.init();
      HolmesEngine holmesEngine1 = holmesEngine0.withMessageResolver((MessageResolver) null);
      MessageResolver messageResolver0 = holmesEngine1.getMessageResolver();
      assertNull(messageResolver0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HolmesEngine holmesEngine0 = HolmesEngine.init();
      MessageResolver messageResolver0 = holmesEngine0.getMessageResolver();
      assertNotNull(messageResolver0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OperationMode operationMode0 = OperationMode.SILENT;
      HolmesEngine holmesEngine0 = HolmesEngine.init(operationMode0);
      Object object0 = new Object();
      ObjectEvaluator<Object> objectEvaluator0 = holmesEngine0.ensureThat(object0);
      assertNotNull(objectEvaluator0);
  }
}
