/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 13:49:02 GMT 2022
 */

package org.holmes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.FormatFlagsConversionMismatchException;
import java.util.IllegalFormatConversionException;
import java.util.IllegalFormatFlagsException;
import java.util.IllegalFormatWidthException;
import java.util.MissingFormatArgumentException;
import java.util.MissingFormatWidthException;
import java.util.Set;
import java.util.UnknownFormatConversionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.holmes.MessageResolver;
import org.holmes.ValidationResult;
import org.holmes.resolver.SimpleMessageResolver;
import org.holmes.resolver.StringFormatterMessageResolver;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ValidationResult_ESTest extends ValidationResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringFormatterMessageResolver stringFormatterMessageResolver0 = new StringFormatterMessageResolver();
      ValidationResult validationResult0 = ValidationResult.init(stringFormatterMessageResolver0);
      // Undeclared exception!
      try { 
        validationResult0.addViolationDescriptor("p95{YYsAzM~T1HzF%", (Object[]) null);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '%'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringFormatterMessageResolver stringFormatterMessageResolver0 = new StringFormatterMessageResolver();
      ValidationResult validationResult0 = ValidationResult.init(stringFormatterMessageResolver0);
      // Undeclared exception!
      try { 
        validationResult0.addViolationDescriptor("ym|LNwEk%-<H;A0", (Object[]) null);
        fail("Expecting exception: MissingFormatWidthException");
      
      } catch(MissingFormatWidthException e) {
         //
         // %-<H
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringFormatterMessageResolver stringFormatterMessageResolver0 = new StringFormatterMessageResolver();
      ValidationResult validationResult0 = ValidationResult.init(stringFormatterMessageResolver0);
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        validationResult0.addViolationDescriptor("%E:kb`']z)", objectArray0);
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%E'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringFormatterMessageResolver stringFormatterMessageResolver0 = new StringFormatterMessageResolver();
      ValidationResult validationResult0 = ValidationResult.init(stringFormatterMessageResolver0);
      // Undeclared exception!
      try { 
        validationResult0.addViolationDescriptor("I/%9nf:'tH", (Object[]) null);
        fail("Expecting exception: IllegalFormatWidthException");
      
      } catch(IllegalFormatWidthException e) {
         //
         // 9
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringFormatterMessageResolver stringFormatterMessageResolver0 = new StringFormatterMessageResolver();
      ValidationResult validationResult0 = ValidationResult.init(stringFormatterMessageResolver0);
      // Undeclared exception!
      try { 
        validationResult0.addViolationDescriptor("9}T}8`-bT!%0n_SA", (Object[]) null);
        fail("Expecting exception: IllegalFormatFlagsException");
      
      } catch(IllegalFormatFlagsException e) {
         //
         // Flags = '0'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringFormatterMessageResolver stringFormatterMessageResolver0 = new StringFormatterMessageResolver();
      Object[] objectArray0 = new Object[1];
      ValidationResult validationResult0 = ValidationResult.init(stringFormatterMessageResolver0);
      // Undeclared exception!
      try { 
        validationResult0.addViolationDescriptor(";2%c!8Pj%+bHg=i,G9[", objectArray0);
        fail("Expecting exception: FormatFlagsConversionMismatchException");
      
      } catch(FormatFlagsConversionMismatchException e) {
         //
         // Conversion = b, Flags = +
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ValidationResult validationResult0 = ValidationResult.init((MessageResolver) null);
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        validationResult0.addViolationDescriptor("org.holmes.ValidationResult", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.holmes.ValidationResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleMessageResolver simpleMessageResolver0 = new SimpleMessageResolver();
      ValidationResult validationResult0 = ValidationResult.init(simpleMessageResolver0);
      boolean boolean0 = validationResult0.hasViolations();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleMessageResolver simpleMessageResolver0 = new SimpleMessageResolver();
      ValidationResult validationResult0 = ValidationResult.init(simpleMessageResolver0);
      assertFalse(validationResult0.hasViolations());
      
      Object[] objectArray0 = new Object[1];
      validationResult0.addViolationDescriptor("", objectArray0);
      boolean boolean0 = validationResult0.hasViolations();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleMessageResolver simpleMessageResolver0 = new SimpleMessageResolver();
      ValidationResult validationResult0 = ValidationResult.init(simpleMessageResolver0);
      Object[] objectArray0 = new Object[1];
      validationResult0.addViolationDescriptor((String) null, objectArray0);
      assertFalse(validationResult0.hasViolations());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleMessageResolver simpleMessageResolver0 = new SimpleMessageResolver();
      ValidationResult validationResult0 = ValidationResult.init(simpleMessageResolver0);
      String string0 = validationResult0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleMessageResolver simpleMessageResolver0 = new SimpleMessageResolver();
      ValidationResult validationResult0 = ValidationResult.init(simpleMessageResolver0);
      Set<String> set0 = validationResult0.getViolationsDescriptors();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringFormatterMessageResolver stringFormatterMessageResolver0 = new StringFormatterMessageResolver();
      ValidationResult validationResult0 = ValidationResult.init(stringFormatterMessageResolver0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) stringFormatterMessageResolver0;
      // Undeclared exception!
      try { 
        validationResult0.addViolationDescriptor("m)`iJ4F{=%C?M}RQ", objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // c != org.holmes.resolver.StringFormatterMessageResolver
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }
}
