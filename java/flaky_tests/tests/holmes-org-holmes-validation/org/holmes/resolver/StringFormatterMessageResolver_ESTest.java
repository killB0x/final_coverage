/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 13:52:40 GMT 2022
 */

package org.holmes.resolver;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.UnknownFormatConversionException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.holmes.resolver.StringFormatterMessageResolver;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringFormatterMessageResolver_ESTest extends StringFormatterMessageResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringFormatterMessageResolver stringFormatterMessageResolver0 = new StringFormatterMessageResolver();
      Object[] objectArray0 = new Object[8];
      String string0 = stringFormatterMessageResolver0.resolveMessage("", objectArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringFormatterMessageResolver stringFormatterMessageResolver0 = new StringFormatterMessageResolver();
      Object[] objectArray0 = new Object[9];
      // Undeclared exception!
      try { 
        stringFormatterMessageResolver0.resolveMessage("6U%p?csYPFQUM-", objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = 'p'
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringFormatterMessageResolver stringFormatterMessageResolver0 = new StringFormatterMessageResolver();
      Object[] objectArray0 = new Object[3];
      String string0 = stringFormatterMessageResolver0.resolveMessage("OR0C&", objectArray0);
      assertEquals("OR0C&", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringFormatterMessageResolver stringFormatterMessageResolver0 = new StringFormatterMessageResolver();
      Object[] objectArray0 = new Object[3];
      String string0 = stringFormatterMessageResolver0.resolveMessage((String) null, objectArray0);
      assertNull(string0);
  }
}
