/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:27:46 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.MapiUserMessage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MapiUserMessage_ESTest extends MapiUserMessage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      Integer integer0 = new Integer(0);
      mapiUserMessage0.umsId(integer0);
      Integer integer1 = mapiUserMessage0.getUmsId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      Integer integer0 = new Integer(924);
      MapiUserMessage mapiUserMessage1 = mapiUserMessage0.umsId(integer0);
      Integer integer1 = mapiUserMessage1.getUmsId();
      assertEquals(924, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      Integer integer0 = new Integer((-2616));
      mapiUserMessage0.umsId(integer0);
      Integer integer1 = mapiUserMessage0.getUmsId();
      assertEquals((-2616), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      MapiUserMessage mapiUserMessage1 = mapiUserMessage0.contactEmail("contactEmail");
      String string0 = mapiUserMessage1.getContactEmail();
      assertEquals("contactEmail", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      mapiUserMessage0.setContactEmail("");
      String string0 = mapiUserMessage0.getContactEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      MapiUserMessage mapiUserMessage1 = new MapiUserMessage();
      assertTrue(mapiUserMessage1.equals((Object)mapiUserMessage0));
      
      mapiUserMessage0.contactEmail("contactEmail");
      boolean boolean0 = mapiUserMessage1.equals(mapiUserMessage0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      MapiUserMessage mapiUserMessage1 = new MapiUserMessage();
      Integer integer0 = new Integer(1);
      MapiUserMessage mapiUserMessage2 = mapiUserMessage1.umsId(integer0);
      boolean boolean0 = mapiUserMessage0.equals(mapiUserMessage2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      Object object0 = new Object();
      boolean boolean0 = mapiUserMessage0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      boolean boolean0 = mapiUserMessage0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      boolean boolean0 = mapiUserMessage0.equals(mapiUserMessage0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      MapiUserMessage mapiUserMessage1 = new MapiUserMessage();
      boolean boolean0 = mapiUserMessage0.equals(mapiUserMessage1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      Integer integer0 = new Integer(1);
      mapiUserMessage0.setUmsId(integer0);
      assertNull(mapiUserMessage0.getContactEmail());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      mapiUserMessage0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      String string0 = mapiUserMessage0.getContactEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      mapiUserMessage0.contactEmail("contactEmail");
      mapiUserMessage0.toString();
      assertEquals("contactEmail", mapiUserMessage0.getContactEmail());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MapiUserMessage mapiUserMessage0 = new MapiUserMessage();
      Integer integer0 = mapiUserMessage0.getUmsId();
      assertNull(integer0);
  }
}
