/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:10:36 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.IThrottlingConfiguration;
import com.criteo.marketing.model.ThrottlePolicy;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IThrottlingConfiguration_ESTest extends IThrottlingConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IThrottlingConfiguration iThrottlingConfiguration0 = new IThrottlingConfiguration();
      IThrottlingConfiguration iThrottlingConfiguration1 = new IThrottlingConfiguration();
      boolean boolean0 = iThrottlingConfiguration1.equals(iThrottlingConfiguration0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IThrottlingConfiguration iThrottlingConfiguration0 = new IThrottlingConfiguration();
      boolean boolean0 = iThrottlingConfiguration0.equals("class IThrottlingConfiguration {\n    defaultThrottlePolicies: null\n    assembly: null\n    enabled: null\n}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IThrottlingConfiguration iThrottlingConfiguration0 = new IThrottlingConfiguration();
      boolean boolean0 = iThrottlingConfiguration0.equals(iThrottlingConfiguration0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IThrottlingConfiguration iThrottlingConfiguration0 = new IThrottlingConfiguration();
      boolean boolean0 = iThrottlingConfiguration0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IThrottlingConfiguration iThrottlingConfiguration0 = new IThrottlingConfiguration();
      Boolean boolean0 = iThrottlingConfiguration0.getEnabled();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IThrottlingConfiguration iThrottlingConfiguration0 = new IThrottlingConfiguration();
      String string0 = iThrottlingConfiguration0.toString();
      assertEquals("class IThrottlingConfiguration {\n    defaultThrottlePolicies: null\n    assembly: null\n    enabled: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IThrottlingConfiguration iThrottlingConfiguration0 = new IThrottlingConfiguration();
      List<ThrottlePolicy> list0 = iThrottlingConfiguration0.getDefaultThrottlePolicies();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IThrottlingConfiguration iThrottlingConfiguration0 = new IThrottlingConfiguration();
      iThrottlingConfiguration0.hashCode();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      IThrottlingConfiguration iThrottlingConfiguration0 = new IThrottlingConfiguration();
      Object object0 = iThrottlingConfiguration0.getAssembly();
      assertNull(object0);
  }
}
