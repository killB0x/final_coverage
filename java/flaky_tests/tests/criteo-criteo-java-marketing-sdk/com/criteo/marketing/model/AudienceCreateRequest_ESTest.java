/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:21:05 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.AudienceCreateRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AudienceCreateRequest_ESTest extends AudienceCreateRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      audienceCreateRequest0.name("advertiserId");
      String string0 = audienceCreateRequest0.getName();
      assertEquals("advertiserId", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      AudienceCreateRequest audienceCreateRequest1 = audienceCreateRequest0.description("advertiserId");
      String string0 = audienceCreateRequest1.getDescription();
      assertEquals("advertiserId", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      audienceCreateRequest0.description("");
      String string0 = audienceCreateRequest0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      Integer integer0 = new Integer(0);
      AudienceCreateRequest audienceCreateRequest1 = audienceCreateRequest0.advertiserId(integer0);
      Integer integer1 = audienceCreateRequest1.getAdvertiserId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      Integer integer0 = new Integer(2);
      audienceCreateRequest0.advertiserId(integer0);
      Integer integer1 = audienceCreateRequest0.getAdvertiserId();
      assertEquals(2, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      Integer integer0 = new Integer((-4550));
      audienceCreateRequest0.advertiserId(integer0);
      Integer integer1 = audienceCreateRequest0.getAdvertiserId();
      assertEquals((-4550), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      audienceCreateRequest0.description("name");
      audienceCreateRequest0.toString();
      assertEquals("name", audienceCreateRequest0.getDescription());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      AudienceCreateRequest audienceCreateRequest1 = audienceCreateRequest0.description("name");
      AudienceCreateRequest audienceCreateRequest2 = new AudienceCreateRequest();
      boolean boolean0 = audienceCreateRequest1.equals(audienceCreateRequest2);
      assertEquals("name", audienceCreateRequest1.getDescription());
      assertFalse(boolean0);
      assertFalse(audienceCreateRequest2.equals((Object)audienceCreateRequest1));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      AudienceCreateRequest audienceCreateRequest1 = new AudienceCreateRequest();
      assertTrue(audienceCreateRequest1.equals((Object)audienceCreateRequest0));
      
      AudienceCreateRequest audienceCreateRequest2 = audienceCreateRequest0.name("name");
      boolean boolean0 = audienceCreateRequest2.equals(audienceCreateRequest1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      AudienceCreateRequest audienceCreateRequest1 = new AudienceCreateRequest();
      Integer integer0 = new Integer(1);
      audienceCreateRequest1.setAdvertiserId(integer0);
      boolean boolean0 = audienceCreateRequest0.equals(audienceCreateRequest1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      Object object0 = new Object();
      boolean boolean0 = audienceCreateRequest0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      boolean boolean0 = audienceCreateRequest0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      boolean boolean0 = audienceCreateRequest0.equals(audienceCreateRequest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      AudienceCreateRequest audienceCreateRequest1 = new AudienceCreateRequest();
      boolean boolean0 = audienceCreateRequest0.equals(audienceCreateRequest1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      audienceCreateRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      String string0 = audienceCreateRequest0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      Integer integer0 = audienceCreateRequest0.getAdvertiserId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      audienceCreateRequest0.setDescription("advertiserId");
      assertEquals("advertiserId", audienceCreateRequest0.getDescription());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      audienceCreateRequest0.setName("");
      String string0 = audienceCreateRequest0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AudienceCreateRequest audienceCreateRequest0 = new AudienceCreateRequest();
      String string0 = audienceCreateRequest0.getDescription();
      assertNull(string0);
  }
}
