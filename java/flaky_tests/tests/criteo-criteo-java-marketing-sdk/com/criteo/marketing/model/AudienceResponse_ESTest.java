/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:32:50 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.AudienceResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AudienceResponse_ESTest extends AudienceResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Long long0 = new Long(0L);
      audienceResponse0.updated(long0);
      Long long1 = audienceResponse0.getUpdated();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Long long0 = Long.valueOf((long) 1);
      audienceResponse0.updated(long0);
      Long long1 = audienceResponse0.getUpdated();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Long long0 = new Long((-1034L));
      audienceResponse0.setUpdated(long0);
      Long long1 = audienceResponse0.getUpdated();
      assertEquals((-1034L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer(0);
      audienceResponse0.nbMatchesEmail(integer0);
      Integer integer1 = audienceResponse0.getNbMatchesEmail();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer(5);
      audienceResponse0.setNbMatchesEmail(integer0);
      Integer integer1 = audienceResponse0.getNbMatchesEmail();
      assertEquals(5, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer((-5143));
      audienceResponse0.nbMatchesEmail(integer0);
      Integer integer1 = audienceResponse0.getNbMatchesEmail();
      assertEquals((-5143), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer(0);
      audienceResponse0.nbLinesEmail(integer0);
      Integer integer1 = audienceResponse0.getNbLinesEmail();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer(1079);
      AudienceResponse audienceResponse1 = audienceResponse0.nbLinesEmail(integer0);
      Integer integer1 = audienceResponse1.getNbLinesEmail();
      assertEquals(1079, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer((-1798));
      audienceResponse0.nbLinesEmail(integer0);
      Integer integer1 = audienceResponse0.getNbLinesEmail();
      assertEquals((-1798), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer(0);
      audienceResponse0.setNbLines(integer0);
      Integer integer1 = audienceResponse0.getNbLines();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer(5);
      AudienceResponse audienceResponse1 = audienceResponse0.nbLines(integer0);
      Integer integer1 = audienceResponse1.getNbLines();
      assertEquals(5, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer((-115));
      audienceResponse0.setNbLines(integer0);
      Integer integer1 = audienceResponse0.getNbLines();
      assertEquals((-115), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      AudienceResponse audienceResponse1 = audienceResponse0.name("    name: ");
      String string0 = audienceResponse1.getName();
      assertEquals("    name: ", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer(0);
      audienceResponse0.id(integer0);
      Integer integer1 = audienceResponse0.getId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer(1793);
      audienceResponse0.id(integer0);
      Integer integer1 = audienceResponse0.getId();
      assertEquals(1793, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer((-1798));
      audienceResponse0.id(integer0);
      Integer integer1 = audienceResponse0.getId();
      assertEquals((-1798), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      audienceResponse0.setDescription("/#R!;d@*dj8");
      String string0 = audienceResponse0.getDescription();
      assertEquals("/#R!;d@*dj8", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      audienceResponse0.description("");
      String string0 = audienceResponse0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Long long0 = new Long(0);
      audienceResponse0.created(long0);
      Long long1 = audienceResponse0.getCreated();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Long long0 = Long.valueOf((long) 1);
      AudienceResponse audienceResponse1 = audienceResponse0.created(long0);
      Long long1 = audienceResponse1.getCreated();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer(0);
      audienceResponse0.advertiserId(integer0);
      Integer integer1 = audienceResponse0.getAdvertiserId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer(2);
      audienceResponse0.advertiserId(integer0);
      Integer integer1 = audienceResponse0.getAdvertiserId();
      assertEquals(2, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer((-1798));
      AudienceResponse audienceResponse1 = audienceResponse0.advertiserId(integer0);
      Integer integer1 = audienceResponse1.getAdvertiserId();
      assertEquals((-1798), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = Integer.valueOf(0);
      audienceResponse0.nbMatchesEmail(integer0);
      AudienceResponse audienceResponse1 = new AudienceResponse();
      Long long0 = new Long((-1L));
      AudienceResponse audienceResponse2 = audienceResponse1.created(long0);
      audienceResponse0.setCreated(long0);
      boolean boolean0 = audienceResponse0.equals(audienceResponse2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      AudienceResponse audienceResponse1 = new AudienceResponse();
      assertTrue(audienceResponse1.equals((Object)audienceResponse0));
      
      Integer integer0 = new Integer(786);
      AudienceResponse audienceResponse2 = audienceResponse1.nbLinesEmail(integer0);
      boolean boolean0 = audienceResponse0.equals(audienceResponse2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      AudienceResponse audienceResponse1 = new AudienceResponse();
      assertTrue(audienceResponse1.equals((Object)audienceResponse0));
      
      Integer integer0 = new Integer(1);
      AudienceResponse audienceResponse2 = audienceResponse1.nbLines(integer0);
      boolean boolean0 = audienceResponse0.equals(audienceResponse2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      audienceResponse0.setDescription("");
      AudienceResponse audienceResponse1 = new AudienceResponse();
      boolean boolean0 = audienceResponse0.equals(audienceResponse1);
      assertFalse(boolean0);
      assertEquals("", audienceResponse0.getDescription());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      AudienceResponse audienceResponse1 = new AudienceResponse();
      assertTrue(audienceResponse1.equals((Object)audienceResponse0));
      
      audienceResponse0.setName("created");
      boolean boolean0 = audienceResponse0.equals(audienceResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer(2269);
      audienceResponse0.setAdvertiserId(integer0);
      AudienceResponse audienceResponse1 = new AudienceResponse();
      boolean boolean0 = audienceResponse0.equals(audienceResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      AudienceResponse audienceResponse1 = new AudienceResponse();
      Integer integer0 = new Integer(1);
      AudienceResponse audienceResponse2 = audienceResponse1.id(integer0);
      boolean boolean0 = audienceResponse0.equals(audienceResponse2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Long long0 = new Long((-1L));
      boolean boolean0 = audienceResponse0.equals(long0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      boolean boolean0 = audienceResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      boolean boolean0 = audienceResponse0.equals(audienceResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      AudienceResponse audienceResponse1 = new AudienceResponse();
      boolean boolean0 = audienceResponse0.equals(audienceResponse1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Long long0 = new Long((-1L));
      audienceResponse0.created(long0);
      Long long1 = audienceResponse0.getCreated();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      audienceResponse0.hashCode();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = audienceResponse0.getId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      String string0 = audienceResponse0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = audienceResponse0.getAdvertiserId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Long long0 = new Long(1418L);
      audienceResponse0.updated(long0);
      AudienceResponse audienceResponse1 = new AudienceResponse();
      boolean boolean0 = audienceResponse0.equals(audienceResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Long long0 = audienceResponse0.getUpdated();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = audienceResponse0.getNbMatchesEmail();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = new Integer(2269);
      audienceResponse0.setNbLinesEmail(integer0);
      String string0 = audienceResponse0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      String string0 = audienceResponse0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Long long0 = new Long((-1L));
      audienceResponse0.setCreated(long0);
      AudienceResponse audienceResponse1 = new AudienceResponse();
      boolean boolean0 = audienceResponse0.equals(audienceResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = audienceResponse0.getNbLinesEmail();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      audienceResponse0.setId((Integer) null);
      assertNull(audienceResponse0.getDescription());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      audienceResponse0.name("");
      String string0 = audienceResponse0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Integer integer0 = audienceResponse0.getNbLines();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      AudienceResponse audienceResponse0 = new AudienceResponse();
      Long long0 = audienceResponse0.getCreated();
      assertNull(long0);
  }
}
