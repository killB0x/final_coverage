/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:55:27 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.ThrottlePolicyRates;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ThrottlePolicyRates_ESTest extends ThrottlePolicyRates_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = new Long(0L);
      throttlePolicyRates0.setSecond(long0);
      Long long1 = throttlePolicyRates0.getSecond();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = new Long(491L);
      throttlePolicyRates0.second(long0);
      Long long1 = throttlePolicyRates0.getSecond();
      assertEquals(491L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = new Long((-1L));
      throttlePolicyRates0.setSecond(long0);
      Long long1 = throttlePolicyRates0.getSecond();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = new Long(0L);
      throttlePolicyRates0.minute(long0);
      Long long1 = throttlePolicyRates0.getMinute();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = new Long(1L);
      throttlePolicyRates0.minute(long0);
      Long long1 = throttlePolicyRates0.getMinute();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = new Long((-1L));
      throttlePolicyRates0.minute(long0);
      Long long1 = throttlePolicyRates0.getMinute();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = new Long(0L);
      throttlePolicyRates0.hour(long0);
      Long long1 = throttlePolicyRates0.getHour();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = new Long(1L);
      throttlePolicyRates0.setHour(long0);
      Long long1 = throttlePolicyRates0.getHour();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = new Long((-671L));
      throttlePolicyRates0.hour(long0);
      Long long1 = throttlePolicyRates0.getHour();
      assertEquals((-671L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = new Long(0L);
      throttlePolicyRates0.setCustom(long0);
      Long long1 = throttlePolicyRates0.getCustom();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = Long.valueOf(2324L);
      throttlePolicyRates0.custom(long0);
      Long long1 = throttlePolicyRates0.getCustom();
      assertEquals(2324L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = new Long((-1699L));
      throttlePolicyRates0.custom(long0);
      Long long1 = throttlePolicyRates0.getCustom();
      assertEquals((-1699L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = new Long(0L);
      ThrottlePolicyRates throttlePolicyRates1 = throttlePolicyRates0.minute(long0);
      String string0 = throttlePolicyRates1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      ThrottlePolicyRates throttlePolicyRates1 = new ThrottlePolicyRates();
      assertTrue(throttlePolicyRates1.equals((Object)throttlePolicyRates0));
      
      Long long0 = new Long(1799L);
      throttlePolicyRates1.custom(long0);
      boolean boolean0 = throttlePolicyRates0.equals(throttlePolicyRates1);
      assertFalse(throttlePolicyRates1.equals((Object)throttlePolicyRates0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      ThrottlePolicyRates throttlePolicyRates1 = new ThrottlePolicyRates();
      assertTrue(throttlePolicyRates1.equals((Object)throttlePolicyRates0));
      
      Long long0 = new Long(1736L);
      throttlePolicyRates0.hour(long0);
      boolean boolean0 = throttlePolicyRates0.equals(throttlePolicyRates1);
      assertFalse(throttlePolicyRates1.equals((Object)throttlePolicyRates0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      ThrottlePolicyRates throttlePolicyRates1 = new ThrottlePolicyRates();
      assertTrue(throttlePolicyRates1.equals((Object)throttlePolicyRates0));
      
      Long long0 = new Long(0L);
      throttlePolicyRates0.minute(long0);
      boolean boolean0 = throttlePolicyRates0.equals(throttlePolicyRates1);
      assertFalse(throttlePolicyRates1.equals((Object)throttlePolicyRates0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      ThrottlePolicyRates throttlePolicyRates1 = new ThrottlePolicyRates();
      Long long0 = new Long(0L);
      throttlePolicyRates1.second(long0);
      boolean boolean0 = throttlePolicyRates0.equals(throttlePolicyRates1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Object object0 = new Object();
      boolean boolean0 = throttlePolicyRates0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      boolean boolean0 = throttlePolicyRates0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      boolean boolean0 = throttlePolicyRates0.equals(throttlePolicyRates0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      ThrottlePolicyRates throttlePolicyRates1 = new ThrottlePolicyRates();
      boolean boolean0 = throttlePolicyRates0.equals(throttlePolicyRates1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = throttlePolicyRates0.getMinute();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      throttlePolicyRates0.setMinute((Long) null);
      assertNull(throttlePolicyRates0.getCustom());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      throttlePolicyRates0.hashCode();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = throttlePolicyRates0.getHour();
      ThrottlePolicyRates throttlePolicyRates1 = throttlePolicyRates0.minute(long0);
      assertNull(throttlePolicyRates1.getCustom());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = throttlePolicyRates0.getCustom();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ThrottlePolicyRates throttlePolicyRates0 = new ThrottlePolicyRates();
      Long long0 = throttlePolicyRates0.getSecond();
      assertNull(long0);
  }
}
