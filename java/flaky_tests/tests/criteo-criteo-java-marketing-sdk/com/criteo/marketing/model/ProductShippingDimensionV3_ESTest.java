/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:44:25 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.ProductShippingDimensionV3;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProductShippingDimensionV3_ESTest extends ProductShippingDimensionV3_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      Double double0 = new Double(0.0);
      productShippingDimensionV3_0.value(double0);
      Double double1 = productShippingDimensionV3_0.getValue();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      Double double0 = new Double(75.74);
      productShippingDimensionV3_0.value(double0);
      Double double1 = productShippingDimensionV3_0.getValue();
      assertEquals(75.74, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      Double double0 = new Double((-1.0));
      productShippingDimensionV3_0.value(double0);
      Double double1 = productShippingDimensionV3_0.getValue();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      ProductShippingDimensionV3 productShippingDimensionV3_1 = productShippingDimensionV3_0.unit("/AuD2XP");
      String string0 = productShippingDimensionV3_1.getUnit();
      assertEquals("/AuD2XP", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      productShippingDimensionV3_0.setUnit("");
      String string0 = productShippingDimensionV3_0.getUnit();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      ProductShippingDimensionV3 productShippingDimensionV3_1 = productShippingDimensionV3_0.unit("nmG2~VrEz5='rv57Z");
      productShippingDimensionV3_1.toString();
      assertEquals("nmG2~VrEz5='rv57Z", productShippingDimensionV3_1.getUnit());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      ProductShippingDimensionV3 productShippingDimensionV3_1 = productShippingDimensionV3_0.unit("nmG2~VrEz5='rv57Z");
      ProductShippingDimensionV3 productShippingDimensionV3_2 = new ProductShippingDimensionV3();
      boolean boolean0 = productShippingDimensionV3_1.equals(productShippingDimensionV3_2);
      assertFalse(boolean0);
      assertEquals("nmG2~VrEz5='rv57Z", productShippingDimensionV3_1.getUnit());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      Double double0 = new Double(0.0);
      ProductShippingDimensionV3 productShippingDimensionV3_1 = new ProductShippingDimensionV3();
      ProductShippingDimensionV3 productShippingDimensionV3_2 = productShippingDimensionV3_1.value(double0);
      boolean boolean0 = productShippingDimensionV3_2.equals(productShippingDimensionV3_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      ProductShippingDimensionV3 productShippingDimensionV3_1 = new ProductShippingDimensionV3();
      boolean boolean0 = productShippingDimensionV3_0.equals(productShippingDimensionV3_1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      boolean boolean0 = productShippingDimensionV3_0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      boolean boolean0 = productShippingDimensionV3_0.equals(productShippingDimensionV3_0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      Object object0 = new Object();
      boolean boolean0 = productShippingDimensionV3_0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      productShippingDimensionV3_0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      Double double0 = new Double((-3624.96692));
      productShippingDimensionV3_0.setValue(double0);
      assertNull(productShippingDimensionV3_0.getUnit());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      String string0 = productShippingDimensionV3_0.getUnit();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ProductShippingDimensionV3 productShippingDimensionV3_0 = new ProductShippingDimensionV3();
      Double double0 = productShippingDimensionV3_0.getValue();
      assertNull(double0);
  }
}
