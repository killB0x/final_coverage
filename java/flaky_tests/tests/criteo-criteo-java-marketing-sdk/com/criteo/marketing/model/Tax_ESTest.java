/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:43:47 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.Tax;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Tax_ESTest extends Tax_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tax tax0 = new Tax();
      Boolean boolean0 = Boolean.FALSE;
      tax0.setTaxShip(boolean0);
      Boolean boolean1 = tax0.getTaxShip();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tax tax0 = new Tax();
      tax0.region("MAE9iqJrtQr9'6iG");
      String string0 = tax0.getRegion();
      assertEquals("MAE9iqJrtQr9'6iG", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tax tax0 = new Tax();
      Double double0 = new Double(0L);
      tax0.setRate(double0);
      Double double1 = tax0.getRate();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tax tax0 = new Tax();
      Double double0 = new Double(4913.47760483);
      Tax tax1 = tax0.rate(double0);
      Double double1 = tax1.getRate();
      assertEquals(4913.47760483, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tax tax0 = new Tax();
      Double double0 = new Double((-1L));
      tax0.setRate(double0);
      Double double1 = tax0.getRate();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Tax tax0 = new Tax();
      tax0.postalCode("    locationId: ");
      String string0 = tax0.getPostalCode();
      assertEquals("    locationId: ", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tax tax0 = new Tax();
      Long long0 = new Long(1104L);
      tax0.locationId(long0);
      Long long1 = tax0.getLocationId();
      assertEquals(1104L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tax tax0 = new Tax();
      Long long0 = new Long((-1L));
      Tax tax1 = tax0.locationId(long0);
      Long long1 = tax1.getLocationId();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tax tax0 = new Tax();
      Tax tax1 = tax0.country("nP8");
      String string0 = tax1.getCountry();
      assertEquals("nP8", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tax tax0 = new Tax();
      tax0.country("");
      String string0 = tax0.getCountry();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tax tax0 = new Tax();
      Boolean boolean0 = Boolean.FALSE;
      tax0.taxShip(boolean0);
      String string0 = tax0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Tax tax0 = new Tax();
      Tax tax1 = new Tax();
      assertTrue(tax1.equals((Object)tax0));
      
      Boolean boolean0 = Boolean.TRUE;
      tax0.setTaxShip(boolean0);
      boolean boolean1 = tax1.equals(tax0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Tax tax0 = new Tax();
      Tax tax1 = new Tax();
      assertTrue(tax1.equals((Object)tax0));
      
      tax0.region("taxShip");
      boolean boolean0 = tax0.equals(tax1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tax tax0 = new Tax();
      Double double0 = new Double((-2890.949));
      tax0.rate(double0);
      Tax tax1 = new Tax();
      boolean boolean0 = tax0.equals(tax1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Tax tax0 = new Tax();
      Tax tax1 = new Tax();
      assertTrue(tax1.equals((Object)tax0));
      
      tax0.setPostalCode("");
      boolean boolean0 = tax1.equals(tax0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tax tax0 = new Tax();
      Tax tax1 = new Tax();
      assertTrue(tax1.equals((Object)tax0));
      
      Long long0 = new Long((-1723L));
      tax1.setLocationId(long0);
      boolean boolean0 = tax0.equals(tax1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tax tax0 = new Tax();
      Tax tax1 = new Tax();
      assertTrue(tax1.equals((Object)tax0));
      
      tax1.country("locationId");
      boolean boolean0 = tax0.equals(tax1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Tax tax0 = new Tax();
      Long long0 = new Long(0L);
      boolean boolean0 = tax0.equals(long0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Tax tax0 = new Tax();
      boolean boolean0 = tax0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Tax tax0 = new Tax();
      boolean boolean0 = tax0.equals(tax0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tax tax0 = new Tax();
      Tax tax1 = new Tax();
      boolean boolean0 = tax1.equals(tax0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Tax tax0 = new Tax();
      Boolean boolean0 = Boolean.TRUE;
      tax0.setTaxShip(boolean0);
      Boolean boolean1 = tax0.getTaxShip();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tax tax0 = new Tax();
      String string0 = tax0.getPostalCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Tax tax0 = new Tax();
      tax0.hashCode();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tax tax0 = new Tax();
      Long long0 = tax0.getLocationId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Tax tax0 = new Tax();
      tax0.setCountry("locationId");
      assertEquals("locationId", tax0.getCountry());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Tax tax0 = new Tax();
      Boolean boolean0 = tax0.getTaxShip();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Tax tax0 = new Tax();
      Double double0 = tax0.getRate();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Tax tax0 = new Tax();
      tax0.setPostalCode("");
      String string0 = tax0.getPostalCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Tax tax0 = new Tax();
      String string0 = tax0.getRegion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Tax tax0 = new Tax();
      Long long0 = new Long(0L);
      tax0.setLocationId(long0);
      Long long1 = tax0.getLocationId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Tax tax0 = new Tax();
      String string0 = tax0.getCountry();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Tax tax0 = new Tax();
      tax0.setRegion("");
      String string0 = tax0.getRegion();
      assertEquals("", string0);
  }
}
