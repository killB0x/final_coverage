/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:54:58 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.AudienceCreateResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AudienceCreateResponse_ESTest extends AudienceCreateResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AudienceCreateResponse audienceCreateResponse0 = new AudienceCreateResponse();
      Integer integer0 = new Integer(0);
      audienceCreateResponse0.setAudienceId(integer0);
      Integer integer1 = audienceCreateResponse0.getAudienceId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AudienceCreateResponse audienceCreateResponse0 = new AudienceCreateResponse();
      Integer integer0 = new Integer(213);
      audienceCreateResponse0.audienceId(integer0);
      Integer integer1 = audienceCreateResponse0.getAudienceId();
      assertEquals(213, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AudienceCreateResponse audienceCreateResponse0 = new AudienceCreateResponse();
      Integer integer0 = new Integer((-670));
      audienceCreateResponse0.setAudienceId(integer0);
      Integer integer1 = audienceCreateResponse0.getAudienceId();
      assertEquals((-670), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AudienceCreateResponse audienceCreateResponse0 = new AudienceCreateResponse();
      AudienceCreateResponse audienceCreateResponse1 = new AudienceCreateResponse();
      boolean boolean0 = audienceCreateResponse0.equals(audienceCreateResponse1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AudienceCreateResponse audienceCreateResponse0 = new AudienceCreateResponse();
      boolean boolean0 = audienceCreateResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AudienceCreateResponse audienceCreateResponse0 = new AudienceCreateResponse();
      boolean boolean0 = audienceCreateResponse0.equals(audienceCreateResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AudienceCreateResponse audienceCreateResponse0 = new AudienceCreateResponse();
      Integer integer0 = new Integer(213);
      boolean boolean0 = audienceCreateResponse0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AudienceCreateResponse audienceCreateResponse0 = new AudienceCreateResponse();
      audienceCreateResponse0.hashCode();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AudienceCreateResponse audienceCreateResponse0 = new AudienceCreateResponse();
      Integer integer0 = new Integer(213);
      AudienceCreateResponse audienceCreateResponse1 = audienceCreateResponse0.audienceId(integer0);
      String string0 = audienceCreateResponse1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AudienceCreateResponse audienceCreateResponse0 = new AudienceCreateResponse();
      String string0 = audienceCreateResponse0.toString();
      assertEquals("class AudienceCreateResponse {\n    audienceId: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AudienceCreateResponse audienceCreateResponse0 = new AudienceCreateResponse();
      Integer integer0 = audienceCreateResponse0.getAudienceId();
      assertNull(integer0);
  }
}
