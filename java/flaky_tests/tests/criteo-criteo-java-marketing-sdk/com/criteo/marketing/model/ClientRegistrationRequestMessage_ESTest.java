/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:04:53 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.ClientRegistrationRequestMessage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClientRegistrationRequestMessage_ESTest extends ClientRegistrationRequestMessage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      clientRegistrationRequestMessage0.setRole("O_t4:0,+,kKt6I}cG](");
      String string0 = clientRegistrationRequestMessage0.getRole();
      assertEquals("O_t4:0,+,kKt6I}cG](", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      clientRegistrationRequestMessage0.role("");
      String string0 = clientRegistrationRequestMessage0.getRole();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      clientRegistrationRequestMessage0.contactEmail("*Hh~MUd (");
      String string0 = clientRegistrationRequestMessage0.getContactEmail();
      assertEquals("*Hh~MUd (", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      Integer integer0 = new Integer(0);
      clientRegistrationRequestMessage0.advertiserId(integer0);
      Integer integer1 = clientRegistrationRequestMessage0.getAdvertiserId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      Integer integer0 = new Integer(3);
      clientRegistrationRequestMessage0.advertiserId(integer0);
      Integer integer1 = clientRegistrationRequestMessage0.getAdvertiserId();
      assertEquals(3, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      clientRegistrationRequestMessage0.contactEmail("*Hh~MUd (");
      clientRegistrationRequestMessage0.toString();
      assertEquals("*Hh~MUd (", clientRegistrationRequestMessage0.getContactEmail());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      clientRegistrationRequestMessage0.contactEmail("*Hh~MUd (");
      ClientRegistrationRequestMessage clientRegistrationRequestMessage1 = new ClientRegistrationRequestMessage();
      boolean boolean0 = clientRegistrationRequestMessage0.equals(clientRegistrationRequestMessage1);
      assertEquals("*Hh~MUd (", clientRegistrationRequestMessage0.getContactEmail());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      ClientRegistrationRequestMessage clientRegistrationRequestMessage1 = new ClientRegistrationRequestMessage();
      Integer integer0 = new Integer(3);
      clientRegistrationRequestMessage1.advertiserId(integer0);
      boolean boolean0 = clientRegistrationRequestMessage0.equals(clientRegistrationRequestMessage1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      ClientRegistrationRequestMessage clientRegistrationRequestMessage1 = new ClientRegistrationRequestMessage();
      boolean boolean0 = clientRegistrationRequestMessage0.equals(clientRegistrationRequestMessage1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      boolean boolean0 = clientRegistrationRequestMessage0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      boolean boolean0 = clientRegistrationRequestMessage0.equals(clientRegistrationRequestMessage0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      Object object0 = new Object();
      boolean boolean0 = clientRegistrationRequestMessage0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      Integer integer0 = new Integer((-2208));
      clientRegistrationRequestMessage0.advertiserId(integer0);
      Integer integer1 = clientRegistrationRequestMessage0.getAdvertiserId();
      assertEquals((-2208), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      clientRegistrationRequestMessage0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      String string0 = clientRegistrationRequestMessage0.getContactEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      clientRegistrationRequestMessage0.role("advertiserId");
      ClientRegistrationRequestMessage clientRegistrationRequestMessage1 = new ClientRegistrationRequestMessage();
      boolean boolean0 = clientRegistrationRequestMessage0.equals(clientRegistrationRequestMessage1);
      assertFalse(boolean0);
      assertFalse(clientRegistrationRequestMessage1.equals((Object)clientRegistrationRequestMessage0));
      assertEquals("advertiserId", clientRegistrationRequestMessage0.getRole());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      clientRegistrationRequestMessage0.setAdvertiserId((Integer) null);
      assertNull(clientRegistrationRequestMessage0.getRole());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      Integer integer0 = clientRegistrationRequestMessage0.getAdvertiserId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      String string0 = clientRegistrationRequestMessage0.getRole();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      clientRegistrationRequestMessage0.setContactEmail("contactEmail");
      assertEquals("contactEmail", clientRegistrationRequestMessage0.getContactEmail());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClientRegistrationRequestMessage clientRegistrationRequestMessage0 = new ClientRegistrationRequestMessage();
      ClientRegistrationRequestMessage clientRegistrationRequestMessage1 = clientRegistrationRequestMessage0.contactEmail("");
      String string0 = clientRegistrationRequestMessage1.getContactEmail();
      assertEquals("", string0);
  }
}
