/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:53:02 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.AdvertiserQuotaMessage;
import java.time.OffsetDateTime;
import java.time.ZoneId;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockOffsetDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AdvertiserQuotaMessage_ESTest extends AdvertiserQuotaMessage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      Integer integer0 = new Integer(0);
      advertiserQuotaMessage0.setQuotaUsed(integer0);
      Integer integer1 = advertiserQuotaMessage0.getQuotaUsed();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      Integer integer0 = new Integer(181);
      AdvertiserQuotaMessage advertiserQuotaMessage1 = advertiserQuotaMessage0.quotaUsed(integer0);
      Integer integer1 = advertiserQuotaMessage1.getQuotaUsed();
      assertEquals(181, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      Integer integer0 = new Integer((-1));
      AdvertiserQuotaMessage advertiserQuotaMessage1 = advertiserQuotaMessage0.quotaUsed(integer0);
      Integer integer1 = advertiserQuotaMessage1.getQuotaUsed();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.now();
      advertiserQuotaMessage0.setQuotaStartDate(offsetDateTime0);
      OffsetDateTime offsetDateTime1 = advertiserQuotaMessage0.getQuotaStartDate();
      assertSame(offsetDateTime1, offsetDateTime0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      Integer integer0 = new Integer(0);
      advertiserQuotaMessage0.quotaLimit(integer0);
      Integer integer1 = advertiserQuotaMessage0.getQuotaLimit();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      Integer integer0 = new Integer(2074);
      AdvertiserQuotaMessage advertiserQuotaMessage1 = advertiserQuotaMessage0.quotaLimit(integer0);
      Integer integer1 = advertiserQuotaMessage1.getQuotaLimit();
      assertEquals(2074, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      Integer integer0 = Integer.getInteger("", (-495));
      advertiserQuotaMessage0.setQuotaLimit(integer0);
      Integer integer1 = advertiserQuotaMessage0.getQuotaLimit();
      assertEquals((-495), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.now();
      advertiserQuotaMessage0.quotaEndDate(offsetDateTime0);
      OffsetDateTime offsetDateTime1 = advertiserQuotaMessage0.getQuotaEndDate();
      assertSame(offsetDateTime1, offsetDateTime0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      Integer integer0 = new Integer(0);
      advertiserQuotaMessage0.advertiserId(integer0);
      Integer integer1 = advertiserQuotaMessage0.getAdvertiserId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      Integer integer0 = new Integer(2074);
      advertiserQuotaMessage0.setAdvertiserId(integer0);
      Integer integer1 = advertiserQuotaMessage0.getAdvertiserId();
      assertEquals(2074, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      Integer integer0 = new Integer((-1));
      advertiserQuotaMessage0.setAdvertiserId(integer0);
      Integer integer1 = advertiserQuotaMessage0.getAdvertiserId();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      ZoneId zoneId0 = ZoneId.systemDefault();
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.now(zoneId0);
      advertiserQuotaMessage0.setQuotaEndDate(offsetDateTime0);
      AdvertiserQuotaMessage advertiserQuotaMessage1 = new AdvertiserQuotaMessage();
      boolean boolean0 = advertiserQuotaMessage0.equals(advertiserQuotaMessage1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.now();
      advertiserQuotaMessage0.setQuotaStartDate(offsetDateTime0);
      AdvertiserQuotaMessage advertiserQuotaMessage1 = new AdvertiserQuotaMessage();
      boolean boolean0 = advertiserQuotaMessage0.equals(advertiserQuotaMessage1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      Integer integer0 = new Integer(1);
      AdvertiserQuotaMessage advertiserQuotaMessage1 = advertiserQuotaMessage0.quotaLimit(integer0);
      AdvertiserQuotaMessage advertiserQuotaMessage2 = new AdvertiserQuotaMessage();
      boolean boolean0 = advertiserQuotaMessage1.equals(advertiserQuotaMessage2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      AdvertiserQuotaMessage advertiserQuotaMessage1 = new AdvertiserQuotaMessage();
      assertTrue(advertiserQuotaMessage1.equals((Object)advertiserQuotaMessage0));
      
      Integer integer0 = new Integer(0);
      AdvertiserQuotaMessage advertiserQuotaMessage2 = advertiserQuotaMessage1.quotaUsed(integer0);
      boolean boolean0 = advertiserQuotaMessage0.equals(advertiserQuotaMessage2);
      assertFalse(advertiserQuotaMessage1.equals((Object)advertiserQuotaMessage0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      AdvertiserQuotaMessage advertiserQuotaMessage1 = new AdvertiserQuotaMessage();
      Integer integer0 = new Integer(0);
      advertiserQuotaMessage1.setAdvertiserId(integer0);
      boolean boolean0 = advertiserQuotaMessage0.equals(advertiserQuotaMessage1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      AdvertiserQuotaMessage advertiserQuotaMessage1 = new AdvertiserQuotaMessage();
      boolean boolean0 = advertiserQuotaMessage0.equals(advertiserQuotaMessage1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      boolean boolean0 = advertiserQuotaMessage0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      boolean boolean0 = advertiserQuotaMessage0.equals(advertiserQuotaMessage0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      boolean boolean0 = advertiserQuotaMessage0.equals("quotaUsed");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      OffsetDateTime offsetDateTime0 = advertiserQuotaMessage0.getQuotaStartDate();
      assertNull(offsetDateTime0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      advertiserQuotaMessage0.hashCode();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      Integer integer0 = advertiserQuotaMessage0.getAdvertiserId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.now();
      advertiserQuotaMessage0.quotaStartDate(offsetDateTime0);
      String string0 = advertiserQuotaMessage0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      Integer integer0 = advertiserQuotaMessage0.getQuotaUsed();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      Integer integer0 = advertiserQuotaMessage0.getQuotaLimit();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AdvertiserQuotaMessage advertiserQuotaMessage0 = new AdvertiserQuotaMessage();
      OffsetDateTime offsetDateTime0 = advertiserQuotaMessage0.getQuotaEndDate();
      assertNull(offsetDateTime0);
  }
}
