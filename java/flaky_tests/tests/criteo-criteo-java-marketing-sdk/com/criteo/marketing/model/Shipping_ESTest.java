/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:42:28 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.Price;
import com.criteo.marketing.model.Shipping;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Shipping_ESTest extends Shipping_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      shipping0.service("'RLCe");
      String string0 = shipping0.getService();
      assertEquals("'RLCe", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      shipping0.service("");
      String string0 = shipping0.getService();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      shipping0.setRegion("");
      String string0 = shipping0.getRegion();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      shipping0.setPostalCode("region");
      String string0 = shipping0.getPostalCode();
      assertEquals("region", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      shipping0.setPostalCode("");
      String string0 = shipping0.getPostalCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Long long0 = new Long(0L);
      shipping0.setLocationId(long0);
      Long long1 = shipping0.getLocationId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Long long0 = new Long(1222L);
      shipping0.locationId(long0);
      Long long1 = shipping0.getLocationId();
      assertEquals(1222L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Long long0 = new Long((-328L));
      Shipping shipping1 = shipping0.locationId(long0);
      Long long1 = shipping1.getLocationId();
      assertEquals((-328L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      shipping0.country("");
      String string0 = shipping0.getCountry();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Long long0 = new Long((-1392L));
      shipping0.locationId(long0);
      String string0 = shipping0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Shipping shipping1 = new Shipping();
      assertTrue(shipping1.equals((Object)shipping0));
      
      shipping1.setRegion("country");
      boolean boolean0 = shipping1.equals(shipping0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Shipping shipping1 = new Shipping();
      assertTrue(shipping1.equals((Object)shipping0));
      
      Price price0 = new Price();
      shipping1.setPrice(price0);
      boolean boolean0 = shipping1.equals(shipping0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Shipping shipping1 = new Shipping();
      assertTrue(shipping1.equals((Object)shipping0));
      
      shipping1.setPostalCode("region");
      boolean boolean0 = shipping1.equals(shipping0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Shipping shipping1 = new Shipping();
      assertTrue(shipping1.equals((Object)shipping0));
      
      Long long0 = Long.valueOf(0L);
      shipping1.locationId(long0);
      boolean boolean0 = shipping0.equals(shipping1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Shipping shipping1 = new Shipping();
      assertTrue(shipping1.equals((Object)shipping0));
      
      shipping1.country("country");
      boolean boolean0 = shipping0.equals(shipping1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Shipping shipping1 = new Shipping();
      boolean boolean0 = shipping1.equals(shipping0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      boolean boolean0 = shipping0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      boolean boolean0 = shipping0.equals(shipping0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Object object0 = new Object();
      boolean boolean0 = shipping0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Long long0 = shipping0.getLocationId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Shipping shipping1 = shipping0.region("");
      assertEquals("", shipping1.getRegion());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      shipping0.setRegion("postalCode");
      String string0 = shipping0.getRegion();
      assertEquals("postalCode", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Price price0 = new Price();
      Shipping shipping1 = shipping0.price(price0);
      Price price1 = shipping1.getPrice();
      assertSame(price0, price1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Price price0 = shipping0.getPrice();
      assertNull(price0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      shipping0.setService("service");
      assertEquals("service", shipping0.getService());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Shipping shipping1 = shipping0.service("postalCode");
      Shipping shipping2 = new Shipping();
      boolean boolean0 = shipping0.equals(shipping2);
      assertEquals("postalCode", shipping0.getService());
      assertFalse(shipping2.equals((Object)shipping1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      shipping0.hashCode();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      String string0 = shipping0.getService();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      String string0 = shipping0.getCountry();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      String string0 = shipping0.getRegion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Shipping shipping1 = shipping0.postalCode("region");
      assertEquals("region", shipping1.getPostalCode());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      shipping0.setCountry("price");
      assertEquals("price", shipping0.getCountry());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      String string0 = shipping0.getPostalCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Shipping shipping0 = new Shipping();
      Shipping shipping1 = shipping0.country("country");
      String string0 = shipping1.getCountry();
      assertEquals("country", string0);
  }
}
