/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:40:56 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.UnitMeasure;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnitMeasure_ESTest extends UnitMeasure_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UnitMeasure unitMeasure0 = new UnitMeasure();
      Double double0 = new Double(0.0);
      unitMeasure0.setValue(double0);
      Double double1 = unitMeasure0.getValue();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UnitMeasure unitMeasure0 = new UnitMeasure();
      Double double0 = new Double(1283.755103696488);
      unitMeasure0.value(double0);
      Double double1 = unitMeasure0.getValue();
      assertEquals(1283.755103696488, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UnitMeasure unitMeasure0 = new UnitMeasure();
      Double double0 = new Double((-1257.922029392651));
      UnitMeasure unitMeasure1 = unitMeasure0.value(double0);
      Double double1 = unitMeasure1.getValue();
      assertEquals((-1257.922029392651), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UnitMeasure unitMeasure0 = new UnitMeasure();
      UnitMeasure unitMeasure1 = unitMeasure0.unit("P[):9`$ob{");
      String string0 = unitMeasure1.getUnit();
      assertEquals("P[):9`$ob{", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UnitMeasure unitMeasure0 = new UnitMeasure();
      unitMeasure0.setUnit("");
      String string0 = unitMeasure0.getUnit();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UnitMeasure unitMeasure0 = new UnitMeasure();
      UnitMeasure unitMeasure1 = unitMeasure0.unit("");
      unitMeasure1.toString();
      assertEquals("", unitMeasure1.getUnit());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UnitMeasure unitMeasure0 = new UnitMeasure();
      UnitMeasure unitMeasure1 = new UnitMeasure();
      assertTrue(unitMeasure1.equals((Object)unitMeasure0));
      
      unitMeasure1.unit("value");
      boolean boolean0 = unitMeasure0.equals(unitMeasure1);
      assertFalse(unitMeasure1.equals((Object)unitMeasure0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UnitMeasure unitMeasure0 = new UnitMeasure();
      Object object0 = new Object();
      boolean boolean0 = unitMeasure0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UnitMeasure unitMeasure0 = new UnitMeasure();
      boolean boolean0 = unitMeasure0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UnitMeasure unitMeasure0 = new UnitMeasure();
      boolean boolean0 = unitMeasure0.equals(unitMeasure0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UnitMeasure unitMeasure0 = new UnitMeasure();
      UnitMeasure unitMeasure1 = new UnitMeasure();
      boolean boolean0 = unitMeasure0.equals(unitMeasure1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UnitMeasure unitMeasure0 = new UnitMeasure();
      Double double0 = unitMeasure0.getValue();
      UnitMeasure unitMeasure1 = unitMeasure0.value(double0);
      assertNull(unitMeasure1.getValue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UnitMeasure unitMeasure0 = new UnitMeasure();
      Double double0 = new Double(5299.9367171);
      unitMeasure0.setValue(double0);
      UnitMeasure unitMeasure1 = new UnitMeasure();
      boolean boolean0 = unitMeasure0.equals(unitMeasure1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UnitMeasure unitMeasure0 = new UnitMeasure();
      String string0 = unitMeasure0.getUnit();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UnitMeasure unitMeasure0 = new UnitMeasure();
      unitMeasure0.hashCode();
  }
}
