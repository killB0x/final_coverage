/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:14:01 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.PublisherStatsQueryMessage;
import java.time.Clock;
import java.time.Instant;
import java.time.OffsetDateTime;
import java.time.ZoneOffset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockOffsetDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PublisherStatsQueryMessage_ESTest extends PublisherStatsQueryMessage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      Clock clock0 = MockClock.systemDefaultZone();
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.now(clock0);
      publisherStatsQueryMessage0.setStartDate(offsetDateTime0);
      OffsetDateTime offsetDateTime1 = publisherStatsQueryMessage0.getStartDate();
      assertSame(offsetDateTime1, offsetDateTime0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      Instant instant0 = MockInstant.ofEpochSecond(0L, 0L);
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.ofInstant(instant0, zoneOffset0);
      publisherStatsQueryMessage0.endDate(offsetDateTime0);
      OffsetDateTime offsetDateTime1 = publisherStatsQueryMessage0.getEndDate();
      assertSame(offsetDateTime1, offsetDateTime0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      publisherStatsQueryMessage0.advertiserIds("c{RnD$jN!\"$Sk@E/AX");
      String string0 = publisherStatsQueryMessage0.getAdvertiserIds();
      assertEquals("c{RnD$jN!\"$Sk@E/AX", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      PublisherStatsQueryMessage publisherStatsQueryMessage1 = publisherStatsQueryMessage0.advertiserIds("");
      String string0 = publisherStatsQueryMessage1.getAdvertiserIds();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      publisherStatsQueryMessage0.advertiserIds("c{RnD$jN!\"$Sk@E/AX");
      publisherStatsQueryMessage0.toString();
      assertEquals("c{RnD$jN!\"$Sk@E/AX", publisherStatsQueryMessage0.getAdvertiserIds());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      PublisherStatsQueryMessage publisherStatsQueryMessage1 = new PublisherStatsQueryMessage();
      boolean boolean0 = publisherStatsQueryMessage1.equals(publisherStatsQueryMessage0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      PublisherStatsQueryMessage publisherStatsQueryMessage1 = new PublisherStatsQueryMessage();
      assertTrue(publisherStatsQueryMessage1.equals((Object)publisherStatsQueryMessage0));
      
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.now();
      publisherStatsQueryMessage1.startDate(offsetDateTime0);
      boolean boolean0 = publisherStatsQueryMessage0.equals(publisherStatsQueryMessage1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      PublisherStatsQueryMessage publisherStatsQueryMessage1 = new PublisherStatsQueryMessage();
      assertTrue(publisherStatsQueryMessage1.equals((Object)publisherStatsQueryMessage0));
      
      publisherStatsQueryMessage1.advertiserIds("startDate");
      boolean boolean0 = publisherStatsQueryMessage1.equals(publisherStatsQueryMessage0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      Object object0 = new Object();
      boolean boolean0 = publisherStatsQueryMessage0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      boolean boolean0 = publisherStatsQueryMessage0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      boolean boolean0 = publisherStatsQueryMessage0.equals(publisherStatsQueryMessage0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      PublisherStatsQueryMessage publisherStatsQueryMessage1 = new PublisherStatsQueryMessage();
      assertTrue(publisherStatsQueryMessage1.equals((Object)publisherStatsQueryMessage0));
      
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.now();
      PublisherStatsQueryMessage publisherStatsQueryMessage2 = publisherStatsQueryMessage1.endDate(offsetDateTime0);
      boolean boolean0 = publisherStatsQueryMessage0.equals(publisherStatsQueryMessage2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      OffsetDateTime offsetDateTime0 = publisherStatsQueryMessage0.getEndDate();
      assertNull(offsetDateTime0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      OffsetDateTime offsetDateTime0 = publisherStatsQueryMessage0.getStartDate();
      assertNull(offsetDateTime0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      publisherStatsQueryMessage0.setAdvertiserIds("");
      assertEquals("", publisherStatsQueryMessage0.getAdvertiserIds());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      String string0 = publisherStatsQueryMessage0.getAdvertiserIds();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      publisherStatsQueryMessage0.hashCode();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PublisherStatsQueryMessage publisherStatsQueryMessage0 = new PublisherStatsQueryMessage();
      publisherStatsQueryMessage0.setEndDate((OffsetDateTime) null);
      assertNull(publisherStatsQueryMessage0.getAdvertiserIds());
  }
}
