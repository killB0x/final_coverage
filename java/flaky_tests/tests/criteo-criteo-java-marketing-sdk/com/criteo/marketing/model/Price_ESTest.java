/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:43:17 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.Price;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Price_ESTest extends Price_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Price price0 = new Price();
      price0.value("value");
      String string0 = price0.getValue();
      assertEquals("value", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Price price0 = new Price();
      price0.setValue("");
      String string0 = price0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Price price0 = new Price();
      price0.currency("class Price {\n");
      String string0 = price0.getCurrency();
      assertEquals("class Price {\n", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Price price0 = new Price();
      price0.setCurrency("");
      String string0 = price0.getCurrency();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Price price0 = new Price();
      Price price1 = price0.value("");
      price1.toString();
      assertEquals("", price1.getValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Price price0 = new Price();
      Price price1 = new Price();
      assertTrue(price1.equals((Object)price0));
      
      price0.currency("value");
      boolean boolean0 = price0.equals(price1);
      assertFalse(price1.equals((Object)price0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Price price0 = new Price();
      Object object0 = new Object();
      boolean boolean0 = price0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Price price0 = new Price();
      boolean boolean0 = price0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Price price0 = new Price();
      boolean boolean0 = price0.equals(price0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Price price0 = new Price();
      Price price1 = new Price();
      boolean boolean0 = price0.equals(price1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Price price0 = new Price();
      price0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Price price0 = new Price();
      price0.value("");
      Price price1 = new Price();
      boolean boolean0 = price0.equals(price1);
      assertFalse(boolean0);
      assertEquals("", price0.getValue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Price price0 = new Price();
      String string0 = price0.getCurrency();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Price price0 = new Price();
      String string0 = price0.getValue();
      assertNull(string0);
  }
}
