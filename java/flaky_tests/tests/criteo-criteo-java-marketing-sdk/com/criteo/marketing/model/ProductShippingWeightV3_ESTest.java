/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:39:45 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.ProductShippingWeightV3;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProductShippingWeightV3_ESTest extends ProductShippingWeightV3_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      Double double0 = new Double(0.0);
      productShippingWeightV3_0.value(double0);
      Double double1 = productShippingWeightV3_0.getValue();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      Double double0 = new Double(154.3);
      ProductShippingWeightV3 productShippingWeightV3_1 = productShippingWeightV3_0.value(double0);
      Double double1 = productShippingWeightV3_1.getValue();
      assertEquals(154.3, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      Double double0 = new Double((-1.0));
      ProductShippingWeightV3 productShippingWeightV3_1 = productShippingWeightV3_0.value(double0);
      Double double1 = productShippingWeightV3_1.getValue();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      productShippingWeightV3_0.unit("class ProductShippingWeightV3 {\n    value: null\n    unit: null\n}");
      String string0 = productShippingWeightV3_0.getUnit();
      assertEquals("class ProductShippingWeightV3 {\n    value: null\n    unit: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      productShippingWeightV3_0.unit("");
      String string0 = productShippingWeightV3_0.getUnit();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      ProductShippingWeightV3 productShippingWeightV3_1 = productShippingWeightV3_0.unit("S%");
      productShippingWeightV3_1.toString();
      assertEquals("S%", productShippingWeightV3_1.getUnit());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      ProductShippingWeightV3 productShippingWeightV3_1 = productShippingWeightV3_0.unit("value");
      ProductShippingWeightV3 productShippingWeightV3_2 = new ProductShippingWeightV3();
      boolean boolean0 = productShippingWeightV3_0.equals(productShippingWeightV3_2);
      assertFalse(boolean0);
      assertEquals("value", productShippingWeightV3_0.getUnit());
      assertFalse(productShippingWeightV3_2.equals((Object)productShippingWeightV3_1));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      Double double0 = new Double(0.0);
      productShippingWeightV3_0.value(double0);
      ProductShippingWeightV3 productShippingWeightV3_1 = new ProductShippingWeightV3();
      boolean boolean0 = productShippingWeightV3_0.equals(productShippingWeightV3_1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      Object object0 = new Object();
      boolean boolean0 = productShippingWeightV3_0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      boolean boolean0 = productShippingWeightV3_0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      boolean boolean0 = productShippingWeightV3_0.equals(productShippingWeightV3_0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      ProductShippingWeightV3 productShippingWeightV3_1 = new ProductShippingWeightV3();
      boolean boolean0 = productShippingWeightV3_0.equals(productShippingWeightV3_1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      Double double0 = productShippingWeightV3_0.getValue();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      productShippingWeightV3_0.setUnit("value");
      assertEquals("value", productShippingWeightV3_0.getUnit());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      productShippingWeightV3_0.hashCode();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      String string0 = productShippingWeightV3_0.getUnit();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ProductShippingWeightV3 productShippingWeightV3_0 = new ProductShippingWeightV3();
      productShippingWeightV3_0.setValue((Double) null);
      assertNull(productShippingWeightV3_0.getValue());
  }
}
