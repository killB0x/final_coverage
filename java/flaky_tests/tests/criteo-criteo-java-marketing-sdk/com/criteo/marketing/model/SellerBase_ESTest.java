/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:38:33 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.SellerBase;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SellerBase_ESTest extends SellerBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SellerBase sellerBase0 = new SellerBase();
      sellerBase0.setSellerName("%7X]Q7HJGZt~,=ep");
      String string0 = sellerBase0.getSellerName();
      assertEquals("%7X]Q7HJGZt~,=ep", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SellerBase sellerBase0 = new SellerBase();
      SellerBase sellerBase1 = sellerBase0.sellerName("");
      String string0 = sellerBase1.getSellerName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SellerBase sellerBase0 = new SellerBase();
      sellerBase0.setId("id");
      String string0 = sellerBase0.getId();
      assertEquals("id", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SellerBase sellerBase0 = new SellerBase();
      sellerBase0.setId("");
      String string0 = sellerBase0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SellerBase sellerBase0 = new SellerBase();
      SellerBase sellerBase1 = sellerBase0.sellerName("sellerName");
      sellerBase1.toString();
      assertEquals("sellerName", sellerBase1.getSellerName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SellerBase sellerBase0 = new SellerBase();
      boolean boolean0 = sellerBase0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SellerBase sellerBase0 = new SellerBase();
      boolean boolean0 = sellerBase0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SellerBase sellerBase0 = new SellerBase();
      boolean boolean0 = sellerBase0.equals(sellerBase0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SellerBase sellerBase0 = new SellerBase();
      SellerBase sellerBase1 = new SellerBase();
      boolean boolean0 = sellerBase0.equals(sellerBase1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SellerBase sellerBase0 = new SellerBase();
      sellerBase0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SellerBase sellerBase0 = new SellerBase();
      String string0 = sellerBase0.getSellerName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SellerBase sellerBase0 = new SellerBase();
      SellerBase sellerBase1 = sellerBase0.id("");
      assertEquals("", sellerBase1.getId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SellerBase sellerBase0 = new SellerBase();
      sellerBase0.sellerName("sellerName");
      sellerBase0.setId("");
      SellerBase sellerBase1 = new SellerBase();
      sellerBase1.id("");
      boolean boolean0 = sellerBase0.equals(sellerBase1);
      assertFalse(boolean0);
      assertEquals("sellerName", sellerBase0.getSellerName());
      assertFalse(sellerBase1.equals((Object)sellerBase0));
      assertEquals("", sellerBase1.getId());
      assertEquals("", sellerBase0.getId());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SellerBase sellerBase0 = new SellerBase();
      String string0 = sellerBase0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SellerBase sellerBase0 = new SellerBase();
      sellerBase0.setId("sellerName");
      SellerBase sellerBase1 = new SellerBase();
      boolean boolean0 = sellerBase0.equals(sellerBase1);
      assertFalse(sellerBase1.equals((Object)sellerBase0));
      assertFalse(boolean0);
      assertEquals("sellerName", sellerBase0.getId());
  }
}
