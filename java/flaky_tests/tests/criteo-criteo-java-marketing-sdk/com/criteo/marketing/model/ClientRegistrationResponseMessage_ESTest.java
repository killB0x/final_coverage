/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:25:30 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.ClientRegistrationResponseMessage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClientRegistrationResponseMessage_ESTest extends ClientRegistrationResponseMessage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClientRegistrationResponseMessage clientRegistrationResponseMessage0 = new ClientRegistrationResponseMessage();
      clientRegistrationResponseMessage0.setClientSecret("uE2c +");
      String string0 = clientRegistrationResponseMessage0.getClientSecret();
      assertEquals("uE2c +", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClientRegistrationResponseMessage clientRegistrationResponseMessage0 = new ClientRegistrationResponseMessage();
      ClientRegistrationResponseMessage clientRegistrationResponseMessage1 = clientRegistrationResponseMessage0.clientSecret("");
      String string0 = clientRegistrationResponseMessage1.getClientSecret();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClientRegistrationResponseMessage clientRegistrationResponseMessage0 = new ClientRegistrationResponseMessage();
      clientRegistrationResponseMessage0.clientId("clientSecret");
      String string0 = clientRegistrationResponseMessage0.getClientId();
      assertEquals("clientSecret", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClientRegistrationResponseMessage clientRegistrationResponseMessage0 = new ClientRegistrationResponseMessage();
      clientRegistrationResponseMessage0.setClientId("");
      String string0 = clientRegistrationResponseMessage0.getClientId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClientRegistrationResponseMessage clientRegistrationResponseMessage0 = new ClientRegistrationResponseMessage();
      clientRegistrationResponseMessage0.setClientId("");
      clientRegistrationResponseMessage0.toString();
      assertEquals("", clientRegistrationResponseMessage0.getClientId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClientRegistrationResponseMessage clientRegistrationResponseMessage0 = new ClientRegistrationResponseMessage();
      clientRegistrationResponseMessage0.setClientId("");
      clientRegistrationResponseMessage0.setClientSecret("uE2c +");
      ClientRegistrationResponseMessage clientRegistrationResponseMessage1 = new ClientRegistrationResponseMessage();
      ClientRegistrationResponseMessage clientRegistrationResponseMessage2 = clientRegistrationResponseMessage1.clientId("");
      boolean boolean0 = clientRegistrationResponseMessage0.equals(clientRegistrationResponseMessage2);
      assertEquals("", clientRegistrationResponseMessage2.getClientId());
      assertEquals("uE2c +", clientRegistrationResponseMessage0.getClientSecret());
      assertFalse(boolean0);
      assertEquals("", clientRegistrationResponseMessage0.getClientId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClientRegistrationResponseMessage clientRegistrationResponseMessage0 = new ClientRegistrationResponseMessage();
      Object object0 = new Object();
      boolean boolean0 = clientRegistrationResponseMessage0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClientRegistrationResponseMessage clientRegistrationResponseMessage0 = new ClientRegistrationResponseMessage();
      boolean boolean0 = clientRegistrationResponseMessage0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClientRegistrationResponseMessage clientRegistrationResponseMessage0 = new ClientRegistrationResponseMessage();
      boolean boolean0 = clientRegistrationResponseMessage0.equals(clientRegistrationResponseMessage0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClientRegistrationResponseMessage clientRegistrationResponseMessage0 = new ClientRegistrationResponseMessage();
      ClientRegistrationResponseMessage clientRegistrationResponseMessage1 = new ClientRegistrationResponseMessage();
      boolean boolean0 = clientRegistrationResponseMessage0.equals(clientRegistrationResponseMessage1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClientRegistrationResponseMessage clientRegistrationResponseMessage0 = new ClientRegistrationResponseMessage();
      clientRegistrationResponseMessage0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClientRegistrationResponseMessage clientRegistrationResponseMessage0 = new ClientRegistrationResponseMessage();
      clientRegistrationResponseMessage0.setClientId("");
      ClientRegistrationResponseMessage clientRegistrationResponseMessage1 = new ClientRegistrationResponseMessage();
      boolean boolean0 = clientRegistrationResponseMessage0.equals(clientRegistrationResponseMessage1);
      assertFalse(boolean0);
      assertEquals("", clientRegistrationResponseMessage0.getClientId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClientRegistrationResponseMessage clientRegistrationResponseMessage0 = new ClientRegistrationResponseMessage();
      String string0 = clientRegistrationResponseMessage0.getClientSecret();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClientRegistrationResponseMessage clientRegistrationResponseMessage0 = new ClientRegistrationResponseMessage();
      String string0 = clientRegistrationResponseMessage0.getClientId();
      assertNull(string0);
  }
}
