/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:09:26 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.model.PublisherFileStatsMessage;
import java.time.OffsetDateTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockOffsetDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PublisherFileStatsMessage_ESTest extends PublisherFileStatsMessage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      publisherFileStatsMessage0.url("Tz{J;O&g\"CL_9D@&");
      String string0 = publisherFileStatsMessage0.getUrl();
      assertEquals("Tz{J;O&g\"CL_9D@&", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      PublisherFileStatsMessage publisherFileStatsMessage1 = publisherFileStatsMessage0.url("");
      String string0 = publisherFileStatsMessage1.getUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      publisherFileStatsMessage0.fileName("7\"");
      String string0 = publisherFileStatsMessage0.getFileName();
      assertEquals("7\"", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      PublisherFileStatsMessage publisherFileStatsMessage1 = publisherFileStatsMessage0.fileName("");
      String string0 = publisherFileStatsMessage1.getFileName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      publisherFileStatsMessage0.fileName("");
      publisherFileStatsMessage0.toString();
      assertEquals("", publisherFileStatsMessage0.getFileName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      PublisherFileStatsMessage publisherFileStatsMessage1 = new PublisherFileStatsMessage();
      assertTrue(publisherFileStatsMessage1.equals((Object)publisherFileStatsMessage0));
      
      publisherFileStatsMessage1.setUrl("");
      boolean boolean0 = publisherFileStatsMessage0.equals(publisherFileStatsMessage1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      PublisherFileStatsMessage publisherFileStatsMessage1 = new PublisherFileStatsMessage();
      boolean boolean0 = publisherFileStatsMessage0.equals(publisherFileStatsMessage1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      PublisherFileStatsMessage publisherFileStatsMessage1 = new PublisherFileStatsMessage();
      assertTrue(publisherFileStatsMessage1.equals((Object)publisherFileStatsMessage0));
      
      PublisherFileStatsMessage publisherFileStatsMessage2 = publisherFileStatsMessage1.fileName("");
      boolean boolean0 = publisherFileStatsMessage0.equals(publisherFileStatsMessage2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      boolean boolean0 = publisherFileStatsMessage0.equals("fileName");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      boolean boolean0 = publisherFileStatsMessage0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      boolean boolean0 = publisherFileStatsMessage0.equals(publisherFileStatsMessage0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      PublisherFileStatsMessage publisherFileStatsMessage1 = new PublisherFileStatsMessage();
      assertTrue(publisherFileStatsMessage1.equals((Object)publisherFileStatsMessage0));
      
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.now();
      PublisherFileStatsMessage publisherFileStatsMessage2 = publisherFileStatsMessage1.tokenValidUntil(offsetDateTime0);
      boolean boolean0 = publisherFileStatsMessage0.equals(publisherFileStatsMessage2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      publisherFileStatsMessage0.setFileName((String) null);
      assertNull(publisherFileStatsMessage0.getUrl());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      String string0 = publisherFileStatsMessage0.getFileName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      String string0 = publisherFileStatsMessage0.getUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      publisherFileStatsMessage0.hashCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      OffsetDateTime offsetDateTime0 = publisherFileStatsMessage0.getTokenValidUntil();
      assertNull(offsetDateTime0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.now();
      publisherFileStatsMessage0.tokenValidUntil(offsetDateTime0);
      OffsetDateTime offsetDateTime1 = publisherFileStatsMessage0.getTokenValidUntil();
      assertSame(offsetDateTime1, offsetDateTime0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PublisherFileStatsMessage publisherFileStatsMessage0 = new PublisherFileStatsMessage();
      publisherFileStatsMessage0.setTokenValidUntil((OffsetDateTime) null);
      assertNull(publisherFileStatsMessage0.getUrl());
  }
}
