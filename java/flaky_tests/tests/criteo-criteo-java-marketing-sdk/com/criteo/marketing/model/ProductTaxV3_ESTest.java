/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:47:07 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.criteo.marketing.model.ProductTaxV3;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProductTaxV3_ESTest extends ProductTaxV3_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      assertNull(productTaxV3_0.getPostalCode());
      
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.region("YOdC");
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.locationId(productTaxV3_0);
      Boolean boolean0 = Boolean.valueOf(false);
      ProductTaxV3 productTaxV3_3 = productTaxV3_2.taxShip(boolean0);
      ProductTaxV3 productTaxV3_4 = productTaxV3_3.postalCode("rate");
      Double double0 = new Double(0.0);
      ProductTaxV3 productTaxV3_5 = productTaxV3_4.rate(double0);
      productTaxV3_5.country("0hI/_5u%!6$5Ws[{;&Z");
      Object object0 = new Object();
      productTaxV3_0.locationId(object0);
      Boolean boolean1 = Boolean.valueOf("");
      productTaxV3_2.taxShip(boolean1);
      productTaxV3_3.country("");
      productTaxV3_5.getCountry();
      Double double1 = new Double(2481.9095257962);
      productTaxV3_5.rate(double1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      Double double0 = new Double(1552.557245);
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.rate(double0);
      productTaxV3_1.setCountry("");
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.region("");
      productTaxV3_0.setLocationId(productTaxV3_2);
      ProductTaxV3 productTaxV3_3 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_4 = new ProductTaxV3();
      Boolean boolean0 = Boolean.valueOf("");
      Boolean boolean1 = Boolean.FALSE;
      ProductTaxV3 productTaxV3_5 = productTaxV3_3.postalCode("rate");
      ProductTaxV3 productTaxV3_6 = productTaxV3_0.region("U[xx9Jo5%i3`qx4WXo");
      productTaxV3_6.rate(double0);
      productTaxV3_3.equals(productTaxV3_4);
      productTaxV3_3.country("postalCode");
      productTaxV3_4.locationId("");
      ProductTaxV3 productTaxV3_7 = productTaxV3_1.postalCode("locationId");
      Double double1 = new Double(1.0);
      ProductTaxV3 productTaxV3_8 = productTaxV3_7.rate(double1);
      productTaxV3_8.equals(productTaxV3_5);
      Double double2 = new Double(1552.557245);
      ProductTaxV3 productTaxV3_9 = productTaxV3_0.rate(double2);
      Object object0 = new Object();
      productTaxV3_9.taxShip(boolean0);
      productTaxV3_0.hashCode();
      productTaxV3_4.setPostalCode(productTaxV3_0.SERIALIZED_NAME_LOCATION_ID);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      Double double0 = new Double(1552.557245);
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.rate(double0);
      productTaxV3_1.setCountry("");
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.region("");
      Double double1 = new Double(1552.557245);
      ProductTaxV3 productTaxV3_3 = productTaxV3_2.rate(double1);
      ProductTaxV3 productTaxV3_4 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_5 = new ProductTaxV3();
      Boolean boolean0 = Boolean.valueOf("K;eA");
      Boolean boolean1 = Boolean.FALSE;
      ProductTaxV3 productTaxV3_6 = productTaxV3_4.taxShip(boolean1);
      productTaxV3_1.region("country");
      productTaxV3_6.taxShip(boolean0);
      Object object0 = new Object();
      productTaxV3_3.equals(object0);
      Object object1 = new Object();
      productTaxV3_4.equals(productTaxV3_5);
      productTaxV3_6.hashCode();
      Object object2 = new Object();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_2 = productTaxV3_0.region("country");
      productTaxV3_1.postalCode("country");
      Double double0 = new Double(1.0);
      ProductTaxV3 productTaxV3_3 = productTaxV3_0.rate(double0);
      Double double1 = new Double(1.0);
      productTaxV3_3.setRate(double1);
      productTaxV3_1.equals(productTaxV3_0);
      productTaxV3_0.setLocationId(productTaxV3_1);
      ProductTaxV3 productTaxV3_4 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_5 = new ProductTaxV3();
      Boolean.valueOf("Wbh(");
      Boolean boolean0 = Boolean.valueOf(false);
      productTaxV3_2.taxShip(boolean0);
      ProductTaxV3 productTaxV3_6 = productTaxV3_1.region("");
      ProductTaxV3 productTaxV3_7 = new ProductTaxV3();
      productTaxV3_6.equals(productTaxV3_7);
      productTaxV3_0.country("]V3.5,y/'PgY;x*vQc");
      Object object0 = new Object();
      ProductTaxV3 productTaxV3_8 = productTaxV3_5.locationId(object0);
      productTaxV3_7.equals(productTaxV3_8);
      ProductTaxV3 productTaxV3_9 = productTaxV3_1.locationId(productTaxV3_8);
      productTaxV3_9.hashCode();
      productTaxV3_8.setPostalCode("com.criteo.marketing.model.ProductTaxV3");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.rate((Double) null);
      assertNull(productTaxV3_1.getRate());
      
      productTaxV3_0.setLocationId(productTaxV3_1);
      ProductTaxV3 productTaxV3_2 = productTaxV3_0.rate((Double) null);
      productTaxV3_0.rate((Double) null);
      ProductTaxV3 productTaxV3_3 = new ProductTaxV3();
      Boolean boolean0 = Boolean.valueOf("rate");
      ProductTaxV3 productTaxV3_4 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_5 = productTaxV3_4.region("");
      Boolean boolean1 = Boolean.valueOf("a'6hwlx(O");
      ProductTaxV3 productTaxV3_6 = productTaxV3_4.taxShip(boolean1);
      productTaxV3_3.postalCode("country");
      productTaxV3_5.equals(boolean0);
      ProductTaxV3 productTaxV3_7 = productTaxV3_5.country((String) null);
      productTaxV3_7.postalCode("");
      productTaxV3_0.locationId("");
      productTaxV3_7.equals(productTaxV3_6);
      productTaxV3_2.equals(productTaxV3_3);
      productTaxV3_2.hashCode();
      productTaxV3_0.setPostalCode("country");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      Double double0 = new Double(1552.557245);
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.rate(double0);
      productTaxV3_1.setCountry("");
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.region("");
      productTaxV3_0.setLocationId(productTaxV3_2);
      productTaxV3_0.rate(double0);
      ProductTaxV3 productTaxV3_3 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_4 = new ProductTaxV3();
      Boolean.valueOf("");
      Boolean boolean0 = Boolean.FALSE;
      productTaxV3_0.taxShip(boolean0);
      ProductTaxV3 productTaxV3_5 = productTaxV3_0.region("U[xx9Jo5%i3`qx4WXo");
      productTaxV3_5.rate(double0);
      productTaxV3_3.equals(productTaxV3_4);
      ProductTaxV3 productTaxV3_6 = productTaxV3_3.country("postalCode");
      Object object0 = new Object();
      productTaxV3_2.equals(object0);
      productTaxV3_3.hashCode();
      productTaxV3_3.setPostalCode("`");
      productTaxV3_6.postalCode("taxShip");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.rate((Double) null);
      productTaxV3_1.setCountry("Hsj$0I}?V");
      productTaxV3_0.setLocationId(productTaxV3_1);
      ProductTaxV3 productTaxV3_2 = productTaxV3_0.rate((Double) null);
      ProductTaxV3 productTaxV3_3 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_4 = new ProductTaxV3();
      Boolean boolean0 = Boolean.valueOf("rate");
      ProductTaxV3 productTaxV3_5 = productTaxV3_4.taxShip(boolean0);
      ProductTaxV3 productTaxV3_6 = productTaxV3_5.region("");
      productTaxV3_3.equals(productTaxV3_6);
      ProductTaxV3 productTaxV3_7 = productTaxV3_4.country("region");
      productTaxV3_0.equals(productTaxV3_7);
      productTaxV3_7.hashCode();
      productTaxV3_2.setPostalCode("country");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      productTaxV3_0.setCountry("Hsj$0I}?V");
      productTaxV3_0.setLocationId(productTaxV3_0);
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.rate((Double) null);
      ProductTaxV3 productTaxV3_2 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_3 = new ProductTaxV3();
      Boolean boolean0 = Boolean.valueOf("rate");
      ProductTaxV3 productTaxV3_4 = productTaxV3_3.taxShip(boolean0);
      ProductTaxV3 productTaxV3_5 = productTaxV3_4.region("taxShip");
      productTaxV3_2.equals(productTaxV3_5);
      ProductTaxV3 productTaxV3_6 = productTaxV3_3.country("region");
      productTaxV3_0.equals(productTaxV3_6);
      productTaxV3_6.hashCode();
      productTaxV3_1.setPostalCode("country");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.country("v-");
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.locationId(productTaxV3_0);
      ProductTaxV3 productTaxV3_3 = productTaxV3_0.region("rate");
      Boolean boolean0 = Boolean.TRUE;
      productTaxV3_2.setTaxShip(boolean0);
      ProductTaxV3 productTaxV3_4 = productTaxV3_2.locationId((Object) null);
      productTaxV3_4.region((String) null);
      Double double0 = new Double((-4097.2));
      ProductTaxV3 productTaxV3_5 = productTaxV3_2.rate(double0);
      ProductTaxV3 productTaxV3_6 = productTaxV3_0.region("taxShip");
      productTaxV3_1.getRegion();
      productTaxV3_0.getTaxShip();
      productTaxV3_0.setCountry("region");
      productTaxV3_1.setLocationId(productTaxV3_6);
      Double double1 = new Double((-168.12101762047));
      ProductTaxV3 productTaxV3_7 = productTaxV3_6.rate(double1);
      ProductTaxV3 productTaxV3_8 = productTaxV3_1.taxShip(boolean0);
      Object object0 = new Object();
      productTaxV3_8.setLocationId(object0);
      productTaxV3_5.getTaxShip();
      ProductTaxV3 productTaxV3_9 = productTaxV3_3.country("locationId");
      productTaxV3_9.getRate();
      productTaxV3_7.country("rRw~");
      productTaxV3_9.region("country");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.taxShip((Boolean) null);
      Boolean boolean0 = Boolean.FALSE;
      productTaxV3_0.setTaxShip(boolean0);
      productTaxV3_0.equals((Object) null);
      ProductTaxV3 productTaxV3_2 = productTaxV3_0.locationId(boolean0);
      Boolean boolean1 = Boolean.FALSE;
      productTaxV3_2.setTaxShip(boolean1);
      productTaxV3_2.setTaxShip(boolean0);
      productTaxV3_2.hashCode();
      productTaxV3_2.setTaxShip(boolean0);
      ProductTaxV3 productTaxV3_3 = productTaxV3_1.postalCode("locationId");
      Boolean boolean2 = Boolean.FALSE;
      ProductTaxV3 productTaxV3_4 = productTaxV3_2.taxShip(boolean2);
      productTaxV3_4.getRegion();
      ProductTaxV3 productTaxV3_5 = productTaxV3_0.region("region");
      productTaxV3_1.setLocationId(productTaxV3_5);
      Double double0 = new Double(0.0);
      productTaxV3_3.setRate(double0);
      productTaxV3_4.setTaxShip(boolean0);
      productTaxV3_0.toString();
      productTaxV3_2.getRate();
      productTaxV3_3.setRegion("=6J%`S@");
      productTaxV3_3.getRegion();
      Object object0 = new Object();
      productTaxV3_3.setLocationId(object0);
      productTaxV3_2.setTaxShip((Boolean) null);
      Object object1 = new Object();
      productTaxV3_3.equals(object1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.postalCode("");
      ProductTaxV3 productTaxV3_2 = productTaxV3_0.taxShip((Boolean) null);
      ProductTaxV3 productTaxV3_3 = productTaxV3_2.taxShip((Boolean) null);
      productTaxV3_0.getRegion();
      Object object0 = new Object();
      productTaxV3_1.setTaxShip((Boolean) null);
      productTaxV3_1.country("");
      Double double0 = new Double(0.0);
      ProductTaxV3 productTaxV3_4 = productTaxV3_1.rate(double0);
      Double double1 = new Double(0.0);
      productTaxV3_3.setRate(double1);
      ProductTaxV3 productTaxV3_5 = productTaxV3_1.region("taxShip");
      productTaxV3_5.setRegion("taxShip");
      productTaxV3_4.setPostalCode("null");
      productTaxV3_3.locationId(object0);
      productTaxV3_1.getPostalCode();
      productTaxV3_4.getPostalCode();
      Double double2 = new Double(0.0);
      productTaxV3_1.setRate(double2);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.country("v-");
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.locationId(productTaxV3_0);
      productTaxV3_0.region("rate");
      Boolean boolean0 = Boolean.TRUE;
      productTaxV3_2.setTaxShip(boolean0);
      productTaxV3_2.locationId((Object) null);
      Double double0 = new Double((-4097.2));
      ProductTaxV3 productTaxV3_3 = productTaxV3_2.rate(double0);
      ProductTaxV3 productTaxV3_4 = productTaxV3_0.region("taxShip");
      productTaxV3_1.getRegion();
      productTaxV3_0.getTaxShip();
      productTaxV3_0.setCountry("region");
      productTaxV3_1.setLocationId(productTaxV3_4);
      productTaxV3_1.setRegion("G7hOCo08");
      ProductTaxV3 productTaxV3_5 = new ProductTaxV3();
      productTaxV3_4.equals(productTaxV3_5);
      productTaxV3_0.toString();
      productTaxV3_3.getRegion();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_2 = productTaxV3_0.region("country");
      productTaxV3_0.region("locationId");
      Double double0 = new Double(1.0);
      ProductTaxV3 productTaxV3_3 = productTaxV3_0.rate(double0);
      Double double1 = new Double(1.0);
      productTaxV3_3.setRate(double1);
      productTaxV3_1.equals(productTaxV3_0);
      productTaxV3_0.setLocationId(productTaxV3_1);
      productTaxV3_0.region("locationId");
      productTaxV3_0.setRegion("");
      productTaxV3_0.country("postalCode");
      productTaxV3_3.region("country");
      productTaxV3_2.getLocationId();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.country("x[7oec=HP:-Xa3Mc");
      Boolean boolean0 = Boolean.valueOf("locationId");
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.taxShip(boolean0);
      ProductTaxV3 productTaxV3_3 = productTaxV3_2.taxShip(boolean0);
      Double double0 = new Double(0.0);
      productTaxV3_3.rate(double0);
      ProductTaxV3 productTaxV3_4 = productTaxV3_2.postalCode("taxShip");
      productTaxV3_4.getCountry();
      productTaxV3_0.setRegion("postalCode");
      productTaxV3_0.setTaxShip(boolean0);
      productTaxV3_1.hashCode();
      Double double1 = new Double(1.0);
      Double double2 = Double.valueOf((-1.0));
      productTaxV3_0.rate(double2);
      productTaxV3_0.setRate(double1);
      productTaxV3_2.hashCode();
      productTaxV3_2.hashCode();
      ProductTaxV3 productTaxV3_5 = productTaxV3_2.region("-';UV7\"\"aV#.[");
      productTaxV3_1.equals(productTaxV3_5);
      ProductTaxV3 productTaxV3_6 = productTaxV3_5.rate((Double) null);
      productTaxV3_1.setCountry((String) null);
      productTaxV3_2.getLocationId();
      productTaxV3_0.getLocationId();
      productTaxV3_6.getRate();
      try { 
        Double.valueOf("rate");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_2 = productTaxV3_0.locationId(productTaxV3_1);
      Boolean boolean0 = Boolean.valueOf("postalCode");
      ProductTaxV3 productTaxV3_3 = productTaxV3_2.taxShip(boolean0);
      ProductTaxV3 productTaxV3_4 = productTaxV3_3.region("locationId");
      productTaxV3_4.getCountry();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.postalCode("/}AN|U-gO[)evny<");
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.country((String) null);
      ProductTaxV3 productTaxV3_3 = productTaxV3_2.locationId(productTaxV3_1);
      Boolean boolean0 = Boolean.valueOf("postalCode");
      ProductTaxV3 productTaxV3_4 = productTaxV3_3.taxShip(boolean0);
      Double double0 = new Double(1245.92295306);
      ProductTaxV3 productTaxV3_5 = productTaxV3_4.rate(double0);
      productTaxV3_5.hashCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      productTaxV3_0.toString();
      Boolean boolean0 = Boolean.TRUE;
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.taxShip(boolean0);
      productTaxV3_1.getPostalCode();
      Object object0 = new Object();
      productTaxV3_1.equals(object0);
      productTaxV3_1.setRegion("    rate: ");
      productTaxV3_1.setCountry("postalCode");
      Double double0 = new Double(3217.365121153301);
      ProductTaxV3 productTaxV3_2 = productTaxV3_0.rate(double0);
      ProductTaxV3 productTaxV3_3 = productTaxV3_0.locationId(boolean0);
      productTaxV3_0.getCountry();
      productTaxV3_2.toString();
      productTaxV3_3.setCountry("B}iJ2dc5M\"=i");
      productTaxV3_0.locationId(productTaxV3_1);
      ProductTaxV3 productTaxV3_4 = productTaxV3_2.region((String) null);
      ProductTaxV3 productTaxV3_5 = productTaxV3_0.locationId((Object) null);
      productTaxV3_4.locationId(productTaxV3_5);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.region("");
      productTaxV3_1.setCountry("");
      Object object0 = new Object();
      productTaxV3_0.hashCode();
      Double double0 = new Double((-1769.717642071765));
      productTaxV3_0.setRate(double0);
      ProductTaxV3 productTaxV3_2 = productTaxV3_0.locationId(object0);
      Object object1 = new Object();
      productTaxV3_1.locationId(object1);
      productTaxV3_2.setPostalCode("rate");
      ProductTaxV3 productTaxV3_3 = productTaxV3_0.postalCode("taxShip");
      Boolean boolean0 = Boolean.FALSE;
      ProductTaxV3 productTaxV3_4 = productTaxV3_3.taxShip(boolean0);
      productTaxV3_4.toString();
      productTaxV3_0.setCountry("");
      productTaxV3_1.toString();
      productTaxV3_0.setRate((Double) null);
      productTaxV3_2.getRate();
      productTaxV3_1.getLocationId();
      productTaxV3_1.setRate(double0);
      productTaxV3_1.getTaxShip();
      productTaxV3_0.getRegion();
      productTaxV3_0.postalCode("region");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.region("R{7*XT4O7li8InY)");
      Boolean boolean0 = Boolean.valueOf((String) null);
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.taxShip(boolean0);
      ProductTaxV3 productTaxV3_3 = productTaxV3_2.postalCode("locationId");
      productTaxV3_3.hashCode();
      productTaxV3_3.hashCode();
      productTaxV3_0.setCountry("");
      Object object0 = new Object();
      productTaxV3_3.equals(object0);
      productTaxV3_3.getRate();
      productTaxV3_3.getRegion();
      productTaxV3_2.getPostalCode();
      ProductTaxV3 productTaxV3_4 = productTaxV3_1.rate((Double) null);
      ProductTaxV3 productTaxV3_5 = productTaxV3_0.region("s%|-[8%h-M>U6");
      productTaxV3_5.setRate((Double) null);
      productTaxV3_0.getPostalCode();
      productTaxV3_4.locationId((Object) null);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      Double double0 = new Double(0.0);
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.rate(double0);
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.region("");
      ProductTaxV3 productTaxV3_3 = productTaxV3_1.taxShip((Boolean) null);
      ProductTaxV3 productTaxV3_4 = productTaxV3_3.region((String) null);
      ProductTaxV3 productTaxV3_5 = productTaxV3_2.locationId(productTaxV3_3);
      productTaxV3_5.rate(double0);
      ProductTaxV3 productTaxV3_6 = productTaxV3_3.postalCode("gli*");
      Boolean boolean0 = Boolean.valueOf((String) null);
      productTaxV3_2.setTaxShip(boolean0);
      Object object0 = new Object();
      productTaxV3_5.equals(productTaxV3_3);
      productTaxV3_6.setLocationId(object0);
      productTaxV3_5.getTaxShip();
      productTaxV3_4.getRate();
      productTaxV3_2.country("locationId");
      productTaxV3_3.region("rate");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      productTaxV3_0.getCountry();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.country("P5<&Hj@d");
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.rate((Double) null);
      Object object0 = new Object();
      ProductTaxV3 productTaxV3_3 = productTaxV3_2.locationId(object0);
      Boolean boolean0 = Boolean.TRUE;
      ProductTaxV3 productTaxV3_4 = productTaxV3_3.taxShip(boolean0);
      ProductTaxV3 productTaxV3_5 = productTaxV3_4.postalCode("%@_/(j[");
      productTaxV3_5.getCountry();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.country("@ej$$d");
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.locationId(productTaxV3_0);
      ProductTaxV3 productTaxV3_3 = productTaxV3_2.region("@ej$$d");
      Double double0 = new Double((-491.84013192));
      Double double1 = new Double((-491.84013192));
      productTaxV3_1.country("region");
      productTaxV3_3.setRate(double1);
      ProductTaxV3 productTaxV3_4 = productTaxV3_3.rate(double0);
      productTaxV3_3.postalCode("country");
      ProductTaxV3 productTaxV3_5 = productTaxV3_4.postalCode("Y\"&MP-yw^k");
      Double double2 = new Double((-491.84013192));
      ProductTaxV3 productTaxV3_6 = productTaxV3_5.country("taxShip");
      ProductTaxV3 productTaxV3_7 = productTaxV3_0.postalCode("taxShip");
      productTaxV3_6.equals(productTaxV3_7);
      Boolean boolean0 = Boolean.valueOf("locationId");
      productTaxV3_3.taxShip(boolean0);
      productTaxV3_5.rate(double2);
      productTaxV3_5.locationId(productTaxV3_2);
      productTaxV3_5.setPostalCode("com.criteo.marketing.model.ProductTaxV3");
      Object object0 = new Object();
      productTaxV3_0.equals(object0);
      productTaxV3_2.getRegion();
      productTaxV3_1.setRegion("country");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      Double double0 = new Double(0.0);
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.rate(double0);
      Boolean boolean0 = Boolean.TRUE;
      ProductTaxV3 productTaxV3_2 = productTaxV3_0.taxShip(boolean0);
      productTaxV3_1.equals(productTaxV3_2);
      productTaxV3_0.getRegion();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      productTaxV3_0.getPostalCode();
      Double double0 = new Double(1632.69);
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.rate(double0);
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.region("locationId");
      ProductTaxV3 productTaxV3_3 = productTaxV3_2.postalCode("rate");
      productTaxV3_3.setRate(double0);
      productTaxV3_1.getPostalCode();
      productTaxV3_1.locationId("rate");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      Double double0 = new Double(350.321015611807);
      productTaxV3_0.setRate(double0);
      productTaxV3_0.toString();
      productTaxV3_0.rate(double0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      productTaxV3_0.setPostalCode("");
      productTaxV3_0.getTaxShip();
      productTaxV3_0.getPostalCode();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.region("");
      ProductTaxV3 productTaxV3_2 = productTaxV3_0.locationId("");
      productTaxV3_0.setTaxShip((Boolean) null);
      productTaxV3_1.region("country");
      ProductTaxV3 productTaxV3_3 = productTaxV3_2.region("");
      productTaxV3_0.setPostalCode("5>e<");
      ProductTaxV3 productTaxV3_4 = productTaxV3_2.region("taxShip");
      ProductTaxV3 productTaxV3_5 = productTaxV3_4.taxShip((Boolean) null);
      productTaxV3_4.hashCode();
      ProductTaxV3 productTaxV3_6 = productTaxV3_1.locationId(productTaxV3_3);
      productTaxV3_0.setCountry("taxShip");
      ProductTaxV3 productTaxV3_7 = productTaxV3_3.locationId("");
      productTaxV3_7.setPostalCode("locationId");
      productTaxV3_2.setPostalCode("country");
      productTaxV3_7.rate((Double) null);
      Double double0 = new Double(1.0);
      productTaxV3_7.rate(double0);
      productTaxV3_6.setRegion("postalCode");
      productTaxV3_2.setPostalCode("taxShip");
      ProductTaxV3 productTaxV3_8 = productTaxV3_5.region("jQjc;BbXM1#3k$[^Tf");
      ProductTaxV3 productTaxV3_9 = productTaxV3_8.postalCode("region");
      productTaxV3_1.setRate(double0);
      productTaxV3_9.getRate();
      productTaxV3_9.country("");
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.postalCode("");
      Object object0 = new Object();
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.locationId(object0);
      ProductTaxV3 productTaxV3_3 = productTaxV3_0.locationId(productTaxV3_2);
      ProductTaxV3 productTaxV3_4 = productTaxV3_3.country("S45!usRHK");
      Boolean boolean0 = Boolean.valueOf(true);
      ProductTaxV3 productTaxV3_5 = productTaxV3_4.taxShip(boolean0);
      Double double0 = new Double(1.0);
      ProductTaxV3 productTaxV3_6 = productTaxV3_5.rate(double0);
      ProductTaxV3 productTaxV3_7 = productTaxV3_6.region("postalCode");
      productTaxV3_7.getTaxShip();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      Boolean boolean0 = Boolean.FALSE;
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.taxShip(boolean0);
      productTaxV3_1.toString();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      productTaxV3_0.rate((Double) null);
      Double double0 = new Double(0.0);
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.rate(double0);
      Object object0 = new Object();
      productTaxV3_0.locationId(object0);
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.locationId(object0);
      productTaxV3_2.toString();
      productTaxV3_2.postalCode("region");
      productTaxV3_2.country("0A:bw_$");
      productTaxV3_1.region("v+J46]M*CnR'3e");
      ProductTaxV3 productTaxV3_3 = productTaxV3_2.country("rate");
      productTaxV3_3.rate(double0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      productTaxV3_0.setPostalCode("lYe!@9+A");
      productTaxV3_0.setCountry("ia");
      Object object0 = new Object();
      productTaxV3_0.equals(object0);
      productTaxV3_0.getRate();
      Boolean boolean0 = Boolean.TRUE;
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.taxShip(boolean0);
      productTaxV3_1.postalCode("locationId");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      Object object0 = new Object();
      productTaxV3_0.locationId(object0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      productTaxV3_0.setRegion("vs3a?");
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.postalCode("taxShip");
      Object object0 = new Object();
      productTaxV3_1.locationId(object0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      Boolean boolean0 = Boolean.TRUE;
      productTaxV3_0.setTaxShip(boolean0);
      productTaxV3_0.toString();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      productTaxV3_0.getLocationId();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      productTaxV3_0.setPostalCode("");
      Boolean boolean0 = Boolean.FALSE;
      productTaxV3_0.taxShip(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      Boolean boolean0 = Boolean.FALSE;
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.taxShip(boolean0);
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.locationId((Object) null);
      Double double0 = new Double(0.0);
      ProductTaxV3 productTaxV3_3 = productTaxV3_2.rate(double0);
      productTaxV3_3.setRegion("region");
      ProductTaxV3 productTaxV3_4 = productTaxV3_1.country((String) null);
      Boolean boolean1 = Boolean.TRUE;
      ProductTaxV3 productTaxV3_5 = productTaxV3_2.taxShip(boolean1);
      productTaxV3_4.setLocationId(productTaxV3_5);
      productTaxV3_0.setRegion("locationId");
      ProductTaxV3 productTaxV3_6 = productTaxV3_0.postalCode(";+55`$S\"{E/Iw_|I5T");
      productTaxV3_6.setTaxShip(boolean0);
      ProductTaxV3 productTaxV3_7 = productTaxV3_6.postalCode("country");
      productTaxV3_7.country("<S?w5HsJ4vyc,U'Zh");
      productTaxV3_7.setPostalCode("");
      Boolean boolean2 = Boolean.FALSE;
      productTaxV3_1.taxShip(boolean2);
      Double double1 = productTaxV3_1.getRate();
      productTaxV3_0.getLocationId();
      productTaxV3_3.getLocationId();
      ProductTaxV3 productTaxV3_8 = productTaxV3_1.postalCode("9`{EY$~w<");
      productTaxV3_8.rate(double1);
      Boolean boolean3 = Boolean.valueOf("locationId");
      productTaxV3_1.taxShip(boolean3);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      productTaxV3_0.country("$39q[");
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.region((String) null);
      Boolean boolean0 = Boolean.valueOf(true);
      ProductTaxV3 productTaxV3_2 = productTaxV3_0.taxShip(boolean0);
      productTaxV3_1.equals(productTaxV3_2);
      productTaxV3_2.country("taxShip");
      ProductTaxV3 productTaxV3_3 = new ProductTaxV3();
      productTaxV3_2.equals(productTaxV3_3);
      productTaxV3_0.hashCode();
      ProductTaxV3 productTaxV3_4 = productTaxV3_1.locationId(productTaxV3_0);
      productTaxV3_4.setPostalCode("JQ>ODua$H");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_2 = new ProductTaxV3();
      Boolean boolean0 = Boolean.FALSE;
      productTaxV3_0.taxShip(boolean0);
      productTaxV3_1.equals(productTaxV3_2);
      Object object0 = new Object();
      ProductTaxV3 productTaxV3_3 = new ProductTaxV3();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      Object object0 = new Object();
      productTaxV3_0.equals(object0);
      productTaxV3_0.hashCode();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.locationId(object0);
      productTaxV3_1.setPostalCode("b gyTY");
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.postalCode("");
      Double double0 = new Double(303.4206);
      ProductTaxV3 productTaxV3_2 = productTaxV3_1.rate(double0);
      ProductTaxV3 productTaxV3_3 = productTaxV3_2.country("");
      Object object0 = new Object();
      productTaxV3_3.equals(object0);
      Object object1 = new Object();
      productTaxV3_2.setLocationId(object1);
      productTaxV3_1.country("?k");
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.rate((Double) null);
      productTaxV3_1.setCountry("Hsj$0I}?V");
      productTaxV3_0.setLocationId(productTaxV3_1);
      productTaxV3_0.getLocationId();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      productTaxV3_0.hashCode();
      productTaxV3_0.region("");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      productTaxV3_0.toString();
      productTaxV3_0.equals((Object) null);
      productTaxV3_0.postalCode("");
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_2 = productTaxV3_0.region("I_ L7&Ab/|");
      productTaxV3_0.equals(productTaxV3_2);
      productTaxV3_2.hashCode();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.rate((Double) null);
      productTaxV3_1.setCountry("Hsj$0I}?V");
      productTaxV3_0.setLocationId(productTaxV3_1);
      ProductTaxV3 productTaxV3_2 = productTaxV3_0.rate((Double) null);
      ProductTaxV3 productTaxV3_3 = productTaxV3_0.rate((Double) null);
      ProductTaxV3 productTaxV3_4 = new ProductTaxV3();
      Boolean boolean0 = Boolean.valueOf("rate");
      ProductTaxV3 productTaxV3_5 = productTaxV3_4.taxShip(boolean0);
      ProductTaxV3 productTaxV3_6 = productTaxV3_5.region("");
      productTaxV3_3.equals(productTaxV3_6);
      ProductTaxV3 productTaxV3_7 = productTaxV3_0.region("I_ L7&Ab/|");
      productTaxV3_0.equals(productTaxV3_7);
      productTaxV3_7.hashCode();
      productTaxV3_2.setPostalCode(productTaxV3_0.SERIALIZED_NAME_COUNTRY);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      Object object0 = new Object();
      productTaxV3_0.setLocationId(object0);
      assertNull(productTaxV3_0.getRegion());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.region("taxShip");
      assertEquals("taxShip", productTaxV3_1.getRegion());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.postalCode(")2j|o");
      assertEquals(")2j|o", productTaxV3_1.getPostalCode());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ProductTaxV3 productTaxV3_0 = new ProductTaxV3();
      ProductTaxV3 productTaxV3_1 = productTaxV3_0.region("mv!'75|:jcgN=;8z!");
      productTaxV3_1.postalCode("postalCode");
      try { 
        Double.valueOf("locationId");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }
}
