/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 03:38:47 GMT 2022
 */

package com.criteo.marketing.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.criteo.marketing.model.Price;
import com.criteo.marketing.model.ProductShippingV3;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProductShippingV3_ESTest extends ProductShippingV3_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNull(productShippingV3_0.getRegion());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.country("'GyDRNmXIFF_");
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.region("");
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.service("");
      ProductShippingV3 productShippingV3_4 = productShippingV3_1.service("");
      ProductShippingV3 productShippingV3_5 = productShippingV3_3.locationId(productShippingV3_4);
      ProductShippingV3 productShippingV3_6 = productShippingV3_5.locationGroupName((String) null);
      productShippingV3_6.country("region");
      Price price0 = new Price();
      productShippingV3_6.setCountry("service");
      String string0 = "value";
      // Undeclared exception!
      try { 
        productShippingV3_0.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.service("");
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.region("country");
      Price price0 = new Price();
      Price price1 = price0.value("country");
      productShippingV3_2.setLocationGroupName("value");
      price1.setValue("class Price {\n");
      Price price2 = price1.currency("value");
      productShippingV3_1.setPrice(price0);
      price1.setCurrency((String) null);
      price0.setCurrency("    currency: ");
      ProductShippingV3 productShippingV3_3 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_4 = productShippingV3_2.region("");
      productShippingV3_4.setPrice(price1);
      ProductShippingV3 productShippingV3_5 = productShippingV3_0.price(price2);
      productShippingV3_5.price(price2);
      productShippingV3_0.price(price2);
      ProductShippingV3 productShippingV3_6 = new ProductShippingV3();
      productShippingV3_6.setLocationId(productShippingV3_1);
      productShippingV3_3.equals(productShippingV3_6);
      productShippingV3_1.equals(price1);
      productShippingV3_0.getCountry();
      productShippingV3_1.country((String) null);
      productShippingV3_0.locationGroupName("service");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Price price0 = new Price();
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      Object object0 = new Object();
      ProductShippingV3 productShippingV3_1 = new ProductShippingV3();
      Object object1 = new Object();
      productShippingV3_1.setLocationId(object1);
      productShippingV3_0.equals(productShippingV3_1);
      productShippingV3_0.postalCode("region");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      Object object0 = new Object();
      ProductShippingV3 productShippingV3_1 = new ProductShippingV3();
      productShippingV3_0.equals(object0);
      ProductShippingV3 productShippingV3_2 = productShippingV3_0.locationGroupName("country");
      productShippingV3_1.equals(productShippingV3_2);
      ProductShippingV3 productShippingV3_3 = new ProductShippingV3();
      productShippingV3_3.region("service");
      productShippingV3_1.postalCode("currency");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      Object object0 = new Object();
      ProductShippingV3 productShippingV3_1 = new ProductShippingV3();
      productShippingV3_1.locationGroupName("locationId");
      productShippingV3_0.equals(productShippingV3_1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.service("");
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.region("country");
      Price price0 = new Price();
      Price price1 = price0.value("country");
      productShippingV3_1.setLocationGroupName("region");
      price1.setValue("class Price {\n");
      Price price2 = price1.currency("class Price {\n");
      price2.setValue("^Zp");
      ProductShippingV3 productShippingV3_3 = productShippingV3_0.country("JE0(0)X&SJ");
      ProductShippingV3 productShippingV3_4 = productShippingV3_3.region("^Zp");
      ProductShippingV3 productShippingV3_5 = productShippingV3_0.postalCode("");
      Object object0 = new Object();
      productShippingV3_1.equals("^Zp");
      ProductShippingV3 productShippingV3_6 = productShippingV3_4.locationGroupName("class Price {\n");
      ProductShippingV3 productShippingV3_7 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_8 = productShippingV3_4.price(price0);
      Object object1 = new Object();
      productShippingV3_6.equals(productShippingV3_1);
      Price price3 = price2.currency("");
      ProductShippingV3 productShippingV3_9 = productShippingV3_8.price(price3);
      productShippingV3_8.locationId(productShippingV3_2);
      productShippingV3_3.postalCode("service");
      productShippingV3_5.country("");
      Object object2 = new Object();
      productShippingV3_6.equals(object2);
      ProductShippingV3 productShippingV3_10 = productShippingV3_9.locationId("^Zp");
      productShippingV3_0.equals(productShippingV3_10);
      productShippingV3_1.getCountry();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.service("");
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.region("country");
      Price price0 = new Price();
      Price price1 = price0.value("country");
      productShippingV3_2.setLocationGroupName("value");
      price1.setValue("class Price {\n");
      Price price2 = price1.currency("class Price {\n");
      Price price3 = price1.currency("^Zp");
      price3.setCurrency((String) null);
      price3.setCurrency("    currency: ");
      ProductShippingV3 productShippingV3_3 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_4 = productShippingV3_2.region("");
      productShippingV3_4.setLocationGroupName("Z:qzzZ");
      Object object0 = new Object();
      productShippingV3_0.equals(object0);
      ProductShippingV3 productShippingV3_5 = productShippingV3_0.price(price2);
      productShippingV3_5.price(price2);
      productShippingV3_5.postalCode("class Price {\n");
      ProductShippingV3 productShippingV3_6 = new ProductShippingV3();
      productShippingV3_3.equals(productShippingV3_6);
      productShippingV3_1.equals(price1);
      productShippingV3_0.getCountry();
      productShippingV3_1.country((String) null);
      productShippingV3_0.locationGroupName("");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.service("");
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.region("country");
      Price price0 = new Price();
      Price price1 = price0.value("country");
      productShippingV3_2.setService("locationId");
      productShippingV3_2.setLocationGroupName("value");
      price1.toString();
      price1.setValue("class Price {\n");
      Price price2 = price1.currency("class Price {\n");
      price0.setCurrency("R^/E%6");
      Price price3 = price2.currency("R^/E%6");
      price3.setCurrency("class Price {\n    currency: null\n    value: java.lang.String@0000000003\n}");
      ProductShippingV3 productShippingV3_3 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_4 = productShippingV3_3.region("country");
      Object object0 = new Object();
      productShippingV3_2.equals(object0);
      Price price4 = price2.currency("(");
      productShippingV3_4.price(price4);
      productShippingV3_1.price(price1);
      ProductShippingV3 productShippingV3_5 = productShippingV3_0.postalCode("price");
      productShippingV3_5.setPostalCode("region");
      productShippingV3_1.equals(productShippingV3_3);
      Object object1 = new Object();
      productShippingV3_0.equals(object1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_1 = new ProductShippingV3();
      Object object0 = new Object();
      ProductShippingV3 productShippingV3_2 = productShippingV3_0.service("#N#:#}{~cLg1");
      productShippingV3_2.equals(productShippingV3_1);
      productShippingV3_0.toString();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.service("");
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.region("country");
      Price price0 = new Price();
      Price price1 = price0.value("country");
      productShippingV3_1.setLocationGroupName("region");
      price1.setValue("class Price {\n");
      Price price2 = price1.currency("class Price {\n");
      productShippingV3_0.setLocationGroupName("");
      Price price3 = price1.currency("^Zp");
      price3.setCurrency((String) null);
      price3.setCurrency("    currency: ");
      ProductShippingV3 productShippingV3_3 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_4 = productShippingV3_3.region((String) null);
      productShippingV3_0.equals("class Price {\n");
      productShippingV3_3.price(price0);
      ProductShippingV3 productShippingV3_5 = productShippingV3_2.price(price2);
      ProductShippingV3 productShippingV3_6 = productShippingV3_5.price(price1);
      productShippingV3_3.postalCode("service");
      ProductShippingV3 productShippingV3_7 = productShippingV3_2.price(price0);
      productShippingV3_4.equals(productShippingV3_7);
      productShippingV3_6.equals(productShippingV3_5);
      productShippingV3_5.country("locationId");
      productShippingV3_0.locationId(price2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.country("&hxmEJ(5K|+");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.price(price0);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("&hxmEJ(5K|+", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.postalCode("currency");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertEquals("currency", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("currency", productShippingV3_1.getPostalCode());
      assertEquals("&hxmEJ(5K|+", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getService());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("currency", productShippingV3_2.getPostalCode());
      assertEquals("&hxmEJ(5K|+", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_3.getService());
      assertEquals("currency", productShippingV3_3.getPostalCode());
      assertEquals("&hxmEJ(5K|+", productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_0.price(price0);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertNotNull(productShippingV3_4);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertEquals("currency", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_0.getCountry());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("&hxmEJ(5K|+", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertEquals("currency", productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getService());
      assertNull(productShippingV3_4.getRegion());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_4.locationGroupName("locationGroupName");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertNotNull(productShippingV3_5);
      assertEquals("locationGroupName", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertEquals("currency", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_0.getCountry());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("&hxmEJ(5K|+", productShippingV3_4.getCountry());
      assertEquals("currency", productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getService());
      assertEquals("locationGroupName", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getRegion());
      assertNull(productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getService());
      assertEquals("locationGroupName", productShippingV3_5.getLocationGroupName());
      assertEquals("&hxmEJ(5K|+", productShippingV3_5.getCountry());
      assertEquals("currency", productShippingV3_5.getPostalCode());
      
      productShippingV3_5.setRegion("");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertEquals("locationGroupName", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertEquals("currency", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_0.getCountry());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("&hxmEJ(5K|+", productShippingV3_4.getCountry());
      assertEquals("currency", productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getService());
      assertEquals("locationGroupName", productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("", productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getService());
      assertEquals("locationGroupName", productShippingV3_5.getLocationGroupName());
      assertEquals("&hxmEJ(5K|+", productShippingV3_5.getCountry());
      assertEquals("currency", productShippingV3_5.getPostalCode());
      
      ProductShippingV3 productShippingV3_6 = productShippingV3_5.price(price0);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertNotNull(productShippingV3_6);
      assertEquals("locationGroupName", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertEquals("currency", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_0.getCountry());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("&hxmEJ(5K|+", productShippingV3_4.getCountry());
      assertEquals("currency", productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getService());
      assertEquals("locationGroupName", productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("", productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getService());
      assertEquals("locationGroupName", productShippingV3_5.getLocationGroupName());
      assertEquals("&hxmEJ(5K|+", productShippingV3_5.getCountry());
      assertEquals("currency", productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_6.getService());
      assertEquals("&hxmEJ(5K|+", productShippingV3_6.getCountry());
      assertEquals("currency", productShippingV3_6.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_6.getLocationGroupName());
      assertEquals("", productShippingV3_6.getRegion());
      
      ProductShippingV3 productShippingV3_7 = productShippingV3_1.service("locationId");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertNotNull(productShippingV3_7);
      assertEquals("locationId", productShippingV3_0.getService());
      assertEquals("locationGroupName", productShippingV3_0.getLocationGroupName());
      assertEquals("currency", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_0.getCountry());
      assertEquals("locationGroupName", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("currency", productShippingV3_1.getPostalCode());
      assertEquals("&hxmEJ(5K|+", productShippingV3_1.getCountry());
      assertEquals("locationId", productShippingV3_1.getService());
      assertEquals("&hxmEJ(5K|+", productShippingV3_7.getCountry());
      assertEquals("currency", productShippingV3_7.getPostalCode());
      assertEquals("", productShippingV3_7.getRegion());
      assertEquals("locationGroupName", productShippingV3_7.getLocationGroupName());
      assertEquals("locationId", productShippingV3_7.getService());
      
      ProductShippingV3 productShippingV3_8 = productShippingV3_0.region("@");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertNotNull(productShippingV3_8);
      assertEquals("locationId", productShippingV3_0.getService());
      assertEquals("locationGroupName", productShippingV3_0.getLocationGroupName());
      assertEquals("currency", productShippingV3_0.getPostalCode());
      assertEquals("@", productShippingV3_0.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_0.getCountry());
      assertEquals("locationId", productShippingV3_8.getService());
      assertEquals("@", productShippingV3_8.getRegion());
      assertEquals("locationGroupName", productShippingV3_8.getLocationGroupName());
      assertEquals("currency", productShippingV3_8.getPostalCode());
      assertEquals("&hxmEJ(5K|+", productShippingV3_8.getCountry());
      
      ProductShippingV3 productShippingV3_9 = productShippingV3_2.postalCode("_");
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_9, productShippingV3_3);
      assertSame(productShippingV3_9, productShippingV3_5);
      assertSame(productShippingV3_9, productShippingV3_4);
      assertSame(productShippingV3_9, productShippingV3_8);
      assertSame(productShippingV3_9, productShippingV3_0);
      assertSame(productShippingV3_9, productShippingV3_7);
      assertSame(productShippingV3_9, productShippingV3_6);
      assertSame(productShippingV3_9, productShippingV3_1);
      assertSame(productShippingV3_9, productShippingV3_2);
      assertNotNull(productShippingV3_9);
      assertEquals("locationId", productShippingV3_0.getService());
      assertEquals("locationGroupName", productShippingV3_0.getLocationGroupName());
      assertEquals("_", productShippingV3_0.getPostalCode());
      assertEquals("@", productShippingV3_0.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_0.getCountry());
      assertEquals("locationGroupName", productShippingV3_1.getLocationGroupName());
      assertEquals("@", productShippingV3_1.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_1.getCountry());
      assertEquals("_", productShippingV3_1.getPostalCode());
      assertEquals("locationId", productShippingV3_1.getService());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("locationId", productShippingV3_2.getService());
      assertEquals("&hxmEJ(5K|+", productShippingV3_2.getCountry());
      assertEquals("@", productShippingV3_2.getRegion());
      assertEquals("locationGroupName", productShippingV3_2.getLocationGroupName());
      assertEquals("_", productShippingV3_2.getPostalCode());
      assertEquals("&hxmEJ(5K|+", productShippingV3_9.getCountry());
      assertEquals("_", productShippingV3_9.getPostalCode());
      assertEquals("locationId", productShippingV3_9.getService());
      assertEquals("locationGroupName", productShippingV3_9.getLocationGroupName());
      assertEquals("@", productShippingV3_9.getRegion());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = productShippingV3_9.equals(object0);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_9, productShippingV3_3);
      assertSame(productShippingV3_9, productShippingV3_5);
      assertSame(productShippingV3_9, productShippingV3_4);
      assertSame(productShippingV3_9, productShippingV3_8);
      assertSame(productShippingV3_9, productShippingV3_0);
      assertSame(productShippingV3_9, productShippingV3_7);
      assertSame(productShippingV3_9, productShippingV3_6);
      assertSame(productShippingV3_9, productShippingV3_1);
      assertSame(productShippingV3_9, productShippingV3_2);
      assertFalse(boolean0);
      assertEquals("locationId", productShippingV3_0.getService());
      assertEquals("locationGroupName", productShippingV3_0.getLocationGroupName());
      assertEquals("_", productShippingV3_0.getPostalCode());
      assertEquals("@", productShippingV3_0.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_0.getCountry());
      assertEquals("locationGroupName", productShippingV3_1.getLocationGroupName());
      assertEquals("@", productShippingV3_1.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_1.getCountry());
      assertEquals("_", productShippingV3_1.getPostalCode());
      assertEquals("locationId", productShippingV3_1.getService());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("locationId", productShippingV3_2.getService());
      assertEquals("&hxmEJ(5K|+", productShippingV3_2.getCountry());
      assertEquals("@", productShippingV3_2.getRegion());
      assertEquals("locationGroupName", productShippingV3_2.getLocationGroupName());
      assertEquals("_", productShippingV3_2.getPostalCode());
      assertEquals("&hxmEJ(5K|+", productShippingV3_9.getCountry());
      assertEquals("_", productShippingV3_9.getPostalCode());
      assertEquals("locationId", productShippingV3_9.getService());
      assertEquals("locationGroupName", productShippingV3_9.getLocationGroupName());
      assertEquals("@", productShippingV3_9.getRegion());
      
      ProductShippingV3 productShippingV3_10 = productShippingV3_3.locationGroupName("");
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_10);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_10);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_9);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_8);
      assertSame(productShippingV3_3, productShippingV3_10);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_10, productShippingV3_6);
      assertSame(productShippingV3_10, productShippingV3_2);
      assertSame(productShippingV3_10, productShippingV3_0);
      assertSame(productShippingV3_10, productShippingV3_7);
      assertSame(productShippingV3_10, productShippingV3_5);
      assertSame(productShippingV3_10, productShippingV3_9);
      assertSame(productShippingV3_10, productShippingV3_1);
      assertSame(productShippingV3_10, productShippingV3_4);
      assertSame(productShippingV3_10, productShippingV3_3);
      assertSame(productShippingV3_10, productShippingV3_8);
      assertNotNull(productShippingV3_10);
      assertEquals("locationId", productShippingV3_0.getService());
      assertEquals("_", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("@", productShippingV3_0.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_0.getCountry());
      assertEquals("@", productShippingV3_1.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("_", productShippingV3_1.getPostalCode());
      assertEquals("locationId", productShippingV3_1.getService());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("locationId", productShippingV3_2.getService());
      assertEquals("&hxmEJ(5K|+", productShippingV3_2.getCountry());
      assertEquals("@", productShippingV3_2.getRegion());
      assertEquals("_", productShippingV3_2.getPostalCode());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("_", productShippingV3_3.getPostalCode());
      assertEquals("&hxmEJ(5K|+", productShippingV3_3.getCountry());
      assertEquals("", productShippingV3_3.getLocationGroupName());
      assertEquals("@", productShippingV3_3.getRegion());
      assertEquals("locationId", productShippingV3_3.getService());
      assertEquals("locationId", productShippingV3_10.getService());
      assertEquals("@", productShippingV3_10.getRegion());
      assertEquals("_", productShippingV3_10.getPostalCode());
      assertEquals("", productShippingV3_10.getLocationGroupName());
      assertEquals("&hxmEJ(5K|+", productShippingV3_10.getCountry());
      
      ProductShippingV3 productShippingV3_11 = new ProductShippingV3();
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_8));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_4));
      assertNotNull(productShippingV3_11);
      assertNull(productShippingV3_11.getCountry());
      assertNull(productShippingV3_11.getService());
      assertNull(productShippingV3_11.getLocationGroupName());
      assertNull(productShippingV3_11.getPostalCode());
      assertNull(productShippingV3_11.getRegion());
      
      ProductShippingV3 productShippingV3_12 = productShippingV3_11.price(price0);
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_8));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_8));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_4));
      assertNotSame(productShippingV3_12, productShippingV3_0);
      assertNotSame(productShippingV3_12, productShippingV3_8);
      assertNotSame(productShippingV3_12, productShippingV3_1);
      assertNotSame(productShippingV3_12, productShippingV3_4);
      assertNotSame(productShippingV3_12, productShippingV3_9);
      assertNotSame(productShippingV3_12, productShippingV3_5);
      assertNotSame(productShippingV3_12, productShippingV3_6);
      assertNotSame(productShippingV3_12, productShippingV3_2);
      assertNotSame(productShippingV3_12, productShippingV3_10);
      assertSame(productShippingV3_12, productShippingV3_11);
      assertNotSame(productShippingV3_12, productShippingV3_3);
      assertNotSame(productShippingV3_12, productShippingV3_7);
      assertNotSame(productShippingV3_11, productShippingV3_6);
      assertNotSame(productShippingV3_11, productShippingV3_2);
      assertNotSame(productShippingV3_11, productShippingV3_5);
      assertNotSame(productShippingV3_11, productShippingV3_8);
      assertNotSame(productShippingV3_11, productShippingV3_1);
      assertNotSame(productShippingV3_11, productShippingV3_9);
      assertNotSame(productShippingV3_11, productShippingV3_7);
      assertNotSame(productShippingV3_11, productShippingV3_0);
      assertSame(productShippingV3_11, productShippingV3_12);
      assertNotSame(productShippingV3_11, productShippingV3_3);
      assertNotSame(productShippingV3_11, productShippingV3_10);
      assertNotSame(productShippingV3_11, productShippingV3_4);
      assertNotNull(productShippingV3_12);
      assertNull(productShippingV3_12.getRegion());
      assertNull(productShippingV3_12.getCountry());
      assertNull(productShippingV3_12.getService());
      assertNull(productShippingV3_12.getLocationGroupName());
      assertNull(productShippingV3_12.getPostalCode());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(productShippingV3_11.getCountry());
      assertNull(productShippingV3_11.getService());
      assertNull(productShippingV3_11.getLocationGroupName());
      assertNull(productShippingV3_11.getPostalCode());
      assertNull(productShippingV3_11.getRegion());
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      boolean boolean1 = productShippingV3_12.equals(object1);
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_8));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_7));
      assertFalse(object1.equals((Object)object0));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_8));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_4));
      assertNotSame(productShippingV3_12, productShippingV3_0);
      assertNotSame(productShippingV3_12, productShippingV3_8);
      assertNotSame(productShippingV3_12, productShippingV3_1);
      assertNotSame(productShippingV3_12, productShippingV3_4);
      assertNotSame(productShippingV3_12, productShippingV3_9);
      assertNotSame(productShippingV3_12, productShippingV3_5);
      assertNotSame(productShippingV3_12, productShippingV3_6);
      assertNotSame(productShippingV3_12, productShippingV3_2);
      assertNotSame(productShippingV3_12, productShippingV3_10);
      assertSame(productShippingV3_12, productShippingV3_11);
      assertNotSame(productShippingV3_12, productShippingV3_3);
      assertNotSame(productShippingV3_12, productShippingV3_7);
      assertNotSame(object1, object0);
      assertNotSame(productShippingV3_11, productShippingV3_6);
      assertNotSame(productShippingV3_11, productShippingV3_2);
      assertNotSame(productShippingV3_11, productShippingV3_5);
      assertNotSame(productShippingV3_11, productShippingV3_8);
      assertNotSame(productShippingV3_11, productShippingV3_1);
      assertNotSame(productShippingV3_11, productShippingV3_9);
      assertNotSame(productShippingV3_11, productShippingV3_7);
      assertNotSame(productShippingV3_11, productShippingV3_0);
      assertSame(productShippingV3_11, productShippingV3_12);
      assertNotSame(productShippingV3_11, productShippingV3_3);
      assertNotSame(productShippingV3_11, productShippingV3_10);
      assertNotSame(productShippingV3_11, productShippingV3_4);
      assertFalse(boolean1);
      assertNull(productShippingV3_12.getRegion());
      assertNull(productShippingV3_12.getCountry());
      assertNull(productShippingV3_12.getService());
      assertNull(productShippingV3_12.getLocationGroupName());
      assertNull(productShippingV3_12.getPostalCode());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(productShippingV3_11.getCountry());
      assertNull(productShippingV3_11.getService());
      assertNull(productShippingV3_11.getLocationGroupName());
      assertNull(productShippingV3_11.getPostalCode());
      assertNull(productShippingV3_11.getRegion());
      
      ProductShippingV3 productShippingV3_13 = productShippingV3_0.price(price0);
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_11));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_12));
      assertFalse(productShippingV3_13.equals((Object)productShippingV3_11));
      assertFalse(productShippingV3_13.equals((Object)productShippingV3_12));
      assertNotSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_13);
      assertNotSame(productShippingV3_0, productShippingV3_12);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_13, productShippingV3_2);
      assertSame(productShippingV3_13, productShippingV3_0);
      assertSame(productShippingV3_13, productShippingV3_8);
      assertSame(productShippingV3_13, productShippingV3_1);
      assertSame(productShippingV3_13, productShippingV3_9);
      assertSame(productShippingV3_13, productShippingV3_3);
      assertSame(productShippingV3_13, productShippingV3_10);
      assertSame(productShippingV3_13, productShippingV3_4);
      assertSame(productShippingV3_13, productShippingV3_5);
      assertNotSame(productShippingV3_13, productShippingV3_11);
      assertNotSame(productShippingV3_13, productShippingV3_12);
      assertSame(productShippingV3_13, productShippingV3_6);
      assertSame(productShippingV3_13, productShippingV3_7);
      assertNotNull(productShippingV3_13);
      assertEquals("locationId", productShippingV3_0.getService());
      assertEquals("_", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("@", productShippingV3_0.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_0.getCountry());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("&hxmEJ(5K|+", productShippingV3_13.getCountry());
      assertEquals("", productShippingV3_13.getLocationGroupName());
      assertEquals("_", productShippingV3_13.getPostalCode());
      assertEquals("@", productShippingV3_13.getRegion());
      assertEquals("locationId", productShippingV3_13.getService());
      
      ProductShippingV3 productShippingV3_14 = productShippingV3_11.postalCode("region");
      assertFalse(productShippingV3_14.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_14.equals((Object)productShippingV3_13));
      assertFalse(productShippingV3_14.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_14.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_14.equals((Object)productShippingV3_8));
      assertFalse(productShippingV3_14.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_14.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_14.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_14.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_14.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_14.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_14.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_13));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_8));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_4));
      assertSame(productShippingV3_14, productShippingV3_11);
      assertNotSame(productShippingV3_14, productShippingV3_13);
      assertNotSame(productShippingV3_14, productShippingV3_9);
      assertNotSame(productShippingV3_14, productShippingV3_6);
      assertNotSame(productShippingV3_14, productShippingV3_3);
      assertNotSame(productShippingV3_14, productShippingV3_7);
      assertNotSame(productShippingV3_14, productShippingV3_5);
      assertNotSame(productShippingV3_14, productShippingV3_8);
      assertNotSame(productShippingV3_14, productShippingV3_4);
      assertNotSame(productShippingV3_14, productShippingV3_10);
      assertSame(productShippingV3_14, productShippingV3_12);
      assertNotSame(productShippingV3_14, productShippingV3_0);
      assertNotSame(productShippingV3_14, productShippingV3_1);
      assertNotSame(productShippingV3_14, productShippingV3_2);
      assertNotSame(productShippingV3_11, productShippingV3_6);
      assertSame(productShippingV3_11, productShippingV3_14);
      assertNotSame(productShippingV3_11, productShippingV3_5);
      assertNotSame(productShippingV3_11, productShippingV3_7);
      assertNotSame(productShippingV3_11, productShippingV3_0);
      assertNotSame(productShippingV3_11, productShippingV3_4);
      assertNotSame(productShippingV3_11, productShippingV3_13);
      assertNotSame(productShippingV3_11, productShippingV3_2);
      assertNotSame(productShippingV3_11, productShippingV3_8);
      assertNotSame(productShippingV3_11, productShippingV3_1);
      assertNotSame(productShippingV3_11, productShippingV3_9);
      assertSame(productShippingV3_11, productShippingV3_12);
      assertNotSame(productShippingV3_11, productShippingV3_3);
      assertNotSame(productShippingV3_11, productShippingV3_10);
      assertNotNull(productShippingV3_14);
      assertNull(productShippingV3_14.getCountry());
      assertNull(productShippingV3_14.getRegion());
      assertNull(productShippingV3_14.getService());
      assertNull(productShippingV3_14.getLocationGroupName());
      assertEquals("region", productShippingV3_14.getPostalCode());
      assertNull(productShippingV3_11.getCountry());
      assertNull(productShippingV3_11.getService());
      assertNull(productShippingV3_11.getLocationGroupName());
      assertEquals("region", productShippingV3_11.getPostalCode());
      assertNull(productShippingV3_11.getRegion());
      
      ProductShippingV3 productShippingV3_15 = productShippingV3_11.country("56m&Q|)BUn%Mu$*UyV");
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_8));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_13));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_13));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_8));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_4));
      assertNotSame(productShippingV3_15, productShippingV3_9);
      assertSame(productShippingV3_15, productShippingV3_11);
      assertNotSame(productShippingV3_15, productShippingV3_13);
      assertNotSame(productShippingV3_15, productShippingV3_7);
      assertNotSame(productShippingV3_15, productShippingV3_6);
      assertSame(productShippingV3_15, productShippingV3_12);
      assertNotSame(productShippingV3_15, productShippingV3_10);
      assertNotSame(productShippingV3_15, productShippingV3_3);
      assertNotSame(productShippingV3_15, productShippingV3_5);
      assertNotSame(productShippingV3_15, productShippingV3_4);
      assertNotSame(productShippingV3_15, productShippingV3_8);
      assertNotSame(productShippingV3_15, productShippingV3_1);
      assertNotSame(productShippingV3_15, productShippingV3_2);
      assertSame(productShippingV3_15, productShippingV3_14);
      assertNotSame(productShippingV3_15, productShippingV3_0);
      assertNotSame(productShippingV3_11, productShippingV3_6);
      assertSame(productShippingV3_11, productShippingV3_15);
      assertSame(productShippingV3_11, productShippingV3_14);
      assertNotSame(productShippingV3_11, productShippingV3_5);
      assertNotSame(productShippingV3_11, productShippingV3_7);
      assertNotSame(productShippingV3_11, productShippingV3_0);
      assertNotSame(productShippingV3_11, productShippingV3_4);
      assertNotSame(productShippingV3_11, productShippingV3_13);
      assertNotSame(productShippingV3_11, productShippingV3_2);
      assertNotSame(productShippingV3_11, productShippingV3_8);
      assertNotSame(productShippingV3_11, productShippingV3_1);
      assertNotSame(productShippingV3_11, productShippingV3_9);
      assertSame(productShippingV3_11, productShippingV3_12);
      assertNotSame(productShippingV3_11, productShippingV3_3);
      assertNotSame(productShippingV3_11, productShippingV3_10);
      assertNotNull(productShippingV3_15);
      assertNull(productShippingV3_15.getLocationGroupName());
      assertNull(productShippingV3_15.getService());
      assertEquals("56m&Q|)BUn%Mu$*UyV", productShippingV3_15.getCountry());
      assertNull(productShippingV3_15.getRegion());
      assertEquals("region", productShippingV3_15.getPostalCode());
      assertNull(productShippingV3_11.getService());
      assertNull(productShippingV3_11.getLocationGroupName());
      assertEquals("region", productShippingV3_11.getPostalCode());
      assertEquals("56m&Q|)BUn%Mu$*UyV", productShippingV3_11.getCountry());
      assertNull(productShippingV3_11.getRegion());
      
      boolean boolean2 = productShippingV3_0.equals(productShippingV3_15);
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_11));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_14));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_15));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_12));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_8));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_13));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_15.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_13));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_8));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_4));
      assertNotSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_13);
      assertNotSame(productShippingV3_0, productShippingV3_12);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertNotSame(productShippingV3_0, productShippingV3_14);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertNotSame(productShippingV3_0, productShippingV3_15);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNotSame(productShippingV3_15, productShippingV3_9);
      assertSame(productShippingV3_15, productShippingV3_11);
      assertNotSame(productShippingV3_15, productShippingV3_13);
      assertNotSame(productShippingV3_15, productShippingV3_7);
      assertNotSame(productShippingV3_15, productShippingV3_6);
      assertSame(productShippingV3_15, productShippingV3_12);
      assertNotSame(productShippingV3_15, productShippingV3_10);
      assertNotSame(productShippingV3_15, productShippingV3_3);
      assertNotSame(productShippingV3_15, productShippingV3_5);
      assertNotSame(productShippingV3_15, productShippingV3_4);
      assertNotSame(productShippingV3_15, productShippingV3_8);
      assertNotSame(productShippingV3_15, productShippingV3_1);
      assertNotSame(productShippingV3_15, productShippingV3_2);
      assertSame(productShippingV3_15, productShippingV3_14);
      assertNotSame(productShippingV3_15, productShippingV3_0);
      assertNotSame(productShippingV3_11, productShippingV3_6);
      assertSame(productShippingV3_11, productShippingV3_15);
      assertSame(productShippingV3_11, productShippingV3_14);
      assertNotSame(productShippingV3_11, productShippingV3_5);
      assertNotSame(productShippingV3_11, productShippingV3_7);
      assertNotSame(productShippingV3_11, productShippingV3_0);
      assertNotSame(productShippingV3_11, productShippingV3_4);
      assertNotSame(productShippingV3_11, productShippingV3_13);
      assertNotSame(productShippingV3_11, productShippingV3_2);
      assertNotSame(productShippingV3_11, productShippingV3_8);
      assertNotSame(productShippingV3_11, productShippingV3_1);
      assertNotSame(productShippingV3_11, productShippingV3_9);
      assertSame(productShippingV3_11, productShippingV3_12);
      assertNotSame(productShippingV3_11, productShippingV3_3);
      assertNotSame(productShippingV3_11, productShippingV3_10);
      assertFalse(boolean2);
      assertEquals("locationId", productShippingV3_0.getService());
      assertEquals("_", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("@", productShippingV3_0.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_0.getCountry());
      assertNull(productShippingV3_15.getLocationGroupName());
      assertNull(productShippingV3_15.getService());
      assertEquals("56m&Q|)BUn%Mu$*UyV", productShippingV3_15.getCountry());
      assertNull(productShippingV3_15.getRegion());
      assertEquals("region", productShippingV3_15.getPostalCode());
      assertNull(productShippingV3_11.getService());
      assertNull(productShippingV3_11.getLocationGroupName());
      assertEquals("region", productShippingV3_11.getPostalCode());
      assertEquals("56m&Q|)BUn%Mu$*UyV", productShippingV3_11.getCountry());
      assertNull(productShippingV3_11.getRegion());
      
      boolean boolean3 = productShippingV3_5.equals(productShippingV3_0);
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_11));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_14));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_15));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_12));
      assertFalse(productShippingV3_4.equals((Object)productShippingV3_14));
      assertFalse(productShippingV3_4.equals((Object)productShippingV3_12));
      assertFalse(productShippingV3_4.equals((Object)productShippingV3_11));
      assertFalse(productShippingV3_4.equals((Object)productShippingV3_15));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_12));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_15));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_14));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_11));
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertNotSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_13);
      assertNotSame(productShippingV3_0, productShippingV3_12);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertNotSame(productShippingV3_0, productShippingV3_14);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertNotSame(productShippingV3_0, productShippingV3_15);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_10);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertNotSame(productShippingV3_4, productShippingV3_11);
      assertNotSame(productShippingV3_4, productShippingV3_15);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_13);
      assertSame(productShippingV3_4, productShippingV3_9);
      assertNotSame(productShippingV3_4, productShippingV3_14);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertNotSame(productShippingV3_4, productShippingV3_12);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertNotSame(productShippingV3_5, productShippingV3_14);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_13);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertNotSame(productShippingV3_5, productShippingV3_12);
      assertNotSame(productShippingV3_5, productShippingV3_15);
      assertNotSame(productShippingV3_5, productShippingV3_11);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_10);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_9);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertTrue(boolean3);
      assertEquals("locationId", productShippingV3_0.getService());
      assertEquals("_", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("@", productShippingV3_0.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_0.getCountry());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("&hxmEJ(5K|+", productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertEquals("_", productShippingV3_4.getPostalCode());
      assertEquals("locationId", productShippingV3_4.getService());
      assertEquals("@", productShippingV3_4.getRegion());
      assertEquals("locationId", productShippingV3_5.getService());
      assertEquals("@", productShippingV3_5.getRegion());
      assertEquals("&hxmEJ(5K|+", productShippingV3_5.getCountry());
      assertEquals("_", productShippingV3_5.getPostalCode());
      assertEquals("", productShippingV3_5.getLocationGroupName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getCurrency());
      assertNull(price0.getValue());
      
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.postalCode("vIzr!#zF_0</ySgy");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getRegion());
      assertEquals("vIzr!#zF_0</ySgy", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("vIzr!#zF_0</ySgy", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      
      ProductShippingV3 productShippingV3_2 = new ProductShippingV3();
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_0));
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.country("locationId");
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_0));
      assertSame(productShippingV3_2, productShippingV3_3);
      assertNotSame(productShippingV3_2, productShippingV3_1);
      assertNotSame(productShippingV3_2, productShippingV3_0);
      assertNotSame(productShippingV3_3, productShippingV3_1);
      assertNotSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getService());
      assertEquals("locationId", productShippingV3_2.getCountry());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_3.getRegion());
      assertEquals("locationId", productShippingV3_3.getCountry());
      
      boolean boolean0 = productShippingV3_0.equals(productShippingV3_2);
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_0));
      assertNotSame(productShippingV3_0, productShippingV3_2);
      assertNotSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertNotSame(productShippingV3_2, productShippingV3_1);
      assertNotSame(productShippingV3_2, productShippingV3_0);
      assertFalse(boolean0);
      assertNull(productShippingV3_0.getRegion());
      assertEquals("vIzr!#zF_0</ySgy", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getService());
      assertEquals("locationId", productShippingV3_2.getCountry());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_0.region("price");
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_4.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_4.equals((Object)productShippingV3_2));
      assertNotSame(productShippingV3_0, productShippingV3_2);
      assertNotSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertNotSame(productShippingV3_4, productShippingV3_3);
      assertNotSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertNotNull(productShippingV3_4);
      assertEquals("price", productShippingV3_0.getRegion());
      assertEquals("vIzr!#zF_0</ySgy", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertEquals("vIzr!#zF_0</ySgy", productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getService());
      assertEquals("price", productShippingV3_4.getRegion());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.service("");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.region("country");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("country", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("country", productShippingV3_2.getRegion());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      Price price1 = price0.value("country");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertEquals("country", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("country", price1.getValue());
      assertNull(price1.getCurrency());
      
      productShippingV3_1.setLocationGroupName("region");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("region", productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("country", productShippingV3_1.getRegion());
      assertEquals("region", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      
      price1.setValue("class Price {\n");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertEquals("class Price {\n", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("class Price {\n", price1.getValue());
      assertNull(price1.getCurrency());
      
      Price price2 = price1.currency("class Price {\n");
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price1, price2);
      assertSame(price1, price0);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertNotNull(price2);
      assertEquals("class Price {\n", price0.getCurrency());
      assertEquals("class Price {\n", price0.getValue());
      assertEquals("class Price {\n", price1.getValue());
      assertEquals("class Price {\n", price1.getCurrency());
      assertEquals("class Price {\n", price2.getCurrency());
      assertEquals("class Price {\n", price2.getValue());
      
      productShippingV3_0.setLocationGroupName("");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      
      Price price3 = price1.currency("^Zp");
      assertSame(price0, price3);
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price1, price2);
      assertSame(price1, price0);
      assertSame(price1, price3);
      assertSame(price3, price2);
      assertSame(price3, price1);
      assertSame(price3, price0);
      assertNotNull(price3);
      assertEquals("class Price {\n", price0.getValue());
      assertEquals("^Zp", price0.getCurrency());
      assertEquals("class Price {\n", price1.getValue());
      assertEquals("^Zp", price1.getCurrency());
      assertEquals("^Zp", price3.getCurrency());
      assertEquals("class Price {\n", price3.getValue());
      
      price3.setCurrency((String) null);
      assertSame(price0, price3);
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price1, price2);
      assertSame(price1, price0);
      assertSame(price1, price3);
      assertSame(price3, price2);
      assertSame(price3, price1);
      assertSame(price3, price0);
      assertEquals("class Price {\n", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("class Price {\n", price1.getValue());
      assertNull(price1.getCurrency());
      assertNull(price3.getCurrency());
      assertEquals("class Price {\n", price3.getValue());
      
      price3.setCurrency("    currency: ");
      assertSame(price0, price3);
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price1, price2);
      assertSame(price1, price0);
      assertSame(price1, price3);
      assertSame(price3, price2);
      assertSame(price3, price1);
      assertSame(price3, price0);
      assertEquals("    currency: ", price0.getCurrency());
      assertEquals("class Price {\n", price0.getValue());
      assertEquals("class Price {\n", price1.getValue());
      assertEquals("    currency: ", price1.getCurrency());
      assertEquals("    currency: ", price3.getCurrency());
      assertEquals("class Price {\n", price3.getValue());
      
      ProductShippingV3 productShippingV3_3 = new ProductShippingV3();
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_2));
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getService());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_3.region((String) null);
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_4.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_4.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_4.equals((Object)productShippingV3_2));
      assertNotSame(productShippingV3_3, productShippingV3_0);
      assertNotSame(productShippingV3_3, productShippingV3_1);
      assertNotSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertNotSame(productShippingV3_4, productShippingV3_0);
      assertNotSame(productShippingV3_4, productShippingV3_1);
      assertNotSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertNotNull(productShippingV3_4);
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_4.getRegion());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getService());
      
      boolean boolean0 = productShippingV3_0.equals("class Price {\n");
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_3));
      assertNotSame(productShippingV3_0, productShippingV3_4);
      assertNotSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertFalse(boolean0);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_3.price(price0);
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_1));
      assertSame(price0, price3);
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertNotSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertNotSame(productShippingV3_3, productShippingV3_1);
      assertNotSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertNotSame(productShippingV3_5, productShippingV3_0);
      assertNotSame(productShippingV3_5, productShippingV3_2);
      assertNotSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertNotNull(productShippingV3_5);
      assertEquals("    currency: ", price0.getCurrency());
      assertEquals("class Price {\n", price0.getValue());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_5.getService());
      assertNull(productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getCountry());
      assertNull(productShippingV3_5.getRegion());
      
      ProductShippingV3 productShippingV3_6 = productShippingV3_1.price(price2);
      assertFalse(productShippingV3_6.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_6.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_6.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_4));
      assertNotSame(productShippingV3_6, productShippingV3_4);
      assertNotSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertNotSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertNotSame(productShippingV3_0, productShippingV3_4);
      assertNotSame(productShippingV3_0, productShippingV3_3);
      assertNotSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNotSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertNotSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(price0, price3);
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price1, price2);
      assertSame(price1, price0);
      assertSame(price1, price3);
      assertSame(price2, price3);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertNotNull(productShippingV3_6);
      assertNull(productShippingV3_6.getCountry());
      assertEquals("country", productShippingV3_6.getRegion());
      assertEquals("", productShippingV3_6.getLocationGroupName());
      assertNull(productShippingV3_6.getPostalCode());
      assertEquals("", productShippingV3_6.getService());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("country", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("    currency: ", price0.getCurrency());
      assertEquals("class Price {\n", price0.getValue());
      assertEquals("class Price {\n", price1.getValue());
      assertEquals("    currency: ", price1.getCurrency());
      assertEquals("class Price {\n", price2.getValue());
      assertEquals("    currency: ", price2.getCurrency());
      
      ProductShippingV3 productShippingV3_7 = productShippingV3_5.postalCode((String) null);
      assertFalse(productShippingV3_7.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_7.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_7.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_7.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_1));
      assertSame(productShippingV3_7, productShippingV3_5);
      assertNotSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertNotSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertNotSame(productShippingV3_7, productShippingV3_0);
      assertNotSame(productShippingV3_7, productShippingV3_6);
      assertSame(price0, price3);
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertNotSame(productShippingV3_3, productShippingV3_0);
      assertNotSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertNotSame(productShippingV3_3, productShippingV3_1);
      assertNotSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertNotSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertNotSame(productShippingV3_5, productShippingV3_0);
      assertNotSame(productShippingV3_5, productShippingV3_2);
      assertNotSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertNotNull(productShippingV3_7);
      assertNull(productShippingV3_7.getRegion());
      assertNull(productShippingV3_7.getLocationGroupName());
      assertNull(productShippingV3_7.getPostalCode());
      assertNull(productShippingV3_7.getCountry());
      assertNull(productShippingV3_7.getService());
      assertEquals("    currency: ", price0.getCurrency());
      assertEquals("class Price {\n", price0.getValue());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_5.getService());
      assertNull(productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getCountry());
      assertNull(productShippingV3_5.getRegion());
      
      boolean boolean1 = productShippingV3_7.equals(price2);
      assertFalse(productShippingV3_7.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_7.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_7.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_7.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_1));
      assertSame(productShippingV3_7, productShippingV3_5);
      assertNotSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertNotSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertNotSame(productShippingV3_7, productShippingV3_0);
      assertNotSame(productShippingV3_7, productShippingV3_6);
      assertSame(price0, price3);
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price1, price2);
      assertSame(price1, price0);
      assertSame(price1, price3);
      assertSame(price2, price3);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertNotSame(productShippingV3_3, productShippingV3_0);
      assertNotSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertNotSame(productShippingV3_3, productShippingV3_1);
      assertNotSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertNotSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertNotSame(productShippingV3_5, productShippingV3_0);
      assertNotSame(productShippingV3_5, productShippingV3_2);
      assertNotSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertFalse(boolean1);
      assertNull(productShippingV3_7.getRegion());
      assertNull(productShippingV3_7.getLocationGroupName());
      assertNull(productShippingV3_7.getPostalCode());
      assertNull(productShippingV3_7.getCountry());
      assertNull(productShippingV3_7.getService());
      assertEquals("    currency: ", price0.getCurrency());
      assertEquals("class Price {\n", price0.getValue());
      assertEquals("class Price {\n", price1.getValue());
      assertEquals("    currency: ", price1.getCurrency());
      assertEquals("class Price {\n", price2.getValue());
      assertEquals("    currency: ", price2.getCurrency());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_5.getService());
      assertNull(productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getCountry());
      assertNull(productShippingV3_5.getRegion());
      
      boolean boolean2 = productShippingV3_1.equals(productShippingV3_7);
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_7.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_7.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_7.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_7.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_1));
      assertNotSame(productShippingV3_0, productShippingV3_4);
      assertNotSame(productShippingV3_0, productShippingV3_3);
      assertNotSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertNotSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertNotSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertNotSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertNotSame(productShippingV3_7, productShippingV3_0);
      assertNotSame(productShippingV3_7, productShippingV3_6);
      assertNotSame(productShippingV3_1, productShippingV3_5);
      assertNotSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertNotSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(price0, price3);
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertNotSame(productShippingV3_3, productShippingV3_0);
      assertNotSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertNotSame(productShippingV3_3, productShippingV3_1);
      assertNotSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertNotSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertNotSame(productShippingV3_5, productShippingV3_0);
      assertNotSame(productShippingV3_5, productShippingV3_2);
      assertNotSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertFalse(boolean2);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_7.getRegion());
      assertNull(productShippingV3_7.getLocationGroupName());
      assertNull(productShippingV3_7.getPostalCode());
      assertNull(productShippingV3_7.getCountry());
      assertNull(productShippingV3_7.getService());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("country", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("    currency: ", price0.getCurrency());
      assertEquals("class Price {\n", price0.getValue());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_5.getService());
      assertNull(productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getCountry());
      assertNull(productShippingV3_5.getRegion());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.postalCode("locationGroupName");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("locationGroupName", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      
      ProductShippingV3 productShippingV3_2 = new ProductShippingV3();
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_0));
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_1.region("postalCode");
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_2));
      assertNotSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNotSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNotSame(productShippingV3_3, productShippingV3_2);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("postalCode", productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("locationGroupName", productShippingV3_1.getPostalCode());
      assertEquals("postalCode", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_3.getCountry());
      assertEquals("locationGroupName", productShippingV3_3.getPostalCode());
      assertEquals("postalCode", productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getLocationGroupName());
      
      boolean boolean0 = productShippingV3_0.equals(productShippingV3_2);
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_0));
      assertNotSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNotSame(productShippingV3_2, productShippingV3_3);
      assertNotSame(productShippingV3_2, productShippingV3_1);
      assertNotSame(productShippingV3_2, productShippingV3_0);
      assertFalse(boolean0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("postalCode", productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.locationGroupName("4Zt~&?=ENdkx#");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertEquals("4Zt~&?=ENdkx#", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("4Zt~&?=ENdkx#", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getService());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.service("r57");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(productShippingV3_2);
      assertEquals("4Zt~&?=ENdkx#", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("r57", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("r57", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("4Zt~&?=ENdkx#", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("4Zt~&?=ENdkx#", productShippingV3_2.getLocationGroupName());
      assertEquals("r57", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      
      productShippingV3_2.setService("");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertEquals("4Zt~&?=ENdkx#", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("4Zt~&?=ENdkx#", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("4Zt~&?=ENdkx#", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      
      String string0 = productShippingV3_1.getService();
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals("4Zt~&?=ENdkx#", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("4Zt~&?=ENdkx#", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getService());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.locationGroupName("\"z6+l{me0H};5>uc");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.service("service");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("service", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("service", productShippingV3_1.getService());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("service", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getCountry());
      
      boolean boolean0 = productShippingV3_0.equals(productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertTrue(boolean0);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("service", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("service", productShippingV3_1.getService());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("service", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getCountry());
      
      String string0 = productShippingV3_2.toString();
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(string0);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("service", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("service", productShippingV3_1.getService());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("service", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getCountry());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.region("service");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("service", productShippingV3_0.getRegion());
      assertEquals("service", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("service", productShippingV3_1.getService());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("service", productShippingV3_1.getRegion());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_2.getLocationGroupName());
      assertEquals("service", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("service", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_3.getLocationGroupName());
      assertEquals("service", productShippingV3_3.getService());
      assertEquals("service", productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getCountry());
      
      productShippingV3_2.hashCode();
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("service", productShippingV3_0.getRegion());
      assertEquals("service", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("service", productShippingV3_1.getService());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("service", productShippingV3_1.getRegion());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_2.getLocationGroupName());
      assertEquals("service", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("service", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_3.region("<XbWtghP<`FVlP`");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertNotNull(productShippingV3_4);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("service", productShippingV3_0.getService());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_0.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("service", productShippingV3_1.getService());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_2.getRegion());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("service", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_3.getRegion());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_3.getLocationGroupName());
      assertEquals("service", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_4.getCountry());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_4.getRegion());
      assertEquals("\"z6+l{me0H};5>uc", productShippingV3_4.getLocationGroupName());
      assertEquals("service", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      
      productShippingV3_4.setLocationGroupName("");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("service", productShippingV3_0.getService());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("service", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_2.getRegion());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("service", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_3.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_3.getRegion());
      assertEquals("service", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_4.getCountry());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_4.getRegion());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertEquals("service", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      
      String string1 = productShippingV3_3.getService();
      assertFalse(string1.equals((Object)string0));
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertEquals("service", string1);
      assertNotNull(string1);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("service", productShippingV3_0.getService());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("service", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_2.getRegion());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("service", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_3.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_3.getRegion());
      assertEquals("service", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getCountry());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_0.country("zK|eO@aMGqAvp-IH");
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertNotNull(productShippingV3_5);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("service", productShippingV3_0.getService());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_0.getRegion());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getPostalCode());
      assertEquals("service", productShippingV3_5.getService());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      
      String string2 = productShippingV3_3.toString();
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNotNull(string2);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("service", productShippingV3_0.getService());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_0.getRegion());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("service", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_2.getRegion());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("service", productShippingV3_2.getService());
      assertEquals("", productShippingV3_3.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_3.getRegion());
      assertEquals("service", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getPostalCode());
      
      productShippingV3_1.hashCode();
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("service", productShippingV3_0.getService());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_0.getRegion());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("service", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      
      productShippingV3_1.setService("locationId");
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("locationId", productShippingV3_0.getService());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_0.getRegion());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("locationId", productShippingV3_1.getService());
      
      String string3 = productShippingV3_3.getPostalCode();
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNull(string3);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("locationId", productShippingV3_0.getService());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_0.getRegion());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("locationId", productShippingV3_1.getService());
      assertEquals("locationId", productShippingV3_2.getService());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_2.getRegion());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("", productShippingV3_3.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_3.getRegion());
      assertEquals("locationId", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getPostalCode());
      
      ProductShippingV3 productShippingV3_6 = productShippingV3_5.locationGroupName("$");
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertNotNull(productShippingV3_6);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("$", productShippingV3_0.getLocationGroupName());
      assertEquals("locationId", productShippingV3_0.getService());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_0.getRegion());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_5.getRegion());
      assertEquals("$", productShippingV3_5.getLocationGroupName());
      assertEquals("locationId", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getPostalCode());
      assertEquals("locationId", productShippingV3_6.getService());
      assertNull(productShippingV3_6.getPostalCode());
      assertEquals("$", productShippingV3_6.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_6.getRegion());
      
      boolean boolean1 = productShippingV3_6.equals("\"z6+l{me0H};5>uc");
      assertFalse(boolean1 == boolean0);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertFalse(boolean1);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("$", productShippingV3_0.getLocationGroupName());
      assertEquals("locationId", productShippingV3_0.getService());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_0.getRegion());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_5.getRegion());
      assertEquals("$", productShippingV3_5.getLocationGroupName());
      assertEquals("locationId", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getPostalCode());
      assertEquals("locationId", productShippingV3_6.getService());
      assertNull(productShippingV3_6.getPostalCode());
      assertEquals("$", productShippingV3_6.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_6.getRegion());
      
      ProductShippingV3 productShippingV3_7 = productShippingV3_3.service("");
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNotNull(productShippingV3_7);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("$", productShippingV3_0.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_0.getRegion());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_7.getRegion());
      assertEquals("$", productShippingV3_7.getLocationGroupName());
      assertNull(productShippingV3_7.getPostalCode());
      assertEquals("", productShippingV3_7.getService());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_1.getRegion());
      assertEquals("$", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_2.getRegion());
      assertEquals("$", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("", productShippingV3_3.getService());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_3.getRegion());
      assertEquals("$", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      
      ProductShippingV3 productShippingV3_8 = productShippingV3_5.country("]oYzE`TXRaD");
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertNotNull(productShippingV3_8);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("$", productShippingV3_0.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_0.getRegion());
      assertEquals("]oYzE`TXRaD", productShippingV3_0.getCountry());
      assertEquals("]oYzE`TXRaD", productShippingV3_8.getCountry());
      assertNull(productShippingV3_8.getPostalCode());
      assertEquals("", productShippingV3_8.getService());
      assertEquals("$", productShippingV3_8.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_8.getRegion());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_5.getRegion());
      assertEquals("$", productShippingV3_5.getLocationGroupName());
      assertEquals("", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getPostalCode());
      assertEquals("]oYzE`TXRaD", productShippingV3_5.getCountry());
      
      ProductShippingV3 productShippingV3_9 = new ProductShippingV3();
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_8));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_1));
      assertNotNull(productShippingV3_9);
      assertNull(productShippingV3_9.getRegion());
      assertNull(productShippingV3_9.getService());
      assertNull(productShippingV3_9.getLocationGroupName());
      assertNull(productShippingV3_9.getPostalCode());
      assertNull(productShippingV3_9.getCountry());
      
      ProductShippingV3 productShippingV3_10 = productShippingV3_9.postalCode("<~wK=K&lo");
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_8));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_8));
      assertNotSame(productShippingV3_9, productShippingV3_5);
      assertNotSame(productShippingV3_9, productShippingV3_6);
      assertSame(productShippingV3_9, productShippingV3_10);
      assertNotSame(productShippingV3_9, productShippingV3_2);
      assertNotSame(productShippingV3_9, productShippingV3_7);
      assertNotSame(productShippingV3_9, productShippingV3_8);
      assertNotSame(productShippingV3_9, productShippingV3_0);
      assertNotSame(productShippingV3_9, productShippingV3_4);
      assertNotSame(productShippingV3_9, productShippingV3_3);
      assertNotSame(productShippingV3_9, productShippingV3_1);
      assertNotSame(productShippingV3_10, productShippingV3_1);
      assertNotSame(productShippingV3_10, productShippingV3_2);
      assertNotSame(productShippingV3_10, productShippingV3_5);
      assertNotSame(productShippingV3_10, productShippingV3_6);
      assertNotSame(productShippingV3_10, productShippingV3_7);
      assertSame(productShippingV3_10, productShippingV3_9);
      assertNotSame(productShippingV3_10, productShippingV3_4);
      assertNotSame(productShippingV3_10, productShippingV3_0);
      assertNotSame(productShippingV3_10, productShippingV3_3);
      assertNotSame(productShippingV3_10, productShippingV3_8);
      assertNotNull(productShippingV3_10);
      assertNull(productShippingV3_9.getRegion());
      assertEquals("<~wK=K&lo", productShippingV3_9.getPostalCode());
      assertNull(productShippingV3_9.getService());
      assertNull(productShippingV3_9.getLocationGroupName());
      assertNull(productShippingV3_9.getCountry());
      assertNull(productShippingV3_10.getRegion());
      assertEquals("<~wK=K&lo", productShippingV3_10.getPostalCode());
      assertNull(productShippingV3_10.getLocationGroupName());
      assertNull(productShippingV3_10.getService());
      assertNull(productShippingV3_10.getCountry());
      
      boolean boolean2 = productShippingV3_8.equals(productShippingV3_5);
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_8.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_8.equals((Object)productShippingV3_10));
      assertFalse(boolean2 == boolean1);
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_10));
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertNotSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertNotSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNotSame(productShippingV3_8, productShippingV3_9);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertNotSame(productShippingV3_8, productShippingV3_10);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertNotSame(productShippingV3_5, productShippingV3_9);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertNotSame(productShippingV3_5, productShippingV3_10);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertTrue(boolean2);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("$", productShippingV3_0.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_0.getRegion());
      assertEquals("]oYzE`TXRaD", productShippingV3_0.getCountry());
      assertEquals("]oYzE`TXRaD", productShippingV3_8.getCountry());
      assertNull(productShippingV3_8.getPostalCode());
      assertEquals("", productShippingV3_8.getService());
      assertEquals("$", productShippingV3_8.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_8.getRegion());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_5.getRegion());
      assertEquals("$", productShippingV3_5.getLocationGroupName());
      assertEquals("", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getPostalCode());
      assertEquals("]oYzE`TXRaD", productShippingV3_5.getCountry());
      
      Price price0 = productShippingV3_10.getPrice();
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_8));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_9.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_7));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_10.equals((Object)productShippingV3_8));
      assertNotSame(productShippingV3_9, productShippingV3_5);
      assertNotSame(productShippingV3_9, productShippingV3_6);
      assertSame(productShippingV3_9, productShippingV3_10);
      assertNotSame(productShippingV3_9, productShippingV3_2);
      assertNotSame(productShippingV3_9, productShippingV3_7);
      assertNotSame(productShippingV3_9, productShippingV3_8);
      assertNotSame(productShippingV3_9, productShippingV3_0);
      assertNotSame(productShippingV3_9, productShippingV3_4);
      assertNotSame(productShippingV3_9, productShippingV3_3);
      assertNotSame(productShippingV3_9, productShippingV3_1);
      assertNotSame(productShippingV3_10, productShippingV3_1);
      assertNotSame(productShippingV3_10, productShippingV3_2);
      assertNotSame(productShippingV3_10, productShippingV3_5);
      assertNotSame(productShippingV3_10, productShippingV3_6);
      assertNotSame(productShippingV3_10, productShippingV3_7);
      assertSame(productShippingV3_10, productShippingV3_9);
      assertNotSame(productShippingV3_10, productShippingV3_4);
      assertNotSame(productShippingV3_10, productShippingV3_0);
      assertNotSame(productShippingV3_10, productShippingV3_3);
      assertNotSame(productShippingV3_10, productShippingV3_8);
      assertNull(price0);
      assertNull(productShippingV3_9.getRegion());
      assertEquals("<~wK=K&lo", productShippingV3_9.getPostalCode());
      assertNull(productShippingV3_9.getService());
      assertNull(productShippingV3_9.getLocationGroupName());
      assertNull(productShippingV3_9.getCountry());
      assertNull(productShippingV3_10.getRegion());
      assertEquals("<~wK=K&lo", productShippingV3_10.getPostalCode());
      assertNull(productShippingV3_10.getLocationGroupName());
      assertNull(productShippingV3_10.getService());
      assertNull(productShippingV3_10.getCountry());
      
      ProductShippingV3 productShippingV3_11 = productShippingV3_1.price((Price) null);
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_9));
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertNotSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertNotSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertNotSame(productShippingV3_1, productShippingV3_10);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_11);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertNotSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_11, productShippingV3_5);
      assertSame(productShippingV3_11, productShippingV3_6);
      assertNotSame(productShippingV3_11, productShippingV3_10);
      assertSame(productShippingV3_11, productShippingV3_7);
      assertNotSame(productShippingV3_11, productShippingV3_9);
      assertSame(productShippingV3_11, productShippingV3_2);
      assertSame(productShippingV3_11, productShippingV3_8);
      assertSame(productShippingV3_11, productShippingV3_0);
      assertSame(productShippingV3_11, productShippingV3_4);
      assertSame(productShippingV3_11, productShippingV3_3);
      assertSame(productShippingV3_11, productShippingV3_1);
      assertNotNull(productShippingV3_11);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("$", productShippingV3_0.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_0.getRegion());
      assertEquals("]oYzE`TXRaD", productShippingV3_0.getCountry());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_1.getRegion());
      assertEquals("$", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("]oYzE`TXRaD", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("", productShippingV3_11.getService());
      assertNull(productShippingV3_11.getPostalCode());
      assertEquals("]oYzE`TXRaD", productShippingV3_11.getCountry());
      assertEquals("$", productShippingV3_11.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_11.getRegion());
      
      String string4 = productShippingV3_11.getRegion();
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_11.equals((Object)productShippingV3_9));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertNotSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertNotSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertNotSame(productShippingV3_1, productShippingV3_10);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_11);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertNotSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_11, productShippingV3_5);
      assertSame(productShippingV3_11, productShippingV3_6);
      assertNotSame(productShippingV3_11, productShippingV3_10);
      assertSame(productShippingV3_11, productShippingV3_7);
      assertNotSame(productShippingV3_11, productShippingV3_9);
      assertSame(productShippingV3_11, productShippingV3_2);
      assertSame(productShippingV3_11, productShippingV3_8);
      assertSame(productShippingV3_11, productShippingV3_0);
      assertSame(productShippingV3_11, productShippingV3_4);
      assertSame(productShippingV3_11, productShippingV3_3);
      assertSame(productShippingV3_11, productShippingV3_1);
      assertEquals("<XbWtghP<`FVlP`", string4);
      assertNotNull(string4);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("$", productShippingV3_0.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_0.getRegion());
      assertEquals("]oYzE`TXRaD", productShippingV3_0.getCountry());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_1.getRegion());
      assertEquals("$", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("]oYzE`TXRaD", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("", productShippingV3_11.getService());
      assertNull(productShippingV3_11.getPostalCode());
      assertEquals("]oYzE`TXRaD", productShippingV3_11.getCountry());
      assertEquals("$", productShippingV3_11.getLocationGroupName());
      assertEquals("<XbWtghP<`FVlP`", productShippingV3_11.getRegion());
      
      ProductShippingV3 productShippingV3_12 = productShippingV3_3.region("country");
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_12.equals((Object)productShippingV3_10));
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertNotSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_12);
      assertNotSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_12);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertNotSame(productShippingV3_1, productShippingV3_10);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_11);
      assertNotSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_11);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertNotSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertNotSame(productShippingV3_2, productShippingV3_10);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_12);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_11);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertNotSame(productShippingV3_3, productShippingV3_10);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_12);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNotSame(productShippingV3_3, productShippingV3_9);
      assertSame(productShippingV3_3, productShippingV3_8);
      assertSame(productShippingV3_12, productShippingV3_0);
      assertSame(productShippingV3_12, productShippingV3_1);
      assertSame(productShippingV3_12, productShippingV3_2);
      assertSame(productShippingV3_12, productShippingV3_11);
      assertNotSame(productShippingV3_12, productShippingV3_9);
      assertSame(productShippingV3_12, productShippingV3_8);
      assertNotSame(productShippingV3_12, productShippingV3_10);
      assertSame(productShippingV3_12, productShippingV3_7);
      assertSame(productShippingV3_12, productShippingV3_3);
      assertSame(productShippingV3_12, productShippingV3_5);
      assertSame(productShippingV3_12, productShippingV3_6);
      assertSame(productShippingV3_12, productShippingV3_4);
      assertNotNull(productShippingV3_12);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("$", productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getRegion());
      assertEquals("]oYzE`TXRaD", productShippingV3_0.getCountry());
      assertEquals("$", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("]oYzE`TXRaD", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("country", productShippingV3_1.getRegion());
      assertEquals("country", productShippingV3_2.getRegion());
      assertEquals("$", productShippingV3_2.getLocationGroupName());
      assertEquals("]oYzE`TXRaD", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("", productShippingV3_3.getService());
      assertEquals("country", productShippingV3_3.getRegion());
      assertEquals("]oYzE`TXRaD", productShippingV3_3.getCountry());
      assertEquals("$", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      assertEquals("country", productShippingV3_12.getRegion());
      assertEquals("]oYzE`TXRaD", productShippingV3_12.getCountry());
      assertEquals("$", productShippingV3_12.getLocationGroupName());
      assertNull(productShippingV3_12.getPostalCode());
      assertEquals("", productShippingV3_12.getService());
      
      ProductShippingV3 productShippingV3_13 = productShippingV3_2.country((String) null);
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_9));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_13.equals((Object)productShippingV3_10));
      assertFalse(productShippingV3_13.equals((Object)productShippingV3_9));
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_13);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertNotSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_12);
      assertNotSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_13);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertNotSame(productShippingV3_1, productShippingV3_10);
      assertNotSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_12);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_11);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_12);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_11);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertNotSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_13);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertNotSame(productShippingV3_2, productShippingV3_10);
      assertSame(productShippingV3_13, productShippingV3_4);
      assertSame(productShippingV3_13, productShippingV3_3);
      assertSame(productShippingV3_13, productShippingV3_8);
      assertSame(productShippingV3_13, productShippingV3_5);
      assertSame(productShippingV3_13, productShippingV3_7);
      assertSame(productShippingV3_13, productShippingV3_2);
      assertSame(productShippingV3_13, productShippingV3_1);
      assertSame(productShippingV3_13, productShippingV3_11);
      assertSame(productShippingV3_13, productShippingV3_12);
      assertSame(productShippingV3_13, productShippingV3_0);
      assertSame(productShippingV3_13, productShippingV3_6);
      assertNotSame(productShippingV3_13, productShippingV3_10);
      assertNotSame(productShippingV3_13, productShippingV3_9);
      assertNotNull(productShippingV3_13);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("$", productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("$", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("country", productShippingV3_1.getRegion());
      assertEquals("country", productShippingV3_2.getRegion());
      assertEquals("$", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_13.getCountry());
      assertEquals("$", productShippingV3_13.getLocationGroupName());
      assertEquals("country", productShippingV3_13.getRegion());
      assertNull(productShippingV3_13.getPostalCode());
      assertEquals("", productShippingV3_13.getService());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.country((String) null);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.locationGroupName("");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getCountry());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.region((String) null);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getService());
      assertEquals("", productShippingV3_3.getLocationGroupName());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      Price price1 = price0.value("locationId");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertEquals("locationId", price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(price1.getCurrency());
      assertEquals("locationId", price1.getValue());
      
      Price price2 = price1.currency((String) null);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertNotNull(price2);
      assertEquals("locationId", price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(price1.getCurrency());
      assertEquals("locationId", price1.getValue());
      assertEquals("locationId", price2.getValue());
      assertNull(price2.getCurrency());
      
      price0.setValue("value");
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertEquals("value", price0.getValue());
      assertNull(price0.getCurrency());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_1.price(price2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertNotNull(productShippingV3_4);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("value", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("value", price1.getValue());
      assertNull(price1.getCurrency());
      assertEquals("value", price2.getValue());
      assertNull(price2.getCurrency());
      assertNull(productShippingV3_4.getRegion());
      assertNull(productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getService());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_1.price(price0);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertNotNull(productShippingV3_5);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("value", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getService());
      assertNull(productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getCountry());
      
      ProductShippingV3 productShippingV3_6 = productShippingV3_5.locationId(price1);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertNotNull(productShippingV3_6);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("value", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("value", price1.getValue());
      assertNull(price1.getCurrency());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getService());
      assertNull(productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getCountry());
      assertNull(productShippingV3_6.getRegion());
      assertEquals("", productShippingV3_6.getLocationGroupName());
      assertNull(productShippingV3_6.getPostalCode());
      assertNull(productShippingV3_6.getService());
      assertNull(productShippingV3_6.getCountry());
      
      String string0 = productShippingV3_4.getLocationGroupName();
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertEquals("", string0);
      assertNotNull(string0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("value", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("value", price1.getValue());
      assertNull(price1.getCurrency());
      assertEquals("value", price2.getValue());
      assertNull(price2.getCurrency());
      assertNull(productShippingV3_4.getRegion());
      assertNull(productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getService());
      
      productShippingV3_0.setLocationId(price1);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("value", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("value", price1.getValue());
      assertNull(price1.getCurrency());
      
      ProductShippingV3 productShippingV3_7 = productShippingV3_1.postalCode("locationId");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertNotNull(productShippingV3_7);
      assertEquals("locationId", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("locationId", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_7.getLocationGroupName());
      assertNull(productShippingV3_7.getService());
      assertEquals("locationId", productShippingV3_7.getPostalCode());
      assertNull(productShippingV3_7.getCountry());
      assertNull(productShippingV3_7.getRegion());
      
      productShippingV3_7.setPostalCode("locationGroupName");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertEquals("locationGroupName", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("locationGroupName", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_7.getLocationGroupName());
      assertNull(productShippingV3_7.getService());
      assertNull(productShippingV3_7.getCountry());
      assertNull(productShippingV3_7.getRegion());
      assertEquals("locationGroupName", productShippingV3_7.getPostalCode());
      
      productShippingV3_7.setPostalCode("");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_7.getLocationGroupName());
      assertEquals("", productShippingV3_7.getPostalCode());
      assertNull(productShippingV3_7.getService());
      assertNull(productShippingV3_7.getCountry());
      assertNull(productShippingV3_7.getRegion());
      
      String string1 = productShippingV3_5.getPostalCode();
      assertTrue(string1.equals((Object)string0));
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertEquals("", string1);
      assertNotNull(string1);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("value", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getService());
      assertEquals("", productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getCountry());
      
      productShippingV3_4.setService("locationGroupName");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("locationGroupName", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("value", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("value", price1.getValue());
      assertNull(price1.getCurrency());
      assertEquals("value", price2.getValue());
      assertNull(price2.getCurrency());
      assertNull(productShippingV3_4.getRegion());
      assertEquals("locationGroupName", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getPostalCode());
      
      Price price3 = (Price)productShippingV3_1.getLocationId();
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(price3, price0);
      assertSame(price3, price1);
      assertSame(price3, price2);
      assertNotNull(price3);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("locationGroupName", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(price3.getCurrency());
      assertEquals("value", price3.getValue());
      
      String string2 = productShippingV3_5.toString();
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price0, price3);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertNotNull(string2);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("locationGroupName", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("value", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      assertEquals("locationGroupName", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      assertEquals("", productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getCountry());
      
      ProductShippingV3 productShippingV3_8 = productShippingV3_3.country("R~}DH]U4#v]w^'>17");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_8);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertNotNull(productShippingV3_8);
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("locationGroupName", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("locationGroupName", productShippingV3_2.getService());
      assertEquals("", productShippingV3_3.getPostalCode());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getRegion());
      assertEquals("locationGroupName", productShippingV3_3.getService());
      assertEquals("", productShippingV3_3.getLocationGroupName());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_8.getCountry());
      assertNull(productShippingV3_8.getRegion());
      assertEquals("locationGroupName", productShippingV3_8.getService());
      assertEquals("", productShippingV3_8.getLocationGroupName());
      assertEquals("", productShippingV3_8.getPostalCode());
      
      productShippingV3_8.setService("class ProductShippingV3 {\n    price: com.criteo.marketing.model.Price@0000000003\n    country: null\n    region: null\n    service: java.lang.String@0000000006\n    locationId: com.criteo.marketing.model.Price@0000000003\n    locationGroupName: java.lang.String@0000000002\n    postalCode: java.lang.String@0000000002\n}");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_8);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("", productShippingV3_3.getPostalCode());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getRegion());
      assertEquals("", productShippingV3_3.getLocationGroupName());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_8.getCountry());
      assertNull(productShippingV3_8.getRegion());
      assertEquals("", productShippingV3_8.getLocationGroupName());
      assertEquals("", productShippingV3_8.getPostalCode());
      
      String string3 = productShippingV3_6.getRegion();
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price0, price3);
      assertSame(price1, price0);
      assertSame(price1, price3);
      assertSame(price1, price2);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_8);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertNull(string3);
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("value", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("value", price1.getValue());
      assertNull(price1.getCurrency());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_5.getCountry());
      assertNull(productShippingV3_5.getRegion());
      assertEquals("", productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_6.getRegion());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_6.getCountry());
      assertEquals("", productShippingV3_6.getLocationGroupName());
      assertEquals("", productShippingV3_6.getPostalCode());
      
      ProductShippingV3 productShippingV3_9 = productShippingV3_6.service("");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price0, price3);
      assertSame(price1, price0);
      assertSame(price1, price3);
      assertSame(price1, price2);
      assertSame(productShippingV3_9, productShippingV3_0);
      assertSame(productShippingV3_9, productShippingV3_3);
      assertSame(productShippingV3_9, productShippingV3_2);
      assertSame(productShippingV3_9, productShippingV3_8);
      assertSame(productShippingV3_9, productShippingV3_4);
      assertSame(productShippingV3_9, productShippingV3_6);
      assertSame(productShippingV3_9, productShippingV3_7);
      assertSame(productShippingV3_9, productShippingV3_1);
      assertSame(productShippingV3_9, productShippingV3_5);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_9);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_9);
      assertSame(productShippingV3_6, productShippingV3_8);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertNotNull(productShippingV3_9);
      assertEquals("", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("value", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("value", price1.getValue());
      assertNull(price1.getCurrency());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_9.getCountry());
      assertNull(productShippingV3_9.getRegion());
      assertEquals("", productShippingV3_9.getLocationGroupName());
      assertEquals("", productShippingV3_9.getPostalCode());
      assertEquals("", productShippingV3_9.getService());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_5.getCountry());
      assertNull(productShippingV3_5.getRegion());
      assertEquals("", productShippingV3_5.getService());
      assertEquals("", productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_6.getRegion());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_6.getCountry());
      assertEquals("", productShippingV3_6.getLocationGroupName());
      assertEquals("", productShippingV3_6.getPostalCode());
      assertEquals("", productShippingV3_6.getService());
      
      ProductShippingV3 productShippingV3_10 = productShippingV3_0.locationGroupName("value");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_10, productShippingV3_4);
      assertSame(productShippingV3_10, productShippingV3_7);
      assertSame(productShippingV3_10, productShippingV3_1);
      assertSame(productShippingV3_10, productShippingV3_5);
      assertSame(productShippingV3_10, productShippingV3_6);
      assertSame(productShippingV3_10, productShippingV3_3);
      assertSame(productShippingV3_10, productShippingV3_2);
      assertSame(productShippingV3_10, productShippingV3_8);
      assertSame(productShippingV3_10, productShippingV3_0);
      assertSame(productShippingV3_10, productShippingV3_9);
      assertNotNull(productShippingV3_10);
      assertEquals("", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("value", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_10.getService());
      assertEquals("", productShippingV3_10.getPostalCode());
      assertNull(productShippingV3_10.getRegion());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_10.getCountry());
      assertEquals("value", productShippingV3_10.getLocationGroupName());
      
      String string4 = productShippingV3_10.getLocationGroupName();
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_10, productShippingV3_4);
      assertSame(productShippingV3_10, productShippingV3_7);
      assertSame(productShippingV3_10, productShippingV3_1);
      assertSame(productShippingV3_10, productShippingV3_5);
      assertSame(productShippingV3_10, productShippingV3_6);
      assertSame(productShippingV3_10, productShippingV3_3);
      assertSame(productShippingV3_10, productShippingV3_2);
      assertSame(productShippingV3_10, productShippingV3_8);
      assertSame(productShippingV3_10, productShippingV3_0);
      assertSame(productShippingV3_10, productShippingV3_9);
      assertEquals("value", string4);
      assertNotNull(string4);
      assertEquals("", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("value", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_10.getService());
      assertEquals("", productShippingV3_10.getPostalCode());
      assertNull(productShippingV3_10.getRegion());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_10.getCountry());
      assertEquals("value", productShippingV3_10.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_11 = productShippingV3_2.price(price2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_10);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_11);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_10);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_11);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price0, price3);
      assertSame(price1, price0);
      assertSame(price1, price3);
      assertSame(price1, price2);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertSame(price2, price3);
      assertSame(productShippingV3_11, productShippingV3_7);
      assertSame(productShippingV3_11, productShippingV3_10);
      assertSame(productShippingV3_11, productShippingV3_4);
      assertSame(productShippingV3_11, productShippingV3_9);
      assertSame(productShippingV3_11, productShippingV3_5);
      assertSame(productShippingV3_11, productShippingV3_1);
      assertSame(productShippingV3_11, productShippingV3_2);
      assertSame(productShippingV3_11, productShippingV3_0);
      assertSame(productShippingV3_11, productShippingV3_8);
      assertSame(productShippingV3_11, productShippingV3_3);
      assertSame(productShippingV3_11, productShippingV3_6);
      assertNotNull(productShippingV3_11);
      assertEquals("", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("value", productShippingV3_0.getLocationGroupName());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("value", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("value", productShippingV3_2.getLocationGroupName());
      assertEquals("value", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("value", price1.getValue());
      assertNull(price1.getCurrency());
      assertEquals("value", price2.getValue());
      assertNull(price2.getCurrency());
      assertEquals("R~}DH]U4#v]w^'>17", productShippingV3_11.getCountry());
      assertNull(productShippingV3_11.getRegion());
      assertEquals("", productShippingV3_11.getPostalCode());
      assertEquals("", productShippingV3_11.getService());
      assertEquals("value", productShippingV3_11.getLocationGroupName());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.service("");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.region("country");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("country", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("country", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("country", productShippingV3_2.getRegion());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      Price price1 = price0.value("country");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertNull(price0.getCurrency());
      assertEquals("country", price0.getValue());
      assertNull(price1.getCurrency());
      assertEquals("country", price1.getValue());
      
      productShippingV3_2.setLocationGroupName("value");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("country", productShippingV3_0.getRegion());
      assertEquals("value", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("value", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("country", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("country", productShippingV3_2.getRegion());
      assertEquals("value", productShippingV3_2.getLocationGroupName());
      
      price1.setValue("class Price {\n");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertEquals("class Price {\n", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("class Price {\n", price1.getValue());
      assertNull(price1.getCurrency());
      
      Price price2 = price1.currency("class Price {\n");
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertNotNull(price2);
      assertEquals("class Price {\n", price0.getValue());
      assertEquals("class Price {\n", price0.getCurrency());
      assertEquals("class Price {\n", price1.getCurrency());
      assertEquals("class Price {\n", price1.getValue());
      assertEquals("class Price {\n", price2.getValue());
      assertEquals("class Price {\n", price2.getCurrency());
      
      Price price3 = price1.currency("^Zp");
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price3);
      assertSame(price1, price2);
      assertSame(price3, price1);
      assertSame(price3, price2);
      assertSame(price3, price0);
      assertNotNull(price3);
      assertEquals("class Price {\n", price0.getValue());
      assertEquals("^Zp", price0.getCurrency());
      assertEquals("^Zp", price1.getCurrency());
      assertEquals("class Price {\n", price1.getValue());
      assertEquals("^Zp", price3.getCurrency());
      assertEquals("class Price {\n", price3.getValue());
      
      price3.setCurrency((String) null);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price3);
      assertSame(price1, price2);
      assertSame(price3, price1);
      assertSame(price3, price2);
      assertSame(price3, price0);
      assertEquals("class Price {\n", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("class Price {\n", price1.getValue());
      assertNull(price1.getCurrency());
      assertNull(price3.getCurrency());
      assertEquals("class Price {\n", price3.getValue());
      
      price3.setCurrency("    currency: ");
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price3);
      assertSame(price1, price2);
      assertSame(price3, price1);
      assertSame(price3, price2);
      assertSame(price3, price0);
      assertEquals("class Price {\n", price0.getValue());
      assertEquals("    currency: ", price0.getCurrency());
      assertEquals("    currency: ", price1.getCurrency());
      assertEquals("class Price {\n", price1.getValue());
      assertEquals("    currency: ", price3.getCurrency());
      assertEquals("class Price {\n", price3.getValue());
      
      ProductShippingV3 productShippingV3_3 = new ProductShippingV3();
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_2));
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_3.region((String) null);
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_4.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_4.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_4.equals((Object)productShippingV3_0));
      assertNotSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertNotSame(productShippingV3_3, productShippingV3_1);
      assertNotSame(productShippingV3_3, productShippingV3_2);
      assertNotSame(productShippingV3_4, productShippingV3_2);
      assertNotSame(productShippingV3_4, productShippingV3_1);
      assertNotSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertNotNull(productShippingV3_4);
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getRegion());
      assertNull(productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getService());
      assertNull(productShippingV3_4.getLocationGroupName());
      
      boolean boolean0 = productShippingV3_0.equals("class Price {\n");
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_4));
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNotSame(productShippingV3_0, productShippingV3_3);
      assertNotSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertFalse(boolean0);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("country", productShippingV3_0.getRegion());
      assertEquals("value", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getService());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_3.price(price0);
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_1));
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertNotSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertNotSame(productShippingV3_3, productShippingV3_1);
      assertNotSame(productShippingV3_3, productShippingV3_2);
      assertNotSame(productShippingV3_5, productShippingV3_2);
      assertNotSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertNotSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertNotNull(productShippingV3_5);
      assertEquals("class Price {\n", price0.getValue());
      assertEquals("    currency: ", price0.getCurrency());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getCountry());
      
      ProductShippingV3 productShippingV3_6 = productShippingV3_5.postalCode((String) null);
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_6.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_6.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_6.equals((Object)productShippingV3_0));
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertNotSame(productShippingV3_3, productShippingV3_0);
      assertNotSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertNotSame(productShippingV3_3, productShippingV3_2);
      assertNotSame(productShippingV3_5, productShippingV3_2);
      assertNotSame(productShippingV3_5, productShippingV3_0);
      assertNotSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertNotSame(productShippingV3_6, productShippingV3_1);
      assertNotSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertNotSame(productShippingV3_6, productShippingV3_0);
      assertNotNull(productShippingV3_6);
      assertEquals("class Price {\n", price0.getValue());
      assertEquals("    currency: ", price0.getCurrency());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getCountry());
      assertNull(productShippingV3_6.getRegion());
      assertNull(productShippingV3_6.getPostalCode());
      assertNull(productShippingV3_6.getCountry());
      assertNull(productShippingV3_6.getService());
      assertNull(productShippingV3_6.getLocationGroupName());
      
      boolean boolean1 = productShippingV3_6.equals(price2);
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_6.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_6.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_6.equals((Object)productShippingV3_0));
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price3);
      assertSame(price1, price2);
      assertSame(price2, price3);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertNotSame(productShippingV3_3, productShippingV3_0);
      assertNotSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertNotSame(productShippingV3_3, productShippingV3_2);
      assertNotSame(productShippingV3_5, productShippingV3_2);
      assertNotSame(productShippingV3_5, productShippingV3_0);
      assertNotSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertNotSame(productShippingV3_6, productShippingV3_1);
      assertNotSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertNotSame(productShippingV3_6, productShippingV3_0);
      assertFalse(boolean1);
      assertEquals("class Price {\n", price0.getValue());
      assertEquals("    currency: ", price0.getCurrency());
      assertEquals("    currency: ", price1.getCurrency());
      assertEquals("class Price {\n", price1.getValue());
      assertEquals("class Price {\n", price2.getValue());
      assertEquals("    currency: ", price2.getCurrency());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getCountry());
      assertNull(productShippingV3_6.getRegion());
      assertNull(productShippingV3_6.getPostalCode());
      assertNull(productShippingV3_6.getCountry());
      assertNull(productShippingV3_6.getService());
      assertNull(productShippingV3_6.getLocationGroupName());
      
      boolean boolean2 = productShippingV3_1.equals(productShippingV3_6);
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_5));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_6));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_4));
      assertFalse(productShippingV3_1.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_5.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_6.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_6.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_6.equals((Object)productShippingV3_0));
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNotSame(productShippingV3_0, productShippingV3_3);
      assertNotSame(productShippingV3_0, productShippingV3_5);
      assertNotSame(productShippingV3_0, productShippingV3_4);
      assertNotSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertNotSame(productShippingV3_1, productShippingV3_5);
      assertNotSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertNotSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotSame(productShippingV3_1, productShippingV3_3);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertNotSame(productShippingV3_3, productShippingV3_0);
      assertNotSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertNotSame(productShippingV3_3, productShippingV3_2);
      assertNotSame(productShippingV3_5, productShippingV3_2);
      assertNotSame(productShippingV3_5, productShippingV3_0);
      assertNotSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertNotSame(productShippingV3_6, productShippingV3_1);
      assertNotSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertNotSame(productShippingV3_6, productShippingV3_0);
      assertFalse(boolean2);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("country", productShippingV3_0.getRegion());
      assertEquals("value", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("value", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("country", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("class Price {\n", price0.getValue());
      assertEquals("    currency: ", price0.getCurrency());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getCountry());
      assertNull(productShippingV3_6.getRegion());
      assertNull(productShippingV3_6.getPostalCode());
      assertNull(productShippingV3_6.getCountry());
      assertNull(productShippingV3_6.getService());
      assertNull(productShippingV3_6.getLocationGroupName());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getCurrency());
      assertNull(price0.getValue());
      
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.postalCode("vIzr!#zF_0</ySgy");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertEquals("vIzr!#zF_0</ySgy", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("vIzr!#zF_0</ySgy", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      
      ProductShippingV3 productShippingV3_2 = new ProductShippingV3();
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_0));
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.price(price0);
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_0));
      assertFalse(productShippingV3_3.equals((Object)productShippingV3_1));
      assertNotSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertNotSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertNotSame(productShippingV3_3, productShippingV3_0);
      assertNotSame(productShippingV3_3, productShippingV3_1);
      assertNotNull(productShippingV3_3);
      assertNull(price0.getCurrency());
      assertNull(price0.getValue());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getCountry());
      
      boolean boolean0 = productShippingV3_0.equals(productShippingV3_2);
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_2));
      assertFalse(productShippingV3_0.equals((Object)productShippingV3_3));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_1));
      assertFalse(productShippingV3_2.equals((Object)productShippingV3_0));
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNotSame(productShippingV3_0, productShippingV3_2);
      assertNotSame(productShippingV3_0, productShippingV3_3);
      assertNotSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertNotSame(productShippingV3_2, productShippingV3_0);
      assertFalse(boolean0);
      assertEquals("vIzr!#zF_0</ySgy", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      
      ProductShippingV3 productShippingV3_1 = new ProductShippingV3();
      assertTrue(productShippingV3_1.equals((Object)productShippingV3_0));
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      
      boolean boolean0 = productShippingV3_0.equals(productShippingV3_1);
      assertTrue(productShippingV3_0.equals((Object)productShippingV3_1));
      assertTrue(productShippingV3_1.equals((Object)productShippingV3_0));
      assertNotSame(productShippingV3_0, productShippingV3_1);
      assertNotSame(productShippingV3_1, productShippingV3_0);
      assertTrue(boolean0);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      
      productShippingV3_0.hashCode();
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      Price price1 = price0.currency("price");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("price", price1.getCurrency());
      assertNull(price1.getValue());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.price(price1);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("price", price1.getCurrency());
      assertNull(price1.getValue());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      
      productShippingV3_1.setRegion("region");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("region", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("price", price1.getCurrency());
      assertNull(price1.getValue());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("region", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      
      productShippingV3_1.setCountry("postalCode");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertEquals("postalCode", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("region", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("price", price1.getCurrency());
      assertNull(price1.getValue());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("region", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("postalCode", productShippingV3_1.getCountry());
      
      boolean boolean0 = price0.equals(productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertFalse(boolean0);
      assertEquals("postalCode", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("region", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("price", price1.getCurrency());
      assertNull(price1.getValue());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("region", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("postalCode", productShippingV3_1.getCountry());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean1 = price0.equals(object0);
      assertTrue(boolean1 == boolean0);
      assertSame(price0, price1);
      assertFalse(boolean1);
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      
      productShippingV3_1.hashCode();
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertEquals("postalCode", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("region", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("price", price1.getCurrency());
      assertNull(price1.getValue());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("region", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("postalCode", productShippingV3_1.getCountry());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.region("");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(productShippingV3_2);
      assertEquals("postalCode", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("price", price1.getCurrency());
      assertNull(price1.getValue());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("postalCode", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getRegion());
      assertEquals("postalCode", productShippingV3_2.getCountry());
      
      String string0 = productShippingV3_0.toString();
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertNotNull(string0);
      assertEquals("postalCode", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getRegion());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_0.locationId("class ProductShippingV3 {\n    price: com.criteo.marketing.model.Price@0000000002\n    country: java.lang.String@0000000003\n    region: java.lang.String@0000000004\n    service: null\n    locationId: null\n    locationGroupName: null\n    postalCode: null\n}");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertNotNull(productShippingV3_3);
      assertEquals("postalCode", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getService());
      assertEquals("postalCode", productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getPostalCode());
      
      productShippingV3_3.setPostalCode("locationGroupName");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertEquals("postalCode", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_3.getRegion());
      assertEquals("locationGroupName", productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getService());
      assertEquals("postalCode", productShippingV3_3.getCountry());
      
      boolean boolean2 = productShippingV3_3.equals(price0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(price0, price1);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertFalse(boolean2);
      assertEquals("postalCode", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getPostalCode());
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("", productShippingV3_3.getRegion());
      assertEquals("locationGroupName", productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getService());
      assertEquals("postalCode", productShippingV3_3.getCountry());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_2.locationId((Object) null);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(productShippingV3_4);
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("locationGroupName", productShippingV3_4.getPostalCode());
      assertEquals("postalCode", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getService());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertEquals("postalCode", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getPostalCode());
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("price", price1.getCurrency());
      assertNull(price1.getValue());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("postalCode", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("locationGroupName", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getRegion());
      assertEquals("locationGroupName", productShippingV3_2.getPostalCode());
      assertEquals("postalCode", productShippingV3_2.getCountry());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_4.country("locationGroupName");
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(productShippingV3_5);
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("locationGroupName", productShippingV3_4.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getService());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("locationGroupName", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_5.getService());
      assertEquals("locationGroupName", productShippingV3_5.getCountry());
      assertEquals("", productShippingV3_5.getRegion());
      assertEquals("locationGroupName", productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getLocationGroupName());
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("price", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("locationGroupName", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("locationGroupName", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getRegion());
      assertEquals("locationGroupName", productShippingV3_2.getCountry());
      assertEquals("locationGroupName", productShippingV3_2.getPostalCode());
      
      productShippingV3_2.setService("");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("locationGroupName", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getPostalCode());
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("price", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("locationGroupName", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("locationGroupName", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getRegion());
      assertEquals("locationGroupName", productShippingV3_2.getCountry());
      assertEquals("locationGroupName", productShippingV3_2.getPostalCode());
      
      Price price2 = productShippingV3_1.getPrice();
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertNotNull(price2);
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("locationGroupName", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getPostalCode());
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("price", price2.getCurrency());
      assertNull(price2.getValue());
      assertEquals("price", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("locationGroupName", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("locationGroupName", productShippingV3_1.getPostalCode());
      
      String string1 = productShippingV3_4.getPostalCode();
      assertFalse(string1.equals((Object)string0));
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertEquals("locationGroupName", string1);
      assertNotNull(string1);
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("locationGroupName", productShippingV3_4.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("locationGroupName", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getPostalCode());
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("price", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("locationGroupName", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("locationGroupName", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getRegion());
      assertEquals("locationGroupName", productShippingV3_2.getCountry());
      assertEquals("locationGroupName", productShippingV3_2.getPostalCode());
      
      productShippingV3_4.setRegion("locationId");
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertEquals("locationGroupName", productShippingV3_4.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_4.getCountry());
      assertEquals("locationId", productShippingV3_4.getRegion());
      assertEquals("", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("locationId", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("locationGroupName", productShippingV3_0.getCountry());
      assertEquals("locationGroupName", productShippingV3_0.getPostalCode());
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("price", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("locationGroupName", productShippingV3_1.getCountry());
      assertEquals("locationId", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("locationGroupName", productShippingV3_1.getPostalCode());
      assertEquals("locationId", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("locationGroupName", productShippingV3_2.getCountry());
      assertEquals("locationGroupName", productShippingV3_2.getPostalCode());
      
      String string2 = productShippingV3_4.getLocationGroupName();
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNull(string2);
      assertEquals("locationGroupName", productShippingV3_4.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_4.getCountry());
      assertEquals("locationId", productShippingV3_4.getRegion());
      assertEquals("", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("locationId", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("locationGroupName", productShippingV3_0.getCountry());
      assertEquals("locationGroupName", productShippingV3_0.getPostalCode());
      assertEquals("price", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("price", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("locationGroupName", productShippingV3_1.getCountry());
      assertEquals("locationId", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("locationGroupName", productShippingV3_1.getPostalCode());
      assertEquals("locationId", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("locationGroupName", productShippingV3_2.getCountry());
      assertEquals("locationGroupName", productShippingV3_2.getPostalCode());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.country("    locationId: ");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("    locationId: ", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    locationId: ", productShippingV3_1.getCountry());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.locationId("    locationId: ");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("    locationId: ", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    locationId: ", productShippingV3_1.getCountry());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("    locationId: ", productShippingV3_2.getCountry());
      
      Object object0 = productShippingV3_0.getLocationId();
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertEquals("    locationId: ", object0);
      assertNotNull(object0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("    locationId: ", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_1.price(price0);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("    locationId: ", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    locationId: ", productShippingV3_1.getCountry());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getService());
      assertEquals("    locationId: ", productShippingV3_3.getCountry());
      
      productShippingV3_3.hashCode();
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("    locationId: ", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    locationId: ", productShippingV3_1.getCountry());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getService());
      assertEquals("    locationId: ", productShippingV3_3.getCountry());
      
      productShippingV3_1.setRegion("");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("    locationId: ", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("    locationId: ", productShippingV3_1.getCountry());
      
      productShippingV3_1.setCountry("");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_1.region("");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertNotNull(productShippingV3_4);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      assertNull(productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getRegion());
      
      String string0 = productShippingV3_2.getRegion();
      assertFalse(string0.equals((Object)object0));
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertEquals("", string0);
      assertNotNull(string0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getRegion());
      assertEquals("", productShippingV3_2.getCountry());
      
      boolean boolean0 = productShippingV3_4.equals("");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertFalse(boolean0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      assertNull(productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getRegion());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_4.service("price");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertNotNull(productShippingV3_5);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("price", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("price", productShippingV3_4.getService());
      assertEquals("", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getRegion());
      assertNull(productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getPostalCode());
      assertEquals("", productShippingV3_5.getCountry());
      assertEquals("", productShippingV3_5.getRegion());
      assertEquals("price", productShippingV3_5.getService());
      
      ProductShippingV3 productShippingV3_6 = productShippingV3_5.locationGroupName("");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertNotNull(productShippingV3_6);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("price", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("price", productShippingV3_4.getService());
      assertEquals("", productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getPostalCode());
      assertEquals("", productShippingV3_5.getCountry());
      assertEquals("", productShippingV3_5.getRegion());
      assertEquals("price", productShippingV3_5.getService());
      assertEquals("", productShippingV3_6.getLocationGroupName());
      assertNull(productShippingV3_6.getPostalCode());
      assertEquals("price", productShippingV3_6.getService());
      assertEquals("", productShippingV3_6.getCountry());
      assertEquals("", productShippingV3_6.getRegion());
      
      ProductShippingV3 productShippingV3_7 = productShippingV3_5.price(price0);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertNotNull(productShippingV3_7);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("price", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("price", productShippingV3_4.getService());
      assertEquals("", productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getPostalCode());
      assertEquals("", productShippingV3_5.getCountry());
      assertEquals("", productShippingV3_5.getRegion());
      assertEquals("price", productShippingV3_5.getService());
      assertEquals("", productShippingV3_7.getCountry());
      assertEquals("", productShippingV3_7.getRegion());
      assertEquals("", productShippingV3_7.getLocationGroupName());
      assertEquals("price", productShippingV3_7.getService());
      assertNull(productShippingV3_7.getPostalCode());
      
      productShippingV3_5.setService("");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("", productShippingV3_5.getService());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getPostalCode());
      assertEquals("", productShippingV3_5.getCountry());
      assertEquals("", productShippingV3_5.getRegion());
      
      String string1 = productShippingV3_4.toString();
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)object0));
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertNotNull(string1);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getRegion());
      
      productShippingV3_4.hashCode();
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getRegion());
      
      Price price1 = productShippingV3_0.getPrice();
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertNull(price1.getValue());
      assertNull(price1.getCurrency());
      
      ProductShippingV3 productShippingV3_8 = productShippingV3_6.region("price");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_8);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertNotNull(productShippingV3_8);
      assertEquals("price", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("price", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_8.getService());
      assertNull(productShippingV3_8.getPostalCode());
      assertEquals("", productShippingV3_8.getCountry());
      assertEquals("", productShippingV3_8.getLocationGroupName());
      assertEquals("price", productShippingV3_8.getRegion());
      assertEquals("", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertEquals("price", productShippingV3_4.getRegion());
      assertEquals("", productShippingV3_5.getService());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      assertEquals("price", productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getPostalCode());
      assertEquals("", productShippingV3_5.getCountry());
      assertEquals("", productShippingV3_6.getLocationGroupName());
      assertNull(productShippingV3_6.getPostalCode());
      assertEquals("", productShippingV3_6.getService());
      assertEquals("", productShippingV3_6.getCountry());
      assertEquals("price", productShippingV3_6.getRegion());
      
      productShippingV3_8.setRegion((String) null);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_8);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      assertNull(productShippingV3_8.getRegion());
      assertEquals("", productShippingV3_8.getService());
      assertNull(productShippingV3_8.getPostalCode());
      assertEquals("", productShippingV3_8.getCountry());
      assertEquals("", productShippingV3_8.getLocationGroupName());
      assertEquals("", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getRegion());
      assertEquals("", productShippingV3_5.getService());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getPostalCode());
      assertEquals("", productShippingV3_5.getCountry());
      assertNull(productShippingV3_5.getRegion());
      assertEquals("", productShippingV3_6.getLocationGroupName());
      assertNull(productShippingV3_6.getPostalCode());
      assertEquals("", productShippingV3_6.getService());
      assertEquals("", productShippingV3_6.getCountry());
      assertNull(productShippingV3_6.getRegion());
      
      Object object1 = new Object();
      assertNotNull(object1);
      
      productShippingV3_6.setLocationGroupName("service");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_8);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertEquals("service", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      assertEquals("service", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getCountry());
      assertEquals("service", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getRegion());
      assertEquals("service", productShippingV3_5.getLocationGroupName());
      assertEquals("", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getPostalCode());
      assertEquals("", productShippingV3_5.getCountry());
      assertNull(productShippingV3_5.getRegion());
      assertNull(productShippingV3_6.getPostalCode());
      assertEquals("", productShippingV3_6.getService());
      assertEquals("service", productShippingV3_6.getLocationGroupName());
      assertEquals("", productShippingV3_6.getCountry());
      assertNull(productShippingV3_6.getRegion());
      
      ProductShippingV3 productShippingV3_9 = productShippingV3_4.service("i+q)Vp99G");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_9, productShippingV3_5);
      assertSame(productShippingV3_9, productShippingV3_0);
      assertSame(productShippingV3_9, productShippingV3_8);
      assertSame(productShippingV3_9, productShippingV3_6);
      assertSame(productShippingV3_9, productShippingV3_2);
      assertSame(productShippingV3_9, productShippingV3_4);
      assertSame(productShippingV3_9, productShippingV3_3);
      assertSame(productShippingV3_9, productShippingV3_1);
      assertSame(productShippingV3_9, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_9);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertNotNull(productShippingV3_9);
      assertEquals("service", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("i+q)Vp99G", productShippingV3_0.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("i+q)Vp99G", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      assertEquals("service", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_9.getPostalCode());
      assertEquals("service", productShippingV3_9.getLocationGroupName());
      assertEquals("", productShippingV3_9.getCountry());
      assertEquals("i+q)Vp99G", productShippingV3_9.getService());
      assertNull(productShippingV3_9.getRegion());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("i+q)Vp99G", productShippingV3_4.getService());
      assertEquals("", productShippingV3_4.getCountry());
      assertEquals("service", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getRegion());
      
      ProductShippingV3 productShippingV3_10 = productShippingV3_8.locationId(object1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_10);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_9);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_10);
      assertSame(productShippingV3_10, productShippingV3_1);
      assertSame(productShippingV3_10, productShippingV3_8);
      assertSame(productShippingV3_10, productShippingV3_6);
      assertSame(productShippingV3_10, productShippingV3_0);
      assertSame(productShippingV3_10, productShippingV3_7);
      assertSame(productShippingV3_10, productShippingV3_9);
      assertSame(productShippingV3_10, productShippingV3_2);
      assertSame(productShippingV3_10, productShippingV3_3);
      assertSame(productShippingV3_10, productShippingV3_4);
      assertSame(productShippingV3_10, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_10);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_9);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_9);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_10);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_10);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_8);
      assertSame(productShippingV3_6, productShippingV3_9);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertNotNull(productShippingV3_10);
      assertEquals("service", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("i+q)Vp99G", productShippingV3_0.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("i+q)Vp99G", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      assertEquals("service", productShippingV3_1.getLocationGroupName());
      assertEquals("service", productShippingV3_8.getLocationGroupName());
      assertNull(productShippingV3_8.getRegion());
      assertNull(productShippingV3_8.getPostalCode());
      assertEquals("i+q)Vp99G", productShippingV3_8.getService());
      assertEquals("", productShippingV3_8.getCountry());
      assertNull(productShippingV3_10.getRegion());
      assertNull(productShippingV3_10.getPostalCode());
      assertEquals("service", productShippingV3_10.getLocationGroupName());
      assertEquals("", productShippingV3_10.getCountry());
      assertEquals("i+q)Vp99G", productShippingV3_10.getService());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("i+q)Vp99G", productShippingV3_4.getService());
      assertEquals("", productShippingV3_4.getCountry());
      assertEquals("service", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getRegion());
      assertEquals("i+q)Vp99G", productShippingV3_5.getService());
      assertEquals("service", productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getPostalCode());
      assertEquals("", productShippingV3_5.getCountry());
      assertNull(productShippingV3_5.getRegion());
      assertNull(productShippingV3_6.getPostalCode());
      assertEquals("service", productShippingV3_6.getLocationGroupName());
      assertEquals("", productShippingV3_6.getCountry());
      assertEquals("i+q)Vp99G", productShippingV3_6.getService());
      assertNull(productShippingV3_6.getRegion());
      
      productShippingV3_2.setLocationGroupName("region");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_10);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_10);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertEquals("region", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("i+q)Vp99G", productShippingV3_0.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("i+q)Vp99G", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("region", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getCountry());
      assertEquals("region", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("i+q)Vp99G", productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getCountry());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getLocationGroupName());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getCurrency());
      assertNull(price0.getValue());
      
      Price price1 = price0.currency("*7::j");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertNull(price0.getValue());
      assertEquals("*7::j", price0.getCurrency());
      assertNull(price1.getValue());
      assertEquals("*7::j", price1.getCurrency());
      
      Price price2 = price0.currency("");
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price2, price1);
      assertSame(price2, price0);
      assertNotNull(price2);
      assertEquals("", price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("", price2.getCurrency());
      assertNull(price2.getValue());
      
      productShippingV3_0.setService("n/'+p{sy;-3");
      assertEquals("n/'+p{sy;-3", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getLocationGroupName());
      
      Price price3 = price0.value("^uZ7Zr7dQIzX)R$>");
      assertSame(price0, price1);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price3, price2);
      assertSame(price3, price0);
      assertSame(price3, price1);
      assertNotNull(price3);
      assertEquals("", price0.getCurrency());
      assertEquals("^uZ7Zr7dQIzX)R$>", price0.getValue());
      assertEquals("", price3.getCurrency());
      assertEquals("^uZ7Zr7dQIzX)R$>", price3.getValue());
      
      Price price4 = price0.value("1kCUI!");
      assertSame(price0, price1);
      assertSame(price0, price4);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price4, price2);
      assertSame(price4, price0);
      assertSame(price4, price3);
      assertSame(price4, price1);
      assertNotNull(price4);
      assertEquals("", price0.getCurrency());
      assertEquals("1kCUI!", price0.getValue());
      assertEquals("", price4.getCurrency());
      assertEquals("1kCUI!", price4.getValue());
      
      productShippingV3_0.setPrice(price3);
      assertSame(price0, price1);
      assertSame(price0, price4);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price3, price2);
      assertSame(price3, price0);
      assertSame(price3, price1);
      assertSame(price3, price4);
      assertEquals("n/'+p{sy;-3", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("", price0.getCurrency());
      assertEquals("1kCUI!", price0.getValue());
      assertEquals("", price3.getCurrency());
      assertEquals("1kCUI!", price3.getValue());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.locationId(price3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price0, price4);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price3, price2);
      assertSame(price3, price0);
      assertSame(price3, price1);
      assertSame(price3, price4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertEquals("n/'+p{sy;-3", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("", price0.getCurrency());
      assertEquals("1kCUI!", price0.getValue());
      assertEquals("", price3.getCurrency());
      assertEquals("1kCUI!", price3.getValue());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("n/'+p{sy;-3", productShippingV3_1.getService());
      
      price0.setValue("&vwUAei6=}L2");
      assertSame(price0, price1);
      assertSame(price0, price4);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertEquals("", price0.getCurrency());
      assertEquals("&vwUAei6=}L2", price0.getValue());
      
      productShippingV3_1.hashCode();
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price0, price4);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price3, price2);
      assertSame(price3, price0);
      assertSame(price3, price1);
      assertSame(price3, price4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertEquals("n/'+p{sy;-3", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("", price0.getCurrency());
      assertEquals("&vwUAei6=}L2", price0.getValue());
      assertEquals("&vwUAei6=}L2", price3.getValue());
      assertEquals("", price3.getCurrency());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("n/'+p{sy;-3", productShippingV3_1.getService());
      
      productShippingV3_0.setService("service");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("service", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      
      productShippingV3_0.setLocationGroupName("K89h_4/");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("service", productShippingV3_0.getService());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      
      productShippingV3_1.setService("locationId");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price0, price4);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price3, price2);
      assertSame(price3, price0);
      assertSame(price3, price1);
      assertSame(price3, price4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("locationId", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      assertEquals("", price0.getCurrency());
      assertEquals("&vwUAei6=}L2", price0.getValue());
      assertEquals("&vwUAei6=}L2", price3.getValue());
      assertEquals("", price3.getCurrency());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("K89h_4/", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("locationId", productShippingV3_1.getService());
      
      Price price5 = (Price)productShippingV3_1.getLocationId();
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price0, price4);
      assertSame(price0, price3);
      assertSame(price0, price5);
      assertSame(price0, price2);
      assertSame(price3, price5);
      assertSame(price3, price2);
      assertSame(price3, price0);
      assertSame(price3, price1);
      assertSame(price3, price4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(price5, price4);
      assertSame(price5, price1);
      assertSame(price5, price0);
      assertSame(price5, price2);
      assertSame(price5, price3);
      assertNotNull(price5);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("locationId", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      assertEquals("", price0.getCurrency());
      assertEquals("&vwUAei6=}L2", price0.getValue());
      assertEquals("&vwUAei6=}L2", price3.getValue());
      assertEquals("", price3.getCurrency());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("K89h_4/", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("locationId", productShippingV3_1.getService());
      assertEquals("", price5.getCurrency());
      assertEquals("&vwUAei6=}L2", price5.getValue());
      
      productShippingV3_1.setService("D\"`g fNz_");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price0, price4);
      assertSame(price0, price3);
      assertSame(price0, price5);
      assertSame(price0, price2);
      assertSame(price3, price5);
      assertSame(price3, price2);
      assertSame(price3, price0);
      assertSame(price3, price1);
      assertSame(price3, price4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("D\"`g fNz_", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      assertEquals("", price0.getCurrency());
      assertEquals("&vwUAei6=}L2", price0.getValue());
      assertEquals("&vwUAei6=}L2", price3.getValue());
      assertEquals("", price3.getCurrency());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("K89h_4/", productShippingV3_1.getLocationGroupName());
      assertEquals("D\"`g fNz_", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      
      String string0 = productShippingV3_1.toString();
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price0, price4);
      assertSame(price0, price3);
      assertSame(price0, price5);
      assertSame(price0, price2);
      assertSame(price3, price5);
      assertSame(price3, price2);
      assertSame(price3, price0);
      assertSame(price3, price1);
      assertSame(price3, price4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(string0);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("D\"`g fNz_", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      assertEquals("", price0.getCurrency());
      assertEquals("&vwUAei6=}L2", price0.getValue());
      assertEquals("&vwUAei6=}L2", price3.getValue());
      assertEquals("", price3.getCurrency());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("K89h_4/", productShippingV3_1.getLocationGroupName());
      assertEquals("D\"`g fNz_", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      
      productShippingV3_0.setService("41g)s[IrZOxH4@OPc9W");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getService());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      
      String string1 = productShippingV3_1.toString();
      assertFalse(string1.equals((Object)string0));
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price0, price4);
      assertSame(price0, price3);
      assertSame(price0, price5);
      assertSame(price0, price2);
      assertSame(price3, price5);
      assertSame(price3, price2);
      assertSame(price3, price0);
      assertSame(price3, price1);
      assertSame(price3, price4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(string1);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getService());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      assertEquals("", price0.getCurrency());
      assertEquals("&vwUAei6=}L2", price0.getValue());
      assertEquals("&vwUAei6=}L2", price3.getValue());
      assertEquals("", price3.getCurrency());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("K89h_4/", productShippingV3_1.getLocationGroupName());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      
      productShippingV3_0.setRegion("HKPr1dI@_6;6");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("HKPr1dI@_6;6", productShippingV3_0.getRegion());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getService());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      
      String string2 = productShippingV3_0.getCountry();
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNull(string2);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("HKPr1dI@_6;6", productShippingV3_0.getRegion());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getService());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_0.postalCode("41g)s[IrZOxH4@OPc9W");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("HKPr1dI@_6;6", productShippingV3_0.getRegion());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getPostalCode());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getService());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      assertEquals("K89h_4/", productShippingV3_2.getLocationGroupName());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_2.getPostalCode());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("HKPr1dI@_6;6", productShippingV3_2.getRegion());
      
      String string3 = productShippingV3_1.getLocationGroupName();
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price0, price4);
      assertSame(price0, price3);
      assertSame(price0, price5);
      assertSame(price0, price2);
      assertSame(price3, price5);
      assertSame(price3, price2);
      assertSame(price3, price0);
      assertSame(price3, price1);
      assertSame(price3, price4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertEquals("K89h_4/", string3);
      assertNotNull(string3);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("HKPr1dI@_6;6", productShippingV3_0.getRegion());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getPostalCode());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getService());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      assertEquals("", price0.getCurrency());
      assertEquals("&vwUAei6=}L2", price0.getValue());
      assertEquals("&vwUAei6=}L2", price3.getValue());
      assertEquals("", price3.getCurrency());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("K89h_4/", productShippingV3_1.getLocationGroupName());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_1.getPostalCode());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_1.getService());
      assertEquals("HKPr1dI@_6;6", productShippingV3_1.getRegion());
      
      boolean boolean0 = productShippingV3_1.equals("class ProductShippingV3 {\n    price: com.criteo.marketing.model.Price@0000000002\n    country: null\n    region: null\n    service: java.lang.String@0000000006\n    locationId: com.criteo.marketing.model.Price@0000000002\n    locationGroupName: java.lang.String@0000000007\n    postalCode: null\n}");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price0, price4);
      assertSame(price0, price3);
      assertSame(price0, price5);
      assertSame(price0, price2);
      assertSame(price3, price5);
      assertSame(price3, price2);
      assertSame(price3, price0);
      assertSame(price3, price1);
      assertSame(price3, price4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertFalse(boolean0);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("HKPr1dI@_6;6", productShippingV3_0.getRegion());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getPostalCode());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getService());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      assertEquals("", price0.getCurrency());
      assertEquals("&vwUAei6=}L2", price0.getValue());
      assertEquals("&vwUAei6=}L2", price3.getValue());
      assertEquals("", price3.getCurrency());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("K89h_4/", productShippingV3_1.getLocationGroupName());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_1.getPostalCode());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_1.getService());
      assertEquals("HKPr1dI@_6;6", productShippingV3_1.getRegion());
      
      Price price6 = productShippingV3_2.getPrice();
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(price6, price0);
      assertSame(price6, price2);
      assertSame(price6, price3);
      assertSame(price6, price5);
      assertSame(price6, price1);
      assertSame(price6, price4);
      assertNotNull(price6);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("HKPr1dI@_6;6", productShippingV3_0.getRegion());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getPostalCode());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getService());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      assertEquals("K89h_4/", productShippingV3_2.getLocationGroupName());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_2.getPostalCode());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("HKPr1dI@_6;6", productShippingV3_2.getRegion());
      assertEquals("", price6.getCurrency());
      assertEquals("&vwUAei6=}L2", price6.getValue());
      
      String string4 = productShippingV3_2.getCountry();
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNull(string4);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("HKPr1dI@_6;6", productShippingV3_0.getRegion());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getPostalCode());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getService());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      assertEquals("K89h_4/", productShippingV3_2.getLocationGroupName());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_2.getPostalCode());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("HKPr1dI@_6;6", productShippingV3_2.getRegion());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_0.country("currency");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertNotNull(productShippingV3_3);
      assertEquals("currency", productShippingV3_0.getCountry());
      assertEquals("HKPr1dI@_6;6", productShippingV3_0.getRegion());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getPostalCode());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getService());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_3.getPostalCode());
      assertEquals("currency", productShippingV3_3.getCountry());
      assertEquals("HKPr1dI@_6;6", productShippingV3_3.getRegion());
      assertEquals("K89h_4/", productShippingV3_3.getLocationGroupName());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_3.getService());
      
      productShippingV3_0.hashCode();
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertEquals("currency", productShippingV3_0.getCountry());
      assertEquals("HKPr1dI@_6;6", productShippingV3_0.getRegion());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getPostalCode());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getService());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_0.country("locationId");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertNotNull(productShippingV3_4);
      assertEquals("locationId", productShippingV3_0.getCountry());
      assertEquals("HKPr1dI@_6;6", productShippingV3_0.getRegion());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getPostalCode());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_0.getService());
      assertEquals("K89h_4/", productShippingV3_0.getLocationGroupName());
      assertEquals("locationId", productShippingV3_4.getCountry());
      assertEquals("HKPr1dI@_6;6", productShippingV3_4.getRegion());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_4.getService());
      assertEquals("41g)s[IrZOxH4@OPc9W", productShippingV3_4.getPostalCode());
      assertEquals("K89h_4/", productShippingV3_4.getLocationGroupName());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      Price price1 = price0.value("\"");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertEquals("\"", price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(price1.getCurrency());
      assertEquals("\"", price1.getValue());
      
      boolean boolean0 = price1.equals(productShippingV3_0);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertFalse(boolean0);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("\"", price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(price1.getCurrency());
      assertEquals("\"", price1.getValue());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.price(price1);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("\"", price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(price1.getCurrency());
      assertEquals("\"", price1.getValue());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.country("");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("\"", price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(price1.getCurrency());
      assertEquals("\"", price1.getValue());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getCountry());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_0.postalCode("|)*4jd&KO36<x\"");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getService());
      assertEquals("|)*4jd&KO36<x\"", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_3.getService());
      assertEquals("", productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertEquals("|)*4jd&KO36<x\"", productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getRegion());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_0.postalCode((String) null);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertNotNull(productShippingV3_4);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getRegion());
      assertNull(productShippingV3_4.getLocationGroupName());
      
      productShippingV3_4.setLocationGroupName("Xl%");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("Xl%", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_4.getCountry());
      assertEquals("Xl%", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getRegion());
      
      boolean boolean1 = productShippingV3_4.equals((Object) null);
      assertTrue(boolean1 == boolean0);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertFalse(boolean1);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("Xl%", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_4.getCountry());
      assertEquals("Xl%", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getRegion());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_4.locationId((Object) null);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertNotNull(productShippingV3_5);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("Xl%", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_4.getCountry());
      assertEquals("Xl%", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getRegion());
      assertEquals("", productShippingV3_5.getCountry());
      assertEquals("Xl%", productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getService());
      
      String string0 = productShippingV3_5.getRegion();
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertNull(string0);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("Xl%", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_4.getCountry());
      assertEquals("Xl%", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getRegion());
      assertEquals("", productShippingV3_5.getCountry());
      assertEquals("Xl%", productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getService());
      
      ProductShippingV3 productShippingV3_6 = productShippingV3_0.locationGroupName("price");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertNotNull(productShippingV3_6);
      assertNull(productShippingV3_0.getService());
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertNull(productShippingV3_6.getRegion());
      assertNull(productShippingV3_6.getService());
      assertEquals("price", productShippingV3_6.getLocationGroupName());
      assertNull(productShippingV3_6.getPostalCode());
      assertEquals("", productShippingV3_6.getCountry());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      ProductShippingV3 productShippingV3_7 = productShippingV3_6.locationId(object0);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertNotNull(productShippingV3_7);
      assertNull(productShippingV3_0.getService());
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertNull(productShippingV3_6.getRegion());
      assertNull(productShippingV3_6.getService());
      assertEquals("price", productShippingV3_6.getLocationGroupName());
      assertNull(productShippingV3_6.getPostalCode());
      assertEquals("", productShippingV3_6.getCountry());
      assertEquals("price", productShippingV3_7.getLocationGroupName());
      assertNull(productShippingV3_7.getPostalCode());
      assertNull(productShippingV3_7.getService());
      assertEquals("", productShippingV3_7.getCountry());
      assertNull(productShippingV3_7.getRegion());
      
      productShippingV3_5.setRegion("com.criteo.marketing.model.Price");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertNull(productShippingV3_0.getService());
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("com.criteo.marketing.model.Price", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getService());
      assertEquals("price", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("com.criteo.marketing.model.Price", productShippingV3_4.getRegion());
      assertEquals("com.criteo.marketing.model.Price", productShippingV3_5.getRegion());
      assertEquals("", productShippingV3_5.getCountry());
      assertEquals("price", productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getService());
      
      ProductShippingV3 productShippingV3_8 = productShippingV3_2.price(price1);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertNotNull(productShippingV3_8);
      assertEquals("com.criteo.marketing.model.Price", productShippingV3_8.getRegion());
      assertEquals("", productShippingV3_8.getCountry());
      assertNull(productShippingV3_8.getPostalCode());
      assertEquals("price", productShippingV3_8.getLocationGroupName());
      assertNull(productShippingV3_8.getService());
      assertNull(productShippingV3_0.getService());
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("com.criteo.marketing.model.Price", productShippingV3_0.getRegion());
      assertEquals("\"", price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(price1.getCurrency());
      assertEquals("\"", price1.getValue());
      assertEquals("com.criteo.marketing.model.Price", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_1.getCountry());
      assertEquals("price", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_2.getService());
      assertEquals("price", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("com.criteo.marketing.model.Price", productShippingV3_2.getRegion());
      assertEquals("", productShippingV3_2.getCountry());
      
      String string1 = productShippingV3_0.getService();
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertNull(string1);
      assertNull(productShippingV3_0.getService());
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("com.criteo.marketing.model.Price", productShippingV3_0.getRegion());
      
      ProductShippingV3 productShippingV3_9 = productShippingV3_0.region("1Q(K>y3|lNG&b/hm0'y");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_9, productShippingV3_8);
      assertSame(productShippingV3_9, productShippingV3_4);
      assertSame(productShippingV3_9, productShippingV3_7);
      assertSame(productShippingV3_9, productShippingV3_2);
      assertSame(productShippingV3_9, productShippingV3_3);
      assertSame(productShippingV3_9, productShippingV3_1);
      assertSame(productShippingV3_9, productShippingV3_5);
      assertSame(productShippingV3_9, productShippingV3_0);
      assertSame(productShippingV3_9, productShippingV3_6);
      assertNotNull(productShippingV3_9);
      assertNull(productShippingV3_0.getService());
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertNull(productShippingV3_9.getPostalCode());
      assertNull(productShippingV3_9.getService());
      assertEquals("price", productShippingV3_9.getLocationGroupName());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_9.getRegion());
      assertEquals("", productShippingV3_9.getCountry());
      
      ProductShippingV3 productShippingV3_10 = productShippingV3_9.price(price1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(price0, price1);
      assertSame(productShippingV3_9, productShippingV3_8);
      assertSame(productShippingV3_9, productShippingV3_4);
      assertSame(productShippingV3_9, productShippingV3_7);
      assertSame(productShippingV3_9, productShippingV3_2);
      assertSame(productShippingV3_9, productShippingV3_10);
      assertSame(productShippingV3_9, productShippingV3_3);
      assertSame(productShippingV3_9, productShippingV3_1);
      assertSame(productShippingV3_9, productShippingV3_5);
      assertSame(productShippingV3_9, productShippingV3_0);
      assertSame(productShippingV3_9, productShippingV3_6);
      assertSame(price1, price0);
      assertSame(productShippingV3_10, productShippingV3_0);
      assertSame(productShippingV3_10, productShippingV3_2);
      assertSame(productShippingV3_10, productShippingV3_7);
      assertSame(productShippingV3_10, productShippingV3_5);
      assertSame(productShippingV3_10, productShippingV3_4);
      assertSame(productShippingV3_10, productShippingV3_6);
      assertSame(productShippingV3_10, productShippingV3_9);
      assertSame(productShippingV3_10, productShippingV3_3);
      assertSame(productShippingV3_10, productShippingV3_8);
      assertSame(productShippingV3_10, productShippingV3_1);
      assertNotNull(productShippingV3_10);
      assertNull(productShippingV3_0.getService());
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("\"", price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(productShippingV3_9.getPostalCode());
      assertNull(productShippingV3_9.getService());
      assertEquals("price", productShippingV3_9.getLocationGroupName());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_9.getRegion());
      assertEquals("", productShippingV3_9.getCountry());
      assertNull(price1.getCurrency());
      assertEquals("\"", price1.getValue());
      assertEquals("", productShippingV3_10.getCountry());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_10.getRegion());
      assertEquals("price", productShippingV3_10.getLocationGroupName());
      assertNull(productShippingV3_10.getPostalCode());
      assertNull(productShippingV3_10.getService());
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      productShippingV3_4.setLocationId(object1);
      assertFalse(object1.equals((Object)object0));
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertNotSame(object1, object0);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_9);
      assertSame(productShippingV3_4, productShippingV3_10);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertNull(productShippingV3_0.getService());
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getCountry());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_4.getRegion());
      assertEquals("", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getService());
      assertEquals("price", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getPostalCode());
      
      ProductShippingV3 productShippingV3_11 = productShippingV3_9.country("value");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_9, productShippingV3_8);
      assertSame(productShippingV3_9, productShippingV3_4);
      assertSame(productShippingV3_9, productShippingV3_7);
      assertSame(productShippingV3_9, productShippingV3_2);
      assertSame(productShippingV3_9, productShippingV3_10);
      assertSame(productShippingV3_9, productShippingV3_3);
      assertSame(productShippingV3_9, productShippingV3_1);
      assertSame(productShippingV3_9, productShippingV3_5);
      assertSame(productShippingV3_9, productShippingV3_11);
      assertSame(productShippingV3_9, productShippingV3_0);
      assertSame(productShippingV3_9, productShippingV3_6);
      assertSame(productShippingV3_11, productShippingV3_6);
      assertSame(productShippingV3_11, productShippingV3_9);
      assertSame(productShippingV3_11, productShippingV3_1);
      assertSame(productShippingV3_11, productShippingV3_3);
      assertSame(productShippingV3_11, productShippingV3_8);
      assertSame(productShippingV3_11, productShippingV3_7);
      assertSame(productShippingV3_11, productShippingV3_0);
      assertSame(productShippingV3_11, productShippingV3_10);
      assertSame(productShippingV3_11, productShippingV3_2);
      assertSame(productShippingV3_11, productShippingV3_5);
      assertSame(productShippingV3_11, productShippingV3_4);
      assertNotNull(productShippingV3_11);
      assertNull(productShippingV3_0.getService());
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_0.getRegion());
      assertEquals("value", productShippingV3_0.getCountry());
      assertNull(productShippingV3_9.getPostalCode());
      assertNull(productShippingV3_9.getService());
      assertEquals("price", productShippingV3_9.getLocationGroupName());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_9.getRegion());
      assertEquals("value", productShippingV3_9.getCountry());
      assertEquals("value", productShippingV3_11.getCountry());
      assertEquals("price", productShippingV3_11.getLocationGroupName());
      assertNull(productShippingV3_11.getPostalCode());
      assertNull(productShippingV3_11.getService());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_11.getRegion());
      
      String string2 = productShippingV3_0.getCountry();
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertEquals("value", string2);
      assertNotNull(string2);
      assertNull(productShippingV3_0.getService());
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_0.getRegion());
      assertEquals("value", productShippingV3_0.getCountry());
      
      ProductShippingV3 productShippingV3_12 = productShippingV3_0.postalCode("UpA!PP{d+At+Djr=l");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_12);
      assertSame(productShippingV3_12, productShippingV3_8);
      assertSame(productShippingV3_12, productShippingV3_4);
      assertSame(productShippingV3_12, productShippingV3_2);
      assertSame(productShippingV3_12, productShippingV3_3);
      assertSame(productShippingV3_12, productShippingV3_9);
      assertSame(productShippingV3_12, productShippingV3_7);
      assertSame(productShippingV3_12, productShippingV3_10);
      assertSame(productShippingV3_12, productShippingV3_5);
      assertSame(productShippingV3_12, productShippingV3_0);
      assertSame(productShippingV3_12, productShippingV3_1);
      assertSame(productShippingV3_12, productShippingV3_11);
      assertSame(productShippingV3_12, productShippingV3_6);
      assertNotNull(productShippingV3_12);
      assertNull(productShippingV3_0.getService());
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_0.getRegion());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_0.getPostalCode());
      assertEquals("value", productShippingV3_0.getCountry());
      assertEquals("value", productShippingV3_12.getCountry());
      assertEquals("price", productShippingV3_12.getLocationGroupName());
      assertNull(productShippingV3_12.getService());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_12.getRegion());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_12.getPostalCode());
      
      ProductShippingV3 productShippingV3_13 = productShippingV3_2.service("region");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_13);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_12);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_10);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_12);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_13);
      assertSame(productShippingV3_1, productShippingV3_11);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_12);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_13);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_11);
      assertSame(productShippingV3_2, productShippingV3_10);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_13, productShippingV3_4);
      assertSame(productShippingV3_13, productShippingV3_1);
      assertSame(productShippingV3_13, productShippingV3_5);
      assertSame(productShippingV3_13, productShippingV3_6);
      assertSame(productShippingV3_13, productShippingV3_7);
      assertSame(productShippingV3_13, productShippingV3_2);
      assertSame(productShippingV3_13, productShippingV3_8);
      assertSame(productShippingV3_13, productShippingV3_9);
      assertSame(productShippingV3_13, productShippingV3_3);
      assertSame(productShippingV3_13, productShippingV3_11);
      assertSame(productShippingV3_13, productShippingV3_12);
      assertSame(productShippingV3_13, productShippingV3_0);
      assertSame(productShippingV3_13, productShippingV3_10);
      assertNotNull(productShippingV3_13);
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_0.getRegion());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getService());
      assertEquals("value", productShippingV3_0.getCountry());
      assertEquals("\"", price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(price1.getCurrency());
      assertEquals("\"", price1.getValue());
      assertEquals("value", productShippingV3_1.getCountry());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_1.getRegion());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_1.getPostalCode());
      assertEquals("price", productShippingV3_1.getLocationGroupName());
      assertEquals("region", productShippingV3_1.getService());
      assertEquals("value", productShippingV3_2.getCountry());
      assertEquals("price", productShippingV3_2.getLocationGroupName());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_2.getRegion());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_2.getPostalCode());
      assertEquals("region", productShippingV3_2.getService());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_13.getPostalCode());
      assertEquals("price", productShippingV3_13.getLocationGroupName());
      assertEquals("region", productShippingV3_13.getService());
      assertEquals("value", productShippingV3_13.getCountry());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_13.getRegion());
      
      ProductShippingV3 productShippingV3_14 = productShippingV3_5.price(price0);
      assertSame(productShippingV3_0, productShippingV3_14);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_13);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_12);
      assertSame(price0, price1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_12);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_14);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_9);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_11);
      assertSame(productShippingV3_4, productShippingV3_13);
      assertSame(productShippingV3_4, productShippingV3_10);
      assertSame(productShippingV3_14, productShippingV3_9);
      assertSame(productShippingV3_14, productShippingV3_10);
      assertSame(productShippingV3_14, productShippingV3_0);
      assertSame(productShippingV3_14, productShippingV3_13);
      assertSame(productShippingV3_14, productShippingV3_11);
      assertSame(productShippingV3_14, productShippingV3_12);
      assertSame(productShippingV3_14, productShippingV3_4);
      assertSame(productShippingV3_14, productShippingV3_6);
      assertSame(productShippingV3_14, productShippingV3_5);
      assertSame(productShippingV3_14, productShippingV3_1);
      assertSame(productShippingV3_14, productShippingV3_7);
      assertSame(productShippingV3_14, productShippingV3_2);
      assertSame(productShippingV3_14, productShippingV3_3);
      assertSame(productShippingV3_14, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_11);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_14);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_9);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_12);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_13);
      assertSame(productShippingV3_5, productShippingV3_10);
      assertNotNull(productShippingV3_14);
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_0.getRegion());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getService());
      assertEquals("value", productShippingV3_0.getCountry());
      assertEquals("\"", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_4.getRegion());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_4.getPostalCode());
      assertEquals("region", productShippingV3_4.getService());
      assertEquals("price", productShippingV3_4.getLocationGroupName());
      assertEquals("value", productShippingV3_4.getCountry());
      assertEquals("value", productShippingV3_14.getCountry());
      assertEquals("price", productShippingV3_14.getLocationGroupName());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_14.getPostalCode());
      assertEquals("region", productShippingV3_14.getService());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_14.getRegion());
      assertEquals("price", productShippingV3_5.getLocationGroupName());
      assertEquals("region", productShippingV3_5.getService());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_5.getPostalCode());
      assertEquals("value", productShippingV3_5.getCountry());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_5.getRegion());
      
      productShippingV3_8.setLocationId(productShippingV3_14);
      assertSame(productShippingV3_8, productShippingV3_11);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_12);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_10);
      assertSame(productShippingV3_8, productShippingV3_13);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_14);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_9);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_14);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_13);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_12);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_10);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_12);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_13);
      assertSame(productShippingV3_1, productShippingV3_11);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_14);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_14);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_12);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_13);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_11);
      assertSame(productShippingV3_2, productShippingV3_10);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_12);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_14);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_9);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_11);
      assertSame(productShippingV3_4, productShippingV3_13);
      assertSame(productShippingV3_4, productShippingV3_10);
      assertSame(productShippingV3_14, productShippingV3_9);
      assertSame(productShippingV3_14, productShippingV3_10);
      assertSame(productShippingV3_14, productShippingV3_0);
      assertSame(productShippingV3_14, productShippingV3_13);
      assertSame(productShippingV3_14, productShippingV3_11);
      assertSame(productShippingV3_14, productShippingV3_12);
      assertSame(productShippingV3_14, productShippingV3_4);
      assertSame(productShippingV3_14, productShippingV3_6);
      assertSame(productShippingV3_14, productShippingV3_5);
      assertSame(productShippingV3_14, productShippingV3_1);
      assertSame(productShippingV3_14, productShippingV3_7);
      assertSame(productShippingV3_14, productShippingV3_2);
      assertSame(productShippingV3_14, productShippingV3_3);
      assertSame(productShippingV3_14, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_11);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_14);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_9);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_12);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_13);
      assertSame(productShippingV3_5, productShippingV3_10);
      assertEquals("value", productShippingV3_8.getCountry());
      assertEquals("price", productShippingV3_8.getLocationGroupName());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_8.getPostalCode());
      assertEquals("region", productShippingV3_8.getService());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_8.getRegion());
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_0.getRegion());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getService());
      assertEquals("value", productShippingV3_0.getCountry());
      assertEquals("\"", price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(price1.getCurrency());
      assertEquals("\"", price1.getValue());
      assertEquals("value", productShippingV3_1.getCountry());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_1.getRegion());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_1.getPostalCode());
      assertEquals("price", productShippingV3_1.getLocationGroupName());
      assertEquals("region", productShippingV3_1.getService());
      assertEquals("value", productShippingV3_2.getCountry());
      assertEquals("price", productShippingV3_2.getLocationGroupName());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_2.getRegion());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_2.getPostalCode());
      assertEquals("region", productShippingV3_2.getService());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_4.getRegion());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_4.getPostalCode());
      assertEquals("region", productShippingV3_4.getService());
      assertEquals("price", productShippingV3_4.getLocationGroupName());
      assertEquals("value", productShippingV3_4.getCountry());
      assertEquals("value", productShippingV3_14.getCountry());
      assertEquals("price", productShippingV3_14.getLocationGroupName());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_14.getPostalCode());
      assertEquals("region", productShippingV3_14.getService());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_14.getRegion());
      assertEquals("price", productShippingV3_5.getLocationGroupName());
      assertEquals("region", productShippingV3_5.getService());
      assertEquals("UpA!PP{d+At+Djr=l", productShippingV3_5.getPostalCode());
      assertEquals("value", productShippingV3_5.getCountry());
      assertEquals("1Q(K>y3|lNG&b/hm0'y", productShippingV3_5.getRegion());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      
      String string0 = productShippingV3_0.getCountry();
      assertNull(string0);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      Price price1 = price0.value("service");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertEquals("service", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("service", price1.getValue());
      assertNull(price1.getCurrency());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.price(price1);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("service", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("service", price1.getValue());
      assertNull(price1.getCurrency());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.region("currency");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNotNull(productShippingV3_2);
      assertEquals("currency", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("service", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("service", price1.getValue());
      assertNull(price1.getCurrency());
      assertEquals("currency", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("currency", productShippingV3_2.getRegion());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.locationGroupName("currency");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertNotNull(productShippingV3_3);
      assertEquals("currency", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("currency", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("service", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("service", price1.getValue());
      assertNull(price1.getCurrency());
      assertEquals("currency", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("currency", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("currency", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("currency", productShippingV3_2.getRegion());
      assertNull(productShippingV3_3.getCountry());
      assertEquals("currency", productShippingV3_3.getRegion());
      assertEquals("currency", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getService());
      
      productShippingV3_3.hashCode();
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertEquals("currency", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("currency", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("service", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("service", price1.getValue());
      assertNull(price1.getCurrency());
      assertEquals("currency", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("currency", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("currency", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("currency", productShippingV3_2.getRegion());
      assertNull(productShippingV3_3.getCountry());
      assertEquals("currency", productShippingV3_3.getRegion());
      assertEquals("currency", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getService());
      
      Price price2 = price0.currency("");
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertNotNull(price2);
      assertEquals("service", price0.getValue());
      assertEquals("", price0.getCurrency());
      assertEquals("service", price2.getValue());
      assertEquals("", price2.getCurrency());
      
      productShippingV3_2.setRegion("mWje(O6");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("currency", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("service", price0.getValue());
      assertEquals("", price0.getCurrency());
      assertEquals("service", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_1.getRegion());
      assertEquals("currency", productShippingV3_1.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("currency", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      
      price1.setValue("");
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertEquals("", price0.getValue());
      assertEquals("", price0.getCurrency());
      assertEquals("", price1.getValue());
      assertEquals("", price1.getCurrency());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_1.country("locationId");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertNotNull(productShippingV3_4);
      assertEquals("currency", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("locationId", productShippingV3_0.getCountry());
      assertEquals("", price0.getValue());
      assertEquals("", price0.getCurrency());
      assertEquals("", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertEquals("locationId", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_1.getRegion());
      assertEquals("currency", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getService());
      assertEquals("locationId", productShippingV3_4.getCountry());
      assertEquals("currency", productShippingV3_4.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_4.getRegion());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_3.price(price0);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertNotNull(productShippingV3_5);
      assertEquals("currency", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("locationId", productShippingV3_0.getCountry());
      assertEquals("", price0.getValue());
      assertEquals("", price0.getCurrency());
      assertEquals("", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertEquals("locationId", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_1.getRegion());
      assertEquals("currency", productShippingV3_1.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("currency", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getService());
      assertEquals("locationId", productShippingV3_2.getCountry());
      assertEquals("locationId", productShippingV3_3.getCountry());
      assertEquals("currency", productShippingV3_3.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_5.getService());
      assertEquals("currency", productShippingV3_5.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getPostalCode());
      assertEquals("locationId", productShippingV3_5.getCountry());
      
      ProductShippingV3 productShippingV3_6 = productShippingV3_0.service("locationGroupName");
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertNotNull(productShippingV3_6);
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertEquals("currency", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("locationId", productShippingV3_0.getCountry());
      assertEquals("locationId", productShippingV3_6.getCountry());
      assertEquals("currency", productShippingV3_6.getLocationGroupName());
      assertNull(productShippingV3_6.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_6.getService());
      assertEquals("mWje(O6", productShippingV3_6.getRegion());
      
      boolean boolean0 = productShippingV3_1.equals(productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertTrue(boolean0);
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertEquals("currency", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("locationId", productShippingV3_0.getCountry());
      assertEquals("", price0.getValue());
      assertEquals("", price0.getCurrency());
      assertEquals("", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertEquals("locationId", productShippingV3_1.getCountry());
      assertEquals("locationGroupName", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_1.getRegion());
      assertEquals("currency", productShippingV3_1.getLocationGroupName());
      assertEquals("locationId", productShippingV3_6.getCountry());
      assertEquals("currency", productShippingV3_6.getLocationGroupName());
      assertNull(productShippingV3_6.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_6.getService());
      assertEquals("mWje(O6", productShippingV3_6.getRegion());
      
      productShippingV3_3.setLocationGroupName("postalCode");
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("locationId", productShippingV3_0.getCountry());
      assertEquals("", price0.getValue());
      assertEquals("", price0.getCurrency());
      assertEquals("", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertEquals("locationId", productShippingV3_1.getCountry());
      assertEquals("locationGroupName", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("postalCode", productShippingV3_1.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_1.getRegion());
      assertEquals("locationGroupName", productShippingV3_2.getService());
      assertEquals("mWje(O6", productShippingV3_2.getRegion());
      assertEquals("postalCode", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("locationId", productShippingV3_2.getCountry());
      assertEquals("locationId", productShippingV3_3.getCountry());
      assertEquals("locationGroupName", productShippingV3_3.getService());
      assertEquals("mWje(O6", productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getPostalCode());
      assertEquals("postalCode", productShippingV3_3.getLocationGroupName());
      
      productShippingV3_3.setCountry((String) null);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("postalCode", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("", price0.getValue());
      assertEquals("", price0.getCurrency());
      assertEquals("", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertEquals("locationGroupName", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("postalCode", productShippingV3_1.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_1.getRegion());
      assertEquals("locationGroupName", productShippingV3_2.getService());
      assertEquals("mWje(O6", productShippingV3_2.getRegion());
      assertEquals("postalCode", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_3.getCountry());
      assertEquals("locationGroupName", productShippingV3_3.getService());
      assertEquals("mWje(O6", productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getPostalCode());
      assertEquals("postalCode", productShippingV3_3.getLocationGroupName());
      
      productShippingV3_1.setCountry("country");
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price2);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("", price0.getValue());
      assertEquals("", price0.getCurrency());
      assertEquals("", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertEquals("country", productShippingV3_1.getCountry());
      assertEquals("locationGroupName", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("postalCode", productShippingV3_1.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_1.getRegion());
      
      Price price3 = price0.value("country");
      assertSame(price3, price0);
      assertSame(price3, price2);
      assertSame(price3, price1);
      assertSame(price0, price1);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertNotNull(price3);
      assertEquals("", price3.getCurrency());
      assertEquals("country", price3.getValue());
      assertEquals("", price0.getCurrency());
      assertEquals("country", price0.getValue());
      
      productShippingV3_1.setService("currency");
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price1, price3);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertEquals("currency", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("", price0.getCurrency());
      assertEquals("country", price0.getValue());
      assertEquals("country", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertEquals("country", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("postalCode", productShippingV3_1.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_1.getRegion());
      assertEquals("currency", productShippingV3_1.getService());
      
      productShippingV3_3.setPrice(price1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price1, price3);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertEquals("currency", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("", price0.getCurrency());
      assertEquals("country", price0.getValue());
      assertEquals("country", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertEquals("country", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("postalCode", productShippingV3_1.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_1.getRegion());
      assertEquals("currency", productShippingV3_1.getService());
      assertEquals("country", productShippingV3_2.getCountry());
      assertEquals("mWje(O6", productShippingV3_2.getRegion());
      assertEquals("postalCode", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("currency", productShippingV3_2.getService());
      assertEquals("country", productShippingV3_3.getCountry());
      assertEquals("mWje(O6", productShippingV3_3.getRegion());
      assertEquals("currency", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getPostalCode());
      assertEquals("postalCode", productShippingV3_3.getLocationGroupName());
      
      productShippingV3_2.setPostalCode("currency");
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price1, price3);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertEquals("currency", productShippingV3_0.getPostalCode());
      assertEquals("currency", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("", price0.getCurrency());
      assertEquals("country", price0.getValue());
      assertEquals("country", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertEquals("country", productShippingV3_1.getCountry());
      assertEquals("currency", productShippingV3_1.getPostalCode());
      assertEquals("postalCode", productShippingV3_1.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_1.getRegion());
      assertEquals("currency", productShippingV3_1.getService());
      assertEquals("country", productShippingV3_2.getCountry());
      assertEquals("currency", productShippingV3_2.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_2.getRegion());
      assertEquals("postalCode", productShippingV3_2.getLocationGroupName());
      assertEquals("currency", productShippingV3_2.getService());
      
      productShippingV3_1.hashCode();
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price1, price3);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertEquals("currency", productShippingV3_0.getPostalCode());
      assertEquals("currency", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("", price0.getCurrency());
      assertEquals("country", price0.getValue());
      assertEquals("country", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertEquals("country", productShippingV3_1.getCountry());
      assertEquals("currency", productShippingV3_1.getPostalCode());
      assertEquals("postalCode", productShippingV3_1.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_1.getRegion());
      assertEquals("currency", productShippingV3_1.getService());
      
      String string0 = productShippingV3_5.getCountry();
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price1, price3);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertEquals("country", string0);
      assertNotNull(string0);
      assertEquals("currency", productShippingV3_0.getPostalCode());
      assertEquals("currency", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("", price0.getCurrency());
      assertEquals("country", price0.getValue());
      assertEquals("country", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertEquals("country", productShippingV3_1.getCountry());
      assertEquals("currency", productShippingV3_1.getPostalCode());
      assertEquals("postalCode", productShippingV3_1.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_1.getRegion());
      assertEquals("currency", productShippingV3_1.getService());
      assertEquals("country", productShippingV3_2.getCountry());
      assertEquals("currency", productShippingV3_2.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_2.getRegion());
      assertEquals("postalCode", productShippingV3_2.getLocationGroupName());
      assertEquals("currency", productShippingV3_2.getService());
      assertEquals("country", productShippingV3_3.getCountry());
      assertEquals("currency", productShippingV3_3.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_3.getRegion());
      assertEquals("currency", productShippingV3_3.getService());
      assertEquals("postalCode", productShippingV3_3.getLocationGroupName());
      assertEquals("postalCode", productShippingV3_5.getLocationGroupName());
      assertEquals("currency", productShippingV3_5.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_5.getRegion());
      assertEquals("currency", productShippingV3_5.getService());
      assertEquals("country", productShippingV3_5.getCountry());
      
      ProductShippingV3 productShippingV3_7 = productShippingV3_0.service("country");
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertNotNull(productShippingV3_7);
      assertEquals("country", productShippingV3_0.getService());
      assertEquals("currency", productShippingV3_0.getPostalCode());
      assertEquals("postalCode", productShippingV3_0.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("country", productShippingV3_7.getCountry());
      assertEquals("postalCode", productShippingV3_7.getLocationGroupName());
      assertEquals("country", productShippingV3_7.getService());
      assertEquals("currency", productShippingV3_7.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_7.getRegion());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      productShippingV3_5.setLocationId(object0);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price1, price3);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertEquals("country", productShippingV3_0.getService());
      assertEquals("currency", productShippingV3_0.getPostalCode());
      assertEquals("postalCode", productShippingV3_0.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("", price0.getCurrency());
      assertEquals("country", price0.getValue());
      assertEquals("country", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertEquals("country", productShippingV3_1.getService());
      assertEquals("country", productShippingV3_1.getCountry());
      assertEquals("currency", productShippingV3_1.getPostalCode());
      assertEquals("postalCode", productShippingV3_1.getLocationGroupName());
      assertEquals("mWje(O6", productShippingV3_1.getRegion());
      assertEquals("country", productShippingV3_2.getCountry());
      assertEquals("currency", productShippingV3_2.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_2.getRegion());
      assertEquals("postalCode", productShippingV3_2.getLocationGroupName());
      assertEquals("country", productShippingV3_2.getService());
      assertEquals("country", productShippingV3_3.getService());
      assertEquals("country", productShippingV3_3.getCountry());
      assertEquals("currency", productShippingV3_3.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_3.getRegion());
      assertEquals("postalCode", productShippingV3_3.getLocationGroupName());
      assertEquals("postalCode", productShippingV3_5.getLocationGroupName());
      assertEquals("currency", productShippingV3_5.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_5.getRegion());
      assertEquals("country", productShippingV3_5.getService());
      assertEquals("country", productShippingV3_5.getCountry());
      
      ProductShippingV3 productShippingV3_8 = productShippingV3_7.postalCode("region");
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_8);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertNotNull(productShippingV3_8);
      assertEquals("country", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getLocationGroupName());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("country", productShippingV3_7.getCountry());
      assertEquals("postalCode", productShippingV3_7.getLocationGroupName());
      assertEquals("country", productShippingV3_7.getService());
      assertEquals("region", productShippingV3_7.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_7.getRegion());
      assertEquals("mWje(O6", productShippingV3_8.getRegion());
      assertEquals("country", productShippingV3_8.getCountry());
      assertEquals("region", productShippingV3_8.getPostalCode());
      assertEquals("postalCode", productShippingV3_8.getLocationGroupName());
      assertEquals("country", productShippingV3_8.getService());
      
      String string1 = productShippingV3_6.getRegion();
      assertFalse(string1.equals((Object)string0));
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_8);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertEquals("mWje(O6", string1);
      assertNotNull(string1);
      assertEquals("country", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getLocationGroupName());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_0.getRegion());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("country", productShippingV3_6.getCountry());
      assertEquals("country", productShippingV3_6.getService());
      assertEquals("postalCode", productShippingV3_6.getLocationGroupName());
      assertEquals("region", productShippingV3_6.getPostalCode());
      assertEquals("mWje(O6", productShippingV3_6.getRegion());
      
      ProductShippingV3 productShippingV3_9 = productShippingV3_3.region("");
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price1, price3);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_9);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_8);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_9, productShippingV3_8);
      assertSame(productShippingV3_9, productShippingV3_3);
      assertSame(productShippingV3_9, productShippingV3_5);
      assertSame(productShippingV3_9, productShippingV3_2);
      assertSame(productShippingV3_9, productShippingV3_4);
      assertSame(productShippingV3_9, productShippingV3_1);
      assertSame(productShippingV3_9, productShippingV3_6);
      assertSame(productShippingV3_9, productShippingV3_0);
      assertSame(productShippingV3_9, productShippingV3_7);
      assertNotNull(productShippingV3_9);
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("country", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getLocationGroupName());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("", price0.getCurrency());
      assertEquals("country", price0.getValue());
      assertEquals("country", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertEquals("country", productShippingV3_1.getService());
      assertEquals("country", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("postalCode", productShippingV3_1.getLocationGroupName());
      assertEquals("region", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getRegion());
      assertEquals("postalCode", productShippingV3_2.getLocationGroupName());
      assertEquals("region", productShippingV3_2.getPostalCode());
      assertEquals("country", productShippingV3_2.getService());
      assertEquals("country", productShippingV3_3.getService());
      assertEquals("country", productShippingV3_3.getCountry());
      assertEquals("", productShippingV3_3.getRegion());
      assertEquals("region", productShippingV3_3.getPostalCode());
      assertEquals("postalCode", productShippingV3_3.getLocationGroupName());
      assertEquals("postalCode", productShippingV3_9.getLocationGroupName());
      assertEquals("region", productShippingV3_9.getPostalCode());
      assertEquals("country", productShippingV3_9.getCountry());
      assertEquals("country", productShippingV3_9.getService());
      assertEquals("", productShippingV3_9.getRegion());
      
      productShippingV3_2.setCountry("@UjqZM*bQb,f\"g|J");
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price1, price3);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("country", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getLocationGroupName());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("@UjqZM*bQb,f\"g|J", productShippingV3_0.getCountry());
      assertEquals("", price0.getCurrency());
      assertEquals("country", price0.getValue());
      assertEquals("country", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertEquals("country", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("postalCode", productShippingV3_1.getLocationGroupName());
      assertEquals("region", productShippingV3_1.getPostalCode());
      assertEquals("@UjqZM*bQb,f\"g|J", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_2.getRegion());
      assertEquals("postalCode", productShippingV3_2.getLocationGroupName());
      assertEquals("region", productShippingV3_2.getPostalCode());
      assertEquals("country", productShippingV3_2.getService());
      assertEquals("@UjqZM*bQb,f\"g|J", productShippingV3_2.getCountry());
      
      boolean boolean1 = productShippingV3_4.equals(price1);
      assertFalse(boolean1 == boolean0);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(price0, price1);
      assertSame(price0, price3);
      assertSame(price0, price2);
      assertSame(price1, price3);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_9);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertFalse(boolean1);
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("country", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getLocationGroupName());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("@UjqZM*bQb,f\"g|J", productShippingV3_0.getCountry());
      assertEquals("", price0.getCurrency());
      assertEquals("country", price0.getValue());
      assertEquals("country", price1.getValue());
      assertEquals("", price1.getCurrency());
      assertEquals("country", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("postalCode", productShippingV3_1.getLocationGroupName());
      assertEquals("region", productShippingV3_1.getPostalCode());
      assertEquals("@UjqZM*bQb,f\"g|J", productShippingV3_1.getCountry());
      assertEquals("postalCode", productShippingV3_4.getLocationGroupName());
      assertEquals("region", productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("@UjqZM*bQb,f\"g|J", productShippingV3_4.getCountry());
      assertEquals("country", productShippingV3_4.getService());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.postalCode("");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.country("region");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("region", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertEquals("region", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.service("dT~UoZ");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getRegion());
      assertEquals("dT~UoZ", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("region", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("dT~UoZ", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("dT~UoZ", productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertEquals("region", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertEquals("", productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getRegion());
      assertEquals("dT~UoZ", productShippingV3_3.getService());
      assertEquals("region", productShippingV3_3.getCountry());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_3.region("");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertNotNull(productShippingV3_4);
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("dT~UoZ", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("region", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("dT~UoZ", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("dT~UoZ", productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertEquals("region", productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertEquals("", productShippingV3_3.getPostalCode());
      assertEquals("", productShippingV3_3.getRegion());
      assertEquals("dT~UoZ", productShippingV3_3.getService());
      assertEquals("region", productShippingV3_3.getCountry());
      assertEquals("", productShippingV3_4.getPostalCode());
      assertEquals("dT~UoZ", productShippingV3_4.getService());
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("region", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getLocationGroupName());
      
      String string0 = productShippingV3_4.getPostalCode();
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("dT~UoZ", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("region", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("dT~UoZ", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertEquals("dT~UoZ", productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertEquals("region", productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertEquals("", productShippingV3_3.getPostalCode());
      assertEquals("", productShippingV3_3.getRegion());
      assertEquals("dT~UoZ", productShippingV3_3.getService());
      assertEquals("region", productShippingV3_3.getCountry());
      assertEquals("", productShippingV3_4.getPostalCode());
      assertEquals("dT~UoZ", productShippingV3_4.getService());
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("region", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getLocationGroupName());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.locationId((Object) null);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_0.locationId(productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.locationGroupName("1-/cNNMT~vm#+AV,");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getCountry());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_2.postalCode("    currency: ");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertNotNull(productShippingV3_4);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("    currency: ", productShippingV3_2.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getService());
      assertEquals("    currency: ", productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getRegion());
      assertNull(productShippingV3_4.getService());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      Price price1 = price0.currency("eovav");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertNull(price0.getValue());
      assertEquals("eovav", price0.getCurrency());
      assertEquals("eovav", price1.getCurrency());
      assertNull(price1.getValue());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_3.price(price1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertNotNull(productShippingV3_5);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("    currency: ", productShippingV3_2.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_3.getService());
      assertEquals("    currency: ", productShippingV3_3.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getCountry());
      assertNull(price0.getValue());
      assertEquals("eovav", price0.getCurrency());
      assertEquals("eovav", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_5.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getCountry());
      assertNull(productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      
      ProductShippingV3 productShippingV3_6 = productShippingV3_5.service("");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertNotNull(productShippingV3_6);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("    currency: ", productShippingV3_2.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("", productShippingV3_3.getService());
      assertEquals("    currency: ", productShippingV3_3.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getCountry());
      assertNull(price0.getValue());
      assertEquals("eovav", price0.getCurrency());
      assertEquals("eovav", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_5.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getCountry());
      assertEquals("", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      assertEquals("    currency: ", productShippingV3_6.getPostalCode());
      assertNull(productShippingV3_6.getRegion());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_6.getLocationGroupName());
      assertEquals("", productShippingV3_6.getService());
      assertNull(productShippingV3_6.getCountry());
      
      boolean boolean0 = productShippingV3_6.equals("JyVa&U-fE");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertFalse(boolean0);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("    currency: ", productShippingV3_2.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("", productShippingV3_3.getService());
      assertEquals("    currency: ", productShippingV3_3.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getCountry());
      assertNull(price0.getValue());
      assertEquals("eovav", price0.getCurrency());
      assertEquals("eovav", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_5.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getCountry());
      assertEquals("", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      assertEquals("    currency: ", productShippingV3_6.getPostalCode());
      assertNull(productShippingV3_6.getRegion());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_6.getLocationGroupName());
      assertEquals("", productShippingV3_6.getService());
      assertNull(productShippingV3_6.getCountry());
      
      ProductShippingV3 productShippingV3_7 = productShippingV3_6.country("JyVa&U-fE");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertNotNull(productShippingV3_7);
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_2.getCountry());
      assertEquals("    currency: ", productShippingV3_2.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("JyVa&U-fE", productShippingV3_3.getCountry());
      assertEquals("", productShippingV3_3.getService());
      assertEquals("    currency: ", productShippingV3_3.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      assertNull(price0.getValue());
      assertEquals("eovav", price0.getCurrency());
      assertEquals("eovav", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_5.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_5.getCountry());
      assertEquals("    currency: ", productShippingV3_5.getPostalCode());
      assertEquals("", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      assertEquals("    currency: ", productShippingV3_6.getPostalCode());
      assertNull(productShippingV3_6.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_6.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_6.getLocationGroupName());
      assertEquals("", productShippingV3_6.getService());
      assertEquals("JyVa&U-fE", productShippingV3_7.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_7.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_7.getPostalCode());
      assertNull(productShippingV3_7.getRegion());
      assertEquals("", productShippingV3_7.getService());
      
      ProductShippingV3 productShippingV3_8 = productShippingV3_7.locationId(price0);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_8);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_8);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_8);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertNotNull(productShippingV3_8);
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_2.getCountry());
      assertEquals("    currency: ", productShippingV3_2.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("JyVa&U-fE", productShippingV3_3.getCountry());
      assertEquals("", productShippingV3_3.getService());
      assertEquals("    currency: ", productShippingV3_3.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      assertNull(price0.getValue());
      assertEquals("eovav", price0.getCurrency());
      assertEquals("eovav", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_5.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_5.getCountry());
      assertEquals("    currency: ", productShippingV3_5.getPostalCode());
      assertEquals("", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      assertEquals("    currency: ", productShippingV3_6.getPostalCode());
      assertNull(productShippingV3_6.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_6.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_6.getLocationGroupName());
      assertEquals("", productShippingV3_6.getService());
      assertEquals("JyVa&U-fE", productShippingV3_7.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_7.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_7.getPostalCode());
      assertNull(productShippingV3_7.getRegion());
      assertEquals("", productShippingV3_7.getService());
      assertNull(productShippingV3_8.getRegion());
      assertEquals("", productShippingV3_8.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_8.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_8.getCountry());
      assertEquals("    currency: ", productShippingV3_8.getPostalCode());
      
      String string0 = productShippingV3_8.getLocationGroupName();
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_8);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_8);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_8);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertEquals("1-/cNNMT~vm#+AV,", string0);
      assertNotNull(string0);
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_2.getCountry());
      assertEquals("    currency: ", productShippingV3_2.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("JyVa&U-fE", productShippingV3_3.getCountry());
      assertEquals("", productShippingV3_3.getService());
      assertEquals("    currency: ", productShippingV3_3.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      assertNull(price0.getValue());
      assertEquals("eovav", price0.getCurrency());
      assertEquals("eovav", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_5.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_5.getCountry());
      assertEquals("    currency: ", productShippingV3_5.getPostalCode());
      assertEquals("", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      assertEquals("    currency: ", productShippingV3_6.getPostalCode());
      assertNull(productShippingV3_6.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_6.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_6.getLocationGroupName());
      assertEquals("", productShippingV3_6.getService());
      assertEquals("JyVa&U-fE", productShippingV3_7.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_7.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_7.getPostalCode());
      assertNull(productShippingV3_7.getRegion());
      assertEquals("", productShippingV3_7.getService());
      assertNull(productShippingV3_8.getRegion());
      assertEquals("", productShippingV3_8.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_8.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_8.getCountry());
      assertEquals("    currency: ", productShippingV3_8.getPostalCode());
      
      productShippingV3_2.setLocationId(productShippingV3_0);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_2.getCountry());
      assertEquals("    currency: ", productShippingV3_2.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getService());
      
      productShippingV3_5.setPostalCode("JyVa&U-fE");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_8);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_0.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_1.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_2.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_2.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("JyVa&U-fE", productShippingV3_3.getCountry());
      assertEquals("", productShippingV3_3.getService());
      assertEquals("JyVa&U-fE", productShippingV3_3.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      assertNull(price0.getValue());
      assertEquals("eovav", price0.getCurrency());
      assertEquals("eovav", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_5.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_5.getCountry());
      assertEquals("", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_5.getPostalCode());
      
      productShippingV3_7.setPostalCode("UZ/XhRXO");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_8);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_8);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_8);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("UZ/XhRXO", productShippingV3_0.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_1.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_2.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("UZ/XhRXO", productShippingV3_2.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_3.getCountry());
      assertEquals("", productShippingV3_3.getService());
      assertEquals("UZ/XhRXO", productShippingV3_3.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      assertNull(price0.getValue());
      assertEquals("eovav", price0.getCurrency());
      assertEquals("eovav", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_5.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_5.getCountry());
      assertEquals("UZ/XhRXO", productShippingV3_5.getPostalCode());
      assertEquals("", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_6.getPostalCode());
      assertNull(productShippingV3_6.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_6.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_6.getLocationGroupName());
      assertEquals("", productShippingV3_6.getService());
      assertEquals("JyVa&U-fE", productShippingV3_7.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_7.getLocationGroupName());
      assertNull(productShippingV3_7.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_7.getPostalCode());
      assertEquals("", productShippingV3_7.getService());
      
      String string1 = productShippingV3_5.getPostalCode();
      assertFalse(string1.equals((Object)string0));
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_8);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertEquals("UZ/XhRXO", string1);
      assertNotNull(string1);
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("UZ/XhRXO", productShippingV3_0.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_1.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_2.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("UZ/XhRXO", productShippingV3_2.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_3.getCountry());
      assertEquals("", productShippingV3_3.getService());
      assertEquals("UZ/XhRXO", productShippingV3_3.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      assertNull(price0.getValue());
      assertEquals("eovav", price0.getCurrency());
      assertEquals("eovav", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_5.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_5.getCountry());
      assertEquals("UZ/XhRXO", productShippingV3_5.getPostalCode());
      assertEquals("", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      
      productShippingV3_1.setService("m?bHW'(juW|");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("UZ/XhRXO", productShippingV3_0.getPostalCode());
      assertEquals("m?bHW'(juW|", productShippingV3_0.getService());
      assertEquals("JyVa&U-fE", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_1.getPostalCode());
      assertEquals("m?bHW'(juW|", productShippingV3_1.getService());
      assertEquals("JyVa&U-fE", productShippingV3_1.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_9 = (ProductShippingV3)productShippingV3_8.getLocationId();
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_9, productShippingV3_4);
      assertSame(productShippingV3_9, productShippingV3_6);
      assertSame(productShippingV3_9, productShippingV3_1);
      assertSame(productShippingV3_9, productShippingV3_2);
      assertSame(productShippingV3_9, productShippingV3_3);
      assertSame(productShippingV3_9, productShippingV3_8);
      assertSame(productShippingV3_9, productShippingV3_7);
      assertSame(productShippingV3_9, productShippingV3_5);
      assertSame(productShippingV3_9, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_9);
      assertSame(productShippingV3_3, productShippingV3_8);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_9);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_8);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_9);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_9);
      assertSame(productShippingV3_7, productShippingV3_8);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_9);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertNotNull(productShippingV3_9);
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("UZ/XhRXO", productShippingV3_0.getPostalCode());
      assertEquals("m?bHW'(juW|", productShippingV3_0.getService());
      assertEquals("JyVa&U-fE", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_1.getPostalCode());
      assertEquals("m?bHW'(juW|", productShippingV3_1.getService());
      assertEquals("JyVa&U-fE", productShippingV3_1.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_9.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_9.getLocationGroupName());
      assertEquals("UZ/XhRXO", productShippingV3_9.getPostalCode());
      assertEquals("m?bHW'(juW|", productShippingV3_9.getService());
      assertNull(productShippingV3_9.getRegion());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_2.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertEquals("m?bHW'(juW|", productShippingV3_2.getService());
      assertEquals("UZ/XhRXO", productShippingV3_2.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_3.getCountry());
      assertEquals("m?bHW'(juW|", productShippingV3_3.getService());
      assertEquals("UZ/XhRXO", productShippingV3_3.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      assertNull(price0.getValue());
      assertEquals("eovav", price0.getCurrency());
      assertEquals("eovav", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_5.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_5.getCountry());
      assertEquals("UZ/XhRXO", productShippingV3_5.getPostalCode());
      assertEquals("m?bHW'(juW|", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_6.getPostalCode());
      assertEquals("m?bHW'(juW|", productShippingV3_6.getService());
      assertNull(productShippingV3_6.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_6.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_6.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_7.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_7.getLocationGroupName());
      assertNull(productShippingV3_7.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_7.getPostalCode());
      assertEquals("m?bHW'(juW|", productShippingV3_7.getService());
      assertNull(productShippingV3_8.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_8.getPostalCode());
      assertEquals("m?bHW'(juW|", productShippingV3_8.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_8.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_8.getCountry());
      
      String string2 = productShippingV3_8.toString();
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_9);
      assertSame(productShippingV3_3, productShippingV3_8);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_9);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_8);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_9);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_9);
      assertSame(productShippingV3_7, productShippingV3_8);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_9);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertNotNull(string2);
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("UZ/XhRXO", productShippingV3_0.getPostalCode());
      assertEquals("m?bHW'(juW|", productShippingV3_0.getService());
      assertEquals("JyVa&U-fE", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_1.getPostalCode());
      assertEquals("m?bHW'(juW|", productShippingV3_1.getService());
      assertEquals("JyVa&U-fE", productShippingV3_1.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_2.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertEquals("m?bHW'(juW|", productShippingV3_2.getService());
      assertEquals("UZ/XhRXO", productShippingV3_2.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_3.getCountry());
      assertEquals("m?bHW'(juW|", productShippingV3_3.getService());
      assertEquals("UZ/XhRXO", productShippingV3_3.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      assertNull(price0.getValue());
      assertEquals("eovav", price0.getCurrency());
      assertEquals("eovav", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_5.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_5.getCountry());
      assertEquals("UZ/XhRXO", productShippingV3_5.getPostalCode());
      assertEquals("m?bHW'(juW|", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_6.getPostalCode());
      assertEquals("m?bHW'(juW|", productShippingV3_6.getService());
      assertNull(productShippingV3_6.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_6.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_6.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_7.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_7.getLocationGroupName());
      assertNull(productShippingV3_7.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_7.getPostalCode());
      assertEquals("m?bHW'(juW|", productShippingV3_7.getService());
      assertNull(productShippingV3_8.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_8.getPostalCode());
      assertEquals("m?bHW'(juW|", productShippingV3_8.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_8.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_8.getCountry());
      
      productShippingV3_4.setService("service");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_9);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("UZ/XhRXO", productShippingV3_0.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_0.getCountry());
      assertEquals("service", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_1.getPostalCode());
      assertEquals("service", productShippingV3_1.getService());
      assertEquals("JyVa&U-fE", productShippingV3_1.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_2.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertEquals("service", productShippingV3_2.getService());
      assertEquals("UZ/XhRXO", productShippingV3_2.getPostalCode());
      assertEquals("service", productShippingV3_4.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_4.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_4.getPostalCode());
      
      String string3 = productShippingV3_1.getRegion();
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNull(string3);
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("UZ/XhRXO", productShippingV3_0.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_0.getCountry());
      assertEquals("service", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_1.getPostalCode());
      assertEquals("service", productShippingV3_1.getService());
      assertEquals("JyVa&U-fE", productShippingV3_1.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_10 = productShippingV3_8.service("9OIoU");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_10);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_10);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_10);
      assertSame(productShippingV3_3, productShippingV3_9);
      assertSame(productShippingV3_3, productShippingV3_8);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(price0, price1);
      assertSame(productShippingV3_10, productShippingV3_8);
      assertSame(productShippingV3_10, productShippingV3_7);
      assertSame(productShippingV3_10, productShippingV3_2);
      assertSame(productShippingV3_10, productShippingV3_6);
      assertSame(productShippingV3_10, productShippingV3_0);
      assertSame(productShippingV3_10, productShippingV3_5);
      assertSame(productShippingV3_10, productShippingV3_9);
      assertSame(productShippingV3_10, productShippingV3_1);
      assertSame(productShippingV3_10, productShippingV3_4);
      assertSame(productShippingV3_10, productShippingV3_3);
      assertSame(price1, price0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_9);
      assertSame(productShippingV3_5, productShippingV3_10);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_8);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_9);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_10);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_10);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_9);
      assertSame(productShippingV3_7, productShippingV3_8);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_9);
      assertSame(productShippingV3_8, productShippingV3_10);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertNotNull(productShippingV3_10);
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_0.getLocationGroupName());
      assertEquals("9OIoU", productShippingV3_0.getService());
      assertEquals("UZ/XhRXO", productShippingV3_0.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_1.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_1.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_1.getLocationGroupName());
      assertEquals("9OIoU", productShippingV3_1.getService());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("9OIoU", productShippingV3_2.getService());
      assertEquals("JyVa&U-fE", productShippingV3_2.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_2.getLocationGroupName());
      assertEquals("UZ/XhRXO", productShippingV3_2.getPostalCode());
      assertEquals("JyVa&U-fE", productShippingV3_3.getCountry());
      assertEquals("UZ/XhRXO", productShippingV3_3.getPostalCode());
      assertEquals("9OIoU", productShippingV3_3.getService());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      assertNull(price0.getValue());
      assertEquals("eovav", price0.getCurrency());
      assertEquals("JyVa&U-fE", productShippingV3_10.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_10.getLocationGroupName());
      assertNull(productShippingV3_10.getRegion());
      assertEquals("9OIoU", productShippingV3_10.getService());
      assertEquals("UZ/XhRXO", productShippingV3_10.getPostalCode());
      assertEquals("eovav", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_5.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_5.getCountry());
      assertEquals("UZ/XhRXO", productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getRegion());
      assertEquals("9OIoU", productShippingV3_5.getService());
      assertEquals("UZ/XhRXO", productShippingV3_6.getPostalCode());
      assertEquals("9OIoU", productShippingV3_6.getService());
      assertNull(productShippingV3_6.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_6.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_6.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_7.getCountry());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_7.getLocationGroupName());
      assertEquals("9OIoU", productShippingV3_7.getService());
      assertNull(productShippingV3_7.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_7.getPostalCode());
      assertNull(productShippingV3_8.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_8.getPostalCode());
      assertEquals("1-/cNNMT~vm#+AV,", productShippingV3_8.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_8.getCountry());
      assertEquals("9OIoU", productShippingV3_8.getService());
      
      ProductShippingV3 productShippingV3_11 = productShippingV3_4.locationGroupName("price");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_11);
      assertSame(productShippingV3_1, productShippingV3_10);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_11);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_10);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_9);
      assertSame(productShippingV3_4, productShippingV3_11);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_10);
      assertSame(productShippingV3_11, productShippingV3_10);
      assertSame(productShippingV3_11, productShippingV3_0);
      assertSame(productShippingV3_11, productShippingV3_5);
      assertSame(productShippingV3_11, productShippingV3_9);
      assertSame(productShippingV3_11, productShippingV3_2);
      assertSame(productShippingV3_11, productShippingV3_1);
      assertSame(productShippingV3_11, productShippingV3_6);
      assertSame(productShippingV3_11, productShippingV3_8);
      assertSame(productShippingV3_11, productShippingV3_7);
      assertSame(productShippingV3_11, productShippingV3_3);
      assertSame(productShippingV3_11, productShippingV3_4);
      assertNotNull(productShippingV3_11);
      assertEquals("9OIoU", productShippingV3_0.getService());
      assertEquals("UZ/XhRXO", productShippingV3_0.getPostalCode());
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_1.getPostalCode());
      assertEquals("price", productShippingV3_1.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_1.getCountry());
      assertEquals("9OIoU", productShippingV3_1.getService());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("9OIoU", productShippingV3_2.getService());
      assertEquals("JyVa&U-fE", productShippingV3_2.getCountry());
      assertEquals("price", productShippingV3_2.getLocationGroupName());
      assertEquals("UZ/XhRXO", productShippingV3_2.getPostalCode());
      assertEquals("9OIoU", productShippingV3_4.getService());
      assertEquals("JyVa&U-fE", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_4.getPostalCode());
      assertEquals("price", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_11.getRegion());
      assertEquals("9OIoU", productShippingV3_11.getService());
      assertEquals("JyVa&U-fE", productShippingV3_11.getCountry());
      assertEquals("price", productShippingV3_11.getLocationGroupName());
      assertEquals("UZ/XhRXO", productShippingV3_11.getPostalCode());
      
      String string4 = productShippingV3_10.getLocationGroupName();
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_11);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_11);
      assertSame(productShippingV3_1, productShippingV3_10);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_11);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_10);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_10);
      assertSame(productShippingV3_3, productShippingV3_9);
      assertSame(productShippingV3_3, productShippingV3_11);
      assertSame(productShippingV3_3, productShippingV3_8);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(price0, price1);
      assertSame(productShippingV3_10, productShippingV3_8);
      assertSame(productShippingV3_10, productShippingV3_7);
      assertSame(productShippingV3_10, productShippingV3_2);
      assertSame(productShippingV3_10, productShippingV3_6);
      assertSame(productShippingV3_10, productShippingV3_0);
      assertSame(productShippingV3_10, productShippingV3_5);
      assertSame(productShippingV3_10, productShippingV3_9);
      assertSame(productShippingV3_10, productShippingV3_11);
      assertSame(productShippingV3_10, productShippingV3_1);
      assertSame(productShippingV3_10, productShippingV3_4);
      assertSame(productShippingV3_10, productShippingV3_3);
      assertSame(price1, price0);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_8);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_9);
      assertSame(productShippingV3_5, productShippingV3_11);
      assertSame(productShippingV3_5, productShippingV3_10);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_8);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_9);
      assertSame(productShippingV3_6, productShippingV3_11);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_10);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_7);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_10);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_9);
      assertSame(productShippingV3_7, productShippingV3_11);
      assertSame(productShippingV3_7, productShippingV3_8);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_9);
      assertSame(productShippingV3_8, productShippingV3_10);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_11);
      assertEquals("price", string4);
      assertNotNull(string4);
      assertEquals("9OIoU", productShippingV3_0.getService());
      assertEquals("UZ/XhRXO", productShippingV3_0.getPostalCode());
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_1.getPostalCode());
      assertEquals("price", productShippingV3_1.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_1.getCountry());
      assertEquals("9OIoU", productShippingV3_1.getService());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("9OIoU", productShippingV3_2.getService());
      assertEquals("JyVa&U-fE", productShippingV3_2.getCountry());
      assertEquals("price", productShippingV3_2.getLocationGroupName());
      assertEquals("UZ/XhRXO", productShippingV3_2.getPostalCode());
      assertEquals("price", productShippingV3_3.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_3.getCountry());
      assertEquals("UZ/XhRXO", productShippingV3_3.getPostalCode());
      assertEquals("9OIoU", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getRegion());
      assertNull(price0.getValue());
      assertEquals("eovav", price0.getCurrency());
      assertEquals("price", productShippingV3_10.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_10.getCountry());
      assertNull(productShippingV3_10.getRegion());
      assertEquals("9OIoU", productShippingV3_10.getService());
      assertEquals("UZ/XhRXO", productShippingV3_10.getPostalCode());
      assertEquals("eovav", price1.getCurrency());
      assertNull(price1.getValue());
      assertEquals("JyVa&U-fE", productShippingV3_5.getCountry());
      assertEquals("UZ/XhRXO", productShippingV3_5.getPostalCode());
      assertEquals("price", productShippingV3_5.getLocationGroupName());
      assertNull(productShippingV3_5.getRegion());
      assertEquals("9OIoU", productShippingV3_5.getService());
      assertEquals("UZ/XhRXO", productShippingV3_6.getPostalCode());
      assertEquals("9OIoU", productShippingV3_6.getService());
      assertNull(productShippingV3_6.getRegion());
      assertEquals("JyVa&U-fE", productShippingV3_6.getCountry());
      assertEquals("price", productShippingV3_6.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_7.getCountry());
      assertEquals("9OIoU", productShippingV3_7.getService());
      assertNull(productShippingV3_7.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_7.getPostalCode());
      assertEquals("price", productShippingV3_7.getLocationGroupName());
      assertNull(productShippingV3_8.getRegion());
      assertEquals("UZ/XhRXO", productShippingV3_8.getPostalCode());
      assertEquals("price", productShippingV3_8.getLocationGroupName());
      assertEquals("JyVa&U-fE", productShippingV3_8.getCountry());
      assertEquals("9OIoU", productShippingV3_8.getService());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.locationGroupName("jR~");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("jR~", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("jR~", productShippingV3_1.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.country("price");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(productShippingV3_2);
      assertEquals("price", productShippingV3_0.getCountry());
      assertEquals("jR~", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("jR~", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertEquals("price", productShippingV3_2.getCountry());
      assertEquals("jR~", productShippingV3_2.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_1.postalCode("service");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNotNull(productShippingV3_3);
      assertEquals("service", productShippingV3_0.getPostalCode());
      assertEquals("price", productShippingV3_0.getCountry());
      assertEquals("jR~", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_1.getCountry());
      assertEquals("service", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("jR~", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_3.getRegion());
      assertEquals("price", productShippingV3_3.getCountry());
      assertEquals("jR~", productShippingV3_3.getLocationGroupName());
      assertEquals("service", productShippingV3_3.getPostalCode());
      
      boolean boolean0 = productShippingV3_1.equals(productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertTrue(boolean0);
      assertEquals("service", productShippingV3_0.getPostalCode());
      assertEquals("price", productShippingV3_0.getCountry());
      assertEquals("jR~", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_1.getCountry());
      assertEquals("service", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("jR~", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getService());
      assertEquals("price", productShippingV3_2.getCountry());
      assertEquals("service", productShippingV3_2.getPostalCode());
      assertEquals("jR~", productShippingV3_2.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_0.locationId(productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertNotNull(productShippingV3_4);
      assertEquals("service", productShippingV3_0.getPostalCode());
      assertEquals("price", productShippingV3_0.getCountry());
      assertEquals("jR~", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_1.getCountry());
      assertEquals("service", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("jR~", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_4.getRegion());
      assertEquals("jR~", productShippingV3_4.getLocationGroupName());
      assertEquals("price", productShippingV3_4.getCountry());
      assertEquals("service", productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getService());
      
      String string0 = productShippingV3_0.getLocationGroupName();
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertEquals("jR~", string0);
      assertNotNull(string0);
      assertEquals("service", productShippingV3_0.getPostalCode());
      assertEquals("price", productShippingV3_0.getCountry());
      assertEquals("jR~", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      productShippingV3_1.setLocationId(object0);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertEquals("service", productShippingV3_0.getPostalCode());
      assertEquals("price", productShippingV3_0.getCountry());
      assertEquals("jR~", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_1.getCountry());
      assertEquals("service", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("jR~", productShippingV3_1.getLocationGroupName());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getCurrency());
      assertNull(price0.getValue());
      
      Price price1 = price0.currency("`9UP/1M");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertNull(price0.getValue());
      assertEquals("`9UP/1M", price0.getCurrency());
      assertNull(price1.getValue());
      assertEquals("`9UP/1M", price1.getCurrency());
      
      Price price2 = price1.value("H");
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertNotNull(price2);
      assertEquals("H", price0.getValue());
      assertEquals("`9UP/1M", price0.getCurrency());
      assertEquals("`9UP/1M", price1.getCurrency());
      assertEquals("H", price1.getValue());
      assertEquals("H", price2.getValue());
      assertEquals("`9UP/1M", price2.getCurrency());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_2.price(price2);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertNotNull(productShippingV3_5);
      assertEquals("service", productShippingV3_0.getPostalCode());
      assertEquals("price", productShippingV3_0.getCountry());
      assertEquals("jR~", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_1.getCountry());
      assertEquals("service", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("jR~", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getService());
      assertEquals("price", productShippingV3_2.getCountry());
      assertEquals("service", productShippingV3_2.getPostalCode());
      assertEquals("jR~", productShippingV3_2.getLocationGroupName());
      assertEquals("H", price0.getValue());
      assertEquals("`9UP/1M", price0.getCurrency());
      assertEquals("`9UP/1M", price1.getCurrency());
      assertEquals("H", price1.getValue());
      assertEquals("H", price2.getValue());
      assertEquals("`9UP/1M", price2.getCurrency());
      assertEquals("jR~", productShippingV3_5.getLocationGroupName());
      assertEquals("price", productShippingV3_5.getCountry());
      assertNull(productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getService());
      assertEquals("service", productShippingV3_5.getPostalCode());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getRegion());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.locationGroupName("region");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("region", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("region", productShippingV3_1.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.country("price");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_0.getCountry());
      assertEquals("region", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("region", productShippingV3_1.getLocationGroupName());
      assertEquals("price", productShippingV3_1.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("region", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertEquals("price", productShippingV3_2.getCountry());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_1.postalCode("service");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getService());
      assertEquals("service", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_0.getCountry());
      assertEquals("region", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getService());
      assertEquals("service", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("region", productShippingV3_1.getLocationGroupName());
      assertEquals("price", productShippingV3_1.getCountry());
      assertNull(productShippingV3_3.getService());
      assertEquals("region", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getRegion());
      assertEquals("price", productShippingV3_3.getCountry());
      assertEquals("service", productShippingV3_3.getPostalCode());
      
      boolean boolean0 = productShippingV3_1.equals(productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertTrue(boolean0);
      assertNull(productShippingV3_0.getService());
      assertEquals("service", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_0.getCountry());
      assertEquals("region", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getService());
      assertEquals("service", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("region", productShippingV3_1.getLocationGroupName());
      assertEquals("price", productShippingV3_1.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("region", productShippingV3_2.getLocationGroupName());
      assertEquals("service", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertEquals("price", productShippingV3_2.getCountry());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_0.locationId(productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertNotNull(productShippingV3_4);
      assertNull(productShippingV3_0.getService());
      assertEquals("service", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_0.getCountry());
      assertEquals("region", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getService());
      assertEquals("service", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("region", productShippingV3_1.getLocationGroupName());
      assertEquals("price", productShippingV3_1.getCountry());
      assertNull(productShippingV3_4.getService());
      assertEquals("region", productShippingV3_4.getLocationGroupName());
      assertEquals("price", productShippingV3_4.getCountry());
      assertEquals("service", productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getRegion());
      
      String string0 = productShippingV3_0.getLocationGroupName();
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertEquals("region", string0);
      assertNotNull(string0);
      assertNull(productShippingV3_0.getService());
      assertEquals("service", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_0.getCountry());
      assertEquals("region", productShippingV3_0.getLocationGroupName());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      productShippingV3_1.setLocationId(object0);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertNull(productShippingV3_0.getService());
      assertEquals("service", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_0.getCountry());
      assertEquals("region", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getService());
      assertEquals("service", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("region", productShippingV3_1.getLocationGroupName());
      assertEquals("price", productShippingV3_1.getCountry());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.locationGroupName("");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.service("locationGroupName");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("locationGroupName", productShippingV3_1.getService());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("locationGroupName", productShippingV3_2.getService());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.country("    country: ");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertEquals("    country: ", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    country: ", productShippingV3_1.getCountry());
      assertEquals("locationGroupName", productShippingV3_1.getService());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("    country: ", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("locationGroupName", productShippingV3_2.getService());
      assertEquals("    country: ", productShippingV3_3.getCountry());
      assertEquals("", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getRegion());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_2.service("locationId");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertNotNull(productShippingV3_4);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("locationId", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("    country: ", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("locationId", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    country: ", productShippingV3_1.getCountry());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("    country: ", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("locationId", productShippingV3_2.getService());
      assertNull(productShippingV3_4.getRegion());
      assertEquals("locationId", productShippingV3_4.getService());
      assertEquals("    country: ", productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getPostalCode());
      
      productShippingV3_2.setCountry((String) null);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("locationId", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("locationId", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("locationId", productShippingV3_2.getService());
      
      productShippingV3_4.setCountry("country");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("locationId", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("locationId", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("country", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("locationId", productShippingV3_2.getService());
      assertEquals("country", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getRegion());
      assertEquals("locationId", productShippingV3_4.getService());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getPostalCode());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_3.postalCode("");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertNotNull(productShippingV3_5);
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("locationId", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("locationId", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertEquals("country", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("locationId", productShippingV3_2.getService());
      assertEquals("locationId", productShippingV3_3.getService());
      assertEquals("", productShippingV3_3.getLocationGroupName());
      assertEquals("", productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getRegion());
      assertEquals("country", productShippingV3_3.getCountry());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      assertEquals("country", productShippingV3_5.getCountry());
      assertEquals("", productShippingV3_5.getPostalCode());
      assertEquals("locationId", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      
      productShippingV3_5.setLocationGroupName("country");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("country", productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("locationId", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("locationId", productShippingV3_1.getService());
      assertEquals("country", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertEquals("country", productShippingV3_2.getLocationGroupName());
      assertEquals("country", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("locationId", productShippingV3_2.getService());
      assertEquals("locationId", productShippingV3_3.getService());
      assertEquals("country", productShippingV3_3.getLocationGroupName());
      assertEquals("", productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getRegion());
      assertEquals("country", productShippingV3_3.getCountry());
      assertEquals("country", productShippingV3_5.getCountry());
      assertEquals("", productShippingV3_5.getPostalCode());
      assertEquals("country", productShippingV3_5.getLocationGroupName());
      assertEquals("locationId", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      
      String string0 = productShippingV3_5.getRegion();
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertNull(string0);
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("country", productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("locationId", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("locationId", productShippingV3_1.getService());
      assertEquals("country", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertEquals("country", productShippingV3_2.getLocationGroupName());
      assertEquals("country", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("locationId", productShippingV3_2.getService());
      assertEquals("locationId", productShippingV3_3.getService());
      assertEquals("country", productShippingV3_3.getLocationGroupName());
      assertEquals("", productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getRegion());
      assertEquals("country", productShippingV3_3.getCountry());
      assertEquals("country", productShippingV3_5.getCountry());
      assertEquals("", productShippingV3_5.getPostalCode());
      assertEquals("country", productShippingV3_5.getLocationGroupName());
      assertEquals("locationId", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      
      productShippingV3_0.setCountry("service");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("country", productShippingV3_0.getLocationGroupName());
      assertEquals("locationId", productShippingV3_0.getService());
      assertEquals("service", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      
      ProductShippingV3 productShippingV3_6 = productShippingV3_2.country("country");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertNotNull(productShippingV3_6);
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("country", productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("locationId", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("locationId", productShippingV3_1.getService());
      assertEquals("country", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertEquals("country", productShippingV3_2.getLocationGroupName());
      assertEquals("country", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("locationId", productShippingV3_2.getService());
      assertEquals("", productShippingV3_6.getPostalCode());
      assertEquals("country", productShippingV3_6.getCountry());
      assertEquals("country", productShippingV3_6.getLocationGroupName());
      assertEquals("locationId", productShippingV3_6.getService());
      assertNull(productShippingV3_6.getRegion());
      
      String string1 = productShippingV3_5.getService();
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertEquals("locationId", string1);
      assertNotNull(string1);
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("country", productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("locationId", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("locationId", productShippingV3_1.getService());
      assertEquals("country", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertEquals("country", productShippingV3_2.getLocationGroupName());
      assertEquals("country", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("locationId", productShippingV3_2.getService());
      assertEquals("locationId", productShippingV3_3.getService());
      assertEquals("country", productShippingV3_3.getLocationGroupName());
      assertEquals("", productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getRegion());
      assertEquals("country", productShippingV3_3.getCountry());
      assertEquals("country", productShippingV3_5.getCountry());
      assertEquals("", productShippingV3_5.getPostalCode());
      assertEquals("country", productShippingV3_5.getLocationGroupName());
      assertEquals("locationId", productShippingV3_5.getService());
      assertNull(productShippingV3_5.getRegion());
      
      productShippingV3_6.setService("");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("country", productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("country", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertEquals("country", productShippingV3_2.getLocationGroupName());
      assertEquals("country", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("", productShippingV3_6.getPostalCode());
      assertEquals("country", productShippingV3_6.getCountry());
      assertEquals("country", productShippingV3_6.getLocationGroupName());
      assertNull(productShippingV3_6.getRegion());
      assertEquals("", productShippingV3_6.getService());
      
      ProductShippingV3 productShippingV3_7 = productShippingV3_1.locationGroupName("price");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertNotNull(productShippingV3_7);
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("country", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("price", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("country", productShippingV3_7.getCountry());
      assertNull(productShippingV3_7.getRegion());
      assertEquals("price", productShippingV3_7.getLocationGroupName());
      assertEquals("", productShippingV3_7.getPostalCode());
      assertEquals("", productShippingV3_7.getService());
      
      ProductShippingV3 productShippingV3_8 = productShippingV3_4.region((String) null);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertNotNull(productShippingV3_8);
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("country", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("price", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("price", productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertEquals("country", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("country", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getRegion());
      assertEquals("price", productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getService());
      assertEquals("price", productShippingV3_8.getLocationGroupName());
      assertEquals("", productShippingV3_8.getPostalCode());
      assertEquals("", productShippingV3_8.getService());
      assertNull(productShippingV3_8.getRegion());
      assertEquals("country", productShippingV3_8.getCountry());
      
      productShippingV3_7.setRegion("}j6@!tkZ*W0M3ycsip");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_8);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("price", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_1.getRegion());
      assertEquals("country", productShippingV3_7.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_7.getRegion());
      assertEquals("price", productShippingV3_7.getLocationGroupName());
      assertEquals("", productShippingV3_7.getPostalCode());
      assertEquals("", productShippingV3_7.getService());
      
      ProductShippingV3 productShippingV3_9 = productShippingV3_4.country("locationId");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_9, productShippingV3_2);
      assertSame(productShippingV3_9, productShippingV3_3);
      assertSame(productShippingV3_9, productShippingV3_6);
      assertSame(productShippingV3_9, productShippingV3_4);
      assertSame(productShippingV3_9, productShippingV3_5);
      assertSame(productShippingV3_9, productShippingV3_1);
      assertSame(productShippingV3_9, productShippingV3_7);
      assertSame(productShippingV3_9, productShippingV3_8);
      assertSame(productShippingV3_9, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_9);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertNotNull(productShippingV3_9);
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("locationId", productShippingV3_0.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_9.getLocationGroupName());
      assertEquals("", productShippingV3_9.getPostalCode());
      assertEquals("", productShippingV3_9.getService());
      assertEquals("locationId", productShippingV3_9.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_9.getRegion());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("price", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("locationId", productShippingV3_1.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("price", productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_2.getRegion());
      assertEquals("locationId", productShippingV3_2.getCountry());
      assertEquals("locationId", productShippingV3_4.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_4.getRegion());
      assertEquals("price", productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getService());
      
      String string2 = productShippingV3_9.getLocationGroupName();
      assertFalse(string2.equals((Object)string1));
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_9, productShippingV3_2);
      assertSame(productShippingV3_9, productShippingV3_3);
      assertSame(productShippingV3_9, productShippingV3_6);
      assertSame(productShippingV3_9, productShippingV3_4);
      assertSame(productShippingV3_9, productShippingV3_5);
      assertSame(productShippingV3_9, productShippingV3_1);
      assertSame(productShippingV3_9, productShippingV3_7);
      assertSame(productShippingV3_9, productShippingV3_8);
      assertSame(productShippingV3_9, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_9);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertEquals("price", string2);
      assertNotNull(string2);
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("locationId", productShippingV3_0.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_0.getRegion());
      assertEquals("price", productShippingV3_9.getLocationGroupName());
      assertEquals("", productShippingV3_9.getPostalCode());
      assertEquals("", productShippingV3_9.getService());
      assertEquals("locationId", productShippingV3_9.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_9.getRegion());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("price", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("locationId", productShippingV3_1.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("price", productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_2.getRegion());
      assertEquals("locationId", productShippingV3_2.getCountry());
      assertEquals("locationId", productShippingV3_4.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_4.getRegion());
      assertEquals("price", productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getService());
      
      Object object0 = productShippingV3_0.getLocationId();
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertNull(object0);
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("locationId", productShippingV3_0.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_0.getRegion());
      
      ProductShippingV3 productShippingV3_10 = productShippingV3_8.locationId("    country: ");
      assertSame(productShippingV3_0, productShippingV3_10);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_9);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_9);
      assertSame(productShippingV3_1, productShippingV3_10);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_9);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_10);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_10, productShippingV3_1);
      assertSame(productShippingV3_10, productShippingV3_7);
      assertSame(productShippingV3_10, productShippingV3_8);
      assertSame(productShippingV3_10, productShippingV3_3);
      assertSame(productShippingV3_10, productShippingV3_6);
      assertSame(productShippingV3_10, productShippingV3_9);
      assertSame(productShippingV3_10, productShippingV3_2);
      assertSame(productShippingV3_10, productShippingV3_4);
      assertSame(productShippingV3_10, productShippingV3_0);
      assertSame(productShippingV3_10, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_10);
      assertSame(productShippingV3_4, productShippingV3_9);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_10);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_9);
      assertNotNull(productShippingV3_10);
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("locationId", productShippingV3_0.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_1.getService());
      assertEquals("price", productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getPostalCode());
      assertEquals("locationId", productShippingV3_1.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_1.getRegion());
      assertEquals("", productShippingV3_2.getService());
      assertEquals("price", productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getPostalCode());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_2.getRegion());
      assertEquals("locationId", productShippingV3_2.getCountry());
      assertEquals("locationId", productShippingV3_10.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_10.getRegion());
      assertEquals("", productShippingV3_10.getService());
      assertEquals("price", productShippingV3_10.getLocationGroupName());
      assertEquals("", productShippingV3_10.getPostalCode());
      assertEquals("locationId", productShippingV3_4.getCountry());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_4.getRegion());
      assertEquals("price", productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getService());
      assertEquals("price", productShippingV3_8.getLocationGroupName());
      assertEquals("", productShippingV3_8.getPostalCode());
      assertEquals("", productShippingV3_8.getService());
      assertEquals("}j6@!tkZ*W0M3ycsip", productShippingV3_8.getRegion());
      assertEquals("locationId", productShippingV3_8.getCountry());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      Price price1 = price0.value("tT?falZ.@%WLt");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertEquals("tT?falZ.@%WLt", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("tT?falZ.@%WLt", price1.getValue());
      assertNull(price1.getCurrency());
      
      Price price2 = price1.currency("currency");
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price1);
      assertSame(price2, price0);
      assertNotNull(price2);
      assertEquals("tT?falZ.@%WLt", price0.getValue());
      assertEquals("currency", price0.getCurrency());
      assertEquals("tT?falZ.@%WLt", price1.getValue());
      assertEquals("currency", price1.getCurrency());
      assertEquals("currency", price2.getCurrency());
      assertEquals("tT?falZ.@%WLt", price2.getValue());
      
      String string0 = productShippingV3_0.toString();
      assertEquals("class ProductShippingV3 {\n    price: null\n    country: null\n    region: null\n    service: null\n    locationId: null\n    locationGroupName: null\n    postalCode: null\n}", string0);
      assertNotNull(string0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      
      String string1 = price2.toString();
      assertFalse(string1.equals((Object)string0));
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price1);
      assertSame(price2, price0);
      assertNotNull(string1);
      assertEquals("tT?falZ.@%WLt", price0.getValue());
      assertEquals("currency", price0.getCurrency());
      assertEquals("tT?falZ.@%WLt", price1.getValue());
      assertEquals("currency", price1.getCurrency());
      assertEquals("currency", price2.getCurrency());
      assertEquals("tT?falZ.@%WLt", price2.getValue());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.price(price2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price1);
      assertSame(price2, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("tT?falZ.@%WLt", price0.getValue());
      assertEquals("currency", price0.getCurrency());
      assertEquals("tT?falZ.@%WLt", price1.getValue());
      assertEquals("currency", price1.getCurrency());
      assertEquals("currency", price2.getCurrency());
      assertEquals("tT?falZ.@%WLt", price2.getValue());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.service("");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price1);
      assertSame(price2, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_0.getService());
      assertEquals("tT?falZ.@%WLt", price0.getValue());
      assertEquals("currency", price0.getCurrency());
      assertEquals("tT?falZ.@%WLt", price1.getValue());
      assertEquals("currency", price1.getCurrency());
      assertEquals("currency", price2.getCurrency());
      assertEquals("tT?falZ.@%WLt", price2.getValue());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getLocationGroupName());
      
      productShippingV3_0.setService("value");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("value", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.price(price0);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price1);
      assertSame(price2, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("value", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("tT?falZ.@%WLt", price0.getValue());
      assertEquals("currency", price0.getCurrency());
      assertEquals("tT?falZ.@%WLt", price1.getValue());
      assertEquals("currency", price1.getCurrency());
      assertEquals("currency", price2.getCurrency());
      assertEquals("tT?falZ.@%WLt", price2.getValue());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("value", productShippingV3_1.getService());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("value", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertEquals("value", productShippingV3_3.getService());
      
      String string2 = price1.toString();
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertNotNull(string2);
      assertEquals("tT?falZ.@%WLt", price0.getValue());
      assertEquals("currency", price0.getCurrency());
      assertEquals("tT?falZ.@%WLt", price1.getValue());
      assertEquals("currency", price1.getCurrency());
      
      productShippingV3_1.setRegion("$R2IE^c/T4S8$BKE");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price1);
      assertSame(price2, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("$R2IE^c/T4S8$BKE", productShippingV3_0.getRegion());
      assertEquals("value", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("tT?falZ.@%WLt", price0.getValue());
      assertEquals("currency", price0.getCurrency());
      assertEquals("tT?falZ.@%WLt", price1.getValue());
      assertEquals("currency", price1.getCurrency());
      assertEquals("currency", price2.getCurrency());
      assertEquals("tT?falZ.@%WLt", price2.getValue());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("value", productShippingV3_1.getService());
      assertEquals("$R2IE^c/T4S8$BKE", productShippingV3_1.getRegion());
      
      String string3 = productShippingV3_2.getPostalCode();
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price1);
      assertSame(price2, price0);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNull(string3);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("$R2IE^c/T4S8$BKE", productShippingV3_0.getRegion());
      assertEquals("value", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("tT?falZ.@%WLt", price0.getValue());
      assertEquals("currency", price0.getCurrency());
      assertEquals("tT?falZ.@%WLt", price1.getValue());
      assertEquals("currency", price1.getCurrency());
      assertEquals("currency", price2.getCurrency());
      assertEquals("tT?falZ.@%WLt", price2.getValue());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("value", productShippingV3_1.getService());
      assertEquals("$R2IE^c/T4S8$BKE", productShippingV3_1.getRegion());
      assertEquals("value", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertEquals("$R2IE^c/T4S8$BKE", productShippingV3_2.getRegion());
      
      productShippingV3_0.setCountry("country");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertEquals("$R2IE^c/T4S8$BKE", productShippingV3_0.getRegion());
      assertEquals("value", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      
      productShippingV3_0.setPrice(price2);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price1);
      assertSame(price2, price0);
      assertEquals("$R2IE^c/T4S8$BKE", productShippingV3_0.getRegion());
      assertEquals("value", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("tT?falZ.@%WLt", price0.getValue());
      assertEquals("currency", price0.getCurrency());
      assertEquals("tT?falZ.@%WLt", price1.getValue());
      assertEquals("currency", price1.getCurrency());
      assertEquals("currency", price2.getCurrency());
      assertEquals("tT?falZ.@%WLt", price2.getValue());
      
      String string4 = productShippingV3_0.getPostalCode();
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNull(string4);
      assertEquals("$R2IE^c/T4S8$BKE", productShippingV3_0.getRegion());
      assertEquals("value", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      
      String string5 = productShippingV3_0.toString();
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNotNull(string5);
      assertEquals("$R2IE^c/T4S8$BKE", productShippingV3_0.getRegion());
      assertEquals("value", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_0.locationGroupName("QGLD~m1DCntEM0/y%Af");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertNotNull(productShippingV3_4);
      assertEquals("$R2IE^c/T4S8$BKE", productShippingV3_0.getRegion());
      assertEquals("value", productShippingV3_0.getService());
      assertEquals("country", productShippingV3_0.getCountry());
      assertEquals("QGLD~m1DCntEM0/y%Af", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("$R2IE^c/T4S8$BKE", productShippingV3_4.getRegion());
      assertEquals("country", productShippingV3_4.getCountry());
      assertEquals("value", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("QGLD~m1DCntEM0/y%Af", productShippingV3_4.getLocationGroupName());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.locationId((Object) null);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.region("y'6Ot7-zI9pDL");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_1.getRegion());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.service("region");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("region", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("region", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_1.getRegion());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("region", productShippingV3_2.getService());
      assertEquals("region", productShippingV3_3.getService());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getLocationGroupName());
      
      productShippingV3_3.setService("country");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("country", productShippingV3_0.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_1.getRegion());
      assertEquals("country", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("country", productShippingV3_3.getService());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getLocationGroupName());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getCurrency());
      assertNull(price0.getValue());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_3.price(price0);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertNotNull(productShippingV3_4);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("country", productShippingV3_0.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_1.getRegion());
      assertEquals("country", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("country", productShippingV3_3.getService());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("country", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_4.getRegion());
      assertNull(productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getPostalCode());
      
      productShippingV3_1.setPostalCode("uC/adGH`e,DH9");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_0.getPostalCode());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("country", productShippingV3_0.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("y'6Ot7-zI9pDL", productShippingV3_1.getRegion());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_4.region("-");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertNotNull(productShippingV3_5);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("-", productShippingV3_0.getRegion());
      assertEquals("uC/adGH`e,DH9", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("country", productShippingV3_0.getService());
      assertEquals("-", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("country", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertEquals("-", productShippingV3_2.getRegion());
      assertEquals("uC/adGH`e,DH9", productShippingV3_2.getPostalCode());
      assertEquals("country", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getCountry());
      assertEquals("uC/adGH`e,DH9", productShippingV3_3.getPostalCode());
      assertEquals("-", productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("country", productShippingV3_4.getService());
      assertEquals("uC/adGH`e,DH9", productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getCountry());
      assertEquals("-", productShippingV3_4.getRegion());
      assertNull(productShippingV3_5.getCountry());
      assertEquals("-", productShippingV3_5.getRegion());
      assertEquals("uC/adGH`e,DH9", productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getLocationGroupName());
      assertEquals("country", productShippingV3_5.getService());
      
      boolean boolean0 = productShippingV3_5.equals("uC/adGH`e,DH9");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertFalse(boolean0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("-", productShippingV3_0.getRegion());
      assertEquals("uC/adGH`e,DH9", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("country", productShippingV3_0.getService());
      assertEquals("-", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("country", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertEquals("-", productShippingV3_2.getRegion());
      assertEquals("uC/adGH`e,DH9", productShippingV3_2.getPostalCode());
      assertEquals("country", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getCountry());
      assertEquals("uC/adGH`e,DH9", productShippingV3_3.getPostalCode());
      assertEquals("-", productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("country", productShippingV3_4.getService());
      assertEquals("uC/adGH`e,DH9", productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getCountry());
      assertEquals("-", productShippingV3_4.getRegion());
      assertNull(productShippingV3_5.getCountry());
      assertEquals("-", productShippingV3_5.getRegion());
      assertEquals("uC/adGH`e,DH9", productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getLocationGroupName());
      assertEquals("country", productShippingV3_5.getService());
      
      productShippingV3_4.setRegion("");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("country", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("country", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_2.getPostalCode());
      assertEquals("", productShippingV3_2.getRegion());
      assertEquals("", productShippingV3_3.getRegion());
      assertEquals("country", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getCountry());
      assertEquals("uC/adGH`e,DH9", productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(price0.getCurrency());
      assertNull(price0.getValue());
      assertEquals("country", productShippingV3_4.getService());
      assertEquals("uC/adGH`e,DH9", productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertEquals("", productShippingV3_4.getRegion());
      assertNull(productShippingV3_4.getCountry());
      
      productShippingV3_2.hashCode();
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("country", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("country", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_2.getPostalCode());
      assertEquals("", productShippingV3_2.getRegion());
      
      productShippingV3_3.setRegion("postalCode");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("country", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getService());
      assertEquals("postalCode", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("country", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_2.getPostalCode());
      assertEquals("postalCode", productShippingV3_2.getRegion());
      assertEquals("postalCode", productShippingV3_3.getRegion());
      assertEquals("country", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getCountry());
      assertEquals("uC/adGH`e,DH9", productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getLocationGroupName());
      
      Price price1 = productShippingV3_1.getPrice();
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("country", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_1.getPostalCode());
      assertEquals("country", productShippingV3_1.getService());
      assertEquals("postalCode", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(price1.getValue());
      assertNull(price1.getCurrency());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.country("service");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("service", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("service", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.service("region");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("region", productShippingV3_0.getService());
      assertEquals("service", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("service", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("region", productShippingV3_1.getService());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("service", productShippingV3_2.getCountry());
      assertEquals("region", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.price(price0);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("region", productShippingV3_0.getService());
      assertEquals("service", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("service", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("region", productShippingV3_1.getService());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("service", productShippingV3_2.getCountry());
      assertEquals("region", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("service", productShippingV3_3.getCountry());
      assertEquals("region", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getRegion());
      
      productShippingV3_0.setPostalCode("uC/adGH`e,DH9");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertEquals("uC/adGH`e,DH9", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("region", productShippingV3_0.getService());
      assertEquals("service", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_3.region("locationId");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertNotNull(productShippingV3_4);
      assertEquals("locationId", productShippingV3_0.getRegion());
      assertEquals("uC/adGH`e,DH9", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getService());
      assertEquals("service", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("service", productShippingV3_1.getCountry());
      assertEquals("uC/adGH`e,DH9", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("locationId", productShippingV3_1.getRegion());
      assertEquals("region", productShippingV3_1.getService());
      assertEquals("service", productShippingV3_2.getCountry());
      assertEquals("region", productShippingV3_2.getService());
      assertEquals("locationId", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_2.getPostalCode());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("service", productShippingV3_3.getCountry());
      assertEquals("region", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertEquals("uC/adGH`e,DH9", productShippingV3_3.getPostalCode());
      assertEquals("locationId", productShippingV3_3.getRegion());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertEquals("region", productShippingV3_4.getService());
      assertEquals("locationId", productShippingV3_4.getRegion());
      assertEquals("uC/adGH`e,DH9", productShippingV3_4.getPostalCode());
      assertEquals("service", productShippingV3_4.getCountry());
      
      productShippingV3_1.hashCode();
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertEquals("locationId", productShippingV3_0.getRegion());
      assertEquals("uC/adGH`e,DH9", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getService());
      assertEquals("service", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("service", productShippingV3_1.getCountry());
      assertEquals("uC/adGH`e,DH9", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("locationId", productShippingV3_1.getRegion());
      assertEquals("region", productShippingV3_1.getService());
      
      Price price1 = productShippingV3_0.getPrice();
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertEquals("locationId", productShippingV3_0.getRegion());
      assertEquals("uC/adGH`e,DH9", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getService());
      assertEquals("service", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(price1.getCurrency());
      assertNull(price1.getValue());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.country((String) null);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.locationGroupName("");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.region((String) null);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getService());
      assertEquals("", productShippingV3_3.getLocationGroupName());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getCurrency());
      assertNull(price0.getValue());
      
      Price price1 = price0.value("locationId");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertNull(price0.getCurrency());
      assertEquals("locationId", price0.getValue());
      assertEquals("locationId", price1.getValue());
      assertNull(price1.getCurrency());
      
      Price price2 = price1.currency((String) null);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price1);
      assertSame(price2, price0);
      assertNotNull(price2);
      assertNull(price0.getCurrency());
      assertEquals("locationId", price0.getValue());
      assertEquals("locationId", price1.getValue());
      assertNull(price1.getCurrency());
      assertEquals("locationId", price2.getValue());
      assertNull(price2.getCurrency());
      
      price0.setValue("value");
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertNull(price0.getCurrency());
      assertEquals("value", price0.getValue());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_1.price(price2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price1);
      assertSame(price2, price0);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertNotNull(productShippingV3_4);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(price0.getCurrency());
      assertEquals("value", price0.getValue());
      assertEquals("value", price1.getValue());
      assertNull(price1.getCurrency());
      assertEquals("value", price2.getValue());
      assertNull(price2.getCurrency());
      assertNull(productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getService());
      assertNull(productShippingV3_4.getRegion());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_2.postalCode("    currency: ");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertNotNull(productShippingV3_5);
      assertNull(productShippingV3_0.getRegion());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getCountry());
      assertNull(productShippingV3_5.getService());
      
      productShippingV3_4.setCountry("postalCode");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price1);
      assertSame(price2, price0);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertNull(productShippingV3_0.getRegion());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertEquals("postalCode", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getService());
      assertEquals("postalCode", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertNull(price0.getCurrency());
      assertEquals("value", price0.getValue());
      assertEquals("value", price1.getValue());
      assertNull(price1.getCurrency());
      assertEquals("value", price2.getValue());
      assertNull(price2.getCurrency());
      assertEquals("postalCode", productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getService());
      assertNull(productShippingV3_4.getRegion());
      assertEquals("    currency: ", productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      
      String string0 = productShippingV3_2.toString();
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertNotNull(string0);
      assertNull(productShippingV3_0.getRegion());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertEquals("postalCode", productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getService());
      assertEquals("postalCode", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_2.getPostalCode());
      assertEquals("postalCode", productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      
      ProductShippingV3 productShippingV3_6 = productShippingV3_3.country("value");
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertNotNull(productShippingV3_6);
      assertNull(productShippingV3_0.getRegion());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("value", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getService());
      assertEquals("value", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertEquals("value", productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_3.getRegion());
      assertEquals("    currency: ", productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getService());
      assertEquals("", productShippingV3_3.getLocationGroupName());
      assertEquals("value", productShippingV3_3.getCountry());
      assertEquals("    currency: ", productShippingV3_6.getPostalCode());
      assertEquals("value", productShippingV3_6.getCountry());
      assertEquals("", productShippingV3_6.getLocationGroupName());
      assertNull(productShippingV3_6.getService());
      assertNull(productShippingV3_6.getRegion());
      
      productShippingV3_3.setService("region");
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertNull(productShippingV3_0.getRegion());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("value", productShippingV3_0.getCountry());
      assertEquals("region", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("value", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertEquals("region", productShippingV3_2.getService());
      assertEquals("value", productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_3.getRegion());
      assertEquals("region", productShippingV3_3.getService());
      assertEquals("    currency: ", productShippingV3_3.getPostalCode());
      assertEquals("", productShippingV3_3.getLocationGroupName());
      assertEquals("value", productShippingV3_3.getCountry());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean0 = productShippingV3_0.equals(object0);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertFalse(boolean0);
      assertNull(productShippingV3_0.getRegion());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("value", productShippingV3_0.getCountry());
      
      String string1 = productShippingV3_1.getPostalCode();
      assertFalse(string1.equals((Object)string0));
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertEquals("    currency: ", string1);
      assertNotNull(string1);
      assertNull(productShippingV3_0.getRegion());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("value", productShippingV3_0.getCountry());
      assertEquals("region", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("value", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      
      String string2 = productShippingV3_2.getService();
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertEquals("region", string2);
      assertNotNull(string2);
      assertNull(productShippingV3_0.getRegion());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("value", productShippingV3_0.getCountry());
      assertEquals("region", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("value", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertEquals("region", productShippingV3_2.getService());
      assertEquals("value", productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("    currency: ", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getRegion());
      
      boolean boolean1 = productShippingV3_4.equals((Object) null);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price1);
      assertSame(price2, price0);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertFalse(boolean1);
      assertNull(productShippingV3_0.getRegion());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("value", productShippingV3_0.getCountry());
      assertEquals("region", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("value", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertNull(price0.getCurrency());
      assertEquals("value", price0.getValue());
      assertEquals("value", price1.getValue());
      assertNull(price1.getCurrency());
      assertEquals("value", price2.getValue());
      assertNull(price2.getCurrency());
      assertEquals("region", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getRegion());
      assertEquals("    currency: ", productShippingV3_4.getPostalCode());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertEquals("value", productShippingV3_4.getCountry());
      
      ProductShippingV3 productShippingV3_7 = productShippingV3_1.country("service");
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertNotNull(productShippingV3_7);
      assertNull(productShippingV3_0.getRegion());
      assertEquals("    currency: ", productShippingV3_0.getPostalCode());
      assertEquals("service", productShippingV3_0.getCountry());
      assertEquals("region", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("region", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("service", productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertEquals("    currency: ", productShippingV3_1.getPostalCode());
      assertEquals("service", productShippingV3_7.getCountry());
      assertEquals("", productShippingV3_7.getLocationGroupName());
      assertEquals("region", productShippingV3_7.getService());
      assertEquals("    currency: ", productShippingV3_7.getPostalCode());
      assertNull(productShippingV3_7.getRegion());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      
      String string0 = productShippingV3_0.getService();
      assertNull(string0);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      
      boolean boolean0 = productShippingV3_0.equals((Object) null);
      assertFalse(boolean0);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
      
      productShippingV3_0.setLocationGroupName("price");
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getService());
      assertEquals("price", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getRegion());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.postalCode("\n    ");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("\n    ", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("\n    ", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getService());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.region("Yr|z");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("Yr|z", productShippingV3_0.getRegion());
      assertEquals("\n    ", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertEquals("\n    ", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("Yr|z", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getService());
      assertEquals("Yr|z", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertEquals("\n    ", productShippingV3_2.getPostalCode());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      String string0 = price0.toString();
      assertEquals("class Price {\n    currency: null\n    value: null\n}", string0);
      assertNotNull(string0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      Price price1 = price0.value("locationGroupName");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertEquals("locationGroupName", price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(price1.getCurrency());
      assertEquals("locationGroupName", price1.getValue());
      
      Price price2 = price1.currency("postalCode");
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertNotNull(price2);
      assertEquals("locationGroupName", price0.getValue());
      assertEquals("postalCode", price0.getCurrency());
      assertEquals("postalCode", price1.getCurrency());
      assertEquals("locationGroupName", price1.getValue());
      assertEquals("postalCode", price2.getCurrency());
      assertEquals("locationGroupName", price2.getValue());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_0.price(price2);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("Yr|z", productShippingV3_0.getRegion());
      assertEquals("\n    ", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertEquals("locationGroupName", price0.getValue());
      assertEquals("postalCode", price0.getCurrency());
      assertEquals("postalCode", price1.getCurrency());
      assertEquals("locationGroupName", price1.getValue());
      assertEquals("postalCode", price2.getCurrency());
      assertEquals("locationGroupName", price2.getValue());
      assertNull(productShippingV3_3.getCountry());
      assertEquals("Yr|z", productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getService());
      assertEquals("\n    ", productShippingV3_3.getPostalCode());
      
      String string1 = productShippingV3_3.getRegion();
      assertFalse(string1.equals((Object)string0));
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertEquals("Yr|z", string1);
      assertNotNull(string1);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("Yr|z", productShippingV3_0.getRegion());
      assertEquals("\n    ", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertEquals("locationGroupName", price0.getValue());
      assertEquals("postalCode", price0.getCurrency());
      assertEquals("postalCode", price1.getCurrency());
      assertEquals("locationGroupName", price1.getValue());
      assertEquals("postalCode", price2.getCurrency());
      assertEquals("locationGroupName", price2.getValue());
      assertNull(productShippingV3_3.getCountry());
      assertEquals("Yr|z", productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getService());
      assertEquals("\n    ", productShippingV3_3.getPostalCode());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_3.region("    locationId: ");
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertNotNull(productShippingV3_4);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("\n    ", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("    locationId: ", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getService());
      assertEquals("locationGroupName", price0.getValue());
      assertEquals("postalCode", price0.getCurrency());
      assertEquals("postalCode", price1.getCurrency());
      assertEquals("locationGroupName", price1.getValue());
      assertEquals("postalCode", price2.getCurrency());
      assertEquals("locationGroupName", price2.getValue());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertEquals("    locationId: ", productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getService());
      assertEquals("\n    ", productShippingV3_3.getPostalCode());
      assertEquals("    locationId: ", productShippingV3_4.getRegion());
      assertEquals("\n    ", productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getService());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getCountry());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.region("");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.postalCode("region");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("region", productShippingV3_1.getPostalCode());
      assertEquals("region", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertEquals("", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getCountry());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_1.country("region");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("region", productShippingV3_1.getPostalCode());
      assertEquals("region", productShippingV3_1.getCountry());
      assertEquals("region", productShippingV3_3.getPostalCode());
      assertEquals("region", productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertEquals("", productShippingV3_3.getRegion());
      
      Object object0 = productShippingV3_3.getLocationId();
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertNull(object0);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("region", productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertEquals("region", productShippingV3_1.getPostalCode());
      assertEquals("region", productShippingV3_1.getCountry());
      assertEquals("region", productShippingV3_3.getPostalCode());
      assertEquals("region", productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertEquals("", productShippingV3_3.getRegion());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.region("}");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertEquals("}", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("}", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getService());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.locationGroupName("B-<");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNotNull(productShippingV3_2);
      assertEquals("}", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getService());
      assertEquals("B-<", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("B-<", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("}", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getService());
      assertEquals("}", productShippingV3_2.getRegion());
      assertEquals("B-<", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.service("locationGroupName");
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertNotNull(productShippingV3_3);
      assertEquals("}", productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertEquals("B-<", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("locationGroupName", productShippingV3_1.getService());
      assertEquals("B-<", productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("}", productShippingV3_1.getRegion());
      assertEquals("}", productShippingV3_2.getRegion());
      assertEquals("locationGroupName", productShippingV3_2.getService());
      assertEquals("B-<", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_3.getCountry());
      assertEquals("B-<", productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_3.getPostalCode());
      assertEquals("}", productShippingV3_3.getRegion());
      assertEquals("locationGroupName", productShippingV3_3.getService());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      Price price1 = price0.value("service");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertNull(price0.getCurrency());
      assertEquals("service", price0.getValue());
      assertEquals("service", price1.getValue());
      assertNull(price1.getCurrency());
      
      Price price2 = price1.currency("region");
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertNotNull(price2);
      assertEquals("service", price0.getValue());
      assertEquals("region", price0.getCurrency());
      assertEquals("region", price1.getCurrency());
      assertEquals("service", price1.getValue());
      assertEquals("region", price2.getCurrency());
      assertEquals("service", price2.getValue());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_0.price(price2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(price0, price2);
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertSame(price1, price2);
      assertSame(price2, price0);
      assertSame(price2, price1);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertNotNull(productShippingV3_4);
      assertEquals("}", productShippingV3_0.getRegion());
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertEquals("B-<", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("service", price0.getValue());
      assertEquals("region", price0.getCurrency());
      assertEquals("region", price1.getCurrency());
      assertEquals("service", price1.getValue());
      assertEquals("region", price2.getCurrency());
      assertEquals("service", price2.getValue());
      assertEquals("B-<", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getPostalCode());
      assertEquals("}", productShippingV3_4.getRegion());
      assertNull(productShippingV3_4.getCountry());
      assertEquals("locationGroupName", productShippingV3_4.getService());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_3.postalCode("region");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertNotNull(productShippingV3_5);
      assertEquals("}", productShippingV3_0.getRegion());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertEquals("B-<", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("region", productShippingV3_1.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_1.getService());
      assertEquals("B-<", productShippingV3_1.getLocationGroupName());
      assertEquals("}", productShippingV3_1.getRegion());
      assertEquals("}", productShippingV3_2.getRegion());
      assertEquals("locationGroupName", productShippingV3_2.getService());
      assertEquals("B-<", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("region", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_3.getCountry());
      assertEquals("B-<", productShippingV3_3.getLocationGroupName());
      assertEquals("}", productShippingV3_3.getRegion());
      assertEquals("locationGroupName", productShippingV3_3.getService());
      assertEquals("region", productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_5.getCountry());
      assertEquals("B-<", productShippingV3_5.getLocationGroupName());
      assertEquals("}", productShippingV3_5.getRegion());
      assertEquals("locationGroupName", productShippingV3_5.getService());
      assertEquals("region", productShippingV3_5.getPostalCode());
      
      ProductShippingV3 productShippingV3_6 = productShippingV3_5.country("postalCode");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertNotNull(productShippingV3_6);
      assertEquals("}", productShippingV3_0.getRegion());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertEquals("B-<", productShippingV3_0.getLocationGroupName());
      assertEquals("postalCode", productShippingV3_0.getCountry());
      assertEquals("region", productShippingV3_1.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_1.getService());
      assertEquals("postalCode", productShippingV3_1.getCountry());
      assertEquals("B-<", productShippingV3_1.getLocationGroupName());
      assertEquals("}", productShippingV3_1.getRegion());
      assertEquals("}", productShippingV3_2.getRegion());
      assertEquals("locationGroupName", productShippingV3_2.getService());
      assertEquals("B-<", productShippingV3_2.getLocationGroupName());
      assertEquals("postalCode", productShippingV3_2.getCountry());
      assertEquals("region", productShippingV3_2.getPostalCode());
      assertEquals("postalCode", productShippingV3_3.getCountry());
      assertEquals("B-<", productShippingV3_3.getLocationGroupName());
      assertEquals("}", productShippingV3_3.getRegion());
      assertEquals("locationGroupName", productShippingV3_3.getService());
      assertEquals("region", productShippingV3_3.getPostalCode());
      assertEquals("postalCode", productShippingV3_5.getCountry());
      assertEquals("B-<", productShippingV3_5.getLocationGroupName());
      assertEquals("}", productShippingV3_5.getRegion());
      assertEquals("locationGroupName", productShippingV3_5.getService());
      assertEquals("region", productShippingV3_5.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_6.getService());
      assertEquals("region", productShippingV3_6.getPostalCode());
      assertEquals("}", productShippingV3_6.getRegion());
      assertEquals("postalCode", productShippingV3_6.getCountry());
      assertEquals("B-<", productShippingV3_6.getLocationGroupName());
      
      String string0 = productShippingV3_6.getRegion();
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertEquals("}", string0);
      assertNotNull(string0);
      assertEquals("}", productShippingV3_0.getRegion());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_0.getService());
      assertEquals("B-<", productShippingV3_0.getLocationGroupName());
      assertEquals("postalCode", productShippingV3_0.getCountry());
      assertEquals("region", productShippingV3_1.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_1.getService());
      assertEquals("postalCode", productShippingV3_1.getCountry());
      assertEquals("B-<", productShippingV3_1.getLocationGroupName());
      assertEquals("}", productShippingV3_1.getRegion());
      assertEquals("}", productShippingV3_2.getRegion());
      assertEquals("locationGroupName", productShippingV3_2.getService());
      assertEquals("B-<", productShippingV3_2.getLocationGroupName());
      assertEquals("postalCode", productShippingV3_2.getCountry());
      assertEquals("region", productShippingV3_2.getPostalCode());
      assertEquals("postalCode", productShippingV3_3.getCountry());
      assertEquals("B-<", productShippingV3_3.getLocationGroupName());
      assertEquals("}", productShippingV3_3.getRegion());
      assertEquals("locationGroupName", productShippingV3_3.getService());
      assertEquals("region", productShippingV3_3.getPostalCode());
      assertEquals("postalCode", productShippingV3_5.getCountry());
      assertEquals("B-<", productShippingV3_5.getLocationGroupName());
      assertEquals("}", productShippingV3_5.getRegion());
      assertEquals("locationGroupName", productShippingV3_5.getService());
      assertEquals("region", productShippingV3_5.getPostalCode());
      assertEquals("locationGroupName", productShippingV3_6.getService());
      assertEquals("region", productShippingV3_6.getPostalCode());
      assertEquals("}", productShippingV3_6.getRegion());
      assertEquals("postalCode", productShippingV3_6.getCountry());
      assertEquals("B-<", productShippingV3_6.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_7 = productShippingV3_5.service("service");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertNotNull(productShippingV3_7);
      assertEquals("}", productShippingV3_0.getRegion());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("service", productShippingV3_0.getService());
      assertEquals("B-<", productShippingV3_0.getLocationGroupName());
      assertEquals("postalCode", productShippingV3_0.getCountry());
      assertEquals("region", productShippingV3_1.getPostalCode());
      assertEquals("postalCode", productShippingV3_1.getCountry());
      assertEquals("B-<", productShippingV3_1.getLocationGroupName());
      assertEquals("}", productShippingV3_1.getRegion());
      assertEquals("service", productShippingV3_1.getService());
      assertEquals("}", productShippingV3_2.getRegion());
      assertEquals("B-<", productShippingV3_2.getLocationGroupName());
      assertEquals("service", productShippingV3_2.getService());
      assertEquals("postalCode", productShippingV3_2.getCountry());
      assertEquals("region", productShippingV3_2.getPostalCode());
      assertEquals("postalCode", productShippingV3_3.getCountry());
      assertEquals("B-<", productShippingV3_3.getLocationGroupName());
      assertEquals("service", productShippingV3_3.getService());
      assertEquals("}", productShippingV3_3.getRegion());
      assertEquals("region", productShippingV3_3.getPostalCode());
      assertEquals("postalCode", productShippingV3_5.getCountry());
      assertEquals("B-<", productShippingV3_5.getLocationGroupName());
      assertEquals("service", productShippingV3_5.getService());
      assertEquals("}", productShippingV3_5.getRegion());
      assertEquals("region", productShippingV3_5.getPostalCode());
      assertEquals("postalCode", productShippingV3_7.getCountry());
      assertEquals("}", productShippingV3_7.getRegion());
      assertEquals("service", productShippingV3_7.getService());
      assertEquals("B-<", productShippingV3_7.getLocationGroupName());
      assertEquals("region", productShippingV3_7.getPostalCode());
      
      productShippingV3_0.setLocationGroupName("}");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertEquals("}", productShippingV3_0.getRegion());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("}", productShippingV3_0.getLocationGroupName());
      assertEquals("service", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getCountry());
      
      String string1 = productShippingV3_0.toString();
      assertFalse(string1.equals((Object)string0));
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertNotNull(string1);
      assertEquals("}", productShippingV3_0.getRegion());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("}", productShippingV3_0.getLocationGroupName());
      assertEquals("service", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getCountry());
      
      Object object0 = productShippingV3_5.getLocationId();
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertNull(object0);
      assertEquals("}", productShippingV3_0.getRegion());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("}", productShippingV3_0.getLocationGroupName());
      assertEquals("service", productShippingV3_0.getService());
      assertEquals("postalCode", productShippingV3_0.getCountry());
      assertEquals("}", productShippingV3_1.getLocationGroupName());
      assertEquals("region", productShippingV3_1.getPostalCode());
      assertEquals("postalCode", productShippingV3_1.getCountry());
      assertEquals("}", productShippingV3_1.getRegion());
      assertEquals("service", productShippingV3_1.getService());
      assertEquals("}", productShippingV3_2.getRegion());
      assertEquals("service", productShippingV3_2.getService());
      assertEquals("postalCode", productShippingV3_2.getCountry());
      assertEquals("}", productShippingV3_2.getLocationGroupName());
      assertEquals("region", productShippingV3_2.getPostalCode());
      assertEquals("postalCode", productShippingV3_3.getCountry());
      assertEquals("}", productShippingV3_3.getLocationGroupName());
      assertEquals("service", productShippingV3_3.getService());
      assertEquals("}", productShippingV3_3.getRegion());
      assertEquals("region", productShippingV3_3.getPostalCode());
      assertEquals("postalCode", productShippingV3_5.getCountry());
      assertEquals("}", productShippingV3_5.getLocationGroupName());
      assertEquals("service", productShippingV3_5.getService());
      assertEquals("}", productShippingV3_5.getRegion());
      assertEquals("region", productShippingV3_5.getPostalCode());
      
      productShippingV3_7.setCountry("`~L/GM(M}|f,G::@");
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_6);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_5);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_7);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertEquals("}", productShippingV3_0.getRegion());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertEquals("}", productShippingV3_0.getLocationGroupName());
      assertEquals("`~L/GM(M}|f,G::@", productShippingV3_0.getCountry());
      assertEquals("service", productShippingV3_0.getService());
      assertEquals("}", productShippingV3_1.getLocationGroupName());
      assertEquals("`~L/GM(M}|f,G::@", productShippingV3_1.getCountry());
      assertEquals("region", productShippingV3_1.getPostalCode());
      assertEquals("}", productShippingV3_1.getRegion());
      assertEquals("service", productShippingV3_1.getService());
      assertEquals("}", productShippingV3_2.getRegion());
      assertEquals("service", productShippingV3_2.getService());
      assertEquals("}", productShippingV3_2.getLocationGroupName());
      assertEquals("`~L/GM(M}|f,G::@", productShippingV3_2.getCountry());
      assertEquals("region", productShippingV3_2.getPostalCode());
      assertEquals("}", productShippingV3_3.getLocationGroupName());
      assertEquals("service", productShippingV3_3.getService());
      assertEquals("}", productShippingV3_3.getRegion());
      assertEquals("`~L/GM(M}|f,G::@", productShippingV3_3.getCountry());
      assertEquals("region", productShippingV3_3.getPostalCode());
      assertEquals("}", productShippingV3_5.getLocationGroupName());
      assertEquals("service", productShippingV3_5.getService());
      assertEquals("}", productShippingV3_5.getRegion());
      assertEquals("`~L/GM(M}|f,G::@", productShippingV3_5.getCountry());
      assertEquals("region", productShippingV3_5.getPostalCode());
      assertEquals("}", productShippingV3_7.getRegion());
      assertEquals("service", productShippingV3_7.getService());
      assertEquals("}", productShippingV3_7.getLocationGroupName());
      assertEquals("`~L/GM(M}|f,G::@", productShippingV3_7.getCountry());
      assertEquals("region", productShippingV3_7.getPostalCode());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.locationId(object0);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getLocationGroupName());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.price(price0);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getService());
      
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      productShippingV3_1.setLocationId(object1);
      assertFalse(object0.equals((Object)object1));
      assertFalse(object1.equals((Object)object0));
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertNotSame(object0, object1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotSame(object1, object0);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_1.region("country");
      assertFalse(object0.equals((Object)object1));
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertNotSame(object0, object1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("country", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("country", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_3.getCountry());
      assertEquals("country", productShippingV3_3.getRegion());
      assertNull(productShippingV3_3.getService());
      assertNull(productShippingV3_3.getPostalCode());
      assertNull(productShippingV3_3.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_2.locationGroupName("");
      assertFalse(object0.equals((Object)object1));
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertNotSame(object0, object1);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertNotNull(productShippingV3_4);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("country", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("country", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getPostalCode());
      assertEquals("country", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getService());
      assertEquals("country", productShippingV3_4.getRegion());
      assertNull(productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getService());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_4.getPostalCode());
      
      ProductShippingV3 productShippingV3_5 = productShippingV3_0.postalCode("QzDsi\"z]9LZQR");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertNotNull(productShippingV3_5);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      assertEquals("country", productShippingV3_5.getRegion());
      assertNull(productShippingV3_5.getService());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getCountry());
      
      ProductShippingV3 productShippingV3_6 = productShippingV3_5.service("zb^P(A@P#L;>.");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_1);
      assertSame(productShippingV3_5, productShippingV3_3);
      assertSame(productShippingV3_5, productShippingV3_4);
      assertSame(productShippingV3_5, productShippingV3_2);
      assertSame(productShippingV3_5, productShippingV3_6);
      assertSame(productShippingV3_5, productShippingV3_0);
      assertSame(productShippingV3_6, productShippingV3_4);
      assertSame(productShippingV3_6, productShippingV3_5);
      assertSame(productShippingV3_6, productShippingV3_2);
      assertSame(productShippingV3_6, productShippingV3_1);
      assertSame(productShippingV3_6, productShippingV3_3);
      assertSame(productShippingV3_6, productShippingV3_0);
      assertNotNull(productShippingV3_6);
      assertEquals("zb^P(A@P#L;>.", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertEquals("country", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_5.getLocationGroupName());
      assertEquals("country", productShippingV3_5.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_5.getPostalCode());
      assertNull(productShippingV3_5.getCountry());
      assertEquals("zb^P(A@P#L;>.", productShippingV3_5.getService());
      assertNull(productShippingV3_6.getCountry());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_6.getPostalCode());
      assertEquals("country", productShippingV3_6.getRegion());
      assertEquals("zb^P(A@P#L;>.", productShippingV3_6.getService());
      assertEquals("", productShippingV3_6.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_7 = productShippingV3_4.region("");
      assertFalse(object0.equals((Object)object1));
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertNotSame(object0, object1);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertNotNull(productShippingV3_7);
      assertEquals("zb^P(A@P#L;>.", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_0.getPostalCode());
      assertEquals("zb^P(A@P#L;>.", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_2.getPostalCode());
      assertEquals("zb^P(A@P#L;>.", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getRegion());
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_4.getPostalCode());
      assertEquals("zb^P(A@P#L;>.", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertEquals("zb^P(A@P#L;>.", productShippingV3_7.getService());
      assertEquals("", productShippingV3_7.getLocationGroupName());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_7.getPostalCode());
      assertEquals("", productShippingV3_7.getRegion());
      assertNull(productShippingV3_7.getCountry());
      
      boolean boolean0 = productShippingV3_7.equals(object0);
      assertFalse(object0.equals((Object)object1));
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertNotSame(object0, object1);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertFalse(boolean0);
      assertEquals("zb^P(A@P#L;>.", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_0.getPostalCode());
      assertEquals("zb^P(A@P#L;>.", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_2.getPostalCode());
      assertEquals("zb^P(A@P#L;>.", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getRegion());
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_4.getPostalCode());
      assertEquals("zb^P(A@P#L;>.", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertEquals("zb^P(A@P#L;>.", productShippingV3_7.getService());
      assertEquals("", productShippingV3_7.getLocationGroupName());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_7.getPostalCode());
      assertEquals("", productShippingV3_7.getRegion());
      assertNull(productShippingV3_7.getCountry());
      
      productShippingV3_7.setPrice(price0);
      assertFalse(object0.equals((Object)object1));
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertNotSame(object0, object1);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertEquals("zb^P(A@P#L;>.", productShippingV3_0.getService());
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_0.getPostalCode());
      assertEquals("zb^P(A@P#L;>.", productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_1.getPostalCode());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_2.getPostalCode());
      assertEquals("zb^P(A@P#L;>.", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getRegion());
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_4.getPostalCode());
      assertEquals("zb^P(A@P#L;>.", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getCountry());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertEquals("zb^P(A@P#L;>.", productShippingV3_7.getService());
      assertEquals("", productShippingV3_7.getLocationGroupName());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_7.getPostalCode());
      assertEquals("", productShippingV3_7.getRegion());
      assertNull(productShippingV3_7.getCountry());
      
      ProductShippingV3 productShippingV3_8 = productShippingV3_7.service((String) null);
      assertFalse(object0.equals((Object)object1));
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertNotSame(object0, object1);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_8);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertNotNull(productShippingV3_8);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getService());
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getService());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_7.getService());
      assertEquals("", productShippingV3_7.getLocationGroupName());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_7.getPostalCode());
      assertEquals("", productShippingV3_7.getRegion());
      assertNull(productShippingV3_7.getCountry());
      assertEquals("", productShippingV3_8.getLocationGroupName());
      assertEquals("", productShippingV3_8.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_8.getPostalCode());
      assertNull(productShippingV3_8.getCountry());
      assertNull(productShippingV3_8.getService());
      
      Object object2 = new Object();
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)object0));
      assertNotNull(object2);
      
      productShippingV3_8.setLocationId(object2);
      assertFalse(object0.equals((Object)object2));
      assertFalse(object0.equals((Object)object1));
      assertFalse(object2.equals((Object)object1));
      assertFalse(object2.equals((Object)object0));
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertNotSame(object0, object2);
      assertNotSame(object0, object1);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_8);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_1);
      assertSame(productShippingV3_8, productShippingV3_7);
      assertSame(productShippingV3_8, productShippingV3_0);
      assertSame(productShippingV3_8, productShippingV3_6);
      assertSame(productShippingV3_8, productShippingV3_2);
      assertSame(productShippingV3_8, productShippingV3_4);
      assertSame(productShippingV3_8, productShippingV3_3);
      assertSame(productShippingV3_8, productShippingV3_5);
      assertNotSame(object2, object1);
      assertNotSame(object2, object0);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getService());
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getService());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_7.getService());
      assertEquals("", productShippingV3_7.getLocationGroupName());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_7.getPostalCode());
      assertEquals("", productShippingV3_7.getRegion());
      assertNull(productShippingV3_7.getCountry());
      assertEquals("", productShippingV3_8.getLocationGroupName());
      assertEquals("", productShippingV3_8.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_8.getPostalCode());
      assertNull(productShippingV3_8.getCountry());
      assertNull(productShippingV3_8.getService());
      
      productShippingV3_0.hashCode();
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_0.getPostalCode());
      
      price0.setValue("");
      assertEquals("", price0.getValue());
      assertNull(price0.getCurrency());
      
      productShippingV3_2.setCountry((String) null);
      assertFalse(object0.equals((Object)object2));
      assertFalse(object0.equals((Object)object1));
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertNotSame(object0, object2);
      assertNotSame(object0, object1);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getService());
      
      String string0 = productShippingV3_7.getService();
      assertFalse(object0.equals((Object)object2));
      assertFalse(object0.equals((Object)object1));
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_6);
      assertSame(productShippingV3_0, productShippingV3_5);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_8);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_0, productShippingV3_7);
      assertNotSame(object0, object2);
      assertNotSame(object0, object1);
      assertSame(productShippingV3_1, productShippingV3_5);
      assertSame(productShippingV3_1, productShippingV3_6);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_1, productShippingV3_8);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_7);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_7);
      assertSame(productShippingV3_2, productShippingV3_6);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_8);
      assertSame(productShippingV3_2, productShippingV3_5);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_7);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertSame(productShippingV3_4, productShippingV3_8);
      assertSame(productShippingV3_4, productShippingV3_6);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_5);
      assertSame(productShippingV3_7, productShippingV3_4);
      assertSame(productShippingV3_7, productShippingV3_8);
      assertSame(productShippingV3_7, productShippingV3_6);
      assertSame(productShippingV3_7, productShippingV3_2);
      assertSame(productShippingV3_7, productShippingV3_0);
      assertSame(productShippingV3_7, productShippingV3_1);
      assertSame(productShippingV3_7, productShippingV3_3);
      assertNull(string0);
      assertEquals("", productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      assertEquals("", productShippingV3_0.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_0.getPostalCode());
      assertEquals("", productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getService());
      assertEquals("", productShippingV3_1.getLocationGroupName());
      assertEquals("", price0.getValue());
      assertNull(price0.getCurrency());
      assertEquals("", productShippingV3_2.getLocationGroupName());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("", productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getService());
      assertEquals("", productShippingV3_4.getRegion());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_4.getPostalCode());
      assertNull(productShippingV3_4.getCountry());
      assertNull(productShippingV3_4.getService());
      assertEquals("", productShippingV3_4.getLocationGroupName());
      assertNull(productShippingV3_7.getService());
      assertEquals("", productShippingV3_7.getLocationGroupName());
      assertEquals("QzDsi\"z]9LZQR", productShippingV3_7.getPostalCode());
      assertEquals("", productShippingV3_7.getRegion());
      assertNull(productShippingV3_7.getCountry());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      
      productShippingV3_0.setRegion("oNUX=tU83vn(");
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertEquals("oNUX=tU83vn(", productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getService());
      
      Object object0 = new Object();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      
      productShippingV3_0.setPostalCode("region");
      assertNull(productShippingV3_0.getService());
      assertEquals("region", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      
      boolean boolean0 = productShippingV3_0.equals(productShippingV3_0);
      assertTrue(boolean0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
      
      productShippingV3_0.setCountry((String) null);
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getCountry());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      assertNotNull(productShippingV3_0);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.locationGroupName((String) null);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertNotNull(productShippingV3_1);
      assertNull(productShippingV3_0.getCountry());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getService());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getService());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.service("locationId");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertNotNull(productShippingV3_2);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("locationId", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertNull(productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("locationId", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getPostalCode());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("locationId", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getCountry());
      assertNull(productShippingV3_2.getPostalCode());
      
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.postalCode("service");
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertNotNull(productShippingV3_3);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("locationId", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("service", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("service", productShippingV3_1.getPostalCode());
      assertEquals("locationId", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("locationId", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("service", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_3.getRegion());
      assertEquals("service", productShippingV3_3.getPostalCode());
      assertEquals("locationId", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getLocationGroupName());
      
      ProductShippingV3 productShippingV3_4 = productShippingV3_3.locationId(productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_4);
      assertSame(productShippingV3_0, productShippingV3_2);
      assertSame(productShippingV3_0, productShippingV3_1);
      assertSame(productShippingV3_0, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_2);
      assertSame(productShippingV3_1, productShippingV3_0);
      assertSame(productShippingV3_1, productShippingV3_3);
      assertSame(productShippingV3_1, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_4);
      assertSame(productShippingV3_2, productShippingV3_0);
      assertSame(productShippingV3_2, productShippingV3_1);
      assertSame(productShippingV3_2, productShippingV3_3);
      assertSame(productShippingV3_3, productShippingV3_1);
      assertSame(productShippingV3_3, productShippingV3_2);
      assertSame(productShippingV3_3, productShippingV3_0);
      assertSame(productShippingV3_3, productShippingV3_4);
      assertSame(productShippingV3_4, productShippingV3_3);
      assertSame(productShippingV3_4, productShippingV3_2);
      assertSame(productShippingV3_4, productShippingV3_0);
      assertSame(productShippingV3_4, productShippingV3_1);
      assertNotNull(productShippingV3_4);
      assertNull(productShippingV3_0.getCountry());
      assertEquals("locationId", productShippingV3_0.getService());
      assertNull(productShippingV3_0.getRegion());
      assertEquals("service", productShippingV3_0.getPostalCode());
      assertNull(productShippingV3_0.getLocationGroupName());
      assertEquals("service", productShippingV3_1.getPostalCode());
      assertEquals("locationId", productShippingV3_1.getService());
      assertNull(productShippingV3_1.getLocationGroupName());
      assertNull(productShippingV3_1.getRegion());
      assertNull(productShippingV3_1.getCountry());
      assertEquals("locationId", productShippingV3_2.getService());
      assertNull(productShippingV3_2.getRegion());
      assertNull(productShippingV3_2.getLocationGroupName());
      assertNull(productShippingV3_2.getCountry());
      assertEquals("service", productShippingV3_2.getPostalCode());
      assertNull(productShippingV3_3.getRegion());
      assertEquals("service", productShippingV3_3.getPostalCode());
      assertEquals("locationId", productShippingV3_3.getService());
      assertNull(productShippingV3_3.getCountry());
      assertNull(productShippingV3_3.getLocationGroupName());
      assertNull(productShippingV3_4.getLocationGroupName());
      assertEquals("service", productShippingV3_4.getPostalCode());
      assertEquals("locationId", productShippingV3_4.getService());
      assertNull(productShippingV3_4.getRegion());
      assertNull(productShippingV3_4.getCountry());
      
      Price price0 = new Price();
      assertNotNull(price0);
      assertNull(price0.getValue());
      assertNull(price0.getCurrency());
      
      Price price1 = price0.currency("service");
      assertSame(price0, price1);
      assertSame(price1, price0);
      assertNotNull(price1);
      assertNull(price0.getValue());
      assertEquals("service", price0.getCurrency());
      assertEquals("service", price1.getCurrency());
      assertNull(price1.getValue());
      
      // Undeclared exception!
      try { 
        productShippingV3_0.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      Object object0 = new Object();
      productShippingV3_0.equals(object0);
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.postalCode("*Iw$&j;?YDttIa>b=7");
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.locationGroupName("service");
      productShippingV3_1.setRegion("service");
      productShippingV3_1.toString();
      ProductShippingV3 productShippingV3_3 = productShippingV3_1.locationGroupName("*Iw$&j;?YDttIa>b=7");
      productShippingV3_3.equals(productShippingV3_0);
      productShippingV3_0.postalCode("country");
      productShippingV3_0.setCountry("");
      productShippingV3_1.setPostalCode("");
      productShippingV3_3.getService();
      productShippingV3_0.postalCode("}");
      productShippingV3_2.setRegion("n`:qq1V!fCf0Ig*%#");
      productShippingV3_0.setRegion("price");
      assertEquals("*Iw$&j;?YDttIa>b=7", productShippingV3_0.getLocationGroupName());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.region("r`CSvQ']*|");
      assertEquals("r`CSvQ']*|", productShippingV3_1.getRegion());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_1 = new ProductShippingV3();
      assertTrue(productShippingV3_1.equals((Object)productShippingV3_0));
      
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.postalCode("country");
      boolean boolean0 = productShippingV3_0.equals(productShippingV3_2);
      assertFalse(boolean0);
      
      productShippingV3_0.service("&z[px }u5]zSS,Kl");
      assertEquals("&z[px }u5]zSS,Kl", productShippingV3_0.getService());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      productShippingV3_0.locationGroupName("locationGroupName");
      productShippingV3_0.toString();
      assertEquals("locationGroupName", productShippingV3_0.getLocationGroupName());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      boolean boolean0 = productShippingV3_0.equals("postalCode");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      Price price0 = new Price();
      productShippingV3_0.setPrice(price0);
      assertNull(productShippingV3_0.getService());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.postalCode("");
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.service("dT~UoZ");
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.region("locationId");
      String string0 = productShippingV3_3.getPostalCode();
      assertEquals("", string0);
      assertEquals("dT~UoZ", productShippingV3_3.getService());
      assertEquals("locationId", productShippingV3_3.getRegion());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      String string0 = productShippingV3_0.toString();
      assertEquals("class ProductShippingV3 {\n    price: null\n    country: null\n    region: null\n    service: null\n    locationId: null\n    locationGroupName: null\n    postalCode: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      productShippingV3_0.setService("service");
      assertEquals("service", productShippingV3_0.getService());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.service("");
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.postalCode("locationGroupName");
      productShippingV3_0.service("price");
      Price price0 = new Price();
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.price(price0);
      ProductShippingV3 productShippingV3_4 = productShippingV3_3.locationGroupName("2 VGtuUx2(.6fhH{6");
      ProductShippingV3 productShippingV3_5 = productShippingV3_4.region("locationId");
      productShippingV3_5.toString();
      productShippingV3_5.setService("");
      productShippingV3_1.toString();
      productShippingV3_4.setPrice(price0);
      ProductShippingV3 productShippingV3_6 = productShippingV3_1.service("class Price {\n");
      productShippingV3_4.price(price0);
      productShippingV3_4.service("");
      productShippingV3_3.hashCode();
      productShippingV3_2.getPostalCode();
      productShippingV3_1.locationId(productShippingV3_5);
      productShippingV3_5.equals("");
      productShippingV3_0.setService("postalCode");
      productShippingV3_1.setPrice(price0);
      productShippingV3_6.locationGroupName("];2c8?");
      assertEquals("postalCode", productShippingV3_6.getService());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.locationGroupName("U-ZNTl|Bm");
      assertEquals("U-ZNTl|Bm", productShippingV3_1.getLocationGroupName());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      Object object0 = new Object();
      productShippingV3_0.setLocationId(object0);
      String string0 = productShippingV3_0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.country("][w`{@b_*`pq:");
      assertEquals("][w`{@b_*`pq:", productShippingV3_1.getCountry());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      Price price0 = new Price();
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.price(price0);
      assertSame(productShippingV3_1, productShippingV3_0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.service("locationId");
      assertEquals("locationId", productShippingV3_1.getService());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.postalCode("}");
      assertEquals("}", productShippingV3_1.getPostalCode());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ProductShippingV3 productShippingV3_0 = new ProductShippingV3();
      ProductShippingV3 productShippingV3_1 = productShippingV3_0.postalCode((String) null);
      ProductShippingV3 productShippingV3_2 = productShippingV3_1.country("locationId");
      ProductShippingV3 productShippingV3_3 = productShippingV3_2.locationGroupName("t`$8oqz4[lqbv");
      Price price0 = new Price();
      productShippingV3_1.postalCode("\n    ");
      Price price1 = price0.currency("price");
      ProductShippingV3 productShippingV3_4 = productShippingV3_3.price(price1);
      ProductShippingV3 productShippingV3_5 = productShippingV3_4.service("    value: ");
      productShippingV3_5.setLocationId(price1);
      assertEquals("locationId", productShippingV3_5.getCountry());
      assertEquals("\n    ", productShippingV3_5.getPostalCode());
      assertEquals("    value: ", productShippingV3_5.getService());
      assertEquals("t`$8oqz4[lqbv", productShippingV3_5.getLocationGroupName());
  }
}
