/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 04:56:50 GMT 2022
 */

package com.criteo.marketing;

import org.junit.Test;
import static org.junit.Assert.*;
import com.criteo.marketing.ApiResponse;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ApiResponse_ESTest extends ApiResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      ApiResponse<LinkedList<Object>> apiResponse0 = new ApiResponse<LinkedList<Object>>(0, hashMap0, (LinkedList<Object>) null);
      int int0 = apiResponse0.getStatusCode();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      ApiResponse<Object> apiResponse0 = new ApiResponse<Object>((-111), hashMap0);
      int int0 = apiResponse0.getStatusCode();
      assertEquals((-111), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      ApiResponse<String> apiResponse0 = new ApiResponse<String>((-111), hashMap0);
      apiResponse0.getHeaders();
      assertEquals((-111), apiResponse0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      ApiResponse<Object> apiResponse0 = new ApiResponse<Object>((-111), hashMap0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      hashMap0.put((String) null, linkedList0);
      apiResponse0.getHeaders();
      assertEquals((-111), apiResponse0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ApiResponse<LinkedList<Object>> apiResponse0 = new ApiResponse<LinkedList<Object>>(0, (Map<String, List<String>>) null);
      apiResponse0.getData();
      assertEquals(0, apiResponse0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ApiResponse<LinkedList<Object>> apiResponse0 = new ApiResponse<LinkedList<Object>>(0, (Map<String, List<String>>) null);
      apiResponse0.getHeaders();
      assertEquals(0, apiResponse0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ApiResponse<LinkedList<String>> apiResponse0 = new ApiResponse<LinkedList<String>>(1, (Map<String, List<String>>) null);
      ApiResponse<Object> apiResponse1 = new ApiResponse<Object>(1, (Map<String, List<String>>) null, apiResponse0);
      ApiResponse apiResponse2 = (ApiResponse)apiResponse1.getData();
      assertEquals(1, apiResponse2.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ApiResponse<LinkedList<String>> apiResponse0 = new ApiResponse<LinkedList<String>>(1, (Map<String, List<String>>) null);
      int int0 = apiResponse0.getStatusCode();
      assertEquals(1, int0);
  }
}
