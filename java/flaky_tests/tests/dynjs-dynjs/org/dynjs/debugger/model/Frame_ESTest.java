/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 22:09:50 GMT 2022
 */

package org.dynjs.debugger.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dynjs.debugger.model.Frame;
import org.dynjs.runtime.ExecutionContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Frame_ESTest extends Frame_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Frame frame0 = new Frame(12, (ExecutionContext) null);
      int int0 = frame0.getIndex();
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Frame frame0 = new Frame((-2298), (ExecutionContext) null);
      int int0 = frame0.getIndex();
      assertEquals((-2298), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Frame frame0 = new Frame(0, (ExecutionContext) null);
      String string0 = frame0.getType();
      assertEquals("frame", string0);
      assertEquals(0, frame0.getIndex());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Frame frame0 = new Frame(0, (ExecutionContext) null);
      frame0.getScopes();
      assertEquals(0, frame0.getIndex());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Frame frame0 = new Frame(0, (ExecutionContext) null);
      int int0 = frame0.getIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Frame frame0 = new Frame(0, (ExecutionContext) null);
      // Undeclared exception!
      try { 
        frame0.getReceiver();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.debugger.model.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Frame frame0 = new Frame(9, (ExecutionContext) null);
      // Undeclared exception!
      try { 
        frame0.isConstructor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.debugger.model.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Frame frame0 = new Frame((-1820), (ExecutionContext) null);
      // Undeclared exception!
      try { 
        frame0.getFunc();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.debugger.model.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Frame frame0 = new Frame(4843, (ExecutionContext) null);
      // Undeclared exception!
      try { 
        frame0.getColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.debugger.model.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Frame frame0 = new Frame((-1820), (ExecutionContext) null);
      // Undeclared exception!
      try { 
        frame0.getScript();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.debugger.model.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Frame frame0 = new Frame(0, (ExecutionContext) null);
      // Undeclared exception!
      try { 
        frame0.getLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.debugger.model.Frame", e);
      }
  }
}
