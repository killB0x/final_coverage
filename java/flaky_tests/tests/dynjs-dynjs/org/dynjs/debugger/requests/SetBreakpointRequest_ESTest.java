/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 21:56:46 GMT 2022
 */

package org.dynjs.debugger.requests;

import org.junit.Test;
import static org.junit.Assert.*;
import org.dynjs.debugger.requests.SetBreakpointRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SetBreakpointRequest_ESTest extends SetBreakpointRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SetBreakpointRequest setBreakpointRequest0 = new SetBreakpointRequest();
      setBreakpointRequest0.setType("org.dynjs.debugger.requests.SetBreakpointRequest");
      String string0 = setBreakpointRequest0.getType();
      assertEquals("org.dynjs.debugger.requests.SetBreakpointRequest", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SetBreakpointRequest setBreakpointRequest0 = new SetBreakpointRequest();
      setBreakpointRequest0.setTarget("u]u6nqCweJ");
      String string0 = setBreakpointRequest0.getTarget();
      assertEquals("u]u6nqCweJ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SetBreakpointRequest setBreakpointRequest0 = new SetBreakpointRequest();
      setBreakpointRequest0.setLine(1938);
      int int0 = setBreakpointRequest0.getLine();
      assertEquals(1938, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SetBreakpointRequest setBreakpointRequest0 = new SetBreakpointRequest();
      setBreakpointRequest0.setLine((-234));
      int int0 = setBreakpointRequest0.getLine();
      assertEquals((-234), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SetBreakpointRequest setBreakpointRequest0 = new SetBreakpointRequest();
      setBreakpointRequest0.setCondition("Z");
      String string0 = setBreakpointRequest0.getCondition();
      assertEquals("Z", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SetBreakpointRequest setBreakpointRequest0 = new SetBreakpointRequest();
      setBreakpointRequest0.setColumn(16);
      int int0 = setBreakpointRequest0.getColumn();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SetBreakpointRequest setBreakpointRequest0 = new SetBreakpointRequest();
      setBreakpointRequest0.setColumn((-247));
      int int0 = setBreakpointRequest0.getColumn();
      assertEquals((-247), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SetBreakpointRequest setBreakpointRequest0 = new SetBreakpointRequest();
      String string0 = setBreakpointRequest0.getTarget();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SetBreakpointRequest setBreakpointRequest0 = new SetBreakpointRequest();
      String string0 = setBreakpointRequest0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SetBreakpointRequest setBreakpointRequest0 = new SetBreakpointRequest();
      String string0 = setBreakpointRequest0.getCondition();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SetBreakpointRequest setBreakpointRequest0 = new SetBreakpointRequest();
      setBreakpointRequest0.setTarget("");
      String string0 = setBreakpointRequest0.getTarget();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SetBreakpointRequest setBreakpointRequest0 = new SetBreakpointRequest();
      int int0 = setBreakpointRequest0.getLine();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SetBreakpointRequest setBreakpointRequest0 = new SetBreakpointRequest();
      int int0 = setBreakpointRequest0.getColumn();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SetBreakpointRequest setBreakpointRequest0 = new SetBreakpointRequest();
      setBreakpointRequest0.setCondition("");
      String string0 = setBreakpointRequest0.getCondition();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SetBreakpointRequest setBreakpointRequest0 = new SetBreakpointRequest();
      setBreakpointRequest0.setType("");
      String string0 = setBreakpointRequest0.getType();
      assertEquals("", string0);
  }
}
