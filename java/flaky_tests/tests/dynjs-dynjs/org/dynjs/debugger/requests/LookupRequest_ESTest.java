/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 22:09:10 GMT 2022
 */

package org.dynjs.debugger.requests;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.dynjs.debugger.requests.LookupRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LookupRequest_ESTest extends LookupRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LookupRequest lookupRequest0 = new LookupRequest();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      lookupRequest0.setHandles(linkedList0);
      List<Integer> list0 = lookupRequest0.getHandles();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LookupRequest lookupRequest0 = new LookupRequest();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      linkedList0.add(integer0);
      lookupRequest0.setHandles(linkedList0);
      List<Integer> list0 = lookupRequest0.getHandles();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LookupRequest lookupRequest0 = new LookupRequest();
      boolean boolean0 = lookupRequest0.isIncludeSource();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LookupRequest lookupRequest0 = new LookupRequest();
      List<Integer> list0 = lookupRequest0.getHandles();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LookupRequest lookupRequest0 = new LookupRequest();
      lookupRequest0.setIncludeSource(true);
      boolean boolean0 = lookupRequest0.isIncludeSource();
      assertTrue(boolean0);
  }
}
