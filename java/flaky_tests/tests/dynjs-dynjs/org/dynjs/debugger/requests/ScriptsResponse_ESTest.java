/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 22:21:57 GMT 2022
 */

package org.dynjs.debugger.requests;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.Set;
import org.dynjs.debugger.model.Script;
import org.dynjs.debugger.requests.ScriptsRequest;
import org.dynjs.debugger.requests.ScriptsResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ScriptsResponse_ESTest extends ScriptsResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ScriptsRequest scriptsRequest0 = new ScriptsRequest();
      LinkedHashSet<Script> linkedHashSet0 = new LinkedHashSet<Script>();
      ScriptsResponse scriptsResponse0 = new ScriptsResponse(scriptsRequest0, linkedHashSet0, true, true, true);
      boolean boolean0 = scriptsResponse0.isIncludeSource();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ScriptsRequest scriptsRequest0 = new ScriptsRequest();
      LinkedHashSet<Script> linkedHashSet0 = new LinkedHashSet<Script>();
      ScriptsResponse scriptsResponse0 = new ScriptsResponse(scriptsRequest0, linkedHashSet0, false, true, true);
      scriptsResponse0.getValues();
      assertFalse(scriptsResponse0.isIncludeSource());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ScriptsRequest scriptsRequest0 = new ScriptsRequest();
      LinkedHashSet<Script> linkedHashSet0 = new LinkedHashSet<Script>();
      ScriptsResponse scriptsResponse0 = new ScriptsResponse(scriptsRequest0, linkedHashSet0, false, true, true);
      boolean boolean0 = scriptsResponse0.isIncludeSource();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ScriptsRequest scriptsRequest0 = new ScriptsRequest();
      LinkedHashSet<Script> linkedHashSet0 = new LinkedHashSet<Script>();
      ScriptsResponse scriptsResponse0 = new ScriptsResponse(scriptsRequest0, linkedHashSet0, false, false, false);
      scriptsResponse0.getScripts();
      assertFalse(scriptsResponse0.isIncludeSource());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ScriptsRequest scriptsRequest0 = new ScriptsRequest();
      ScriptsResponse scriptsResponse0 = null;
      try {
        scriptsResponse0 = new ScriptsResponse(scriptsRequest0, (Set<Script>) null, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractCollection", e);
      }
  }
}
