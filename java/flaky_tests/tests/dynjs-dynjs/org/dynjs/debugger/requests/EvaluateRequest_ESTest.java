/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 22:20:01 GMT 2022
 */

package org.dynjs.debugger.requests;

import org.junit.Test;
import static org.junit.Assert.*;
import org.dynjs.debugger.requests.EvaluateRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EvaluateRequest_ESTest extends EvaluateRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EvaluateRequest evaluateRequest0 = new EvaluateRequest();
      evaluateRequest0.setFrame(2133);
      int int0 = evaluateRequest0.getFrame();
      assertEquals(2133, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvaluateRequest evaluateRequest0 = new EvaluateRequest();
      evaluateRequest0.setFrame((-874));
      int int0 = evaluateRequest0.getFrame();
      assertEquals((-874), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvaluateRequest evaluateRequest0 = new EvaluateRequest();
      evaluateRequest0.setExpression("");
      String string0 = evaluateRequest0.getExpression();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvaluateRequest evaluateRequest0 = new EvaluateRequest();
      evaluateRequest0.setGlobal(true);
      boolean boolean0 = evaluateRequest0.isGlobal();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EvaluateRequest evaluateRequest0 = new EvaluateRequest();
      evaluateRequest0.setExpression("#X'kME}\"EHZ<`X");
      String string0 = evaluateRequest0.getExpression();
      assertEquals("#X'kME}\"EHZ<`X", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EvaluateRequest evaluateRequest0 = new EvaluateRequest();
      int int0 = evaluateRequest0.getFrame();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EvaluateRequest evaluateRequest0 = new EvaluateRequest();
      String string0 = evaluateRequest0.getExpression();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EvaluateRequest evaluateRequest0 = new EvaluateRequest();
      boolean boolean0 = evaluateRequest0.isGlobal();
      assertFalse(boolean0);
  }
}
