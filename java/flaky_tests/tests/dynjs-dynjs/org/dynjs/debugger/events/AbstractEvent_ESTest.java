/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 21:52:01 GMT 2022
 */

package org.dynjs.debugger.events;

import org.junit.Test;
import static org.junit.Assert.*;
import org.dynjs.debugger.Debugger;
import org.dynjs.debugger.events.AbstractEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractEvent_ESTest extends AbstractEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AbstractEvent abstractEvent0 = new AbstractEvent((Debugger) null, (String) null);
      String string0 = abstractEvent0.getEvent();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AbstractEvent abstractEvent0 = new AbstractEvent((Debugger) null, "");
      String string0 = abstractEvent0.getEvent();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AbstractEvent abstractEvent0 = new AbstractEvent((Debugger) null, "?2/^YZWXd");
      Debugger debugger0 = abstractEvent0.getDebugger();
      assertNull(debugger0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AbstractEvent abstractEvent0 = new AbstractEvent((Debugger) null, "?2/^YZWXd");
      String string0 = abstractEvent0.getEvent();
      assertEquals("?2/^YZWXd", string0);
  }
}
