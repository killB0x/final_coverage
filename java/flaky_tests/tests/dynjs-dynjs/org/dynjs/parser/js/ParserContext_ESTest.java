/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 20:30:31 GMT 2022
 */

package org.dynjs.parser.js;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Set;
import org.dynjs.parser.js.ParserContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParserContext_ESTest extends ParserContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.ITERATION;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      boolean boolean0 = parserContext0.isValidContinue((String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.FUNCTION;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      parserContext0.setStrict(true);
      boolean boolean0 = parserContext0.isStrict();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.SWITCH;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      parserContext0.setInProlog(false);
      boolean boolean0 = parserContext0.isInProlog();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.SWITCH;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      parserContext0.addLabel("[Context: type=SWITCH]");
      Set<String> set0 = parserContext0.getLabels();
      assertTrue(set0.contains("[Context: type=SWITCH]"));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.SWITCH;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      ParserContext parserContext1 = new ParserContext(parserContext0, parserContext_ContextType0);
      boolean boolean0 = parserContext1.isValidLabel("[");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.PROGRAM;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      ParserContext parserContext1 = new ParserContext(parserContext0, parserContext_ContextType0);
      boolean boolean0 = parserContext1.isValidBreak("PROGRAM");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.FUNCTION;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      boolean boolean0 = parserContext0.isValidBreak("org.dynjs.parser.js.ParserContext$ContextType");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.SWITCH;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      parserContext0.addLabel("[Context: type=SWITCH]");
      boolean boolean0 = parserContext0.isValidBreak("[Context: type=SWITCH]");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.PROGRAM;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      boolean boolean0 = parserContext0.isValidLabel((String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.PROGRAM;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      ParserContext parserContext1 = new ParserContext(parserContext0, parserContext_ContextType0);
      boolean boolean0 = parserContext1.isValidContinue("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.FUNCTION;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      boolean boolean0 = parserContext0.isValidContinue("_7Zms5I{]Z/h`Ze{)+B");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.SWITCH;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      ParserContext parserContext1 = new ParserContext(parserContext0, parserContext_ContextType0);
      boolean boolean0 = parserContext1.isValidContinue("[Context: type=SWITCH]");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.SWITCH;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      boolean boolean0 = parserContext0.isValidContinue("[Context: type=SWITCH]");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.PROGRAM;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      ParserContext parserContext1 = new ParserContext(parserContext0, parserContext_ContextType0);
      boolean boolean0 = parserContext1.isValidBreak((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.FUNCTION;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      boolean boolean0 = parserContext0.isValidBreak((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.SWITCH;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      boolean boolean0 = parserContext0.isValidBreak((String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.ITERATION;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      boolean boolean0 = parserContext0.isValidBreak((String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.PROGRAM;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      boolean boolean0 = parserContext0.isValidBreak((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.ITERATION;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      ParserContext parserContext1 = new ParserContext(parserContext0, parserContext_ContextType0);
      boolean boolean0 = parserContext1.isValidReturn();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.FUNCTION;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      boolean boolean0 = parserContext0.isValidReturn();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.PROGRAM;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      boolean boolean0 = parserContext0.isValidReturn();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.OTHER;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      boolean boolean0 = parserContext0.isValidReturn();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.SWITCH;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      Set<String> set0 = parserContext0.getLabels();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.SWITCH;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      String string0 = parserContext0.toString();
      assertEquals("[Context: type=SWITCH]", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.SWITCH;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      boolean boolean0 = parserContext0.isInProlog();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.SWITCH;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      parserContext0.removeLabel("obNj%*qQ~Poj");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ParserContext.ContextType parserContext_ContextType0 = ParserContext.ContextType.PROGRAM;
      ParserContext parserContext0 = new ParserContext(parserContext_ContextType0);
      boolean boolean0 = parserContext0.isStrict();
      assertFalse(boolean0);
  }
}
