/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 21:24:26 GMT 2022
 */

package org.dynjs.parser.js;

import org.junit.Test;
import static org.junit.Assert.*;
import org.dynjs.parser.js.ParserException;
import org.dynjs.parser.js.Token;
import org.dynjs.parser.js.TokenType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParserException_ESTest extends ParserException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ParserException parserException0 = new ParserException("");
      String string0 = parserException0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TokenType tokenType0 = TokenType.IF;
      Token token0 = new Token(tokenType0, ">>", "TRY", 1134, 1134);
      ParserException parserException0 = new ParserException(token0, ">>");
      String string0 = parserException0.getMessage();
      assertEquals("TRY:1134:1134: >>", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ParserException parserException0 = new ParserException((String) null);
      String string0 = parserException0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("($nNBLoAuWoaT4K");
      ParserException parserException0 = new ParserException(mockThrowable0);
      String string0 = parserException0.getMessage();
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable: ($nNBLoAuWoaT4K", string0);
  }
}
