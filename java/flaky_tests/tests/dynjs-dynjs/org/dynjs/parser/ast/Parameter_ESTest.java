/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 22:04:13 GMT 2022
 */

package org.dynjs.parser.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import org.dynjs.parser.ast.Parameter;
import org.dynjs.parser.js.Position;
import org.dynjs.parser.js.Token;
import org.dynjs.parser.js.TokenType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Parameter_ESTest extends Parameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Parameter parameter0 = new Parameter((Position) null, "");
      Position position0 = parameter0.getPosition();
      assertNull(position0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TokenType tokenType0 = TokenType.RIGHT_SHIFT;
      Token token0 = new Token(tokenType0, "", "", 0, 0);
      Parameter parameter0 = new Parameter(token0, (String) null);
      Token token1 = (Token)parameter0.getPosition();
      assertFalse(token1.isEscapedString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TokenType tokenType0 = TokenType.DELETE;
      Token token0 = new Token(tokenType0, "Vv0", "Vv0", 1077, 1077);
      Parameter parameter0 = new Parameter(token0, "Vv0");
      Position position0 = parameter0.getPosition();
      assertSame(token0, position0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TokenType tokenType0 = TokenType.RIGHT_SHIFT;
      Token token0 = new Token(tokenType0, "", "", 0, 0);
      Parameter parameter0 = new Parameter(token0, (String) null);
      String string0 = parameter0.getIdentifier();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TokenType tokenType0 = TokenType.DELETE;
      Token token0 = new Token(tokenType0, "Vv0", "Vv0", 1077, 1077);
      Parameter parameter0 = new Parameter(token0, "Vv0");
      String string0 = parameter0.getIdentifier();
      assertEquals("Vv0", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TokenType tokenType0 = TokenType.DEFAULT;
      Token token0 = new Token(tokenType0, "ha 2Q|2<Rs2+(cB-ZU", "Hkn#h7\"", (-155), (-155));
      Parameter parameter0 = new Parameter(token0, "ha 2Q|2<Rs2+(cB-ZU");
      Position position0 = parameter0.getPosition();
      assertEquals((-155), position0.getLine());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TokenType tokenType0 = TokenType.IN;
      Token token0 = new Token(tokenType0, "", "", 0, 0);
      Parameter parameter0 = new Parameter(token0, "");
      String string0 = parameter0.getIdentifier();
      assertEquals("", string0);
  }
}
