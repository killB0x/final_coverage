/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 22:23:31 GMT 2022
 */

package org.dynjs.ir.instructions;

import org.junit.Test;
import static org.junit.Assert.*;
import org.dynjs.ir.Operand;
import org.dynjs.ir.instructions.Jump;
import org.dynjs.ir.operands.Label;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Jump_ESTest extends Jump_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Jump jump0 = new Jump((Label) null);
      Label label0 = jump0.getTarget();
      assertNull(label0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Label label0 = Label.UNRESCUED_REGION_LABEL;
      Jump jump0 = new Jump(label0);
      label0.setTargetIPC(0);
      Label label1 = jump0.getTarget();
      assertEquals(0, label1.id);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Label label0 = Label.UNRESCUED_REGION_LABEL;
      label0.setTargetIPC(1);
      Jump jump0 = new Jump(label0);
      Label label1 = jump0.getTarget();
      assertSame(label1, label0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Label label0 = Label.UNRESCUED_REGION_LABEL;
      Jump jump0 = new Jump(label0);
      boolean boolean0 = jump0.transfersControl();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Label label0 = Label.UNRESCUED_REGION_LABEL;
      Jump jump0 = new Jump(label0);
      Label label1 = jump0.getTarget();
      assertEquals(0, label1.id);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Label label0 = Label.UNRESCUED_REGION_LABEL;
      Jump jump0 = new Jump(label0);
      Operand[] operandArray0 = jump0.getOperands();
      assertEquals(0, operandArray0.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Label label0 = Label.UNRESCUED_REGION_LABEL;
      Jump jump0 = new Jump(label0);
      String string0 = jump0.toString();
      assertEquals("jump -> UNRESCUED_REGION_0", string0);
  }
}
