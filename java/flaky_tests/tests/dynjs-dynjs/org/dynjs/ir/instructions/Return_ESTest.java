/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 22:19:44 GMT 2022
 */

package org.dynjs.ir.instructions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.dynjs.ir.Operand;
import org.dynjs.ir.OperandType;
import org.dynjs.ir.instructions.Return;
import org.dynjs.ir.operands.Null;
import org.dynjs.ir.operands.This;
import org.dynjs.ir.operands.Undefined;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Return_ESTest extends Return_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Null null0 = (Null)Null.NULL;
      Return return0 = new Return(null0);
      HashMap<Operand, Operand> hashMap0 = new HashMap<Operand, Operand>();
      return0.simplifyOperands(hashMap0, true);
      assertEquals((-1), return0.getIPC());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Undefined undefined0 = (Undefined)Undefined.UNDEFINED;
      Return return0 = new Return(undefined0);
      Operand operand0 = return0.getValue();
      assertEquals(OperandType.UNDEFINED, operand0.getType());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Return return0 = new Return((Operand) null);
      Operand operand0 = return0.getValue();
      assertNull(operand0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Return return0 = new Return((Operand) null);
      HashMap<Operand, Operand> hashMap0 = new HashMap<Operand, Operand>();
      // Undeclared exception!
      try { 
        return0.simplifyOperands(hashMap0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.ir.instructions.Return", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Return return0 = new Return((Operand) null);
      String string0 = return0.toString();
      assertEquals("return null;", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Return return0 = new Return((Operand) null);
      Operand[] operandArray0 = return0.getOperands();
      assertEquals(1, operandArray0.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      This this0 = This.THIS;
      Return return0 = new Return(this0);
      boolean boolean0 = return0.transfersControl();
      assertTrue(boolean0);
  }
}
