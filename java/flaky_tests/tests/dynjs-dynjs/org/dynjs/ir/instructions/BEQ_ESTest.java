/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 21:44:24 GMT 2022
 */

package org.dynjs.ir.instructions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.dynjs.ir.Operand;
import org.dynjs.ir.OperandType;
import org.dynjs.ir.instructions.BEQ;
import org.dynjs.ir.instructions.Branch;
import org.dynjs.ir.operands.FloatNumber;
import org.dynjs.ir.operands.Label;
import org.dynjs.ir.operands.Null;
import org.dynjs.ir.operands.This;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BEQ_ESTest extends BEQ_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FloatNumber floatNumber0 = new FloatNumber(1683.01);
      Label label0 = Label.UNRESCUED_REGION_LABEL;
      Null null0 = (Null)Null.NULL;
      Branch branch0 = BEQ.create(floatNumber0, null0, label0);
      assertTrue(branch0.transfersControl());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Label label0 = Label.UNRESCUED_REGION_LABEL;
      BEQ bEQ0 = new BEQ((Operand) null, (Operand) null, label0);
      Operand operand0 = bEQ0.getArg2();
      assertNull(operand0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Label label0 = Label.UNRESCUED_REGION_LABEL;
      BEQ bEQ0 = new BEQ((Operand) null, (Operand) null, label0);
      Operand operand0 = bEQ0.getArg1();
      assertNull(operand0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Label label0 = Label.UNRESCUED_REGION_LABEL;
      BEQ bEQ0 = new BEQ((Operand) null, (Operand) null, label0);
      HashMap<Operand, Operand> hashMap0 = new HashMap<Operand, Operand>();
      // Undeclared exception!
      try { 
        bEQ0.simplifyOperands(hashMap0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.ir.instructions.BEQ", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FloatNumber floatNumber0 = new FloatNumber(1683.01);
      Label label0 = Label.UNRESCUED_REGION_LABEL;
      BEQ bEQ0 = new BEQ(floatNumber0, floatNumber0, label0);
      String string0 = bEQ0.toString();
      assertEquals("BEQ Float:1683.01, Float:1683.01 -> UNRESCUED_REGION_0", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FloatNumber floatNumber0 = new FloatNumber(1683.01);
      Label label0 = Label.UNRESCUED_REGION_LABEL;
      BEQ bEQ0 = new BEQ(floatNumber0, floatNumber0, label0);
      Operand[] operandArray0 = bEQ0.getOperands();
      assertEquals(2, operandArray0.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Label label0 = Label.UNRESCUED_REGION_LABEL;
      BEQ bEQ0 = new BEQ(label0, label0, label0);
      Operand operand0 = bEQ0.getArg1();
      assertEquals(OperandType.LABEL, operand0.getType());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      This this0 = This.THIS;
      Label label0 = Label.UNRESCUED_REGION_LABEL;
      BEQ bEQ0 = new BEQ(this0, this0, label0);
      Operand operand0 = bEQ0.getArg2();
      assertSame(this0, operand0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Label label0 = Label.UNRESCUED_REGION_LABEL;
      HashMap<Operand, Operand> hashMap0 = new HashMap<Operand, Operand>();
      BEQ bEQ0 = new BEQ(label0, label0, label0);
      bEQ0.simplifyOperands(hashMap0, true);
      assertTrue(hashMap0.isEmpty());
  }
}
