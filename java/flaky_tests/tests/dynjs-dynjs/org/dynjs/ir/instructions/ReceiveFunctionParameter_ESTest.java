/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 22:03:50 GMT 2022
 */

package org.dynjs.ir.instructions;

import org.junit.Test;
import static org.junit.Assert.*;
import org.dynjs.ir.FunctionScope;
import org.dynjs.ir.Scope;
import org.dynjs.ir.instructions.ReceiveFunctionParameter;
import org.dynjs.ir.operands.TemporaryVariable;
import org.dynjs.ir.operands.Variable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReceiveFunctionParameter_ESTest extends ReceiveFunctionParameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TemporaryVariable temporaryVariable0 = new TemporaryVariable(0);
      ReceiveFunctionParameter receiveFunctionParameter0 = new ReceiveFunctionParameter(temporaryVariable0, 0);
      receiveFunctionParameter0.getResult();
      assertEquals(0, receiveFunctionParameter0.getIndex());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TemporaryVariable temporaryVariable0 = new TemporaryVariable(0);
      ReceiveFunctionParameter receiveFunctionParameter0 = new ReceiveFunctionParameter(temporaryVariable0, 0);
      int int0 = receiveFunctionParameter0.getIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TemporaryVariable temporaryVariable0 = new TemporaryVariable(4010);
      ReceiveFunctionParameter receiveFunctionParameter0 = new ReceiveFunctionParameter(temporaryVariable0, (-2518));
      int int0 = receiveFunctionParameter0.getIndex();
      assertEquals((-2518), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ReceiveFunctionParameter receiveFunctionParameter0 = new ReceiveFunctionParameter((Variable) null, 0);
      receiveFunctionParameter0.getResult();
      assertEquals(0, receiveFunctionParameter0.getIndex());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Scope scope0 = new Scope((Scope) null, "", false);
      String[] stringArray0 = new String[4];
      FunctionScope functionScope0 = new FunctionScope(scope0, ")", true, stringArray0, ")");
      Variable variable0 = functionScope0.acquireLocalVariable("");
      ReceiveFunctionParameter receiveFunctionParameter0 = new ReceiveFunctionParameter(variable0, 1);
      int int0 = receiveFunctionParameter0.getIndex();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TemporaryVariable temporaryVariable0 = new TemporaryVariable(64);
      ReceiveFunctionParameter receiveFunctionParameter0 = new ReceiveFunctionParameter(temporaryVariable0, 64);
      receiveFunctionParameter0.updateResult(temporaryVariable0);
      assertEquals(64, receiveFunctionParameter0.getIndex());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ReceiveFunctionParameter receiveFunctionParameter0 = new ReceiveFunctionParameter((Variable) null, 0);
      receiveFunctionParameter0.getOperands();
      assertEquals(0, receiveFunctionParameter0.getIndex());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ReceiveFunctionParameter receiveFunctionParameter0 = new ReceiveFunctionParameter((Variable) null, 0);
      String string0 = receiveFunctionParameter0.toString();
      assertEquals("null = receive_parameter(0)", string0);
  }
}
