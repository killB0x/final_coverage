/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 21:46:57 GMT 2022
 */

package org.dynjs.ir.instructions;

import org.junit.Test;
import static org.junit.Assert.*;
import org.dynjs.ir.FunctionScope;
import org.dynjs.ir.Operand;
import org.dynjs.ir.Scope;
import org.dynjs.ir.instructions.DefineFunction;
import org.dynjs.ir.operands.DynamicVariable;
import org.dynjs.ir.operands.TemporaryVariable;
import org.dynjs.ir.operands.Variable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefineFunction_ESTest extends DefineFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[3];
      FunctionScope functionScope0 = new FunctionScope((Scope) null, "", false, stringArray0, "");
      Variable variable0 = functionScope0.acquireTemporaryVariable(0);
      DefineFunction defineFunction0 = new DefineFunction(variable0, (FunctionScope) null);
      FunctionScope functionScope1 = defineFunction0.getScope();
      assertNull(functionScope1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DynamicVariable dynamicVariable0 = new DynamicVariable("");
      String[] stringArray0 = new String[3];
      FunctionScope functionScope0 = new FunctionScope((Scope) null, "", false, stringArray0, "+y}<O48^");
      DefineFunction defineFunction0 = new DefineFunction(dynamicVariable0, functionScope0);
      FunctionScope functionScope1 = defineFunction0.getScope();
      assertSame(functionScope1, functionScope0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[8];
      FunctionScope functionScope0 = new FunctionScope((Scope) null, "setUTCMinutes", true, stringArray0, "0");
      Variable variable0 = functionScope0.createTemporaryVariable();
      DefineFunction defineFunction0 = new DefineFunction(variable0, functionScope0);
      functionScope0.acquireLocalVariable("setUTCMinutesDefineFunction");
      FunctionScope functionScope1 = defineFunction0.getScope();
      assertSame(functionScope0, functionScope1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[3];
      FunctionScope functionScope0 = new FunctionScope((Scope) null, "", false, stringArray0, "");
      Variable variable0 = functionScope0.acquireTemporaryVariable(0);
      DefineFunction defineFunction0 = new DefineFunction(variable0, (FunctionScope) null);
      defineFunction0.updateResult((Variable) null);
      Variable variable1 = defineFunction0.getResult();
      assertNull(variable1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[8];
      FunctionScope functionScope0 = new FunctionScope((Scope) null, "setUTCMinutes", true, stringArray0, "0");
      Variable variable0 = functionScope0.createTemporaryVariable();
      DefineFunction defineFunction0 = new DefineFunction(variable0, functionScope0);
      Operand[] operandArray0 = defineFunction0.getOperands();
      assertEquals(1, operandArray0.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[8];
      FunctionScope functionScope0 = new FunctionScope((Scope) null, "setUTCMinutes", true, stringArray0, "0");
      Variable variable0 = functionScope0.createTemporaryVariable();
      DefineFunction defineFunction0 = new DefineFunction(variable0, functionScope0);
      TemporaryVariable temporaryVariable0 = (TemporaryVariable)defineFunction0.getResult();
      assertEquals(0, temporaryVariable0.getOffset());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DefineFunction defineFunction0 = new DefineFunction((Variable) null, (FunctionScope) null);
      String string0 = defineFunction0.toString();
      assertEquals("null = function()", string0);
  }
}
