/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 22:03:10 GMT 2022
 */

package org.dynjs.ir.instructions;

import org.junit.Test;
import static org.junit.Assert.*;
import org.dynjs.ir.Operand;
import org.dynjs.ir.instructions.Raise;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Raise_ESTest extends Raise_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Raise raise0 = new Raise("6K", "kCKH*");
      String string0 = raise0.getType();
      assertEquals("6K", string0);
      assertEquals("kCKH*", raise0.getMessage());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Raise raise0 = new Raise("", "");
      String string0 = raise0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Raise raise0 = new Raise("6K", "kCKH*");
      String string0 = raise0.getMessage();
      assertEquals("kCKH*", string0);
      assertEquals("6K", raise0.getType());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Raise raise0 = new Raise("", "");
      String string0 = raise0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Raise raise0 = new Raise((String) null, "");
      Operand[] operandArray0 = raise0.getOperands();
      assertEquals(0, operandArray0.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Raise raise0 = new Raise("", "");
      boolean boolean0 = raise0.transfersControl();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Raise raise0 = new Raise((String) null, "");
      String string0 = raise0.toString();
      assertEquals("raise null, ''", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Raise raise0 = new Raise("'", (String) null);
      String string0 = raise0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Raise raise0 = new Raise((String) null, "");
      String string0 = raise0.getType();
      assertNull(string0);
  }
}
