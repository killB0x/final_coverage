/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 21:41:24 GMT 2022
 */

package org.dynjs.ir.operands;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import org.dynjs.ir.operands.FloatNumber;
import org.dynjs.ir.operands.Variable;
import org.dynjs.runtime.ExecutionContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FloatNumber_ESTest extends FloatNumber_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FloatNumber floatNumber0 = new FloatNumber(Double.POSITIVE_INFINITY);
      double double0 = floatNumber0.getValue();
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FloatNumber floatNumber0 = new FloatNumber((-2772.766734233));
      double double0 = floatNumber0.getValue();
      assertEquals((-2772.766734233), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FloatNumber floatNumber0 = new FloatNumber(0.0);
      double double0 = floatNumber0.getValue();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FloatNumber floatNumber0 = new FloatNumber(0.0);
      Object[] objectArray0 = new Object[2];
      Object object0 = floatNumber0.retrieve((ExecutionContext) null, objectArray0);
      assertEquals(0.0, object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FloatNumber floatNumber0 = new FloatNumber(755.0187158988117);
      LinkedList<Variable> linkedList0 = new LinkedList<Variable>();
      floatNumber0.addUsedVariables(linkedList0);
      assertEquals(755.0187158988117, floatNumber0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FloatNumber floatNumber0 = new FloatNumber(0.0);
      String string0 = floatNumber0.toString();
      assertEquals("Float:0.0", string0);
  }
}
