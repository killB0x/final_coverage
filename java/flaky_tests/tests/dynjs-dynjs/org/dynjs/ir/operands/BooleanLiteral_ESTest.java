/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 22:05:18 GMT 2022
 */

package org.dynjs.ir.operands;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import org.dynjs.ir.OperandType;
import org.dynjs.ir.operands.BooleanLiteral;
import org.dynjs.ir.operands.Variable;
import org.dynjs.runtime.ExecutionContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BooleanLiteral_ESTest extends BooleanLiteral_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = BooleanLiteral.TRUE.FALSE.toString();
      assertEquals("false", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BooleanLiteral booleanLiteral0 = new BooleanLiteral(true);
      assertEquals(OperandType.BOOLEAN, booleanLiteral0.getType());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Object object0 = BooleanLiteral.TRUE.retrieve((ExecutionContext) null, objectArray0);
      assertEquals(true, object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BooleanLiteral booleanLiteral0 = BooleanLiteral.TRUE;
      LinkedList<Variable> linkedList0 = new LinkedList<Variable>();
      booleanLiteral0.addUsedVariables(linkedList0);
      assertEquals(OperandType.BOOLEAN, booleanLiteral0.getType());
  }
}
