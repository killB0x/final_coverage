/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 20:51:10 GMT 2022
 */

package org.dynjs.runtime.modules;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.IllegalFormatConversionException;
import java.util.UnknownFormatConversionException;
import org.dynjs.runtime.modules.UtilModule;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UtilModule_ESTest extends UtilModule_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      // Undeclared exception!
      try { 
        utilModule0.puts((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.runtime.modules.UtilModule", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        utilModule0.print(objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "0H4 *l%";
      // Undeclared exception!
      try { 
        utilModule0.format(objectArray0);
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '%'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "A+oZ[%g`.pYZS";
      objectArray0[1] = (Object) "<native function: Function>";
      // Undeclared exception!
      try { 
        utilModule0.format(objectArray0);
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // g != java.lang.String
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      UtilModule utilModule0 = new UtilModule();
      // Undeclared exception!
      try { 
        utilModule0.format(objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.dynjs.runtime.modules.UtilModule", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      utilModule0.debug(";T,z3<k&;");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      boolean boolean0 = utilModule0.isError(utilModule0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) utilModule0;
      objectArray0[1] = (Object) utilModule0;
      objectArray0[2] = (Object) utilModule0;
      objectArray0[3] = objectArray0[2];
      objectArray0[4] = (Object) utilModule0;
      objectArray0[5] = objectArray0[4];
      objectArray0[6] = (Object) utilModule0;
      objectArray0[7] = (Object) utilModule0;
      utilModule0.print(objectArray0);
      assertEquals(8, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) utilModule0;
      objectArray0[1] = (Object) utilModule0;
      utilModule0.puts(objectArray0);
      assertEquals(2, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) utilModule0;
      objectArray0[1] = (Object) utilModule0;
      objectArray0[2] = (Object) utilModule0;
      objectArray0[3] = objectArray0[1];
      objectArray0[4] = (Object) utilModule0;
      objectArray0[5] = objectArray0[4];
      objectArray0[6] = (Object) utilModule0;
      objectArray0[7] = (Object) utilModule0;
      utilModule0.error(objectArray0);
      assertEquals(8, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) utilModule0;
      objectArray0[1] = (Object) utilModule0;
      objectArray0[2] = (Object) utilModule0;
      objectArray0[3] = objectArray0[1];
      objectArray0[4] = (Object) utilModule0;
      objectArray0[5] = objectArray0[1];
      objectArray0[6] = (Object) utilModule0;
      objectArray0[7] = (Object) utilModule0;
      String string0 = utilModule0.format(objectArray0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "";
      String string0 = utilModule0.format(objectArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      Object[] objectArray0 = new Object[8];
      // Undeclared exception!
      try { 
        utilModule0.format(objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      boolean boolean0 = utilModule0.isRegExp(utilModule0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      boolean boolean0 = utilModule0.isArray(utilModule0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) utilModule0;
      // Undeclared exception!
      try { 
        utilModule0.error(objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      utilModule0.log("x2h4MaR4V%[");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UtilModule utilModule0 = new UtilModule();
      boolean boolean0 = utilModule0.isDate(utilModule0);
      assertFalse(boolean0);
  }
}
