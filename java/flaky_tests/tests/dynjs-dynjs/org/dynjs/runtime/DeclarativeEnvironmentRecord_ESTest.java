/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 20:27:27 GMT 2022
 */

package org.dynjs.runtime;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dynjs.runtime.DeclarativeEnvironmentRecord;
import org.dynjs.runtime.ExecutionContext;
import org.dynjs.runtime.Types;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DeclarativeEnvironmentRecord_ESTest extends DeclarativeEnvironmentRecord_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.assignMutableBinding((ExecutionContext) null, (String) null, "-7E{4?", true, false);
      assertFalse(declarativeEnvironmentRecord0.isGlobal());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createMutableBinding((ExecutionContext) null, "je%$JW7gm/>s*`", false);
      declarativeEnvironmentRecord0.setMutableBinding((ExecutionContext) null, "je%$JW7gm/>s*`", (Object) null, true);
      Object object0 = declarativeEnvironmentRecord0.getBindingValue((ExecutionContext) null, "je%$JW7gm/>s*`", true);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createImmutableBinding("ECJ>ghbZ^p'5!08");
      // Undeclared exception!
      try { 
        declarativeEnvironmentRecord0.assignMutableBinding((ExecutionContext) null, "ECJ>ghbZ^p'5!08", "ECJ>ghbZ^p'5!08", false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.runtime.DeclarativeEnvironmentRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createImmutableBinding("$I6a{ou");
      declarativeEnvironmentRecord0.setMutableBinding((ExecutionContext) null, "$I6a{ou", (Object) "$I6a{ou", false);
      assertFalse(declarativeEnvironmentRecord0.isGlobal());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createImmutableBinding((String) null);
      // Undeclared exception!
      try { 
        declarativeEnvironmentRecord0.setMutableBinding((ExecutionContext) null, (String) null, (Object) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.runtime.DeclarativeEnvironmentRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      // Undeclared exception!
      try { 
        declarativeEnvironmentRecord0.setMutableBinding((ExecutionContext) null, ":e]W5go\"; j8|5", (Object) null, true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // 10.2.1.1.3: No binding exists for :e]W5go\"; j8|5
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createImmutableBinding("//D\fjQIa&t(h");
      // Undeclared exception!
      try { 
        declarativeEnvironmentRecord0.createMutableBinding((ExecutionContext) null, "//D\fjQIa&t(h", false);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // 10.2.1.1.2: Binding already exists for //D\fjQIa&t(h
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createMutableBinding((ExecutionContext) null, "je%$JW7gm/>s*`", true);
      boolean boolean0 = declarativeEnvironmentRecord0.hasBinding((ExecutionContext) null, "je%$JW7gm/>s*`");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      boolean boolean0 = declarativeEnvironmentRecord0.hasBinding((ExecutionContext) null, "c|';04A;akY(p)g>U<o");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createImmutableBinding("$I6a{ou");
      boolean boolean0 = declarativeEnvironmentRecord0.hasBinding((ExecutionContext) null, "$I6a{ou");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createMutableBinding((ExecutionContext) null, "n9TDs3,x?\"g5]+jR]F9", true);
      boolean boolean0 = declarativeEnvironmentRecord0.deleteBinding((ExecutionContext) null, "n9TDs3,x?\"g5]+jR]F9");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      boolean boolean0 = declarativeEnvironmentRecord0.deleteBinding((ExecutionContext) null, "n9TDs3,x?\"g5]+jR]F9");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createImmutableBinding("*(2(H");
      boolean boolean0 = declarativeEnvironmentRecord0.deleteBinding((ExecutionContext) null, "*(2(H");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createImmutableBinding("ECJ>ghbZ^p'5!08");
      Object object0 = declarativeEnvironmentRecord0.getBindingValue((ExecutionContext) null, "ECJ>ghbZ^p'5!08", false);
      assertEquals("undefined", object0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createImmutableBinding("ECJ>ghbZ^p'5!08");
      declarativeEnvironmentRecord0.initializeImmutableBinding("ECJ>ghbZ^p'5!08", "ECJ>ghbZ^p'5!08");
      Object object0 = declarativeEnvironmentRecord0.getBindingValue((ExecutionContext) null, "ECJ>ghbZ^p'5!08", true);
      assertEquals("ECJ>ghbZ^p'5!08", object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createImmutableBinding("ECJ>ghbZ^p'5!08");
      // Undeclared exception!
      try { 
        declarativeEnvironmentRecord0.getBindingValue((ExecutionContext) null, "ECJ>ghbZ^p'5!08", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.runtime.DeclarativeEnvironmentRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      // Undeclared exception!
      try { 
        declarativeEnvironmentRecord0.getBindingValue((ExecutionContext) null, "o%j*;ahFcJNFL0oT", true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // 10.2.1.1.4: No binding exists for o%j*;ahFcJNFL0oT
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createMutableBinding((ExecutionContext) null, "GVCcC~U`d+v", false);
      declarativeEnvironmentRecord0.assignMutableBinding((ExecutionContext) null, "GVCcC~U`d+v", (Object) null, false, false);
      assertFalse(declarativeEnvironmentRecord0.isGlobal());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createImmutableBinding((String) null);
      // Undeclared exception!
      try { 
        declarativeEnvironmentRecord0.setMutableBinding((String) null, (Object) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.runtime.DeclarativeEnvironmentRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createImmutableBinding((String) null);
      // Undeclared exception!
      try { 
        declarativeEnvironmentRecord0.createMutableBinding((String) null, false);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // 10.2.1.1.2: Binding already exists for null
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      boolean boolean0 = declarativeEnvironmentRecord0.isGlobal();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      Types.Undefined types_Undefined0 = (Types.Undefined)declarativeEnvironmentRecord0.implicitThisValue();
      assertEquals("undefined", types_Undefined0.typeof());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createImmutableBinding((String) null);
      declarativeEnvironmentRecord0.setMutableBinding((String) null, (Object) null, false);
      assertFalse(declarativeEnvironmentRecord0.isGlobal());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      declarativeEnvironmentRecord0.createMutableBinding((String) null, true);
      declarativeEnvironmentRecord0.setMutableBinding((String) null, (Object) null, true);
      assertFalse(declarativeEnvironmentRecord0.isGlobal());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      // Undeclared exception!
      try { 
        declarativeEnvironmentRecord0.setMutableBinding((String) null, (Object) null, false);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // 10.2.1.1.3: No binding exists for null
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DeclarativeEnvironmentRecord declarativeEnvironmentRecord0 = new DeclarativeEnvironmentRecord();
      // Undeclared exception!
      try { 
        declarativeEnvironmentRecord0.initializeImmutableBinding("ECJ>ghbZ^p'5!08", "ECJ>ghbZ^p'5!08");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.runtime.DeclarativeEnvironmentRecord", e);
      }
  }
}
