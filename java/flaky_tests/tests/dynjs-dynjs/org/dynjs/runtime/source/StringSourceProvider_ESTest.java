/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 21:57:25 GMT 2022
 */

package org.dynjs.runtime.source;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dynjs.runtime.source.StringSourceProvider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringSourceProvider_ESTest extends StringSourceProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringSourceProvider stringSourceProvider0 = new StringSourceProvider((String) null, "5s+_rgVh@/v}-jb`Td");
      String string0 = stringSourceProvider0.getSource();
      assertEquals(1, stringSourceProvider0.getId());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringSourceProvider stringSourceProvider0 = new StringSourceProvider("p[VBiFu=zYUvLR]V");
      String string0 = stringSourceProvider0.getSource();
      assertEquals(1, stringSourceProvider0.getId());
      assertEquals("p[VBiFu=zYUvLR]V", string0);
      assertEquals("<eval>", stringSourceProvider0.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringSourceProvider stringSourceProvider0 = new StringSourceProvider("WBpX9~n\"K))04");
      assertEquals("<eval>", stringSourceProvider0.getName());
      
      stringSourceProvider0.setName((String) null);
      stringSourceProvider0.getName();
      assertEquals(1, stringSourceProvider0.getId());
      assertEquals("WBpX9~n\"K))04", stringSourceProvider0.getSource());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringSourceProvider stringSourceProvider0 = new StringSourceProvider("");
      assertEquals("<eval>", stringSourceProvider0.getName());
      
      stringSourceProvider0.setName("");
      stringSourceProvider0.getName();
      assertEquals(1, stringSourceProvider0.getId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringSourceProvider stringSourceProvider0 = new StringSourceProvider((String) null);
      // Undeclared exception!
      try { 
        stringSourceProvider0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.runtime.source.StringSourceProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringSourceProvider stringSourceProvider0 = new StringSourceProvider((String) null);
      // Undeclared exception!
      try { 
        stringSourceProvider0.openReader();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringSourceProvider stringSourceProvider0 = new StringSourceProvider("");
      long long0 = stringSourceProvider0.getSourceLength();
      assertEquals("<eval>", stringSourceProvider0.getName());
      assertEquals(1, stringSourceProvider0.getId());
      assertEquals("", stringSourceProvider0.getSource());
      assertEquals(99L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringSourceProvider stringSourceProvider0 = new StringSourceProvider("");
      int int0 = stringSourceProvider0.getId();
      assertEquals(1, int0);
      assertEquals("", stringSourceProvider0.getSource());
      assertEquals("<eval>", stringSourceProvider0.getName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringSourceProvider stringSourceProvider0 = new StringSourceProvider("");
      String string0 = stringSourceProvider0.getName();
      assertEquals(1, stringSourceProvider0.getId());
      assertEquals("", stringSourceProvider0.getSource());
      assertEquals("<eval>", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringSourceProvider stringSourceProvider0 = new StringSourceProvider("");
      // Undeclared exception!
      try { 
        stringSourceProvider0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringSourceProvider stringSourceProvider0 = new StringSourceProvider("");
      String string0 = stringSourceProvider0.getSource();
      assertEquals("", string0);
      assertEquals("<eval>", stringSourceProvider0.getName());
      assertEquals(1, stringSourceProvider0.getId());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringSourceProvider stringSourceProvider0 = new StringSourceProvider("");
      long long0 = stringSourceProvider0.getLineCount();
      assertEquals("<eval>", stringSourceProvider0.getName());
      assertEquals("", stringSourceProvider0.getSource());
      assertEquals(1, stringSourceProvider0.getId());
      assertEquals(99L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringSourceProvider stringSourceProvider0 = new StringSourceProvider("");
      stringSourceProvider0.openReader();
      assertEquals("<eval>", stringSourceProvider0.getName());
      assertEquals(1, stringSourceProvider0.getId());
      assertEquals("", stringSourceProvider0.getSource());
  }
}
