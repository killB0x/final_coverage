/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 21:30:52 GMT 2022
 */

package org.dynjs.runtime;

import org.junit.Test;
import static org.junit.Assert.*;
import org.dynjs.runtime.BasicBlock;
import org.dynjs.runtime.BlockManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BlockManager_ESTest extends BlockManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BlockManager.Entry blockManager_Entry0 = new BlockManager.Entry((-1451));
      blockManager_Entry0.getCompiled();
      assertEquals((-1451), blockManager_Entry0.statementNumber);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BlockManager.Entry blockManager_Entry0 = new BlockManager.Entry((-1451));
      String string0 = blockManager_Entry0.toString();
      assertEquals("[Entry: statement=null; compiled=null]", string0);
      assertEquals((-1451), blockManager_Entry0.statementNumber);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BlockManager.Entry blockManager_Entry0 = new BlockManager.Entry((-1451));
      blockManager_Entry0.setCompiled((BasicBlock) null);
      assertEquals((-1451), blockManager_Entry0.statementNumber);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BlockManager blockManager0 = new BlockManager();
      BlockManager.Entry blockManager_Entry0 = blockManager0.retrieve((-1451));
      BlockManager.Entry blockManager_Entry1 = blockManager0.retrieve((-1451));
      assertSame(blockManager_Entry1, blockManager_Entry0);
      assertEquals((-1451), blockManager_Entry1.statementNumber);
      assertNotNull(blockManager_Entry1);
  }
}
