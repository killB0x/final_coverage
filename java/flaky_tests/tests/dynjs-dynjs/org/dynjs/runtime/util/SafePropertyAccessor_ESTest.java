/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 21:52:40 GMT 2022
 */

package org.dynjs.runtime.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dynjs.runtime.util.SafePropertyAccessor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SafePropertyAccessor_ESTest extends SafePropertyAccessor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = SafePropertyAccessor.getProperty("dIJ)b!X[hK:", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = SafePropertyAccessor.getProperty("P9", "dIJ)b!X[hK:");
      assertEquals("dIJ)b!X[hK:", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = SafePropertyAccessor.getProperty("Lx5J/:'dWcVU{OQ", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        SafePropertyAccessor.getProperty((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SafePropertyAccessor safePropertyAccessor0 = new SafePropertyAccessor();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        SafePropertyAccessor.getProperty("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }
}
