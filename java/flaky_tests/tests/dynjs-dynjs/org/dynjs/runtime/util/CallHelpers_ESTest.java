/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 21:34:40 GMT 2022
 */

package org.dynjs.runtime.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dynjs.runtime.util.CallHelpers;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CallHelpers_ESTest extends CallHelpers_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Object[] objectArray1 = CallHelpers.allButFirstArgument(objectArray0);
      assertEquals(6, objectArray1.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        CallHelpers.allButFirstArgument((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.runtime.util.CallHelpers", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Object[] objectArray1 = CallHelpers.allButFirstArgument(objectArray0);
      assertNotSame(objectArray0, objectArray1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CallHelpers callHelpers0 = new CallHelpers();
      // Undeclared exception!
      try { 
        CallHelpers.allButFirstArgument(callHelpers0.EMPTY_ARRAY);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("org.dynjs.runtime.util.CallHelpers", e);
      }
  }
}
