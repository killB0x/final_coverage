/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 21:19:23 GMT 2022
 */

package org.dynjs.runtime;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URL;
import java.net.URLClassLoader;
import org.dynjs.runtime.Classpath;
import org.dynjs.runtime.DynamicClassLoader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Classpath_ESTest extends Classpath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Classpath classpath0 = new Classpath((DynamicClassLoader) null);
      // Undeclared exception!
      try { 
        classpath0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dynjs.runtime.Classpath", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URL[] uRLArray0 = new URL[0];
      URLClassLoader uRLClassLoader0 = URLClassLoader.newInstance(uRLArray0);
      DynamicClassLoader dynamicClassLoader0 = new DynamicClassLoader(uRLClassLoader0);
      Classpath classpath0 = new Classpath(dynamicClassLoader0);
      // Undeclared exception!
      try { 
        classpath0.push((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DynamicClassLoader dynamicClassLoader0 = new DynamicClassLoader();
      Classpath classpath0 = new Classpath(dynamicClassLoader0);
      String string0 = classpath0.toString();
      assertEquals("[]", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DynamicClassLoader dynamicClassLoader0 = new DynamicClassLoader();
      Classpath classpath0 = new Classpath(dynamicClassLoader0);
      classpath0.push("");
      String string0 = classpath0.toString();
      assertEquals("[file:/]", string0);
  }
}
