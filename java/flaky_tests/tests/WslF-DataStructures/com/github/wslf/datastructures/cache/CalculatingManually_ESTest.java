/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 17:11:13 GMT 2022
 */

package com.github.wslf.datastructures.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.wslf.datastructures.cache.Cacheable;
import com.github.wslf.datastructures.cache.CalculatingManually;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CalculatingManually_ESTest extends CalculatingManually_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Cacheable<Integer, Integer> cacheable0 = (Cacheable<Integer, Integer>) mock(Cacheable.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer(0);
      CalculatingManually<Integer, Integer> calculatingManually0 = new CalculatingManually<Integer, Integer>(cacheable0, integer0);
      calculatingManually0.run();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CalculatingManually<Integer, Integer> calculatingManually0 = new CalculatingManually<Integer, Integer>((Cacheable<Integer, Integer>) null, (Integer) null);
      // Undeclared exception!
      try { 
        calculatingManually0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.wslf.datastructures.cache.CalculatingManually", e);
      }
  }
}
