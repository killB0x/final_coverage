/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 19:53:08 GMT 2022
 */

package com.searchunify.sdk.dtos;

import org.junit.Test;
import static org.junit.Assert.*;
import com.searchunify.sdk.constants.HttpMethod;
import com.searchunify.sdk.dtos.SearchUnifyRequest;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SearchUnifyRequest_ESTest extends SearchUnifyRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SearchUnifyRequest searchUnifyRequest0 = new SearchUnifyRequest();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("com.searchunify.sdk.constants.HttpMethod", "com.searchunify.sdk.dtos.SearchUnifyRequest");
      searchUnifyRequest0.setParameters(hashMap0);
      Map<String, String> map0 = searchUnifyRequest0.getParameters();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SearchUnifyRequest searchUnifyRequest0 = new SearchUnifyRequest();
      HttpMethod httpMethod0 = HttpMethod.GET;
      searchUnifyRequest0.setMethod(httpMethod0);
      HttpMethod httpMethod1 = searchUnifyRequest0.getMethod();
      assertEquals(HttpMethod.GET, httpMethod1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SearchUnifyRequest searchUnifyRequest0 = new SearchUnifyRequest();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("com.searchunify.sdk.constants.HttpMethod", "com.searchunify.sdk.dtos.SearchUnifyRequest");
      searchUnifyRequest0.setHeaders(hashMap0);
      Map<String, String> map0 = searchUnifyRequest0.getHeaders();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SearchUnifyRequest searchUnifyRequest0 = new SearchUnifyRequest();
      searchUnifyRequest0.setContext("Ua-");
      String string0 = searchUnifyRequest0.getContext();
      assertEquals("Ua-", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SearchUnifyRequest searchUnifyRequest0 = new SearchUnifyRequest();
      Map<String, String> map0 = searchUnifyRequest0.getHeaders();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SearchUnifyRequest searchUnifyRequest0 = new SearchUnifyRequest();
      Map<String, String> map0 = searchUnifyRequest0.getParameters();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SearchUnifyRequest searchUnifyRequest0 = new SearchUnifyRequest();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      searchUnifyRequest0.setParameters(hashMap0);
      Map<String, String> map0 = searchUnifyRequest0.getParameters();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SearchUnifyRequest searchUnifyRequest0 = new SearchUnifyRequest();
      searchUnifyRequest0.setContext("");
      String string0 = searchUnifyRequest0.getContext();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SearchUnifyRequest searchUnifyRequest0 = new SearchUnifyRequest();
      String string0 = searchUnifyRequest0.getContext();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SearchUnifyRequest searchUnifyRequest0 = new SearchUnifyRequest();
      searchUnifyRequest0.getMethod();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SearchUnifyRequest searchUnifyRequest0 = new SearchUnifyRequest();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      searchUnifyRequest0.setHeaders(hashMap0);
      Map<String, String> map0 = searchUnifyRequest0.getHeaders();
      assertTrue(map0.isEmpty());
  }
}
