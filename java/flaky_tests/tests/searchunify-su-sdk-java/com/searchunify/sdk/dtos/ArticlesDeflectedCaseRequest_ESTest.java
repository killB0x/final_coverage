/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 19:01:35 GMT 2022
 */

package com.searchunify.sdk.dtos;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ArticlesDeflectedCaseRequest_ESTest extends ArticlesDeflectedCaseRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = Integer.getInteger("searchType is marked non-null but is null", (-13));
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("#d#@", "", "#d#@", "", "", integer0, integer0);
      String string0 = articlesDeflectedCaseRequest0.getUid();
      assertEquals("", string0);
      assertEquals("", articlesDeflectedCaseRequest0.getTo());
      assertEquals("#d#@", articlesDeflectedCaseRequest0.getFrom());
      assertEquals("", articlesDeflectedCaseRequest0.getSearchType());
      assertEquals("#d#@", articlesDeflectedCaseRequest0.getInternalUser());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = Integer.getInteger("`zXuC04C!T5xv]D", (-1));
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("uid is marked non-null but is null", "uid is marked non-null but is null", "uid is marked non-null but is null", "GET", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest$ArticlesDeflectedCaseRequestBuilder", integer0, integer0);
      assertEquals("GET", articlesDeflectedCaseRequest0.getSearchType());
      
      articlesDeflectedCaseRequest0.setSearchType("");
      articlesDeflectedCaseRequest0.getSearchType();
      assertEquals("uid is marked non-null but is null", articlesDeflectedCaseRequest0.getFrom());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = Integer.getInteger("searchType is marked non-null but is null", 626);
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("L", "rb>{u)\"l\"dZ&/(rk<", "L", "rb>{u)\"l\"dZ&/(rk<", "Dj.@QzufH5%", integer0, integer0);
      articlesDeflectedCaseRequest0.getOffset();
      assertEquals("L", articlesDeflectedCaseRequest0.getFrom());
      assertEquals("rb>{u)\"l\"dZ&/(rk<", articlesDeflectedCaseRequest0.getSearchType());
      assertEquals("L", articlesDeflectedCaseRequest0.getInternalUser());
      assertEquals("Dj.@QzufH5%", articlesDeflectedCaseRequest0.getUid());
      assertEquals("rb>{u)\"l\"dZ&/(rk<", articlesDeflectedCaseRequest0.getTo());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0 = new ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder();
      articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.internalUser(", internalUser=");
      articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.uid("ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder(from=");
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder1 = articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.searchType("uid is marked non-null but is null");
      articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder1.to("uid is marked non-null but is null");
      articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.from("uid is marked non-null but is null");
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.build();
      articlesDeflectedCaseRequest0.getOffset();
      assertEquals("uid is marked non-null but is null", articlesDeflectedCaseRequest0.getSearchType());
      assertEquals("uid is marked non-null but is null", articlesDeflectedCaseRequest0.getFrom());
      assertEquals(", internalUser=", articlesDeflectedCaseRequest0.getInternalUser());
      assertEquals("ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder(from=", articlesDeflectedCaseRequest0.getUid());
      assertEquals("uid is marked non-null but is null", articlesDeflectedCaseRequest0.getTo());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", (-2915));
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("", "", "", "X|I4t?Pb", "DoOfD1q=", integer0, (Integer) null);
      Integer integer1 = articlesDeflectedCaseRequest0.getOffset();
      assertEquals("", articlesDeflectedCaseRequest0.getFrom());
      assertEquals("", articlesDeflectedCaseRequest0.getTo());
      assertEquals("X|I4t?Pb", articlesDeflectedCaseRequest0.getSearchType());
      assertEquals("DoOfD1q=", articlesDeflectedCaseRequest0.getUid());
      assertNotNull(integer1);
      assertEquals("", articlesDeflectedCaseRequest0.getInternalUser());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("U4(|l|l4;KL?", "?B1u.o:(QbO!J=b", "U4(|l|l4;KL?", "Vd", "Vd", integer0, integer0);
      articlesDeflectedCaseRequest0.getLimit();
      assertEquals("U4(|l|l4;KL?", articlesDeflectedCaseRequest0.getInternalUser());
      assertEquals("?B1u.o:(QbO!J=b", articlesDeflectedCaseRequest0.getTo());
      assertEquals("Vd", articlesDeflectedCaseRequest0.getUid());
      assertEquals("Vd", articlesDeflectedCaseRequest0.getSearchType());
      assertEquals("U4(|l|l4;KL?", articlesDeflectedCaseRequest0.getFrom());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = Integer.valueOf(4);
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("]:*\ra%vG>dvG;FfL$", "6Uq", "6Uq", "DELETE", "6Uq", integer0, integer0);
      articlesDeflectedCaseRequest0.getLimit();
      assertEquals("]:*\ra%vG>dvG;FfL$", articlesDeflectedCaseRequest0.getFrom());
      assertEquals("6Uq", articlesDeflectedCaseRequest0.getUid());
      assertEquals("DELETE", articlesDeflectedCaseRequest0.getSearchType());
      assertEquals("6Uq", articlesDeflectedCaseRequest0.getInternalUser());
      assertEquals("6Uq", articlesDeflectedCaseRequest0.getTo());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = Integer.getInteger("`zXuC04C!T5xv]D", (-1));
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("uid is marked non-null but is null", "uid is marked non-null but is null", "uid is marked non-null but is null", "GET", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest$ArticlesDeflectedCaseRequestBuilder", integer0, integer0);
      articlesDeflectedCaseRequest0.getLimit();
      assertEquals("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest$ArticlesDeflectedCaseRequestBuilder", articlesDeflectedCaseRequest0.getUid());
      assertEquals("uid is marked non-null but is null", articlesDeflectedCaseRequest0.getTo());
      assertEquals("uid is marked non-null but is null", articlesDeflectedCaseRequest0.getInternalUser());
      assertEquals("uid is marked non-null but is null", articlesDeflectedCaseRequest0.getFrom());
      assertEquals("GET", articlesDeflectedCaseRequest0.getSearchType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder(from=POST, to=&6-ho8QY(uBG, internalUser=null, searchType=#F/3k@Kqh(ca&Z, uid=#F/3k@Kqh(ca&Z, offset=0, limit=null)", "searchType is marked non-null but is null", "", "", "&6-ho8QY(uBG", integer0, integer0);
      String string0 = articlesDeflectedCaseRequest0.getInternalUser();
      assertEquals("", string0);
      assertEquals("searchType is marked non-null but is null", articlesDeflectedCaseRequest0.getTo());
      assertEquals("", articlesDeflectedCaseRequest0.getSearchType());
      assertEquals("ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder(from=POST, to=&6-ho8QY(uBG, internalUser=null, searchType=#F/3k@Kqh(ca&Z, uid=#F/3k@Kqh(ca&Z, offset=0, limit=null)", articlesDeflectedCaseRequest0.getFrom());
      assertEquals("&6-ho8QY(uBG", articlesDeflectedCaseRequest0.getUid());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(1);
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("ovvZ=U GgY|", "ovvZ=U GgY|", "~)+H(TF&2KM8'a3", "%", "", integer0, integer0);
      assertEquals("ovvZ=U GgY|", articlesDeflectedCaseRequest0.getFrom());
      
      articlesDeflectedCaseRequest0.setFrom("");
      articlesDeflectedCaseRequest0.getFrom();
      assertEquals("", articlesDeflectedCaseRequest0.getUid());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0 = new ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder();
      // Undeclared exception!
      try { 
        articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.searchType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // searchType is marked non-null but is null
         //
         verifyException("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest$ArticlesDeflectedCaseRequestBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0 = ArticlesDeflectedCaseRequest.builder();
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder1 = articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.searchType("");
      assertSame(articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder1, articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0 = ArticlesDeflectedCaseRequest.builder();
      // Undeclared exception!
      try { 
        articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.internalUser((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // internalUser is marked non-null but is null
         //
         verifyException("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest$ArticlesDeflectedCaseRequestBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0 = ArticlesDeflectedCaseRequest.builder();
      // Undeclared exception!
      try { 
        articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.uid((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // uid is marked non-null but is null
         //
         verifyException("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest$ArticlesDeflectedCaseRequestBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0 = ArticlesDeflectedCaseRequest.builder();
      // Undeclared exception!
      try { 
        articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.from((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // from is marked non-null but is null
         //
         verifyException("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest$ArticlesDeflectedCaseRequestBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0 = ArticlesDeflectedCaseRequest.builder();
      // Undeclared exception!
      try { 
        articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.to((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // to is marked non-null but is null
         //
         verifyException("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest$ArticlesDeflectedCaseRequestBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = null;
      try {
        articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("", "", "", "", (String) null, (Integer) null, (Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // uid is marked non-null but is null
         //
         verifyException("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = null;
      try {
        articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("PUT", "PUT", "PUT", (String) null, "PUT", (Integer) null, (Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // searchType is marked non-null but is null
         //
         verifyException("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0 = ArticlesDeflectedCaseRequest.builder();
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder1 = articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.from(", uid=");
      articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder1.to(", uid=");
      // Undeclared exception!
      try { 
        articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder1.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // internalUser is marked non-null but is null
         //
         verifyException("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0 = new ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder();
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder1 = articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.from("'?9");
      // Undeclared exception!
      try { 
        articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder1.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // to is marked non-null but is null
         //
         verifyException("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer(991);
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("internalUser is marked non-null but is null", "internalUser is marked non-null but is null", "M~k]^LXQL9\"t!aov(", "internalUser is marked non-null but is null", "", (Integer) null, integer0);
      // Undeclared exception!
      try { 
        articlesDeflectedCaseRequest0.setSearchType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // searchType is marked non-null but is null
         //
         verifyException("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer(991);
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("internalUser is marked non-null but is null", "internalUser is marked non-null but is null", "M~k]^LXQL9\"t!aov(", "internalUser is marked non-null but is null", "", (Integer) null, integer0);
      // Undeclared exception!
      try { 
        articlesDeflectedCaseRequest0.setTo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // to is marked non-null but is null
         //
         verifyException("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = Integer.getInteger("`zXuC04C!T5xv]D", (-1));
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("uid is marked non-null but is null", "uid is marked non-null but is null", "uid is marked non-null but is null", "GET", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest$ArticlesDeflectedCaseRequestBuilder", integer0, integer0);
      assertEquals("uid is marked non-null but is null", articlesDeflectedCaseRequest0.getTo());
      
      articlesDeflectedCaseRequest0.setTo("");
      articlesDeflectedCaseRequest0.getTo();
      assertEquals("uid is marked non-null but is null", articlesDeflectedCaseRequest0.getFrom());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("", "", "", "", "", integer0, integer0);
      // Undeclared exception!
      try { 
        articlesDeflectedCaseRequest0.setUid((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // uid is marked non-null but is null
         //
         verifyException("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", (-2915));
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("", "", "", "X|I4t?Pb", "DoOfD1q=", integer0, (Integer) null);
      assertEquals("DoOfD1q=", articlesDeflectedCaseRequest0.getUid());
      
      articlesDeflectedCaseRequest0.setUid("X|I4t?Pb");
      assertEquals("X|I4t?Pb", articlesDeflectedCaseRequest0.getSearchType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", integer0, integer0);
      // Undeclared exception!
      try { 
        articlesDeflectedCaseRequest0.setInternalUser((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // internalUser is marked non-null but is null
         //
         verifyException("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", (-2915));
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("", "", "", "X|I4t?Pb", "DoOfD1q=", integer0, (Integer) null);
      assertEquals("", articlesDeflectedCaseRequest0.getInternalUser());
      
      articlesDeflectedCaseRequest0.setInternalUser("g8OR6UK.TY>(#nKLeA");
      assertEquals("DoOfD1q=", articlesDeflectedCaseRequest0.getUid());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("j5q9{~.lZ10", "j5q9{~.lZ10", "uid is marked non-null but is null", "j5q9{~.lZ10", "j5q9{~.lZ10", integer0, integer0);
      // Undeclared exception!
      try { 
        articlesDeflectedCaseRequest0.setFrom((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // from is marked non-null but is null
         //
         verifyException("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0 = ArticlesDeflectedCaseRequest.builder();
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder1 = articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.offset((Integer) null);
      assertSame(articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder1, articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0 = ArticlesDeflectedCaseRequest.builder();
      // Undeclared exception!
      try { 
        articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // from is marked non-null but is null
         //
         verifyException("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0 = ArticlesDeflectedCaseRequest.builder();
      String string0 = articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.toString();
      assertEquals("ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder(from=null, to=null, internalUser=null, searchType=null, uid=null, offset=null, limit=null)", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0 = ArticlesDeflectedCaseRequest.builder();
      ArticlesDeflectedCaseRequest.ArticlesDeflectedCaseRequestBuilder articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder1 = articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0.limit((Integer) null);
      assertSame(articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder1, articlesDeflectedCaseRequest_ArticlesDeflectedCaseRequestBuilder0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Integer integer0 = Integer.getInteger("searchType is markednon-null but is null", 0);
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("rb>{u)\"l\"dZ&/(rk<", "rb>{u)\"l\"dZ&/(rk<", "Dj.@QzufH5%", "", "", integer0, integer0);
      articlesDeflectedCaseRequest0.getOffset();
      assertEquals("", articlesDeflectedCaseRequest0.getSearchType());
      assertEquals("rb>{u)\"l\"dZ&/(rk<", articlesDeflectedCaseRequest0.getTo());
      assertEquals("Dj.@QzufH5%", articlesDeflectedCaseRequest0.getInternalUser());
      assertEquals("rb>{u)\"l\"dZ&/(rk<", articlesDeflectedCaseRequest0.getFrom());
      assertEquals("", articlesDeflectedCaseRequest0.getUid());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", (Integer) null, (Integer) null);
      String string0 = articlesDeflectedCaseRequest0.getSearchType();
      assertEquals("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("?", "?", "?", "?", "?", (Integer) null, (Integer) null);
      String string0 = articlesDeflectedCaseRequest0.getFrom();
      assertEquals("?", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("?", "?", "?", "?", "?", (Integer) null, (Integer) null);
      articlesDeflectedCaseRequest0.setLimit((Integer) null);
      assertEquals("?", articlesDeflectedCaseRequest0.getSearchType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("PUT", "PUT", "PUT", "PUT", "PUT", integer0, integer0);
      String string0 = articlesDeflectedCaseRequest0.getTo();
      assertEquals("PUT", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", (Integer) null, (Integer) null);
      String string0 = articlesDeflectedCaseRequest0.getUid();
      assertEquals("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", "com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", (Integer) null, (Integer) null);
      String string0 = articlesDeflectedCaseRequest0.getInternalUser();
      assertEquals("com.searchunify.sdk.dtos.ArticlesDeflectedCaseRequest", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("ImLS", "ImLS", "ImLS", "ImLS", "ImLS", (Integer) null, (Integer) null);
      Integer integer0 = articlesDeflectedCaseRequest0.getLimit();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ArticlesDeflectedCaseRequest articlesDeflectedCaseRequest0 = new ArticlesDeflectedCaseRequest("PUT", "PUT", "PUT", "PUT", "PUT", (Integer) null, (Integer) null);
      articlesDeflectedCaseRequest0.setOffset((Integer) null);
      assertNull(articlesDeflectedCaseRequest0.getOffset());
  }
}
