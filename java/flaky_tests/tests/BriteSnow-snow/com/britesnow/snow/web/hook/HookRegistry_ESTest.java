/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 20:51:22 GMT 2022
 */

package com.britesnow.snow.web.hook;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.britesnow.snow.web.handler.ParamDef;
import com.britesnow.snow.web.hook.AppHookRef;
import com.britesnow.snow.web.hook.AppPhase;
import com.britesnow.snow.web.hook.HookRegistry;
import com.britesnow.snow.web.hook.On;
import com.britesnow.snow.web.hook.ReqHookRef;
import com.britesnow.snow.web.hook.ReqPhase;
import com.britesnow.snow.web.hook.annotation.WebApplicationHook;
import com.britesnow.snow.web.hook.annotation.WebRequestHook;
import java.lang.reflect.Method;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HookRegistry_ESTest extends HookRegistry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HookRegistry hookRegistry0 = new HookRegistry();
      AppPhase appPhase0 = AppPhase.SHUTDOWN;
      Class<Object> class0 = Object.class;
      ParamDef[] paramDefArray0 = new ParamDef[0];
      On on0 = On.AFTER;
      AppHookRef appHookRef0 = new AppHookRef(class0, (Method) null, paramDefArray0, appPhase0, on0);
      hookRegistry0.addAppHookRef(appHookRef0);
      List<AppHookRef> list0 = hookRegistry0.getAppHooks(appPhase0);
      assertTrue(list0.contains(appHookRef0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HookRegistry hookRegistry0 = new HookRegistry();
      // Undeclared exception!
      try { 
        hookRegistry0.addAppHookRef((AppHookRef) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.britesnow.snow.web.hook.HookRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HookRegistry hookRegistry0 = new HookRegistry();
      Class<Object> class0 = Object.class;
      AppPhase appPhase0 = AppPhase.SHUTDOWN;
      On on0 = On.AFTER;
      AppHookRef appHookRef0 = new AppHookRef(class0, (Method) null, (ParamDef[]) null, appPhase0, on0);
      hookRegistry0.addAppHookRef(appHookRef0);
      hookRegistry0.addAppHookRef(appHookRef0);
      assertEquals(AppPhase.SHUTDOWN, appHookRef0.getStep());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HookRegistry hookRegistry0 = new HookRegistry();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        hookRegistry0.addAppHook(class0, (Method) null, (WebApplicationHook) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.britesnow.snow.web.hook.HookRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HookRegistry hookRegistry0 = new HookRegistry();
      Class<ReqHookRef> class0 = ReqHookRef.class;
      // Undeclared exception!
      try { 
        hookRegistry0.addReqHook(class0, (Method) null, (WebRequestHook) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.britesnow.snow.web.hook.HookRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HookRegistry hookRegistry0 = new HookRegistry();
      ReqPhase reqPhase0 = ReqPhase.END;
      List<ReqHookRef> list0 = hookRegistry0.getRequestHooks(reqPhase0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HookRegistry hookRegistry0 = new HookRegistry();
      AppPhase appPhase0 = AppPhase.SHUTDOWN;
      List<AppHookRef> list0 = hookRegistry0.getAppHooks(appPhase0);
      assertNull(list0);
  }
}
