/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 21:06:29 GMT 2022
 */

package com.britesnow.snow.web.hook;

import org.junit.Test;
import static org.junit.Assert.*;
import com.britesnow.snow.web.handler.ParamDef;
import com.britesnow.snow.web.hook.HookRef;
import com.britesnow.snow.web.hook.On;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HookRef_ESTest extends HookRef_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Object> class0 = Object.class;
      On on0 = On.AFTER;
      HookRef hookRef0 = new HookRef(class0, (Method) null, (ParamDef[]) null, on0);
      ParamDef[] paramDefArray0 = hookRef0.getParamDefs();
      assertNull(paramDefArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ParamDef[] paramDefArray0 = new ParamDef[0];
      On on0 = On.BEFORE;
      HookRef hookRef0 = new HookRef(class0, (Method) null, paramDefArray0, on0);
      ParamDef[] paramDefArray1 = hookRef0.getParamDefs();
      assertSame(paramDefArray1, paramDefArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ParamDef[] paramDefArray0 = new ParamDef[7];
      On on0 = On.AFTER;
      HookRef hookRef0 = new HookRef(class0, (Method) null, paramDefArray0, on0);
      On on1 = hookRef0.getOn();
      assertSame(on0, on1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      HookRef hookRef0 = new HookRef(class0, (Method) null, (ParamDef[]) null, (On) null);
      Class class1 = hookRef0.getCls();
      assertEquals(17, class1.getModifiers());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ParamDef[] paramDefArray0 = new ParamDef[7];
      On on0 = On.AFTER;
      HookRef hookRef0 = new HookRef(class0, (Method) null, paramDefArray0, on0);
      ParamDef[] paramDefArray1 = hookRef0.getParamDefs();
      assertSame(paramDefArray0, paramDefArray1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      HookRef hookRef0 = new HookRef(class0, (Method) null, (ParamDef[]) null, (On) null);
      Method method0 = hookRef0.getMethod();
      assertNull(method0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      HookRef hookRef0 = new HookRef(class0, (Method) null, (ParamDef[]) null, (On) null);
      hookRef0.getOn();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      On on0 = On.BEFORE;
      HookRef hookRef0 = new HookRef((Class) null, (Method) null, (ParamDef[]) null, on0);
      Class class0 = hookRef0.getCls();
      assertNull(class0);
  }
}
