/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 20:45:59 GMT 2022
 */

package com.britesnow.snow.web.db;

import org.junit.Test;
import static org.junit.Assert.*;
import com.britesnow.snow.web.db.QueryBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QueryBuilder_ESTest extends QueryBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QueryBuilder queryBuilder0 = new QueryBuilder("", (Object[]) null);
      String string0 = queryBuilder0.toQuery();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QueryBuilder queryBuilder0 = new QueryBuilder("", (Object[]) null);
      Object[] objectArray0 = new Object[6];
      queryBuilder0.append("%S-f+NN@lL", objectArray0);
      Object[] objectArray1 = queryBuilder0.toParams();
      assertNotSame(objectArray1, objectArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QueryBuilder queryBuilder0 = new QueryBuilder("", (Object[]) null);
      Object[] objectArray0 = queryBuilder0.toParams();
      QueryBuilder queryBuilder1 = queryBuilder0.prependParams(objectArray0);
      assertSame(queryBuilder1, queryBuilder0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QueryBuilder queryBuilder0 = new QueryBuilder("", (Object[]) null);
      QueryBuilder queryBuilder1 = queryBuilder0.prependParams((Object[]) null);
      assertSame(queryBuilder0, queryBuilder1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QueryBuilder queryBuilder0 = new QueryBuilder("", (Object[]) null);
      Object[] objectArray0 = queryBuilder0.toParams();
      QueryBuilder queryBuilder1 = queryBuilder0.appendParams(objectArray0);
      assertSame(queryBuilder1, queryBuilder0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QueryBuilder queryBuilder0 = new QueryBuilder("", (Object[]) null);
      QueryBuilder queryBuilder1 = queryBuilder0.appendParams((Object[]) null);
      assertSame(queryBuilder0, queryBuilder1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      QueryBuilder queryBuilder0 = new QueryBuilder("Oj/1!$T}+", objectArray0);
      String string0 = queryBuilder0.toQuery();
      assertEquals("Oj/1!$T}+", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      QueryBuilder queryBuilder0 = new QueryBuilder("Oj/1!$T}+", objectArray0);
      QueryBuilder queryBuilder1 = queryBuilder0.prepend("", (Object[]) null);
      assertSame(queryBuilder1, queryBuilder0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      QueryBuilder queryBuilder0 = new QueryBuilder();
      QueryBuilder queryBuilder1 = queryBuilder0.append((String) null, (Object[]) null);
      assertSame(queryBuilder0, queryBuilder1);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      QueryBuilder queryBuilder0 = new QueryBuilder("Oj/1!$T}+", objectArray0);
      QueryBuilder queryBuilder1 = queryBuilder0.prepend((String) null, objectArray0);
      assertSame(queryBuilder0, queryBuilder1);
  }
}
