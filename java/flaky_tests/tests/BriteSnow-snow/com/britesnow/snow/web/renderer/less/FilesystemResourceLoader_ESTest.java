/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 20:54:56 GMT 2022
 */

package com.britesnow.snow.web.renderer.less;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.britesnow.snow.web.renderer.less.FilesystemResourceLoader;
import java.io.InputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FilesystemResourceLoader_ESTest extends FilesystemResourceLoader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FilesystemResourceLoader filesystemResourceLoader0 = new FilesystemResourceLoader();
      // Undeclared exception!
      try { 
        filesystemResourceLoader0.openStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FilesystemResourceLoader filesystemResourceLoader0 = new FilesystemResourceLoader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("file");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "P");
      InputStream inputStream0 = filesystemResourceLoader0.openStream("file");
      assertEquals(2, inputStream0.available());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FilesystemResourceLoader filesystemResourceLoader0 = new FilesystemResourceLoader();
      InputStream inputStream0 = filesystemResourceLoader0.openStream("file");
      assertNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FilesystemResourceLoader filesystemResourceLoader0 = new FilesystemResourceLoader();
      InputStream inputStream0 = filesystemResourceLoader0.openStream("");
      assertNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FilesystemResourceLoader filesystemResourceLoader0 = new FilesystemResourceLoader();
      String string0 = filesystemResourceLoader0.getSchema();
      assertEquals("file", string0);
  }
}
