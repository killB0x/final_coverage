/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 06:03:21 GMT 2022
 */

package xyz.luan.console.parser.call;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import xyz.luan.console.parser.actions.ActionRef;
import xyz.luan.console.parser.call.Call;
import xyz.luan.console.parser.call.SingleCall;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SingleCall_ESTest extends SingleCall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SingleCall singleCall0 = new SingleCall((ActionRef) null, (Map<String, String>) null);
      // Undeclared exception!
      try { 
        singleCall0.copy((Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SingleCall singleCall0 = new SingleCall((ActionRef) null, hashMap0);
      Call call0 = singleCall0.copy(hashMap0);
      assertNotSame(singleCall0, call0);
  }
}
