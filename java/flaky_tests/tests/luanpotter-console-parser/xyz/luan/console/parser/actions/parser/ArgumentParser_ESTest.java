/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 06:01:15 GMT 2022
 */

package xyz.luan.console.parser.actions.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import xyz.luan.console.parser.actions.parser.ArgumentParser;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ArgumentParser_ESTest extends ArgumentParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      try { 
        ArgumentParser.parse("L<NV1", class0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         //  expected a 'Boolean' but value found 'L<NV1' can't be converted.
         //
         verifyException("xyz.luan.console.parser.actions.parser.BooleanParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Boolean> class0 = Boolean.TYPE;
      // Undeclared exception!
      try { 
        ArgumentParser.parse("", class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Primitives not supported as actions and handlers arguments!
         //
         verifyException("xyz.luan.console.parser.util.ClassMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      // Undeclared exception!
      try { 
        ArgumentParser.parse((String) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("xyz.luan.console.parser.actions.parser.BooleanParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Boolean> class0 = Boolean.TYPE;
      // Undeclared exception!
      try { 
        ArgumentParser.hasParser(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Primitives not supported as actions and handlers arguments!
         //
         verifyException("xyz.luan.console.parser.util.ClassMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        ArgumentParser.hasParser(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("xyz.luan.console.parser.util.ClassMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      Object object0 = ArgumentParser.parse("y", class0);
      assertEquals(true, object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ArgumentParser argumentParser0 = new ArgumentParser();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Class<Boolean> class0 = Boolean.class;
      boolean boolean0 = ArgumentParser.hasParser(class0);
      assertTrue(boolean0);
  }
}
