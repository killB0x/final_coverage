/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 05:56:53 GMT 2022
 */

package xyz.luan.console.parser.callable;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import xyz.luan.console.parser.Aliases;
import xyz.luan.console.parser.actions.ActionRef;
import xyz.luan.console.parser.call.Call;
import xyz.luan.console.parser.callable.ActionCall;
import xyz.luan.console.parser.callable.Pattern;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ActionCall_ESTest extends ActionCall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ActionCall actionCall0 = new ActionCall("SqNs:Gr", "GuKR=MR3{", hashMap0, "RS.a3NDxa>5[>B[o69#");
      assertEquals("RS.a3NDxa>5[>B[o69#", actionCall0.getDescription());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ActionRef actionRef0 = new ActionRef("", "");
      Pattern pattern0 = new Pattern("xyz.luan.console.parser.callable.ActionCall");
      String[] stringArray0 = new String[1];
      Aliases aliases0 = Aliases.createAliasesWithDefaults();
      Map<String, String> map0 = pattern0.parse(stringArray0, aliases0);
      ActionCall actionCall0 = new ActionCall(actionRef0, pattern0, map0, "");
      Call call0 = actionCall0.parse(stringArray0, aliases0);
      assertNotNull(call0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ActionRef actionRef0 = new ActionRef("lOTB#.vm4+`g", "nAXXu*(0WXbfE;VA#)");
      ActionCall actionCall0 = new ActionCall(actionRef0, (Pattern) null, "nAXXu*(0WXbfE;VA#)");
      Pattern pattern0 = actionCall0.getPattern();
      assertNull(pattern0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ActionRef actionRef0 = new ActionRef(">DMCu=z[H,", ">DMCu=z[H,");
      Pattern pattern0 = new Pattern(">DMCu=z[H,", false);
      String[] stringArray0 = new String[9];
      ActionCall actionCall0 = new ActionCall(actionRef0, pattern0, (Map<String, String>) null, stringArray0[7]);
      String string0 = actionCall0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ActionRef actionRef0 = new ActionRef("", "");
      Pattern pattern0 = new Pattern("xyz.luan.console.parser.callable.ActionCall");
      String[] stringArray0 = new String[1];
      Aliases aliases0 = Aliases.createAliasesWithDefaults();
      Map<String, String> map0 = pattern0.parse(stringArray0, aliases0);
      ActionCall actionCall0 = new ActionCall(actionRef0, pattern0, map0, "");
      String string0 = actionCall0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ActionRef actionRef0 = new ActionRef("yL:L");
      Pattern pattern0 = new Pattern("yL:L");
      String[] stringArray0 = new String[3];
      ActionCall actionCall0 = new ActionCall(actionRef0, pattern0, (Map<String, String>) null, "yL:L");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        actionCall0.parseAction(stringArray0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ActionCall actionCall0 = new ActionCall("SqNs:Gr", "SqNs:Gr", "SqNs:Gr");
      Aliases aliases0 = Aliases.createAliasesWithDefaults();
      // Undeclared exception!
      try { 
        actionCall0.parse((String[]) null, aliases0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("xyz.luan.console.parser.callable.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ActionCall actionCall0 = null;
      try {
        actionCall0 = new ActionCall("SqNs:Gr", (String) null, hashMap0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("xyz.luan.console.parser.callable.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ActionCall actionCall0 = null;
      try {
        actionCall0 = new ActionCall(":fEua$j[S*#", "", (Map<String, String>) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty argument in pattern
         //
         verifyException("xyz.luan.console.parser.callable.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ActionCall actionCall0 = null;
      try {
        actionCall0 = new ActionCall("F%I3$JHu~", ":9km$8[#", hashMap0, "F%I3$JHu~");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("xyz.luan.console.parser.actions.ActionRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ActionCall actionCall0 = null;
      try {
        actionCall0 = new ActionCall((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("xyz.luan.console.parser.actions.ActionRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ActionCall actionCall0 = null;
      try {
        actionCall0 = new ActionCall("{ML:s %q3", "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty argument in pattern
         //
         verifyException("xyz.luan.console.parser.callable.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ActionCall actionCall0 = null;
      try {
        actionCall0 = new ActionCall("vvaiUUmi(}/", "SqNs:Gr", "vvaiUUmi(}/");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("xyz.luan.console.parser.actions.ActionRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ActionRef actionRef0 = new ActionRef(">DMCu=z[H,", ">DMCu=z[H,");
      Pattern pattern0 = new Pattern(">DMCu=z[H,", false);
      String[] stringArray0 = new String[9];
      ActionCall actionCall0 = new ActionCall(actionRef0, pattern0, (Map<String, String>) null, stringArray0[7]);
      Call call0 = actionCall0.parseAction(stringArray0, (Map<String, String>) null);
      assertNull(call0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("", ":HEum$j[#");
      ActionRef actionRef0 = new ActionRef("f/6MGgcI-qoPQ", "f/6MGgcI-qoPQ");
      Pattern pattern0 = new Pattern(":HEum$j[#");
      ActionCall actionCall0 = new ActionCall(actionRef0, pattern0, hashMap0, hashMap0, ")R2");
      String[] stringArray0 = new String[1];
      Call call0 = actionCall0.parseAction(stringArray0, hashMap0);
      assertNotNull(call0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ActionCall actionCall0 = new ActionCall("SqNs:Gr", "SqNs:Gr", "SqNs:Gr");
      Pattern pattern0 = actionCall0.getPattern();
      assertNotNull(pattern0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ActionCall actionCall0 = new ActionCall("SqNs:Gr", "SqNs:Gr", "SqNs:Gr");
      String string0 = actionCall0.getDescription();
      assertEquals("SqNs:Gr", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ActionCall actionCall0 = new ActionCall("MSqNs:Gr", "MSqNs:Gr", "MSqNs:Gr");
      String[] stringArray0 = new String[0];
      Aliases aliases0 = Aliases.createAliasesWithDefaults();
      Call call0 = actionCall0.parse(stringArray0, aliases0);
      assertNull(call0);
  }
}
