/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 05:59:04 GMT 2022
 */

package xyz.luan.console.parser.call;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import xyz.luan.console.parser.Aliases;
import xyz.luan.console.parser.Context;
import xyz.luan.console.parser.DefaultConsole;
import xyz.luan.console.parser.Parser;
import xyz.luan.console.parser.actions.ActionRef;
import xyz.luan.console.parser.call.Call;
import xyz.luan.console.parser.call.CallResult;
import xyz.luan.console.parser.call.Caller;
import xyz.luan.console.parser.call.SingleCall;
import xyz.luan.console.parser.callable.ActionCall;
import xyz.luan.console.parser.callable.Callable;
import xyz.luan.console.parser.callable.Pattern;
import xyz.luan.console.parser.callable.Task;
import xyz.luan.console.parser.config.ConfigCallablesController;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Caller_ESTest extends Caller_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Caller caller0 = new Caller();
      Pattern pattern0 = new Pattern("xyz.luan.console.parser.call.Caller", true);
      LinkedList<ActionCall> linkedList0 = new LinkedList<ActionCall>();
      Task task0 = new Task(pattern0, linkedList0, "m95$Q^@z['STj");
      String[] stringArray0 = new String[3];
      Aliases aliases0 = Aliases.createAliasesWithDefaults();
      Call call0 = task0.parse(stringArray0, aliases0);
      CallResult callResult0 = caller0.call(call0);
      assertEquals(0, callResult0.getResponseCode());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Caller caller0 = new Caller();
      // Undeclared exception!
      try { 
        caller0.registerClass((String) null, (ConfigCallablesController) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("xyz.luan.console.parser.ControllerRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Caller caller0 = new Caller();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SingleCall singleCall0 = new SingleCall((ActionRef) null, hashMap0);
      // Undeclared exception!
      try { 
        caller0.call(singleCall0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("xyz.luan.console.parser.call.SingleCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Caller caller0 = new Caller();
      CallResult callResult0 = caller0.call((Call) null);
      assertEquals(CallResult.INVALID_COMMAND, callResult0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Caller caller0 = new Caller();
      ActionRef actionRef0 = new ActionRef("", "");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      SingleCall singleCall0 = new SingleCall(actionRef0, hashMap0);
      // Undeclared exception!
      try { 
        caller0.call(singleCall0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Controller '' not found. Did you add a a callable and forgot to register the Caller?
         //
         verifyException("xyz.luan.console.parser.call.SingleCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Caller caller0 = new Caller();
      ConfigCallablesController configCallablesController0 = new ConfigCallablesController();
      Context context0 = new Context();
      DefaultConsole defaultConsole0 = new DefaultConsole();
      caller0.registerClass((String) null, configCallablesController0);
      Aliases aliases0 = Aliases.createAliasesWithDefaults();
      LinkedList<Callable> linkedList0 = new LinkedList<Callable>();
      Parser parser0 = new Parser(aliases0, linkedList0);
      context0.setup(parser0, caller0);
      configCallablesController0.setup(context0, defaultConsole0);
      CallResult callResult0 = configCallablesController0.listActions();
      assertEquals(CallResult.SUCCESS, callResult0);
  }
}
