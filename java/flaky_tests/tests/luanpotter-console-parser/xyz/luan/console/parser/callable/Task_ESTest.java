/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 06:00:10 GMT 2022
 */

package xyz.luan.console.parser.callable;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import xyz.luan.console.parser.Aliases;
import xyz.luan.console.parser.call.Call;
import xyz.luan.console.parser.callable.ActionCall;
import xyz.luan.console.parser.callable.Pattern;
import xyz.luan.console.parser.callable.Task;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Task_ESTest extends Task_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<ActionCall> linkedList0 = new LinkedList<ActionCall>();
      Task task0 = new Task((Pattern) null, linkedList0, (String) null);
      Pattern pattern0 = task0.getPattern();
      assertNull(pattern0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Pattern pattern0 = new Pattern("$VALUES", false);
      LinkedList<ActionCall> linkedList0 = new LinkedList<ActionCall>();
      Task task0 = new Task(pattern0, linkedList0, "$VALUES");
      String string0 = task0.getDescription();
      assertEquals("$VALUES", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Pattern pattern0 = new Pattern("[<3 _GG>u ");
      LinkedList<ActionCall> linkedList0 = new LinkedList<ActionCall>();
      Task task0 = new Task(pattern0, linkedList0, "");
      String string0 = task0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Pattern pattern0 = new Pattern("xyz.luan.console.parser.callable.Task");
      LinkedList<ActionCall> linkedList0 = new LinkedList<ActionCall>();
      Task task0 = new Task(pattern0, linkedList0, "xyz.luan.console.parser.callable.Task");
      linkedList0.add((ActionCall) null);
      String[] stringArray0 = new String[1];
      Aliases aliases0 = Aliases.createAliasesWithDefaults();
      // Undeclared exception!
      try { 
        task0.parse(stringArray0, aliases0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("xyz.luan.console.parser.callable.Task", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Pattern pattern0 = new Pattern("xyz.luan.console.parser.callable.Task");
      LinkedList<ActionCall> linkedList0 = new LinkedList<ActionCall>();
      Task task0 = new Task(pattern0, linkedList0, "xyz.luan.console.parser.callable.Task");
      String[] stringArray0 = new String[12];
      Aliases aliases0 = Aliases.createAliasesWithDefaults();
      Call call0 = task0.parse(stringArray0, aliases0);
      assertNull(call0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Pattern pattern0 = new Pattern("xyz.luan.console.parser.callable.Task");
      LinkedList<ActionCall> linkedList0 = new LinkedList<ActionCall>();
      Task task0 = new Task(pattern0, linkedList0, "xyz.luan.console.parser.callable.Task");
      String[] stringArray0 = new String[1];
      Aliases aliases0 = Aliases.createAliasesWithDefaults();
      Call call0 = task0.parse(stringArray0, aliases0);
      assertNotNull(call0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Pattern pattern0 = new Pattern("xyz.luan.console.parser.callable.Task", true);
      LinkedList<ActionCall> linkedList0 = new LinkedList<ActionCall>();
      Task task0 = new Task(pattern0, linkedList0, "");
      Pattern pattern1 = task0.getPattern();
      assertSame(pattern0, pattern1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Pattern pattern0 = new Pattern("5sg0@\"c_.$Y^2fA", false);
      LinkedList<ActionCall> linkedList0 = new LinkedList<ActionCall>();
      Task task0 = new Task(pattern0, linkedList0, (String) null);
      String string0 = task0.getDescription();
      assertNull(string0);
  }
}
