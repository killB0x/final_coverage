/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 06:07:20 GMT 2022
 */

package xyz.luan.console.parser.call;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import xyz.luan.console.parser.call.CallResult;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CallResult_ESTest extends CallResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CallResult[] callResultArray0 = CallResult.values();
      assertEquals(4, callResultArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CallResult callResult0 = CallResult.valueOf("QUIT");
      assertEquals(CallResult.QUIT, callResult0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CallResult callResult0 = CallResult.valueOf("INVALID_COMMAND");
      assertEquals(2, callResult0.getResponseCode());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CallResult callResult0 = CallResult.INVALID_COMMAND;
      int int0 = callResult0.getResponseCode();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CallResult callResult0 = CallResult.SUCCESS;
      int int0 = callResult0.getResponseCode();
      assertEquals(0, int0);
  }
}
