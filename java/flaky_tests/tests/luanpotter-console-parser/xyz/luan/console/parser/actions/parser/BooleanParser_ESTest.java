/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 05:53:11 GMT 2022
 */

package xyz.luan.console.parser.actions.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import xyz.luan.console.parser.actions.parser.BooleanParser;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BooleanParser_ESTest extends BooleanParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BooleanParser booleanParser0 = new BooleanParser();
      try { 
        booleanParser0.parse("?~~O+");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         //  expected a 'Boolean' but value found '?~~O+' can't be converted.
         //
         verifyException("xyz.luan.console.parser.actions.parser.BooleanParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BooleanParser booleanParser0 = new BooleanParser();
      // Undeclared exception!
      try { 
        booleanParser0.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("xyz.luan.console.parser.actions.parser.BooleanParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BooleanParser booleanParser0 = new BooleanParser();
      Boolean boolean0 = booleanParser0.parse("t");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BooleanParser booleanParser0 = new BooleanParser();
      Boolean boolean0 = booleanParser0.parse("n");
      assertFalse(boolean0);
  }
}
