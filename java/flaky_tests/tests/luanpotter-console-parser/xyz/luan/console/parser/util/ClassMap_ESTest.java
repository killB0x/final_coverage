/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 05:50:30 GMT 2022
 */

package xyz.luan.console.parser.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import xyz.luan.console.parser.util.ClassMap;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClassMap_ESTest extends ClassMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        ClassMap.getFromClassMap((Map<? extends Class<?>, Integer>) null, (Class<?>) class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("xyz.luan.console.parser.util.ClassMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<Class<Integer>, Class<Integer>> hashMap0 = new HashMap<Class<Integer>, Class<Integer>>();
      Class<Integer> class0 = Integer.class;
      hashMap0.put(class0, class0);
      Class<Integer> class1 = ClassMap.getFromClassMap((Map<? extends Class<?>, Class<Integer>>) hashMap0, (Class<?>) class0);
      assertSame(class0, class1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<Class<Integer>, Integer> hashMap0 = new HashMap<Class<Integer>, Integer>();
      Class<Integer> class0 = Integer.class;
      Integer integer0 = ClassMap.getFromClassMap((Map<? extends Class<?>, Integer>) hashMap0, (Class<?>) class0);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClassMap classMap0 = new ClassMap();
  }
}
