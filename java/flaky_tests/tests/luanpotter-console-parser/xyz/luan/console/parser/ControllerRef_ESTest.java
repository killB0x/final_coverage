/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 05:40:52 GMT 2022
 */

package xyz.luan.console.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.Map;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import xyz.luan.console.parser.Context;
import xyz.luan.console.parser.ControllerRef;
import xyz.luan.console.parser.DefaultConsole;
import xyz.luan.console.parser.call.CallResult;
import xyz.luan.console.parser.config.ConfigAliasesController;
import xyz.luan.console.parser.config.ConfigCallablesController;
import xyz.luan.console.parser.config.HelpController;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ControllerRef_ESTest extends ControllerRef_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConfigCallablesController configCallablesController0 = new ConfigCallablesController();
      ControllerRef<ConfigCallablesController> controllerRef0 = new ControllerRef<ConfigCallablesController>((String) null, configCallablesController0);
      String string0 = controllerRef0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConfigAliasesController configAliasesController0 = new ConfigAliasesController();
      ControllerRef<ConfigAliasesController> controllerRef0 = new ControllerRef<ConfigAliasesController>("", configAliasesController0);
      String string0 = controllerRef0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConfigCallablesController configCallablesController0 = new ConfigCallablesController();
      ControllerRef<ConfigCallablesController> controllerRef0 = new ControllerRef<ConfigCallablesController>("&tD2X", configCallablesController0);
      Context context0 = new Context();
      DefaultConsole defaultConsole0 = new DefaultConsole();
      configCallablesController0.setup(context0, defaultConsole0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CallResult callResult0 = controllerRef0.call("", hashMap0);
      assertEquals(1, callResult0.getResponseCode());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConfigAliasesController configAliasesController0 = new ConfigAliasesController();
      ControllerRef<ConfigAliasesController> controllerRef0 = new ControllerRef<ConfigAliasesController>("[", configAliasesController0);
      // Undeclared exception!
      try { 
        controllerRef0.forEachAction((Consumer<Method>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("xyz.luan.console.parser.ControllerRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ControllerRef<ConfigAliasesController> controllerRef0 = null;
      try {
        controllerRef0 = new ControllerRef<ConfigAliasesController>("lj>}wrx'K", (ConfigAliasesController) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("xyz.luan.console.parser.ControllerRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HelpController helpController0 = new HelpController();
      ControllerRef<HelpController> controllerRef0 = new ControllerRef<HelpController>("show", helpController0);
      // Undeclared exception!
      try { 
        controllerRef0.call("show", (Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("xyz.luan.console.parser.ControllerRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ConfigCallablesController configCallablesController0 = new ConfigCallablesController();
      ControllerRef<ConfigCallablesController> controllerRef0 = new ControllerRef<ConfigCallablesController>("&tD2X", configCallablesController0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        controllerRef0.call("", hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Exception handler threw an exception! Run for your lives!
         //
         verifyException("xyz.luan.console.parser.ControllerRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      HelpController helpController0 = new HelpController();
      ControllerRef<HelpController> controllerRef0 = new ControllerRef<HelpController>("show", helpController0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        controllerRef0.call("show", hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Exception handler threw an exception! Run for your lives!
         //
         verifyException("xyz.luan.console.parser.ControllerRef", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ConfigCallablesController configCallablesController0 = new ConfigCallablesController();
      ControllerRef<ConfigCallablesController> controllerRef0 = new ControllerRef<ConfigCallablesController>("&tD2X", configCallablesController0);
      Consumer<Method> consumer0 = (Consumer<Method>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      controllerRef0.forEachAction(consumer0);
      assertEquals("&tD2X", controllerRef0.getName());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ConfigCallablesController configCallablesController0 = new ConfigCallablesController();
      ControllerRef<ConfigCallablesController> controllerRef0 = new ControllerRef<ConfigCallablesController>("&tD2X", configCallablesController0);
      String string0 = controllerRef0.getName();
      assertEquals("&tD2X", string0);
  }
}
