/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:08:03 GMT 2022
 */

package tel.schich.automata;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import tel.schich.automata.DFA;
import tel.schich.automata.State;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class State_ESTest extends State_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      State state0 = new State();
      state0.hashCode();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      State state0 = new State();
      DFA dFA0 = DFA.EMPTY;
      State state1 = state0.transition(dFA0);
      assertEquals("\u03A9", state1.getLabel());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      State state0 = new State();
      String string0 = state0.getLabel();
      assertEquals("31", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      State state0 = new State();
      // Undeclared exception!
      try { 
        state0.transition((DFA) null, 'W');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("tel.schich.automata.State", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      State state0 = new State();
      // Undeclared exception!
      try { 
        state0.transition((DFA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("tel.schich.automata.State", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      State state0 = new State();
      DFA dFA0 = DFA.EMPTY;
      State state1 = state0.transition(dFA0, '+');
      boolean boolean0 = state1.equals(state1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      State state0 = new State();
      DFA dFA0 = DFA.EMPTY;
      State state1 = state0.transition(dFA0, '+');
      boolean boolean0 = state1.equals("State(\u03A9)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      State state0 = new State();
      String string0 = state0.toString();
      assertEquals("State(0)", string0);
  }
}
