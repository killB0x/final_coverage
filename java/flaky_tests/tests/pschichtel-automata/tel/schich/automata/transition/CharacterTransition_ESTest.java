/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:06:21 GMT 2022
 */

package tel.schich.automata.transition;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import tel.schich.automata.State;
import tel.schich.automata.transition.CharacterTransition;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterTransition_ESTest extends CharacterTransition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      State state0 = new State();
      CharacterTransition characterTransition0 = new CharacterTransition(state0, 'L', state0);
      CharacterTransition characterTransition1 = new CharacterTransition(state0, '', state0);
      boolean boolean0 = characterTransition0.equals(characterTransition1);
      assertFalse(boolean0);
      assertEquals('', characterTransition1.getWith());
      assertFalse(characterTransition1.equals((Object)characterTransition0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      State state0 = new State();
      CharacterTransition characterTransition0 = new CharacterTransition(state0, ']', state0);
      char char0 = characterTransition0.getWith();
      assertEquals(']', char0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      State state0 = new State();
      CharacterTransition characterTransition0 = new CharacterTransition(state0, '3', state0);
      char char0 = characterTransition0.getWith();
      assertEquals('3', char0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      State state0 = new State();
      CharacterTransition characterTransition0 = null;
      try {
        characterTransition0 = new CharacterTransition((State) null, 'n', state0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // origin
         //
         verifyException("tel.schich.automata.transition.Transition", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      State state0 = new State();
      CharacterTransition characterTransition0 = new CharacterTransition(state0, 'I', state0);
      char char0 = characterTransition0.getWith();
      assertEquals('I', char0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      State state0 = new State();
      CharacterTransition characterTransition0 = new CharacterTransition(state0, 'I', state0);
      CharacterTransition characterTransition1 = new CharacterTransition(state0, 'N', state0);
      boolean boolean0 = characterTransition1.equals(characterTransition0);
      assertFalse(boolean0);
      assertFalse(characterTransition0.equals((Object)characterTransition1));
      assertEquals('N', characterTransition1.getWith());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      State state0 = new State();
      State state1 = new State();
      CharacterTransition characterTransition0 = new CharacterTransition(state1, ']', state0);
      CharacterTransition characterTransition1 = characterTransition0.reverse();
      boolean boolean0 = characterTransition1.equals(characterTransition0);
      assertFalse(boolean0);
      assertEquals(']', characterTransition0.getWith());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      State state0 = new State();
      CharacterTransition characterTransition0 = new CharacterTransition(state0, 'I', state0);
      Object object0 = new Object();
      boolean boolean0 = characterTransition0.equals(object0);
      assertFalse(boolean0);
      assertEquals('I', characterTransition0.getWith());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      State state0 = new State();
      CharacterTransition characterTransition0 = new CharacterTransition(state0, 'I', state0);
      boolean boolean0 = characterTransition0.equals(characterTransition0);
      assertTrue(boolean0);
      assertEquals('I', characterTransition0.getWith());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      State state0 = new State();
      CharacterTransition characterTransition0 = new CharacterTransition(state0, 'I', state0);
      characterTransition0.hashCode();
      assertEquals('I', characterTransition0.getWith());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      State state0 = new State();
      CharacterTransition characterTransition0 = new CharacterTransition(state0, '=', state0);
      String string0 = characterTransition0.getLabel();
      assertEquals("'='", string0);
  }
}
