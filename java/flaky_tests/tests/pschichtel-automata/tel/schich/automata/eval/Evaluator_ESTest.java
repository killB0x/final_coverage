/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:01:46 GMT 2022
 */

package tel.schich.automata.eval;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import tel.schich.automata.FiniteAutomaton;
import tel.schich.automata.eval.Evaluator;
import tel.schich.automata.transition.CharacterTransition;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Evaluator_ESTest extends Evaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FiniteAutomaton<CharacterTransition>[] finiteAutomatonArray0 = (FiniteAutomaton<CharacterTransition>[]) Array.newInstance(FiniteAutomaton.class, 1);
      // Undeclared exception!
      try { 
        Evaluator.eval(finiteAutomatonArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("tel.schich.automata.eval.Evaluator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FiniteAutomaton<CharacterTransition>[] finiteAutomatonArray0 = (FiniteAutomaton<CharacterTransition>[]) Array.newInstance(FiniteAutomaton.class, 0);
      // Undeclared exception!
      try { 
        Evaluator.eval(finiteAutomatonArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No automaton given!
         //
         verifyException("tel.schich.automata.eval.Evaluator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FiniteAutomaton<CharacterTransition>[] finiteAutomatonArray0 = (FiniteAutomaton<CharacterTransition>[]) Array.newInstance(FiniteAutomaton.class, 2);
      // Undeclared exception!
      try { 
        Evaluator.eval(finiteAutomatonArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("tel.schich.automata.eval.Evaluator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Evaluator evaluator0 = new Evaluator();
  }
}
