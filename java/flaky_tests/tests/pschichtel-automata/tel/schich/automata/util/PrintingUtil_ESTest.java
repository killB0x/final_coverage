/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 18:04:24 GMT 2022
 */

package tel.schich.automata.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import tel.schich.automata.FiniteAutomaton;
import tel.schich.automata.NFA;
import tel.schich.automata.transition.SpontaneousTransition;
import tel.schich.automata.util.PrintingUtil;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PrintingUtil_ESTest extends PrintingUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FiniteAutomaton<SpontaneousTransition> finiteAutomaton0 = (FiniteAutomaton<SpontaneousTransition>) mock(FiniteAutomaton.class, new ViolatedAssumptionAnswer());
      doReturn((Set) null).when(finiteAutomaton0).getAcceptingStates();
      doReturn((Set) null).when(finiteAutomaton0).getStates();
      // Undeclared exception!
      try { 
        PrintingUtil.automatonToDot("*", finiteAutomaton0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("tel.schich.automata.util.PrintingUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NFA nFA0 = NFA.EPSILON;
      String string0 = PrintingUtil.automatonToDot(" --", nFA0);
      //  // Unstable assertion: assertEquals("digraph {\n\trankdir=LR;\n\tlabel=\" --\";\n\tinit [style=invis, width=0.1, height=0.1, margin=0.1];\n\n\t\"0\" [shape=circle];\n\t\"1\" [shape=doublecircle];\n\n\tinit->\"0\";\n\t\"0\"->\"1\" [label=\"\u03B5\"];\n}\n", string0);
  }
}
