/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:45:30 GMT 2022
 */

package net.tuis.ubench.scale;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.DoubleUnaryOperator;
import java.util.function.Function;
import net.tuis.ubench.scale.MathModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MathModel_ESTest extends MathModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MathModel mathModel0 = new MathModel("net.tuis.ubench.scale.MathModel", "net.tuis.ubench.scale.MathModel", (Function<double[], DoubleUnaryOperator>) null, (double[]) null);
      String string0 = mathModel0.toString();
      assertEquals("net.tuis.ubench.scale.MathModel", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      MathModel mathModel0 = new MathModel((String) null, "", (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      String string0 = mathModel0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MathModel mathModel0 = new MathModel((String) null, (String) null, (Function<double[], DoubleUnaryOperator>) null, (double[]) null);
      String string0 = mathModel0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      MathModel mathModel0 = new MathModel("", "", (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      String string0 = mathModel0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      MathModel mathModel0 = new MathModel("", "s^k", (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      mathModel0.getInitialValues();
      assertEquals("", mathModel0.getName());
      assertEquals("s^k", mathModel0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      MathModel mathModel0 = new MathModel("", "s^k", (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      String string0 = mathModel0.getFormat();
      assertEquals("s^k", string0);
      assertEquals("", mathModel0.getName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MathModel mathModel0 = new MathModel("", "", (Function<double[], DoubleUnaryOperator>) null, (double[]) null);
      String string0 = mathModel0.getFormat();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MathModel mathModel0 = new MathModel("", "", (Function<double[], DoubleUnaryOperator>) null, (double[]) null);
      // Undeclared exception!
      try { 
        mathModel0.getInitialValues();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.tuis.ubench.scale.MathModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      MathModel mathModel0 = new MathModel((String) null, (String) null, (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      String string0 = mathModel0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      MathModel mathModel0 = new MathModel((String) null, (String) null, (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      String string0 = mathModel0.getFormat();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MathModel mathModel0 = new MathModel("C`8", "C`8", (Function<double[], DoubleUnaryOperator>) null, (double[]) null);
      String string0 = mathModel0.getName();
      assertEquals("C`8", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MathModel mathModel0 = new MathModel("(,lPV+IA:krU~N)", "(,lPV+IA:krU~N)", (Function<double[], DoubleUnaryOperator>) null, (double[]) null);
      // Undeclared exception!
      try { 
        mathModel0.createFunction((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.tuis.ubench.scale.MathModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      MathModel mathModel0 = new MathModel("", "T)*'b0/>s]`(Z:l,A", (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      mathModel0.getInitialValues();
      assertEquals("T)*'b0/>s]`(Z:l,A", mathModel0.toString());
      assertEquals("", mathModel0.getName());
  }
}
