/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 08:40:41 GMT 2022
 */

package net.tuis.ubench.scale;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.FormatFlagsConversionMismatchException;
import java.util.IllegalFormatConversionException;
import java.util.IllegalFormatFlagsException;
import java.util.MissingFormatArgumentException;
import java.util.MissingFormatWidthException;
import java.util.UnknownFormatConversionException;
import java.util.function.DoubleUnaryOperator;
import java.util.function.Function;
import net.tuis.ubench.scale.MathEquation;
import net.tuis.ubench.scale.MathModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MathEquation_ESTest extends MathEquation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[13];
      doubleArray0[0] = 0.001;
      MathModel mathModel0 = new MathModel("", "{name: \"%s\", valid: %s, format: \"%s\", description: \"%s\", parameters: %s, rsquare: %f}", (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      MathEquation mathEquation0 = new MathEquation(mathModel0, doubleUnaryOperator0, doubleArray0, "", 2453.2800869443);
      String string0 = mathEquation0.toJSONString();
      assertEquals("{name: \"\", valid: true, format: \"\", description: \"\", parameters: [0.001000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000], rsquare: 2453.280087}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MathModel mathModel0 = new MathModel("1;x-", "1;x-", (Function<double[], DoubleUnaryOperator>) null, (double[]) null);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      MathEquation mathEquation0 = new MathEquation(mathModel0, doubleUnaryOperator0, (double[]) null, "}TwW0 %XQ DLb$", 0.0);
      double double0 = mathEquation0.getRSquared();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, (DoubleUnaryOperator) null, doubleArray0, "-aJlm", 389.51248606976);
      double double0 = mathEquation0.getRSquared();
      assertEquals(389.51248606976, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, (DoubleUnaryOperator) null, doubleArray0, "", (-3785.094));
      mathEquation0.getParameters();
      assertEquals((-3785.094), mathEquation0.getRSquared(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[0];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "", 1664.390971063222);
      mathEquation0.getParameters();
      assertEquals(1664.390971063222, mathEquation0.getRSquared(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[3];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "", 2054.074434331);
      mathEquation0.getModel();
      assertEquals(2054.074434331, mathEquation0.getRSquared(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[2];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, (String) null, (-2936.54029));
      mathEquation0.getFormat();
      assertEquals((-2936.54029), mathEquation0.getRSquared(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[2];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "", 0.0);
      mathEquation0.getFormat();
      assertEquals(0.0, mathEquation0.getRSquared(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[0];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "", 1664.390971063222);
      mathEquation0.getEquation();
      assertEquals(1664.390971063222, mathEquation0.getRSquared(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, (DoubleUnaryOperator) null, doubleArray0, "h`_#~0s2BA", 1.0);
      mathEquation0.getDescription();
      assertEquals(1.0, mathEquation0.getRSquared(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[0];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "", 1664.390971063222);
      mathEquation0.getDescription();
      assertEquals(1664.390971063222, mathEquation0.getRSquared(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[53];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "uV,x{nFV/k'^%@@", 0.0);
      // Undeclared exception!
      try { 
        mathEquation0.toString();
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '@'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      MathModel mathModel0 = new MathModel("9Yx%Zsh \"rBlShcRZ#", "c 5%-ts79DnZX9r", (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      MathEquation mathEquation0 = new MathEquation(mathModel0, doubleUnaryOperator0, doubleArray0, "c 5%-ts79DnZX9r", 1030.077624361556);
      // Undeclared exception!
      try { 
        mathEquation0.toString();
        fail("Expecting exception: MissingFormatWidthException");
      
      } catch(MissingFormatWidthException e) {
         //
         // %-ts
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[0];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "{name: \"%s\", valid: %s, format: \"%s\", description: \"%s\"q parameers: %s,rsquare: %f}", 1361.45);
      // Undeclared exception!
      try { 
        mathEquation0.toString();
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%s'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[4];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "86`.)% %(8N", (-1.0));
      // Undeclared exception!
      try { 
        mathEquation0.toString();
        fail("Expecting exception: IllegalFormatFlagsException");
      
      } catch(IllegalFormatFlagsException e) {
         //
         // Flags = ' '
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[12];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "\"Y%TmEcEj~Yx<\"5", (-1021.32720089998));
      // Undeclared exception!
      try { 
        mathEquation0.toString();
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // m != java.lang.Double
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[8];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "w[I7%+C\"Ldmz~U(qlLF", 2099.5571288335);
      // Undeclared exception!
      try { 
        mathEquation0.toString();
        fail("Expecting exception: FormatFlagsConversionMismatchException");
      
      } catch(FormatFlagsConversionMismatchException e) {
         //
         // Conversion = c, Flags = +
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[1];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, (String) null, (-779.98723519));
      // Undeclared exception!
      try { 
        mathEquation0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[53];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "uV,x{nFV/k'^%@@", 0.0);
      // Undeclared exception!
      try { 
        mathEquation0.toJSONString();
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '@'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      MathModel mathModel0 = new MathModel("net.tuis.ubench.scale.MathEquation", "9Yx%Zsh \"rBlShcRZ#", (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      MathEquation mathEquation0 = new MathEquation(mathModel0, doubleUnaryOperator0, doubleArray0, "c 5%-ts79DnZX9r", (-1735.85063));
      // Undeclared exception!
      try { 
        mathEquation0.toJSONString();
        fail("Expecting exception: MissingFormatWidthException");
      
      } catch(MissingFormatWidthException e) {
         //
         // %-ts
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      MathModel mathModel0 = new MathModel("N+c%<9f:OX9", "N+c%<9f:OX9", (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      MathEquation mathEquation0 = new MathEquation(mathModel0, doubleUnaryOperator0, doubleArray0, "N+c%<9f:OX9", 446.7257580999229);
      // Undeclared exception!
      try { 
        mathEquation0.toJSONString();
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%<9f'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[4];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "86`.)% %(8N", (-1.0));
      // Undeclared exception!
      try { 
        mathEquation0.toJSONString();
        fail("Expecting exception: IllegalFormatFlagsException");
      
      } catch(IllegalFormatFlagsException e) {
         //
         // Flags = ' '
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[12];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "\"Y%TmEcEj~Yx<\"5", (-1021.32720089998));
      // Undeclared exception!
      try { 
        mathEquation0.toJSONString();
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // m != java.lang.Double
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[2];
      MathModel mathModel0 = new MathModel("\"B^_|U8%D'hp&6;54M1", "Hx7h{z53v^-[ s", (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      MathEquation mathEquation0 = new MathEquation(mathModel0, doubleUnaryOperator0, doubleArray0, "%+SF20fT\"I'yS R", 2298.50437);
      // Undeclared exception!
      try { 
        mathEquation0.toJSONString();
        fail("Expecting exception: FormatFlagsConversionMismatchException");
      
      } catch(FormatFlagsConversionMismatchException e) {
         //
         // Conversion = s, Flags = +
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[10];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "tTB", 0.0);
      // Undeclared exception!
      try { 
        mathEquation0.toJSONString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.tuis.ubench.scale.MathEquation", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[0];
      MathModel mathModel0 = new MathModel("{ GZKi?N,$Vyd(5O:>", "{ GZKi?N,$Vyd(5O:>", (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      MathEquation mathEquation0 = new MathEquation(mathModel0, doubleUnaryOperator0, doubleArray0, "{ GZKi?N,$Vyd(5O:>", 222.532353397715);
      // Undeclared exception!
      try { 
        mathEquation0.toJSONString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.tuis.ubench.scale.MathEquation", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, (double[]) null, "wC_1", 1.0);
      // Undeclared exception!
      try { 
        mathEquation0.isValid();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.tuis.ubench.scale.MathEquation", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[0];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "", 111.111532755);
      // Undeclared exception!
      try { 
        mathEquation0.isValid();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("net.tuis.ubench.scale.MathEquation", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[53];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "uV,x{nFV/k'^%@@", 0.0);
      // Undeclared exception!
      try { 
        mathEquation0.getDescription();
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '@'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      MathModel mathModel0 = new MathModel("0`YWxL:'(IpS=~_v", "0`YWxL:'(IpS=~_v", (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      MathEquation mathEquation0 = new MathEquation(mathModel0, doubleUnaryOperator0, doubleArray0, "c 5%-ts79DnZX9r", (-1735.85063));
      // Undeclared exception!
      try { 
        mathEquation0.getDescription();
        fail("Expecting exception: MissingFormatWidthException");
      
      } catch(MissingFormatWidthException e) {
         //
         // %-ts
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      MathModel mathModel0 = new MathModel("N+c%<9f:OX9", "N+c%<9f:OX9", (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      MathEquation mathEquation0 = new MathEquation(mathModel0, doubleUnaryOperator0, doubleArray0, "N+c%<9f:OX9", 446.7257580999229);
      // Undeclared exception!
      try { 
        mathEquation0.getDescription();
        fail("Expecting exception: MissingFormatArgumentException");
      
      } catch(MissingFormatArgumentException e) {
         //
         // Format specifier '%<9f'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[8];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "w[I7%+C\"Ldmz~U(qlLF", 2099.5571288335);
      // Undeclared exception!
      try { 
        mathEquation0.getDescription();
        fail("Expecting exception: FormatFlagsConversionMismatchException");
      
      } catch(FormatFlagsConversionMismatchException e) {
         //
         // Conversion = c, Flags = +
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, (double[]) null, "NzBf:r", 0.0);
      // Undeclared exception!
      try { 
        mathEquation0.getDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.tuis.ubench.scale.MathEquation", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[1];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "tTB", 0.0);
      boolean boolean0 = mathEquation0.isValid();
      assertFalse(boolean0);
      assertEquals(0.0, mathEquation0.getRSquared(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = Double.NEGATIVE_INFINITY;
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "7c8$-MG_aGIqTC1/", Double.NEGATIVE_INFINITY);
      boolean boolean0 = mathEquation0.isValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 389.51248606976;
      MathEquation mathEquation0 = new MathEquation((MathModel) null, (DoubleUnaryOperator) null, doubleArray0, "", (-3785.094));
      boolean boolean0 = mathEquation0.isValid();
      assertEquals((-3785.094), mathEquation0.getRSquared(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[4];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "Lk=>!b%c", 3346.9894064117);
      // Undeclared exception!
      try { 
        mathEquation0.getDescription();
        fail("Expecting exception: IllegalFormatConversionException");
      
      } catch(IllegalFormatConversionException e) {
         //
         // c != java.lang.Double
         //
         verifyException("java.util.Formatter$FormatSpecifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = Double.NEGATIVE_INFINITY;
      MathModel mathModel0 = new MathModel("NPzx9f:OA9", "", (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      MathEquation mathEquation0 = new MathEquation(mathModel0, doubleUnaryOperator0, doubleArray0, "N)HJ.>9R", Double.NEGATIVE_INFINITY);
      String string0 = mathEquation0.toJSONString();
      assertEquals("{name: \"NPzx9f:OA9\", valid: false, format: \"N)HJ.>9R\", description: \"N)HJ.>9R\", parameters: [-Infinity, 0.000000], rsquare: -Infinity}", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[2];
      MathModel mathModel0 = new MathModel("NPzx9f:OA9", "", (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      MathEquation mathEquation0 = new MathEquation(mathModel0, doubleUnaryOperator0, doubleArray0, "N)HJ.>9R", Double.NEGATIVE_INFINITY);
      String string0 = mathEquation0.toString();
      assertEquals("N)HJ.>9R with precision -Infinity", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, (DoubleUnaryOperator) null, doubleArray0, "", (-3785.094));
      double double0 = mathEquation0.getRSquared();
      assertEquals((-3785.094), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      MathModel mathModel0 = new MathModel("FOiAzYLTjz~RK@", (String) null, (Function<double[], DoubleUnaryOperator>) null, doubleArray0);
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      MathEquation mathEquation0 = new MathEquation(mathModel0, doubleUnaryOperator0, doubleArray0, "A-kj8D7", 470.37178109314675);
      mathEquation0.getModel();
      assertEquals(470.37178109314675, mathEquation0.getRSquared(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, (double[]) null, (String) null, 4769.12013);
      // Undeclared exception!
      try { 
        mathEquation0.getParameters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.tuis.ubench.scale.MathEquation", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DoubleUnaryOperator doubleUnaryOperator0 = DoubleUnaryOperator.identity();
      double[] doubleArray0 = new double[31];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, doubleUnaryOperator0, doubleArray0, "S{A6A1V_xL9-h.why", 0.0);
      mathEquation0.getFormat();
      assertEquals(0.0, mathEquation0.getRSquared(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      MathEquation mathEquation0 = new MathEquation((MathModel) null, (DoubleUnaryOperator) null, doubleArray0, "", (-3785.094));
      mathEquation0.getEquation();
      assertEquals((-3785.094), mathEquation0.getRSquared(), 0.01);
  }
}
