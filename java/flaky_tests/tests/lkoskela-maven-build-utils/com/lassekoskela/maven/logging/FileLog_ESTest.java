/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 18:11:30 GMT 2022
 */

package com.lassekoskela.maven.logging;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lassekoskela.maven.logging.FileLog;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileLog_ESTest extends FileLog_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockFile mockFile0 = new MockFile("(^E`-MBr6B2X3EwG5,U");
      FileLog fileLog0 = new FileLog(mockFile0);
      String string0 = fileLog0.destination();
      assertEquals("(^E`-MBr6B2X3EwG5,U", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      File file0 = MockFile.createTempFile("!#oCT@d]_36Fi{", "!#oCT@d]_36Fi{");
      file0.setReadOnly();
      FileLog fileLog0 = new FileLog(file0);
      // Undeclared exception!
      try { 
        fileLog0.info("!#oCT@d]_36Fi{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.FileNotFoundException
         //
         verifyException("com.lassekoskela.maven.logging.FileLog", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("!#oRC@d]_Fi{", "!#oRC@d]_Fi{");
      FileLog fileLog0 = new FileLog(mockFile0);
      fileLog0.info("!#oRC@d]_Fi{");
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "");
      FileLog fileLog0 = new FileLog(mockFile0);
      // Undeclared exception!
      try { 
        fileLog0.info("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lassekoskela.maven.logging.FileLog", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "");
      FileLog fileLog0 = new FileLog(mockFile0);
      String string0 = fileLog0.destination();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileLog fileLog0 = new FileLog((File) null);
      // Undeclared exception!
      try { 
        fileLog0.destination();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lassekoskela.maven.logging.FileLog", e);
      }
  }
}
