/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 18:10:21 GMT 2022
 */

package com.lassekoskela.maven.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lassekoskela.maven.bean.Project;
import com.lassekoskela.maven.bean.Timeline;
import java.util.ArrayDeque;
import java.util.Comparator;
import java.util.TreeSet;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Timeline_ESTest extends Timeline_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Timeline timeline0 = new Timeline((Iterable<Project>) null);
      Timeline timeline1 = new Timeline((Iterable<Project>) null);
      // Undeclared exception!
      try { 
        timeline1.equals(timeline0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.lassekoskela.maven.bean.Timeline", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      TreeSet<Project> treeSet0 = new TreeSet<Project>(comparator0);
      Timeline timeline0 = new Timeline(treeSet0);
      Iterable<Project> iterable0 = timeline0.getProjects();
      assertNotNull(iterable0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Vector<Project> vector0 = new Vector<Project>();
      Timeline timeline0 = new Timeline(vector0);
      boolean boolean0 = timeline0.equals(vector0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Timeline timeline0 = new Timeline((Iterable<Project>) null);
      Iterable<Project> iterable0 = timeline0.getProjects();
      assertNull(iterable0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArrayDeque<Project> arrayDeque0 = new ArrayDeque<Project>();
      Timeline timeline0 = new Timeline(arrayDeque0);
      // Undeclared exception!
      try { 
        timeline0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.lassekoskela.maven.bean.Timeline", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Timeline timeline0 = new Timeline((Iterable<Project>) null);
      // Undeclared exception!
      try { 
        timeline0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Objects
         //
         verifyException("com.lassekoskela.maven.bean.Timeline", e);
      }
  }
}
