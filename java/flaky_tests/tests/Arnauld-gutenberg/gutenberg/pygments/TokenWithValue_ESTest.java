/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 19:11:42 GMT 2022
 */

package gutenberg.pygments;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import gutenberg.pygments.Token;
import gutenberg.pygments.TokenWithValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokenWithValue_ESTest extends TokenWithValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TokenWithValue tokenWithValue0 = new TokenWithValue((Token) null, "QSps=");
      // Undeclared exception!
      try { 
        tokenWithValue0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("gutenberg.pygments.TokenWithValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TokenWithValue tokenWithValue0 = new TokenWithValue((Token) null, (String) null);
      TokenWithValue tokenWithValue1 = new TokenWithValue((Token) null, (String) null);
      // Undeclared exception!
      try { 
        tokenWithValue0.equals(tokenWithValue1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Token token0 = Token.StringInterpol;
      TokenWithValue tokenWithValue0 = new TokenWithValue(token0, "");
      TokenWithValue tokenWithValue1 = new TokenWithValue(token0, "");
      tokenWithValue0.equals(tokenWithValue1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Token token0 = Token.NameVariable;
      TokenWithValue tokenWithValue0 = new TokenWithValue(token0, "gutenberg.pygments.TokenWithValue");
      TokenWithValue tokenWithValue1 = new TokenWithValue((Token) null, "gutenberg.pygments.TokenWithValue");
      tokenWithValue0.equals(tokenWithValue1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Token token0 = Token.StringHeredoc;
      TokenWithValue tokenWithValue0 = new TokenWithValue(token0, "gutenberg.pygments.TokenWithValue");
      tokenWithValue0.equals("gutenberg.pygments.TokenWithValue");
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TokenWithValue tokenWithValue0 = new TokenWithValue((Token) null, "GenericPrompt");
      boolean boolean0 = tokenWithValue0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TokenWithValue tokenWithValue0 = new TokenWithValue((Token) null, "Ssz");
      boolean boolean0 = tokenWithValue0.equals(tokenWithValue0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Token token0 = Token.NameTag;
      TokenWithValue tokenWithValue0 = new TokenWithValue(token0, "7fl^Kf'!R]");
      tokenWithValue0.hashCode();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Token token0 = Token.Token;
      TokenWithValue tokenWithValue0 = new TokenWithValue(token0, "");
      tokenWithValue0.toString();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Token token0 = Token.StringSymbol;
      TokenWithValue tokenWithValue0 = new TokenWithValue(token0, "[l msk@&r,");
      TokenWithValue tokenWithValue1 = new TokenWithValue(token0, "");
      tokenWithValue0.equals(tokenWithValue1);
  }
}
