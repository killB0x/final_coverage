/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 19:18:03 GMT 2022
 */

package gutenberg.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import gutenberg.util.Align;
import gutenberg.util.AlignParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AlignParser_ESTest extends AlignParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AlignParser alignParser0 = new AlignParser();
      // Undeclared exception!
      try { 
        alignParser0.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("gutenberg.util.AlignParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AlignParser alignParser0 = new AlignParser();
      try { 
        alignParser0.parse("8K-A");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown alignment mode '8K-A'
         //
         verifyException("gutenberg.util.AlignParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AlignParser alignParser0 = new AlignParser();
      Align align0 = alignParser0.parse("center");
      assertEquals(Align.Center, align0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AlignParser alignParser0 = new AlignParser();
      Align align0 = alignParser0.parse("right");
      assertEquals(Align.Right, align0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AlignParser alignParser0 = new AlignParser();
      Align align0 = alignParser0.parse("left");
      assertEquals(Align.Left, align0);
  }
}
