/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 19:15:38 GMT 2022
 */

package gutenberg.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import gutenberg.util.RGB;
import gutenberg.util.RGBParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RGBParser_ESTest extends RGBParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RGBParser rGBParser0 = new RGBParser();
      RGB rGB0 = rGBParser0.parse("#060000");
      assertEquals((-16384000), rGB0.rgba());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RGBParser rGBParser0 = new RGBParser();
      RGB rGB0 = rGBParser0.parse("dark-gray");
      assertEquals((-12566464), rGB0.rgba());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RGBParser rGBParser0 = new RGBParser();
      // Undeclared exception!
      try { 
        rGBParser0.parse((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("gutenberg.util.RGBParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RGBParser rGBParser0 = new RGBParser();
      try { 
        rGBParser0.parse("}");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Neither match format /#hhhhhh/ nor predefined colors [magenta, pink, green, black, yellow, cyan, dark-red, dark-gray, red, orange, light-gray, gray, blue]... got: '}'
         //
         verifyException("gutenberg.util.RGBParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RGBParser rGBParser0 = new RGBParser();
      RGB rGB0 = rGBParser0.parse("black");
      assertEquals(0, rGB0.r());
  }
}
