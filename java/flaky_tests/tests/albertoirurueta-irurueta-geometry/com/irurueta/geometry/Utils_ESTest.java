/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 07:05:05 GMT 2022
 */

package com.irurueta.geometry;

import org.junit.Test;
import static org.junit.Assert.*;
import com.irurueta.geometry.Utils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Utils_ESTest extends Utils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = Utils.normalizeAngleDegrees(5220.0);
      assertEquals(180.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = Utils.normalizeAngleDegrees(401.3487142946789);
      assertEquals(41.34871429467893, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = Utils.normalizeAngleDegrees((-180.0));
      assertEquals(180.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = Utils.normalizeAngleRadians(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = Utils.normalizeAngleDegrees(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = Utils.convertToRadians(180.0);
      assertEquals(3.141592653589793, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = Utils.convertToRadians((-2292.216889389));
      assertEquals((-40.00673188966072), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = Utils.convertToDegrees(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = Utils.convertToDegrees(4308.4943631);
      assertEquals(246858.54306153563, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = Utils.normalizeAngleRadians(574.4365113202457);
      assertEquals(2.666648366903381, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = Utils.normalizeAngleRadians((-3504.81775834418));
      assertEquals(1.1996430620288265, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = Utils.normalizeAngleRadians((-57.29577951308232));
      assertEquals((-0.7471117484660468), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = Utils.normalizeAngleDegrees((-57.29577951308232));
      assertEquals((-57.29577951308232), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = Utils.convertToRadians(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = Utils.normalizeAngleRadians(180.0);
      assertEquals((-2.212373908208008), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = Utils.convertToDegrees((-1992.83092786595));
      assertEquals((-114180.80144985874), double0, 0.01);
  }
}
