/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 07:17:52 GMT 2022
 */

package com.irurueta.geometry;

import org.junit.Test;
import static org.junit.Assert.*;
import com.irurueta.geometry.ConicNotAvailableException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConicNotAvailableException_ESTest extends ConicNotAvailableException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConicNotAvailableException conicNotAvailableException0 = new ConicNotAvailableException();
      ConicNotAvailableException conicNotAvailableException1 = new ConicNotAvailableException(conicNotAvailableException0);
      assertFalse(conicNotAvailableException1.equals((Object)conicNotAvailableException0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConicNotAvailableException conicNotAvailableException0 = new ConicNotAvailableException("com.irurueta.geometry.ConicNotAvailableException");
      MockThrowable mockThrowable0 = new MockThrowable(conicNotAvailableException0);
      ConicNotAvailableException conicNotAvailableException1 = new ConicNotAvailableException((String) null, mockThrowable0);
      assertFalse(conicNotAvailableException1.equals((Object)conicNotAvailableException0));
  }
}
