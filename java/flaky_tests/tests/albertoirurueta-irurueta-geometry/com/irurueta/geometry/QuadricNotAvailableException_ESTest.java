/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 07:10:38 GMT 2022
 */

package com.irurueta.geometry;

import org.junit.Test;
import static org.junit.Assert.*;
import com.irurueta.geometry.QuadricNotAvailableException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuadricNotAvailableException_ESTest extends QuadricNotAvailableException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QuadricNotAvailableException quadricNotAvailableException0 = new QuadricNotAvailableException();
      QuadricNotAvailableException quadricNotAvailableException1 = new QuadricNotAvailableException("CH*PmHLdf+|", quadricNotAvailableException0);
      assertFalse(quadricNotAvailableException1.equals((Object)quadricNotAvailableException0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QuadricNotAvailableException quadricNotAvailableException0 = new QuadricNotAvailableException("");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      QuadricNotAvailableException quadricNotAvailableException0 = new QuadricNotAvailableException(mockThrowable0);
  }
}
