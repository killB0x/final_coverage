/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 06:52:57 GMT 2022
 */

package com.irurueta.geometry;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.irurueta.geometry.CoordinatesType;
import com.irurueta.geometry.HomogeneousPoint3D;
import com.irurueta.geometry.InhomogeneousPoint3D;
import com.irurueta.geometry.Point3D;
import java.util.Collection;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InhomogeneousPoint3D_ESTest extends InhomogeneousPoint3D_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D((-1.0), (-1.0), (-1.0));
      double[] doubleArray0 = inhomogeneousPoint3D0.asArray();
      assertArrayEquals(new double[] {(-1.0), (-1.0), (-1.0)}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D(1363.693884238752, 1363.693884238752, 1363.693884238752);
      double[] doubleArray0 = new double[8];
      // Undeclared exception!
      try { 
        inhomogeneousPoint3D0.asArray(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomogeneousPoint3D homogeneousPoint3D0 = new HomogeneousPoint3D(1847.1171263482, 3.0, 3.0, 4533.172881764);
      InhomogeneousPoint3D inhomogeneousPoint3D0 = homogeneousPoint3D0.toInhomogeneous();
      boolean boolean0 = inhomogeneousPoint3D0.equals((Point3D) homogeneousPoint3D0, 0.0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D(1255.492634659748, 1255.492634659748, 1255.492634659748);
      inhomogeneousPoint3D0.hashCode();
      assertEquals(1255.492634659748, inhomogeneousPoint3D0.getInhomX(), 0.01);
      assertEquals(1255.492634659748, inhomogeneousPoint3D0.getInhomZ(), 0.01);
      assertEquals(1255.492634659748, inhomogeneousPoint3D0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Point3D point3D0 = Point3D.create();
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D(point3D0);
      inhomogeneousPoint3D0.setInhomX(314.98310431317);
      inhomogeneousPoint3D0.hashCode();
      assertEquals(314.98310431317, inhomogeneousPoint3D0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      InhomogeneousPoint3D inhomogeneousPoint3D0 = null;
      try {
        inhomogeneousPoint3D0 = new InhomogeneousPoint3D(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D(0.0, 0.0, 0.0);
      inhomogeneousPoint3D0.setHomogeneousCoordinates(1528.345819, (-3832.602727587964), (-2020.56), 4);
      inhomogeneousPoint3D0.toHomogeneous();
      assertEquals((-505.14), inhomogeneousPoint3D0.getHomZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomogeneousPoint3D homogeneousPoint3D0 = new HomogeneousPoint3D(1847.1171263482, 3.0, 3.0, 4533.172881764);
      InhomogeneousPoint3D inhomogeneousPoint3D0 = homogeneousPoint3D0.toInhomogeneous();
      HomogeneousPoint3D homogeneousPoint3D1 = inhomogeneousPoint3D0.toHomogeneous();
      assertTrue(homogeneousPoint3D1.equals((Object)homogeneousPoint3D0));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D((-1.0), 830.48527597086, 830.48527597086);
      HomogeneousPoint3D homogeneousPoint3D0 = inhomogeneousPoint3D0.toHomogeneous();
      assertEquals((-1.0), homogeneousPoint3D0.getInhomX(), 0.01);
      assertEquals(830.48527597086, homogeneousPoint3D0.getHomY(), 0.01);
      assertEquals(830.48527597086, homogeneousPoint3D0.getHomZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      double double0 = inhomogeneousPoint3D0.getZ();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D(1.0, (-762.0), 1.0E-10);
      double double0 = inhomogeneousPoint3D0.getZ();
      assertEquals(1.0E-10, double0, 0.01);
      assertEquals(1.0, inhomogeneousPoint3D0.getX(), 0.01);
      assertEquals((-762.0), inhomogeneousPoint3D0.getHomY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D((-1437.913656), (-1437.913656), (-1437.913656));
      double double0 = inhomogeneousPoint3D0.getZ();
      assertEquals((-1437.913656), inhomogeneousPoint3D0.getHomX(), 0.01);
      assertEquals((-1437.913656), double0, 0.01);
      assertEquals((-1437.913656), inhomogeneousPoint3D0.getHomY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      double double0 = inhomogeneousPoint3D0.getY();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      inhomogeneousPoint3D0.setInhomogeneousCoordinates(4, 2433.5599691979046, 1.0E-10);
      double double0 = inhomogeneousPoint3D0.getY();
      assertEquals(4.0, inhomogeneousPoint3D0.getHomX(), 0.01);
      assertEquals(2433.5599691979046, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D((-1.0), (-1.0), (-1.0));
      double double0 = inhomogeneousPoint3D0.getY();
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-1.0), inhomogeneousPoint3D0.getX(), 0.01);
      assertEquals((-1.0), inhomogeneousPoint3D0.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      double double0 = inhomogeneousPoint3D0.getX();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Point3D point3D0 = Point3D.create();
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D(point3D0);
      inhomogeneousPoint3D0.setInhomX(314.98310431317);
      double double0 = inhomogeneousPoint3D0.getX();
      assertEquals(314.98310431317, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D((-1400.7), (-96.066215372), 3954.57300282657);
      double double0 = inhomogeneousPoint3D0.getX();
      assertEquals(3954.57300282657, inhomogeneousPoint3D0.getInhomZ(), 0.01);
      assertEquals((-1400.7), double0, 0.01);
      assertEquals((-96.066215372), inhomogeneousPoint3D0.getHomY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      inhomogeneousPoint3D0.getType();
      assertEquals(0.0, inhomogeneousPoint3D0.getHomZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      double double0 = inhomogeneousPoint3D0.getInhomZ();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomogeneousPoint3D homogeneousPoint3D0 = new HomogeneousPoint3D(0.0, 0.0, 1.0, 1.0);
      InhomogeneousPoint3D inhomogeneousPoint3D0 = homogeneousPoint3D0.toInhomogeneous();
      double double0 = inhomogeneousPoint3D0.getInhomZ();
      assertEquals(0.0, inhomogeneousPoint3D0.getY(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getInhomX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D((-1714.5398183195655), (-1714.5398183195655), (-1714.5398183195655));
      double double0 = inhomogeneousPoint3D0.getInhomZ();
      assertEquals((-1714.5398183195655), double0, 0.01);
      assertEquals((-1714.5398183195655), inhomogeneousPoint3D0.getHomY(), 0.01);
      assertEquals((-1714.5398183195655), inhomogeneousPoint3D0.getHomX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      double double0 = inhomogeneousPoint3D0.getInhomY();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D(1255.492634659748, 1255.492634659748, 1255.492634659748);
      double double0 = inhomogeneousPoint3D0.getInhomY();
      assertEquals(1255.492634659748, double0, 0.01);
      assertEquals(1255.492634659748, inhomogeneousPoint3D0.getInhomX(), 0.01);
      assertEquals(1255.492634659748, inhomogeneousPoint3D0.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D((-1.0), (-1.0), (-1.0));
      double double0 = inhomogeneousPoint3D0.getInhomY();
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-1.0), inhomogeneousPoint3D0.getHomX(), 0.01);
      assertEquals((-1.0), inhomogeneousPoint3D0.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      double double0 = inhomogeneousPoint3D0.getInhomX();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D(doubleArray0);
      inhomogeneousPoint3D0.setInhomX(84.87);
      double double0 = inhomogeneousPoint3D0.getInhomX();
      assertEquals(84.87, inhomogeneousPoint3D0.getX(), 0.01);
      assertEquals(84.87, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D((-1.0), 830.48527597086, 830.48527597086);
      double double0 = inhomogeneousPoint3D0.getInhomX();
      assertEquals((-1.0), double0, 0.01);
      assertEquals(830.48527597086, inhomogeneousPoint3D0.getHomY(), 0.01);
      assertEquals(830.48527597086, inhomogeneousPoint3D0.getInhomZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D((-1066.7245), 0.0, 0.0);
      double double0 = inhomogeneousPoint3D0.getHomZ();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getHomY(), 0.01);
      assertEquals((-1066.7245), inhomogeneousPoint3D0.getHomX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomogeneousPoint3D homogeneousPoint3D0 = new HomogeneousPoint3D(0.0, 0.0, 1.0, 1.0);
      InhomogeneousPoint3D inhomogeneousPoint3D0 = homogeneousPoint3D0.toInhomogeneous();
      double double0 = inhomogeneousPoint3D0.getHomZ();
      assertEquals(0.0, inhomogeneousPoint3D0.getHomY(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getHomX(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomogeneousPoint3D homogeneousPoint3D0 = new HomogeneousPoint3D();
      InhomogeneousPoint3D inhomogeneousPoint3D0 = homogeneousPoint3D0.toInhomogeneous();
      inhomogeneousPoint3D0.setInhomZ((-870.30580563718));
      double double0 = inhomogeneousPoint3D0.getHomZ();
      assertEquals((-870.30580563718), inhomogeneousPoint3D0.getZ(), 0.01);
      assertEquals((-870.30580563718), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      double double0 = inhomogeneousPoint3D0.getHomY();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D(1.0E-12, 2010.7899863581001, 1.0E-12);
      double double0 = inhomogeneousPoint3D0.getHomY();
      assertEquals(2010.7899863581001, double0, 0.01);
      assertEquals(1.0E-12, inhomogeneousPoint3D0.getZ(), 0.01);
      assertEquals(1.0E-12, inhomogeneousPoint3D0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D((-1.0), (-1.0), (-1.0));
      double double0 = inhomogeneousPoint3D0.getHomY();
      assertEquals((-1.0), inhomogeneousPoint3D0.getX(), 0.01);
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-1.0), inhomogeneousPoint3D0.getHomZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      double double0 = inhomogeneousPoint3D0.getHomX();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      inhomogeneousPoint3D0.setX(1.0E-12);
      double double0 = inhomogeneousPoint3D0.getHomX();
      assertEquals(1.0E-12, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      inhomogeneousPoint3D0.setX((-1.0));
      double double0 = inhomogeneousPoint3D0.getHomX();
      assertEquals((-1.0), inhomogeneousPoint3D0.getX(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getZ(), 0.01);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      double double0 = inhomogeneousPoint3D0.getHomW();
      assertEquals(1.0, double0, 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      boolean boolean0 = inhomogeneousPoint3D0.equals((Point3D) inhomogeneousPoint3D0, 0.0);
      assertTrue(boolean0);
      assertEquals(0.0, inhomogeneousPoint3D0.getInhomX(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getInhomZ(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-70.57822406601);
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D(doubleArray0);
      CoordinatesType coordinatesType0 = CoordinatesType.INHOMOGENEOUS_COORDINATES;
      InhomogeneousPoint3D inhomogeneousPoint3D1 = (InhomogeneousPoint3D)Point3D.create(coordinatesType0);
      boolean boolean0 = inhomogeneousPoint3D0.equals(inhomogeneousPoint3D1);
      assertFalse(boolean0);
      assertEquals(0.0, inhomogeneousPoint3D0.getInhomY(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getZ(), 0.01);
      assertEquals((-70.57822406601), inhomogeneousPoint3D0.getX(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D1.getInhomX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      HomogeneousPoint3D homogeneousPoint3D0 = (HomogeneousPoint3D)Point3D.create();
      boolean boolean0 = inhomogeneousPoint3D0.equals(homogeneousPoint3D0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      // Undeclared exception!
      try { 
        inhomogeneousPoint3D0.setCoordinates((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      // Undeclared exception!
      try { 
        inhomogeneousPoint3D0.setCoordinates((Point3D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      // Undeclared exception!
      try { 
        inhomogeneousPoint3D0.equals((Point3D) null, 1.0E-10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      // Undeclared exception!
      try { 
        inhomogeneousPoint3D0.equals((InhomogeneousPoint3D) null, 368.120070561);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      // Undeclared exception!
      try { 
        inhomogeneousPoint3D0.equals((InhomogeneousPoint3D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      // Undeclared exception!
      try { 
        inhomogeneousPoint3D0.equals((HomogeneousPoint3D) null, 1.0E-10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      // Undeclared exception!
      try { 
        inhomogeneousPoint3D0.equals((HomogeneousPoint3D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      // Undeclared exception!
      try { 
        inhomogeneousPoint3D0.asArray((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = null;
      try {
        inhomogeneousPoint3D0 = new InhomogeneousPoint3D((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = null;
      try {
        inhomogeneousPoint3D0 = new InhomogeneousPoint3D((Point3D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D(doubleArray0);
      inhomogeneousPoint3D0.asArray(doubleArray0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D(1255.492634659748, 1255.492634659748, 1255.492634659748);
      InhomogeneousPoint3D inhomogeneousPoint3D1 = new InhomogeneousPoint3D();
      inhomogeneousPoint3D1.setHomogeneousCoordinates(85.13216551952017, 1.0, (-443.8493769), 5836.80571256029);
      boolean boolean0 = inhomogeneousPoint3D0.equals(inhomogeneousPoint3D1, 1255.492634659748);
      assertEquals(1.7132658670616506E-4, inhomogeneousPoint3D1.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D(1.0E-10, (-967.66858327), 1.0);
      InhomogeneousPoint3D inhomogeneousPoint3D1 = new InhomogeneousPoint3D();
      boolean boolean0 = inhomogeneousPoint3D1.equals(inhomogeneousPoint3D0, 1.0E-10);
      assertFalse(boolean0);
      assertEquals((-967.66858327), inhomogeneousPoint3D0.getInhomY(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D1.getX(), 0.01);
      assertEquals(1.0, inhomogeneousPoint3D0.getZ(), 0.01);
      assertEquals(1.0E-10, inhomogeneousPoint3D0.getInhomX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D(0.0, 0.0, 0.0);
      HomogeneousPoint3D homogeneousPoint3D0 = inhomogeneousPoint3D0.toHomogeneous();
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 3;
      inhomogeneousPoint3D0.setCoordinates(doubleArray0);
      homogeneousPoint3D0.setCoordinates((Point3D) inhomogeneousPoint3D0);
      inhomogeneousPoint3D0.setInhomogeneousCoordinates(0.0, 0.0, (-1367.74));
      InhomogeneousPoint3D inhomogeneousPoint3D1 = homogeneousPoint3D0.toInhomogeneous();
      boolean boolean0 = inhomogeneousPoint3D0.equals(inhomogeneousPoint3D1, 0.0);
      assertEquals(3.0, homogeneousPoint3D0.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      boolean boolean0 = inhomogeneousPoint3D0.equals(inhomogeneousPoint3D0, 0.0);
      assertTrue(boolean0);
      assertEquals(0.0, inhomogeneousPoint3D0.getY(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getX(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomogeneousPoint3D homogeneousPoint3D0 = new HomogeneousPoint3D(453.9114896848603, (-1603.978686365352), 3.2798781244911633E13, (-567.27486));
      InhomogeneousPoint3D inhomogeneousPoint3D0 = homogeneousPoint3D0.toInhomogeneous();
      inhomogeneousPoint3D0.setInhomY(4756.75714);
      boolean boolean0 = inhomogeneousPoint3D0.equals(homogeneousPoint3D0, 1.0);
      assertEquals(4756.75714, inhomogeneousPoint3D0.getHomY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      HomogeneousPoint3D homogeneousPoint3D0 = new HomogeneousPoint3D(1.0E-10, 0.0, 4, 1.0E-10);
      boolean boolean0 = inhomogeneousPoint3D0.equals(homogeneousPoint3D0, 1.0E-10);
      assertFalse(boolean0);
      assertEquals(0.0, inhomogeneousPoint3D0.getHomZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      HomogeneousPoint3D homogeneousPoint3D0 = new HomogeneousPoint3D();
      // Undeclared exception!
      try { 
        inhomogeneousPoint3D0.equals(homogeneousPoint3D0, (-2258.2390894));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      inhomogeneousPoint3D0.setCoordinates((Point3D) inhomogeneousPoint3D0);
      assertEquals(0.0, inhomogeneousPoint3D0.getHomX(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getInhomY(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getHomZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        inhomogeneousPoint3D0.setCoordinates(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      inhomogeneousPoint3D0.setCoordinates(0.0, (double) 3, (-1.0));
      assertEquals(3.0, inhomogeneousPoint3D0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomogeneousPoint3D homogeneousPoint3D0 = new HomogeneousPoint3D(1.0, (-4374.0008), 1.0, 1907.189047552028);
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D(0.0, 1718.724, 1.0E-10);
      homogeneousPoint3D0.setCoordinates((Point3D) inhomogeneousPoint3D0);
      inhomogeneousPoint3D0.setInhomZ((-2268.273216));
      boolean boolean0 = inhomogeneousPoint3D0.equals(homogeneousPoint3D0, 1.0);
      assertEquals(0.0, homogeneousPoint3D0.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomogeneousPoint3D homogeneousPoint3D0 = new HomogeneousPoint3D(453.9114896848603, (-1603.978686365352), 3.2798781244911633E13, (-567.27486));
      InhomogeneousPoint3D inhomogeneousPoint3D0 = homogeneousPoint3D0.toInhomogeneous();
      double[] doubleArray0 = new double[2];
      // Undeclared exception!
      try { 
        inhomogeneousPoint3D0.asArray(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      LinkedList<Point3D> linkedList0 = new LinkedList<Point3D>();
      Point3D.centroid((Collection<Point3D>) linkedList0, (Point3D) inhomogeneousPoint3D0);
      inhomogeneousPoint3D0.setX((-1205.436791));
      boolean boolean0 = inhomogeneousPoint3D0.isAtInfinity();
      assertEquals(Double.NaN, inhomogeneousPoint3D0.getZ(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      boolean boolean0 = inhomogeneousPoint3D0.isAtInfinity();
      assertFalse(boolean0);
      assertEquals(0.0, inhomogeneousPoint3D0.getInhomY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      InhomogeneousPoint3D inhomogeneousPoint3D1 = new InhomogeneousPoint3D(0.0, 3, 4);
      boolean boolean0 = inhomogeneousPoint3D0.equals((Point3D) inhomogeneousPoint3D1, (double) 3);
      assertFalse(boolean0);
      assertEquals(0.0, inhomogeneousPoint3D1.getInhomX(), 0.01);
      assertEquals(4.0, inhomogeneousPoint3D1.getHomZ(), 0.01);
      assertEquals(3.0, inhomogeneousPoint3D1.getY(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      // Undeclared exception!
      try { 
        inhomogeneousPoint3D0.equals(inhomogeneousPoint3D0, (-794.7939365723644));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomogeneousPoint3D homogeneousPoint3D0 = new HomogeneousPoint3D(453.9114896848603, (-1603.978686365352), 3.2798781244911633E13, (-567.27486));
      InhomogeneousPoint3D inhomogeneousPoint3D0 = homogeneousPoint3D0.toInhomogeneous();
      boolean boolean0 = inhomogeneousPoint3D0.equals(homogeneousPoint3D0, 1.0);
      assertTrue(boolean0);
      assertEquals((-0.8001614767219903), inhomogeneousPoint3D0.getInhomX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      HomogeneousPoint3D homogeneousPoint3D0 = new HomogeneousPoint3D(4, 4, 3, 1.0E-10);
      boolean boolean0 = inhomogeneousPoint3D0.equals((Point3D) homogeneousPoint3D0, 1.0E-10);
      assertFalse(boolean0);
      assertEquals(0.0, inhomogeneousPoint3D0.getInhomX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      Object object0 = new Object();
      boolean boolean0 = inhomogeneousPoint3D0.equals(object0);
      assertFalse(boolean0);
      assertEquals(0.0, inhomogeneousPoint3D0.getHomZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      boolean boolean0 = inhomogeneousPoint3D0.equals((Object) inhomogeneousPoint3D0);
      assertTrue(boolean0);
      assertEquals(0.0, inhomogeneousPoint3D0.getHomX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      assertEquals(0.0, inhomogeneousPoint3D0.getInhomZ(), 0.01);
      
      HomogeneousPoint3D homogeneousPoint3D0 = new HomogeneousPoint3D(4, 4, 4, 0.0);
      inhomogeneousPoint3D0.setCoordinates((Point3D) homogeneousPoint3D0);
      boolean boolean0 = inhomogeneousPoint3D0.isAtInfinity();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      HomogeneousPoint3D homogeneousPoint3D0 = new HomogeneousPoint3D(0.0, 0.0, 3, 3);
      boolean boolean0 = inhomogeneousPoint3D0.equals(homogeneousPoint3D0);
      assertFalse(boolean0);
      assertEquals(0.0, inhomogeneousPoint3D0.getInhomX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      LinkedList<Point3D> linkedList0 = new LinkedList<Point3D>();
      Point3D.centroid((Collection<Point3D>) linkedList0, (Point3D) inhomogeneousPoint3D0);
      boolean boolean0 = inhomogeneousPoint3D0.isAtInfinity();
      assertEquals(Double.NaN, inhomogeneousPoint3D0.getInhomY(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      inhomogeneousPoint3D0.setY(3);
      assertEquals(3.0, inhomogeneousPoint3D0.getHomY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      inhomogeneousPoint3D0.setZ(4);
      boolean boolean0 = inhomogeneousPoint3D0.isAtInfinity();
      assertEquals(4.0, inhomogeneousPoint3D0.getInhomZ(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      boolean boolean0 = inhomogeneousPoint3D0.equals(inhomogeneousPoint3D0);
      assertTrue(boolean0);
      assertEquals(0.0, inhomogeneousPoint3D0.getInhomY(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getInhomX(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      InhomogeneousPoint3D inhomogeneousPoint3D1 = new InhomogeneousPoint3D(inhomogeneousPoint3D0);
      boolean boolean0 = inhomogeneousPoint3D0.equals((Object) inhomogeneousPoint3D1);
      assertTrue(boolean0);
      assertEquals(0.0, inhomogeneousPoint3D0.getInhomY(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getInhomZ(), 0.01);
      assertEquals(0.0, inhomogeneousPoint3D0.getInhomX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      InhomogeneousPoint3D inhomogeneousPoint3D0 = new InhomogeneousPoint3D();
      HomogeneousPoint3D homogeneousPoint3D0 = inhomogeneousPoint3D0.toHomogeneous();
      // Undeclared exception!
      try { 
        inhomogeneousPoint3D0.equals((Point3D) homogeneousPoint3D0, (-2041.524648937993));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.geometry.InhomogeneousPoint3D", e);
      }
  }
}
