/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 15:33:35 GMT 2022
 */

package top.banner.lib.curl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import top.banner.lib.curl.UrlPattern;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UrlPattern_ESTest extends UrlPattern_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UrlPattern.addUrlPattern("0'RI^VQ (2&P\"L&d5/*");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UrlPattern.addUrlPattern("*.");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UrlPattern.matches("}7r{ \"8hr*Hl<~h{.s");
      UrlPattern.matches("}7r{ \"8hr*Hl<~h{.s");
      boolean boolean0 = UrlPattern.matches("}7r{ \"8hr*Hl<~h{.s");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        UrlPattern.matches((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = UrlPattern.matches("/*");
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = UrlPattern.matches("/*.^CO65*)D|B");
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UrlPattern.addUrlPattern("u#c");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UrlPattern.addUrlPattern("/*");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UrlPattern.addUrlPattern((String) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UrlPattern.addUrlPattern("");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UrlPattern urlPattern0 = new UrlPattern();
  }
}
