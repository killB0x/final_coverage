/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 19:19:22 GMT 2022
 */

package smartrics.rest.fitnesse.fixture.support;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import smartrics.rest.fitnesse.fixture.support.Config;
import smartrics.rest.fitnesse.fixture.support.ContentType;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ContentType_ESTest extends ContentType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContentType contentType0 = ContentType.parse("text/plain");
      assertEquals(ContentType.TEXT, contentType0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ContentType.parse(";");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ContentType contentType0 = ContentType.typeFor("text/plain");
      assertEquals(ContentType.TEXT, contentType0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ContentType[] contentTypeArray0 = ContentType.values();
      assertEquals(4, contentTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContentType contentType0 = ContentType.valueOf("TEXT");
      assertEquals(ContentType.TEXT, contentType0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        ContentType.config((Config) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("smartrics.rest.fitnesse.fixture.support.ContentType", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Config config0 = Config.getConfig();
      // Undeclared exception!
      try { 
        ContentType.config(config0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // smartrics/rest/client/RestData
         //
         verifyException("smartrics.rest.fitnesse.fixture.support.ContentType", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContentType.parse("bU!;s i{H,Gq+}-Z");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ContentType.parse((String) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ContentType.typeFor((String) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContentType contentType0 = ContentType.parse("default");
      contentType0.toMime();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ContentType.resetDefaultMapping();
  }
}
