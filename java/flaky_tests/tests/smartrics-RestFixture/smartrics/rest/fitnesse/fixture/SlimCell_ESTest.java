/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 19:23:04 GMT 2022
 */

package smartrics.rest.fitnesse.fixture;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import smartrics.rest.fitnesse.fixture.SlimCell;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SlimCell_ESTest extends SlimCell_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SlimCell slimCell0 = new SlimCell("=k@");
      slimCell0.body((String) null);
      String string0 = slimCell0.text();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SlimCell slimCell0 = new SlimCell("=k@");
      slimCell0.body("");
      String string0 = slimCell0.text();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SlimCell slimCell0 = new SlimCell("b_8},3d");
      slimCell0.body((String) null);
      String string0 = slimCell0.getWrapped();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SlimCell slimCell0 = new SlimCell("ahW)?{`Y{}]v");
      String string0 = slimCell0.getWrapped();
      assertEquals("ahW)?{`Y{}]v", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SlimCell slimCell0 = new SlimCell("b_8},3d");
      slimCell0.body("");
      String string0 = slimCell0.body();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SlimCell slimCell0 = new SlimCell("=k@");
      slimCell0.addToBody("ZI");
      assertEquals("=k@ZI", slimCell0.getWrapped());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SlimCell slimCell0 = new SlimCell("=k@");
      slimCell0.body((String) null);
      String string0 = slimCell0.body();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SlimCell slimCell0 = new SlimCell("=k@");
      String string0 = slimCell0.text();
      assertEquals("=k@", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SlimCell slimCell0 = new SlimCell("=k@");
      String string0 = slimCell0.body();
      assertEquals("=k@", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SlimCell slimCell0 = new SlimCell("");
      String string0 = slimCell0.getWrapped();
      assertEquals("", string0);
  }
}
