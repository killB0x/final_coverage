/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 08:46:21 GMT 2022
 */

package io.unlaunch.exceptions;

import org.junit.Test;
import static org.junit.Assert.*;
import io.unlaunch.exceptions.UnlaunchRuntimeException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnlaunchRuntimeException_ESTest extends UnlaunchRuntimeException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UnlaunchRuntimeException unlaunchRuntimeException0 = new UnlaunchRuntimeException("io.unlaunch.exceptions.UnlaunchRuntimeException");
      UnlaunchRuntimeException unlaunchRuntimeException1 = new UnlaunchRuntimeException(unlaunchRuntimeException0);
      assertFalse(unlaunchRuntimeException1.equals((Object)unlaunchRuntimeException0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UnlaunchRuntimeException unlaunchRuntimeException0 = new UnlaunchRuntimeException();
      MockException mockException0 = new MockException((String) null, unlaunchRuntimeException0);
      UnlaunchRuntimeException unlaunchRuntimeException1 = new UnlaunchRuntimeException("", mockException0);
      assertFalse(unlaunchRuntimeException1.equals((Object)unlaunchRuntimeException0));
  }
}
