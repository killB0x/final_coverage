/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 08:28:25 GMT 2022
 */

package io.unlaunch.event;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.unlaunch.event.Event;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Event_ESTest extends Event_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Event event0 = new Event("HmMYe8]+:u<=v", "HmMYe8]+:u<=v", "HmMYe8]+:u<=v");
      Event event1 = new Event("HmMYe8]+:u<=v", "HmMYe8]+:u<=v", "Event{timestamp=1392409281320, type='HmMYe8]+:u<=v', Key='HmMYe8]+:u<=v', secondaryKey='HmMYe8]+:u<=v', # of properties=0, sdk='Java', sdkVersion='unknown-no-jar'}", "HmMYe8]+:u<=v");
      boolean boolean0 = event0.equals(event1);
      assertEquals("Java", event1.getSdk());
      assertEquals("HmMYe8]+:u<=v", event1.getType());
      assertEquals("HmMYe8]+:u<=v", event1.getKey());
      assertEquals("Event{timestamp=1392409281320, type='HmMYe8]+:u<=v', Key='HmMYe8]+:u<=v', secondaryKey='HmMYe8]+:u<=v', # of properties=0, sdk='Java', sdkVersion='unknown-no-jar'}", event1.getSecondaryKey());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Event event0 = new Event("70^=?(*!(2h,Y?~", "70^=?(*!(2h,Y?~", "70^=?(*!(2h,Y?~", integer0);
      event0.getType();
      assertEquals("Java", event0.getSdk());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Event event0 = new Event("", "");
      event0.getType();
      assertEquals("Java", event0.getSdk());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer((-1302));
      Event event0 = new Event((String) null, ":>'kak^V.1[<za//=", (String) null, integer0);
      String string0 = event0.getSecondaryKey();
      assertEquals("Java", event0.getSdk());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Event event0 = new Event("/RiF}", "/RiF}");
      String string0 = event0.getSecondaryKey();
      assertEquals("/RiF}", event0.getType());
      assertEquals("Java", event0.getSdk());
      assertEquals("", string0);
      assertEquals("/RiF}", event0.getKey());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Event event0 = new Event("N", "N", "N", integer0);
      event0.addProperty("$q3f]", integer0);
      event0.getProperties();
      assertEquals("Java", event0.getSdk());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Event event0 = new Event("uz#&,2vmUHw#q?4Z/N", (String) null);
      String string0 = event0.getKey();
      assertEquals("Java", event0.getSdk());
      assertEquals("uz#&,2vmUHw#q?4Z/N", event0.getType());
      assertEquals("", event0.getSecondaryKey());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Event event0 = new Event("", "", "");
      event0.getKey();
      assertEquals("Java", event0.getSdk());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Object object0 = Event.EMPTY_OBJECT;
      Event event0 = new Event("l^B$mtrP1;~MIH:V", "l^B$mtrP1;~MIH:V", "l^B$mtrP1;~MIH:V", object0);
      event0.getCreatedTime();
      assertEquals("Java", event0.getSdk());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis((-4247L));
      Event event0 = new Event("", "", "");
      long long0 = event0.getCreatedTime();
      assertEquals("Java", event0.getSdk());
      assertEquals((-4247L), long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Event event0 = new Event((String) null, (String) null);
      Event event1 = new Event((String) null, (String) null, (String) null);
      // Undeclared exception!
      try { 
        event1.equals(event0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Event event0 = new Event("N", "N", "N", integer0);
      event0.getSecondaryKey();
      assertEquals("Java", event0.getSdk());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Event event0 = new Event("N", "N", "N", integer0);
      event0.getSdkVersion();
      assertEquals("Java", event0.getSdk());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Event event0 = new Event("N", "N", "N", integer0);
      event0.getKey();
      assertEquals("Java", event0.getSdk());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer((-1302));
      Event event0 = new Event((String) null, ":>'kak^V.1[<za//=", (String) null, integer0);
      String string0 = event0.getType();
      assertNull(string0);
      assertEquals("Java", event0.getSdk());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Event event0 = new Event("/RiF}", "/RiF}");
      Event event1 = new Event("/RiF}", "/RiF}");
      boolean boolean0 = event0.equals(event1);
      assertEquals("", event1.getSecondaryKey());
      assertEquals("/RiF}", event1.getType());
      assertTrue(boolean0);
      assertEquals("Java", event1.getSdk());
      assertEquals("/RiF}", event1.getKey());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      Event event0 = new Event("HmMYe8]+:u<=v", "HmMYe8]+:u<=v", "HmMYe8]+:u<=v", object0);
      Event event1 = new Event("HmMYe8]+:u<=v", "HmMYe8]+:u<=v");
      boolean boolean0 = event0.equals(event1);
      assertEquals("HmMYe8]+:u<=v", event1.getKey());
      assertEquals("", event1.getSecondaryKey());
      assertEquals("Java", event1.getSdk());
      assertFalse(boolean0);
      assertEquals("HmMYe8]+:u<=v", event1.getType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Event event0 = new Event("HmMYe8]+:u<=v", "HmMYe8]+:u<=v", "HmMYe8]+:u<=v");
      Event event1 = new Event("HmMYe8]+:u<=v", "Event{timestamp=1392409281320, type='HmMYe8]+:u<=v', Key='HmMYe8]+:u<=v', secondaryKey='HmMYe8]+:u<=v', # of properties=1, sdk='Java', sdkVersion='unknown-no-jar'}");
      boolean boolean0 = event0.equals(event1);
      assertEquals("Java", event1.getSdk());
      assertEquals("HmMYe8]+:u<=v", event1.getType());
      assertEquals("", event1.getSecondaryKey());
      assertEquals("Event{timestamp=1392409281320, type='HmMYe8]+:u<=v', Key='HmMYe8]+:u<=v', secondaryKey='HmMYe8]+:u<=v', # of properties=1, sdk='Java', sdkVersion='unknown-no-jar'}", event1.getKey());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object object0 = new Object();
      Event event0 = new Event("HmMYe8]+:u<=v", "HmMYe8]+:u<=v", "HmMYe8]+:u<=v", object0);
      Event event1 = new Event((String) null, "V[", "");
      boolean boolean0 = event0.equals(event1);
      assertEquals("V[", event1.getKey());
      assertFalse(boolean0);
      assertEquals("Java", event1.getSdk());
      assertEquals("", event1.getSecondaryKey());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object object0 = new Object();
      Event event0 = new Event("HmMYe8]+:u<=v", "HmMYe8]+:u<=v", "HmMYe8]+:u<=v", object0);
      boolean boolean0 = event0.equals(object0);
      assertFalse(boolean0);
      assertEquals("Java", event0.getSdk());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Event event0 = new Event("70^=?(*!(2h,Y?~", "70^=?(*!(2h,Y?~", "70^=?(*!(2h,Y?~", integer0);
      boolean boolean0 = event0.equals((Object) null);
      assertEquals("Java", event0.getSdk());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Event event0 = new Event("5QHRIEs d~`Ghq.D^M", "5QHRIEs d~`Ghq.D^M");
      boolean boolean0 = event0.equals(event0);
      assertEquals("5QHRIEs d~`Ghq.D^M", event0.getKey());
      assertEquals("", event0.getSecondaryKey());
      assertEquals("Java", event0.getSdk());
      assertEquals("5QHRIEs d~`Ghq.D^M", event0.getType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Event event0 = new Event("5QHRIEs d~`Ghq.D^M", "5QHRIEs d~`Ghq.D^M");
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        event0.addProperty((String) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Event event0 = new Event(">nC%Id", ">nC%Id");
      event0.addProperty("", ">nC%Id");
      assertEquals("", event0.getSecondaryKey());
      assertEquals(">nC%Id", event0.getKey());
      assertEquals(">nC%Id", event0.getType());
      assertEquals("Java", event0.getSdk());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Event event0 = new Event("HmMYe0]u<=v", "HmMYe0]u<=v");
      // Undeclared exception!
      try { 
        event0.addProperty("s@TA:w=m=,E`G$Pwj", (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value must be of type String, Number or Boolean
         //
         verifyException("io.unlaunch.event.Event", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Event event0 = new Event("HmMYe0]u<=v", "HmMYe0]u<=v");
      String string0 = event0.toString();
      assertEquals("Event{timestamp=1392409281320, type='HmMYe0]u<=v', Key='HmMYe0]u<=v', secondaryKey='', # of properties=0, sdk='Java', sdkVersion='unknown-no-jar'}", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Object object0 = new Object();
      Event event0 = new Event("HmMYe8]+:u<=v", "HmMYe8]+:u<=v", "HmMYe8]+:u<=v", object0);
      event0.hashCode();
      assertEquals("Java", event0.getSdk());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Event event0 = new Event("HmMYe0]u<=v", "HmMYe0]u<=v");
      Event event1 = new Event("HmMYe0]u<=v", "HmMYe0]u<=v", "Event{timestamp=1392409281320, type='HmMYe0]u<=v', Key='HmMYe0]u<=v', secondaryKey='', # of properties=0, sdk='Java', sdkVersion='unknown-no-jar'}");
      boolean boolean0 = event0.equals(event1);
      assertEquals("HmMYe0]u<=v", event1.getKey());
      assertEquals("HmMYe0]u<=v", event1.getType());
      assertFalse(boolean0);
      assertEquals("Java", event1.getSdk());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Event event0 = new Event("", "", "");
      String string0 = event0.getSdk();
      assertEquals("Java", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Event event0 = new Event("5QHRIEs d~`Ghq.D^M", "5QHRIEs d~`Ghq.D^M");
      event0.getProperties();
      assertEquals("5QHRIEs d~`Ghq.D^M", event0.getType());
      assertEquals("", event0.getSecondaryKey());
      assertEquals("Java", event0.getSdk());
      assertEquals("5QHRIEs d~`Ghq.D^M", event0.getKey());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Event event0 = new Event("5QHRIEs d~`Ghq.D^M", "5QHRIEs d~`Ghq.D^M");
      long long0 = event0.getCreatedTime();
      assertEquals("5QHRIEs d~`Ghq.D^M", event0.getKey());
      assertEquals("", event0.getSecondaryKey());
      assertEquals(1392409281320L, long0);
      assertEquals("Java", event0.getSdk());
      assertEquals("5QHRIEs d~`Ghq.D^M", event0.getType());
  }
}
