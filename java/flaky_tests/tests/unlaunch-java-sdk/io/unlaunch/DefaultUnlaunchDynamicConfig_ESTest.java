/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 08:32:06 GMT 2022
 */

package io.unlaunch;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.unlaunch.DefaultUnlaunchDynamicConfig;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultUnlaunchDynamicConfig_ESTest extends DefaultUnlaunchDynamicConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("zpXl?^", "");
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      int int0 = defaultUnlaunchDynamicConfig0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      String string0 = defaultUnlaunchDynamicConfig0.getString("${f%4/D}", "6");
      assertEquals("6", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      hashMap0.put("", "76");
      String string0 = defaultUnlaunchDynamicConfig0.getString("");
      assertEquals("76", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("", "");
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      String string0 = defaultUnlaunchDynamicConfig0.getString("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      long long0 = defaultUnlaunchDynamicConfig0.getLong("", 0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      long long0 = defaultUnlaunchDynamicConfig0.getLong("?>EsP", (-462L));
      assertEquals((-462L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("6", "6");
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      long long0 = defaultUnlaunchDynamicConfig0.getLong("6");
      assertEquals(6L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      int int0 = defaultUnlaunchDynamicConfig0.getInt("", 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      int int0 = defaultUnlaunchDynamicConfig0.getInt("!j'^t", (-4177));
      assertEquals((-4177), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      hashMap0.put("", "76");
      int int0 = defaultUnlaunchDynamicConfig0.getInt("");
      assertEquals(76, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      float float0 = defaultUnlaunchDynamicConfig0.getFloat("", 2452.934F);
      assertEquals(2452.934F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      hashMap0.put("0", "0");
      float float0 = defaultUnlaunchDynamicConfig0.getFloat("0");
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("6", "6");
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      float float0 = defaultUnlaunchDynamicConfig0.getFloat("6");
      assertEquals(6.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      double double0 = defaultUnlaunchDynamicConfig0.getDouble(";}Lu%d8G3M;V9", 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      double double0 = defaultUnlaunchDynamicConfig0.getDouble("}v+C", (-2680.9));
      assertEquals((-2680.9), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      hashMap0.put("4", "4");
      double double0 = defaultUnlaunchDynamicConfig0.getDouble("4");
      assertEquals(4.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("\tR]A:%@mkOC+dTQ@", "\tR]A:%@mkOC+dTQ@");
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      // Undeclared exception!
      try { 
        defaultUnlaunchDynamicConfig0.getFloat("\tR]A:%@mkOC+dTQ@");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("[19}pdD_", "[19}pdD_");
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      // Undeclared exception!
      try { 
        defaultUnlaunchDynamicConfig0.getDouble("[19}pdD_");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      // Undeclared exception!
      try { 
        defaultUnlaunchDynamicConfig0.getInt("U =z+E{tS7:P}>|w");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      // Undeclared exception!
      try { 
        defaultUnlaunchDynamicConfig0.getLong("6");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      // Undeclared exception!
      try { 
        defaultUnlaunchDynamicConfig0.getFloat("0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      boolean boolean0 = defaultUnlaunchDynamicConfig0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      hashMap0.put("", "");
      boolean boolean0 = defaultUnlaunchDynamicConfig0.isEmpty();
      assertEquals(1, defaultUnlaunchDynamicConfig0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      hashMap0.put("", (String) null);
      defaultUnlaunchDynamicConfig0.getString("", (String) null);
      assertFalse(defaultUnlaunchDynamicConfig0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      hashMap0.put("D_&D(Eog1k&'E", "");
      defaultUnlaunchDynamicConfig0.getString("D_&D(Eog1k&'E", "Vc2");
      assertFalse(defaultUnlaunchDynamicConfig0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      hashMap0.put("D_&D(Eog1k&'E", "");
      defaultUnlaunchDynamicConfig0.getBoolean("D_&D(Eog1k&'E", false);
      assertFalse(defaultUnlaunchDynamicConfig0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      boolean boolean0 = defaultUnlaunchDynamicConfig0.getBoolean("", true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put((String) null, (String) null);
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      boolean boolean0 = defaultUnlaunchDynamicConfig0.containsKey((String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      boolean boolean0 = defaultUnlaunchDynamicConfig0.containsKey("7\"R6CIrFrf7$");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig((Map<String, String>) null);
      float float0 = defaultUnlaunchDynamicConfig0.getFloat("v9wz+^a~Fin", (-630.00946F));
      assertEquals((-630.00946F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      String string0 = defaultUnlaunchDynamicConfig0.getString("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      double double0 = defaultUnlaunchDynamicConfig0.getDouble("", (double) 2452.934F);
      assertEquals(2452.93408203125, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      // Undeclared exception!
      try { 
        defaultUnlaunchDynamicConfig0.getDouble("io.unlaunch.DefaultUnlaunchDynamicConfig");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      int int0 = defaultUnlaunchDynamicConfig0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      boolean boolean0 = defaultUnlaunchDynamicConfig0.getBoolean("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      int int0 = defaultUnlaunchDynamicConfig0.getInt("j8~+!b8|C^P0/LWt\"R", 1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      long long0 = defaultUnlaunchDynamicConfig0.getLong((String) null, 1814L);
      assertEquals(1814L, long0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultUnlaunchDynamicConfig defaultUnlaunchDynamicConfig0 = new DefaultUnlaunchDynamicConfig(hashMap0);
      float float0 = defaultUnlaunchDynamicConfig0.getFloat("7unX_B8'(", 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }
}
