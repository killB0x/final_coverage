/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 08:48:13 GMT 2022
 */

package io.unlaunch.engine;

import org.junit.Test;
import static org.junit.Assert.*;
import io.unlaunch.engine.Variation;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Variation_ESTest extends Variation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Variation variation0 = new Variation();
      variation0.setRolloutPercentage(1753L);
      long long0 = variation0.getRolloutPercentage();
      assertEquals(1753L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Variation variation0 = new Variation();
      variation0.setRolloutPercentage((-621L));
      long long0 = variation0.getRolloutPercentage();
      assertEquals((-621L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Variation variation0 = new Variation();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      variation0.setProperties(hashMap0);
      Map<String, String> map0 = variation0.getProperties();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Variation variation0 = new Variation();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("", "");
      variation0.setProperties(hashMap0);
      Map<String, String> map0 = variation0.getProperties();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Variation variation0 = new Variation();
      variation0.setName("");
      String string0 = variation0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Variation variation0 = new Variation();
      variation0.setKey(")~=k4xnV=Dt+[EHv");
      String string0 = variation0.getKey();
      assertEquals(")~=k4xnV=Dt+[EHv", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Variation variation0 = new Variation();
      variation0.setKey("");
      String string0 = variation0.getKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Variation variation0 = new Variation();
      variation0.setAllowList("");
      String string0 = variation0.getAllowList();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Variation variation0 = new Variation();
      variation0.setAllowList("ba'6^>;]r>'nM");
      String string0 = variation0.getAllowList();
      assertEquals("ba'6^>;]r>'nM", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Variation variation0 = new Variation();
      String string0 = variation0.getAllowList();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Variation variation0 = new Variation();
      Map<String, String> map0 = variation0.getProperties();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Variation variation0 = new Variation();
      String string0 = variation0.getKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Variation variation0 = new Variation();
      String string0 = variation0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Variation variation0 = new Variation();
      long long0 = variation0.getRolloutPercentage();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Variation variation0 = new Variation();
      variation0.setName("lo_S7L/~i~");
      String string0 = variation0.getName();
      assertEquals("lo_S7L/~i~", string0);
  }
}
