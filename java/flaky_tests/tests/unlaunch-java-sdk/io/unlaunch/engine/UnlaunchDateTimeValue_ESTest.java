/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 08:47:11 GMT 2022
 */

package io.unlaunch.engine;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.unlaunch.engine.UnlaunchDateTimeValue;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneOffset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnlaunchDateTimeValue_ESTest extends UnlaunchDateTimeValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((-1L));
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(3654);
      LocalDateTime localDateTime0 = MockLocalDateTime.ofInstant(instant0, zoneOffset0);
      UnlaunchDateTimeValue unlaunchDateTimeValue0 = new UnlaunchDateTimeValue(localDateTime0);
      String string0 = unlaunchDateTimeValue0.toString();
      assertEquals("1970-01-01T01:00:53", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond((-1L));
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(3654);
      LocalDateTime localDateTime0 = MockLocalDateTime.ofInstant(instant0, zoneOffset0);
      UnlaunchDateTimeValue unlaunchDateTimeValue0 = new UnlaunchDateTimeValue(localDateTime0);
      LocalDateTime localDateTime1 = unlaunchDateTimeValue0.get();
      assertSame(localDateTime1, localDateTime0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UnlaunchDateTimeValue unlaunchDateTimeValue0 = new UnlaunchDateTimeValue((LocalDateTime) null);
      // Undeclared exception!
      try { 
        unlaunchDateTimeValue0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.unlaunch.engine.UnlaunchDateTimeValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UnlaunchDateTimeValue unlaunchDateTimeValue0 = new UnlaunchDateTimeValue((LocalDateTime) null);
      LocalDateTime localDateTime0 = unlaunchDateTimeValue0.get();
      assertNull(localDateTime0);
  }
}
