/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 08:23:43 GMT 2022
 */

package io.unlaunch.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.unlaunch.utils.MurmurHash3;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MurmurHash3_ESTest extends MurmurHash3_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      byteArray0[8] = (byte)1;
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64(byteArray0, 0, 674, 835L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 20 out of bounds for length 20
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byteArray0[8] = (byte)9;
      long[] longArray0 = MurmurHash3.hash128x64(byteArray0);
      assertArrayEquals(new long[] {5961815993331983017L, (-1948390990467325045L)}, longArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      byteArray0[0] = (byte)5;
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64(byteArray0, 0, 674, 835L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 20 out of bounds for length 20
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byteArray0[7] = (byte)9;
      long[] longArray0 = MurmurHash3.hash128x64(byteArray0);
      assertArrayEquals(new long[] {8176927939460109996L, (-5028005503013430913L)}, longArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byteArray0[6] = (byte)9;
      long[] longArray0 = MurmurHash3.hash128x64(byteArray0);
      assertArrayEquals(new long[] {2626519420744717546L, (-2442380848069178569L)}, longArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byteArray0[5] = (byte)113;
      long[] longArray0 = MurmurHash3.hash128x64(byteArray0);
      assertArrayEquals(new long[] {(-704999933501862420L), (-8599401514949799777L)}, longArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byteArray0[4] = (byte)9;
      long[] longArray0 = MurmurHash3.hash128x64(byteArray0);
      assertArrayEquals(new long[] {713873955988505923L, 7701813801550923224L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byteArray0[3] = (byte) (-47);
      long[] longArray0 = MurmurHash3.hash128x64(byteArray0);
      assertArrayEquals(new long[] {(-540764553146616603L), (-5233639498517807071L)}, longArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byteArray0[2] = (byte)113;
      long[] longArray0 = MurmurHash3.hash128x64(byteArray0);
      assertArrayEquals(new long[] {(-2118971961565635549L), 1944402660013775405L}, longArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byteArray0[1] = (byte) (-47);
      long[] longArray0 = MurmurHash3.hash128x64(byteArray0);
      assertArrayEquals(new long[] {5359268122469187417L, (-864347774609051012L)}, longArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[13];
      charArray0[1] = '\u0080';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        MurmurHash3.murmurhash3_x86_32(charBuffer0, 0, '\u0080', '\u0080');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      byteArray0[1] = (byte) (-11);
      long long0 = MurmurHash3.getLongLittleEndian(byteArray0, 0);
      assertEquals(62720L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[2] = (byte) (-31);
      long long0 = MurmurHash3.getLongLittleEndian(byteArray0, (byte)0);
      assertEquals(14745600L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[3] = (byte) (-121);
      long long0 = MurmurHash3.getLongLittleEndian(byteArray0, (byte)0);
      assertEquals(2264924160L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[4] = (byte) (-53);
      long long0 = MurmurHash3.getLongLittleEndian(byteArray0, (byte)0);
      assertEquals(871878361088L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[5] = (byte) (-126);
      long long0 = MurmurHash3.getLongLittleEndian(byteArray0, (byte)0);
      assertEquals(142936511610880L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[6] = (byte) (-67);
      long long0 = MurmurHash3.getLongLittleEndian(byteArray0, (byte)0);
      assertEquals(53198770598313984L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      long long0 = MurmurHash3.murmurhash3_x86_32(charBuffer0, (-2674), (-2674), 0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[7] = (byte) (-88);
      long long0 = MurmurHash3.getLongLittleEndian(byteArray0, (byte)0);
      assertEquals((-6341068275337658368L), long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      long long0 = MurmurHash3.fmix64(0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      long long0 = MurmurHash3.fmix64((-1240L));
      assertEquals((-4120029496174772504L), long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = MurmurHash3.fmix32(409);
      assertEquals(588777816, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = MurmurHash3.fmix32((-241));
      assertEquals((-519567754), int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(55296);
      // Undeclared exception!
      MurmurHash3.murmurhash3_x86_32(charBuffer0, 1, 55296, 55296);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.murmurhash3_x86_32("Q", 0, 34, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.murmurhash3_x86_32((CharSequence) null, 33, 33, 33);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.getLongLittleEndian((byte[]) null, 915);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        MurmurHash3.getLongLittleEndian(byteArray0, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 7 out of bounds for length 7
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64(byteArray0, (-4356), (-4356), (long) 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -8713 out of bounds for length 3
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64(byteArray0, (int) (byte)74, (-430675100), (long) (-430675100));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -430675027 out of bounds for length 2
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64(byteArray0, (int) (byte) (-2), (int) (byte) (-2), 0L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -5 out of bounds for length 2
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64((byte[]) null, (int) (byte) (-11), (-1687), 1047L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64((byte[]) null, (int) (byte)11, (-862047069), (long) (-862047069));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64(byteArray0, (-1118), (-1118), (long) (-1118));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2237 out of bounds for length 0
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64(byteArray0, 134, (-6136), (long) (-84));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -6003 out of bounds for length 0
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      long[] longArray0 = MurmurHash3.hash128x64(byteArray0, (int) (byte)0, 0, (long) (byte)19);
      assertArrayEquals(new long[] {(-4567684642202927075L), (-8001087721336843924L)}, longArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64(byteArray0, (int) (byte)107, (int) (byte) (-11), 581L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 95 out of bounds for length 3
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64(byteArray0, 333, 13, (long) (byte)4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 345 out of bounds for length 3
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64(byteArray0, (int) (byte) (-118), (int) (byte) (-118), 292L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -237 out of bounds for length 3
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64(byteArray0, (-3372), (int) (byte)7, (long) (byte)7);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -3366 out of bounds for length 8
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64(byteArray0, 0, (-1727), 0L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1728 out of bounds for length 0
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64(byteArray0, 100, (-2048144789), 1390208809L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2048144690 out of bounds for length 0
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64(byteArray0, (-1), (int) (byte)6, 0L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 2
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      long long0 = MurmurHash3.fmix64(2202L);
      assertEquals(7816374886950443178L, long0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      // Undeclared exception!
      try { 
        MurmurHash3.hash128x64((byte[]) null, (-1), (-1), (long) (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.unlaunch.utils.MurmurHash3", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      long[] longArray0 = MurmurHash3.hash128x64(byteArray0);
      assertArrayEquals(new long[] {183371090322255134L, (-8965558097070373142L)}, longArray0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(19);
      long long0 = MurmurHash3.murmurhash3_x86_32(charBuffer0, 5, 5, 5);
      assertEquals(1641570912L, long0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      char[] charArray0 = new char[15];
      charArray0[7] = '\u04DC';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        MurmurHash3.murmurhash3_x86_32(charBuffer0, '\u0000', '\u04DC', '\u04DC');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      MurmurHash3.LongPair murmurHash3_LongPair0 = new MurmurHash3.LongPair();
      assertEquals(0L, murmurHash3_LongPair0.val1);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int int0 = MurmurHash3.fmix32((byte)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      MurmurHash3 murmurHash3_0 = new MurmurHash3();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      long long0 = MurmurHash3.getLongLittleEndian(byteArray0, (byte)9);
      assertEquals(0L, long0);
  }
}
