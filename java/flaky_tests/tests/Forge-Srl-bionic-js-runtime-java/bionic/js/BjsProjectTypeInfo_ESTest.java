/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 17:10:23 GMT 2022
 */

package bionic.js;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import bionic.js.BjsProject;
import bionic.js.BjsProjectTypeInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BjsProjectTypeInfo_ESTest extends BjsProjectTypeInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        BjsProjectTypeInfo.getProjectInitializer((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        BjsProjectTypeInfo.get((Class<BjsProject>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        BjsProjectTypeInfo.getProjectInitializer(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Class has no static method with Exporter annotation
         //
         verifyException("bionic.js.BjsProjectTypeInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<BjsProject> class0 = BjsProject.class;
      // Undeclared exception!
      try { 
        BjsProjectTypeInfo.get(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Class has no static method with Exporter annotation
         //
         verifyException("bionic.js.BjsProjectTypeInfo", e);
      }
  }
}
