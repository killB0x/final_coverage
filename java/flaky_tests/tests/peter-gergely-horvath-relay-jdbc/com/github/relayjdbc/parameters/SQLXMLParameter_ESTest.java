/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 17:04:47 GMT 2022
 */

package com.github.relayjdbc.parameters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.parameters.SQLXMLParameter;
import com.github.relayjdbc.serial.SerialSQLXML;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.sql.PreparedStatement;
import java.sql.SQLXML;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SQLXMLParameter_ESTest extends SQLXMLParameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SQLXMLParameter sQLXMLParameter0 = new SQLXMLParameter();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      sQLXMLParameter0.setParameter(preparedStatement0, 0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SQLXMLParameter sQLXMLParameter0 = new SQLXMLParameter();
      SerialSQLXML serialSQLXML0 = sQLXMLParameter0.getValue();
      assertNull(serialSQLXML0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SQLXMLParameter sQLXMLParameter0 = new SQLXMLParameter();
      // Undeclared exception!
      try { 
        sQLXMLParameter0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.SQLXMLParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SQLXMLParameter sQLXMLParameter0 = new SQLXMLParameter();
      // Undeclared exception!
      try { 
        sQLXMLParameter0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.SQLXMLParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SQLXMLParameter sQLXMLParameter0 = null;
      try {
        sQLXMLParameter0 = new SQLXMLParameter((SQLXML) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.serial.SerialSQLXML", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SerialSQLXML serialSQLXML0 = new SerialSQLXML();
      SQLXMLParameter sQLXMLParameter0 = new SQLXMLParameter(serialSQLXML0);
      SerialSQLXML serialSQLXML1 = sQLXMLParameter0.getValue();
      assertSame(serialSQLXML0, serialSQLXML1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SQLXMLParameter sQLXMLParameter0 = new SQLXMLParameter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(byteArrayOutputStream0);
      sQLXMLParameter0.writeExternal(objectOutputStream0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SQLXMLParameter sQLXMLParameter0 = new SQLXMLParameter();
      // Undeclared exception!
      try { 
        sQLXMLParameter0.setParameter((PreparedStatement) null, 695);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.SQLXMLParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SerialSQLXML serialSQLXML0 = new SerialSQLXML();
      SQLXMLParameter sQLXMLParameter0 = new SQLXMLParameter((SQLXML) serialSQLXML0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SQLXMLParameter sQLXMLParameter0 = new SQLXMLParameter();
      // Undeclared exception!
      try { 
        sQLXMLParameter0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.SQLXMLParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SerialSQLXML serialSQLXML0 = new SerialSQLXML();
      SQLXMLParameter sQLXMLParameter0 = new SQLXMLParameter(serialSQLXML0);
      String string0 = sQLXMLParameter0.toString();
      assertEquals("SQLXML: ", string0);
  }
}
