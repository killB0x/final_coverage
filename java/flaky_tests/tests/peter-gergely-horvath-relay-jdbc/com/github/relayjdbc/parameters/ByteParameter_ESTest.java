/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 17:18:52 GMT 2022
 */

package com.github.relayjdbc.parameters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.parameters.ByteParameter;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.sql.PreparedStatement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteParameter_ESTest extends ByteParameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ByteParameter byteParameter0 = new ByteParameter((byte)82);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((byte)82);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      byteParameter0.writeExternal(objectOutputStream0);
      assertEquals((byte)82, byteParameter0.getValue());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ByteParameter byteParameter0 = new ByteParameter((byte)82);
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      byteParameter0.setParameter(preparedStatement0, (byte)82);
      assertEquals((byte)82, byteParameter0.getValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ByteParameter byteParameter0 = new ByteParameter((byte)82);
      byte byte0 = byteParameter0.getValue();
      assertEquals((byte)82, byte0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ByteParameter byteParameter0 = new ByteParameter((byte) (-24));
      byte byte0 = byteParameter0.getValue();
      assertEquals((byte) (-24), byte0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ByteParameter byteParameter0 = new ByteParameter((byte)0);
      byte byte0 = byteParameter0.getValue();
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ByteParameter byteParameter0 = new ByteParameter((byte) (-128));
      // Undeclared exception!
      try { 
        byteParameter0.setParameter((PreparedStatement) null, (-742));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.ByteParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ByteParameter byteParameter0 = new ByteParameter();
      // Undeclared exception!
      try { 
        byteParameter0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.ByteParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ByteParameter byteParameter0 = new ByteParameter();
      String string0 = byteParameter0.toString();
      assertEquals("byte: 0", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ByteParameter byteParameter0 = new ByteParameter();
      // Undeclared exception!
      try { 
        byteParameter0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.ByteParameter", e);
      }
  }
}
