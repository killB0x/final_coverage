/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 17:27:57 GMT 2022
 */

package com.github.relayjdbc.parameters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.parameters.StringParameter;
import java.io.ByteArrayOutputStream;
import java.io.FilterOutputStream;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.sql.PreparedStatement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringParameter_ESTest extends StringParameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringParameter stringParameter0 = new StringParameter();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(filterOutputStream0);
      stringParameter0.writeExternal(objectOutputStream0);
      assertNull(stringParameter0.getValue());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringParameter stringParameter0 = new StringParameter((String) null);
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      stringParameter0.setParameter(preparedStatement0, 17);
      assertNull(stringParameter0.getValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringParameter stringParameter0 = new StringParameter((String) null);
      String string0 = stringParameter0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringParameter stringParameter0 = new StringParameter("dI?NNU? I(uW#&UO*");
      String string0 = stringParameter0.getValue();
      assertEquals("dI?NNU? I(uW#&UO*", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringParameter stringParameter0 = new StringParameter();
      // Undeclared exception!
      try { 
        stringParameter0.setParameter((PreparedStatement) null, 25);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.StringParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StringParameter stringParameter0 = new StringParameter();
      // Undeclared exception!
      try { 
        stringParameter0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.StringParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StringParameter stringParameter0 = new StringParameter("");
      String string0 = stringParameter0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StringParameter stringParameter0 = new StringParameter();
      String string0 = stringParameter0.toString();
      assertEquals("String: null", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      StringParameter stringParameter0 = new StringParameter("");
      // Undeclared exception!
      try { 
        stringParameter0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.StringParameter", e);
      }
  }
}
