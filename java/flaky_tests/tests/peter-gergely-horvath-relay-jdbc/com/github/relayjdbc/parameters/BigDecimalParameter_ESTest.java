/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 17:19:37 GMT 2022
 */

package com.github.relayjdbc.parameters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.parameters.BigDecimalParameter;
import java.io.EOFException;
import java.io.File;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.PreparedStatement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BigDecimalParameter_ESTest extends BigDecimalParameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      BigDecimalParameter bigDecimalParameter0 = new BigDecimalParameter(bigDecimal0);
      String string0 = bigDecimalParameter0.toString();
      assertEquals("BigDecimal: 0", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      BigDecimalParameter bigDecimalParameter0 = new BigDecimalParameter(bigDecimal0);
      BigDecimal bigDecimal1 = bigDecimalParameter0.getValue();
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      BigDecimalParameter bigDecimalParameter0 = new BigDecimalParameter(bigDecimal0);
      BigDecimal bigDecimal1 = bigDecimalParameter0.getValue();
      assertEquals((byte)1, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigDecimalParameter bigDecimalParameter0 = new BigDecimalParameter();
      // Undeclared exception!
      try { 
        bigDecimalParameter0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.BigDecimalParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BigDecimalParameter bigDecimalParameter0 = new BigDecimalParameter();
      // Undeclared exception!
      try { 
        bigDecimalParameter0.setParameter((PreparedStatement) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.BigDecimalParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BigDecimalParameter bigDecimalParameter0 = new BigDecimalParameter();
      // Undeclared exception!
      try { 
        bigDecimalParameter0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.BigDecimalParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BigDecimalParameter bigDecimalParameter0 = new BigDecimalParameter();
      // Undeclared exception!
      try { 
        bigDecimalParameter0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.BigDecimalParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-1L));
      BigDecimalParameter bigDecimalParameter0 = new BigDecimalParameter(bigDecimal0);
      BigDecimal bigDecimal1 = bigDecimalParameter0.getValue();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BigDecimalParameter bigDecimalParameter0 = new BigDecimalParameter();
      BigDecimal bigDecimal0 = bigDecimalParameter0.getValue();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BigDecimalParameter bigDecimalParameter0 = new BigDecimalParameter();
      File file0 = MockFile.createTempFile("BnB]*", "");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, true);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      ObjectInputStream objectInputStream0 = new ObjectInputStream(mockFileInputStream0);
      try { 
        bigDecimalParameter0.readExternal(objectInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$BlockDataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BigDecimalParameter bigDecimalParameter0 = new BigDecimalParameter();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      bigDecimalParameter0.setParameter(preparedStatement0, (-1476));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BigDecimalParameter bigDecimalParameter0 = new BigDecimalParameter();
      File file0 = MockFile.createTempFile("BnB]*", "");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, true);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      bigDecimalParameter0.writeExternal(objectOutputStream0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      ObjectInputStream objectInputStream0 = new ObjectInputStream(mockFileInputStream0);
      bigDecimalParameter0.readExternal(objectInputStream0);
  }
}
