/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:40:52 GMT 2022
 */

package com.github.relayjdbc.parameters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.parameters.ObjectParameter;
import java.io.ByteArrayOutputStream;
import java.io.EOFException;
import java.io.File;
import java.io.NotSerializableException;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.sql.PreparedStatement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ObjectParameter_ESTest extends ObjectParameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectParameter objectParameter0 = new ObjectParameter();
      File file0 = MockFile.createTempFile("Object: null", "Object: null");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      objectParameter0.writeExternal(objectOutputStream0);
      assertEquals(93L, file0.length());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      ObjectParameter objectParameter0 = new ObjectParameter(object0, 0);
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      objectParameter0.setParameter(preparedStatement0, 3053);
      assertEquals(2, objectParameter0.getArgsCount());
      assertEquals(0, objectParameter0.getTargetSqlType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectParameter objectParameter0 = new ObjectParameter((Object) null);
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      objectParameter0.setParameter(preparedStatement0, 496);
      assertEquals(0, objectParameter0.getScale());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectParameter objectParameter0 = new ObjectParameter((Object) null);
      objectParameter0.getValue();
      assertEquals(1, objectParameter0.getArgsCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectParameter objectParameter0 = new ObjectParameter(byteArrayOutputStream0, 2002, 2221);
      int int0 = objectParameter0.getTargetSqlType();
      assertEquals(2221, objectParameter0.getScale());
      assertEquals(3, objectParameter0.getArgsCount());
      assertEquals(2002, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectParameter objectParameter0 = new ObjectParameter((Object) null, (-1361));
      int int0 = objectParameter0.getTargetSqlType();
      assertEquals(2, objectParameter0.getArgsCount());
      assertEquals((-1361), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ObjectParameter objectParameter0 = new ObjectParameter((Object) null, (-1339), (-1339));
      int int0 = objectParameter0.getScale();
      assertEquals((-1339), objectParameter0.getTargetSqlType());
      assertEquals(3, objectParameter0.getArgsCount());
      assertEquals((-1339), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ObjectParameter objectParameter0 = new ObjectParameter(integer0, 0);
      int int0 = objectParameter0.getArgsCount();
      assertEquals(0, objectParameter0.getTargetSqlType());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjectParameter objectParameter0 = new ObjectParameter();
      // Undeclared exception!
      try { 
        objectParameter0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.ObjectParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("9I*s'2>~'jc!p)");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      ObjectParameter objectParameter0 = new ObjectParameter();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("9I*s'2>~'jc!p)");
      ObjectInputStream objectInputStream0 = new ObjectInputStream(mockFileInputStream0);
      try { 
        objectParameter0.readExternal(objectInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectParameter objectParameter0 = new ObjectParameter();
      // Undeclared exception!
      try { 
        objectParameter0.setParameter((PreparedStatement) null, (-412));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected argsCount=0
         //
         verifyException("com.github.relayjdbc.parameters.ObjectParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectParameter objectParameter0 = new ObjectParameter(byteArrayOutputStream0, 2002, 2221);
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      objectParameter0.setParameter(preparedStatement0, 106);
      assertEquals(2002, objectParameter0.getTargetSqlType());
      assertEquals(3, objectParameter0.getArgsCount());
      assertEquals(2221, objectParameter0.getScale());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectParameter objectParameter0 = new ObjectParameter((Object) null);
      // Undeclared exception!
      try { 
        objectParameter0.setParameter((PreparedStatement) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.ObjectParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjectParameter objectParameter0 = new ObjectParameter();
      String string0 = objectParameter0.toString();
      assertEquals("Object: null", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectParameter objectParameter0 = new ObjectParameter(byteArrayOutputStream0, 2002, 2221);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(byteArrayOutputStream0);
      try { 
        objectParameter0.writeExternal(objectOutputStream0);
        fail("Expecting exception: NotSerializableException");
      
      } catch(NotSerializableException e) {
         //
         // java.io.ByteArrayOutputStream
         //
         verifyException("java.io.ObjectOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ObjectParameter objectParameter0 = new ObjectParameter();
      int int0 = objectParameter0.getArgsCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjectParameter objectParameter0 = new ObjectParameter();
      // Undeclared exception!
      try { 
        objectParameter0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.ObjectParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjectParameter objectParameter0 = new ObjectParameter("", 1410, 2);
      int int0 = objectParameter0.getScale();
      assertEquals(3, objectParameter0.getArgsCount());
      assertEquals(2, int0);
      assertEquals(1410, objectParameter0.getTargetSqlType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object object0 = new Object();
      ObjectParameter objectParameter0 = new ObjectParameter(object0);
      objectParameter0.getValue();
      assertEquals(1, objectParameter0.getArgsCount());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ObjectParameter objectParameter0 = new ObjectParameter();
      int int0 = objectParameter0.getScale();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ObjectParameter objectParameter0 = new ObjectParameter();
      int int0 = objectParameter0.getTargetSqlType();
      assertEquals(0, int0);
  }
}
