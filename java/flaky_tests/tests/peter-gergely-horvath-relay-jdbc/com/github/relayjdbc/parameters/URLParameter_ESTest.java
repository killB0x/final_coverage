/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 17:07:00 GMT 2022
 */

package com.github.relayjdbc.parameters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.parameters.URLParameter;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.net.URL;
import java.sql.PreparedStatement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class URLParameter_ESTest extends URLParameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      URLParameter uRLParameter0 = new URLParameter();
      MockFile mockFile0 = new MockFile("j$m5*Ud1#.,");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      uRLParameter0.writeExternal(objectOutputStream0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URLParameter uRLParameter0 = new URLParameter();
      // Undeclared exception!
      try { 
        uRLParameter0.setParameter((PreparedStatement) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.URLParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      URLParameter uRLParameter0 = new URLParameter();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      uRLParameter0.setParameter(preparedStatement0, (-3163));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLParameter uRLParameter0 = new URLParameter(uRL0);
      URL uRL1 = uRLParameter0.getValue();
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      URLParameter uRLParameter0 = new URLParameter();
      String string0 = uRLParameter0.toString();
      assertEquals("URL: null", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      URLParameter uRLParameter0 = new URLParameter();
      URL uRL0 = uRLParameter0.getValue();
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      URLParameter uRLParameter0 = new URLParameter();
      // Undeclared exception!
      try { 
        uRLParameter0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.URLParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      URLParameter uRLParameter0 = new URLParameter();
      // Undeclared exception!
      try { 
        uRLParameter0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.URLParameter", e);
      }
  }
}
