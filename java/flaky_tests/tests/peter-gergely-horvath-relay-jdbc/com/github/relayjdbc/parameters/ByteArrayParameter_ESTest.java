/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 17:26:31 GMT 2022
 */

package com.github.relayjdbc.parameters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.parameters.ByteArrayParameter;
import java.io.File;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OptionalDataException;
import java.io.StreamCorruptedException;
import java.sql.PreparedStatement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteArrayParameter_ESTest extends ByteArrayParameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteArrayParameter byteArrayParameter0 = new ByteArrayParameter();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      byteArrayParameter0.setParameter(preparedStatement0, 0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteArrayParameter byteArrayParameter0 = new ByteArrayParameter();
      MockFile mockFile0 = new MockFile((File) null, "com.github.relayjdbc.parameters.ByteArrayParameter");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      byteArrayParameter0.writeExternal(objectOutputStream0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(mockFile0);
      ObjectInputStream objectInputStream0 = new ObjectInputStream(mockFileInputStream0);
      byteArrayParameter0.readExternal(objectInputStream0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayParameter byteArrayParameter0 = new ByteArrayParameter(byteArray0);
      String string0 = byteArrayParameter0.toString();
      assertEquals("byte[]: 0 bytes", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayParameter byteArrayParameter0 = new ByteArrayParameter(byteArray0);
      byte[] byteArray1 = byteArrayParameter0.getValue();
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteArrayParameter byteArrayParameter0 = new ByteArrayParameter();
      // Undeclared exception!
      try { 
        byteArrayParameter0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.ByteArrayParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteArrayParameter byteArrayParameter0 = new ByteArrayParameter();
      // Undeclared exception!
      try { 
        byteArrayParameter0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.ByteArrayParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteArrayParameter byteArrayParameter0 = new ByteArrayParameter();
      MockFile mockFile0 = new MockFile((File) null, "com.github.relayjdbc.parameters.ByteArrayParameter");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      ObjectOutputStream objectOutputStream1 = new ObjectOutputStream(mockPrintStream0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(mockFile0);
      ObjectInputStream objectInputStream0 = new ObjectInputStream(mockFileInputStream0);
      try { 
        byteArrayParameter0.readExternal(objectInputStream0);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(StreamCorruptedException e) {
         //
         // invalid type code: AC
         //
         verifyException("java.io.ObjectInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteArrayParameter byteArrayParameter0 = new ByteArrayParameter();
      MockFile mockFile0 = new MockFile((File) null, "com.github.relayjdbc.parameters.ByteArrayParameter");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      objectOutputStream0.writeInt((-856));
      byteArrayParameter0.writeExternal(objectOutputStream0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(mockFile0);
      ObjectInputStream objectInputStream0 = new ObjectInputStream(mockFileInputStream0);
      try { 
        byteArrayParameter0.readExternal(objectInputStream0);
        fail("Expecting exception: OptionalDataException");
      
      } catch(OptionalDataException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteArrayParameter byteArrayParameter0 = new ByteArrayParameter();
      // Undeclared exception!
      try { 
        byteArrayParameter0.setParameter((PreparedStatement) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.ByteArrayParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayParameter byteArrayParameter0 = new ByteArrayParameter(byteArray0);
      byte[] byteArray1 = byteArrayParameter0.getValue();
      assertSame(byteArray0, byteArray1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteArrayParameter byteArrayParameter0 = new ByteArrayParameter();
      byte[] byteArray0 = byteArrayParameter0.getValue();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteArrayParameter byteArrayParameter0 = new ByteArrayParameter();
      // Undeclared exception!
      try { 
        byteArrayParameter0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.ByteArrayParameter", e);
      }
  }
}
