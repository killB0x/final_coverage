/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 17:30:09 GMT 2022
 */

package com.github.relayjdbc.parameters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.parameters.ArrayParameter;
import com.github.relayjdbc.serial.SerialArray;
import java.io.BufferedOutputStream;
import java.io.NotSerializableException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.sql.Array;
import java.sql.PreparedStatement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ArrayParameter_ESTest extends ArrayParameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayParameter arrayParameter0 = new ArrayParameter();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(bufferedOutputStream0);
      arrayParameter0.writeExternal(objectOutputStream0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrayParameter arrayParameter0 = new ArrayParameter();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      arrayParameter0.setParameter(preparedStatement0, 0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      Object object0 = new Object();
      objectArray0[1] = object0;
      SerialArray serialArray0 = new SerialArray("A#O,J\"\"OY", objectArray0);
      ArrayParameter arrayParameter0 = new ArrayParameter(serialArray0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("updateRef");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      try { 
        arrayParameter0.writeExternal(objectOutputStream0);
        fail("Expecting exception: NotSerializableException");
      
      } catch(NotSerializableException e) {
         //
         // java.lang.Object
         //
         verifyException("java.io.ObjectOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayParameter arrayParameter0 = null;
      try {
        arrayParameter0 = new ArrayParameter((Array) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.serial.SerialArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArrayParameter arrayParameter0 = new ArrayParameter();
      String string0 = arrayParameter0.toString();
      assertEquals("Array: null", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArrayParameter arrayParameter0 = new ArrayParameter();
      // Undeclared exception!
      try { 
        arrayParameter0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.ArrayParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      SerialArray serialArray0 = new SerialArray("", objectArray0);
      javax.sql.rowset.serial.SerialArray serialArray1 = new javax.sql.rowset.serial.SerialArray(serialArray0);
      ArrayParameter arrayParameter0 = new ArrayParameter(serialArray1);
      SerialArray serialArray2 = arrayParameter0.getValue();
      assertEquals(0, serialArray2.getBaseType());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ArrayParameter arrayParameter0 = new ArrayParameter();
      // Undeclared exception!
      try { 
        arrayParameter0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.ArrayParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ArrayParameter arrayParameter0 = new ArrayParameter((SerialArray) null);
      // Undeclared exception!
      try { 
        arrayParameter0.setParameter((PreparedStatement) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.parameters.ArrayParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ArrayParameter arrayParameter0 = new ArrayParameter();
      SerialArray serialArray0 = arrayParameter0.getValue();
      assertNull(serialArray0);
  }
}
