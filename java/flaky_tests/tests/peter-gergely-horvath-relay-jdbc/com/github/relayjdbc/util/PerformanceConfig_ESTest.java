/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:18:00 GMT 2022
 */

package com.github.relayjdbc.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.util.PerformanceConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PerformanceConfig_ESTest extends PerformanceConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = PerformanceConfig.getPerformanceProfile((-858), (-580), 2070);
      assertEquals(135687612, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = PerformanceConfig.validateRowPacketSize(65535);
      assertEquals(65535, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = PerformanceConfig.validateCompressionThreshold(4095);
      assertEquals(4095, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = PerformanceConfig.validateCompressionThreshold(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = PerformanceConfig.validateCompressionMode(1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = PerformanceConfig.parseRowPacketSize("+7");
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = PerformanceConfig.parseCompressionThreshold("1");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = PerformanceConfig.getRowPacketSize((-1));
      assertEquals(65535, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = PerformanceConfig.getPerformanceProfile((-1554), 62, (-1554));
      assertEquals((-101785538), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = PerformanceConfig.getCompressionThreshold(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = PerformanceConfig.getCompressionMode(2158);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = PerformanceConfig.getCompressionMode((-1851548137));
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      try { 
        PerformanceConfig.parseCompressionThreshold("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid compression threshold:  should be in [0..4095]
         //
         verifyException("com.github.relayjdbc.util.PerformanceConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      try { 
        PerformanceConfig.parseCompressionMode("=dLg");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid compression mode value: =dLg should be in [0..9]
         //
         verifyException("com.github.relayjdbc.util.PerformanceConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        PerformanceConfig.parseCompressionMode((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = PerformanceConfig.validateCompressionMode(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      try { 
        PerformanceConfig.validateCompressionMode(4095);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid compression mode value: 4095 should be in [0..9]
         //
         verifyException("com.github.relayjdbc.util.PerformanceConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      try { 
        PerformanceConfig.validateRowPacketSize(119117593);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid row packet size: 119117593 should be in [1..65535]
         //
         verifyException("com.github.relayjdbc.util.PerformanceConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      try { 
        PerformanceConfig.validateRowPacketSize(0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid row packet size: 0 should be in [1..65535]
         //
         verifyException("com.github.relayjdbc.util.PerformanceConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      try { 
        PerformanceConfig.validateCompressionThreshold(65535);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid compression threshold: 65535 should be in [0..4095]
         //
         verifyException("com.github.relayjdbc.util.PerformanceConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      try { 
        PerformanceConfig.validateCompressionThreshold((-163));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid compression threshold: -163 should be in [0..4095]
         //
         verifyException("com.github.relayjdbc.util.PerformanceConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      try { 
        PerformanceConfig.validateCompressionMode((-1440));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid compression mode value: -1440 should be in [0..9]
         //
         verifyException("com.github.relayjdbc.util.PerformanceConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = PerformanceConfig.parseCompressionMode("none");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = PerformanceConfig.parseCompressionMode("bestcompression");
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = PerformanceConfig.parseCompressionMode("bestspeed");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = PerformanceConfig.getPerformanceProfile(0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PerformanceConfig performanceConfig0 = new PerformanceConfig();
      assertEquals(4095, PerformanceConfig.MAX_COMPRESSION_THRESHOLD);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = PerformanceConfig.getRowPacketSize(62);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      try { 
        PerformanceConfig.parseRowPacketSize("8t)b6z5cq");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid row packet size: 8t)b6z5cq should be in [1..65535]
         //
         verifyException("com.github.relayjdbc.util.PerformanceConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      try { 
        PerformanceConfig.getCompressionMode(65535);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid compression mode value: 15 should be in [0..9]
         //
         verifyException("com.github.relayjdbc.util.PerformanceConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = PerformanceConfig.parseCompressionThreshold("0");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = PerformanceConfig.getCompressionThreshold(65535);
      assertEquals(4095, int0);
  }
}
