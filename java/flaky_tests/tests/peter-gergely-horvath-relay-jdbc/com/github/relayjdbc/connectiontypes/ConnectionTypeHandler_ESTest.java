/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 17:23:21 GMT 2022
 */

package com.github.relayjdbc.connectiontypes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.connectiontypes.SshPipeConnectionTypeHandler;
import com.github.relayjdbc.protocol.dataformat.DataFormat;
import java.sql.DriverPropertyInfo;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConnectionTypeHandler_ESTest extends ConnectionTypeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      String[] stringArray0 = sshPipeConnectionTypeHandler0.splitToUrlAndDataSourceName("R9|(EyiFzL.");
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      Properties properties0 = new Properties();
      DriverPropertyInfo[] driverPropertyInfoArray0 = sshPipeConnectionTypeHandler0.getJdbcDriverPropertyInfo("", properties0);
      assertEquals(4, driverPropertyInfoArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      String string0 = sshPipeConnectionTypeHandler0.getDataSourceName("#Y(j;(k:P%X$f");
      assertEquals("f", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      String string0 = sshPipeConnectionTypeHandler0.getDataSourceName("com.github.relayjdbc.connectiontypes.ConnectionTypeHandler");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      Properties properties0 = new Properties();
      DataFormat dataFormat0 = sshPipeConnectionTypeHandler0.getDataFormat("hIS", properties0);
      assertNotNull(dataFormat0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      boolean boolean0 = sshPipeConnectionTypeHandler0.canHandle("/BZ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      // Undeclared exception!
      try { 
        sshPipeConnectionTypeHandler0.splitToUrlAndDataSourceName("N5U~Ipo");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      // Undeclared exception!
      try { 
        sshPipeConnectionTypeHandler0.splitToUrlAndDataSourceName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.connectiontypes.ConnectionTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      // Undeclared exception!
      try { 
        sshPipeConnectionTypeHandler0.getJdbcDriverPropertyInfo("<", (Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.connectiontypes.SshPipeConnectionTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      // Undeclared exception!
      try { 
        sshPipeConnectionTypeHandler0.getDataSourceName("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      Properties properties0 = new Properties();
      try { 
        sshPipeConnectionTypeHandler0.getCommandSink((String) null, properties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.connectiontypes.ConnectionTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      // Undeclared exception!
      try { 
        sshPipeConnectionTypeHandler0.canHandle((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      // Undeclared exception!
      try { 
        sshPipeConnectionTypeHandler0.getDataSourceName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.connectiontypes.ConnectionTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      Properties properties0 = new Properties();
      // Undeclared exception!
      try { 
        sshPipeConnectionTypeHandler0.getCommandSink("com.github.relayjdbc.serial.CallingContext", properties0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/github/relayjdbc/protocol/transport/ssh/SshPipeTransport
         //
         verifyException("com.github.relayjdbc.connectiontypes.SshPipeConnectionTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      boolean boolean0 = sshPipeConnectionTypeHandler0.canHandle("sshpipe:eq");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SshPipeConnectionTypeHandler sshPipeConnectionTypeHandler0 = new SshPipeConnectionTypeHandler();
      try { 
        sshPipeConnectionTypeHandler0.getCommandSink("/BZ", (Properties) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
