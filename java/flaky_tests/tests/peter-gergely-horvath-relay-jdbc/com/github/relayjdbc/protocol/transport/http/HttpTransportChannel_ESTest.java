/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:36:36 GMT 2022
 */

package com.github.relayjdbc.protocol.transport.http;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.protocol.transport.http.HttpTransportChannel;
import com.github.relayjdbc.servlet.RequestEnhancer;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.net.UnknownServiceException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HttpTransportChannel_ESTest extends HttpTransportChannel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      HttpTransportChannel httpTransportChannel0 = new HttpTransportChannel(uRL0, (RequestEnhancer) null);
      // Undeclared exception!
      try { 
        httpTransportChannel0.open();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.protocol.transport.http.HttpTransportChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpTransportChannel httpTransportChannel0 = new HttpTransportChannel(uRL0, (RequestEnhancer) null);
      httpTransportChannel0.open();
      httpTransportChannel0.close();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpTransportChannel httpTransportChannel0 = new HttpTransportChannel(uRL0, (RequestEnhancer) null);
      httpTransportChannel0.close();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      HttpTransportChannel httpTransportChannel0 = new HttpTransportChannel(uRL0, (RequestEnhancer) null);
      // Undeclared exception!
      try { 
        httpTransportChannel0.getOutputStream();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Not connected
         //
         verifyException("com.github.relayjdbc.protocol.transport.http.HttpTransportChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpTransportChannel httpTransportChannel0 = new HttpTransportChannel(uRL0, (RequestEnhancer) null);
      httpTransportChannel0.open();
      try { 
        httpTransportChannel0.getOutputStream();
        fail("Expecting exception: UnknownServiceException");
      
      } catch(UnknownServiceException e) {
         //
         // protocol doesn't support output
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      RequestEnhancer requestEnhancer0 = mock(RequestEnhancer.class, new ViolatedAssumptionAnswer());
      HttpTransportChannel httpTransportChannel0 = new HttpTransportChannel(uRL0, requestEnhancer0);
      httpTransportChannel0.open();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "com.github.relayjdbc.servlet.kryo.KryoRequestModifier");
      HttpTransportChannel httpTransportChannel0 = new HttpTransportChannel(uRL0, (RequestEnhancer) null);
      httpTransportChannel0.open();
      InputStream inputStream0 = httpTransportChannel0.sendAndWaitForResponse();
      assertNotNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpTransportChannel httpTransportChannel0 = new HttpTransportChannel(uRL0, (RequestEnhancer) null);
      // Undeclared exception!
      try { 
        httpTransportChannel0.sendAndWaitForResponse();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Not connected
         //
         verifyException("com.github.relayjdbc.protocol.transport.http.HttpTransportChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpTransportChannel httpTransportChannel0 = new HttpTransportChannel(uRL0, (RequestEnhancer) null);
      httpTransportChannel0.open();
      try { 
        httpTransportChannel0.sendAndWaitForResponse();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unexpected server response: 404 Not Found
         //
         verifyException("com.github.relayjdbc.protocol.transport.http.HttpTransportChannel", e);
      }
  }
}
