/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 17:20:17 GMT 2022
 */

package com.github.relayjdbc.protocol.dataformat.kryo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.protocol.dataformat.kryo.KryoDataFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KryoDataFormat_ESTest extends KryoDataFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KryoDataFormat kryoDataFormat0 = new KryoDataFormat(2017, (-1));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KryoDataFormat kryoDataFormat0 = new KryoDataFormat(0, 0);
      // Undeclared exception!
      try { 
        kryoDataFormat0.getProtocolEncoder();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/esotericsoftware/kryo/io/Output
         //
         verifyException("com.github.relayjdbc.protocol.dataformat.kryo.KryoDataFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KryoDataFormat kryoDataFormat0 = new KryoDataFormat(1, 1);
      // Undeclared exception!
      try { 
        kryoDataFormat0.getProtocolDecoder();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/esotericsoftware/kryo/KryoException
         //
         verifyException("com.github.relayjdbc.protocol.dataformat.kryo.KryoDataFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KryoDataFormat kryoDataFormat0 = new KryoDataFormat(0, 0);
      kryoDataFormat0.setCompressionMode(0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      KryoDataFormat kryoDataFormat0 = new KryoDataFormat(0, 0);
      kryoDataFormat0.setCompressionThreshold(0);
  }
}
