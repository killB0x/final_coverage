/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 17:07:13 GMT 2022
 */

package com.github.relayjdbc.protocol.messages;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.relayjdbc.protocol.messages.ConnectionRequest;
import com.github.relayjdbc.serial.CallingContext;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConnectionRequest_ESTest extends ConnectionRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Properties properties0 = new Properties();
      CallingContext callingContext0 = new CallingContext();
      ConnectionRequest connectionRequest0 = new ConnectionRequest("lkln/8vqpgM4,,k", (Properties) null, properties0, callingContext0);
      assertEquals("lkln/8vqpgM4,,k", connectionRequest0.getDatabase());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CallingContext callingContext0 = new CallingContext();
      ConnectionRequest connectionRequest0 = new ConnectionRequest("com.github.relayjdbc.serial.CallingContext", (Properties) null, (Properties) null, callingContext0);
      Properties properties0 = connectionRequest0.getProps();
      assertNull(properties0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Properties properties0 = new Properties();
      CallingContext callingContext0 = new CallingContext();
      ConnectionRequest connectionRequest0 = new ConnectionRequest((String) null, properties0, properties0, callingContext0);
      String string0 = connectionRequest0.getDatabase();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Properties properties0 = new Properties();
      CallingContext callingContext0 = new CallingContext();
      ConnectionRequest connectionRequest0 = new ConnectionRequest("", properties0, properties0, callingContext0);
      String string0 = connectionRequest0.getDatabase();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Properties properties0 = new Properties();
      CallingContext callingContext0 = new CallingContext();
      ConnectionRequest connectionRequest0 = new ConnectionRequest("#jF&<9bE-LQG}Z!7^", properties0, properties0, callingContext0);
      CallingContext callingContext1 = connectionRequest0.getCtx();
      assertEquals("--- The orphaned object was created within the following calling context ---\ncom.github.relayjdbc.serial.CallingContext.<init>(CallingContext.java:16)\n<evosuite>.<evosuite>(<evosuite>)\n<evosuite>.<evosuite>(<evosuite>)\n<evosuite>.<evosuite>(<evosuite>)\n<evosuite>.<evosuite>(<evosuite>)\n<evosuite>.<evosuite>(<evosuite>)\n----------------------- End of calling context -----------------------------\n", callingContext1.getStackTrace());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CallingContext callingContext0 = new CallingContext();
      ConnectionRequest connectionRequest0 = new ConnectionRequest("--- The orphaned object was created within the following calling context ---", (Properties) null, (Properties) null, callingContext0);
      Properties properties0 = connectionRequest0.getClientInfo();
      assertNull(properties0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Properties properties0 = new Properties();
      ConnectionRequest connectionRequest0 = new ConnectionRequest("A`/X>^T^b_:a%", properties0, properties0, (CallingContext) null);
      String string0 = connectionRequest0.getDatabase();
      assertEquals("A`/X>^T^b_:a%", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Properties properties0 = new Properties();
      ConnectionRequest connectionRequest0 = new ConnectionRequest("A`/X>^T^b_:a%", properties0, properties0, (CallingContext) null);
      CallingContext callingContext0 = connectionRequest0.getCtx();
      assertNull(callingContext0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Properties properties0 = new Properties();
      CallingContext callingContext0 = new CallingContext();
      ConnectionRequest connectionRequest0 = new ConnectionRequest("!nW", properties0, properties0, callingContext0);
      Properties properties1 = connectionRequest0.getClientInfo();
      assertSame(properties1, properties0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Properties properties0 = new Properties();
      ConnectionRequest connectionRequest0 = new ConnectionRequest("A`/X>^T^b_:a%", properties0, properties0, (CallingContext) null);
      Properties properties1 = connectionRequest0.getProps();
      assertSame(properties1, properties0);
  }
}
