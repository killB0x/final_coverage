/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:13:11 GMT 2022
 */

package com.github.relayjdbc.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.cache.SimpleStatementParser;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleStatementParser_ESTest extends SimpleStatementParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleStatementParser simpleStatementParser0 = new SimpleStatementParser();
      Set set0 = simpleStatementParser0.getTablesOfSelectStatement("SELECT * FROM Test, Jolly WHERE H = O");
      assertEquals(2, set0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpleStatementParser simpleStatementParser0 = new SimpleStatementParser();
      // Undeclared exception!
      try { 
        simpleStatementParser0.getTablesOfSelectStatement((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.cache.SimpleStatementParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SimpleStatementParser simpleStatementParser0 = new SimpleStatementParser();
      // Undeclared exception!
      simpleStatementParser0.getTablesOfSelectStatement("SELECT JOIN BW8:H=K");
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SimpleStatementParser simpleStatementParser0 = new SimpleStatementParser();
      Set set0 = simpleStatementParser0.getTablesOfSelectStatement("");
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SimpleStatementParser.main((String[]) null);
  }
}
