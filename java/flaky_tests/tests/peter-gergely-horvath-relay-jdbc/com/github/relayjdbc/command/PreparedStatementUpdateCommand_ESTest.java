/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:44:21 GMT 2022
 */

package com.github.relayjdbc.command;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.command.ConnectionContext;
import com.github.relayjdbc.command.PreparedStatementUpdateCommand;
import com.github.relayjdbc.parameters.PreparedStatementParameter;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PreparedStatementUpdateCommand_ESTest extends PreparedStatementUpdateCommand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PreparedStatementUpdateCommand preparedStatementUpdateCommand0 = new PreparedStatementUpdateCommand();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("@F+,[[Olq]__EOl", false);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      preparedStatementUpdateCommand0.writeExternal(objectOutputStream0);
      assertEquals("PreparedStatementUpdateCommand", preparedStatementUpdateCommand0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PreparedStatementUpdateCommand preparedStatementUpdateCommand0 = new PreparedStatementUpdateCommand();
      PreparedStatementParameter[] preparedStatementParameterArray0 = preparedStatementUpdateCommand0.getParams();
      assertNull(preparedStatementParameterArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PreparedStatementParameter[] preparedStatementParameterArray0 = new PreparedStatementParameter[0];
      PreparedStatementUpdateCommand preparedStatementUpdateCommand0 = new PreparedStatementUpdateCommand(preparedStatementParameterArray0);
      PreparedStatementParameter[] preparedStatementParameterArray1 = preparedStatementUpdateCommand0.getParams();
      assertSame(preparedStatementParameterArray0, preparedStatementParameterArray1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PreparedStatementUpdateCommand preparedStatementUpdateCommand0 = new PreparedStatementUpdateCommand();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        preparedStatementUpdateCommand0.execute(object0, (ConnectionContext) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.sql.PreparedStatement (java.lang.Object is in module java.base of loader 'bootstrap'; java.sql.PreparedStatement is in module java.sql of loader 'platform')
         //
         verifyException("com.github.relayjdbc.command.PreparedStatementUpdateCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PreparedStatementParameter[] preparedStatementParameterArray0 = new PreparedStatementParameter[9];
      PreparedStatementUpdateCommand preparedStatementUpdateCommand0 = new PreparedStatementUpdateCommand(preparedStatementParameterArray0);
      PreparedStatementParameter[] preparedStatementParameterArray1 = preparedStatementUpdateCommand0.getParams();
      assertSame(preparedStatementParameterArray1, preparedStatementParameterArray0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PreparedStatementParameter[] preparedStatementParameterArray0 = new PreparedStatementParameter[6];
      PreparedStatementUpdateCommand preparedStatementUpdateCommand0 = new PreparedStatementUpdateCommand(preparedStatementParameterArray0);
      // Undeclared exception!
      try { 
        preparedStatementUpdateCommand0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.command.PreparedStatementUpdateCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PreparedStatementParameter[] preparedStatementParameterArray0 = new PreparedStatementParameter[1];
      PreparedStatementUpdateCommand preparedStatementUpdateCommand0 = new PreparedStatementUpdateCommand(preparedStatementParameterArray0);
      ConnectionContext connectionContext0 = mock(ConnectionContext.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        preparedStatementUpdateCommand0.execute((Object) null, connectionContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.command.PreparedStatementUpdateCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PreparedStatementUpdateCommand preparedStatementUpdateCommand0 = new PreparedStatementUpdateCommand();
      String string0 = preparedStatementUpdateCommand0.toString();
      assertEquals("PreparedStatementUpdateCommand", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PreparedStatementUpdateCommand preparedStatementUpdateCommand0 = new PreparedStatementUpdateCommand();
      // Undeclared exception!
      try { 
        preparedStatementUpdateCommand0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.command.PreparedStatementUpdateCommand", e);
      }
  }
}
