/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 17:21:57 GMT 2022
 */

package com.github.relayjdbc.command;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.command.ConnectionContext;
import com.github.relayjdbc.command.StatementUpdateCommand;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StatementUpdateCommand_ESTest extends StatementUpdateCommand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StatementUpdateCommand statementUpdateCommand0 = new StatementUpdateCommand("StatementUpdateCommand: ");
      MockFile mockFile0 = new MockFile("}f<p", "StatementUpdateCommand: ");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      statementUpdateCommand0.writeExternal(objectOutputStream0);
      assertEquals("StatementUpdateCommand: ", statementUpdateCommand0.getValue());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StatementUpdateCommand statementUpdateCommand0 = new StatementUpdateCommand();
      String string0 = statementUpdateCommand0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StatementUpdateCommand statementUpdateCommand0 = new StatementUpdateCommand("SL^%nhT[<o");
      String string0 = statementUpdateCommand0.getValue();
      assertEquals("SL^%nhT[<o", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StatementUpdateCommand statementUpdateCommand0 = new StatementUpdateCommand();
      // Undeclared exception!
      try { 
        statementUpdateCommand0.execute((Object) null, (ConnectionContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.command.StatementUpdateCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StatementUpdateCommand statementUpdateCommand0 = new StatementUpdateCommand();
      // Undeclared exception!
      try { 
        statementUpdateCommand0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.command.StatementUpdateCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StatementUpdateCommand statementUpdateCommand0 = new StatementUpdateCommand("");
      String string0 = statementUpdateCommand0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StatementUpdateCommand statementUpdateCommand0 = new StatementUpdateCommand();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        statementUpdateCommand0.execute(object0, (ConnectionContext) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.sql.Statement (java.lang.Object is in module java.base of loader 'bootstrap'; java.sql.Statement is in module java.sql of loader 'platform')
         //
         verifyException("com.github.relayjdbc.command.StatementUpdateCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StatementUpdateCommand statementUpdateCommand0 = new StatementUpdateCommand();
      String string0 = statementUpdateCommand0.toString();
      assertEquals("StatementUpdateCommand: null", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      StatementUpdateCommand statementUpdateCommand0 = new StatementUpdateCommand();
      // Undeclared exception!
      try { 
        statementUpdateCommand0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.command.StatementUpdateCommand", e);
      }
  }
}
