/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 17:16:38 GMT 2022
 */

package com.github.relayjdbc.command;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.command.ConnectionContext;
import com.github.relayjdbc.command.ConnectionCreateStatementCommand;
import java.io.DataOutputStream;
import java.io.File;
import java.io.ObjectInput;
import java.io.ObjectOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConnectionCreateStatementCommand_ESTest extends ConnectionCreateStatementCommand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConnectionCreateStatementCommand connectionCreateStatementCommand0 = ConnectionCreateStatementCommand.INSTANCE;
      // Undeclared exception!
      try { 
        connectionCreateStatementCommand0.execute((Object) null, (ConnectionContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.command.ConnectionCreateStatementCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConnectionCreateStatementCommand connectionCreateStatementCommand0 = ConnectionCreateStatementCommand.INSTANCE;
      connectionCreateStatementCommand0.readExternal((ObjectInput) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConnectionCreateStatementCommand connectionCreateStatementCommand0 = ConnectionCreateStatementCommand.INSTANCE;
      ConnectionContext connectionContext0 = mock(ConnectionContext.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        connectionCreateStatementCommand0.execute("C`|PcX", connectionContext0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class java.sql.Connection (java.lang.String is in module java.base of loader 'bootstrap'; java.sql.Connection is in module java.sql of loader 'platform')
         //
         verifyException("com.github.relayjdbc.command.ConnectionCreateStatementCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConnectionCreateStatementCommand connectionCreateStatementCommand0 = ConnectionCreateStatementCommand.INSTANCE;
      File file0 = MockFile.createTempFile("_?PC&wQB TpPb87E7", "_?PC&wQB TpPb87E7");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(dataOutputStream0);
      connectionCreateStatementCommand0.writeExternal(objectOutputStream0);
  }
}
