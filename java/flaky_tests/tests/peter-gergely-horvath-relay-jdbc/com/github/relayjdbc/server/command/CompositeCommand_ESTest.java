/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:04:35 GMT 2022
 */

package com.github.relayjdbc.server.command;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.command.Command;
import com.github.relayjdbc.command.ConnectionContext;
import com.github.relayjdbc.command.ConnectionGetMetaDataCommand;
import com.github.relayjdbc.command.PreparedStatementQueryCommand;
import com.github.relayjdbc.command.PreparedStatementUpdateCommand;
import com.github.relayjdbc.command.StatementSetFetchSizeCommand;
import com.github.relayjdbc.command.StatementUpdateCommand;
import com.github.relayjdbc.serial.UIDEx;
import com.github.relayjdbc.server.command.CompositeCommand;
import java.io.ByteArrayOutputStream;
import java.io.EOFException;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.sql.SQLException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CompositeCommand_ESTest extends CompositeCommand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      CompositeCommand compositeCommand0 = new CompositeCommand();
      UIDEx uIDEx0 = new UIDEx();
      PreparedStatementQueryCommand preparedStatementQueryCommand0 = new PreparedStatementQueryCommand();
      UIDEx uIDEx1 = compositeCommand0.add(uIDEx0, preparedStatementQueryCommand0);
      UIDEx uIDEx2 = compositeCommand0.add(uIDEx1, preparedStatementQueryCommand0);
      uIDEx0.copyFrom(uIDEx2);
      try { 
        compositeCommand0.execute(mockPrintStream0, (ConnectionContext) null);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Invalid target UIDEx: -2
         //
         verifyException("com.github.relayjdbc.server.command.CompositeCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompositeCommand compositeCommand0 = new CompositeCommand();
      PreparedStatementUpdateCommand preparedStatementUpdateCommand0 = new PreparedStatementUpdateCommand();
      Long long0 = new Long(0L);
      UIDEx uIDEx0 = new UIDEx(long0, 599, 599);
      compositeCommand0.add(uIDEx0, preparedStatementUpdateCommand0);
      // Undeclared exception!
      try { 
        compositeCommand0.execute((Object) null, (ConnectionContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.server.command.CompositeCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PreparedStatementUpdateCommand preparedStatementUpdateCommand0 = new PreparedStatementUpdateCommand();
      CompositeCommand compositeCommand0 = new CompositeCommand();
      Long long0 = new Long((-3782L));
      UIDEx uIDEx0 = new UIDEx(long0, (-1040), 2408);
      // Undeclared exception!
      try { 
        compositeCommand0.add(uIDEx0, preparedStatementUpdateCommand0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid reg: -3782
         //
         verifyException("com.github.relayjdbc.server.command.CompositeCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompositeCommand compositeCommand0 = new CompositeCommand();
      UIDEx uIDEx0 = new UIDEx(0, (-1));
      PreparedStatementUpdateCommand preparedStatementUpdateCommand0 = new PreparedStatementUpdateCommand();
      compositeCommand0.add(uIDEx0, preparedStatementUpdateCommand0);
      int int0 = compositeCommand0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Command[] commandArray0 = new Command[9];
      CompositeCommand compositeCommand0 = new CompositeCommand(commandArray0, (UIDEx[]) null);
      UIDEx[] uIDExArray0 = compositeCommand0.getUIDExs();
      assertNull(uIDExArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Command[] commandArray0 = new Command[1];
      UIDEx[] uIDExArray0 = new UIDEx[0];
      CompositeCommand compositeCommand0 = new CompositeCommand(commandArray0, uIDExArray0);
      UIDEx[] uIDExArray1 = compositeCommand0.getUIDExs();
      assertSame(uIDExArray1, uIDExArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompositeCommand compositeCommand0 = new CompositeCommand();
      Command[] commandArray0 = compositeCommand0.getCommands();
      assertEquals(5, commandArray0.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompositeCommand compositeCommand0 = new CompositeCommand();
      // Undeclared exception!
      try { 
        compositeCommand0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.server.command.CompositeCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Command[] commandArray0 = new Command[1];
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(byteArrayOutputStream0);
      UIDEx[] uIDExArray0 = new UIDEx[0];
      CompositeCommand compositeCommand0 = new CompositeCommand(commandArray0, uIDExArray0);
      // Undeclared exception!
      try { 
        compositeCommand0.writeExternal(objectOutputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.github.relayjdbc.server.command.CompositeCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompositeCommand compositeCommand0 = new CompositeCommand();
      // Undeclared exception!
      try { 
        compositeCommand0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.server.command.CompositeCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompositeCommand compositeCommand0 = new CompositeCommand();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("_`<q]zy%I3");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("_`<q]zy%I3");
      ObjectInputStream objectInputStream0 = new ObjectInputStream(mockFileInputStream0);
      try { 
        compositeCommand0.readExternal(objectInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Command[] commandArray0 = new Command[1];
      UIDEx[] uIDExArray0 = new UIDEx[0];
      CompositeCommand compositeCommand0 = new CompositeCommand(commandArray0, uIDExArray0);
      // Undeclared exception!
      try { 
        compositeCommand0.execute((Object) null, (ConnectionContext) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.github.relayjdbc.server.command.CompositeCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompositeCommand compositeCommand0 = null;
      try {
        compositeCommand0 = new CompositeCommand((Command[]) null, (UIDEx[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.server.command.CompositeCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompositeCommand compositeCommand0 = new CompositeCommand();
      UIDEx uIDEx0 = new UIDEx(0, (-1));
      PreparedStatementUpdateCommand preparedStatementUpdateCommand0 = new PreparedStatementUpdateCommand();
      UIDEx uIDEx1 = compositeCommand0.add(uIDEx0, preparedStatementUpdateCommand0);
      UIDEx[] uIDExArray0 = new UIDEx[6];
      uIDExArray0[0] = uIDEx1;
      compositeCommand0.updateResultUIDEx(uIDExArray0);
      assertEquals(1, compositeCommand0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompositeCommand compositeCommand0 = new CompositeCommand();
      UIDEx uIDEx0 = new UIDEx(0, (-1));
      PreparedStatementUpdateCommand preparedStatementUpdateCommand0 = new PreparedStatementUpdateCommand();
      compositeCommand0.add(uIDEx0, preparedStatementUpdateCommand0);
      Object[] objectArray0 = new Object[0];
      compositeCommand0.updateResultUIDEx(objectArray0);
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompositeCommand compositeCommand0 = new CompositeCommand();
      UIDEx uIDEx0 = new UIDEx((-231), (-2210));
      ConnectionGetMetaDataCommand connectionGetMetaDataCommand0 = ConnectionGetMetaDataCommand.INSTANCE;
      compositeCommand0.add(uIDEx0, connectionGetMetaDataCommand0);
      Object[] objectArray0 = new Object[7];
      compositeCommand0.updateResultUIDEx(objectArray0);
      assertEquals(1, compositeCommand0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Command[] commandArray0 = new Command[0];
      UIDEx[] uIDExArray0 = new UIDEx[2];
      CompositeCommand compositeCommand0 = new CompositeCommand(commandArray0, uIDExArray0);
      compositeCommand0.updateResultUIDEx(commandArray0);
      assertEquals(0, compositeCommand0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompositeCommand compositeCommand0 = new CompositeCommand();
      // Undeclared exception!
      try { 
        compositeCommand0.updateResultUIDEx((Object[]) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // class com.github.relayjdbc.server.command.CompositeCommand nevere returns null result
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      CompositeCommand compositeCommand0 = new CompositeCommand();
      UIDEx uIDEx0 = new UIDEx();
      PreparedStatementQueryCommand preparedStatementQueryCommand0 = new PreparedStatementQueryCommand();
      UIDEx uIDEx1 = compositeCommand0.add(uIDEx0, preparedStatementQueryCommand0);
      uIDEx0.copyFrom(uIDEx1);
      try { 
        compositeCommand0.execute(mockPrintStream0, (ConnectionContext) null);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Invalid target UIDEx: -1
         //
         verifyException("com.github.relayjdbc.server.command.CompositeCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StatementUpdateCommand statementUpdateCommand0 = new StatementUpdateCommand();
      Command[] commandArray0 = new Command[5];
      UIDEx[] uIDExArray0 = new UIDEx[2];
      CompositeCommand compositeCommand0 = new CompositeCommand(commandArray0, uIDExArray0);
      // Undeclared exception!
      try { 
        compositeCommand0.execute(statementUpdateCommand0, (ConnectionContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.server.command.CompositeCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompositeCommand compositeCommand0 = new CompositeCommand();
      UIDEx uIDEx0 = new UIDEx((-776));
      StatementUpdateCommand statementUpdateCommand0 = new StatementUpdateCommand();
      compositeCommand0.add(uIDEx0, compositeCommand0);
      // Undeclared exception!
      try { 
        compositeCommand0.execute(statementUpdateCommand0, (ConnectionContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.server.command.CompositeCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompositeCommand compositeCommand0 = new CompositeCommand();
      Object object0 = compositeCommand0.execute((Object) null, (ConnectionContext) null);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompositeCommand compositeCommand0 = new CompositeCommand();
      UIDEx uIDEx0 = new UIDEx(0, (-1));
      PreparedStatementUpdateCommand preparedStatementUpdateCommand0 = new PreparedStatementUpdateCommand();
      compositeCommand0.add(uIDEx0, preparedStatementUpdateCommand0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(" parameters\n");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      compositeCommand0.writeExternal(objectOutputStream0);
      assertEquals(1, compositeCommand0.size());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Command[] commandArray0 = new Command[0];
      UIDEx[] uIDExArray0 = new UIDEx[2];
      UIDEx uIDEx0 = new UIDEx(7);
      CompositeCommand compositeCommand0 = new CompositeCommand(commandArray0, uIDExArray0);
      StatementSetFetchSizeCommand statementSetFetchSizeCommand0 = new StatementSetFetchSizeCommand();
      // Undeclared exception!
      try { 
        compositeCommand0.add(uIDEx0, statementSetFetchSizeCommand0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.server.command.CompositeCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StatementUpdateCommand statementUpdateCommand0 = new StatementUpdateCommand("");
      UIDEx uIDEx0 = new UIDEx(1486, 1486);
      CompositeCommand compositeCommand0 = new CompositeCommand();
      UIDEx uIDEx1 = compositeCommand0.add(uIDEx0, statementUpdateCommand0);
      CompositeCommand compositeCommand1 = new CompositeCommand();
      // Undeclared exception!
      try { 
        compositeCommand1.add(uIDEx1, compositeCommand0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid reg: -1
         //
         verifyException("com.github.relayjdbc.server.command.CompositeCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompositeCommand compositeCommand0 = new CompositeCommand();
      int int0 = compositeCommand0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompositeCommand compositeCommand0 = new CompositeCommand();
      UIDEx[] uIDExArray0 = compositeCommand0.getUIDExs();
      assertEquals(0, compositeCommand0.size());
      assertEquals(5, uIDExArray0.length);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Command[] commandArray0 = new Command[0];
      UIDEx[] uIDExArray0 = new UIDEx[2];
      CompositeCommand compositeCommand0 = new CompositeCommand(commandArray0, uIDExArray0);
      Command[] commandArray1 = compositeCommand0.getCommands();
      assertSame(commandArray1, commandArray0);
  }
}
