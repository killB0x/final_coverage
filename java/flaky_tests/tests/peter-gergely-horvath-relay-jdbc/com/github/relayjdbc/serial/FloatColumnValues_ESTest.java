/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:58:10 GMT 2022
 */

package com.github.relayjdbc.serial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.serial.FloatColumnValues;
import java.math.BigDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FloatColumnValues_ESTest extends FloatColumnValues_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      float[] floatArray0 = new float[7];
      int[] intArray0 = new int[0];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, intArray0);
      Object object0 = floatColumnValues0.getObject(0);
      assertEquals(0.0F, object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      float[] floatArray0 = new float[8];
      int[] intArray0 = new int[2];
      intArray0[0] = (-171);
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, intArray0);
      boolean boolean0 = floatColumnValues0.isNull(31);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(0);
      floatColumnValues0.setIsNull(0);
      floatColumnValues0.setIsNull(0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      float[] floatArray0 = new float[7];
      int[] intArray0 = new int[8];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, intArray0);
      // Undeclared exception!
      try { 
        floatColumnValues0.setIsNull((-96));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -3 out of bounds for length 8
         //
         verifyException("com.github.relayjdbc.serial.FloatColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      float[] floatArray0 = new float[5];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, (int[]) null);
      int[] intArray0 = floatColumnValues0.getNullFlags();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      float[] floatArray0 = new float[9];
      int[] intArray0 = new int[0];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, intArray0);
      int[] intArray1 = floatColumnValues0.getNullFlags();
      assertEquals(0, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      float[] floatArray0 = new float[3];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, (int[]) null);
      float float0 = floatColumnValues0.getFloat(0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      float[] floatArray0 = new float[6];
      floatArray0[1] = (float) 1;
      int[] intArray0 = new int[0];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, intArray0);
      float float0 = floatColumnValues0.getFloat(1);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) (-2745);
      int[] intArray0 = new int[4];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, intArray0);
      float float0 = floatColumnValues0.getFloat(0);
      assertEquals((-2745.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      float[] floatArray0 = new float[3];
      floatArray0[1] = (float) 5;
      int[] intArray0 = new int[7];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, intArray0);
      double double0 = floatColumnValues0.getDouble(1);
      assertEquals(5.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      float[] floatArray0 = new float[9];
      floatArray0[4] = (-1.0F);
      int[] intArray0 = new int[9];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, intArray0);
      double double0 = floatColumnValues0.getDouble(4);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(600);
      BigDecimal bigDecimal0 = floatColumnValues0.getBigDecimal(0);
      assertEquals((byte)0, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      float[] floatArray0 = new float[6];
      floatArray0[0] = 1.0F;
      int[] intArray0 = new int[5];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, intArray0);
      BigDecimal bigDecimal0 = floatColumnValues0.getBigDecimal(0);
      assertEquals((byte)1, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      float[] floatArray0 = new float[8];
      floatArray0[2] = (-1.0F);
      int[] intArray0 = new int[8];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, intArray0);
      BigDecimal bigDecimal0 = floatColumnValues0.getBigDecimal(2);
      assertEquals((byte) (-1), bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      float[] floatArray0 = new float[0];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, (int[]) null);
      // Undeclared exception!
      try { 
        floatColumnValues0.setIsNull(1465);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.serial.FloatColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(0);
      // Undeclared exception!
      try { 
        floatColumnValues0.setFloat(1149, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1149 out of bounds for length 0
         //
         verifyException("com.github.relayjdbc.serial.FloatColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      float[] floatArray0 = new float[0];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, (int[]) null);
      // Undeclared exception!
      try { 
        floatColumnValues0.isNull(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.serial.FloatColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(1223);
      // Undeclared exception!
      try { 
        floatColumnValues0.isNull((-663));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -21 out of bounds for length 39
         //
         verifyException("com.github.relayjdbc.serial.FloatColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(249);
      // Undeclared exception!
      try { 
        floatColumnValues0.getString(249);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 249 out of bounds for length 249
         //
         verifyException("com.github.relayjdbc.serial.FloatColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(0);
      // Undeclared exception!
      try { 
        floatColumnValues0.getObject(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.github.relayjdbc.serial.FloatColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(780);
      // Undeclared exception!
      try { 
        floatColumnValues0.getDouble(780);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 780 out of bounds for length 780
         //
         verifyException("com.github.relayjdbc.serial.FloatColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[0];
      FloatColumnValues floatColumnValues0 = null;
      try {
        floatColumnValues0 = new FloatColumnValues((float[]) null, intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.serial.FloatColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FloatColumnValues floatColumnValues0 = null;
      try {
        floatColumnValues0 = new FloatColumnValues((-96));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -96
         //
         verifyException("com.github.relayjdbc.serial.FloatColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(0);
      boolean boolean0 = floatColumnValues0.isNull(0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(0);
      Object object0 = floatColumnValues0.getValues();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(1407);
      // Undeclared exception!
      try { 
        floatColumnValues0.getBigDecimal(1407);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1407 out of bounds for length 1407
         //
         verifyException("com.github.relayjdbc.serial.FloatColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      float[] floatArray0 = new float[7];
      int[] intArray0 = new int[7];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, intArray0);
      floatColumnValues0.setFloat(5, 0.0F);
      assertArrayEquals(new float[] {0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      float[] floatArray0 = new float[9];
      int[] intArray0 = new int[9];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, intArray0);
      double double0 = floatColumnValues0.getDouble(4);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(1);
      String string0 = floatColumnValues0.getString(0);
      assertEquals("0.0", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(0);
      floatColumnValues0.setIsNull(0);
      boolean boolean0 = floatColumnValues0.isNull(0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(31);
      int[] intArray0 = floatColumnValues0.getNullFlags();
      assertEquals(1, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      float[] floatArray0 = new float[8];
      int[] intArray0 = new int[2];
      FloatColumnValues floatColumnValues0 = new FloatColumnValues(floatArray0, intArray0);
      // Undeclared exception!
      try { 
        floatColumnValues0.getFloat((-171));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -171 out of bounds for length 8
         //
         verifyException("com.github.relayjdbc.serial.FloatColumnValues", e);
      }
  }
}
