/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:54:27 GMT 2022
 */

package com.github.relayjdbc.serial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.serial.IntegerColumnValues;
import java.math.BigDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntegerColumnValues_ESTest extends IntegerColumnValues_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-2525);
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      boolean boolean0 = integerColumnValues0.isNull(31);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 2814;
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      integerColumnValues0.setIsNull(1);
      assertArrayEquals(new int[] {2814, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[4];
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      Object object0 = integerColumnValues0.getObject(0);
      assertEquals(0, object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[4];
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      String string0 = integerColumnValues0.getString(0);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[6];
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, (int[]) null);
      int[] intArray1 = integerColumnValues0.getNullFlags();
      assertNull(intArray1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(2814);
      int[] intArray0 = integerColumnValues0.getNullFlags();
      assertEquals(88, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      long long0 = integerColumnValues0.getLong(0);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = (-2645);
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      long long0 = integerColumnValues0.getLong(0);
      assertEquals((-2645L), long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(131072);
      int int0 = integerColumnValues0.getInt(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[4] = 108;
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      int int0 = integerColumnValues0.getInt(4);
      assertEquals(108, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[1] = Integer.MIN_VALUE;
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      int int0 = integerColumnValues0.getInt(1);
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[2] = 1;
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      float float0 = integerColumnValues0.getFloat(2);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = (-1);
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      float float0 = integerColumnValues0.getFloat(0);
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(2);
      integerColumnValues0.setInt(1, 231);
      double double0 = integerColumnValues0.getDouble(1);
      assertEquals(231.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = (-1546);
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      double double0 = integerColumnValues0.getDouble(0);
      assertEquals((-1546.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(2814);
      BigDecimal bigDecimal0 = integerColumnValues0.getBigDecimal(828);
      assertEquals((short)0, bigDecimal0.shortValue());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 1147;
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      BigDecimal bigDecimal0 = integerColumnValues0.getBigDecimal(0);
      assertEquals((short)1147, bigDecimal0.shortValue());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[2] = (-1640);
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      BigDecimal bigDecimal0 = integerColumnValues0.getBigDecimal(2);
      assertEquals((byte) (-104), bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(0);
      // Undeclared exception!
      try { 
        integerColumnValues0.setIsNull((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 1
         //
         verifyException("com.github.relayjdbc.serial.IntegerColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[3];
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, (int[]) null);
      // Undeclared exception!
      try { 
        integerColumnValues0.isNull(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.serial.IntegerColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[5];
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      // Undeclared exception!
      try { 
        integerColumnValues0.isNull((-1546));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -49 out of bounds for length 5
         //
         verifyException("com.github.relayjdbc.serial.IntegerColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(0);
      // Undeclared exception!
      try { 
        integerColumnValues0.getLong(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.github.relayjdbc.serial.IntegerColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(0);
      // Undeclared exception!
      try { 
        integerColumnValues0.getInt(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.github.relayjdbc.serial.IntegerColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(2814);
      // Undeclared exception!
      try { 
        integerColumnValues0.getFloat(2814);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2814 out of bounds for length 2814
         //
         verifyException("com.github.relayjdbc.serial.IntegerColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(2814);
      // Undeclared exception!
      try { 
        integerColumnValues0.getDouble(2814);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2814 out of bounds for length 2814
         //
         verifyException("com.github.relayjdbc.serial.IntegerColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = null;
      try {
        integerColumnValues0 = new IntegerColumnValues((int[]) null, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.serial.IntegerColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = null;
      try {
        integerColumnValues0 = new IntegerColumnValues((-1389));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1389
         //
         verifyException("com.github.relayjdbc.serial.IntegerColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(2814);
      boolean boolean0 = integerColumnValues0.isNull(2814);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(2814);
      float float0 = integerColumnValues0.getFloat(835);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[9];
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      long long0 = integerColumnValues0.getLong(0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(2158);
      // Undeclared exception!
      try { 
        integerColumnValues0.getBigDecimal(2158);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2158 out of bounds for length 2158
         //
         verifyException("com.github.relayjdbc.serial.IntegerColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(2814);
      Object object0 = integerColumnValues0.getValues();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      int[] intArray1 = integerColumnValues0.getNullFlags();
      assertEquals(0, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(0);
      // Undeclared exception!
      try { 
        integerColumnValues0.getString(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.github.relayjdbc.serial.IntegerColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(0);
      // Undeclared exception!
      try { 
        integerColumnValues0.getObject(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.github.relayjdbc.serial.IntegerColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int[] intArray0 = new int[5];
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(intArray0, intArray0);
      double double0 = integerColumnValues0.getDouble(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(2);
      // Undeclared exception!
      try { 
        integerColumnValues0.setInt(2, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2 out of bounds for length 2
         //
         verifyException("com.github.relayjdbc.serial.IntegerColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IntegerColumnValues integerColumnValues0 = new IntegerColumnValues(34);
      integerColumnValues0.setIsNull(34);
      boolean boolean0 = integerColumnValues0.isNull(34);
      assertTrue(boolean0);
  }
}
