/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 16:42:13 GMT 2022
 */

package com.github.relayjdbc.serial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.serial.BooleanColumnValues;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BooleanColumnValues_ESTest extends BooleanColumnValues_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues(1687);
      booleanColumnValues0.setBoolean(414, true);
      booleanColumnValues0.setBoolean(414, true);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-1278);
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues(intArray0, intArray0, 31);
      boolean boolean0 = booleanColumnValues0.isNull(31);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 6;
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues(intArray0, intArray0, (-802));
      booleanColumnValues0.setIsNull(2);
      assertArrayEquals(new int[] {6}, intArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues((int[]) null, (int[]) null, 1);
      Object object0 = booleanColumnValues0.getValues();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues((int[]) null, (int[]) null, 0);
      int[] intArray0 = booleanColumnValues0.getNullFlags();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[0];
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues(intArray0, intArray1, 6);
      int[] intArray2 = booleanColumnValues0.getNullFlags();
      assertEquals(0, intArray2.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-936);
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues(intArray0, intArray0, 31);
      boolean boolean0 = booleanColumnValues0.getBoolean(31);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues((int[]) null, (int[]) null, (-1757));
      // Undeclared exception!
      try { 
        booleanColumnValues0.setIsNull((-1757));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.serial.BooleanColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues((-1));
      // Undeclared exception!
      try { 
        booleanColumnValues0.setIsNull((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("com.github.relayjdbc.serial.BooleanColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues((int[]) null, (int[]) null, 1);
      // Undeclared exception!
      try { 
        booleanColumnValues0.setBoolean(1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.serial.BooleanColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues((-6));
      // Undeclared exception!
      try { 
        booleanColumnValues0.setBoolean((-6), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("com.github.relayjdbc.serial.BooleanColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues((int[]) null, (int[]) null, 5);
      // Undeclared exception!
      try { 
        booleanColumnValues0.isNull(5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.serial.BooleanColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues((-1));
      // Undeclared exception!
      try { 
        booleanColumnValues0.isNull((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("com.github.relayjdbc.serial.BooleanColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues((-26));
      // Undeclared exception!
      try { 
        booleanColumnValues0.getObject((-26));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("com.github.relayjdbc.serial.BooleanColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues((int[]) null, (int[]) null, 4000);
      // Undeclared exception!
      try { 
        booleanColumnValues0.getBoolean(4000);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.serial.BooleanColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues((-2));
      // Undeclared exception!
      try { 
        booleanColumnValues0.getBoolean((-2));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("com.github.relayjdbc.serial.BooleanColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = null;
      try {
        booleanColumnValues0 = new BooleanColumnValues((-909));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -28
         //
         verifyException("com.github.relayjdbc.serial.BooleanColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[6];
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues(intArray0, intArray0, 0);
      boolean boolean0 = booleanColumnValues0.getBoolean(149);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues(14);
      booleanColumnValues0.setBoolean(14, true);
      Object object0 = booleanColumnValues0.getObject(14);
      assertEquals(true, object0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues(6);
      booleanColumnValues0.setBoolean(6, false);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[1] = (-1137);
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues(intArray0, intArray0, 31);
      boolean boolean0 = booleanColumnValues0.isNull(32);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues(832);
      boolean boolean0 = booleanColumnValues0.isNull(832);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues((int[]) null, (int[]) null, 1192);
      // Undeclared exception!
      try { 
        booleanColumnValues0.getObject(1192);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.serial.BooleanColumnValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues(6);
      int[] intArray0 = booleanColumnValues0.getNullFlags();
      assertEquals(1, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[6];
      BooleanColumnValues booleanColumnValues0 = new BooleanColumnValues(intArray0, intArray0, 0);
      Object object0 = booleanColumnValues0.getValues();
      assertSame(intArray0, object0);
  }
}
