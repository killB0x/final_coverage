/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 17:21:14 GMT 2022
 */

package com.github.relayjdbc.serial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.relayjdbc.serial.SerialStruct;
import java.io.ByteArrayOutputStream;
import java.io.NotSerializableException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.sql.Struct;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SerialStruct_ESTest extends SerialStruct_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SerialStruct serialStruct0 = new SerialStruct();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(byteArrayOutputStream0);
      serialStruct0.writeExternal(objectOutputStream0);
      assertNull(serialStruct0.getSQLTypeName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SerialStruct serialStruct0 = new SerialStruct();
      String string0 = serialStruct0.getSQLTypeName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      SerialStruct serialStruct0 = new SerialStruct("}h>NA?H:1U~@L@y", objectArray0);
      String string0 = serialStruct0.getSQLTypeName();
      assertEquals("}h>NA?H:1U~@L@y", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      SerialStruct serialStruct0 = new SerialStruct("getAttributes(Map)", objectArray0);
      Object[] objectArray1 = serialStruct0.getAttributes();
      assertSame(objectArray1, objectArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      objectArray0[0] = object0;
      SerialStruct serialStruct0 = new SerialStruct(")", objectArray0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(")");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      try { 
        serialStruct0.writeExternal(objectOutputStream0);
        fail("Expecting exception: NotSerializableException");
      
      } catch(NotSerializableException e) {
         //
         // java.lang.Object
         //
         verifyException("java.io.ObjectOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SerialStruct serialStruct0 = null;
      try {
        serialStruct0 = new SerialStruct((Struct) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.serial.SerialStruct", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      SerialStruct serialStruct0 = new SerialStruct("", objectArray0);
      String string0 = serialStruct0.getSQLTypeName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SerialStruct serialStruct0 = new SerialStruct();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        serialStruct0.getAttributes((Map) hashMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // getAttributes(Map)
         //
         verifyException("com.github.relayjdbc.serial.SerialStruct", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SerialStruct serialStruct0 = new SerialStruct();
      // Undeclared exception!
      try { 
        serialStruct0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.serial.SerialStruct", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SerialStruct serialStruct0 = new SerialStruct();
      // Undeclared exception!
      try { 
        serialStruct0.readExternal((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.relayjdbc.serial.SerialStruct", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SerialStruct serialStruct0 = new SerialStruct("{x)f}`,g7WcxEpj", (Object[]) null);
      Object[] objectArray0 = serialStruct0.getAttributes();
      assertNull(objectArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SerialStruct serialStruct0 = new SerialStruct();
      SerialStruct serialStruct1 = new SerialStruct(serialStruct0);
      assertNull(serialStruct1.getSQLTypeName());
  }
}
