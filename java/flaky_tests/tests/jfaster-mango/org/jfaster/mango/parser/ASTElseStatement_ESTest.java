/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 00:52:14 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.binding.InvocationContext;
import org.jfaster.mango.parser.ASTElseStatement;
import org.jfaster.mango.parser.ASTJoinParameter;
import org.jfaster.mango.parser.ASTLTNode;
import org.jfaster.mango.parser.ASTTrue;
import org.jfaster.mango.parser.Node;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTElseStatement_ESTest extends ASTElseStatement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ASTElseStatement aSTElseStatement0 = new ASTElseStatement(0);
      InterablePropertyCollectVisitor interablePropertyCollectVisitor0 = InterablePropertyCollectVisitor.INSTANCE;
      Object object0 = aSTElseStatement0.jjtAccept(interablePropertyCollectVisitor0, interablePropertyCollectVisitor0);
      assertSame(interablePropertyCollectVisitor0, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTElseStatement aSTElseStatement0 = new ASTElseStatement(69);
      Parser parser0 = new Parser("org.jfaster.mango.type.NClobTypeHandler");
      ASTJoinParameter aSTJoinParameter0 = new ASTJoinParameter(parser0, 0);
      aSTElseStatement0.jjtAddChild(aSTJoinParameter0, 0);
      // Undeclared exception!
      try { 
        aSTElseStatement0.render((InvocationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // invoker chain must set
         //
         verifyException("org.jfaster.mango.parser.ASTJoinParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ASTElseStatement aSTElseStatement0 = new ASTElseStatement((-20));
      ASTLTNode aSTLTNode0 = new ASTLTNode((Parser) null, 659);
      aSTElseStatement0.jjtAddChild(aSTLTNode0, 0);
      // Undeclared exception!
      try { 
        aSTElseStatement0.render((InvocationContext) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.ASTLTNode cannot be cast to class org.jfaster.mango.parser.AbstractRenderableNode (org.jfaster.mango.parser.ASTLTNode and org.jfaster.mango.parser.AbstractRenderableNode are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @5d7c530f)
         //
         verifyException("org.jfaster.mango.parser.ASTElseStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ASTElseStatement aSTElseStatement0 = new ASTElseStatement(3765);
      Node[] nodeArray0 = new Node[0];
      aSTElseStatement0.children = nodeArray0;
      InvocationContext invocationContext0 = mock(InvocationContext.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        aSTElseStatement0.render(invocationContext0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InterablePropertyCollectVisitor interablePropertyCollectVisitor0 = InterablePropertyCollectVisitor.INSTANCE;
      Parser parser0 = new Parser("gV8iQm");
      ASTElseStatement aSTElseStatement0 = new ASTElseStatement(parser0, (-1));
      Object object0 = aSTElseStatement0.jjtAccept(interablePropertyCollectVisitor0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ASTElseStatement aSTElseStatement0 = new ASTElseStatement(0);
      InterablePropertyCollectVisitor interablePropertyCollectVisitor0 = InterablePropertyCollectVisitor.INSTANCE;
      ASTTrue aSTTrue0 = new ASTTrue(1);
      aSTElseStatement0.jjtAddChild(aSTTrue0, 1);
      // Undeclared exception!
      try { 
        aSTElseStatement0.jjtAccept(interablePropertyCollectVisitor0, interablePropertyCollectVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Parser parser0 = new Parser("gV8iQm");
      ASTElseStatement aSTElseStatement0 = new ASTElseStatement(parser0, (-1));
      // Undeclared exception!
      try { 
        aSTElseStatement0.render((InvocationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }
}
