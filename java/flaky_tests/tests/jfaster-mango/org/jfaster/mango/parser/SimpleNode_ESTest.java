/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 23:05:55 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.parser.ASTAndNode;
import org.jfaster.mango.parser.ASTBlank;
import org.jfaster.mango.parser.ASTBlock;
import org.jfaster.mango.parser.ASTEQNode;
import org.jfaster.mango.parser.ASTElseIfStatement;
import org.jfaster.mango.parser.ASTExpressionParameter;
import org.jfaster.mango.parser.ASTGTNode;
import org.jfaster.mango.parser.ASTGlobalTable;
import org.jfaster.mango.parser.ASTInsert;
import org.jfaster.mango.parser.ASTJDBCParameter;
import org.jfaster.mango.parser.ASTJoinParameter;
import org.jfaster.mango.parser.ASTMerge;
import org.jfaster.mango.parser.ASTTrue;
import org.jfaster.mango.parser.ASTUpdate;
import org.jfaster.mango.parser.Node;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.ParserTokenManager;
import org.jfaster.mango.parser.ParserVisitor;
import org.jfaster.mango.parser.SimpleNode;
import org.jfaster.mango.parser.Token;
import org.jfaster.mango.parser.visitor.CheckAndBindVisitor;
import org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor;
import org.jfaster.mango.parser.visitor.TextBlankJoinVisitor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(1266);
      ASTEQNode aSTEQNode0 = new ASTEQNode(0);
      aSTEQNode0.jjtAddChild(aSTJDBCParameter0, 1266);
      // Undeclared exception!
      try { 
        aSTEQNode0.dump("u&x%G");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1266 out of bounds for length 37
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ASTBlock aSTBlock0 = new ASTBlock(225);
      ASTEQNode aSTEQNode0 = new ASTEQNode(287);
      aSTEQNode0.jjtAddChild(aSTBlock0, 225);
      InterablePropertyCollectVisitor interablePropertyCollectVisitor0 = InterablePropertyCollectVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        aSTEQNode0.childrenAccept(interablePropertyCollectVisitor0, aSTBlock0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ASTBlock aSTBlock0 = new ASTBlock(225);
      ASTInsert aSTInsert0 = new ASTInsert(225);
      aSTBlock0.jjtAddChild(aSTInsert0, 1);
      aSTBlock0.jjtAddChild(aSTInsert0, 225);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ASTUpdate aSTUpdate0 = new ASTUpdate((-1899));
      aSTUpdate0.jjtSetLastToken((Token) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ASTBlock aSTBlock0 = new ASTBlock((-2005));
      Parser parser0 = new Parser("");
      aSTBlock0.jjtSetFirstToken(parser0.jj_nt);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      Parser parser0 = new Parser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(parser0, 609);
      simpleNode0.jjtOpen();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Parser parser0 = new Parser("c'8)?F");
      ASTGlobalTable aSTGlobalTable0 = new ASTGlobalTable(parser0, 1);
      aSTGlobalTable0.jjtClose();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ASTTrue aSTTrue0 = new ASTTrue(0);
      aSTTrue0.toString();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ASTEQNode aSTEQNode0 = new ASTEQNode(287);
      Token token0 = new Token(287, ",^ngy");
      aSTEQNode0.lastToken = token0;
      aSTEQNode0.jjtGetLastToken();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(228);
      PipedReader pipedReader0 = new PipedReader();
      Parser parser0 = new Parser(pipedReader0);
      Token token0 = parser0.getToken(228);
      aSTJDBCParameter0.firstToken = token0;
      aSTJDBCParameter0.jjtGetFirstToken();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ASTEQNode aSTEQNode0 = new ASTEQNode(0);
      aSTEQNode0.jjtAddChild((Node) null, 146);
      aSTEQNode0.jjtGetChild(0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ASTAndNode aSTAndNode0 = new ASTAndNode(0);
      ASTBlock aSTBlock0 = new ASTBlock(0);
      aSTBlock0.jjtAddChild(aSTAndNode0, 0);
      aSTBlock0.jjtGetChild(0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ASTBlock aSTBlock0 = new ASTBlock((-1986));
      CheckAndBindVisitor checkAndBindVisitor0 = CheckAndBindVisitor.INSTANCE;
      aSTBlock0.jjtAccept(checkAndBindVisitor0, (Object) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ASTBlock aSTBlock0 = new ASTBlock((-1986));
      CheckAndBindVisitor checkAndBindVisitor0 = CheckAndBindVisitor.INSTANCE;
      aSTBlock0.jjtAccept(checkAndBindVisitor0, checkAndBindVisitor0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Parser parser0 = new Parser("org.jfaster.mango.parser.SimpleNode");
      ASTJoinParameter aSTJoinParameter0 = new ASTJoinParameter(parser0, 1);
      // Undeclared exception!
      try { 
        aSTJoinParameter0.toString("UPDATE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTJoinParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ASTMerge aSTMerge0 = new ASTMerge(3105);
      // Undeclared exception!
      try { 
        aSTMerge0.toString("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3105 out of bounds for length 37
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Parser parser0 = new Parser((ParserTokenManager) null);
      ASTExpressionParameter aSTExpressionParameter0 = new ASTExpressionParameter(parser0, 0);
      // Undeclared exception!
      try { 
        aSTExpressionParameter0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTExpressionParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ASTEQNode aSTEQNode0 = new ASTEQNode(29);
      aSTEQNode0.jjtAddChild(aSTEQNode0, 29);
      // Undeclared exception!
      try { 
        aSTEQNode0.jjtGetChild(1658);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1658 out of bounds for length 30
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ASTBlock aSTBlock0 = new ASTBlock((-324));
      ASTInsert aSTInsert0 = new ASTInsert((-324));
      // Undeclared exception!
      try { 
        aSTBlock0.jjtAddChild(aSTInsert0, (-324));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -323
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ASTBlock aSTBlock0 = new ASTBlock(1658);
      ASTInsert aSTInsert0 = new ASTInsert(1658);
      aSTBlock0.jjtAddChild(aSTInsert0, 1658);
      // Undeclared exception!
      try { 
        aSTBlock0.jjtAddChild(aSTInsert0, (-7));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -7 out of bounds for length 1659
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ASTBlock aSTBlock0 = new ASTBlock((-1986));
      CheckAndBindVisitor checkAndBindVisitor0 = CheckAndBindVisitor.INSTANCE;
      ASTInsert aSTInsert0 = new ASTInsert((-1986));
      // Undeclared exception!
      try { 
        aSTInsert0.jjtAccept(checkAndBindVisitor0, aSTBlock0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.CheckAndBindVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(0);
      // Undeclared exception!
      try { 
        aSTJDBCParameter0.dump("~+5#6v3tn9?kG)2fi");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTJDBCParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2798));
      // Undeclared exception!
      try { 
        simpleNode0.dump("XB*0=mZ>!<O");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2798 out of bounds for length 37
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ASTAndNode aSTAndNode0 = new ASTAndNode(0);
      aSTAndNode0.toString("");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ASTEQNode aSTEQNode0 = new ASTEQNode(29);
      aSTEQNode0.jjtAddChild(aSTEQNode0, 29);
      // Undeclared exception!
      aSTEQNode0.dump("org.jfaster.mango.parser.SimpleNode");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ASTEQNode aSTEQNode0 = new ASTEQNode(0);
      aSTEQNode0.jjtAddChild((Node) null, 0);
      aSTEQNode0.dump("eE|?c");
      assertEquals(1, aSTEQNode0.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ASTEQNode aSTEQNode0 = new ASTEQNode(0);
      ASTBlank aSTBlank0 = new ASTBlank(0);
      aSTEQNode0.jjtAddChild(aSTBlank0, 0);
      TextBlankJoinVisitor textBlankJoinVisitor0 = TextBlankJoinVisitor.INSTANCE;
      Object object0 = aSTEQNode0.childrenAccept(textBlankJoinVisitor0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ASTEQNode aSTEQNode0 = new ASTEQNode(0);
      aSTEQNode0.jjtAddChild(aSTEQNode0, 0);
      TextBlankJoinVisitor textBlankJoinVisitor0 = TextBlankJoinVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        aSTEQNode0.childrenAccept(textBlankJoinVisitor0, (Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.TextBlankJoinVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ASTBlock aSTBlock0 = new ASTBlock(225);
      Token token0 = new Token(287, ",^ngy");
      InterablePropertyCollectVisitor interablePropertyCollectVisitor0 = InterablePropertyCollectVisitor.INSTANCE;
      Token token1 = (Token)aSTBlock0.childrenAccept(interablePropertyCollectVisitor0, token0);
      assertEquals(0, token1.endColumn);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ASTBlock aSTBlock0 = new ASTBlock(224);
      int int0 = aSTBlock0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(212);
      aSTJDBCParameter0.jjtAddChild(aSTJDBCParameter0, 0);
      int int0 = aSTJDBCParameter0.jjtGetNumChildren();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ASTEQNode aSTEQNode0 = new ASTEQNode(0);
      aSTEQNode0.jjtAddChild((Node) null, 0);
      aSTEQNode0.jjtAddChild((Node) null, 1);
      assertEquals(2, aSTEQNode0.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(279);
      Token token0 = aSTJDBCParameter0.jjtGetFirstToken();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ASTBlock aSTBlock0 = new ASTBlock(224);
      CheckAndBindVisitor checkAndBindVisitor0 = CheckAndBindVisitor.INSTANCE;
      aSTBlock0.jjtSetValue(checkAndBindVisitor0);
      Object object0 = aSTBlock0.jjtGetValue();
      assertSame(object0, checkAndBindVisitor0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(279);
      ASTElseIfStatement aSTElseIfStatement0 = new ASTElseIfStatement((-1787));
      aSTJDBCParameter0.jjtSetParent(aSTElseIfStatement0);
      Node node0 = aSTJDBCParameter0.jjtGetParent();
      assertEquals(0, node0.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      Parser parser0 = new Parser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(parser0, 609);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAccept((ParserVisitor) null, stringReader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ASTBlock aSTBlock0 = new ASTBlock((-1986));
      Node node0 = aSTBlock0.jjtGetParent();
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ASTEQNode aSTEQNode0 = new ASTEQNode(287);
      Token token0 = aSTEQNode0.jjtGetLastToken();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ASTEQNode aSTEQNode0 = new ASTEQNode(0);
      aSTEQNode0.dump("eE|?c");
      assertEquals(0, aSTEQNode0.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ASTGTNode aSTGTNode0 = new ASTGTNode((Parser) null, 1730);
      // Undeclared exception!
      try { 
        aSTGTNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1730 out of bounds for length 37
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Parser parser0 = new Parser(" ");
      try { 
        parser0.False();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Encountered \" <BLANK> \"  \"\" at line 1, column 1.
         // Was expecting:
         //     \"false\" ...
         //     
         //
         verifyException("org.jfaster.mango.parser.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ASTEQNode aSTEQNode0 = new ASTEQNode(0);
      // Undeclared exception!
      try { 
        aSTEQNode0.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ASTBlock aSTBlock0 = new ASTBlock(224);
      aSTBlock0.jjtGetValue();
  }
}
