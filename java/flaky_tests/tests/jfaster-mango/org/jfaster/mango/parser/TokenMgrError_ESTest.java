/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 22:30:29 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.parser.TokenMgrError;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokenMgrError_ESTest extends TokenMgrError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(false, (-3368), (-1117), 868, "OXih~UJD.hib:(^S", '(');
      assertEquals("Lexical error at line -1117, column 868.  Encountered: \"(\" (40), after : \"OXih~UJD.hib:(^S\"", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError((String) null, 0);
      String string0 = tokenMgrError0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError("", (-9));
      String string0 = tokenMgrError0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrError.addEscapes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrError.LexicalError(false, 16, 0, 295, (String) null, '3');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TokenMgrError tokenMgrError0 = null;
      try {
        tokenMgrError0 = new TokenMgrError(false, 2791, 2791, 2791, (String) null, 'm', 2791);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(false, 0, 2465, 37, "Uc&ciXG @-9/[zO", '(');
      assertEquals("Lexical error at line 2465, column 37.  Encountered: \"(\" (40), after : \"Uc&ciXG @-9/[zO\"", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(false, 37, (-1462), 0, "wVbQC\u0001.j@EC8", 'o');
      assertEquals("Lexical error at line -1462, column 0.  Encountered: \"o\" (111), after : \"wVbQC\\u0001.\\u007fj@EC8\"", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("bhL'");
      assertEquals("bhL\\'", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(false, 0, 0, 0, "QF!7\"H[9F", '3');
      assertEquals("Lexical error at line 0, column 0.  Encountered: \"3\" (51), after : \"QF!7\\\"H[9F\"", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError(true, 0, 0, 0, "jtz}vLe", 'b', 0);
      String string0 = tokenMgrError0.getMessage();
      assertEquals("Lexical error at line 0, column 0.  Encountered: <EOF> after : \"jtz}vLe\"", string0);
  }
}
