/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 00:25:28 GMT 2022
 */

package org.jfaster.mango.parser.visitor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.PipedReader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.jfaster.mango.parser.ASTAndNode;
import org.jfaster.mango.parser.ASTBlank;
import org.jfaster.mango.parser.ASTBlock;
import org.jfaster.mango.parser.ASTDelete;
import org.jfaster.mango.parser.ASTEQNode;
import org.jfaster.mango.parser.ASTElseIfStatement;
import org.jfaster.mango.parser.ASTElseStatement;
import org.jfaster.mango.parser.ASTExpression;
import org.jfaster.mango.parser.ASTExpressionParameter;
import org.jfaster.mango.parser.ASTFalse;
import org.jfaster.mango.parser.ASTGENode;
import org.jfaster.mango.parser.ASTGTNode;
import org.jfaster.mango.parser.ASTGlobalTable;
import org.jfaster.mango.parser.ASTIfStatement;
import org.jfaster.mango.parser.ASTInsert;
import org.jfaster.mango.parser.ASTIntegerLiteral;
import org.jfaster.mango.parser.ASTJDBCIterableParameter;
import org.jfaster.mango.parser.ASTJDBCParameter;
import org.jfaster.mango.parser.ASTJoinParameter;
import org.jfaster.mango.parser.ASTLENode;
import org.jfaster.mango.parser.ASTLTNode;
import org.jfaster.mango.parser.ASTMerge;
import org.jfaster.mango.parser.ASTNENode;
import org.jfaster.mango.parser.ASTNotNode;
import org.jfaster.mango.parser.ASTNull;
import org.jfaster.mango.parser.ASTOrNode;
import org.jfaster.mango.parser.ASTQuoteText;
import org.jfaster.mango.parser.ASTReplace;
import org.jfaster.mango.parser.ASTRootNode;
import org.jfaster.mango.parser.ASTSelect;
import org.jfaster.mango.parser.ASTStringLiteral;
import org.jfaster.mango.parser.ASTText;
import org.jfaster.mango.parser.ASTTrimComma;
import org.jfaster.mango.parser.ASTTrue;
import org.jfaster.mango.parser.ASTTruncate;
import org.jfaster.mango.parser.ASTUpdate;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.ParserTokenManager;
import org.jfaster.mango.parser.SimpleCharStream;
import org.jfaster.mango.parser.SimpleNode;
import org.jfaster.mango.parser.visitor.ParameterExpandVisitor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParameterExpandVisitor_ESTest extends ParameterExpandVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTJoinParameter aSTJoinParameter0 = new ASTJoinParameter(0);
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit(aSTJoinParameter0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      Parser parser0 = new Parser("");
      ASTTrue aSTTrue0 = new ASTTrue(parser0, (-3465));
      Object object0 = parameterExpandVisitor0.visit(aSTTrue0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTTrue aSTTrue0 = new ASTTrue(827);
      Object object0 = parameterExpandVisitor0.visit(aSTTrue0, (Object) parameterExpandVisitor0);
      assertEquals(ParameterExpandVisitor.INSTANCE, object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      Parser parser0 = new Parser("o");
      ASTTrimComma aSTTrimComma0 = new ASTTrimComma(parser0, 0);
      Object object0 = parameterExpandVisitor0.visit(aSTTrimComma0, (Object) parser0);
      assertSame(object0, parser0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      PipedReader pipedReader0 = new PipedReader();
      Parser parser0 = new Parser(pipedReader0);
      ASTText aSTText0 = new ASTText(parser0, 211);
      Object object0 = parameterExpandVisitor0.visit(aSTText0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTText aSTText0 = new ASTText((-1418));
      ASTText aSTText1 = (ASTText)parameterExpandVisitor0.visit(aSTText0, (Object) aSTText0);
      assertEquals(0, aSTText1.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTStringLiteral aSTStringLiteral0 = new ASTStringLiteral(3018);
      Object object0 = parameterExpandVisitor0.visit(aSTStringLiteral0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTStringLiteral aSTStringLiteral0 = new ASTStringLiteral((Parser) null, (-809));
      Object object0 = parameterExpandVisitor0.visit(aSTStringLiteral0, (Object) aSTStringLiteral0);
      assertSame(object0, aSTStringLiteral0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      Parser parser0 = new Parser("G>Z<k:-`n`pM%C@B~r9");
      ASTQuoteText aSTQuoteText0 = new ASTQuoteText(parser0, 2014);
      Object object0 = parameterExpandVisitor0.visit(aSTQuoteText0, (Object) parser0);
      assertSame(object0, parser0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTOrNode aSTOrNode0 = new ASTOrNode((Parser) null, 142);
      Object object0 = parameterExpandVisitor0.visit(aSTOrNode0, (Object) aSTOrNode0);
      assertSame(object0, aSTOrNode0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTNull aSTNull0 = new ASTNull((Parser) null, (-1));
      Object object0 = parameterExpandVisitor0.visit(aSTNull0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTNull aSTNull0 = new ASTNull(7);
      Object object0 = parameterExpandVisitor0.visit(aSTNull0, (Object) "$XXkTsc~FUdNd$XZ#<");
      assertEquals("$XXkTsc~FUdNd$XZ#<", object0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTNotNode aSTNotNode0 = new ASTNotNode(0);
      Object object0 = parameterExpandVisitor0.visit(aSTNotNode0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTNENode aSTNENode0 = new ASTNENode((-973));
      Object object0 = parameterExpandVisitor0.visit(aSTNENode0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTNENode aSTNENode0 = new ASTNENode(0);
      ASTNENode aSTNENode1 = (ASTNENode)parameterExpandVisitor0.visit(aSTNENode0, (Object) aSTNENode0);
      assertEquals(0, aSTNENode1.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTLTNode aSTLTNode0 = new ASTLTNode((Parser) null, 2247);
      Object object0 = parameterExpandVisitor0.visit(aSTLTNode0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Parser parser0 = new Parser(mockFileInputStream0);
      ASTLTNode aSTLTNode0 = new ASTLTNode(parser0, 1);
      Object object0 = parameterExpandVisitor0.visit(aSTLTNode0, (Object) mockFileInputStream0);
      assertSame(mockFileInputStream0, object0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      StringReader stringReader0 = new StringReader("");
      Parser parser0 = new Parser(stringReader0);
      ASTLENode aSTLENode0 = new ASTLENode(parser0, 1348);
      Object object0 = parameterExpandVisitor0.visit(aSTLENode0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTLENode aSTLENode0 = new ASTLENode(5);
      Object object0 = parameterExpandVisitor0.visit(aSTLENode0, (Object) "|oZjX@yC#;B");
      assertEquals("|oZjX@yC#;B", object0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTIntegerLiteral aSTIntegerLiteral0 = new ASTIntegerLiteral(1);
      Object object0 = parameterExpandVisitor0.visit(aSTIntegerLiteral0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTIfStatement aSTIfStatement0 = new ASTIfStatement((Parser) null, 0);
      Object object0 = parameterExpandVisitor0.visit(aSTIfStatement0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTTrimComma aSTTrimComma0 = new ASTTrimComma(46);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Parser parser0 = new Parser(mockFileInputStream0);
      ASTIfStatement aSTIfStatement0 = new ASTIfStatement(parser0, 0);
      ASTTrimComma aSTTrimComma1 = (ASTTrimComma)parameterExpandVisitor0.visit(aSTIfStatement0, (Object) aSTTrimComma0);
      assertEquals(0, aSTTrimComma1.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Parser parser0 = new Parser(byteArrayInputStream0);
      ASTGlobalTable aSTGlobalTable0 = new ASTGlobalTable(parser0, 0);
      Object object0 = parameterExpandVisitor0.visit(aSTGlobalTable0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTGlobalTable aSTGlobalTable0 = new ASTGlobalTable((-2687));
      ASTGlobalTable aSTGlobalTable1 = (ASTGlobalTable)parameterExpandVisitor0.visit(aSTGlobalTable0, (Object) aSTGlobalTable0);
      assertEquals(0, aSTGlobalTable1.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTGTNode aSTGTNode0 = new ASTGTNode(1);
      Object object0 = parameterExpandVisitor0.visit(aSTGTNode0, (Object) aSTGTNode0);
      assertSame(aSTGTNode0, object0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTGENode aSTGENode0 = new ASTGENode((Parser) null, 211);
      Object object0 = parameterExpandVisitor0.visit(aSTGENode0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTFalse aSTFalse0 = new ASTFalse(15);
      Object object0 = parameterExpandVisitor0.visit(aSTFalse0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTExpression aSTExpression0 = new ASTExpression((Parser) null, 12);
      Object object0 = parameterExpandVisitor0.visit(aSTExpression0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTElseStatement aSTElseStatement0 = new ASTElseStatement(1);
      Object object0 = parameterExpandVisitor0.visit(aSTElseStatement0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTElseStatement aSTElseStatement0 = new ASTElseStatement(1);
      ASTElseStatement aSTElseStatement1 = (ASTElseStatement)parameterExpandVisitor0.visit(aSTElseStatement0, (Object) aSTElseStatement0);
      assertEquals(0, aSTElseStatement1.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTElseIfStatement aSTElseIfStatement0 = new ASTElseIfStatement((-1916));
      Object object0 = parameterExpandVisitor0.visit(aSTElseIfStatement0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTEQNode aSTEQNode0 = new ASTEQNode(2305);
      Object object0 = parameterExpandVisitor0.visit(aSTEQNode0, (Object) aSTEQNode0);
      assertSame(object0, aSTEQNode0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      StringReader stringReader0 = new StringReader("");
      Parser parser0 = new Parser(stringReader0);
      ASTBlock aSTBlock0 = new ASTBlock(parser0, 1348);
      Object object0 = parameterExpandVisitor0.visit(aSTBlock0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTNENode aSTNENode0 = new ASTNENode(3999);
      ASTBlank aSTBlank0 = new ASTBlank(0);
      Object object0 = parameterExpandVisitor0.visit(aSTBlank0, (Object) aSTNENode0);
      assertSame(aSTNENode0, object0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTAndNode aSTAndNode0 = new ASTAndNode((Parser) null, 983);
      Object object0 = parameterExpandVisitor0.visit(aSTAndNode0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      Parser parser0 = new Parser("component");
      ASTAndNode aSTAndNode0 = new ASTAndNode(1190);
      Object object0 = parameterExpandVisitor0.visit(aSTAndNode0, (Object) parser0);
      assertSame(parser0, object0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ParameterExpandVisitor[] parameterExpandVisitorArray0 = ParameterExpandVisitor.values();
      assertEquals(1, parameterExpandVisitorArray0.length);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.valueOf("INSTANCE");
      assertEquals(ParameterExpandVisitor.INSTANCE, parameterExpandVisitor0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTTrimComma) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTQuoteText) null, (Object) parameterExpandVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTOrNode) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTNotNode) null, (Object) parameterExpandVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTJoinParameter) null, (Object) parameterExpandVisitor0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.visitor.ParameterExpandVisitor cannot be cast to class org.jfaster.mango.binding.ParameterContext (org.jfaster.mango.parser.visitor.ParameterExpandVisitor and org.jfaster.mango.binding.ParameterContext are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1f3f37e)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTJDBCParameter) null, (Object) parameterExpandVisitor0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.visitor.ParameterExpandVisitor cannot be cast to class org.jfaster.mango.binding.ParameterContext (org.jfaster.mango.parser.visitor.ParameterExpandVisitor and org.jfaster.mango.binding.ParameterContext are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1f3f37e)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTJDBCIterableParameter) null, (Object) parameterExpandVisitor0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.visitor.ParameterExpandVisitor cannot be cast to class org.jfaster.mango.binding.ParameterContext (org.jfaster.mango.parser.visitor.ParameterExpandVisitor and org.jfaster.mango.binding.ParameterContext are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1f3f37e)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTIntegerLiteral) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTGTNode) null, (Object) parameterExpandVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTGENode) null, (Object) mockFileInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTFalse) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTExpressionParameter) null, (Object) parameterExpandVisitor0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.visitor.ParameterExpandVisitor cannot be cast to class org.jfaster.mango.binding.ParameterContext (org.jfaster.mango.parser.visitor.ParameterExpandVisitor and org.jfaster.mango.binding.ParameterContext are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @1f3f37e)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTExpression) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTElseIfStatement) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTEQNode) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ParameterExpandVisitor parameterExpandVisitor1 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTBlank) null, (Object) parameterExpandVisitor1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTGlobalTable) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTMerge) null, (Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTStringLiteral) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTJDBCIterableParameter) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTDelete) null, (Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTLENode) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTRootNode) null, (Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTGENode aSTGENode0 = new ASTGENode(0);
      Object object0 = parameterExpandVisitor0.visit(aSTGENode0, (Object) aSTGENode0);
      assertSame(aSTGENode0, object0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTFalse aSTFalse0 = new ASTFalse(0);
      ASTFalse aSTFalse1 = (ASTFalse)parameterExpandVisitor0.visit(aSTFalse0, (Object) aSTFalse0);
      assertEquals(0, aSTFalse1.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTUpdate) null, (Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTLTNode) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTTrimComma aSTTrimComma0 = new ASTTrimComma((Parser) null, (-1278));
      Object object0 = parameterExpandVisitor0.visit(aSTTrimComma0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTGTNode aSTGTNode0 = new ASTGTNode((Parser) null, 756);
      Object object0 = parameterExpandVisitor0.visit(aSTGTNode0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTNotNode aSTNotNode0 = new ASTNotNode(0);
      Object object0 = parameterExpandVisitor0.visit(aSTNotNode0, (Object) aSTNotNode0);
      assertSame(object0, aSTNotNode0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTElseIfStatement aSTElseIfStatement0 = new ASTElseIfStatement((-756));
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTText) null, (Object) aSTElseIfStatement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTInsert aSTInsert0 = new ASTInsert(7);
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit(aSTInsert0, (Object) aSTInsert0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ParserTokenManager parserTokenManager0 = new ParserTokenManager((SimpleCharStream) null, 0);
      Parser parser0 = new Parser(parserTokenManager0);
      ASTBlank aSTBlank0 = new ASTBlank(parser0, 0);
      Object object0 = parameterExpandVisitor0.visit(aSTBlank0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTReplace) null, (Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTBlock aSTBlock0 = new ASTBlock(0);
      ASTBlock aSTBlock1 = (ASTBlock)parameterExpandVisitor0.visit(aSTBlock0, (Object) aSTBlock0);
      assertEquals(0, aSTBlock1.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTIntegerLiteral aSTIntegerLiteral0 = new ASTIntegerLiteral(326);
      Object object0 = parameterExpandVisitor0.visit(aSTIntegerLiteral0, (Object) aSTIntegerLiteral0);
      assertSame(object0, aSTIntegerLiteral0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTElseStatement) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTJDBCParameter) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTNENode) null, (Object) parameterExpandVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTOrNode aSTOrNode0 = new ASTOrNode((Parser) null, (-4167));
      Object object0 = parameterExpandVisitor0.visit(aSTOrNode0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTAndNode) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTEQNode aSTEQNode0 = new ASTEQNode((-1));
      Object object0 = parameterExpandVisitor0.visit(aSTEQNode0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTIfStatement) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((SimpleNode) null, (Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTQuoteText aSTQuoteText0 = new ASTQuoteText(32768);
      Object object0 = parameterExpandVisitor0.visit(aSTQuoteText0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTTruncate aSTTruncate0 = new ASTTruncate(84);
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit(aSTTruncate0, (Object) aSTTruncate0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTExpressionParameter) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTNull) null, (Object) parameterExpandVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTSelect aSTSelect0 = new ASTSelect(0);
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit(aSTSelect0, (Object) aSTSelect0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        parameterExpandVisitor0.visit((ASTTrue) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTExpression aSTExpression0 = new ASTExpression(1191);
      Object object0 = parameterExpandVisitor0.visit(aSTExpression0, (Object) aSTExpression0);
      assertSame(object0, aSTExpression0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      ASTElseIfStatement aSTElseIfStatement0 = new ASTElseIfStatement(60);
      ASTElseIfStatement aSTElseIfStatement1 = (ASTElseIfStatement)parameterExpandVisitor0.visit(aSTElseIfStatement0, (Object) aSTElseIfStatement0);
      assertEquals(0, aSTElseIfStatement1.jjtGetNumChildren());
  }
}
