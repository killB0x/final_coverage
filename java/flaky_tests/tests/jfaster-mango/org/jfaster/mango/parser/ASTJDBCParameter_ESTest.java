/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 23:37:10 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.jfaster.mango.binding.BindingParameter;
import org.jfaster.mango.binding.DefaultInvocationContext;
import org.jfaster.mango.binding.InvocationContext;
import org.jfaster.mango.binding.TransferableBindingParameterInvoker;
import org.jfaster.mango.parser.ASTJDBCParameter;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.ParserVisitor;
import org.jfaster.mango.parser.visitor.CheckAndBindVisitor;
import org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor;
import org.jfaster.mango.parser.visitor.TextBlankJoinVisitor;
import org.jfaster.mango.type.TypeHandler;
import org.jfaster.mango.util.jdbc.JdbcType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTJDBCParameter_ESTest extends ASTJDBCParameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(0);
      JdbcType jdbcType0 = JdbcType.TIMESTAMP;
      BindingParameter bindingParameter0 = BindingParameter.create("/$2ZN,yo", ":6!nBGpqr", jdbcType0);
      aSTJDBCParameter0.setBindingParameter(bindingParameter0);
      String string0 = aSTJDBCParameter0.toString();
      assertEquals("RootNode{fullName=:/$2ZN,yo.:6!nBGpqr, parameterName=/$2ZN,yo, propertyName=:6!nBGpqr}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.LONGVARCHAR;
      BindingParameter bindingParameter0 = BindingParameter.create("", "", jdbcType0);
      Class<Integer> class0 = Integer.TYPE;
      TransferableBindingParameterInvoker transferableBindingParameterInvoker0 = TransferableBindingParameterInvoker.create(class0, bindingParameter0);
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(12);
      aSTJDBCParameter0.setBindingParameterInvoker(transferableBindingParameterInvoker0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      defaultInvocationContext0.setBindingValue(transferableBindingParameterInvoker0, jdbcType0);
      boolean boolean0 = aSTJDBCParameter0.render(defaultInvocationContext0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(4);
      TextBlankJoinVisitor textBlankJoinVisitor0 = TextBlankJoinVisitor.INSTANCE;
      Object object0 = aSTJDBCParameter0.jjtAccept(textBlankJoinVisitor0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter((-1854));
      InterablePropertyCollectVisitor interablePropertyCollectVisitor0 = InterablePropertyCollectVisitor.INSTANCE;
      Object object0 = new Object();
      Object object1 = aSTJDBCParameter0.jjtAccept(interablePropertyCollectVisitor0, object0);
      assertSame(object0, object1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(474);
      JdbcType jdbcType0 = JdbcType.CURSOR;
      BindingParameter bindingParameter0 = BindingParameter.create("}", "2}", jdbcType0);
      aSTJDBCParameter0.setBindingParameter(bindingParameter0);
      String string0 = aSTJDBCParameter0.getFullName();
      assertEquals(":}.2}", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(0);
      JdbcType jdbcType0 = JdbcType.TIMESTAMP;
      BindingParameter bindingParameter0 = BindingParameter.create("/$2ZN,yo", ":6!nBGpqr", jdbcType0);
      aSTJDBCParameter0.setBindingParameter(bindingParameter0);
      BindingParameter bindingParameter1 = aSTJDBCParameter0.getBindingParameter();
      assertSame(bindingParameter1, bindingParameter0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<Double> class0 = Double.TYPE;
      JdbcType jdbcType0 = JdbcType.REAL;
      BindingParameter bindingParameter0 = new BindingParameter("error jdbc type '", "", jdbcType0);
      TransferableBindingParameterInvoker transferableBindingParameterInvoker0 = TransferableBindingParameterInvoker.create(class0, bindingParameter0);
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter((-528));
      aSTJDBCParameter0.setBindingParameterInvoker(transferableBindingParameterInvoker0);
      // Undeclared exception!
      try { 
        aSTJDBCParameter0.render((InvocationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTJDBCParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter((-1));
      CheckAndBindVisitor checkAndBindVisitor0 = CheckAndBindVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        aSTJDBCParameter0.jjtAccept(checkAndBindVisitor0, checkAndBindVisitor0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.visitor.CheckAndBindVisitor cannot be cast to class org.jfaster.mango.binding.ParameterContext (org.jfaster.mango.parser.visitor.CheckAndBindVisitor and org.jfaster.mango.binding.ParameterContext are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @579f1d6a)
         //
         verifyException("org.jfaster.mango.parser.visitor.CheckAndBindVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(2);
      // Undeclared exception!
      try { 
        aSTJDBCParameter0.init((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(1994);
      // Undeclared exception!
      try { 
        aSTJDBCParameter0.getFullName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTJDBCParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(4655);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTJDBCParameter0.render(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // invoker must set
         //
         verifyException("org.jfaster.mango.parser.ASTJDBCParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.LONGVARCHAR;
      BindingParameter bindingParameter0 = BindingParameter.create("", "", jdbcType0);
      Class<Integer> class0 = Integer.TYPE;
      TransferableBindingParameterInvoker transferableBindingParameterInvoker0 = TransferableBindingParameterInvoker.create(class0, bindingParameter0);
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(12);
      aSTJDBCParameter0.setBindingParameterInvoker(transferableBindingParameterInvoker0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTJDBCParameter0.render(defaultInvocationContext0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Parameter ':' not found, available root parameters are []
         //
         verifyException("org.jfaster.mango.binding.DefaultInvocationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter((-3470));
      // Undeclared exception!
      try { 
        aSTJDBCParameter0.init("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Can't compile string ''
         //
         verifyException("org.jfaster.mango.parser.ASTJDBCParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter((-1857));
      // Undeclared exception!
      try { 
        aSTJDBCParameter0.init(":0");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No match found
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(2305);
      TypeHandler<Object> typeHandler0 = (TypeHandler<Object>) mock(TypeHandler.class, new ViolatedAssumptionAnswer());
      aSTJDBCParameter0.setTypeHandler(typeHandler0);
      assertEquals(0, aSTJDBCParameter0.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(2305);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      // Undeclared exception!
      try { 
        aSTJDBCParameter0.jjtAccept((ParserVisitor) null, mockFileInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTJDBCParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(1994);
      BindingParameter bindingParameter0 = aSTJDBCParameter0.getBindingParameter();
      assertNull(bindingParameter0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Parser parser0 = new Parser(byteArrayInputStream0);
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(parser0, 0);
      // Undeclared exception!
      try { 
        aSTJDBCParameter0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTJDBCParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ASTJDBCParameter aSTJDBCParameter0 = new ASTJDBCParameter(134217728);
      // Undeclared exception!
      try { 
        aSTJDBCParameter0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 134217728 out of bounds for length 37
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }
}
