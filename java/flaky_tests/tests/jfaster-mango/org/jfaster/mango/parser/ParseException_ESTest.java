/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 22:12:15 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.parser.ParseException;
import org.jfaster.mango.parser.Token;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParseException_ESTest extends ParseException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = ParseException.add_escapes("Hw2I*h~xW>)M-*&");
      assertEquals("Hw2I*h~xW>)M-*&", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Token token0 = new Token(1, "*xj.M[ITGH{y");
      int[][] intArray0 = new int[4][9];
      int[] intArray1 = new int[4];
      intArray0[0] = intArray1;
      String[] stringArray0 = new String[4];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = ParseException.add_escapes("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        ParseException.add_escapes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Token token0 = new Token(1, "*xj.M[ITGH{y");
      int[][] intArray0 = new int[4][9];
      int[] intArray1 = new int[5];
      intArray1[1] = (-2702);
      intArray0[3] = intArray1;
      String[] stringArray0 = new String[4];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2702 out of bounds for length 4
         //
         verifyException("org.jfaster.mango.parser.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = ParseException.add_escapes("4%\"9gDRZxpNoDC");
      assertEquals("4%\\\"9gDRZxpNoDC\\u007f", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = ParseException.add_escapes("UV A(6'73?q<HX");
      assertEquals("UV A(6\\'73?q<HX", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = ParseException.add_escapes("pF){]\fpL");
      assertEquals("pF){]\\fpL", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = ParseException.add_escapes("\n");
      assertEquals("\\n", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Token token0 = new Token();
      int[][] intArray0 = new int[2][4];
      token0.next = token0;
      String[] stringArray0 = new String[4];
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Token token0 = new Token();
      int[][] intArray0 = new int[1][4];
      token0.next = token0;
      String[] stringArray0 = new String[7];
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Token token0 = new Token(30);
      int[][] intArray0 = new int[1][4];
      token0.next = token0;
      token0.next.image = "";
      String[] stringArray0 = new String[47];
      ParseException parseException0 = new ParseException(token0.next, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Token token0 = new Token(1, "*xj.M[ITGH{y");
      int[][] intArray0 = new int[4][9];
      int[] intArray1 = new int[2];
      intArray1[1] = 1;
      intArray0[2] = intArray1;
      String[] stringArray0 = new String[4];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ParseException parseException0 = new ParseException("+yUO$t-/");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParseException parseException0 = new ParseException();
  }
}
