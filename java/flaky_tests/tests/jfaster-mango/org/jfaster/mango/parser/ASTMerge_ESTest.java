/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 00:55:50 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.parser.ASTMerge;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.ParserVisitor;
import org.jfaster.mango.parser.visitor.NodeCollectVisitor;
import org.jfaster.mango.util.jdbc.SQLType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTMerge_ESTest extends ASTMerge_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ASTMerge aSTMerge0 = new ASTMerge((-3054));
      NodeCollectVisitor nodeCollectVisitor0 = NodeCollectVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        aSTMerge0.jjtAccept(nodeCollectVisitor0, nodeCollectVisitor0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.NodeCollectVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTMerge aSTMerge0 = new ASTMerge((-1));
      // Undeclared exception!
      try { 
        aSTMerge0.jjtAccept((ParserVisitor) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTMerge", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      Parser parser0 = new Parser(pipedInputStream0);
      ASTMerge aSTMerge0 = new ASTMerge(parser0, (-4421));
      assertEquals(0, aSTMerge0.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ASTMerge aSTMerge0 = new ASTMerge((-3054));
      SQLType sQLType0 = aSTMerge0.getSQLType();
      assertTrue(sQLType0.needChangeData());
  }
}
