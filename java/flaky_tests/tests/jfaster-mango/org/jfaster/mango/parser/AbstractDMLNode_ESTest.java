/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 01:26:15 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.binding.DefaultInvocationContext;
import org.jfaster.mango.binding.InvocationContext;
import org.jfaster.mango.parser.ASTDelete;
import org.jfaster.mango.parser.ASTInsert;
import org.jfaster.mango.parser.ASTReplace;
import org.jfaster.mango.parser.ASTSelect;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.util.jdbc.SQLType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractDMLNode_ESTest extends AbstractDMLNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ASTDelete aSTDelete0 = new ASTDelete(95);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      boolean boolean0 = aSTDelete0.render(defaultInvocationContext0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTInsert aSTInsert0 = new ASTInsert(0);
      SQLType sQLType0 = aSTInsert0.getSQLType();
      assertEquals(SQLType.INSERT, sQLType0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ASTSelect aSTSelect0 = new ASTSelect(0);
      SQLType sQLType0 = aSTSelect0.getSQLType();
      assertEquals(SQLType.SELECT, sQLType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ASTReplace aSTReplace0 = new ASTReplace(0);
      // Undeclared exception!
      try { 
        aSTReplace0.render((InvocationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.AbstractDMLNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Parser parser0 = new Parser(":(");
      ASTDelete aSTDelete0 = new ASTDelete(parser0, 0);
      String string0 = aSTDelete0.toString();
      assertEquals("RootNode[null]", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ASTReplace aSTReplace0 = new ASTReplace(93);
      aSTReplace0.setValue("");
      assertEquals(SQLType.REPLACE, aSTReplace0.getSQLType());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ASTReplace aSTReplace0 = new ASTReplace(95);
      // Undeclared exception!
      try { 
        aSTReplace0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 95 out of bounds for length 37
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }
}
