/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 23:45:40 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.binding.BindingParameter;
import org.jfaster.mango.binding.DefaultInvocationContext;
import org.jfaster.mango.binding.DefaultParameterContext;
import org.jfaster.mango.binding.TransferableBindingParameterInvoker;
import org.jfaster.mango.descriptor.ParameterDescriptor;
import org.jfaster.mango.parser.ASTElseIfStatement;
import org.jfaster.mango.parser.ASTExpressionParameter;
import org.jfaster.mango.parser.ASTGTNode;
import org.jfaster.mango.parser.ASTMerge;
import org.jfaster.mango.parser.ASTNull;
import org.jfaster.mango.parser.ASTText;
import org.jfaster.mango.parser.Node;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.ParserVisitor;
import org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor;
import org.jfaster.mango.parser.visitor.NodeCollectVisitor;
import org.jfaster.mango.parser.visitor.ParameterExpandVisitor;
import org.jfaster.mango.parser.visitor.TextBlankJoinVisitor;
import org.jfaster.mango.type.IntegerTypeHandler;
import org.jfaster.mango.util.jdbc.JdbcType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTGTNode_ESTest extends ASTGTNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ASTGTNode aSTGTNode0 = new ASTGTNode(32);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) aSTGTNode0;
      nodeArray0[1] = (Node) aSTGTNode0;
      ASTExpressionParameter aSTExpressionParameter0 = new ASTExpressionParameter(0);
      nodeArray0[2] = (Node) aSTExpressionParameter0;
      nodeArray0[3] = (Node) aSTGTNode0;
      nodeArray0[4] = (Node) aSTGTNode0;
      nodeArray0[5] = (Node) aSTGTNode0;
      nodeArray0[6] = (Node) aSTGTNode0;
      ASTText aSTText0 = new ASTText(0);
      nodeArray0[7] = (Node) aSTText0;
      nodeArray0[8] = (Node) aSTGTNode0;
      aSTGTNode0.children = nodeArray0;
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTGTNode0.evaluate(defaultInvocationContext0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      ASTGTNode aSTGTNode0 = new ASTGTNode(2088);
      Node[] nodeArray0 = new Node[2];
      ASTElseIfStatement aSTElseIfStatement0 = new ASTElseIfStatement(2088);
      nodeArray0[0] = (Node) aSTElseIfStatement0;
      nodeArray0[1] = (Node) aSTGTNode0;
      aSTGTNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        aSTGTNode0.evaluate(defaultInvocationContext0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.ASTElseIfStatement cannot be cast to class org.jfaster.mango.parser.AbstractExpression (org.jfaster.mango.parser.ASTElseIfStatement and org.jfaster.mango.parser.AbstractExpression are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @21b9abc4)
         //
         verifyException("org.jfaster.mango.parser.ASTGTNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ASTGTNode aSTGTNode0 = new ASTGTNode(2099);
      Node[] nodeArray0 = new Node[0];
      aSTGTNode0.children = nodeArray0;
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTGTNode0.value(defaultInvocationContext0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ASTGTNode aSTGTNode0 = new ASTGTNode(10);
      ASTNull aSTNull0 = new ASTNull(0);
      aSTGTNode0.jjtAddChild(aSTNull0, 0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTGTNode0.value(defaultInvocationContext0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ASTGTNode aSTGTNode0 = new ASTGTNode(0);
      assertEquals(0, aSTGTNode0.jjtGetNumChildren());
      
      NodeCollectVisitor nodeCollectVisitor0 = NodeCollectVisitor.INSTANCE;
      Object object0 = aSTGTNode0.value;
      Object object1 = aSTGTNode0.jjtAccept(nodeCollectVisitor0, (Object) null);
      assertNull(object1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ASTGTNode aSTGTNode0 = new ASTGTNode(1839);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) aSTGTNode0;
      nodeArray0[1] = (Node) aSTGTNode0;
      nodeArray0[2] = (Node) aSTGTNode0;
      nodeArray0[3] = (Node) aSTGTNode0;
      nodeArray0[4] = (Node) aSTGTNode0;
      nodeArray0[5] = (Node) aSTGTNode0;
      nodeArray0[6] = (Node) aSTGTNode0;
      aSTGTNode0.children = nodeArray0;
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTGTNode0.value(defaultInvocationContext0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ASTGTNode aSTGTNode0 = new ASTGTNode(3135);
      InterablePropertyCollectVisitor interablePropertyCollectVisitor0 = InterablePropertyCollectVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        aSTGTNode0.jjtAccept(interablePropertyCollectVisitor0, interablePropertyCollectVisitor0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ASTGTNode aSTGTNode0 = new ASTGTNode(1839);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTGTNode0.value(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ASTGTNode aSTGTNode0 = new ASTGTNode(0);
      ASTMerge aSTMerge0 = new ASTMerge((-16));
      aSTMerge0.jjtSetParent(aSTGTNode0);
      aSTGTNode0.jjtSetParent(aSTMerge0);
      NodeCollectVisitor nodeCollectVisitor0 = NodeCollectVisitor.INSTANCE;
      Object object0 = new Object();
      Object object1 = aSTGTNode0.jjtAccept(nodeCollectVisitor0, object0);
      Integer integer0 = new Integer((-16));
      aSTGTNode0.jjtAccept(nodeCollectVisitor0, integer0);
      Integer integer1 = new Integer(0);
      aSTGTNode0.toString("org.jfaster.mango.type.SqlTimeTypeHandler");
      Object object2 = aSTGTNode0.jjtAccept(nodeCollectVisitor0, integer1);
      aSTGTNode0.jjtAccept(nodeCollectVisitor0, object2);
      aSTGTNode0.jjtAccept(nodeCollectVisitor0, object1);
      aSTGTNode0.jjtAccept(nodeCollectVisitor0, nodeCollectVisitor0);
      DefaultInvocationContext.create();
      LinkedList<ParameterDescriptor> linkedList0 = new LinkedList<ParameterDescriptor>();
      DefaultParameterContext.create(linkedList0);
      Class<Float> class0 = Float.TYPE;
      JdbcType jdbcType0 = JdbcType.NCHAR;
      BindingParameter bindingParameter0 = BindingParameter.create("org.jfaster.mango.type.SqlTimeTypeHandlerRootNode", "org.jfaster.mango.type.SqlTimeTypeHandler", jdbcType0);
      // Undeclared exception!
      try { 
        TransferableBindingParameterInvoker.create(class0, bindingParameter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // caused by: null; caused by: caused by: null
         //
         verifyException("org.jfaster.mango.invoker.InvokerCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ASTGTNode aSTGTNode0 = new ASTGTNode(0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTGTNode0.evaluate(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = (-1189);
      ASTGTNode aSTGTNode0 = new ASTGTNode((-1189));
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTGTNode0.evaluate(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      ASTGTNode aSTGTNode0 = new ASTGTNode((-1));
      // Undeclared exception!
      try { 
        aSTGTNode0.jjtAccept((ParserVisitor) null, defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTGTNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "5&8V-";
      Parser parser0 = new Parser("5&8V-");
      ASTGTNode aSTGTNode0 = new ASTGTNode(parser0, 0);
      ParserVisitor parserVisitor0 = null;
      // Undeclared exception!
      try { 
        aSTGTNode0.jjtAccept((ParserVisitor) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTGTNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ASTGTNode aSTGTNode0 = new ASTGTNode((-4357));
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      Object object0 = aSTGTNode0.jjtAccept(parameterExpandVisitor0, parameterExpandVisitor0);
      assertSame(object0, parameterExpandVisitor0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Parser parser0 = new Parser((Reader) null);
      ASTGTNode aSTGTNode0 = new ASTGTNode(parser0, 0);
      // Undeclared exception!
      try { 
        parser0.getToken(4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Parser parser0 = new Parser((Reader) null);
      ASTGTNode aSTGTNode0 = new ASTGTNode(parser0, 1);
      assertEquals(0, aSTGTNode0.jjtGetNumChildren());
  }
}
