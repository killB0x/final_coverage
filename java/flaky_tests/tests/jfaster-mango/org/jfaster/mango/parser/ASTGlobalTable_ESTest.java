/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 00:21:11 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileDescriptor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.jfaster.mango.binding.DefaultInvocationContext;
import org.jfaster.mango.binding.InvocationContext;
import org.jfaster.mango.parser.ASTGlobalTable;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.ParserVisitor;
import org.jfaster.mango.parser.visitor.CheckAndBindVisitor;
import org.jfaster.mango.parser.visitor.NodeCollectVisitor;
import org.jfaster.mango.parser.visitor.ParameterExpandVisitor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTGlobalTable_ESTest extends ASTGlobalTable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ASTGlobalTable aSTGlobalTable0 = new ASTGlobalTable(494);
      CheckAndBindVisitor checkAndBindVisitor0 = CheckAndBindVisitor.INSTANCE;
      Object object0 = aSTGlobalTable0.jjtAccept(checkAndBindVisitor0, checkAndBindVisitor0);
      assertSame(object0, checkAndBindVisitor0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTGlobalTable aSTGlobalTable0 = new ASTGlobalTable((-1));
      // Undeclared exception!
      try { 
        aSTGlobalTable0.render((InvocationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTGlobalTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ASTGlobalTable aSTGlobalTable0 = new ASTGlobalTable((-223));
      // Undeclared exception!
      try { 
        aSTGlobalTable0.jjtAccept((ParserVisitor) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTGlobalTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Parser parser0 = new Parser(mockFileInputStream0);
      ASTGlobalTable aSTGlobalTable0 = new ASTGlobalTable(parser0, (-1));
      NodeCollectVisitor nodeCollectVisitor0 = NodeCollectVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        aSTGlobalTable0.jjtAccept(nodeCollectVisitor0, mockFileInputStream0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.evosuite.runtime.mock.java.io.MockFileInputStream cannot be cast to class org.jfaster.mango.parser.NodeInfo (org.evosuite.runtime.mock.java.io.MockFileInputStream is in unnamed module of loader 'app'; org.jfaster.mango.parser.NodeInfo is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @57df98a3)
         //
         verifyException("org.jfaster.mango.parser.visitor.NodeCollectVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ASTGlobalTable aSTGlobalTable0 = new ASTGlobalTable(1179);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      defaultInvocationContext0.setGlobalTable("org.jfaster.mango.parser.ASTGlobalTable");
      boolean boolean0 = aSTGlobalTable0.render(defaultInvocationContext0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ASTGlobalTable aSTGlobalTable0 = new ASTGlobalTable((Parser) null, 114);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTGlobalTable0.render(defaultInvocationContext0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // global table in InvocationContext can't be null
         //
         verifyException("org.jfaster.mango.parser.ASTGlobalTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ASTGlobalTable aSTGlobalTable0 = new ASTGlobalTable((-10));
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      Object object0 = aSTGlobalTable0.jjtAccept(parameterExpandVisitor0, (Object) null);
      assertNull(object0);
  }
}
