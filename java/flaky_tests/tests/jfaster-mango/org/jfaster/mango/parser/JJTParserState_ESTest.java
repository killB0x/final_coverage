/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 23:21:41 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.PipedInputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.parser.ASTBlock;
import org.jfaster.mango.parser.ASTDelete;
import org.jfaster.mango.parser.ASTElseStatement;
import org.jfaster.mango.parser.ASTGTNode;
import org.jfaster.mango.parser.ASTIntegerLiteral;
import org.jfaster.mango.parser.ASTNull;
import org.jfaster.mango.parser.ASTTrue;
import org.jfaster.mango.parser.ASTUpdate;
import org.jfaster.mango.parser.JJTParserState;
import org.jfaster.mango.parser.Node;
import org.jfaster.mango.parser.Parser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JJTParserState_ESTest extends JJTParserState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      // Undeclared exception!
      try { 
        jJTParserState0.closeNodeScope((Node) null, (-762));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      ASTIntegerLiteral aSTIntegerLiteral0 = new ASTIntegerLiteral(2);
      jJTParserState0.pushNode(aSTIntegerLiteral0);
      ASTBlock aSTBlock0 = new ASTBlock((-3584));
      jJTParserState0.pushNode(aSTBlock0);
      jJTParserState0.popNode();
      assertEquals(1, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2860);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      Parser parser0 = new Parser(bufferedInputStream0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      ASTDelete aSTDelete0 = new ASTDelete((-4177));
      jJTParserState0.openNodeScope(aSTDelete0);
      jJTParserState0.closeNodeScope((Node) aSTDelete0, true);
      assertTrue(jJTParserState0.nodeCreated());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      ASTElseStatement aSTElseStatement0 = new ASTElseStatement(5086);
      jJTParserState0.pushNode(aSTElseStatement0);
      jJTParserState0.openNodeScope(aSTElseStatement0);
      ASTGTNode aSTGTNode0 = new ASTGTNode(5086);
      jJTParserState0.closeNodeScope((Node) aSTGTNode0, 1);
      assertTrue(jJTParserState0.nodeCreated());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      Parser parser0 = new Parser(pipedReader0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      ASTDelete aSTDelete0 = new ASTDelete(parser0, 0);
      jJTParserState0.pushNode(aSTDelete0);
      Node[] nodeArray0 = new Node[5];
      aSTDelete0.children = nodeArray0;
      jJTParserState0.rootNode();
      assertEquals(1, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      ASTUpdate aSTUpdate0 = new ASTUpdate((-4177));
      jJTParserState0.pushNode(aSTUpdate0);
      jJTParserState0.peekNode();
      assertEquals(1, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      // Undeclared exception!
      try { 
        jJTParserState0.openNodeScope((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.JJTParserState", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2860);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      Parser parser0 = new Parser(bufferedInputStream0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      ASTDelete aSTDelete0 = new ASTDelete(parser0, 0);
      jJTParserState0.openNodeScope(aSTDelete0);
      // Undeclared exception!
      try { 
        jJTParserState0.closeNodeScope((Node) null, (-4177));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.JJTParserState", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2860);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      Parser parser0 = new Parser(bufferedInputStream0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      int int0 = jJTParserState0.nodeArity();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      // Undeclared exception!
      try { 
        jJTParserState0.closeNodeScope((Node) null, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2860);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      Parser parser0 = new Parser(bufferedInputStream0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      ASTDelete aSTDelete0 = new ASTDelete(parser0, (-4177));
      jJTParserState0.openNodeScope(aSTDelete0);
      // Undeclared exception!
      try { 
        jJTParserState0.closeNodeScope((Node) aSTDelete0, 706);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2860);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      Parser parser0 = new Parser(bufferedInputStream0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      ASTDelete aSTDelete0 = new ASTDelete(parser0, (-4177));
      jJTParserState0.openNodeScope(aSTDelete0);
      jJTParserState0.closeNodeScope((Node) aSTDelete0, 0);
      int int0 = jJTParserState0.nodeArity();
      assertTrue(jJTParserState0.nodeCreated());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      ASTNull aSTNull0 = new ASTNull((-856));
      jJTParserState0.pushNode(aSTNull0);
      ASTTrue aSTTrue0 = new ASTTrue((-856));
      // Undeclared exception!
      try { 
        jJTParserState0.clearNodeScope(aSTTrue0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2860);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      Parser parser0 = new Parser(bufferedInputStream0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      // Undeclared exception!
      try { 
        jJTParserState0.popNode();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      jJTParserState0.pushNode((Node) null);
      assertEquals(1, jJTParserState0.nodeArity());
      
      jJTParserState0.popNode();
      assertEquals(0, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      // Undeclared exception!
      try { 
        jJTParserState0.rootNode();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      // Undeclared exception!
      try { 
        jJTParserState0.peekNode();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2860);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      Parser parser0 = new Parser(bufferedInputStream0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      ASTDelete aSTDelete0 = new ASTDelete((-4177));
      jJTParserState0.openNodeScope(aSTDelete0);
      jJTParserState0.clearNodeScope(aSTDelete0);
      assertEquals(0, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      // Undeclared exception!
      try { 
        jJTParserState0.closeNodeScope((Node) null, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JJTParserState jJTParserState0 = new JJTParserState();
      jJTParserState0.reset();
      assertEquals(0, jJTParserState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2860);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      Parser parser0 = new Parser(bufferedInputStream0);
      JJTParserState jJTParserState0 = parser0.jjtree;
      jJTParserState0.nodeCreated();
      assertEquals(0, jJTParserState0.nodeArity());
  }
}
