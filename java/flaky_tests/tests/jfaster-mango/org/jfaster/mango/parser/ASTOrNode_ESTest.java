/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 23:49:19 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.FileNotFoundException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfaster.mango.binding.DefaultInvocationContext;
import org.jfaster.mango.parser.ASTAndNode;
import org.jfaster.mango.parser.ASTBlock;
import org.jfaster.mango.parser.ASTGENode;
import org.jfaster.mango.parser.ASTOrNode;
import org.jfaster.mango.parser.Node;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.ParserVisitor;
import org.jfaster.mango.parser.Token;
import org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor;
import org.jfaster.mango.parser.visitor.NodeCollectVisitor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTOrNode_ESTest extends ASTOrNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ASTOrNode aSTOrNode0 = new ASTOrNode(83);
      ASTOrNode aSTOrNode1 = new ASTOrNode(2525);
      NodeCollectVisitor nodeCollectVisitor0 = NodeCollectVisitor.INSTANCE;
      aSTOrNode0.jjtAccept(nodeCollectVisitor0, nodeCollectVisitor0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      aSTOrNode1.jjtAccept(nodeCollectVisitor0, (Object) null);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTOrNode0.evaluate(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ASTOrNode aSTOrNode0 = new ASTOrNode((-1178));
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) aSTOrNode0;
      nodeArray0[1] = (Node) aSTOrNode0;
      nodeArray0[2] = (Node) aSTOrNode0;
      Parser parser0 = new Parser("A$cbEW^]345Be}_J=x");
      ASTBlock aSTBlock0 = new ASTBlock(parser0, 540);
      nodeArray0[3] = (Node) aSTBlock0;
      nodeArray0[4] = (Node) aSTOrNode0;
      nodeArray0[5] = (Node) aSTOrNode0;
      nodeArray0[6] = (Node) aSTOrNode0;
      ASTGENode aSTGENode0 = new ASTGENode((-1));
      nodeArray0[7] = (Node) aSTGENode0;
      nodeArray0[8] = (Node) aSTOrNode0;
      aSTOrNode0.children = nodeArray0;
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      aSTOrNode0.value(defaultInvocationContext0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ASTOrNode aSTOrNode0 = new ASTOrNode(83);
      ASTOrNode aSTOrNode1 = new ASTOrNode(2525);
      NodeCollectVisitor nodeCollectVisitor0 = NodeCollectVisitor.INSTANCE;
      Object object0 = aSTOrNode0.jjtAccept(nodeCollectVisitor0, nodeCollectVisitor0);
      assertSame(nodeCollectVisitor0, object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      defaultInvocationContext0.getBoundSql();
      ASTOrNode aSTOrNode0 = new ASTOrNode(0);
      // Undeclared exception!
      try { 
        aSTOrNode0.jjtAccept((ParserVisitor) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTOrNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ASTOrNode aSTOrNode0 = new ASTOrNode(46);
      InterablePropertyCollectVisitor interablePropertyCollectVisitor0 = InterablePropertyCollectVisitor.INSTANCE;
      Object object0 = aSTOrNode0.value;
      // Undeclared exception!
      try { 
        aSTOrNode0.jjtAccept(interablePropertyCollectVisitor0, (Object) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ASTOrNode aSTOrNode0 = new ASTOrNode((-450));
      InterablePropertyCollectVisitor interablePropertyCollectVisitor0 = InterablePropertyCollectVisitor.INSTANCE;
      ASTAndNode aSTAndNode0 = new ASTAndNode((-1187));
      Object object0 = aSTOrNode0.childrenAccept(interablePropertyCollectVisitor0, aSTAndNode0);
      // Undeclared exception!
      try { 
        aSTOrNode0.jjtAccept(interablePropertyCollectVisitor0, object0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ASTOrNode aSTOrNode0 = new ASTOrNode((-1178));
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTOrNode0.value(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Parser parser0 = new Parser("NrpUkBE#`3*piWL");
      ASTOrNode aSTOrNode0 = new ASTOrNode(parser0, 0);
      assertEquals(0, aSTOrNode0.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1661);
      Parser parser0 = new Parser(byteArrayInputStream0);
      ASTOrNode aSTOrNode0 = new ASTOrNode(parser0, (byte)0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTOrNode0.value(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ASTOrNode aSTOrNode0 = new ASTOrNode(67);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTOrNode0.evaluate(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ASTOrNode aSTOrNode0 = new ASTOrNode(2852);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      defaultInvocationContext0.addParameter("WTPw/M", aSTOrNode0);
      // Undeclared exception!
      try { 
        aSTOrNode0.evaluate(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ASTOrNode aSTOrNode0 = new ASTOrNode(43);
      assertEquals(0, aSTOrNode0.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ASTOrNode aSTOrNode0 = new ASTOrNode(0);
      Token.newToken(0);
      MockFile mockFile0 = new MockFile("");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
