/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 00:13:06 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.binding.DefaultInvocationContext;
import org.jfaster.mango.parser.ASTIfStatement;
import org.jfaster.mango.parser.ASTIntegerLiteral;
import org.jfaster.mango.parser.ASTJDBCIterableParameter;
import org.jfaster.mango.parser.ASTNotNode;
import org.jfaster.mango.parser.Node;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.ParserVisitor;
import org.jfaster.mango.parser.visitor.CheckAndBindVisitor;
import org.jfaster.mango.parser.visitor.NodeCollectVisitor;
import org.jfaster.mango.parser.visitor.TextBlankJoinVisitor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTNotNode_ESTest extends ASTNotNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode((-1));
      CheckAndBindVisitor checkAndBindVisitor0 = CheckAndBindVisitor.INSTANCE;
      Object object0 = aSTNotNode0.jjtAccept(checkAndBindVisitor0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode(86);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTNotNode0.value(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode(0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      Node[] nodeArray0 = new Node[9];
      ASTIfStatement aSTIfStatement0 = new ASTIfStatement(0);
      nodeArray0[0] = (Node) aSTIfStatement0;
      aSTNotNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        aSTNotNode0.value(defaultInvocationContext0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.ASTIfStatement cannot be cast to class org.jfaster.mango.parser.AbstractExpression (org.jfaster.mango.parser.ASTIfStatement and org.jfaster.mango.parser.AbstractExpression are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @2cd920be)
         //
         verifyException("org.jfaster.mango.parser.ASTNotNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode(0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      TextBlankJoinVisitor textBlankJoinVisitor0 = TextBlankJoinVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        aSTNotNode0.jjtAccept(textBlankJoinVisitor0, defaultInvocationContext0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.TextBlankJoinVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode(0);
      // Undeclared exception!
      try { 
        aSTNotNode0.jjtAccept((ParserVisitor) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTNotNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode(1435);
      ASTJDBCIterableParameter aSTJDBCIterableParameter0 = new ASTJDBCIterableParameter(1435);
      aSTNotNode0.jjtAddChild(aSTJDBCIterableParameter0, 0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTNotNode0.evaluate(defaultInvocationContext0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.ASTJDBCIterableParameter cannot be cast to class org.jfaster.mango.parser.AbstractExpression (org.jfaster.mango.parser.ASTJDBCIterableParameter and org.jfaster.mango.parser.AbstractExpression are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @2cd920be)
         //
         verifyException("org.jfaster.mango.parser.ASTNotNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode((-6));
      ASTIntegerLiteral aSTIntegerLiteral0 = new ASTIntegerLiteral((-6));
      aSTNotNode0.jjtAddChild(aSTIntegerLiteral0, 0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      Object object0 = aSTNotNode0.value(defaultInvocationContext0);
      assertEquals(false, object0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode(0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTNotNode0.evaluate(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Parser parser0 = new Parser("9W,_1AO%mt,");
      ASTNotNode aSTNotNode0 = new ASTNotNode(parser0, 803);
      NodeCollectVisitor nodeCollectVisitor0 = NodeCollectVisitor.INSTANCE;
      Object object0 = aSTNotNode0.jjtAccept(nodeCollectVisitor0, nodeCollectVisitor0);
      assertEquals(NodeCollectVisitor.INSTANCE, object0);
  }
}
