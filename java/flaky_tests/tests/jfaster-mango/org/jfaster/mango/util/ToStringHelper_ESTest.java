/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 22:38:00 GMT 2022
 */

package org.jfaster.mango.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.lang.reflect.Method;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.descriptor.MethodDescriptor;
import org.jfaster.mango.descriptor.ParameterDescriptor;
import org.jfaster.mango.descriptor.ReturnDescriptor;
import org.jfaster.mango.util.ToStringHelper;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ToStringHelper_ESTest extends ToStringHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      String string0 = ToStringHelper.toString((Type) class0);
      assertEquals("Annotation", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToStringHelper.toString((MethodDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.util.ToStringHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<ParameterDescriptor> class0 = ParameterDescriptor.class;
      Iterator<Class> iterator0 = (Iterator<Class>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(iterator0).hasNext();
      doReturn((Object) null).when(iterator0).next();
      Iterable<Class> iterable0 = (Iterable<Class>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      // Undeclared exception!
      try { 
        ToStringHelper.toString(iterable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.util.ToStringHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToStringHelper.toString((Iterable<Class>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.util.ToStringHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToStringHelper.printTypes((StringBuffer) null, (Type[]) null, "[QLl5O+ifSd~QOP", "[QLl5O+ifSd~QOP", "[QLl5O+ifSd~QOP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.util.ToStringHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Type[] typeArray0 = new Type[0];
      ToStringHelper.printTypes(stringBuffer0, typeArray0, "(", (String) null, (String) null);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "@)Gxd#0aSAVU.{<=#");
      Type[] typeArray0 = new Type[5];
      ToStringHelper.printTypes(stringBuffer0, typeArray0, "; ", "@)Gxd#0aSAVU.{<=#", "Object");
      assertEquals("@)Gxd#0aSAVU.{<=#; @)Gxd#0aSAVU.{<=#@)Gxd#0aSAVU.{<=#@)Gxd#0aSAVU.{<=#@)Gxd#0aSAVU.{<=#Object", stringBuffer0.toString());
      assertEquals(93, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<ParameterDescriptor> class0 = ParameterDescriptor.class;
      ArrayList<ParameterDescriptor> arrayList0 = new ArrayList<ParameterDescriptor>();
      LinkedList<Annotation> linkedList0 = new LinkedList<Annotation>();
      ParameterDescriptor parameterDescriptor0 = ParameterDescriptor.create(2099, class0, linkedList0, "ParameterDescriptor");
      arrayList0.add(parameterDescriptor0);
      MethodDescriptor methodDescriptor0 = MethodDescriptor.create("={@R2$i'0_ )?", class0, (ReturnDescriptor) null, arrayList0);
      String string0 = ToStringHelper.toString(methodDescriptor0);
      assertEquals("ParameterDescriptor.={@R2$i'0_ )?(ParameterDescriptor)", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Type[] typeArray0 = new Type[1];
      String string0 = ToStringHelper.toString(typeArray0[0]);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ToStringHelper toStringHelper0 = new ToStringHelper();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToStringHelper.toString((Method) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.util.ToStringHelper", e);
      }
  }
}
