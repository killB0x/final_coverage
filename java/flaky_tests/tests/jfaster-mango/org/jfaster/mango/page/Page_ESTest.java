/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 00:05:45 GMT 2022
 */

package org.jfaster.mango.page;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.page.Direction;
import org.jfaster.mango.page.Order;
import org.jfaster.mango.page.Page;
import org.jfaster.mango.page.Sort;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Page_ESTest extends Page_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        Page.of((-2545), 1678);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // pageNum need >= 0, but pageNum is -2545
         //
         verifyException("org.jfaster.mango.page.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Order[] orderArray0 = new Order[0];
      Sort sort0 = Sort.by(orderArray0);
      Page page0 = Page.of(0, 3052, sort0);
      assertEquals(3052, page0.getPageSize());
      assertEquals(0, page0.getPageNum());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Page page0 = Page.of(140, 140, (Sort) null);
      assertEquals(140, page0.getPageNum());
      assertEquals(140, page0.getPageSize());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Direction direction0 = Direction.DESC;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "ASC";
      stringArray0[1] = "ydZCGd_: ";
      stringArray0[2] = "org.jfaster.mango.page.Page";
      stringArray0[3] = "B!EOgT#>x>";
      stringArray0[4] = "l";
      stringArray0[5] = "pageSize need > 0, but pageSize is ";
      Page page0 = Page.of(0, 1, direction0, stringArray0);
      assertEquals(1, page0.getPageSize());
      assertEquals(0, page0.getPageNum());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Direction direction0 = Direction.DESC;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "org.jfaster.mango.page.Direction";
      Page page0 = Page.of(2, 1329, direction0, stringArray0);
      page0.getSort();
      assertEquals(2, page0.getPageNum());
      assertEquals(1329, page0.getPageSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Page page0 = Page.of(16, 16);
      int int0 = page0.getPageNum();
      assertEquals(16, page0.getPageSize());
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        Page.of(0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // pageSize need > 0, but pageSize is 0
         //
         verifyException("org.jfaster.mango.page.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Direction direction0 = Direction.ASC;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "=4l_5GGu|";
      stringArray0[1] = "Z,R4+-+&S/<=.#x|T\"";
      stringArray0[2] = ".";
      stringArray0[3] = "#p[M8W|";
      stringArray0[4] = "4Z3\"$TWS#WR<";
      stringArray0[5] = "pyYi#z";
      // Undeclared exception!
      try { 
        Page.of(2948, (-2024), direction0, stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // pageSize need > 0, but pageSize is -2024
         //
         verifyException("org.jfaster.mango.page.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Page.of((-3532), (-3532), (Sort) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // pageNum need >= 0, but pageNum is -3532
         //
         verifyException("org.jfaster.mango.page.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Page page0 = Page.of(0, 1);
      int int0 = page0.getPageNum();
      assertEquals(0, int0);
      assertEquals(1, page0.getPageSize());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Page page0 = Page.of(140, 140);
      page0.getSort();
      assertEquals(140, page0.getPageSize());
      assertEquals(140, page0.getPageNum());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Page page0 = Page.of(302, 302);
      int int0 = page0.getPageSize();
      assertEquals(302, page0.getPageNum());
      assertEquals(302, int0);
  }
}
