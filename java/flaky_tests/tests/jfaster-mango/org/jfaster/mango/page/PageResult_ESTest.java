/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 01:55:50 GMT 2022
 */

package org.jfaster.mango.page;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.page.PageResult;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PageResult_ESTest extends PageResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      PageResult<Integer> pageResult0 = PageResult.empty(class0);
      long long0 = pageResult0.getTotal();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      PageResult<Object> pageResult0 = new PageResult<Object>(linkedList0, (-1740L));
      long long0 = pageResult0.getTotal();
      assertEquals((-1740L), long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PageResult<Integer> pageResult0 = new PageResult<Integer>((List<Integer>) null, 3008L);
      pageResult0.getData();
      assertEquals(3008L, pageResult0.getTotal());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      PageResult<Object> pageResult0 = new PageResult<Object>(linkedList0, (-190L));
      linkedList0.add((Object) null);
      pageResult0.getData();
      assertEquals((-190L), pageResult0.getTotal());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      PageResult<Object> pageResult0 = PageResult.empty(class0);
      pageResult0.getData();
      assertEquals(0L, pageResult0.getTotal());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PageResult<Integer> pageResult0 = new PageResult<Integer>((List<Integer>) null, 3008L);
      long long0 = pageResult0.getTotal();
      assertEquals(3008L, long0);
  }
}
