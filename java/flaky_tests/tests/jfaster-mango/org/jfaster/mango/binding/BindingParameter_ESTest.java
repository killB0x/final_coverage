/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 23:17:57 GMT 2022
 */

package org.jfaster.mango.binding;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.binding.BindingParameter;
import org.jfaster.mango.util.jdbc.JdbcType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BindingParameter_ESTest extends BindingParameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.BOOLEAN;
      BindingParameter bindingParameter0 = BindingParameter.create("", (String) null, jdbcType0);
      boolean boolean0 = bindingParameter0.hasProperty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.TINYINT;
      BindingParameter bindingParameter0 = BindingParameter.create("NCLOB", "6@-O]]R+es'z_", jdbcType0);
      String string0 = bindingParameter0.getPropertyName();
      assertEquals("6@-O]]R+es'z_", string0);
      assertEquals("NCLOB", bindingParameter0.getParameterName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.BOOLEAN;
      BindingParameter bindingParameter0 = BindingParameter.create("", (String) null, jdbcType0);
      BindingParameter bindingParameter1 = bindingParameter0.rightShift();
      String string0 = bindingParameter1.getPropertyName();
      assertFalse(bindingParameter1.equals((Object)bindingParameter0));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.CLOB;
      BindingParameter bindingParameter0 = new BindingParameter((String) null, (String) null, jdbcType0);
      String string0 = bindingParameter0.getParameterName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.DECIMAL;
      BindingParameter bindingParameter0 = new BindingParameter(".", "", jdbcType0);
      String string0 = bindingParameter0.getParameterName();
      assertEquals(".", string0);
      assertEquals("", bindingParameter0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.UNDEFINED;
      BindingParameter bindingParameter0 = BindingParameter.create("", "", jdbcType0);
      JdbcType jdbcType1 = bindingParameter0.getJdbcType();
      assertSame(jdbcType1, jdbcType0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BindingParameter bindingParameter0 = BindingParameter.create("f9", "9", (JdbcType) null);
      bindingParameter0.getJdbcType();
      assertEquals("9", bindingParameter0.getPropertyName());
      assertEquals("f9", bindingParameter0.getParameterName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.CLOB;
      BindingParameter bindingParameter0 = new BindingParameter((String) null, (String) null, jdbcType0);
      String string0 = bindingParameter0.getPropertyName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.CLOB;
      BindingParameter bindingParameter0 = new BindingParameter((String) null, (String) null, jdbcType0);
      String string0 = bindingParameter0.getFullName();
      assertEquals(":null", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.TINYINT;
      BindingParameter bindingParameter0 = BindingParameter.create("NCLOB", "6@-O]]R+es'z_", jdbcType0);
      bindingParameter0.hasProperty();
      assertEquals("6@-O]]R+es'z_", bindingParameter0.getPropertyName());
      assertEquals("NCLOB", bindingParameter0.getParameterName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.REF;
      BindingParameter bindingParameter0 = BindingParameter.create("", "", jdbcType0);
      String string0 = bindingParameter0.getParameterName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.REF;
      BindingParameter bindingParameter0 = BindingParameter.create("", "", jdbcType0);
      JdbcType jdbcType1 = JdbcType.TINYINT;
      BindingParameter bindingParameter1 = new BindingParameter("", "", jdbcType1);
      boolean boolean0 = bindingParameter0.equals(bindingParameter1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.TIME;
      BindingParameter bindingParameter0 = new BindingParameter("", (String) null, jdbcType0);
      BindingParameter bindingParameter1 = bindingParameter0.rightShift();
      boolean boolean0 = bindingParameter0.equals(bindingParameter1);
      assertFalse(boolean0);
      assertEquals("", bindingParameter1.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.SMALLINT;
      BindingParameter bindingParameter0 = BindingParameter.create("\"K8ewPK&OEj8:6A=G\";", "\"K8ewPK&OEj8:6A=G\";", jdbcType0);
      BindingParameter bindingParameter1 = bindingParameter0.rightShift();
      boolean boolean0 = bindingParameter0.equals(bindingParameter1);
      assertFalse(boolean0);
      assertEquals("", bindingParameter1.getParameterName());
      assertEquals("\"K8ewPK&OEj8:6A=G\";.\"K8ewPK&OEj8:6A=G\";", bindingParameter1.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.REF;
      BindingParameter bindingParameter0 = BindingParameter.create("", "", jdbcType0);
      Object object0 = new Object();
      boolean boolean0 = bindingParameter0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.SQLXML;
      BindingParameter bindingParameter0 = BindingParameter.create((String) null, (String) null, jdbcType0);
      boolean boolean0 = bindingParameter0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.NVARCHAR;
      BindingParameter bindingParameter0 = BindingParameter.create("*%l5E3w", "*%l5E3w", jdbcType0);
      bindingParameter0.hashCode();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.TIMESTAMP;
      BindingParameter bindingParameter0 = BindingParameter.create("x=Z1p'xU", "x=Z1p'xU", jdbcType0);
      boolean boolean0 = bindingParameter0.equals(bindingParameter0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BindingParameter bindingParameter0 = BindingParameter.create("f9", "9", (JdbcType) null);
      String string0 = bindingParameter0.toString();
      assertEquals(":f9.9", string0);
  }
}
