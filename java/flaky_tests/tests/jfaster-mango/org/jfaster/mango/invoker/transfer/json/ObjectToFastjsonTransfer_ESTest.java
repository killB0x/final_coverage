/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 00:15:46 GMT 2022
 */

package org.jfaster.mango.invoker.transfer.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Type;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.invoker.transfer.json.ObjectToFastjsonTransfer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ObjectToFastjsonTransfer_ESTest extends ObjectToFastjsonTransfer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ObjectToFastjsonTransfer objectToFastjsonTransfer0 = new ObjectToFastjsonTransfer();
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      Object object0 = objectToFastjsonTransfer0.columnToProperty((String) null, type0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ObjectToFastjsonTransfer objectToFastjsonTransfer0 = new ObjectToFastjsonTransfer();
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        objectToFastjsonTransfer0.columnToProperty("P9 30kB#dJclsg4{", type0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/alibaba/fastjson/parser/Feature
         //
         verifyException("org.jfaster.mango.invoker.transfer.json.ObjectToFastjsonTransfer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ObjectToFastjsonTransfer objectToFastjsonTransfer0 = new ObjectToFastjsonTransfer();
      String string0 = objectToFastjsonTransfer0.propertyToColumn((Object) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ObjectToFastjsonTransfer objectToFastjsonTransfer0 = new ObjectToFastjsonTransfer();
      // Undeclared exception!
      try { 
        objectToFastjsonTransfer0.propertyToColumn(objectToFastjsonTransfer0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/alibaba/fastjson/JSON
         //
         verifyException("org.jfaster.mango.invoker.transfer.json.ObjectToFastjsonTransfer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ObjectToFastjsonTransfer objectToFastjsonTransfer0 = new ObjectToFastjsonTransfer();
      boolean boolean0 = objectToFastjsonTransfer0.isCheckType();
      assertFalse(boolean0);
  }
}
