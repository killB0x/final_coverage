/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 22:34:30 GMT 2022
 */

package org.jfaster.mango.transaction;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.sql.DataSource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.datasource.DataSourceFactory;
import org.jfaster.mango.datasource.DriverManagerDataSource;
import org.jfaster.mango.datasource.MasterSlaveDataSourceFactory;
import org.jfaster.mango.datasource.SimpleDataSourceFactory;
import org.jfaster.mango.operator.Mango;
import org.jfaster.mango.transaction.TransactionFactory;
import org.jfaster.mango.transaction.TransactionIsolationLevel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TransactionFactory_ESTest extends TransactionFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Mango mango0 = Mango.newInstance();
      TransactionIsolationLevel transactionIsolationLevel0 = TransactionIsolationLevel.SERIALIZABLE;
      // Undeclared exception!
      try { 
        TransactionFactory.newTransaction(mango0, " \"Up^", transactionIsolationLevel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.operator.Mango", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleDataSourceFactory simpleDataSourceFactory0 = new SimpleDataSourceFactory();
      Mango mango0 = Mango.newInstance((DataSourceFactory) simpleDataSourceFactory0);
      TransactionIsolationLevel transactionIsolationLevel0 = TransactionIsolationLevel.SERIALIZABLE;
      // Undeclared exception!
      try { 
        TransactionFactory.newTransaction(mango0, "DEFAULT", transactionIsolationLevel0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // the datasource fetched by datasource factory is null, datasource factory name is [DEFAULT]
         //
         verifyException("org.jfaster.mango.datasource.DataSourceFactoryGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MasterSlaveDataSourceFactory masterSlaveDataSourceFactory0 = new MasterSlaveDataSourceFactory();
      Mango mango0 = Mango.newInstance((DataSourceFactory) masterSlaveDataSourceFactory0);
      // Undeclared exception!
      try { 
        TransactionFactory.newTransaction(mango0, "DEFAULT");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // the datasource fetched by datasource factory is null, datasource factory name is [DEFAULT]
         //
         verifyException("org.jfaster.mango.datasource.DataSourceFactoryGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      // Undeclared exception!
      try { 
        TransactionFactory.newTransaction((DataSource) driverManagerDataSource0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not open JDBC Connection for transaction; caused by: null
         //
         verifyException("org.jfaster.mango.transaction.TransactionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TransactionIsolationLevel transactionIsolationLevel0 = TransactionIsolationLevel.DEFAULT;
      // Undeclared exception!
      try { 
        TransactionFactory.newTransaction("mI1qim", transactionIsolationLevel0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The number of instances mango expected 1 but 45, Please specify mango instance
         //
         verifyException("org.jfaster.mango.transaction.TransactionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      Mango mango0 = Mango.newInstance((DataSource) driverManagerDataSource0);
      TransactionIsolationLevel transactionIsolationLevel0 = TransactionIsolationLevel.READ_UNCOMMITTED;
      // Undeclared exception!
      try { 
        TransactionFactory.newTransaction(mango0, "DEFAULT", transactionIsolationLevel0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not open JDBC Connection for transaction; caused by: null
         //
         verifyException("org.jfaster.mango.transaction.TransactionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        TransactionFactory.newTransaction("org.jfaster.mango.transaction.TransactionFactory");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The number of instances mango expected 1 but 46, Please specify mango instance
         //
         verifyException("org.jfaster.mango.transaction.TransactionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      Mango mango0 = Mango.newInstance((DataSource) driverManagerDataSource0);
      // Undeclared exception!
      try { 
        TransactionFactory.newTransaction(mango0, "DEFAULT");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not open JDBC Connection for transaction; caused by: null
         //
         verifyException("org.jfaster.mango.transaction.TransactionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        TransactionFactory.newTransaction((DataSource) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DataSource can't be null
         //
         verifyException("org.jfaster.mango.transaction.TransactionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        TransactionFactory.newTransaction();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The number of instances mango expected 1 but 47, Please specify mango instance
         //
         verifyException("org.jfaster.mango.transaction.TransactionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Mango mango0 = Mango.newInstance();
      // Undeclared exception!
      try { 
        TransactionFactory.newTransaction(mango0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.operator.Mango", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TransactionIsolationLevel transactionIsolationLevel0 = TransactionIsolationLevel.READ_COMMITTED;
      // Undeclared exception!
      try { 
        TransactionFactory.newTransaction(transactionIsolationLevel0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The number of instances mango expected 1 but 48, Please specify mango instance
         //
         verifyException("org.jfaster.mango.transaction.TransactionFactory", e);
      }
  }
}
