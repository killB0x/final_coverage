/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 22:14:27 GMT 2022
 */

package org.jfaster.mango.transaction;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.sql.DataSource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.datasource.DriverManagerDataSource;
import org.jfaster.mango.transaction.TransactionImpl;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TransactionImpl_ESTest extends TransactionImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      TransactionImpl transactionImpl0 = new TransactionImpl(true, driverManagerDataSource0, (Integer) null, true);
      assertFalse(transactionImpl0.isRollbackOnly());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TransactionImpl transactionImpl0 = new TransactionImpl(false, (DataSource) null);
      assertFalse(transactionImpl0.isRollbackOnly());
      
      transactionImpl0.setRollbackOnly(true);
      boolean boolean0 = transactionImpl0.isRollbackOnly();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      TransactionImpl transactionImpl0 = new TransactionImpl(true, driverManagerDataSource0);
      // Undeclared exception!
      try { 
        transactionImpl0.rollback();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ConnectionHolder bind to DataSource [org.jfaster.mango.datasource.DriverManagerDataSource@1]
         //
         verifyException("org.jfaster.mango.transaction.TransactionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TransactionImpl transactionImpl0 = new TransactionImpl(false, (DataSource) null);
      // Undeclared exception!
      try { 
        transactionImpl0.commit();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ConnectionHolder bind to DataSource [null]
         //
         verifyException("org.jfaster.mango.transaction.TransactionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TransactionImpl transactionImpl0 = new TransactionImpl(false, (DataSource) null);
      boolean boolean0 = transactionImpl0.isRollbackOnly();
      assertFalse(boolean0);
  }
}
