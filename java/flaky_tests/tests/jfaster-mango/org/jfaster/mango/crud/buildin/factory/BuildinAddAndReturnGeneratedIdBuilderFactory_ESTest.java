/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 00:40:34 GMT 2022
 */

package org.jfaster.mango.crud.buildin.factory;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Type;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.crud.CrudMeta;
import org.jfaster.mango.crud.buildin.factory.BuildinAddAndReturnGeneratedIdBuilderFactory;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BuildinAddAndReturnGeneratedIdBuilderFactory_ESTest extends BuildinAddAndReturnGeneratedIdBuilderFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BuildinAddAndReturnGeneratedIdBuilderFactory buildinAddAndReturnGeneratedIdBuilderFactory0 = new BuildinAddAndReturnGeneratedIdBuilderFactory();
      // Undeclared exception!
      try { 
        buildinAddAndReturnGeneratedIdBuilderFactory0.createInternalBuilder((CrudMeta) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.crud.buildin.factory.BuildinAddAndReturnGeneratedIdBuilderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BuildinAddAndReturnGeneratedIdBuilderFactory buildinAddAndReturnGeneratedIdBuilderFactory0 = new BuildinAddAndReturnGeneratedIdBuilderFactory();
      Class<Object> class0 = Object.class;
      CrudMeta crudMeta0 = new CrudMeta(class0);
      // Undeclared exception!
      try { 
        buildinAddAndReturnGeneratedIdBuilderFactory0.createInternalBuilder(crudMeta0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No @AutoGenerated, but called addAndReturnGeneratedId
         //
         verifyException("org.jfaster.mango.crud.buildin.factory.BuildinAddAndReturnGeneratedIdBuilderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BuildinAddAndReturnGeneratedIdBuilderFactory buildinAddAndReturnGeneratedIdBuilderFactory0 = new BuildinAddAndReturnGeneratedIdBuilderFactory();
      Class<Object> class0 = Object.class;
      Class<Integer> class1 = Integer.class;
      List<Type> list0 = buildinAddAndReturnGeneratedIdBuilderFactory0.expectedParameterType(class0, class1);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BuildinAddAndReturnGeneratedIdBuilderFactory buildinAddAndReturnGeneratedIdBuilderFactory0 = new BuildinAddAndReturnGeneratedIdBuilderFactory();
      Class<Integer> class0 = Integer.class;
      Class class1 = (Class)buildinAddAndReturnGeneratedIdBuilderFactory0.expectedReturnType(class0);
      assertFalse(class1.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BuildinAddAndReturnGeneratedIdBuilderFactory buildinAddAndReturnGeneratedIdBuilderFactory0 = new BuildinAddAndReturnGeneratedIdBuilderFactory();
      String string0 = buildinAddAndReturnGeneratedIdBuilderFactory0.expectedMethodName();
      assertEquals("addAndReturnGeneratedId", string0);
  }
}
