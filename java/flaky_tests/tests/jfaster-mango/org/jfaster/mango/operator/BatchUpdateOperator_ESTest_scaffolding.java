/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Nov 02 23:10:19 GMT 2022
 */

package org.jfaster.mango.operator;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class BatchUpdateOperator_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.jfaster.mango.operator.BatchUpdateOperator"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(BatchUpdateOperator_ESTest_scaffolding.class.getClassLoader() ,
      "org.jfaster.mango.util.reflect.TypeToken",
      "org.jfaster.mango.exception.MangoException",
      "org.jfaster.mango.util.logging.AbstractInternalLogger",
      "org.jfaster.mango.util.reflect.TypeWrapper",
      "org.jfaster.mango.util.reflect.TypeToken$1",
      "org.jfaster.mango.operator.AbstractOperator",
      "org.jfaster.mango.annotation.Sharding",
      "org.jfaster.mango.util.ToStringHelper",
      "org.jfaster.mango.jdbc.JdbcOperations",
      "org.jfaster.mango.parser.ParserVisitor",
      "org.jfaster.mango.operator.Operator",
      "org.jfaster.mango.transaction.exception.CannotCreateTransactionException",
      "org.jfaster.mango.binding.InvocationContextFactory",
      "org.jfaster.mango.exception.DescriptionException",
      "org.jfaster.mango.datasource.DriverManagerDataSource",
      "org.jfaster.mango.util.logging.Slf4JLogger",
      "org.jfaster.mango.util.IterObj",
      "org.jfaster.mango.operator.BatchUpdateOperator$IntegerTransformer",
      "org.jfaster.mango.annotation.UseTransactionForBatchUpdate",
      "org.jfaster.mango.parser.NodeInfo",
      "org.jfaster.mango.transaction.TransactionFactory",
      "org.jfaster.mango.transaction.TransactionSynchronizationManager",
      "org.jfaster.mango.util.reflect.TypeCapture",
      "org.jfaster.mango.parser.Node",
      "org.jfaster.mango.binding.BindingParameterInvoker",
      "org.jfaster.mango.util.reflect.TypeToken$SimpleTypeToken",
      "org.jfaster.mango.util.reflect.TypeVisitor",
      "org.jfaster.mango.parser.AbstractRenderableNode",
      "org.jfaster.mango.binding.BindingParameter",
      "org.jfaster.mango.util.logging.Slf4JLoggerFactory",
      "org.jfaster.mango.binding.DefaultInvocationContext",
      "org.jfaster.mango.descriptor.MethodDescriptor",
      "org.jfaster.mango.util.jdbc.SQLType",
      "org.jfaster.mango.binding.ParameterContext",
      "org.jfaster.mango.util.Iterables",
      "org.jfaster.mango.operator.BatchUpdateOperator$IntegerArrayTransformer",
      "org.jfaster.mango.descriptor.TypeWithAnnotationDescriptor",
      "org.jfaster.mango.binding.DefaultParameterContext",
      "org.jfaster.mango.operator.BatchUpdateOperator",
      "org.jfaster.mango.util.reflect.TypeWrapper$1",
      "org.jfaster.mango.type.TypeHandler",
      "org.jfaster.mango.jdbc.ListSupplier",
      "org.jfaster.mango.binding.BindingException",
      "org.jfaster.mango.descriptor.ReturnDescriptor",
      "org.jfaster.mango.jdbc.ArrayListSuppliter",
      "org.jfaster.mango.descriptor.ParameterDescriptor",
      "org.jfaster.mango.parser.SimpleNode",
      "org.jfaster.mango.jdbc.exception.DataAccessResourceFailureException",
      "org.jfaster.mango.operator.generator.DataSourceGenerator",
      "org.jfaster.mango.binding.BoundSql",
      "org.jfaster.mango.jdbc.exception.DataAccessException",
      "org.jfaster.mango.parser.ParserConstants",
      "org.jfaster.mango.util.logging.Slf4JLoggerFactory$1",
      "org.jfaster.mango.util.logging.InternalLogger",
      "org.jfaster.mango.operator.BatchUpdateOperator$VoidTransformer",
      "org.jfaster.mango.util.logging.InternalLoggerFactory",
      "org.jfaster.mango.operator.Config",
      "org.jfaster.mango.parser.Token",
      "org.jfaster.mango.transaction.TransactionIsolationLevel",
      "org.jfaster.mango.transaction.Transaction",
      "org.jfaster.mango.parser.ASTRootNode",
      "org.jfaster.mango.operator.BatchUpdateOperator$Group",
      "org.jfaster.mango.transaction.exception.CannotGetJdbcConnectionException",
      "org.jfaster.mango.binding.InvocationContext",
      "org.jfaster.mango.transaction.DataSourceUtils",
      "org.jfaster.mango.operator.BatchUpdateOperator$IntArrayTransformer",
      "org.jfaster.mango.parser.ParserTreeConstants",
      "org.jfaster.mango.operator.generator.TableGenerator",
      "org.jfaster.mango.parser.Parser",
      "org.jfaster.mango.transaction.exception.TransactionException",
      "org.jfaster.mango.jdbc.exception.NonTransientDataAccessException",
      "org.jfaster.mango.operator.BatchUpdateOperator$Transformer"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(BatchUpdateOperator_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.jfaster.mango.operator.AbstractOperator",
      "org.jfaster.mango.operator.BatchUpdateOperator$VoidTransformer",
      "org.jfaster.mango.operator.BatchUpdateOperator$IntegerTransformer",
      "org.jfaster.mango.operator.BatchUpdateOperator$IntArrayTransformer",
      "org.jfaster.mango.operator.BatchUpdateOperator$IntegerArrayTransformer",
      "org.jfaster.mango.operator.BatchUpdateOperator",
      "org.jfaster.mango.operator.BatchUpdateOperator$Group",
      "org.jfaster.mango.util.logging.Slf4JLoggerFactory",
      "org.jfaster.mango.util.logging.Slf4JLoggerFactory$1",
      "org.jfaster.mango.util.logging.AbstractInternalLogger",
      "org.jfaster.mango.util.logging.Slf4JLogger",
      "org.jfaster.mango.util.logging.InternalLoggerFactory",
      "org.jfaster.mango.util.logging.Log4J2LoggerFactory",
      "org.jfaster.mango.util.logging.Log4JLoggerFactory",
      "org.jfaster.mango.util.logging.NoLoggerFactory",
      "org.jfaster.mango.transaction.TransactionIsolationLevel",
      "org.jfaster.mango.transaction.TransactionSynchronizationManager",
      "org.jfaster.mango.transaction.TransactionFactory",
      "org.jfaster.mango.transaction.DataSourceUtils",
      "org.jfaster.mango.parser.SimpleNode",
      "org.jfaster.mango.parser.AbstractRenderableNode",
      "org.jfaster.mango.parser.ASTRootNode",
      "org.jfaster.mango.parser.NodeInfo",
      "org.jfaster.mango.operator.Config",
      "org.jfaster.mango.descriptor.TypeWithAnnotationDescriptor",
      "org.jfaster.mango.descriptor.ReturnDescriptor",
      "org.jfaster.mango.util.reflect.TypeCapture",
      "org.jfaster.mango.util.reflect.TypeToken",
      "org.jfaster.mango.util.reflect.TypeToken$SimpleTypeToken",
      "org.jfaster.mango.util.reflect.TypeVisitor",
      "org.jfaster.mango.util.reflect.TypeToken$1",
      "org.jfaster.mango.util.reflect.TypeWrapper",
      "org.jfaster.mango.util.reflect.TypeWrapper$1",
      "org.jfaster.mango.jdbc.ArrayListSuppliter",
      "org.jfaster.mango.binding.DefaultParameterContext",
      "org.jfaster.mango.descriptor.MethodDescriptor",
      "org.jfaster.mango.util.ToStringHelper",
      "org.jfaster.mango.exception.MangoException",
      "org.jfaster.mango.exception.DescriptionException",
      "org.jfaster.mango.parser.Parser",
      "org.jfaster.mango.parser.JJTParserState",
      "org.jfaster.mango.parser.SimpleCharStream",
      "org.jfaster.mango.parser.ParserTokenManager",
      "org.jfaster.mango.parser.Token",
      "org.jfaster.mango.jdbc.LinkedListSuppliter",
      "org.jfaster.mango.binding.DefaultInvocationContext",
      "org.jfaster.mango.binding.BoundSql",
      "org.jfaster.mango.binding.BindingParameter",
      "org.jfaster.mango.binding.TransferableBindingParameterInvoker",
      "org.jfaster.mango.util.Strings",
      "org.jfaster.mango.util.local.DoubleCheckCache",
      "org.jfaster.mango.invoker.InvokerCache",
      "org.jfaster.mango.invoker.InvokerCache$InvokerInfo",
      "org.jfaster.mango.util.bean.BeanUtil$1",
      "org.jfaster.mango.util.bean.BeanUtil",
      "org.jfaster.mango.invoker.UnreachablePropertyException",
      "org.jfaster.mango.binding.BindingException",
      "org.jfaster.mango.parser.ParseException",
      "org.jfaster.mango.parser.ParserConstants",
      "org.jfaster.mango.descriptor.ParameterDescriptor",
      "org.jfaster.mango.parser.TokenMgrError",
      "org.jfaster.mango.jdbc.JdbcTemplate",
      "org.jfaster.mango.jdbc.JdbcTemplate$1",
      "org.jfaster.mango.datasource.DriverManagerDataSource",
      "org.jfaster.mango.parser.ASTJDBCParameter",
      "org.jfaster.mango.parser.AbstractDMLNode",
      "org.jfaster.mango.parser.ASTInsert",
      "org.jfaster.mango.parser.ParserTreeConstants",
      "org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor",
      "org.jfaster.mango.mapper.BeanPropertyRowMapper",
      "org.jfaster.mango.exception.UncheckedException",
      "org.jfaster.mango.parser.ASTElseIfStatement",
      "org.jfaster.mango.mapper.SingleColumnRowMapper",
      "org.jfaster.mango.jdbc.ListResultSetExtractor",
      "org.jfaster.mango.util.PropertyTokenizer",
      "org.jfaster.mango.parser.visitor.CheckAndBindVisitor",
      "org.jfaster.mango.parser.AbstractExpression",
      "org.jfaster.mango.parser.ASTNull",
      "org.jfaster.mango.parser.AbstractStringNode",
      "org.jfaster.mango.parser.ASTText",
      "org.jfaster.mango.parser.ASTGlobalTable",
      "org.jfaster.mango.util.bean.PropertyMeta",
      "org.jfaster.mango.invoker.TransferablePropertyInvoker",
      "org.jfaster.mango.parser.ASTIfStatement",
      "org.jfaster.mango.parser.ASTMerge",
      "org.jfaster.mango.parser.ASTExpressionParameter",
      "org.jfaster.mango.parser.ASTStringLiteral",
      "org.jfaster.mango.parser.ASTJDBCIterableParameter",
      "org.jfaster.mango.util.IterObj",
      "org.jfaster.mango.parser.ASTElseStatement",
      "org.jfaster.mango.util.Iterables",
      "org.jfaster.mango.binding.InvocationContextFactory",
      "org.jfaster.mango.operator.generator.SimpleTableGenerator",
      "org.jfaster.mango.jdbc.HashSetSupplier",
      "org.jfaster.mango.jdbc.exception.DataAccessException",
      "org.jfaster.mango.jdbc.exception.NonTransientDataAccessException",
      "org.jfaster.mango.jdbc.exception.DataAccessResourceFailureException",
      "org.jfaster.mango.transaction.exception.CannotGetJdbcConnectionException",
      "org.jfaster.mango.transaction.exception.TransactionException",
      "org.jfaster.mango.transaction.exception.CannotCreateTransactionException",
      "org.jfaster.mango.parser.ASTJoinParameter",
      "org.jfaster.mango.parser.ASTUpdate",
      "org.jfaster.mango.operator.generator.ShardedTableGenerator",
      "org.jfaster.mango.parser.ASTLTNode"
    );
  }
}
