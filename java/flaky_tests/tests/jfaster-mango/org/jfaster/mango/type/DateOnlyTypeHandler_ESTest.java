/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 00:24:29 GMT 2022
 */

package org.jfaster.mango.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.type.DateOnlyTypeHandler;
import org.jfaster.mango.util.jdbc.JdbcType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DateOnlyTypeHandler_ESTest extends DateOnlyTypeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateOnlyTypeHandler dateOnlyTypeHandler0 = new DateOnlyTypeHandler();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      Date date0 = mock(Date.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(date0).getTime();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(date0).when(resultSet0).getDate(anyInt());
      java.util.Date date1 = dateOnlyTypeHandler0.getNullableResult(resultSet0, 1);
      JdbcType jdbcType0 = JdbcType.DATALINK;
      dateOnlyTypeHandler0.setNonNullParameter(preparedStatement0, 1, date1, jdbcType0);
      assertEquals(JdbcType.DATE, dateOnlyTypeHandler0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DateOnlyTypeHandler dateOnlyTypeHandler0 = new DateOnlyTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((Date) null).when(resultSet0).getDate(anyInt());
      java.util.Date date0 = dateOnlyTypeHandler0.getNullableResult(resultSet0, (-558));
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DateOnlyTypeHandler dateOnlyTypeHandler0 = new DateOnlyTypeHandler();
      JdbcType jdbcType0 = dateOnlyTypeHandler0.getJdbcType();
      assertEquals(JdbcType.DATE, jdbcType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DateOnlyTypeHandler dateOnlyTypeHandler0 = new DateOnlyTypeHandler();
      JdbcType jdbcType0 = JdbcType.DATALINK;
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dateOnlyTypeHandler0.setNonNullParameter(preparedStatement0, 2740, (java.util.Date) null, jdbcType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.DateOnlyTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DateOnlyTypeHandler dateOnlyTypeHandler0 = new DateOnlyTypeHandler();
      // Undeclared exception!
      try { 
        dateOnlyTypeHandler0.getNullableResult((ResultSet) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.DateOnlyTypeHandler", e);
      }
  }
}
