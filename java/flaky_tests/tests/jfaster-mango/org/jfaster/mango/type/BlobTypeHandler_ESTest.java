/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 00:33:01 GMT 2022
 */

package org.jfaster.mango.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Blob;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.type.BlobTypeHandler;
import org.jfaster.mango.util.jdbc.JdbcType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BlobTypeHandler_ESTest extends BlobTypeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BlobTypeHandler blobTypeHandler0 = new BlobTypeHandler();
      byte[] byteArray0 = new byte[2];
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      JdbcType jdbcType0 = JdbcType.DATETIMEOFFSET;
      blobTypeHandler0.setNonNullParameter(preparedStatement0, (int) (byte)0, byteArray0, jdbcType0);
      assertEquals(2, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BlobTypeHandler blobTypeHandler0 = new BlobTypeHandler();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[2];
      blobTypeHandler0.setParameter(preparedStatement0, (-1895), byteArray0);
      assertEquals(JdbcType.LONGVARBINARY, blobTypeHandler0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BlobTypeHandler blobTypeHandler0 = new BlobTypeHandler();
      Blob blob0 = mock(Blob.class, new ViolatedAssumptionAnswer());
      doReturn((byte[]) null).when(blob0).getBytes(anyLong() , anyInt());
      doReturn(0L).when(blob0).length();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(blob0).when(resultSet0).getBlob(anyInt());
      byte[] byteArray0 = blobTypeHandler0.getNullableResult(resultSet0, 0);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BlobTypeHandler blobTypeHandler0 = new BlobTypeHandler();
      byte[] byteArray0 = new byte[9];
      Blob blob0 = mock(Blob.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(blob0).getBytes(anyLong() , anyInt());
      doReturn((long)(byte) (-22)).when(blob0).length();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(blob0).when(resultSet0).getBlob(anyInt());
      byte[] byteArray1 = blobTypeHandler0.getNullableResult(resultSet0, 0);
      assertEquals(9, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BlobTypeHandler blobTypeHandler0 = new BlobTypeHandler();
      JdbcType jdbcType0 = blobTypeHandler0.getJdbcType();
      assertEquals(JdbcType.LONGVARBINARY, jdbcType0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BlobTypeHandler blobTypeHandler0 = new BlobTypeHandler();
      byte[] byteArray0 = new byte[0];
      JdbcType jdbcType0 = JdbcType.DATE;
      // Undeclared exception!
      try { 
        blobTypeHandler0.setNonNullParameter((PreparedStatement) null, 0, byteArray0, jdbcType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.BlobTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BlobTypeHandler blobTypeHandler0 = new BlobTypeHandler();
      // Undeclared exception!
      try { 
        blobTypeHandler0.getNullableResult((ResultSet) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.BlobTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BlobTypeHandler blobTypeHandler0 = new BlobTypeHandler();
      byte[] byteArray0 = new byte[0];
      Blob blob0 = mock(Blob.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(blob0).getBytes(anyLong() , anyInt());
      doReturn((-3833L)).when(blob0).length();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(blob0).when(resultSet0).getBlob(anyInt());
      byte[] byteArray1 = blobTypeHandler0.getNullableResult(resultSet0, 0);
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      BlobTypeHandler blobTypeHandler0 = new BlobTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((Blob) null).when(resultSet0).getBlob(anyInt());
      doReturn(false).when(resultSet0).wasNull();
      byte[] byteArray0 = blobTypeHandler0.getResult(resultSet0, 818);
      assertNull(byteArray0);
  }
}
