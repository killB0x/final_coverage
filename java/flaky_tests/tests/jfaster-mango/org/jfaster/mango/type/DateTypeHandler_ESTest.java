/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 00:31:23 GMT 2022
 */

package org.jfaster.mango.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfaster.mango.type.DateTypeHandler;
import org.jfaster.mango.util.jdbc.JdbcType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DateTypeHandler_ESTest extends DateTypeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTypeHandler dateTypeHandler0 = new DateTypeHandler();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      MockDate mockDate0 = new MockDate();
      JdbcType jdbcType0 = JdbcType.SMALLINT;
      dateTypeHandler0.setNonNullParameter(preparedStatement0, (-1460), (Date) mockDate0, jdbcType0);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DateTypeHandler dateTypeHandler0 = new DateTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((Timestamp) null).when(resultSet0).getTimestamp(anyInt());
      Date date0 = dateTypeHandler0.getNullableResult(resultSet0, 1613);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DateTypeHandler dateTypeHandler0 = new DateTypeHandler();
      MockDate mockDate0 = new MockDate((-1));
      JdbcType jdbcType0 = JdbcType.CLOB;
      // Undeclared exception!
      try { 
        dateTypeHandler0.setNonNullParameter((PreparedStatement) null, (-1), (Date) mockDate0, jdbcType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.DateTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DateTypeHandler dateTypeHandler0 = new DateTypeHandler();
      // Undeclared exception!
      try { 
        dateTypeHandler0.getNullableResult((ResultSet) null, 1093);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.DateTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DateTypeHandler dateTypeHandler0 = new DateTypeHandler();
      Timestamp timestamp0 = mock(Timestamp.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(timestamp0).getTime();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(timestamp0).when(resultSet0).getTimestamp(anyInt());
      Date date0 = dateTypeHandler0.getNullableResult(resultSet0, (-1460));
      assertEquals("Thu Jan 01 00:00:00 GMT 1970", date0.toString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DateTypeHandler dateTypeHandler0 = new DateTypeHandler();
      MockDate mockDate0 = new MockDate(556, 556, 556);
      // Undeclared exception!
      try { 
        dateTypeHandler0.setParameter((PreparedStatement) null, 556, mockDate0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error setting non null for parameter #556 with JdbcType TIMESTAMP, try setting a different JdbcType for this parameter; caused by: null
         //
         verifyException("org.jfaster.mango.type.BaseTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DateTypeHandler dateTypeHandler0 = new DateTypeHandler();
      JdbcType jdbcType0 = dateTypeHandler0.getJdbcType();
      assertEquals(JdbcType.TIMESTAMP, jdbcType0);
  }
}
