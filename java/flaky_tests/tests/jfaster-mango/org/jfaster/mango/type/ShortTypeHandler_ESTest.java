/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 01:35:39 GMT 2022
 */

package org.jfaster.mango.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.type.ShortTypeHandler;
import org.jfaster.mango.util.jdbc.JdbcType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ShortTypeHandler_ESTest extends ShortTypeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ShortTypeHandler shortTypeHandler0 = new ShortTypeHandler();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      Short short0 = new Short((short)0);
      JdbcType jdbcType0 = JdbcType.SQLXML;
      shortTypeHandler0.setNonNullParameter(preparedStatement0, (-1005), short0, jdbcType0);
      assertEquals(JdbcType.SMALLINT, shortTypeHandler0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ShortTypeHandler shortTypeHandler0 = new ShortTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((short)0).when(resultSet0).getShort(anyInt());
      Short short0 = shortTypeHandler0.getNullableResult(resultSet0, (short)1628);
      assertEquals((short)0, (short)short0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ShortTypeHandler shortTypeHandler0 = new ShortTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((short)1628).when(resultSet0).getShort(anyInt());
      Short short0 = shortTypeHandler0.getNullableResult(resultSet0, (-9));
      assertEquals((short)1628, (short)short0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ShortTypeHandler shortTypeHandler0 = new ShortTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((short) (-1937)).when(resultSet0).getShort(anyInt());
      Short short0 = shortTypeHandler0.getNullableResult(resultSet0, 318);
      assertEquals((short) (-1937), (short)short0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ShortTypeHandler shortTypeHandler0 = new ShortTypeHandler();
      JdbcType jdbcType0 = shortTypeHandler0.getJdbcType();
      assertEquals(JdbcType.SMALLINT, jdbcType0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ShortTypeHandler shortTypeHandler0 = new ShortTypeHandler();
      JdbcType jdbcType0 = JdbcType.VARCHAR;
      // Undeclared exception!
      try { 
        shortTypeHandler0.setNonNullParameter((PreparedStatement) null, 0, (Short) null, jdbcType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.ShortTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ShortTypeHandler shortTypeHandler0 = new ShortTypeHandler();
      // Undeclared exception!
      try { 
        shortTypeHandler0.getNullableResult((ResultSet) null, 171);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.ShortTypeHandler", e);
      }
  }
}
