/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 00:44:50 GMT 2022
 */

package org.jfaster.mango.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Time;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfaster.mango.type.TimeOnlyTypeHandler;
import org.jfaster.mango.util.jdbc.JdbcType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TimeOnlyTypeHandler_ESTest extends TimeOnlyTypeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TimeOnlyTypeHandler timeOnlyTypeHandler0 = new TimeOnlyTypeHandler();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      MockDate mockDate0 = new MockDate(946, 946, 946, 1, 1, 946);
      JdbcType jdbcType0 = JdbcType.DISTINCT;
      timeOnlyTypeHandler0.setNonNullParameter(preparedStatement0, 1, (Date) mockDate0, jdbcType0);
      assertEquals(JdbcType.TIME, timeOnlyTypeHandler0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TimeOnlyTypeHandler timeOnlyTypeHandler0 = new TimeOnlyTypeHandler();
      // Undeclared exception!
      try { 
        timeOnlyTypeHandler0.getNullableResult((ResultSet) null, 1594);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.TimeOnlyTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TimeOnlyTypeHandler timeOnlyTypeHandler0 = new TimeOnlyTypeHandler();
      Time time0 = mock(Time.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(time0).getTime();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(time0).when(resultSet0).getTime(anyInt());
      Date date0 = timeOnlyTypeHandler0.getNullableResult(resultSet0, 0);
      assertEquals("Thu Jan 01 00:00:00 GMT 1970", date0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TimeOnlyTypeHandler timeOnlyTypeHandler0 = new TimeOnlyTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((Time) null).when(resultSet0).getTime(anyInt());
      Date date0 = timeOnlyTypeHandler0.getNullableResult(resultSet0, 0);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TimeOnlyTypeHandler timeOnlyTypeHandler0 = new TimeOnlyTypeHandler();
      MockDate mockDate0 = new MockDate();
      // Undeclared exception!
      try { 
        timeOnlyTypeHandler0.setParameter((PreparedStatement) null, 1, mockDate0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error setting non null for parameter #1 with JdbcType TIME, try setting a different JdbcType for this parameter; caused by: null
         //
         verifyException("org.jfaster.mango.type.BaseTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TimeOnlyTypeHandler timeOnlyTypeHandler0 = new TimeOnlyTypeHandler();
      JdbcType jdbcType0 = timeOnlyTypeHandler0.getJdbcType();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        timeOnlyTypeHandler0.setNonNullParameter(preparedStatement0, 891, (Date) null, jdbcType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.TimeOnlyTypeHandler", e);
      }
  }
}
