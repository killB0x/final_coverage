/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 01:18:19 GMT 2022
 */

package org.jfaster.mango.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.type.IntegerTypeHandler;
import org.jfaster.mango.util.jdbc.JdbcType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntegerTypeHandler_ESTest extends IntegerTypeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IntegerTypeHandler integerTypeHandler0 = new IntegerTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((-2035)).when(resultSet0).getInt(anyInt());
      Integer integer0 = integerTypeHandler0.getNullableResult(resultSet0, 1154);
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      JdbcType jdbcType0 = JdbcType.CHAR;
      integerTypeHandler0.setNonNullParameter(preparedStatement0, (-2091), integer0, jdbcType0);
      assertEquals(JdbcType.INTEGER, integerTypeHandler0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IntegerTypeHandler integerTypeHandler0 = new IntegerTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((-2035)).when(resultSet0).getInt(anyInt());
      Integer integer0 = integerTypeHandler0.getNullableResult(resultSet0, 1154);
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      integerTypeHandler0.setParameter(preparedStatement0, 341, integer0);
      assertEquals(JdbcType.INTEGER, integerTypeHandler0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IntegerTypeHandler integerTypeHandler0 = new IntegerTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(resultSet0).getInt(anyInt());
      Integer integer0 = integerTypeHandler0.getNullableResult(resultSet0, (-3296));
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IntegerTypeHandler integerTypeHandler0 = new IntegerTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(1763).when(resultSet0).getInt(anyInt());
      Integer integer0 = integerTypeHandler0.getNullableResult(resultSet0, (-3527));
      assertEquals(1763, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IntegerTypeHandler integerTypeHandler0 = new IntegerTypeHandler();
      JdbcType jdbcType0 = integerTypeHandler0.getJdbcType();
      assertEquals(JdbcType.INTEGER, jdbcType0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IntegerTypeHandler integerTypeHandler0 = new IntegerTypeHandler();
      Integer integer0 = new Integer(0);
      JdbcType jdbcType0 = JdbcType.DATALINK;
      // Undeclared exception!
      try { 
        integerTypeHandler0.setNonNullParameter((PreparedStatement) null, 0, integer0, jdbcType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.IntegerTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IntegerTypeHandler integerTypeHandler0 = new IntegerTypeHandler();
      // Undeclared exception!
      try { 
        integerTypeHandler0.getNullableResult((ResultSet) null, 1406);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.IntegerTypeHandler", e);
      }
  }
}
