/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 01:09:36 GMT 2022
 */

package org.jfaster.mango.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import java.math.BigDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.jdbc.GeneratedKeyHolder;
import org.jfaster.mango.type.IntegerTypeHandler;
import org.jfaster.mango.type.TypeHandler;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GeneratedKeyHolder_ESTest extends GeneratedKeyHolder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GeneratedKeyHolder generatedKeyHolder0 = new GeneratedKeyHolder((TypeHandler<? extends Number>) null);
      TypeHandler<? extends Number> typeHandler0 = generatedKeyHolder0.getTypeHandler();
      assertNull(typeHandler0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IntegerTypeHandler integerTypeHandler0 = new IntegerTypeHandler();
      GeneratedKeyHolder generatedKeyHolder0 = new GeneratedKeyHolder(integerTypeHandler0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      generatedKeyHolder0.setKey(bigDecimal0);
      Number number0 = generatedKeyHolder0.getKey();
      assertEquals((short)0, number0.shortValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IntegerTypeHandler integerTypeHandler0 = new IntegerTypeHandler();
      GeneratedKeyHolder generatedKeyHolder0 = new GeneratedKeyHolder(integerTypeHandler0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      generatedKeyHolder0.setKey(bigDecimal0);
      Number number0 = generatedKeyHolder0.getKey();
      assertEquals((short)1, number0.shortValue());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IntegerTypeHandler integerTypeHandler0 = new IntegerTypeHandler();
      GeneratedKeyHolder generatedKeyHolder0 = new GeneratedKeyHolder(integerTypeHandler0);
      BigDecimal bigDecimal0 = new BigDecimal((-2306));
      generatedKeyHolder0.setKey(bigDecimal0);
      Number number0 = generatedKeyHolder0.getKey();
      assertEquals((short) (-2306), number0.shortValue());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IntegerTypeHandler integerTypeHandler0 = new IntegerTypeHandler();
      GeneratedKeyHolder generatedKeyHolder0 = new GeneratedKeyHolder(integerTypeHandler0);
      Number number0 = generatedKeyHolder0.getKey();
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IntegerTypeHandler integerTypeHandler0 = new IntegerTypeHandler();
      GeneratedKeyHolder generatedKeyHolder0 = new GeneratedKeyHolder(integerTypeHandler0);
      TypeHandler<? extends Number> typeHandler0 = generatedKeyHolder0.getTypeHandler();
      assertSame(integerTypeHandler0, typeHandler0);
  }
}
