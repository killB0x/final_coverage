/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 22:07:05 GMT 2022
 */

package org.jfaster.mango.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.BatchUpdateException;
import java.sql.SQLException;
import javax.sql.DataSource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.datasource.DriverManagerDataSource;
import org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator;
import org.jfaster.mango.jdbc.exception.DataAccessException;
import org.jfaster.mango.jdbc.exception.UncategorizedSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SQLErrorCodeSQLExceptionTranslator_ESTest extends SQLErrorCodeSQLExceptionTranslator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator");
      SQLErrorCodeSQLExceptionTranslator sQLErrorCodeSQLExceptionTranslator0 = new SQLErrorCodeSQLExceptionTranslator(driverManagerDataSource0);
      BatchUpdateException batchUpdateException0 = new BatchUpdateException();
      int[] intArray0 = new int[6];
      BatchUpdateException batchUpdateException1 = new BatchUpdateException("org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "50200", (-2744), intArray0);
      batchUpdateException0.setNextException(batchUpdateException1);
      DataAccessException dataAccessException0 = sQLErrorCodeSQLExceptionTranslator0.doTranslate("50200", batchUpdateException0);
      assertNull(dataAccessException0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator");
      BatchUpdateException batchUpdateException0 = new BatchUpdateException();
      SQLException sQLException0 = new SQLException("", batchUpdateException0);
      batchUpdateException0.initCause(sQLException0);
      SQLErrorCodeSQLExceptionTranslator sQLErrorCodeSQLExceptionTranslator0 = new SQLErrorCodeSQLExceptionTranslator(driverManagerDataSource0);
      // Undeclared exception!
      sQLErrorCodeSQLExceptionTranslator0.doTranslate("org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", batchUpdateException0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator");
      SQLErrorCodeSQLExceptionTranslator sQLErrorCodeSQLExceptionTranslator0 = new SQLErrorCodeSQLExceptionTranslator(driverManagerDataSource0);
      // Undeclared exception!
      try { 
        sQLErrorCodeSQLExceptionTranslator0.doTranslate("org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", (SQLException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SQLErrorCodeSQLExceptionTranslator sQLErrorCodeSQLExceptionTranslator0 = null;
      try {
        sQLErrorCodeSQLExceptionTranslator0 = new SQLErrorCodeSQLExceptionTranslator((DataSource) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.transaction.DataSourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator");
      SQLErrorCodeSQLExceptionTranslator sQLErrorCodeSQLExceptionTranslator0 = new SQLErrorCodeSQLExceptionTranslator(driverManagerDataSource0);
      BatchUpdateException batchUpdateException0 = new BatchUpdateException();
      int[] intArray0 = new int[6];
      BatchUpdateException batchUpdateException1 = new BatchUpdateException("org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", intArray0, batchUpdateException0);
      DataAccessException dataAccessException0 = sQLErrorCodeSQLExceptionTranslator0.doTranslate("VNR>WNc!2E`1hhI@p^", batchUpdateException1);
      assertNull(dataAccessException0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator");
      BatchUpdateException batchUpdateException0 = new BatchUpdateException();
      SQLException sQLException0 = new SQLException("org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator");
      batchUpdateException0.setNextException(sQLException0);
      SQLErrorCodeSQLExceptionTranslator sQLErrorCodeSQLExceptionTranslator0 = new SQLErrorCodeSQLExceptionTranslator(driverManagerDataSource0);
      UncategorizedSQLException uncategorizedSQLException0 = (UncategorizedSQLException)sQLErrorCodeSQLExceptionTranslator0.translate("org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", batchUpdateException0);
      assertEquals("org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", uncategorizedSQLException0.getSql());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator");
      BatchUpdateException batchUpdateException0 = new BatchUpdateException();
      SQLException sQLException0 = new SQLException("Fetching resumed JDBC Connection from DataSource", "Fetching resumed JDBC Connection from DataSource", 1263);
      batchUpdateException0.setNextException(sQLException0);
      SQLErrorCodeSQLExceptionTranslator sQLErrorCodeSQLExceptionTranslator0 = new SQLErrorCodeSQLExceptionTranslator(driverManagerDataSource0);
      DataAccessException dataAccessException0 = sQLErrorCodeSQLExceptionTranslator0.doTranslate((String) null, batchUpdateException0);
      assertNull(dataAccessException0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator", "org.jfaster.mango.jdbc.SQLErrorCodeSQLExceptionTranslator");
      BatchUpdateException batchUpdateException0 = new BatchUpdateException();
      batchUpdateException0.setNextException(batchUpdateException0);
      SQLErrorCodeSQLExceptionTranslator sQLErrorCodeSQLExceptionTranslator0 = new SQLErrorCodeSQLExceptionTranslator(driverManagerDataSource0);
      DataAccessException dataAccessException0 = sQLErrorCodeSQLExceptionTranslator0.doTranslate((String) null, batchUpdateException0);
      assertNull(dataAccessException0);
  }
}
