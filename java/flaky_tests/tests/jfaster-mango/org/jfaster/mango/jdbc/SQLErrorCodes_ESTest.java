/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 00:04:51 GMT 2022
 */

package org.jfaster.mango.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.jdbc.SQLErrorCodes;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SQLErrorCodes_ESTest extends SQLErrorCodes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SQLErrorCodes[] sQLErrorCodesArray0 = SQLErrorCodes.values();
      assertEquals(12, sQLErrorCodesArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Hana;
      boolean boolean0 = sQLErrorCodes0.isUseSqlStateForTranslation();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Oracle;
      String[] stringArray0 = sQLErrorCodes0.getTransientDataAccessResourceCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.HSQL;
      String[] stringArray0 = sQLErrorCodes0.getPermissionDeniedCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "90046,90100,90117,90121,90126";
      stringArray0[3] = "";
      stringArray0[4] = ":FJR-D/(t/";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "oExxo";
      stringArray0[8] = "SAP DB";
      sQLErrorCodes0.setDatabaseProductNames(stringArray0);
      String[] stringArray1 = sQLErrorCodes0.getInvalidResultSetAccessCodes();
      assertFalse(stringArray1.equals((Object)stringArray0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Hana;
      String[] stringArray0 = sQLErrorCodes0.getDuplicateKeyCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.MSSQL;
      String[] stringArray0 = sQLErrorCodes0.getDeadlockLoserCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Informix;
      String[] stringArray0 = sQLErrorCodes0.getDeadlockLoserCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Informix;
      String string0 = sQLErrorCodes0.getDatabaseProductName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      String[] stringArray0 = sQLErrorCodes0.getDataIntegrityViolationCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Oracle;
      String[] stringArray0 = sQLErrorCodes0.getCannotSerializeTransactionCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Hana;
      String[] stringArray0 = sQLErrorCodes0.getCannotSerializeTransactionCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Oracle;
      String[] stringArray0 = sQLErrorCodes0.getCannotAcquireLockCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.PostgreSQL;
      String[] stringArray0 = sQLErrorCodes0.getBadSqlGrammarCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.H2;
      String string0 = sQLErrorCodes0.getDatabaseProductName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      String string0 = sQLErrorCodes0.getDatabaseProductName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.MySQL;
      String string0 = sQLErrorCodes0.getDatabaseProductName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Informix;
      String[] stringArray0 = new String[2];
      sQLErrorCodes0.setTransientDataAccessResourceCodes(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      String[] stringArray0 = new String[7];
      sQLErrorCodes0.setDuplicateKeyCodes(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      String[] stringArray0 = sQLErrorCodes0.getDeadlockLoserCodes();
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Oracle;
      String[] stringArray0 = new String[2];
      sQLErrorCodes0.setDataIntegrityViolationCodes(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.H2;
      boolean boolean0 = sQLErrorCodes0.isUseSqlStateForTranslation();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Oracle;
      sQLErrorCodes0.setUseSqlStateForTranslation(false);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      String[] stringArray0 = new String[5];
      sQLErrorCodes0.setCannotAcquireLockCodes(stringArray0);
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Oracle;
      String[] stringArray0 = new String[2];
      sQLErrorCodes0.setPermissionDeniedCodes(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      String[] stringArray0 = sQLErrorCodes0.getTransientDataAccessResourceCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      String[] stringArray0 = sQLErrorCodes0.getCannotAcquireLockCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      String[] stringArray0 = new String[1];
      sQLErrorCodes0.setInvalidResultSetAccessCodes(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Oracle;
      String[] stringArray0 = new String[2];
      sQLErrorCodes0.setBadSqlGrammarCodes(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      String[] stringArray0 = sQLErrorCodes0.getBadSqlGrammarCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      String[] stringArray0 = sQLErrorCodes0.getDatabaseProductNames();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      String[] stringArray0 = sQLErrorCodes0.getCannotSerializeTransactionCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Sybase;
      String[] stringArray0 = new String[0];
      sQLErrorCodes0.setDataAccessResourceFailureCodes(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      String[] stringArray0 = sQLErrorCodes0.getDataAccessResourceFailureCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Oracle;
      String[] stringArray0 = sQLErrorCodes0.getDataIntegrityViolationCodes();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      String[] stringArray0 = new String[0];
      sQLErrorCodes0.setCannotSerializeTransactionCodes(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      sQLErrorCodes0.setDatabaseProductName((String) null);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SQLErrorCodes sQLErrorCodes0 = SQLErrorCodes.Derby;
      String[] stringArray0 = new String[5];
      sQLErrorCodes0.setDeadlockLoserCodes(stringArray0);
      assertEquals(5, stringArray0.length);
  }
}
