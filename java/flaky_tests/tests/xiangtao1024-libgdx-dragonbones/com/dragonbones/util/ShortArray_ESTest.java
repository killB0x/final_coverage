/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 03:28:25 GMT 2022
 */

package com.dragonbones.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.dragonbones.util.IntArray;
import com.dragonbones.util.ShortArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ShortArray_ESTest extends ShortArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ShortArray shortArray0 = null;
      try {
        shortArray0 = new ShortArray((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.util.IntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ShortArray shortArray0 = null;
      try {
        shortArray0 = new ShortArray((-820));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -820
         //
         verifyException("com.dragonbones.util.IntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ShortArray shortArray0 = new ShortArray();
      IntArray intArray0 = shortArray0.createInstance();
      assertEquals(0, intArray0.getLength());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ShortArray shortArray0 = new ShortArray(0);
      assertEquals(0, shortArray0.getLength());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[0];
      ShortArray shortArray0 = new ShortArray(intArray0);
      assertEquals(0, shortArray0.getLength());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ShortArray shortArray0 = new ShortArray(true);
      assertEquals(0, shortArray0.getLength());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ShortArray shortArray0 = new ShortArray((int[]) null, 0);
      assertEquals(0, shortArray0.getLength());
  }
}
