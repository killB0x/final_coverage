/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 03:34:46 GMT 2022
 */

package com.dragonbones.util.buffer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.dragonbones.util.buffer.ArrayBuffer;
import com.dragonbones.util.buffer.Int16Array;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Int16Array_ESTest extends Int16Array_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Int16Array int16Array0 = new Int16Array(arrayBuffer0, (byte)0, (byte)0);
      int16Array0.set(0, 0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Int16Array int16Array0 = new Int16Array(arrayBuffer0, (byte)0, (byte)0);
      int int0 = int16Array0.get((byte)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-124);
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Int16Array int16Array0 = new Int16Array(arrayBuffer0, 0, 3556);
      int int0 = int16Array0.get((byte)0);
      assertEquals(132, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-113);
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Int16Array int16Array0 = new Int16Array(arrayBuffer0, 0, 1);
      int int0 = int16Array0.get(0);
      assertEquals((-28928), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Int16Array int16Array0 = new Int16Array((ArrayBuffer) null, 1, 1);
      // Undeclared exception!
      try { 
        int16Array0.set(1, 1280);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.util.buffer.Int16Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Int16Array int16Array0 = new Int16Array((ArrayBuffer) null, 0, 0);
      // Undeclared exception!
      try { 
        int16Array0.get(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.util.buffer.Int16Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Int16Array int16Array0 = new Int16Array(arrayBuffer0, (byte) (-26), (byte) (-26));
      // Undeclared exception!
      try { 
        int16Array0.set(947, 16);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Int16Array int16Array0 = new Int16Array(arrayBuffer0, (byte) (-26), (byte) (-26));
      // Undeclared exception!
      try { 
        int16Array0.get(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }
}
