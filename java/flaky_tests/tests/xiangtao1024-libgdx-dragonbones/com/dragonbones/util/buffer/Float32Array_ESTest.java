/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 03:32:34 GMT 2022
 */

package com.dragonbones.util.buffer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.dragonbones.util.buffer.ArrayBuffer;
import com.dragonbones.util.buffer.Float32Array;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Float32Array_ESTest extends Float32Array_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(16);
      Float32Array float32Array0 = new Float32Array(arrayBuffer0, 0, 16);
      float32Array0.set(0, (-1.0F));
      assertEquals(0, float32Array0.getLength());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(0);
      Float32Array float32Array0 = new Float32Array(arrayBuffer0, 0, 0);
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)55;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      arrayBuffer0.data = byteBuffer0;
      float float0 = float32Array0.get(0);
      assertEquals(5.050952E-39F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-44);
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Float32Array float32Array0 = new Float32Array(arrayBuffer0, 0, 0);
      float float0 = float32Array0.get((byte)0);
      assertEquals((-2.19902326E12F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(4);
      Float32Array float32Array0 = new Float32Array(arrayBuffer0, 4, 4);
      // Undeclared exception!
      try { 
        float32Array0.set(4, 4);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Float32Array float32Array0 = new Float32Array((ArrayBuffer) null, (-55), (-55));
      // Undeclared exception!
      try { 
        float32Array0.get(4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.util.buffer.Float32Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Float32Array float32Array0 = new Float32Array(arrayBuffer0, 0, 0);
      // Undeclared exception!
      try { 
        float32Array0.get((-2525));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Float32Array float32Array0 = new Float32Array((ArrayBuffer) null, (-55), (-55));
      // Undeclared exception!
      try { 
        float32Array0.set((-55), 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.util.buffer.Float32Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Float32Array float32Array0 = new Float32Array(arrayBuffer0, 0, 0);
      float float0 = float32Array0.get((byte)0);
      assertEquals(0.0F, float0, 0.01F);
  }
}
