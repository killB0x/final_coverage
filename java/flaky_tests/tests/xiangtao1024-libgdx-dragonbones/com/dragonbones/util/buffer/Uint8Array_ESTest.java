/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 03:30:03 GMT 2022
 */

package com.dragonbones.util.buffer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.dragonbones.util.buffer.ArrayBuffer;
import com.dragonbones.util.buffer.Uint8Array;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Uint8Array_ESTest extends Uint8Array_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Uint8Array uint8Array0 = new Uint8Array(arrayBuffer0, 0, 0);
      int int0 = uint8Array0.length();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Uint8Array uint8Array0 = new Uint8Array(arrayBuffer0, (byte)1, (byte) (-123));
      int int0 = uint8Array0.length();
      assertEquals((-123), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)113;
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Uint8Array uint8Array0 = new Uint8Array(arrayBuffer0, 0, (-2388));
      int int0 = uint8Array0.get(0);
      assertEquals(113, int0);
      assertEquals((-2388), uint8Array0.length());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Uint8Array uint8Array0 = new Uint8Array(arrayBuffer0, 0, 0);
      int int0 = uint8Array0.get(0);
      assertEquals((-1), int0);
      assertEquals(0, uint8Array0.length());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Uint8Array uint8Array0 = new Uint8Array((ArrayBuffer) null, 0, 0);
      // Undeclared exception!
      try { 
        uint8Array0.get(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.util.buffer.Uint8Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Uint8Array uint8Array0 = new Uint8Array(arrayBuffer0, 0, 0);
      // Undeclared exception!
      try { 
        uint8Array0.get((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Uint8Array uint8Array0 = new Uint8Array(arrayBuffer0, 0, 0);
      uint8Array0.get(0);
      assertEquals(0, uint8Array0.length());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      Uint8Array uint8Array0 = new Uint8Array(arrayBuffer0, 3475, 2839);
      int int0 = uint8Array0.length();
      assertEquals(2839, int0);
  }
}
