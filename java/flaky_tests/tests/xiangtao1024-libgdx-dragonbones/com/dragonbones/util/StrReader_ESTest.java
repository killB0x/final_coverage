/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 03:15:02 GMT 2022
 */

package com.dragonbones.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.dragonbones.util.StrReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StrReader_ESTest extends StrReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StrReader strReader0 = new StrReader(" at ", 0);
      strReader0.skipSpaces();
      // Undeclared exception!
      try { 
        strReader0.expect('-');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected -
         //
         verifyException("com.dragonbones.util.StrReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StrReader strReader0 = new StrReader("-eg@i@>)");
      boolean boolean0 = strReader0.tryRead('#');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StrReader strReader0 = new StrReader("");
      boolean boolean0 = strReader0.eof();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StrReader strReader0 = new StrReader("t^8E", 1);
      strReader0.skip(298);
      assertEquals(0, strReader0.available());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StrReader strReader0 = new StrReader("p_nGh9:eC", 0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "p_nGh9:eC";
      String string0 = strReader0.tryRead(stringArray0);
      assertEquals("p_nGh9:eC", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StrReader strReader0 = new StrReader("");
      String string0 = strReader0.tryRead("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StrReader strReader0 = new StrReader("t^8E", 1);
      strReader0.read(1);
      assertEquals(2, strReader0.available());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StrReader strReader0 = new StrReader("p_nGh9:eC", 0);
      String string0 = strReader0.read(0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StrReader strReader0 = new StrReader("-vekg@i@-^]", 0);
      char char0 = strReader0.read();
      assertEquals('v', strReader0.peek());
      assertEquals('-', char0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StrReader strReader0 = new StrReader("8[2");
      char char0 = strReader0.read();
      assertEquals('[', strReader0.peek());
      assertEquals('8', char0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StrReader strReader0 = new StrReader("p_nGh9:eC", 0);
      char char0 = strReader0.read();
      assertEquals(1, strReader0.offset());
      assertEquals('p', char0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StrReader strReader0 = new StrReader("8[2");
      String string0 = strReader0.peek(1);
      assertEquals("8", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StrReader strReader0 = new StrReader("");
      String string0 = strReader0.peek(426);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StrReader strReader0 = new StrReader("-vekg@i@-^]", 0);
      char char0 = strReader0.peek();
      assertEquals('-', char0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StrReader strReader0 = new StrReader("c$IJ_W,Y");
      char char0 = strReader0.peek();
      assertEquals('c', char0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StrReader strReader0 = new StrReader("", 0);
      int int0 = strReader0.offset();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StrReader strReader0 = new StrReader("", 10);
      int int0 = strReader0.offset();
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StrReader strReader0 = new StrReader("", 10);
      int int0 = strReader0.length();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StrReader strReader0 = new StrReader("$veykg@i@T^4");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "$veykg@i@T^4";
      String string0 = strReader0.expect(stringArray0);
      assertEquals("$veykg@i@T^4", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StrReader strReader0 = new StrReader("$veykg@i@T^4");
      String string0 = strReader0.expect("$veykg@i@T^4");
      assertEquals("$veykg@i@T^4", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StrReader strReader0 = new StrReader("-vekg@i@-^]");
      char char0 = strReader0.expect('-');
      assertEquals('-', char0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StrReader strReader0 = new StrReader("", 78);
      int int0 = strReader0.available();
      assertEquals((-78), int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StrReader strReader0 = new StrReader("V:k[?9=*l2qsU", (-389));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "V:k[?9=*l2qsU";
      // Undeclared exception!
      try { 
        strReader0.tryRead(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StrReader strReader0 = new StrReader("");
      // Undeclared exception!
      try { 
        strReader0.tryRead((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.util.StrReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StrReader strReader0 = new StrReader("", (-160));
      // Undeclared exception!
      try { 
        strReader0.tryRead("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StrReader strReader0 = new StrReader((String) null);
      // Undeclared exception!
      try { 
        strReader0.tryRead((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.util.StrReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StrReader strReader0 = new StrReader("", 1);
      // Undeclared exception!
      try { 
        strReader0.tryRead('Q');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StrReader strReader0 = new StrReader((String) null);
      // Undeclared exception!
      try { 
        strReader0.tryRead('\'');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StrReader strReader0 = new StrReader("-vekg@i@-^]", (-12));
      // Undeclared exception!
      try { 
        strReader0.skipSpaces();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StrReader strReader0 = new StrReader((String) null);
      // Undeclared exception!
      try { 
        strReader0.skipSpaces();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StrReader strReader0 = new StrReader((String) null);
      // Undeclared exception!
      try { 
        strReader0.skip();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StrReader strReader0 = new StrReader("9NwP5~@+Qv4^?en)7", 457);
      // Undeclared exception!
      try { 
        strReader0.read(457);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StrReader strReader0 = new StrReader((String) null);
      // Undeclared exception!
      try { 
        strReader0.read();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.util.StrReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StrReader strReader0 = new StrReader((String) null);
      // Undeclared exception!
      try { 
        strReader0.peek(822);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StrReader strReader0 = new StrReader("");
      // Undeclared exception!
      try { 
        strReader0.peek();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StrReader strReader0 = new StrReader((String) null);
      // Undeclared exception!
      try { 
        strReader0.peek();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StrReader strReader0 = new StrReader((String) null);
      // Undeclared exception!
      try { 
        strReader0.length();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StrReader strReader0 = new StrReader((String) null);
      // Undeclared exception!
      try { 
        strReader0.hasMore();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StrReader strReader0 = new StrReader("b) ?/GRoN9p.n+", 94);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "b) ?/GRoN9p.n+";
      // Undeclared exception!
      try { 
        strReader0.expect(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StrReader strReader0 = new StrReader("oJ&gk/Q>I_3=EJcL'|", (-14));
      // Undeclared exception!
      try { 
        strReader0.expect("oJ&gk/Q>I_3=EJcL'|");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StrReader strReader0 = new StrReader((String) null);
      // Undeclared exception!
      try { 
        strReader0.expect((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.util.StrReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StrReader strReader0 = new StrReader("");
      // Undeclared exception!
      try { 
        strReader0.expect('_');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StrReader strReader0 = new StrReader((String) null);
      // Undeclared exception!
      try { 
        strReader0.expect('!');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StrReader strReader0 = new StrReader((String) null);
      // Undeclared exception!
      try { 
        strReader0.eof();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StrReader strReader0 = new StrReader("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      String string0 = strReader0.tryRead(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StrReader strReader0 = new StrReader("p_nGh9:eC", 0);
      strReader0.tryRead("p_nGh9:eC");
      int int0 = strReader0.available();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StrReader strReader0 = new StrReader("`<{Qf0ZY$)");
      String string0 = strReader0.tryRead("-vekg@i^]");
      assertNull(string0);
      assertEquals(0, strReader0.offset());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StrReader strReader0 = new StrReader("");
      boolean boolean0 = strReader0.hasMore();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StrReader strReader0 = new StrReader("8[2");
      boolean boolean0 = strReader0.hasMore();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StrReader.ParseException strReader_ParseException0 = new StrReader.ParseException("u-gYF[C=!<&eY9$L");
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StrReader strReader0 = new StrReader("", (-160));
      int int0 = strReader0.offset();
      assertEquals((-160), int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StrReader strReader0 = new StrReader((String) null);
      // Undeclared exception!
      try { 
        strReader0.skip(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StrReader strReader0 = new StrReader("$veykg@i@T^4");
      // Undeclared exception!
      try { 
        strReader0.peek((-1452));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StrReader strReader0 = new StrReader(" M9KE");
      int int0 = strReader0.length();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StrReader strReader0 = new StrReader("8[2");
      char char0 = strReader0.peek();
      assertEquals('8', char0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StrReader strReader0 = new StrReader("8[2");
      int int0 = strReader0.available();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StrReader strReader0 = new StrReader(" M9KE");
      strReader0.skipSpaces();
      strReader0.skip();
      assertEquals('9', strReader0.peek());
      
      char char0 = strReader0.expect('9');
      assertEquals('9', char0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StrReader strReader0 = new StrReader("p_nGh9:eC", 0);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        strReader0.expect(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected [] at 0
         //
         verifyException("com.dragonbones.util.StrReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      StrReader strReader0 = new StrReader("");
      // Undeclared exception!
      try { 
        strReader0.expect("jX}E b#S1A$O");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected jX}E b#S1A$O
         //
         verifyException("com.dragonbones.util.StrReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StrReader strReader0 = new StrReader("");
      strReader0.expect("");
      assertEquals(0, strReader0.offset());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      StrReader strReader0 = new StrReader("com.dragonbones.util.StrReader$ParseException");
      strReader0.expect('c');
      String[] stringArray0 = new String[1];
      stringArray0[0] = "com.dragonbones.util.StrReader$ParseException";
      strReader0.tryRead(stringArray0);
      assertEquals(1, strReader0.offset());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      StrReader strReader0 = new StrReader("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-vekg@i@-^]";
      // Undeclared exception!
      try { 
        strReader0.expect(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.util.StrReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      StrReader strReader0 = new StrReader("8[2");
      boolean boolean0 = strReader0.tryRead('8');
      assertEquals(2, strReader0.available());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StrReader strReader0 = new StrReader("-vekg@i@-^]", 0);
      boolean boolean0 = strReader0.tryRead('N');
      assertFalse(boolean0);
      assertEquals('-', strReader0.peek());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StrReader strReader0 = new StrReader("", 1);
      boolean boolean0 = strReader0.eof();
      assertTrue(boolean0);
      assertEquals((-1), strReader0.available());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      StrReader strReader0 = new StrReader("-vekg@i@-^]", 0);
      boolean boolean0 = strReader0.eof();
      assertFalse(boolean0);
      assertEquals(11, strReader0.available());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      StrReader strReader0 = new StrReader("", 1);
      assertFalse(strReader0.hasMore());
      
      strReader0.skipSpaces();
      assertEquals((-1), strReader0.available());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      StrReader.ParseException strReader_ParseException0 = new StrReader.ParseException();
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      StrReader strReader0 = new StrReader("-vekg@i@-^]", 0);
      // Undeclared exception!
      try { 
        strReader0.expect('7');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected 7
         //
         verifyException("com.dragonbones.util.StrReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      StrReader strReader0 = new StrReader((String) null, (-1219));
      // Undeclared exception!
      try { 
        strReader0.read((-1219));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      StrReader strReader0 = new StrReader("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      strReader0.expect(stringArray0);
      assertEquals(0, strReader0.offset());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      StrReader strReader0 = new StrReader("");
      // Undeclared exception!
      try { 
        strReader0.read();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
