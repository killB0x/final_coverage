/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 03:19:20 GMT 2022
 */

package com.dragonbones.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.dragonbones.animation.WorldClock;
import com.dragonbones.armature.Armature;
import com.dragonbones.core.DragonBones;
import com.dragonbones.event.EventObject;
import com.dragonbones.event.IEventDispatcher;
import com.dragonbones.libgdx.GdxTextureData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DragonBones_ESTest extends DragonBones_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DragonBones dragonBones0 = new DragonBones((IEventDispatcher) null);
      GdxTextureData gdxTextureData0 = new GdxTextureData();
      dragonBones0.bufferObject(gdxTextureData0);
      EventObject eventObject0 = new EventObject();
      dragonBones0.bufferObject(eventObject0);
      dragonBones0.bufferObject(eventObject0);
      assertFalse(DragonBones.debug);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DragonBones dragonBones0 = new DragonBones((IEventDispatcher) null);
      EventObject eventObject0 = new EventObject();
      EventObject eventObject1 = new EventObject();
      dragonBones0.bufferEvent(eventObject1);
      dragonBones0.bufferEvent(eventObject0);
      dragonBones0.bufferEvent(eventObject0);
      assertFalse(DragonBones.debugDraw);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Armature armature0 = new Armature();
      DragonBones dragonBones0 = new DragonBones((IEventDispatcher) null);
      dragonBones0.bufferObject(armature0);
      dragonBones0.bufferObject(armature0);
      assertFalse(DragonBones.debugDraw);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DragonBones dragonBones0 = new DragonBones((IEventDispatcher) null);
      EventObject eventObject0 = new EventObject();
      dragonBones0.bufferEvent(eventObject0);
      dragonBones0.bufferEvent(eventObject0);
      assertEquals(0, eventObject0.hashCode);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EventObject eventObject0 = new EventObject();
      DragonBones dragonBones0 = new DragonBones((IEventDispatcher) null);
      dragonBones0.bufferEvent(eventObject0);
      // Undeclared exception!
      try { 
        dragonBones0.advanceTime(0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.core.DragonBones", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Armature armature0 = new Armature();
      DragonBones dragonBones0 = new DragonBones((IEventDispatcher) null);
      dragonBones0.bufferObject(armature0);
      // Undeclared exception!
      try { 
        dragonBones0.advanceTime(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.core.BaseObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DragonBones dragonBones0 = new DragonBones((IEventDispatcher) null);
      dragonBones0.advanceTime(0.0F);
      assertFalse(DragonBones.debug);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DragonBones dragonBones0 = new DragonBones((IEventDispatcher) null);
      WorldClock worldClock0 = dragonBones0.getClock();
      worldClock0.setClock(worldClock0);
      // Undeclared exception!
      try { 
        dragonBones0.advanceTime(1.39248942E13F);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DragonBones dragonBones0 = new DragonBones((IEventDispatcher) null);
      IEventDispatcher iEventDispatcher0 = dragonBones0.getEventManager();
      assertNull(iEventDispatcher0);
  }
}
