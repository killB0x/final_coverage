/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 03:05:19 GMT 2022
 */

package com.dragonbones.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.dragonbones.core.ActionType;
import com.dragonbones.core.ArmatureType;
import com.dragonbones.core.BlendMode;
import com.dragonbones.core.BoundingBoxType;
import com.dragonbones.core.DisplayType;
import com.dragonbones.libgdx.GdxTextureAtlasData;
import com.dragonbones.model.DragonBonesData;
import com.dragonbones.model.MeshDisplayData;
import com.dragonbones.model.TextureAtlasData;
import com.dragonbones.parser.BinaryDataParser;
import com.dragonbones.parser.DataParser;
import com.dragonbones.parser.ObjectDataParser;
import com.dragonbones.util.buffer.ArrayBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataParser_ESTest extends DataParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      ObjectDataParser objectDataParser0 = ObjectDataParser.getInstance();
      GdxTextureAtlasData gdxTextureAtlasData0 = new GdxTextureAtlasData();
      boolean boolean0 = objectDataParser0.parseTextureAtlasData(object0, (TextureAtlasData) gdxTextureAtlasData0, (float) 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BinaryDataParser binaryDataParser0 = new BinaryDataParser();
      GdxTextureAtlasData gdxTextureAtlasData0 = new GdxTextureAtlasData();
      boolean boolean0 = binaryDataParser0.parseTextureAtlasData((Object) null, (TextureAtlasData) gdxTextureAtlasData0, (-1.0F));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      DragonBonesData dragonBonesData0 = DataParser.parseDragonBonesDataBinary(arrayBuffer0);
      assertNull(dragonBonesData0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectDataParser objectDataParser0 = ObjectDataParser.getInstance();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        objectDataParser0.parseTextureAtlasData(object0, (TextureAtlasData) null, (float) 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.parser.ObjectDataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MeshDisplayData meshDisplayData0 = new MeshDisplayData();
      // Undeclared exception!
      try { 
        DataParser.parseTextureAtlasData((Object) meshDisplayData0, (float) 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.parser.DataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataParser.parseDragonBonesDataJson("plAy");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected character p
         //
         verifyException("com.dragonbones.util.json.JSON", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataParser.parseDragonBonesDataJson("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataParser.parseDragonBonesDataJson("ellipse");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataParser.parseDragonBonesDataJson((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.util.StrReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataParser.parseDragonBonesDataBinary((ArrayBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.util.buffer.Uint8Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BinaryDataParser binaryDataParser0 = BinaryDataParser.getInstance();
      // Undeclared exception!
      try { 
        binaryDataParser0.parseDragonBonesData((Object) null, 377.14023F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.util.buffer.Uint8Array", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BinaryDataParser binaryDataParser0 = new BinaryDataParser();
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(0);
      // Undeclared exception!
      try { 
        binaryDataParser0.parseDragonBonesData((Object) arrayBuffer0, (float) 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BinaryDataParser binaryDataParser0 = new BinaryDataParser();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        binaryDataParser0.parseDragonBonesData(object0, 1417.0F);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class com.dragonbones.util.buffer.ArrayBuffer (java.lang.Object is in module java.base of loader 'bootstrap'; com.dragonbones.util.buffer.ArrayBuffer is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @7527be82)
         //
         verifyException("com.dragonbones.parser.BinaryDataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      arrayBuffer0.data = null;
      // Undeclared exception!
      try { 
        DataParser.parseDragonBonesData((Object) arrayBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.util.buffer.ArrayBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      // Undeclared exception!
      try { 
        DataParser.parseDragonBonesData((Object) arrayBuffer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataParser._getDisplayType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.parser.DataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataParser._getBoundingBoxType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.parser.DataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataParser._getBlendMode((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.parser.DataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataParser._getArmatureType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.parser.DataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataParser._getActionType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.parser.DataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(0);
      // Undeclared exception!
      try { 
        DataParser.parseDragonBonesDataBinary(arrayBuffer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ObjectDataParser objectDataParser0 = new ObjectDataParser();
      Object object0 = new Object();
      DragonBonesData dragonBonesData0 = objectDataParser0.parseDragonBonesData(object0, 0.0F);
      assertNull(dragonBonesData0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object object0 = new Object();
      DragonBonesData dragonBonesData0 = DataParser.parseDragonBonesData(object0);
      assertNull(dragonBonesData0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BlendMode blendMode0 = DataParser._getBlendMode("Difference");
      assertEquals(BlendMode.Difference, blendMode0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BlendMode blendMode0 = DataParser._getBlendMode("multiply");
      assertEquals(BlendMode.Multiply, blendMode0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BlendMode blendMode0 = DataParser._getBlendMode("lighten");
      assertEquals(BlendMode.Lighten, blendMode0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BlendMode blendMode0 = DataParser._getBlendMode("Layer");
      assertEquals(BlendMode.Layer, blendMode0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BlendMode blendMode0 = DataParser._getBlendMode("Erase");
      assertEquals(BlendMode.Erase, blendMode0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BlendMode blendMode0 = DataParser._getBlendMode("alpha");
      assertEquals(BlendMode.Alpha, blendMode0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BlendMode blendMode0 = DataParser._getBlendMode("add");
      assertEquals(BlendMode.Add, blendMode0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BlendMode blendMode0 = DataParser._getBlendMode("hardlight");
      assertEquals(BlendMode.HardLight, blendMode0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BlendMode blendMode0 = DataParser._getBlendMode("screen");
      assertEquals(BlendMode.Screen, blendMode0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BlendMode blendMode0 = DataParser._getBlendMode("normal");
      assertEquals(BlendMode.Normal, blendMode0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BlendMode blendMode0 = DataParser._getBlendMode("Overlay");
      assertEquals(BlendMode.Overlay, blendMode0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BlendMode blendMode0 = DataParser._getBlendMode("invert");
      assertEquals(BlendMode.Invert, blendMode0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BlendMode blendMode0 = DataParser._getBlendMode("darken");
      assertEquals(BlendMode.Darken, blendMode0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BlendMode blendMode0 = DataParser._getBlendMode("");
      assertEquals(BlendMode.Normal, blendMode0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BlendMode blendMode0 = DataParser._getBlendMode("Subtract");
      assertEquals(BlendMode.Subtract, blendMode0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ActionType actionType0 = DataParser._getActionType("gH");
      assertEquals(ActionType.Play, actionType0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ActionType actionType0 = DataParser._getActionType("frame");
      assertEquals(ActionType.Frame, actionType0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ActionType actionType0 = DataParser._getActionType("sound");
      assertEquals(ActionType.Sound, actionType0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ActionType actionType0 = DataParser._getActionType("play");
      assertEquals(ActionType.Play, actionType0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BoundingBoxType boundingBoxType0 = DataParser._getBoundingBoxType("rectangle");
      assertEquals(BoundingBoxType.Rectangle, boundingBoxType0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BoundingBoxType boundingBoxType0 = DataParser._getBoundingBoxType("Polygon");
      assertEquals(BoundingBoxType.Polygon, boundingBoxType0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BoundingBoxType boundingBoxType0 = DataParser._getBoundingBoxType("");
      assertEquals(BoundingBoxType.Rectangle, boundingBoxType0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BoundingBoxType boundingBoxType0 = DataParser._getBoundingBoxType("ellipse");
      assertEquals(BoundingBoxType.Ellipse, boundingBoxType0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DisplayType displayType0 = DataParser._getDisplayType("image");
      assertEquals(DisplayType.Image, displayType0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DisplayType displayType0 = DataParser._getDisplayType("mesh");
      assertEquals(DisplayType.Mesh, displayType0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DisplayType displayType0 = DataParser._getDisplayType("BoundingBox");
      assertEquals(DisplayType.BoundingBox, displayType0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DisplayType displayType0 = DataParser._getDisplayType("");
      assertEquals(DisplayType.Image, displayType0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DisplayType displayType0 = DataParser._getDisplayType("Armature");
      assertEquals(DisplayType.Armature, displayType0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ArmatureType armatureType0 = DataParser._getArmatureType("movieclip");
      assertEquals(ArmatureType.MovieClip, armatureType0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ArmatureType armatureType0 = DataParser._getArmatureType("stage");
      assertEquals(ArmatureType.Stage, armatureType0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ArmatureType armatureType0 = DataParser._getArmatureType("3.0");
      assertEquals(ArmatureType.Armature, armatureType0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ArmatureType armatureType0 = DataParser._getArmatureType("Armature");
      assertEquals(ArmatureType.Armature, armatureType0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ArrayBuffer arrayBuffer0 = new ArrayBuffer(byteArray0);
      // Undeclared exception!
      try { 
        DataParser.parseTextureAtlasData((Object) arrayBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.dragonbones.parser.DataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Object object0 = new Object();
      DragonBonesData dragonBonesData0 = DataParser.parseDragonBonesDataObject(object0);
      assertNull(dragonBonesData0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DragonBonesData dragonBonesData0 = DataParser.parseDragonBonesDataJson("3.0");
      assertNull(dragonBonesData0);
  }
}
