/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 13 17:34:00 GMT 2022
 */

package io.vlingo.xoom.cluster.model.attribute;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.vlingo.xoom.cluster.model.attribute.Attribute;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Attribute_ESTest extends Attribute_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attribute.Type attribute_Type0 = Attribute.Type.Float;
      Integer integer0 = new Integer((-981));
      Attribute<Object> attribute0 = new Attribute<Object>("java.lang.", integer0, attribute_Type0);
      Attribute.Type attribute_Type1 = Attribute.Type.Short;
      Attribute<Integer> attribute1 = new Attribute<Integer>("java.lang.", integer0, attribute_Type1);
      boolean boolean0 = attribute0.equals(attribute1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attribute<Object> attribute0 = Attribute.from("`]s>sk'R^+", (Object) "`]s>sk'R^+");
      // Undeclared exception!
      try { 
        attribute0.replacingValueWith((Attribute<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.vlingo.xoom.cluster.model.attribute.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attribute.Type attribute_Type0 = Attribute.Type.Double;
      Attribute<Object> attribute0 = new Attribute<Object>((String) null, "java.lang.Boolean", attribute_Type0);
      // Undeclared exception!
      try { 
        attribute0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.vlingo.xoom.cluster.model.attribute.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        Attribute.from((String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.vlingo.xoom.cluster.model.attribute.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        Attribute.from("K*/@SPxG", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The type 'java.lang.Object' is not recognized.
         //
         verifyException("io.vlingo.xoom.cluster.model.attribute.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attribute.Type attribute_Type0 = Attribute.Type.Integer;
      Attribute<Object> attribute0 = new Attribute<Object>("zuh}X'r0U1M", (Object) null, attribute_Type0);
      // Undeclared exception!
      try { 
        attribute0.equals(attribute0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.vlingo.xoom.cluster.model.attribute.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attribute<Object> attribute0 = Attribute.from("java.lang.Boolean", (Object) "java.lang.Boolean");
      boolean boolean0 = attribute0.equals("java.lang.Boolean");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attribute<Object> attribute0 = Attribute.from("/", (Object) "/");
      Attribute.Type attribute_Type0 = Attribute.Type.Short;
      Attribute<Object> attribute1 = new Attribute<Object>("/", "/", attribute_Type0);
      boolean boolean0 = attribute1.equals(attribute0);
      assertFalse(boolean0);
      assertFalse(attribute0.equals((Object)attribute1));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Attribute<Integer> attribute0 = Attribute.from("~6dP=3^\"8L{Cz?", integer0);
      Attribute<Object> attribute1 = new Attribute<Object>("v7", integer0, attribute0.type);
      boolean boolean0 = attribute0.equals(attribute1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(1887);
      Attribute<Integer> attribute0 = Attribute.from("long", integer0);
      Attribute<Attribute<Integer>> attribute1 = new Attribute<Attribute<Integer>>("long", attribute0, attribute0.type);
      boolean boolean0 = attribute1.equals(attribute0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Attribute<Integer> attribute0 = Attribute.from("~6dP=3^\"8L{Cz?", integer0);
      Attribute<Object> attribute1 = new Attribute<Object>("~6dP=3^\"8L{Cz?", integer0, attribute0.type);
      boolean boolean0 = attribute0.equals(attribute1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(7);
      Attribute<Object> attribute0 = Attribute.from((String) null, (Object) integer0);
      boolean boolean0 = attribute0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(2);
      Attribute<Integer> attribute0 = Attribute.from("3#4`4$*eUF.zm", integer0);
      Attribute<Object> attribute1 = Attribute.from("Attribute[name=3#4`4$*eUF.zm, value=2, type=Integer]", (Object) "3#4`4$*eUF.zm");
      Attribute<Attribute<Object>> attribute2 = new Attribute<Attribute<Object>>("3#4`4$*eUF.zm", attribute1, attribute1.type);
      // Undeclared exception!
      try { 
        attribute2.replacingValueWith(attribute0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Source and target attributes have different types.
         //
         verifyException("io.vlingo.xoom.cluster.model.attribute.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Attribute<Integer> attribute0 = Attribute.from("~6dP=3^\"8L{Cz?", integer0);
      Attribute<Attribute<Integer>> attribute1 = new Attribute<Attribute<Integer>>("~6dP=3^\"8L{Cz?", attribute0, attribute0.type);
      Attribute<?> attribute2 = attribute1.replacingValueWith(attribute0);
      assertFalse(attribute2.isUndefined());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Attribute<Integer> attribute0 = Attribute.from("~6dP=3^\"8L{Cz?", integer0);
      Attribute<Attribute<Integer>> attribute1 = new Attribute<Attribute<Integer>>("~6dP=3^\"8L{Cz?", attribute0, attribute0.type);
      boolean boolean0 = attribute1.isUndefined();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attribute.Type attribute_Type0 = Attribute.Type.Character;
      // Undeclared exception!
      try { 
        Attribute.from("", attribute_Type0, "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attribute.Type attribute_Type0 = Attribute.Type.Short;
      // Undeclared exception!
      try { 
        Attribute.from((String) null, attribute_Type0, "");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attribute.Type attribute_Type0 = Attribute.Type.Float;
      // Undeclared exception!
      try { 
        Attribute.from((String) null, attribute_Type0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attribute.Type attribute_Type0 = Attribute.Type.Double;
      // Undeclared exception!
      try { 
        Attribute.from((String) null, attribute_Type0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attribute.Type attribute_Type0 = Attribute.Type.Byte;
      // Undeclared exception!
      try { 
        Attribute.from("", attribute_Type0, "");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer(1577);
      Attribute.Type attribute_Type0 = Attribute.Type.Boolean;
      Attribute<Integer> attribute0 = new Attribute<Integer>("java.lang.", integer0, attribute_Type0);
      Attribute<Object> attribute1 = new Attribute<Object>("java.lang.", "java.lang.", attribute0.type);
      Attribute<?> attribute2 = Attribute.from("java.lang.", attribute1.type, "b}1aoh5>uXRQ");
      assertFalse(attribute2.isUndefined());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attribute.Type attribute_Type0 = Attribute.Type.Long;
      // Undeclared exception!
      try { 
        Attribute.from("~6dP=3^\"8L{Cz?", attribute_Type0, "~");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"~\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Attribute.Type attribute_Type0 = Attribute.Type.String;
      Attribute<?> attribute0 = Attribute.from("java.lang.Float", attribute_Type0, "java.lang.Float");
      assertFalse(attribute0.isUndefined());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        Attribute.typeOfAttribute("io.vlingo.xoom.cluster.model.attribute.Attribute");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The type 'io.vlingo.xoom.cluster.model.attribute.Attribute' is not recognized.
         //
         verifyException("io.vlingo.xoom.cluster.model.attribute.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Attribute.typeOfAttribute("java.lang.Double");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Attribute.typeOfAttribute("java.lang.Long");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Attribute.typeOfAttribute("java.lang.Byte");
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Attribute.typeOfAttribute("java.lang.Boolean");
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Attribute.typeOfAttribute("java.lang.Character");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Attribute.typeOfAttribute("java.lang.Short");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Attribute.typeOfAttribute("java.lang.Float");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Attribute<Integer> attribute0 = Attribute.from("~6dP=3^\"8L{Cz?", integer0);
      Attribute<Object> attribute1 = new Attribute<Object>("v7", integer0, attribute0.type);
      attribute1.hashCode();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Integer integer0 = new Integer((-865));
      Attribute<Integer> attribute0 = Attribute.from("+3STk(N i6", integer0);
      String string0 = attribute0.toString();
      assertEquals("Attribute[name=+3STk(N i6, value=-865, type=Integer]", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Attribute<Integer> attribute0 = Attribute.from("~6dP=3^\"8L{Cz?", integer0);
      Attribute<Attribute<Integer>> attribute1 = new Attribute<Attribute<Integer>>("~6dP=3^\"8L{Cz?", attribute0, attribute0.type);
      // Undeclared exception!
      try { 
        Attribute.from("~6dP=3^\"8L{Cz?", attribute1.type, "~");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"~\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
