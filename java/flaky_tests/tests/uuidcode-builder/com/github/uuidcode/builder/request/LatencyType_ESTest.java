/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 21:11:30 GMT 2022
 */

package com.github.uuidcode.builder.request;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.uuidcode.builder.request.LatencyType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LatencyType_ESTest extends LatencyType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LatencyType[] latencyTypeArray0 = LatencyType.values();
      assertEquals(5, latencyTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LatencyType latencyType0 = LatencyType.valueOf("HIGH");
      assertEquals(LatencyType.HIGH, latencyType0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LatencyType latencyType0 = LatencyType.HIGH;
      Integer integer0 = latencyType0.getConnectionTimeout();
      assertEquals(1000, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LatencyType latencyType0 = LatencyType.VERY_VERY_LOW;
      Integer integer0 = latencyType0.getSocketTimeout();
      assertEquals(100000, (int)integer0);
  }
}
