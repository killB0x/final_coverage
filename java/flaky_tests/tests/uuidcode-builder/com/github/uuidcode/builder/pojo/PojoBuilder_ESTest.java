/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 20:19:39 GMT 2022
 */

package com.github.uuidcode.builder.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.uuidcode.builder.pojo.PojoBuilder;
import java.util.AbstractMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PojoBuilder_ESTest extends PojoBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PojoBuilder pojoBuilder0 = new PojoBuilder();
      PojoBuilder pojoBuilder1 = pojoBuilder0.addNameConvert("", "");
      assertSame(pojoBuilder0, pojoBuilder1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        PojoBuilder.getJavaType("varbinary");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/gson/ExclusionStrategy
         //
         verifyException("com.github.uuidcode.builder.pojo.PojoBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "";
      PojoBuilder.isAvailableField("");
      PojoBuilder pojoBuilder0 = PojoBuilder.of();
      pojoBuilder0.addIncludeField("");
      // Undeclared exception!
      try { 
        pojoBuilder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.uuidcode.builder.pojo.Pojo", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AbstractMap.SimpleImmutableEntry<String, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, Object>(" $^\"", PojoBuilder.includedFieldSet);
      AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>(abstractMap_SimpleImmutableEntry0);
      boolean boolean0 = PojoBuilder.isAvailableField((Map.Entry<String, Object>) abstractMap_SimpleEntry0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AbstractMap.SimpleImmutableEntry<String, String> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, String>((String) null, "");
      AbstractMap.SimpleImmutableEntry<String, Object> abstractMap_SimpleImmutableEntry1 = new AbstractMap.SimpleImmutableEntry<String, Object>(abstractMap_SimpleImmutableEntry0);
      AbstractMap.SimpleEntry<String, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, Object>(abstractMap_SimpleImmutableEntry1);
      boolean boolean0 = PojoBuilder.isAvailableField((Map.Entry<String, Object>) abstractMap_SimpleEntry0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PojoBuilder pojoBuilder0 = PojoBuilder.of();
      PojoBuilder pojoBuilder1 = pojoBuilder0.setTargetDirectory(",xe~+>]VQUq`Sp'");
      String string0 = pojoBuilder1.getTargetDirectory();
      assertEquals(",xe~+>]VQUq`Sp'", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PojoBuilder pojoBuilder0 = PojoBuilder.of();
      pojoBuilder0.setPackageName("?P1o7?oXV=^");
      String string0 = pojoBuilder0.getPackageName();
      assertEquals("?P1o7?oXV=^", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PojoBuilder pojoBuilder0 = PojoBuilder.of();
      pojoBuilder0.setClassName("com.github.uuidcode.util.CoreUtil");
      String string0 = pojoBuilder0.getClassName();
      assertEquals("com.github.uuidcode.util.CoreUtil", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PojoBuilder pojoBuilder0 = new PojoBuilder();
      PojoBuilder pojoBuilder1 = pojoBuilder0.setClassName("");
      String string0 = pojoBuilder1.getClassName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PojoBuilder pojoBuilder0 = new PojoBuilder();
      // Undeclared exception!
      try { 
        pojoBuilder0.toPropert((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.uuidcode.builder.pojo.PojoBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PojoBuilder.excludedFieldSet = null;
      // Undeclared exception!
      try { 
        PojoBuilder.isAvailableField("X:;]t][Og`9q|lZC!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        PojoBuilder.getPropertyListFromMap((Map<String, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.uuidcode.builder.pojo.PojoBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        PojoBuilder.getJavaType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PojoBuilder pojoBuilder0 = new PojoBuilder();
      PojoBuilder.nameConverterMap = null;
      // Undeclared exception!
      try { 
        pojoBuilder0.addNameConvert((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.uuidcode.builder.pojo.PojoBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PojoBuilder pojoBuilder0 = PojoBuilder.of();
      pojoBuilder0.includedFieldSet = null;
      // Undeclared exception!
      try { 
        pojoBuilder0.addIncludeField("P)6K");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.uuidcode.builder.pojo.PojoBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PojoBuilder pojoBuilder0 = PojoBuilder.of();
      PojoBuilder.excludedFieldSet = null;
      // Undeclared exception!
      try { 
        pojoBuilder0.addExcludeField("P)6K");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.uuidcode.builder.pojo.PojoBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        PojoBuilder.isAvailableField((Map.Entry<String, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.uuidcode.builder.pojo.PojoBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        PojoBuilder.getJavaType("vprnar List");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/gson/ExclusionStrategy
         //
         verifyException("com.github.uuidcode.builder.pojo.PojoBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PojoBuilder.isAvailableField("");
      PojoBuilder pojoBuilder0 = PojoBuilder.of();
      String string0 = "";
      pojoBuilder0.addIncludeField("");
      // Undeclared exception!
      try { 
        pojoBuilder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.uuidcode.builder.pojo.Pojo", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PojoBuilder pojoBuilder0 = PojoBuilder.of();
      PojoBuilder pojoBuilder1 = pojoBuilder0.addExcludeField("");
      PojoBuilder.of();
      pojoBuilder1.getTargetDirectory();
      AbstractMap.SimpleImmutableEntry<String, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<String, Object>((String) null, "");
      Map.Entry.comparingByValue();
      Map.Entry.comparingByKey();
      PojoBuilder.isAvailableField((Map.Entry<String, Object>) abstractMap_SimpleImmutableEntry0);
      PojoBuilder pojoBuilder2 = pojoBuilder0.setPackageName((String) null);
      assertSame(pojoBuilder2, pojoBuilder0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PojoBuilder pojoBuilder0 = new PojoBuilder();
      PojoBuilder pojoBuilder1 = pojoBuilder0.setTargetDirectory("");
      String string0 = pojoBuilder1.getTargetDirectory();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PojoBuilder pojoBuilder0 = PojoBuilder.of();
      // Undeclared exception!
      try { 
        pojoBuilder0.setSchema("L#:O22j-|h9Vk.e*jlB");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/gson/ExclusionStrategy
         //
         verifyException("com.github.uuidcode.builder.pojo.PojoBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PojoBuilder pojoBuilder0 = PojoBuilder.of();
      // Undeclared exception!
      try { 
        pojoBuilder0.setJson(" $^\"");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/gson/ExclusionStrategy
         //
         verifyException("com.github.uuidcode.builder.pojo.PojoBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PojoBuilder pojoBuilder0 = PojoBuilder.of();
      String string0 = pojoBuilder0.getPackageName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PojoBuilder pojoBuilder0 = PojoBuilder.of();
      PojoBuilder pojoBuilder1 = pojoBuilder0.setPackageName("");
      String string0 = pojoBuilder1.getPackageName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PojoBuilder pojoBuilder0 = new PojoBuilder();
      String string0 = pojoBuilder0.getClassName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PojoBuilder pojoBuilder0 = PojoBuilder.of();
      // Undeclared exception!
      try { 
        pojoBuilder0.toPropert("com.github.uuidcode.builder.pojo.PojoBuilder");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/gson/ExclusionStrategy
         //
         verifyException("com.github.uuidcode.builder.pojo.PojoBuilder", e);
      }
  }
}
