/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 21:12:11 GMT 2022
 */

package com.github.uuidcode.builder.process;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.uuidcode.builder.process.JavaProcessBuilder;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JavaProcessBuilder_ESTest extends JavaProcessBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = new JavaProcessBuilder();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.addOption((List<String>) linkedList0);
      assertSame(javaProcessBuilder0, javaProcessBuilder1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = JavaProcessBuilder.of();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.addClasspath((List<String>) linkedList0);
      assertSame(javaProcessBuilder1, javaProcessBuilder0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = JavaProcessBuilder.of();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.addOption("9iLr7eoV\"&Xl{{F3");
      assertSame(javaProcessBuilder1, javaProcessBuilder0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = JavaProcessBuilder.of();
      // Undeclared exception!
      try { 
        javaProcessBuilder0.createClassPath();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/gson/ExclusionStrategy
         //
         verifyException("com.github.uuidcode.builder.process.JavaProcessBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = JavaProcessBuilder.of();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.setClassName("-Xloggc:");
      assertSame(javaProcessBuilder0, javaProcessBuilder1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = JavaProcessBuilder.of();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.addClasspath("");
      assertSame(javaProcessBuilder1, javaProcessBuilder0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = JavaProcessBuilder.of();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.useG1GC();
      assertSame(javaProcessBuilder0, javaProcessBuilder1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = new JavaProcessBuilder();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.XmnMega(0);
      assertSame(javaProcessBuilder0, javaProcessBuilder1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = JavaProcessBuilder.of();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.loggc("");
      assertSame(javaProcessBuilder1, javaProcessBuilder0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = JavaProcessBuilder.of();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.printGCDateStamps();
      assertSame(javaProcessBuilder0, javaProcessBuilder1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = new JavaProcessBuilder();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.XmxMega(59);
      assertSame(javaProcessBuilder1, javaProcessBuilder0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = new JavaProcessBuilder();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.useParallelOldGC();
      assertSame(javaProcessBuilder0, javaProcessBuilder1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = JavaProcessBuilder.of();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.addArgument("\"76]N");
      assertSame(javaProcessBuilder1, javaProcessBuilder0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = new JavaProcessBuilder();
      // Undeclared exception!
      try { 
        javaProcessBuilder0.addOption((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = JavaProcessBuilder.of();
      Class<Object> class0 = Object.class;
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.setClassName(class0);
      assertSame(javaProcessBuilder0, javaProcessBuilder1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = new JavaProcessBuilder();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.XmnGiga(0);
      assertSame(javaProcessBuilder1, javaProcessBuilder0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = new JavaProcessBuilder();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.XmsGiga(498);
      assertSame(javaProcessBuilder0, javaProcessBuilder1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = new JavaProcessBuilder();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.javaagent("G");
      assertSame(javaProcessBuilder1, javaProcessBuilder0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = new JavaProcessBuilder();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.addDefaultClasspath();
      assertSame(javaProcessBuilder1, javaProcessBuilder0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = JavaProcessBuilder.of();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.XmxGiga(0);
      assertSame(javaProcessBuilder1, javaProcessBuilder0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = new JavaProcessBuilder();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.useConcMarkSweepGC();
      assertSame(javaProcessBuilder0, javaProcessBuilder1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = new JavaProcessBuilder();
      // Undeclared exception!
      try { 
        javaProcessBuilder0.addClasspath((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = JavaProcessBuilder.of();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.printGCDetails();
      assertSame(javaProcessBuilder0, javaProcessBuilder1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = JavaProcessBuilder.of();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.useSerialGC();
      assertSame(javaProcessBuilder1, javaProcessBuilder0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = new JavaProcessBuilder();
      JavaProcessBuilder javaProcessBuilder1 = javaProcessBuilder0.XmsMega(1683);
      assertSame(javaProcessBuilder0, javaProcessBuilder1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JavaProcessBuilder javaProcessBuilder0 = JavaProcessBuilder.of();
      // Undeclared exception!
      try { 
        javaProcessBuilder0.getCommand();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/gson/ExclusionStrategy
         //
         verifyException("com.github.uuidcode.builder.process.JavaProcessBuilder", e);
      }
  }
}
