/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 21:10:11 GMT 2022
 */

package com.github.uuidcode.builder.html;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.uuidcode.builder.html.Script;
import com.github.uuidcode.builder.html.Text;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Script_ESTest extends Script_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Text[] textArray0 = new Text[2];
      Script script0 = Script.of(textArray0);
      assertTrue(script0.getRequiresEndTag());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Script script0 = new Script();
      assertTrue(script0.getRequiresEndTag());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Script.of((Text[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }
}
