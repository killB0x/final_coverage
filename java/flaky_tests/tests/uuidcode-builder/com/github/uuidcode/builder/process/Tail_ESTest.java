/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 20:34:44 GMT 2022
 */

package com.github.uuidcode.builder.process;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.uuidcode.builder.process.Tail;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Tail_ESTest extends Tail_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Tail tail0 = Tail.of();
      assertEquals(0, tail0.countStackFrames());
      
      MockFile mockFile0 = new MockFile("", "");
      Tail tail1 = tail0.setFile((File) mockFile0);
      tail1.getStackTrace();
      int int0 = (-405);
      Tail tail2 = tail1.setSleepSecond((-405));
      Tail tail3 = tail2.setFile("");
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      tail1.setFile("");
      Tail.of();
      // Undeclared exception!
      tail3.run();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Tail tail0 = new Tail();
      MockThread.dumpStack();
      Tail tail1 = Tail.of();
      // Undeclared exception!
      try { 
        tail1.setFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Tail tail0 = Tail.of();
      MockFile mockFile0 = new MockFile("", "");
      Tail tail1 = tail0.setFile((File) mockFile0);
      tail1.getStackTrace();
      int int0 = (-405);
      Tail tail2 = tail1.setSleepSecond((-405));
      Tail tail3 = tail2.setFile("");
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      tail1.setFile("");
      Tail tail4 = Tail.of();
      tail4.getContextClassLoader();
      tail1.setFile((File) mockFile0);
      // Undeclared exception!
      tail3.run();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Tail tail0 = Tail.of();
      Tail tail1 = tail0.setFile("Xi");
      assertEquals(0, tail1.countStackFrames());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Tail tail0 = Tail.of();
      MockFile mockFile0 = new MockFile("&dJ{*H", "&dJ{*H");
      Tail tail1 = tail0.setFile((File) mockFile0);
      tail0.getStackTrace();
      tail1.setSleepSecond(0);
      // Undeclared exception!
      tail0.run();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Tail tail0 = Tail.of();
      Tail tail1 = tail0.setSleepSecond(0);
      assertSame(tail0, tail1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Tail tail0 = new Tail();
      File file0 = null;
      Tail tail1 = tail0.setFile((File) null);
      MockThread.getAllStackTraces();
      tail1.setSleepSecond(0);
      Thread.UncaughtExceptionHandler thread_UncaughtExceptionHandler0 = MockThread.getDefaultUncaughtExceptionHandler();
      tail1.setUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      Tail tail2 = tail0.setFile("");
      tail2.setUncaughtExceptionHandler(thread_UncaughtExceptionHandler0);
      tail2.setSleepSecond(0);
      // Undeclared exception!
      tail2.run();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Tail tail0 = new Tail();
      // Undeclared exception!
      try { 
        tail0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Tail tail0 = Tail.of();
      // Undeclared exception!
      try { 
        tail0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
