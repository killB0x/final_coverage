/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 03:58:06 GMT 2022
 */

package com.offbynull.portmapper.mappers.pcp.externalmessages;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.offbynull.portmapper.mappers.pcp.externalmessages.AnnouncePcpResponse;
import com.offbynull.portmapper.mappers.pcp.externalmessages.PcpOption;
import com.offbynull.portmapper.mappers.pcp.externalmessages.PeerPcpResponse;
import java.net.InetAddress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PcpResponse_ESTest extends PcpResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AnnouncePcpResponse announcePcpResponse0 = null;
      try {
        announcePcpResponse0 = new AnnouncePcpResponse((byte[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/Validate
         //
         verifyException("com.offbynull.portmapper.mappers.pcp.externalmessages.PcpResponse", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      PcpOption[] pcpOptionArray0 = new PcpOption[0];
      PeerPcpResponse peerPcpResponse0 = null;
      try {
        peerPcpResponse0 = new PeerPcpResponse(byteArray0, 20, 20, 20, inetAddress0, 0, inetAddress0, 0, 0, 0L, pcpOptionArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/Validate
         //
         verifyException("com.offbynull.portmapper.mappers.pcp.externalmessages.PcpResponse", e);
      }
  }
}
