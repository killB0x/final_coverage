/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 13:22:12 GMT 2022
 */

package net.pushover.client;

import org.junit.Test;
import static org.junit.Assert.*;
import net.pushover.client.MessagePriority;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MessagePriority_ESTest extends MessagePriority_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MessagePriority[] messagePriorityArray0 = MessagePriority.values();
      assertEquals(6, messagePriorityArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MessagePriority messagePriority0 = MessagePriority.valueOf("NORMAL");
      assertEquals("0", messagePriority0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MessagePriority messagePriority0 = MessagePriority.valueOf("HIGH");
      assertEquals("1", messagePriority0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MessagePriority messagePriority0 = MessagePriority.valueOf("LOWEST");
      assertEquals(MessagePriority.LOWEST, messagePriority0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MessagePriority messagePriority0 = MessagePriority.NORMAL;
      int int0 = messagePriority0.getPriority();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MessagePriority messagePriority0 = MessagePriority.EMERGENCY;
      int int0 = messagePriority0.getPriority();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MessagePriority messagePriority0 = MessagePriority.NORMAL;
      String string0 = messagePriority0.toString();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MessagePriority messagePriority0 = MessagePriority.QUIET;
      int int0 = messagePriority0.getPriority();
      assertEquals((-1), int0);
  }
}
