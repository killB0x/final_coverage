/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 04:02:45 GMT 2022
 */

package org.projectodd.sockjs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.regex.PatternSyntaxException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.projectodd.sockjs.DispatchFunction;
import org.projectodd.sockjs.Dispatcher;
import org.projectodd.sockjs.SockJsRequest;
import org.projectodd.sockjs.SockJsResponse;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Dispatcher_ESTest extends Dispatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Dispatcher dispatcher0 = new Dispatcher((DispatchFunction) null, (DispatchFunction) null, (DispatchFunction) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`)}Bz4.%==65Ob_9&";
      DispatchFunction[] dispatchFunctionArray0 = new DispatchFunction[6];
      // Undeclared exception!
      try { 
        dispatcher0.push("`)}Bz4.%==65Ob_9&", stringArray0, dispatchFunctionArray0);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')' near index 0
         // `)}Bz4.%==65Ob_9&
         // ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DispatchFunction[] dispatchFunctionArray0 = new DispatchFunction[3];
      Dispatcher dispatcher0 = new Dispatcher(dispatchFunctionArray0[2], dispatchFunctionArray0[2], dispatchFunctionArray0[2]);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        dispatcher0.push("S", stringArray0, dispatchFunctionArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.projectodd.sockjs.Dispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DispatchFunction[] dispatchFunctionArray0 = new DispatchFunction[3];
      Dispatcher dispatcher0 = new Dispatcher(dispatchFunctionArray0[2], dispatchFunctionArray0[2], dispatchFunctionArray0[2]);
      // Undeclared exception!
      try { 
        dispatcher0.push("+S", "+S", dispatchFunctionArray0);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Dangling meta character '+' near index 0
         // +S
         // ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Dispatcher dispatcher0 = new Dispatcher((DispatchFunction) null, (DispatchFunction) null, (DispatchFunction) null);
      // Undeclared exception!
      try { 
        dispatcher0.push((String) null, (String) null, (DispatchFunction[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DispatchFunction[] dispatchFunctionArray0 = new DispatchFunction[3];
      SockJsRequest sockJsRequest0 = mock(SockJsRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(sockJsRequest0).getPath();
      SockJsResponse sockJsResponse0 = mock(SockJsResponse.class, new ViolatedAssumptionAnswer());
      Dispatcher dispatcher0 = new Dispatcher(dispatchFunctionArray0[2], dispatchFunctionArray0[2], dispatchFunctionArray0[2]);
      dispatcher0.push("`%y[E;sZs-o!", "S", dispatchFunctionArray0);
      // Undeclared exception!
      try { 
        dispatcher0.dispatch(sockJsRequest0, sockJsResponse0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.projectodd.sockjs.Dispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DispatchFunction[] dispatchFunctionArray0 = new DispatchFunction[3];
      SockJsRequest sockJsRequest0 = mock(SockJsRequest.class, new ViolatedAssumptionAnswer());
      doReturn("S").when(sockJsRequest0).getMethod();
      doReturn("S").when(sockJsRequest0).getPath();
      SockJsResponse sockJsResponse0 = mock(SockJsResponse.class, new ViolatedAssumptionAnswer());
      Dispatcher dispatcher0 = new Dispatcher(dispatchFunctionArray0[2], dispatchFunctionArray0[2], dispatchFunctionArray0[2]);
      dispatcher0.push("S", "S", dispatchFunctionArray0);
      // Undeclared exception!
      try { 
        dispatcher0.dispatch(sockJsRequest0, sockJsResponse0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.projectodd.sockjs.Dispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DispatchFunction[] dispatchFunctionArray0 = new DispatchFunction[0];
      Dispatcher.DispatchEntry dispatcher_DispatchEntry0 = new Dispatcher.DispatchEntry("J", "J", dispatchFunctionArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Dispatcher dispatcher0 = new Dispatcher((DispatchFunction) null, (DispatchFunction) null, (DispatchFunction) null);
      DispatchFunction[] dispatchFunctionArray0 = new DispatchFunction[2];
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      dispatcher0.push("t", stringArray0, dispatchFunctionArray0);
      SockJsRequest sockJsRequest0 = mock(SockJsRequest.class, new ViolatedAssumptionAnswer());
      doReturn(":!J!eqSq1tD]xO").when(sockJsRequest0).getMethod();
      doReturn("").when(sockJsRequest0).getPath();
      SockJsResponse sockJsResponse0 = mock(SockJsResponse.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dispatcher0.dispatch(sockJsRequest0, sockJsResponse0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.projectodd.sockjs.Dispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Dispatcher dispatcher0 = new Dispatcher((DispatchFunction) null, (DispatchFunction) null, (DispatchFunction) null);
      DispatchFunction[] dispatchFunctionArray0 = new DispatchFunction[0];
      dispatcher0.push("server", "server", dispatchFunctionArray0);
      SockJsRequest sockJsRequest0 = mock(SockJsRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(sockJsRequest0).getPath();
      // Undeclared exception!
      try { 
        dispatcher0.dispatch(sockJsRequest0, (SockJsResponse) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.projectodd.sockjs.Dispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Dispatcher dispatcher0 = new Dispatcher((DispatchFunction) null, (DispatchFunction) null, (DispatchFunction) null);
      DispatchFunction[] dispatchFunctionArray0 = new DispatchFunction[0];
      dispatcher0.push("server", "server", dispatchFunctionArray0);
      SockJsRequest sockJsRequest0 = mock(SockJsRequest.class, new ViolatedAssumptionAnswer());
      doReturn("server").when(sockJsRequest0).getMethod();
      doReturn("server").when(sockJsRequest0).getPath();
      dispatcher0.dispatch(sockJsRequest0, (SockJsResponse) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Dispatcher dispatcher0 = new Dispatcher((DispatchFunction) null, (DispatchFunction) null, (DispatchFunction) null);
      DispatchFunction[] dispatchFunctionArray0 = new DispatchFunction[2];
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        dispatcher0.push("t", stringArray0, dispatchFunctionArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
