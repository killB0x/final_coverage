/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 20:04:41 GMT 2022
 */

package com.alipay.sofa.common.thread.space;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alipay.sofa.common.thread.space.SpaceNamedThreadFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SpaceNamedThreadFactory_ESTest extends SpaceNamedThreadFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SpaceNamedThreadFactory spaceNamedThreadFactory0 = new SpaceNamedThreadFactory("", "", true);
      MockThread mockThread0 = new MockThread();
      Thread thread0 = spaceNamedThreadFactory0.newThread(mockThread0);
      assertTrue(thread0.isDaemon());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SpaceNamedThreadFactory spaceNamedThreadFactory0 = null;
      try {
        spaceNamedThreadFactory0 = new SpaceNamedThreadFactory((String) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SpaceNamedThreadFactory spaceNamedThreadFactory0 = null;
      try {
        spaceNamedThreadFactory0 = new SpaceNamedThreadFactory((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SpaceNamedThreadFactory spaceNamedThreadFactory0 = new SpaceNamedThreadFactory("/xY", "/xY");
      MockThread mockThread0 = new MockThread();
      Thread thread0 = spaceNamedThreadFactory0.newThread(mockThread0);
      assertFalse(thread0.isDaemon());
  }
}
