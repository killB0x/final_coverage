/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 19:55:52 GMT 2022
 */

package com.alipay.sofa.common.thread;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alipay.sofa.common.thread.NamedThreadFactory;
import com.alipay.sofa.common.thread.ThreadPoolConfig;
import com.alipay.sofa.common.thread.ThreadPoolMonitorWrapper;
import com.alipay.sofa.common.thread.ThreadPoolStatistics;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ThreadPoolMonitorWrapper_ESTest extends ThreadPoolMonitorWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder0 = ThreadPoolConfig.newBuilder();
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics((ThreadPoolExecutor) null);
      ThreadPoolConfig threadPoolConfig0 = new ThreadPoolConfig(threadPoolConfig_SofaThreadConfigBuilder0);
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper((ThreadPoolExecutor) null, threadPoolConfig0, threadPoolStatistics0);
      ThreadPoolExecutor threadPoolExecutor0 = threadPoolMonitorWrapper0.getThreadPoolExecutor();
      assertNull(threadPoolExecutor0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      LinkedBlockingDeque<Runnable> linkedBlockingDeque0 = new LinkedBlockingDeque<Runnable>(2758);
      NamedThreadFactory namedThreadFactory0 = new NamedThreadFactory("Q;zYF97DO\"1sKo", true);
      ThreadPoolExecutor.AbortPolicy threadPoolExecutor_AbortPolicy0 = new ThreadPoolExecutor.AbortPolicy();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(2758, 2758, 2758, timeUnit0, linkedBlockingDeque0, namedThreadFactory0, threadPoolExecutor_AbortPolicy0);
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics(threadPoolExecutor0);
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper(threadPoolExecutor0, (ThreadPoolConfig) null, threadPoolStatistics0);
      ThreadPoolConfig threadPoolConfig0 = threadPoolMonitorWrapper0.getThreadPoolConfig();
      assertNull(threadPoolConfig0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder0 = ThreadPoolConfig.newBuilder();
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder1 = threadPoolConfig_SofaThreadConfigBuilder0.timeUnit(timeUnit0);
      ThreadPoolConfig threadPoolConfig0 = new ThreadPoolConfig(threadPoolConfig_SofaThreadConfigBuilder1);
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics((ThreadPoolExecutor) null);
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper((ThreadPoolExecutor) null, threadPoolConfig0, threadPoolStatistics0);
      ThreadPoolConfig threadPoolConfig1 = threadPoolMonitorWrapper0.getThreadPoolConfig();
      assertEquals(TimeUnit.NANOSECONDS, threadPoolConfig1.getTimeUnit());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder0 = ThreadPoolConfig.newBuilder();
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics((ThreadPoolExecutor) null);
      ThreadPoolConfig threadPoolConfig0 = threadPoolConfig_SofaThreadConfigBuilder0.build();
      threadPoolConfig0.setTaskTimeout(0L);
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper((ThreadPoolExecutor) null, threadPoolConfig0, threadPoolStatistics0);
      ThreadPoolConfig threadPoolConfig1 = threadPoolMonitorWrapper0.getThreadPoolConfig();
      assertSame(threadPoolConfig0, threadPoolConfig1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      LinkedTransferQueue<Runnable> linkedTransferQueue0 = new LinkedTransferQueue<Runnable>();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(125, 125, 1912L, timeUnit0, linkedTransferQueue0);
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder0 = ThreadPoolConfig.newBuilder();
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder1 = threadPoolConfig_SofaThreadConfigBuilder0.taskTimeout((-509L));
      ThreadPoolConfig threadPoolConfig0 = new ThreadPoolConfig(threadPoolConfig_SofaThreadConfigBuilder1);
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics(threadPoolExecutor0);
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper(threadPoolExecutor0, threadPoolConfig0, threadPoolStatistics0);
      ThreadPoolConfig threadPoolConfig1 = threadPoolMonitorWrapper0.getThreadPoolConfig();
      assertNull(threadPoolConfig1.getThreadPoolName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder0 = ThreadPoolConfig.newBuilder();
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder1 = threadPoolConfig_SofaThreadConfigBuilder0.period((-1424L));
      ThreadPoolConfig threadPoolConfig0 = new ThreadPoolConfig(threadPoolConfig_SofaThreadConfigBuilder1);
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics((ThreadPoolExecutor) null);
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper((ThreadPoolExecutor) null, threadPoolConfig0, threadPoolStatistics0);
      ThreadPoolConfig threadPoolConfig1 = threadPoolMonitorWrapper0.getThreadPoolConfig();
      assertEquals(TimeUnit.MILLISECONDS, threadPoolConfig1.getTimeUnit());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics((ThreadPoolExecutor) null);
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper((ThreadPoolExecutor) null, (ThreadPoolConfig) null, threadPoolStatistics0);
      // Undeclared exception!
      try { 
        threadPoolMonitorWrapper0.stopMonitor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alipay.sofa.common.thread.ThreadPoolMonitorWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics((ThreadPoolExecutor) null);
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper((ThreadPoolExecutor) null, (ThreadPoolConfig) null, threadPoolStatistics0);
      // Undeclared exception!
      try { 
        threadPoolMonitorWrapper0.startMonitor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alipay.sofa.common.thread.ThreadPoolMonitorWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder0 = ThreadPoolConfig.newBuilder();
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics((ThreadPoolExecutor) null);
      ThreadPoolConfig threadPoolConfig0 = new ThreadPoolConfig(threadPoolConfig_SofaThreadConfigBuilder0);
      threadPoolConfig0.setPeriod((-1695L));
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper((ThreadPoolExecutor) null, threadPoolConfig0, threadPoolStatistics0);
      // Undeclared exception!
      try { 
        threadPoolMonitorWrapper0.startMonitor();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ScheduledThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics((ThreadPoolExecutor) null);
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper((ThreadPoolExecutor) null, (ThreadPoolConfig) null, threadPoolStatistics0);
      // Undeclared exception!
      try { 
        threadPoolMonitorWrapper0.restartMonitor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alipay.sofa.common.thread.ThreadPoolMonitorWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder0 = ThreadPoolConfig.newBuilder();
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder1 = threadPoolConfig_SofaThreadConfigBuilder0.period((-1424L));
      ThreadPoolConfig threadPoolConfig0 = new ThreadPoolConfig(threadPoolConfig_SofaThreadConfigBuilder1);
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics((ThreadPoolExecutor) null);
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper((ThreadPoolExecutor) null, threadPoolConfig0, threadPoolStatistics0);
      // Undeclared exception!
      try { 
        threadPoolMonitorWrapper0.restartMonitor();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ScheduledThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder0 = ThreadPoolConfig.newBuilder();
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics((ThreadPoolExecutor) null);
      ThreadPoolConfig threadPoolConfig0 = threadPoolConfig_SofaThreadConfigBuilder0.build();
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper((ThreadPoolExecutor) null, threadPoolConfig0, threadPoolStatistics0);
      threadPoolMonitorWrapper0.restartMonitor();
      boolean boolean0 = threadPoolMonitorWrapper0.isStarted();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      LinkedTransferQueue<Runnable> linkedTransferQueue0 = new LinkedTransferQueue<Runnable>();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(125, 125, 1912L, timeUnit0, linkedTransferQueue0);
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder0 = ThreadPoolConfig.newBuilder();
      ThreadPoolConfig threadPoolConfig0 = new ThreadPoolConfig(threadPoolConfig_SofaThreadConfigBuilder0);
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics(threadPoolExecutor0);
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper(threadPoolExecutor0, threadPoolConfig0, threadPoolStatistics0);
      boolean boolean0 = threadPoolMonitorWrapper0.isStarted();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      LinkedTransferQueue<Runnable> linkedTransferQueue0 = new LinkedTransferQueue<Runnable>();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(125, 125, 1912L, timeUnit0, linkedTransferQueue0);
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder0 = ThreadPoolConfig.newBuilder();
      ThreadPoolConfig threadPoolConfig0 = new ThreadPoolConfig(threadPoolConfig_SofaThreadConfigBuilder0);
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics(threadPoolExecutor0);
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper(threadPoolExecutor0, threadPoolConfig0, threadPoolStatistics0);
      threadPoolMonitorWrapper0.startMonitor();
      threadPoolMonitorWrapper0.restartMonitor();
      assertTrue(threadPoolMonitorWrapper0.isStarted());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder0 = ThreadPoolConfig.newBuilder();
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics((ThreadPoolExecutor) null);
      ThreadPoolConfig threadPoolConfig0 = new ThreadPoolConfig(threadPoolConfig_SofaThreadConfigBuilder0);
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper((ThreadPoolExecutor) null, threadPoolConfig0, threadPoolStatistics0);
      threadPoolMonitorWrapper0.startMonitor();
      assertTrue(threadPoolMonitorWrapper0.isStarted());
      
      threadPoolMonitorWrapper0.stopMonitor();
      assertFalse(threadPoolMonitorWrapper0.isStarted());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder0 = ThreadPoolConfig.newBuilder();
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics((ThreadPoolExecutor) null);
      ThreadPoolConfig threadPoolConfig0 = threadPoolConfig_SofaThreadConfigBuilder0.build();
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper((ThreadPoolExecutor) null, threadPoolConfig0, threadPoolStatistics0);
      threadPoolMonitorWrapper0.restartMonitor();
      threadPoolMonitorWrapper0.startMonitor();
      assertTrue(threadPoolMonitorWrapper0.isStarted());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      LinkedTransferQueue<Runnable> linkedTransferQueue0 = new LinkedTransferQueue<Runnable>();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(125, 125, 1912L, timeUnit0, linkedTransferQueue0);
      ThreadPoolConfig.SofaThreadConfigBuilder threadPoolConfig_SofaThreadConfigBuilder0 = ThreadPoolConfig.newBuilder();
      ThreadPoolConfig threadPoolConfig0 = new ThreadPoolConfig(threadPoolConfig_SofaThreadConfigBuilder0);
      ThreadPoolStatistics threadPoolStatistics0 = new ThreadPoolStatistics(threadPoolExecutor0);
      ThreadPoolMonitorWrapper threadPoolMonitorWrapper0 = new ThreadPoolMonitorWrapper(threadPoolExecutor0, threadPoolConfig0, threadPoolStatistics0);
      ThreadPoolExecutor threadPoolExecutor1 = threadPoolMonitorWrapper0.getThreadPoolExecutor();
      assertSame(threadPoolExecutor0, threadPoolExecutor1);
  }
}
