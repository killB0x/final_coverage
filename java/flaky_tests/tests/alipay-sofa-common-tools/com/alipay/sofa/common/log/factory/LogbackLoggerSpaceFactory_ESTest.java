/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 19:48:55 GMT 2022
 */

package com.alipay.sofa.common.log.factory;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.qos.logback.classic.LoggerContext;
import ch.qos.logback.core.LogbackException;
import com.alipay.sofa.common.log.factory.LogbackLoggerSpaceFactory;
import com.alipay.sofa.common.space.SpaceId;
import java.net.URL;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LogbackLoggerSpaceFactory_ESTest extends LogbackLoggerSpaceFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SpaceId spaceId0 = new SpaceId("[r N9STM_vx!Ga+|xa0");
      LoggerContext loggerContext0 = new LoggerContext();
      Properties properties0 = new Properties();
      properties0.put("", "");
      LogbackLoggerSpaceFactory logbackLoggerSpaceFactory0 = null;
      try {
        logbackLoggerSpaceFactory0 = new LogbackLoggerSpaceFactory(spaceId0, loggerContext0, properties0, (URL) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URL argument cannot be null
         //
         verifyException("ch.qos.logback.classic.util.ContextInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SpaceId spaceId0 = SpaceId.withSpaceName("");
      LoggerContext loggerContext0 = new LoggerContext();
      URL uRL0 = MockURL.getFtpExample();
      LogbackLoggerSpaceFactory logbackLoggerSpaceFactory0 = null;
      try {
        logbackLoggerSpaceFactory0 = new LogbackLoggerSpaceFactory(spaceId0, loggerContext0, (Properties) null, uRL0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alipay.sofa.common.log.factory.LogbackLoggerSpaceFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SpaceId spaceId0 = SpaceId.withSpaceName("");
      LoggerContext loggerContext0 = new LoggerContext();
      Properties properties0 = new Properties();
      URL uRL0 = MockURL.getFtpExample();
      LogbackLoggerSpaceFactory logbackLoggerSpaceFactory0 = null;
      try {
        logbackLoggerSpaceFactory0 = new LogbackLoggerSpaceFactory(spaceId0, loggerContext0, properties0, uRL0, "");
        fail("Expecting exception: LogbackException");
      
      } catch(LogbackException e) {
         //
         // Unexpected filename extension of file [ftp://ftp.someFakeButWellFormedURL.org/fooExample]. Should be either .groovy or .xml
         //
         verifyException("ch.qos.logback.classic.util.ContextInitializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SpaceId spaceId0 = SpaceId.withSpaceName("JMmYn^A");
      LoggerContext loggerContext0 = new LoggerContext();
      Properties properties0 = new Properties();
      properties0.put(loggerContext0, spaceId0);
      URL uRL0 = MockURL.getFtpExample();
      LogbackLoggerSpaceFactory logbackLoggerSpaceFactory0 = null;
      try {
        logbackLoggerSpaceFactory0 = new LogbackLoggerSpaceFactory(spaceId0, loggerContext0, properties0, uRL0, "JMmYn^A");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class ch.qos.logback.classic.LoggerContext cannot be cast to class java.lang.String (ch.qos.logback.classic.LoggerContext is in unnamed module of loader 'app'; java.lang.String is in module java.base of loader 'bootstrap')
         //
         verifyException("com.alipay.sofa.common.log.factory.LogbackLoggerSpaceFactory", e);
      }
  }
}
