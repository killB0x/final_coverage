/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 19:44:40 GMT 2022
 */

package com.alipay.sofa.common.log;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alipay.sofa.common.log.CommonLoggingConfigurations;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CommonLoggingConfigurations_ESTest extends CommonLoggingConfigurations_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CommonLoggingConfigurations.loadExternalConfiguration("R:?qz(0NlTz3'v]K5", "O0:Bs,0k");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      CommonLoggingConfigurations.setLoggerConsoleWhiteSet(linkedHashSet0);
      Set<String> set0 = CommonLoggingConfigurations.getLoggerConsoleWhiteSet();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      CommonLoggingConfigurations.setLoggerConsoleWhiteSet(linkedHashSet0);
      linkedHashSet0.add("$EGi:ix,i7u");
      Set<String> set0 = CommonLoggingConfigurations.getLoggerConsoleWhiteSet();
      assertFalse(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      CommonLoggingConfigurations.setLoggerConsolePrefixWhiteSet(linkedHashSet0);
      Set<String> set0 = CommonLoggingConfigurations.getLoggerConsolePrefixWhiteSet();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("C%^EX[oOqH9CY#pi*");
      CommonLoggingConfigurations.setLoggerConsolePrefixWhiteSet(linkedHashSet0);
      Set<String> set0 = CommonLoggingConfigurations.getLoggerConsolePrefixWhiteSet();
      assertTrue(set0.contains("C%^EX[oOqH9CY#pi*"));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CommonLoggingConfigurations.appendConsolePrefixWhiteLoggerName((String) null);
      // Undeclared exception!
      try { 
        CommonLoggingConfigurations.shouldAttachConsoleAppender((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CommonLoggingConfigurations.appendConsolePrefixWhiteLoggerName("com.alipay.sofa.common.log.CommonLoggingConfigurations");
      boolean boolean0 = CommonLoggingConfigurations.shouldAttachConsoleAppender("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CommonLoggingConfigurations.appendConsoleLoggerName("/r_pU_J");
      boolean boolean0 = CommonLoggingConfigurations.shouldAttachConsoleAppender("/r_pU_J");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CommonLoggingConfigurations.appendConsolePrefixWhiteLoggerName("R>Y->R2=.&0#,atw");
      boolean boolean0 = CommonLoggingConfigurations.shouldAttachConsoleAppender("R>Y->R2=.&0#,atw");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = CommonLoggingConfigurations.shouldAttachConsoleAppender("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CommonLoggingConfigurations.addAllConsoleLogger((Set<String>) null);
      boolean boolean0 = CommonLoggingConfigurations.shouldAttachConsoleAppender("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      CommonLoggingConfigurations.addAllConsoleLogger(linkedHashSet0);
      assertTrue(linkedHashSet0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CommonLoggingConfigurations.addAllConsoleLogger((Set<String>) null);
      CommonLoggingConfigurations.addAllConsoleLogger((Set<String>) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CommonLoggingConfigurations.appendConsolePrefixWhiteLoggerName("R>Y->R2=.&0#,atw");
      CommonLoggingConfigurations.appendConsolePrefixWhiteLoggerName("^M<t01-44_a@");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CommonLoggingConfigurations.addAllConsoleLogger((Set<String>) null);
      CommonLoggingConfigurations.appendConsoleLoggerName("com.alipay.sofa.common.log.CommonLoggingConfigurations");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CommonLoggingConfigurations.loadExternalConfiguration("com.alipay.sofa.common.log.CommonLoggingConfigurations", "");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CommonLoggingConfigurations.loadExternalConfiguration("", "");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Set<String> set0 = CommonLoggingConfigurations.getLoggerConsoleWhiteSet();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Map<String, String> map0 = CommonLoggingConfigurations.getExternalConfigurations();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Set<String> set0 = CommonLoggingConfigurations.getLoggerConsolePrefixWhiteSet();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CommonLoggingConfigurations commonLoggingConfigurations0 = new CommonLoggingConfigurations();
  }
}
