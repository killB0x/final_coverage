/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 19:42:15 GMT 2022
 */

package com.alipay.sofa.common.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alipay.sofa.common.utils.ObjectUtil;
import java.awt.ImageCapabilities;
import java.time.temporal.ChronoField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ObjectUtil_ESTest extends ObjectUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(false);
      String string0 = ObjectUtil.toString((Object) imageCapabilities0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(false);
      Object object0 = ObjectUtil.defaultIfNull((Object) null, imageCapabilities0);
      assertSame(object0, imageCapabilities0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(true);
      ImageCapabilities imageCapabilities1 = (ImageCapabilities)ObjectUtil.defaultIfNull(imageCapabilities0, (Object) null);
      assertTrue(imageCapabilities1.isAccelerated());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = ObjectUtil.toString((Object) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = ObjectUtil.identityToString((Object) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object object0 = ObjectUtil.NULL;
      boolean boolean0 = ObjectUtil.equals((Object) "com.alipay.sofa.common.utils.ObjectUtil$1@0000000001", object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(false);
      StringBuffer stringBuffer0 = ObjectUtil.appendIdentityToString((StringBuffer) null, imageCapabilities0);
      assertEquals(28, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(false);
      int int0 = ObjectUtil.identityHashCode(imageCapabilities0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = ObjectUtil.toString((Object) null, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(true);
      String string0 = ObjectUtil.toString((Object) imageCapabilities0, (String) null);
      boolean boolean0 = ObjectUtil.isSameType(string0, imageCapabilities0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = ObjectUtil.toString((Object) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(false);
      boolean boolean0 = ObjectUtil.isSameType(imageCapabilities0, (Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = ObjectUtil.isSameType((Object) null, (Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ChronoField chronoField0 = ChronoField.MILLI_OF_DAY;
      // Undeclared exception!
      try { 
        ObjectUtil.clone(chronoField0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Object of class java.time.temporal.ChronoField is not Cloneable
         //
         verifyException("com.alipay.sofa.common.utils.ObjectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object object0 = ObjectUtil.clone((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(true);
      ImageCapabilities imageCapabilities1 = (ImageCapabilities)ObjectUtil.clone(imageCapabilities0);
      assertTrue(imageCapabilities1.isAccelerated());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = ObjectUtil.NULL;
      StringBuffer stringBuffer0 = new StringBuffer(1657);
      StringBuffer stringBuffer1 = ObjectUtil.appendIdentityToString(stringBuffer0, object0);
      assertEquals(43, stringBuffer1.length());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringBuffer stringBuffer0 = ObjectUtil.appendIdentityToString((StringBuffer) null, (Object) null);
      assertNull(stringBuffer0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = ObjectUtil.identityToString((Object) null, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(true);
      String string0 = ObjectUtil.identityToString((Object) imageCapabilities0, "java.awt.ImageCapabilities@4");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = ObjectUtil.identityToString((Object) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = ObjectUtil.identityHashCode((Object) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(true);
      String string0 = ObjectUtil.identityToString((Object) imageCapabilities0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object object0 = ObjectUtil.defaultIfNull((Object) null, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ObjectUtil objectUtil0 = new ObjectUtil();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(true);
      boolean boolean0 = ObjectUtil.equals((Object) imageCapabilities0, (Object) imageCapabilities0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImageCapabilities imageCapabilities0 = new ImageCapabilities(true);
      ObjectUtil.hashCode((Object) imageCapabilities0);
  }
}
