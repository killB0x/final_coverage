/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 20:03:56 GMT 2022
 */

package com.alipay.sofa.common.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alipay.sofa.common.config.ConfigKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConfigKey_ESTest extends ConfigKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConfigKey<String> configKey0 = ConfigKey.build("9 Y$<rW", "9 Y$<rW", false, "9 Y$<rW");
      boolean boolean0 = configKey0.isModifiable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[7];
      Object object0 = new Object();
      ConfigKey<Object> configKey0 = new ConfigKey<Object>("\" of ConfigKey cannot be null,please check it", stringArray0, object0, true, "c8xGwZDi7NkGDU>");
      String string0 = configKey0.getKey();
      assertEquals("\" of ConfigKey cannot be null,please check it", string0);
      assertEquals("c8xGwZDi7NkGDU>", configKey0.getDescription());
      assertTrue(configKey0.isModifiable());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = new Object();
      ConfigKey<Object> configKey0 = ConfigKey.build("", object0, false, "");
      configKey0.getDescription();
      assertFalse(configKey0.isModifiable());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[7];
      Object object0 = new Object();
      ConfigKey<Object> configKey0 = new ConfigKey<Object>("\" of ConfigKey cannot be null,please check it", stringArray0, object0, true, "c8xGwZDi7NkGDU>");
      configKey0.getAlias();
      assertEquals("\" of ConfigKey cannot be null,please check it", configKey0.getKey());
      assertTrue(configKey0.isModifiable());
      assertEquals("c8xGwZDi7NkGDU>", configKey0.getDescription());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[8];
      ConfigKey<Object> configKey0 = ConfigKey.build("H-*", object0, false, "H-*", stringArray0);
      assertFalse(configKey0.isModifiable());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConfigKey.build((String) null, (Object) "U0m", true, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // \"key\" of ConfigKey cannot be null,please check it
         //
         verifyException("com.alipay.sofa.common.config.ConfigKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object object0 = new Object();
      ConfigKey<Object> configKey0 = null;
      try {
        configKey0 = new ConfigKey<Object>((String) null, (String[]) null, object0, true, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // \"key\" of ConfigKey cannot be null,please check it
         //
         verifyException("com.alipay.sofa.common.config.ConfigKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConfigKey<String> configKey0 = new ConfigKey<String>("", (String[]) null, "U0m", true, "");
      assertTrue(configKey0.isModifiable());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        ConfigKey.build("", (Object) "", false, (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // \"description\" of ConfigKey cannot be null,please check it
         //
         verifyException("com.alipay.sofa.common.config.ConfigKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[7];
      Object object0 = new Object();
      ConfigKey<Object> configKey0 = new ConfigKey<Object>("\" of ConfigKey cannot be null,please check it", stringArray0, object0, true, "c8xGwZDi7NkGDU>");
      String string0 = configKey0.getDescription();
      assertEquals("c8xGwZDi7NkGDU>", string0);
      assertEquals("\" of ConfigKey cannot be null,please check it", configKey0.getKey());
      assertTrue(configKey0.isModifiable());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[7];
      Object object0 = new Object();
      ConfigKey<Object> configKey0 = ConfigKey.build("", object0, true, "\" of ConfigKey cannot be null,please check it", stringArray0);
      assertEquals("", configKey0.getKey());
      assertEquals("\" of ConfigKey cannot be null,please check it", configKey0.getDescription());
      assertTrue(configKey0.isModifiable());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[7];
      Object object0 = new Object();
      ConfigKey<Object> configKey0 = new ConfigKey<Object>("\" of ConfigKey cannot be null,please check it", stringArray0, object0, true, "c8xGwZDi7NkGDU>");
      boolean boolean0 = configKey0.isModifiable();
      assertTrue(boolean0);
      assertEquals("c8xGwZDi7NkGDU>", configKey0.getDescription());
      assertEquals("\" of ConfigKey cannot be null,please check it", configKey0.getKey());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConfigKey<String> configKey0 = ConfigKey.build("", "", true, "");
      configKey0.getKey();
      assertTrue(configKey0.isModifiable());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConfigKey<Object> configKey0 = ConfigKey.build("", (Object) "", true, "");
      configKey0.getDefaultValue();
      assertTrue(configKey0.isModifiable());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConfigKey<Object> configKey0 = ConfigKey.build("", (Object) "", false, "");
      String[] stringArray0 = configKey0.getAlias();
      assertEquals(0, stringArray0.length);
      assertFalse(configKey0.isModifiable());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConfigKey<Object> configKey0 = ConfigKey.build("RH:wsf$5q", (Object) "RH:wsf$5q", true, "RH:wsf$5q");
      configKey0.getType();
      assertTrue(configKey0.isModifiable());
  }
}
