/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 20:12:21 GMT 2022
 */

package com.alipay.sofa.common.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alipay.sofa.common.utils.ResourceUtil;
import java.io.File;
import java.io.FileNotFoundException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLStreamHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ResourceUtil_ESTest extends ResourceUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      URL uRL0 = MockURL.URL("file", (String) null, (-1792864785), "lwi");
      URI uRI0 = ResourceUtil.toURI(uRL0);
      assertTrue(uRI0.isOpaque());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("file", "FC6h", 432, "file", uRLStreamHandler0);
      URL uRL1 = MockURL.URL(uRL0, "file");
      URI uRI0 = ResourceUtil.toURI(uRL1);
      assertEquals("file://FC6h:432/file", uRI0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URI uRI0 = ResourceUtil.toURI("");
      assertEquals("", uRI0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/some/fake/but/wellformed/url");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "file");
      File file0 = ResourceUtil.getFile(uRL0, "file");
      assertTrue(file0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URL uRL0 = MockURL.URL("file", ".37XaJ=>`PPDt~", ".37XaJ=>`PPDt~");
      File file0 = ResourceUtil.getFile(uRL0, ".37XaJ=>`PPDt~");
      assertEquals(".37XaJ=>`PPDt~", file0.getName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/some/fake/but/wellformed/url");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = ResourceUtil.getFile(uRL0, "file");
      assertTrue(file0.canExecute());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/some/fake/but/wellformed/url");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = ResourceUtil.getFile(uRL0);
      assertEquals("/some/fake/but/wellformed/url", file0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/some/fake/but/wellformed/url");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "K>ZJAG\"");
      File file0 = ResourceUtil.getFile(uRL0);
      assertTrue(file0.canExecute());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URL uRL0 = MockURL.URL("file", "file", "~<L*&]z8]*_\"92Q@_bV");
      try { 
        ResourceUtil.toURI(uRL0);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in authority at index 7: file://file~<L*&]z8]*_\"92Q@_bV
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtil.toURI((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      try { 
        ResourceUtil.toURI("!ol|^<ix'{SVDX");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 3: !ol|^<ix'{SVDX
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtil.toURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "file", uRLStreamHandler0);
      // Undeclared exception!
      try { 
        ResourceUtil.getFile(uRL1, "file");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtil.getFile((URL) null, "file");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Resource URL must not be null
         //
         verifyException("com.alipay.sofa.common.utils.AssertUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("file", "file", (-1), "file", uRLStreamHandler0);
      // Undeclared exception!
      try { 
        ResourceUtil.getFile(uRL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtil.getFile((URL) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Resource URL must not be null
         //
         verifyException("com.alipay.sofa.common.utils.AssertUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      try { 
        ResourceUtil.getFile(uRL0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // URL cannot be resolved to absolute file path because it does not reside in the file system: http://www.someFakeButWellFormedURL.org/fooExample
         //
         verifyException("com.alipay.sofa.common.utils.ResourceUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      URL uRL0 = MockURL.URL("file", "file", 0, "");
      URI uRI0 = ResourceUtil.toURI(uRL0);
      assertTrue(uRI0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      URI uRI0 = ResourceUtil.toURI("n41:rzRE3Hy");
      assertTrue(uRI0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      try { 
        ResourceUtil.getFile(uRL0, (String) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // null cannot be resolved to absolute file path because it does not reside in the file system: http://www.someFakeButWellFormedURL.org/fooExample
         //
         verifyException("com.alipay.sofa.common.utils.ResourceUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResourceUtil resourceUtil0 = new ResourceUtil();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      URL uRL0 = MockURL.URL("file", ".37XaJ=>`PPDt~", ".37XaJ=>`PPDt~");
      File file0 = ResourceUtil.getFile(uRL0);
      assertTrue(file0.isHidden());
  }
}
