/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 01:53:44 GMT 2022
 */

package org.chiknrice.iso.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.chiknrice.iso.util.Hash;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Hash_ESTest extends Hash_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Hash hash0 = new Hash();
      Object object0 = new Object();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) hash0;
      objectArray0[1] = (Object) hash0;
      objectArray0[2] = (Object) hash0;
      objectArray0[3] = (Object) hash0;
      objectArray0[4] = (Object) hash0;
      objectArray0[5] = object0;
      int int0 = Hash.build(object0, objectArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Hash hash0 = new Hash();
      // Undeclared exception!
      try { 
        Hash.build(hash0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.chiknrice.iso.util.Hash", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[6];
      int int0 = Hash.build(object0, objectArray0);
      assertEquals(1, int0);
  }
}
