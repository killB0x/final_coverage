/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 01:52:56 GMT 2022
 */

package org.chiknrice.iso.util;

import org.junit.Test;
import static org.junit.Assert.*;
import org.chiknrice.iso.util.EqualsBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EqualsBuilder_ESTest extends EqualsBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      EqualsBuilder equalsBuilder0 = EqualsBuilder.newInstance(object0, object1);
      equalsBuilder0.append(object0, object1);
      assertFalse(equalsBuilder0.isEqual());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      EqualsBuilder equalsBuilder0 = EqualsBuilder.newInstance(object0, object0);
      EqualsBuilder equalsBuilder1 = equalsBuilder0.append(object0, object0);
      assertTrue(equalsBuilder1.isEqual());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      EqualsBuilder equalsBuilder0 = EqualsBuilder.newInstance((Object) null, object0);
      boolean boolean0 = equalsBuilder0.isEqual();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      EqualsBuilder equalsBuilder0 = EqualsBuilder.newInstance(object0, object1);
      boolean boolean0 = equalsBuilder0.isEqual();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EqualsBuilder equalsBuilder0 = EqualsBuilder.newInstance((Object) null, (Object) null);
      boolean boolean0 = equalsBuilder0.isEqual();
      assertTrue(boolean0);
  }
}
