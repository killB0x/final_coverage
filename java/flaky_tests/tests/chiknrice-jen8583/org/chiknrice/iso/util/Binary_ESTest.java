/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 01:47:47 GMT 2022
 */

package org.chiknrice.iso.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.BufferOverflowException;
import org.chiknrice.iso.util.Binary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Binary_ESTest extends Binary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      Long long0 = Binary.decodeLong(byteArray0);
      byte[] byteArray1 = Binary.encode((Number) long0, 4);
      assertEquals(4, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)47;
      Long long0 = Binary.decodeLong(byteArray0);
      assertEquals(3080192L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Long long0 = new Long((-1L));
      byte[] byteArray0 = Binary.encode(long0);
      Long long1 = Binary.decodeLong(byteArray0);
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Long long0 = new Long((-1L));
      byte[] byteArray0 = Binary.encode((Number) long0, 0);
      Integer integer0 = Binary.decodeInt(byteArray0);
      assertEquals(0, byteArray0.length);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      Integer integer0 = Binary.decodeInt(byteArray0);
      assertEquals(92, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer((-1004));
      byte[] byteArray0 = Binary.encode(integer0);
      Integer integer1 = Binary.decodeInt(byteArray0);
      assertEquals((-1004), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        Binary.encode((Number) null, 1149);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.chiknrice.iso.util.Binary", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer((-2788));
      // Undeclared exception!
      try { 
        Binary.encode((Number) integer0, (-2788));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2788
         //
         verifyException("org.chiknrice.iso.util.Binary", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Binary.encode((Number) (byte)4, (int) (byte) (-7));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Byte cannot be cast to class java.lang.Integer (java.lang.Byte and java.lang.Integer are in module java.base of loader 'bootstrap')
         //
         verifyException("org.chiknrice.iso.util.Binary", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        Binary.encode((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.chiknrice.iso.util.Binary", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        Binary.encode((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.chiknrice.iso.util.Binary", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      // Undeclared exception!
      try { 
        Binary.decodeLong(byteArray0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        Binary.decodeLong((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.chiknrice.iso.util.Binary", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        Binary.decodeInt((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.chiknrice.iso.util.Binary", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(1149);
      byte[] byteArray0 = Binary.encode((Number) integer0, 1149);
      assertEquals(4, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer(874);
      // Undeclared exception!
      try { 
        Binary.encode((Number) integer0, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.Integer@0000000001 trimmed on encoding to 0 bytes
         //
         verifyException("org.chiknrice.iso.util.Binary", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Long long0 = Long.valueOf(0L);
      byte[] byteArray0 = Binary.encode(long0);
      // Undeclared exception!
      try { 
        Binary.decodeInt(byteArray0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Binary binary0 = new Binary();
  }
}
