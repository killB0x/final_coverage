/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 01:51:59 GMT 2022
 */

package org.chiknrice.iso.codec;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.chiknrice.iso.codec.CustomCodec;
import org.chiknrice.iso.codec.CustomCodecAdapter;
import org.chiknrice.iso.config.ComponentDef;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CustomCodecAdapter_ESTest extends CustomCodecAdapter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CustomCodec<CustomCodecAdapter> customCodec0 = (CustomCodec<CustomCodecAdapter>) mock(CustomCodec.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(customCodec0).decode(any(byte[].class));
      CustomCodecAdapter customCodecAdapter0 = new CustomCodecAdapter(customCodec0, (Integer) null);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      customCodecAdapter0.decode(byteBuffer0);
      customCodecAdapter0.decode(byteBuffer0);
      assertEquals(0, byteBuffer0.remaining());
      assertEquals(1, byteBuffer0.position());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CustomCodec<CustomCodecAdapter> customCodec0 = (CustomCodec<CustomCodecAdapter>) mock(CustomCodec.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer(2525);
      CustomCodecAdapter customCodecAdapter0 = new CustomCodecAdapter(customCodec0, integer0);
      byte[] byteArray0 = new byte[4];
      CustomCodec<CustomCodecAdapter> customCodec1 = (CustomCodec<CustomCodecAdapter>) mock(CustomCodec.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(customCodec1).encode(any(org.chiknrice.iso.codec.CustomCodecAdapter.class));
      CustomCodecAdapter customCodecAdapter1 = new CustomCodecAdapter(customCodec1, integer0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2525);
      customCodecAdapter1.encode(byteBuffer0, customCodecAdapter0);
      assertEquals("java.nio.HeapByteBuffer[pos=4 lim=2525 cap=2525]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CustomCodec<CustomCodecAdapter> customCodec0 = (CustomCodec<CustomCodecAdapter>) mock(CustomCodec.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer(0);
      CustomCodecAdapter customCodecAdapter0 = new CustomCodecAdapter(customCodec0, integer0);
      CustomCodec<CustomCodecAdapter> customCodec1 = (CustomCodec<CustomCodecAdapter>) mock(CustomCodec.class, new ViolatedAssumptionAnswer());
      doReturn(customCodecAdapter0).when(customCodec1).decode(any(byte[].class));
      CustomCodecAdapter customCodecAdapter1 = new CustomCodecAdapter(customCodec1, integer0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      Object object0 = customCodecAdapter1.decode(byteBuffer0);
      assertFalse(object0.equals((Object)customCodecAdapter1));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(2525);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      byte[] byteArray0 = new byte[2];
      CustomCodec<CustomCodecAdapter> customCodec0 = (CustomCodec<CustomCodecAdapter>) mock(CustomCodec.class, new ViolatedAssumptionAnswer());
      doReturn(byteArray0).when(customCodec0).encode(any(org.chiknrice.iso.codec.CustomCodecAdapter.class));
      CustomCodecAdapter customCodecAdapter0 = new CustomCodecAdapter(customCodec0, integer0);
      // Undeclared exception!
      try { 
        customCodecAdapter0.encode(byteBuffer0, customCodecAdapter0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CustomCodec<CustomCodecAdapter> customCodec0 = (CustomCodec<CustomCodecAdapter>) mock(CustomCodec.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer((-707));
      CustomCodecAdapter customCodecAdapter0 = new CustomCodecAdapter(customCodec0, integer0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1593);
      // Undeclared exception!
      try { 
        customCodecAdapter0.decode(byteBuffer0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -707
         //
         verifyException("org.chiknrice.iso.codec.CustomCodecAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CustomCodecAdapter customCodecAdapter0 = new CustomCodecAdapter((CustomCodec) null, (Integer) null);
      Object object0 = new Object();
      boolean boolean0 = customCodecAdapter0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CustomCodec<CustomCodecAdapter> customCodec0 = (CustomCodec<CustomCodecAdapter>) mock(CustomCodec.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer(2525);
      CustomCodecAdapter customCodecAdapter0 = new CustomCodecAdapter(customCodec0, integer0);
      CustomCodec<CustomCodecAdapter> customCodec1 = (CustomCodec<CustomCodecAdapter>) mock(CustomCodec.class, new ViolatedAssumptionAnswer());
      CustomCodecAdapter customCodecAdapter1 = new CustomCodecAdapter(customCodec1, integer0);
      boolean boolean0 = customCodecAdapter0.equals(customCodecAdapter1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CustomCodec<CustomCodecAdapter> customCodec0 = (CustomCodec<CustomCodecAdapter>) mock(CustomCodec.class, new ViolatedAssumptionAnswer());
      CustomCodecAdapter customCodecAdapter0 = new CustomCodecAdapter(customCodec0, (Integer) null);
      boolean boolean0 = customCodecAdapter0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CustomCodec<CustomCodecAdapter> customCodec0 = (CustomCodec<CustomCodecAdapter>) mock(CustomCodec.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer((-707));
      CustomCodecAdapter customCodecAdapter0 = new CustomCodecAdapter(customCodec0, integer0);
      boolean boolean0 = customCodecAdapter0.equals(customCodecAdapter0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(2525);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      CustomCodec<CustomCodecAdapter> customCodec0 = (CustomCodec<CustomCodecAdapter>) mock(CustomCodec.class, new ViolatedAssumptionAnswer());
      CustomCodecAdapter customCodecAdapter0 = new CustomCodecAdapter(customCodec0, integer0);
      // Undeclared exception!
      try { 
        customCodecAdapter0.decode(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.DirectByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CustomCodecAdapter customCodecAdapter0 = new CustomCodecAdapter((CustomCodec) null, (Integer) null);
      // Undeclared exception!
      try { 
        customCodecAdapter0.decode((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.chiknrice.iso.codec.CustomCodecAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CustomCodec<CustomCodecAdapter> customCodec0 = (CustomCodec<CustomCodecAdapter>) mock(CustomCodec.class, new ViolatedAssumptionAnswer());
      doReturn((byte[]) null).when(customCodec0).encode(any(org.chiknrice.iso.codec.CustomCodecAdapter.class));
      Integer integer0 = new Integer(2525);
      CustomCodecAdapter customCodecAdapter0 = new CustomCodecAdapter(customCodec0, integer0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2525);
      // Undeclared exception!
      try { 
        customCodecAdapter0.encode(byteBuffer0, customCodecAdapter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CustomCodec<CustomCodecAdapter> customCodec0 = (CustomCodec<CustomCodecAdapter>) mock(CustomCodec.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer(2525);
      CustomCodecAdapter customCodecAdapter0 = new CustomCodecAdapter(customCodec0, integer0);
      customCodecAdapter0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CustomCodecAdapter customCodecAdapter0 = new CustomCodecAdapter((CustomCodec) null, (Integer) null);
      ComponentDef.Encoding componentDef_Encoding0 = customCodecAdapter0.getEncoding();
      assertEquals(ComponentDef.Encoding.BINARY, componentDef_Encoding0);
  }
}
