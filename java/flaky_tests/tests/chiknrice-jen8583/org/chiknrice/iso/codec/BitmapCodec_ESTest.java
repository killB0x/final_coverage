/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 01:37:02 GMT 2022
 */

package org.chiknrice.iso.codec;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.util.LinkedHashSet;
import java.util.TreeSet;
import org.chiknrice.iso.codec.BitmapCodec;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BitmapCodec_ESTest extends BitmapCodec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(149);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      boolean boolean0 = bitmapCodec_Bitmap0.isControlBit(149);
      assertEquals(147, byteBuffer0.remaining());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.BINARY;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(110);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      boolean boolean0 = bitmapCodec_Bitmap0.isSet(110);
      assertEquals(8, byteBuffer0.position());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.HEX;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      Integer integer0 = new Integer(2524);
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      linkedHashSet0.add(integer0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(56);
      // Undeclared exception!
      try { 
        bitmapCodec0.encode(byteBuffer0, linkedHashSet0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      Integer integer0 = new Integer(2524);
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      linkedHashSet0.add(integer0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2524);
      bitmapCodec0.encode(byteBuffer0, linkedHashSet0);
      assertEquals(2208, byteBuffer0.remaining());
      assertEquals("java.nio.HeapByteBuffer[pos=316 lim=2524 cap=2524]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.HEX;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      Integer integer0 = new Integer((-262));
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      linkedHashSet0.add(integer0);
      // Undeclared exception!
      try { 
        bitmapCodec0.encode((ByteBuffer) null, linkedHashSet0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -32 out of bounds for length 8
         //
         verifyException("org.chiknrice.iso.codec.BitmapCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.HEX;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(32);
      // Undeclared exception!
      try { 
        bitmapCodec0.decode(byteBuffer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid hex char \u0000
         //
         verifyException("org.chiknrice.iso.util.Hex", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(3320);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type1 = BitmapCodec.Bitmap.Type.BINARY;
      BitmapCodec bitmapCodec1 = new BitmapCodec(bitmapCodec_Bitmap_Type1);
      BitmapCodec.Bitmap bitmapCodec_Bitmap1 = bitmapCodec1.decode(byteBuffer0);
      boolean boolean0 = bitmapCodec_Bitmap1.equals(bitmapCodec_Bitmap0);
      assertEquals(10, byteBuffer0.position());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      byte[] byteArray0 = new byte[4];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      boolean boolean0 = bitmapCodec_Bitmap0.equals(bitmapCodec_Bitmap0);
      assertEquals(2, byteBuffer0.remaining());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(3316);
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.BINARY;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      boolean boolean0 = bitmapCodec_Bitmap0.equals((Object) null);
      assertEquals("java.nio.HeapByteBuffer[pos=8 lim=3316 cap=3316]", byteBuffer0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(17);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      boolean boolean0 = bitmapCodec_Bitmap0.equals(treeSet0);
      assertEquals(2, byteBuffer0.position());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(27);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      boolean boolean0 = bitmapCodec_Bitmap0.isControlBit((byte)25);
      assertEquals(2, byteBuffer0.position());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      byte[] byteArray0 = new byte[6];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      boolean boolean0 = bitmapCodec_Bitmap0.isControlBit((byte) (-47));
      assertEquals(2, byteBuffer0.position());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(17);
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      boolean boolean0 = bitmapCodec_Bitmap0.isControlBit(1);
      assertEquals(15, byteBuffer0.remaining());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.BINARY;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2166);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      boolean boolean0 = bitmapCodec_Bitmap0.isControlBit((-1));
      assertEquals("java.nio.HeapByteBuffer[pos=8 lim=2166 cap=2166]", byteBuffer0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.BINARY;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(26);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      boolean boolean0 = bitmapCodec_Bitmap0.isControlBit(1);
      assertEquals(8, byteBuffer0.position());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(17);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      boolean boolean0 = bitmapCodec_Bitmap0.isControlBit(17);
      assertEquals(15, byteBuffer0.remaining());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)53;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      bitmapCodec_Bitmap0.toString();
      assertEquals(2, byteBuffer0.position());
      assertEquals(4, byteBuffer0.remaining());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(24);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      boolean boolean0 = bitmapCodec_Bitmap0.isSet(24);
      assertEquals(2, byteBuffer0.position());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.BINARY;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2166);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      boolean boolean0 = bitmapCodec0.equals(bitmapCodec_Bitmap0);
      assertEquals(2158, byteBuffer0.remaining());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.BINARY;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      BitmapCodec bitmapCodec1 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      boolean boolean0 = bitmapCodec1.equals(bitmapCodec0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.BINARY;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      boolean boolean0 = bitmapCodec0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      boolean boolean0 = bitmapCodec0.equals(bitmapCodec0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.HEX;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      // Undeclared exception!
      try { 
        bitmapCodec0.encode((ByteBuffer) null, linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.chiknrice.iso.codec.BitmapCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(64);
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Integer integer0 = Integer.getInteger("V75^Rk)d", 17);
      linkedHashSet0.add(integer0);
      Integer integer1 = new Integer(64);
      linkedHashSet0.add(integer1);
      // Undeclared exception!
      try { 
        bitmapCodec0.encode(byteBuffer0, linkedHashSet0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Extension bit should not be set
         //
         verifyException("org.chiknrice.iso.codec.BitmapCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(17);
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Integer integer0 = new Integer(17);
      linkedHashSet0.add(integer0);
      // Undeclared exception!
      try { 
        bitmapCodec0.encode(byteBuffer0, linkedHashSet0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Extension bit should not be set
         //
         verifyException("org.chiknrice.iso.codec.BitmapCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.BINARY;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      TreeSet<Integer> treeSet0 = new TreeSet<Integer>();
      // Undeclared exception!
      try { 
        bitmapCodec0.encode((ByteBuffer) null, treeSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.chiknrice.iso.codec.BitmapCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-47);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      bitmapCodec0.decode(byteBuffer0);
      assertEquals(3, byteBuffer0.remaining());
      assertEquals("java.nio.HeapByteBuffer[pos=3 lim=6 cap=6]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(3320);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      BitmapCodec.Bitmap bitmapCodec_Bitmap1 = bitmapCodec0.decode(byteBuffer0);
      boolean boolean0 = bitmapCodec_Bitmap1.equals(bitmapCodec_Bitmap0);
      assertEquals(3316, byteBuffer0.remaining());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.HEX;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)53;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        bitmapCodec0.decode(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.BINARY;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-50);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        bitmapCodec0.decode(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      // Undeclared exception!
      try { 
        bitmapCodec0.decode((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.chiknrice.iso.codec.BitmapCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.COMPRESSED;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      bitmapCodec0.hashCode();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.BINARY;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2166);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      bitmapCodec_Bitmap0.unSet(32);
      assertEquals(2158, byteBuffer0.remaining());
      assertEquals("java.nio.HeapByteBuffer[pos=8 lim=2166 cap=2166]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BitmapCodec.Bitmap.Type bitmapCodec_Bitmap_Type0 = BitmapCodec.Bitmap.Type.BINARY;
      BitmapCodec bitmapCodec0 = new BitmapCodec(bitmapCodec_Bitmap_Type0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(48);
      BitmapCodec.Bitmap bitmapCodec_Bitmap0 = bitmapCodec0.decode(byteBuffer0);
      bitmapCodec_Bitmap0.set(48);
      bitmapCodec_Bitmap0.set(48);
      assertEquals("java.nio.DirectByteBuffer[pos=8 lim=48 cap=48]", byteBuffer0.toString());
      assertEquals(40, byteBuffer0.remaining());
  }
}
