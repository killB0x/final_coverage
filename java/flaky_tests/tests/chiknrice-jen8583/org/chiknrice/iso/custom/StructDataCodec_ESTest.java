/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 01:42:31 GMT 2022
 */

package org.chiknrice.iso.custom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.chiknrice.iso.custom.StructDataCodec;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StructDataCodec_ESTest extends StructDataCodec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StructDataCodec structDataCodec0 = new StructDataCodec();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)55;
      // Undeclared exception!
      try { 
        structDataCodec0.decode(byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // For input string: \"\u0000\u0000\u0000\u0000\u0000\u0000\"
         //
         verifyException("org.chiknrice.iso.custom.StructDataCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StructDataCodec structDataCodec0 = new StructDataCodec();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      byte[] byteArray0 = structDataCodec0.encode((Map<String, String>) hashMap0);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StructDataCodec structDataCodec0 = new StructDataCodec();
      // Undeclared exception!
      try { 
        structDataCodec0.encode((Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.chiknrice.iso.custom.StructDataCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StructDataCodec structDataCodec0 = new StructDataCodec();
      // Undeclared exception!
      try { 
        structDataCodec0.decode((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StructDataCodec structDataCodec0 = new StructDataCodec();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("", "org.chiknrice.iso.custom.StructDataCodec");
      byte[] byteArray0 = structDataCodec0.encode((Map<String, String>) hashMap0);
      Map<String, String> map0 = structDataCodec0.decode(byteArray0);
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StructDataCodec structDataCodec0 = new StructDataCodec();
      byte[] byteArray0 = new byte[0];
      Map<String, String> map0 = structDataCodec0.decode(byteArray0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StructDataCodec structDataCodec0 = new StructDataCodec();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      structDataCodec0.configure(hashMap0);
      assertTrue(hashMap0.isEmpty());
  }
}
