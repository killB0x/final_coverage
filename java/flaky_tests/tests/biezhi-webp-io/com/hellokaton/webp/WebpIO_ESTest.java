/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 04:29:51 GMT 2022
 */

package com.hellokaton.webp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.hellokaton.webp.WebpIO;
import java.io.File;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WebpIO_ESTest extends WebpIO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("cwebp_tmp");
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, "@^p=");
      assertTrue(boolean0);
      
      WebpIO webpIO0 = null;
      try {
        webpIO0 = new WebpIO();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.FileNotFoundException
         //
         verifyException("com.hellokaton.webp.WebpIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          WebpIO webpIO0 = new WebpIO();
          assertNotNull(webpIO0);
          
          boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
          assertFalse(boolean0);
          
          MockFile mockFile0 = new MockFile("W\"c*#G6z.gif");
          assertNotNull(mockFile0);
          
          File file0 = MockFile.createTempFile("W\"c*#G6z.gif", "com.hellokaton.webp.WebpIOException", (File) mockFile0);
          assertFalse(file0.equals((Object)mockFile0));
          assertNotSame(mockFile0, file0);
          assertNotSame(file0, mockFile0);
          assertNotNull(file0);
          assertFalse(mockFile0.isFile());
          assertEquals("W\"c*#G6z.gif", mockFile0.toString());
          assertTrue(mockFile0.canExecute());
          assertFalse(mockFile0.isAbsolute());
          assertEquals(0L, mockFile0.length());
          assertTrue(mockFile0.exists());
          assertEquals("W\"c*#G6z.gif", mockFile0.getName());
          assertEquals(0L, mockFile0.getTotalSpace());
          assertTrue(mockFile0.canRead());
          assertEquals(1392409281320L, mockFile0.lastModified());
          assertTrue(mockFile0.canWrite());
          assertFalse(mockFile0.isHidden());
          assertEquals(0L, mockFile0.getUsableSpace());
          assertEquals(0L, mockFile0.getFreeSpace());
          assertTrue(mockFile0.isDirectory());
          assertNull(mockFile0.getParent());
          assertTrue(file0.isAbsolute());
          assertTrue(file0.canExecute());
          assertEquals("/home/user/W\"c*#G6z.gif/W\"c*#G6z.gif0com.hellokaton.webp.WebpIOException", file0.toString());
          assertTrue(file0.canRead());
          assertTrue(file0.canWrite());
          assertTrue(file0.isFile());
          assertEquals(1392409281320L, file0.lastModified());
          assertEquals(0L, file0.getTotalSpace());
          assertTrue(file0.exists());
          assertEquals(0L, file0.length());
          assertFalse(file0.isDirectory());
          assertEquals(0L, file0.getFreeSpace());
          assertEquals("W\"c*#G6z.gif0com.hellokaton.webp.WebpIOException", file0.getName());
          assertEquals("/home/user/W\"c*#G6z.gif", file0.getParent());
          assertFalse(file0.isHidden());
          assertEquals(0L, file0.getUsableSpace());
          
          // Undeclared exception!
          try { 
            webpIO0.toWEBP((File) mockFile0, (File) mockFile0);
            fail("Expecting exception: RuntimeException");
          
          } catch(RuntimeException e) {
             //
             // org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.SecurityException: Security manager blocks (\"java.io.FilePermission\" \"<<ALL FILES>>\" \"execute\")
             // java.base/java.lang.Thread.getStackTrace(Thread.java:1602)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.base/java.lang.SecurityManager.checkExec(SecurityManager.java:572)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1096)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1071)
             // com.hellokaton.webp.WebpIO.executeCommand(WebpIO.java:136)
             // com.hellokaton.webp.WebpIO.toWEBP(WebpIO.java:119)
             // jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
             // java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.base/java.lang.reflect.Method.invoke(Method.java:566)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
             // java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
             // java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
             // java.base/java.lang.Thread.run(Thread.java:829)
             //
             verifyException("com.hellokaton.webp.WebpIO", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          WebpIO webpIO0 = new WebpIO("Y3[Ay(ghL#$`");
          assertNotNull(webpIO0);
          
          MockFile mockFile0 = new MockFile("}n?5yM^^..gif");
          assertNotNull(mockFile0);
          
          // Undeclared exception!
          try { 
            webpIO0.toNormalImage((File) mockFile0, (File) mockFile0);
            fail("Expecting exception: RuntimeException");
          
          } catch(RuntimeException e) {
             //
             // java.lang.SecurityException: Security manager blocks (\"java.io.FilePermission\" \"<<ALL FILES>>\" \"execute\")
             // java.base/java.lang.Thread.getStackTrace(Thread.java:1602)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.base/java.lang.SecurityManager.checkExec(SecurityManager.java:572)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1096)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1071)
             // com.hellokaton.webp.WebpIO.executeCommand(WebpIO.java:136)
             // com.hellokaton.webp.WebpIO.toNormalImage(WebpIO.java:97)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
             // java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.base/java.lang.reflect.Method.invoke(Method.java:566)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
             // java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
             // java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
             // java.base/java.lang.Thread.run(Thread.java:829)
             //
             verifyException("com.hellokaton.webp.WebpIO", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          WebpIO webpIO0 = WebpIO.create();
          assertNotNull(webpIO0);
          
          // Undeclared exception!
          try { 
            webpIO0.toWEBP("09\"+)~4$W[.gif", "linux_");
            fail("Expecting exception: RuntimeException");
          
          } catch(RuntimeException e) {
             //
             // org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.SecurityException: Security manager blocks (\"java.io.FilePermission\" \"<<ALL FILES>>\" \"execute\")
             // java.base/java.lang.Thread.getStackTrace(Thread.java:1602)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.base/java.lang.SecurityManager.checkExec(SecurityManager.java:572)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1096)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1071)
             // com.hellokaton.webp.WebpIO.executeCommand(WebpIO.java:136)
             // com.hellokaton.webp.WebpIO.toWEBP(WebpIO.java:119)
             // com.hellokaton.webp.WebpIO.toWEBP(WebpIO.java:107)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
             // java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.base/java.lang.reflect.Method.invoke(Method.java:566)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
             // java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
             // java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
             // java.base/java.lang.Thread.run(Thread.java:829)
             //
             verifyException("com.hellokaton.webp.WebpIO", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          WebpIO webpIO0 = new WebpIO();
          assertNotNull(webpIO0);
          
          MockFile mockFile0 = new MockFile("0P\"So");
          assertNotNull(mockFile0);
          
          // Undeclared exception!
          try { 
            webpIO0.toWEBP(".gif", "");
            fail("Expecting exception: RuntimeException");
          
          } catch(RuntimeException e) {
             //
             // org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.SecurityException: Security manager blocks (\"java.io.FilePermission\" \"<<ALL FILES>>\" \"execute\")
             // java.base/java.lang.Thread.getStackTrace(Thread.java:1602)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.base/java.lang.SecurityManager.checkExec(SecurityManager.java:572)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1096)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1071)
             // com.hellokaton.webp.WebpIO.executeCommand(WebpIO.java:136)
             // com.hellokaton.webp.WebpIO.toWEBP(WebpIO.java:119)
             // com.hellokaton.webp.WebpIO.toWEBP(WebpIO.java:107)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
             // java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.base/java.lang.reflect.Method.invoke(Method.java:566)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
             // java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
             // java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
             // java.base/java.lang.Thread.run(Thread.java:829)
             //
             verifyException("com.hellokaton.webp.WebpIO", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WebpIO webpIO0 = WebpIO.create();
      assertNotNull(webpIO0);
      
      webpIO0.close();
      webpIO0.close();
      webpIO0.close();
      webpIO0.close();
      try { 
        MockURI.URI("-K^B[kvW0tG");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 2: -K^B[kvW0tG
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WebpIO webpIO0 = WebpIO.create();
      assertNotNull(webpIO0);
      
      WebpIO webpIO1 = WebpIO.create("");
      assertFalse(webpIO1.equals((Object)webpIO0));
      assertNotSame(webpIO1, webpIO0);
      assertNotNull(webpIO1);
      
      String string0 = "o\\ulYA7D$E{yv7Sb]";
      webpIO0.close();
      assertFalse(webpIO0.equals((Object)webpIO1));
      assertNotSame(webpIO0, webpIO1);
      
      WebpIO webpIO2 = null;
      try {
        webpIO2 = new WebpIO(string0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("com.hellokaton.webp.WebpIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WebpIO webpIO0 = new WebpIO();
      assertNotNull(webpIO0);
      
      // Undeclared exception!
      try { 
        webpIO0.toNormalImage((File) null, (File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.hellokaton.webp.WebpIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WebpIO webpIO0 = WebpIO.create();
      assertNotNull(webpIO0);
      
      // Undeclared exception!
      try { 
        webpIO0.toWEBP((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WebpIO webpIO0 = WebpIO.create();
      assertNotNull(webpIO0);
      
      WebpIO webpIO1 = WebpIO.create("com.hellokaton.webp.WebpIOException");
      assertFalse(webpIO1.equals((Object)webpIO0));
      assertNotSame(webpIO1, webpIO0);
      assertNotNull(webpIO1);
      
      // Undeclared exception!
      try { 
        WebpIO.create("PNQ7Dq`\"w");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("com.hellokaton.webp.WebpIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          WebpIO webpIO0 = WebpIO.create("");
          assertNotNull(webpIO0);
          
          MockFile mockFile0 = new MockFile("", "");
          assertNotNull(mockFile0);
          
          // Undeclared exception!
          try { 
            webpIO0.toNormalImage((File) mockFile0, (File) mockFile0);
            fail("Expecting exception: RuntimeException");
          
          } catch(RuntimeException e) {
             //
             // java.lang.SecurityException: Security manager blocks (\"java.io.FilePermission\" \"/cwebp_tmp/dwebp\" \"execute\")
             // java.base/java.lang.Thread.getStackTrace(Thread.java:1602)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.base/java.lang.SecurityManager.checkExec(SecurityManager.java:569)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1096)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1071)
             // com.hellokaton.webp.WebpIO.executeCommand(WebpIO.java:136)
             // com.hellokaton.webp.WebpIO.toNormalImage(WebpIO.java:97)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
             // java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.base/java.lang.reflect.Method.invoke(Method.java:566)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
             // java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
             // java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
             // java.base/java.lang.Thread.run(Thread.java:829)
             //
             verifyException("com.hellokaton.webp.WebpIO", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WebpIO webpIO0 = new WebpIO();
      assertNotNull(webpIO0);
      
      webpIO0.close();
      // Undeclared exception!
      try { 
        WebpIO.create();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("com.hellokaton.webp.WebpIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WebpIO webpIO0 = WebpIO.create();
      assertNotNull(webpIO0);
      
      WebpIO webpIO1 = WebpIO.create();
      assertFalse(webpIO1.equals((Object)webpIO0));
      assertNotSame(webpIO1, webpIO0);
      assertNotNull(webpIO1);
      
      // Undeclared exception!
      try { 
        WebpIO.create();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("com.hellokaton.webp.WebpIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          WebpIO webpIO0 = WebpIO.create();
          assertNotNull(webpIO0);
          
          webpIO0.close();
          // Undeclared exception!
          try { 
            webpIO0.toNormalImage("0Bs~N)", "0Bs~N)");
            fail("Expecting exception: RuntimeException");
          
          } catch(RuntimeException e) {
             //
             // java.lang.SecurityException: Security manager blocks (\"java.io.FilePermission\" \"<<ALL FILES>>\" \"execute\")
             // java.base/java.lang.Thread.getStackTrace(Thread.java:1602)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.base/java.lang.SecurityManager.checkExec(SecurityManager.java:572)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1096)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1071)
             // com.hellokaton.webp.WebpIO.executeCommand(WebpIO.java:136)
             // com.hellokaton.webp.WebpIO.toNormalImage(WebpIO.java:97)
             // com.hellokaton.webp.WebpIO.toNormalImage(WebpIO.java:86)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
             // java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.base/java.lang.reflect.Method.invoke(Method.java:566)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
             // java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
             // java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
             // java.base/java.lang.Thread.run(Thread.java:829)
             //
             verifyException("com.hellokaton.webp.WebpIO", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          WebpIO webpIO0 = new WebpIO();
          assertNotNull(webpIO0);
          
          String string0 = "";
          // Undeclared exception!
          try { 
            webpIO0.toNormalImage("", "");
            fail("Expecting exception: RuntimeException");
          
          } catch(RuntimeException e) {
             //
             // java.lang.SecurityException: Security manager blocks (\"java.io.FilePermission\" \"<<ALL FILES>>\" \"execute\")
             // java.base/java.lang.Thread.getStackTrace(Thread.java:1602)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.base/java.lang.SecurityManager.checkExec(SecurityManager.java:572)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1096)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1071)
             // com.hellokaton.webp.WebpIO.executeCommand(WebpIO.java:136)
             // com.hellokaton.webp.WebpIO.toNormalImage(WebpIO.java:97)
             // com.hellokaton.webp.WebpIO.toNormalImage(WebpIO.java:86)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
             // java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.base/java.lang.reflect.Method.invoke(Method.java:566)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
             // java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
             // java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
             // java.base/java.lang.Thread.run(Thread.java:829)
             //
             verifyException("com.hellokaton.webp.WebpIO", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          String string0 = "LnP,O>~";
          WebpIO webpIO0 = new WebpIO("LnP,O>~");
          assertNotNull(webpIO0);
          
          String string1 = "";
          String string2 = "\n";
          // Undeclared exception!
          try { 
            webpIO0.toWEBP("", "\n");
            fail("Expecting exception: RuntimeException");
          
          } catch(RuntimeException e) {
             //
             // org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.SecurityException: Security manager blocks (\"java.io.FilePermission\" \"<<ALL FILES>>\" \"execute\")
             // java.base/java.lang.Thread.getStackTrace(Thread.java:1602)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.base/java.lang.SecurityManager.checkExec(SecurityManager.java:572)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1096)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1071)
             // com.hellokaton.webp.WebpIO.executeCommand(WebpIO.java:136)
             // com.hellokaton.webp.WebpIO.toWEBP(WebpIO.java:119)
             // com.hellokaton.webp.WebpIO.toWEBP(WebpIO.java:107)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
             // java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.base/java.lang.reflect.Method.invoke(Method.java:566)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
             // java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
             // java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
             // java.base/java.lang.Thread.run(Thread.java:829)
             //
             verifyException("com.hellokaton.webp.WebpIO", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      WebpIO webpIO0 = WebpIO.create();
      assertNotNull(webpIO0);
      
      WebpIO webpIO1 = WebpIO.create();
      assertFalse(webpIO1.equals((Object)webpIO0));
      assertNotSame(webpIO1, webpIO0);
      assertNotNull(webpIO1);
      
      URI uRI0 = MockURI.aFTPURI;
      assertNotNull(uRI0);
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawUserInfo());
      assertEquals("ftp", uRI0.getScheme());
      assertEquals("ftp://foo.bar", uRI0.toString());
      assertEquals("", uRI0.getRawPath());
      assertNull(uRI0.getRawQuery());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertEquals((-1), uRI0.getPort());
      
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      WebpIO webpIO0 = new WebpIO();
      assertNotNull(webpIO0);
      
      WebpIO webpIO1 = WebpIO.create();
      assertFalse(webpIO1.equals((Object)webpIO0));
      assertNotSame(webpIO1, webpIO0);
      assertNotNull(webpIO1);
      
      try { 
        MockURI.URI("", "", "", "", "");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://?#
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      WebpIO webpIO0 = WebpIO.create();
      assertNotNull(webpIO0);
      
      // Undeclared exception!
      try { 
        webpIO0.toNormalImage((String) null, "mac");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          WebpIO webpIO0 = WebpIO.create();
          assertNotNull(webpIO0);
          
          // Undeclared exception!
          try { 
            webpIO0.toNormalImage("M|f4ps_:0lPTh-", "M|f4ps_:0lPTh-");
            fail("Expecting exception: RuntimeException");
          
          } catch(RuntimeException e) {
             //
             // java.lang.SecurityException: Security manager blocks (\"java.io.FilePermission\" \"<<ALL FILES>>\" \"execute\")
             // java.base/java.lang.Thread.getStackTrace(Thread.java:1602)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.base/java.lang.SecurityManager.checkExec(SecurityManager.java:572)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1096)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1071)
             // com.hellokaton.webp.WebpIO.executeCommand(WebpIO.java:136)
             // com.hellokaton.webp.WebpIO.toNormalImage(WebpIO.java:97)
             // com.hellokaton.webp.WebpIO.toNormalImage(WebpIO.java:86)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
             // java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.base/java.lang.reflect.Method.invoke(Method.java:566)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
             // java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
             // java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
             // java.base/java.lang.Thread.run(Thread.java:829)
             //
             verifyException("com.hellokaton.webp.WebpIO", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      WebpIO webpIO0 = new WebpIO();
      assertNotNull(webpIO0);
      
      String string0 = "FLL+q`^Q";
      WebpIO webpIO1 = WebpIO.create("FLL+q`^Q");
      assertFalse(webpIO1.equals((Object)webpIO0));
      assertNotSame(webpIO1, webpIO0);
      assertNotNull(webpIO1);
      
      String string1 = "";
      String string2 = null;
      // Undeclared exception!
      try { 
        webpIO0.toNormalImage("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      WebpIO webpIO0 = new WebpIO();
      assertNotNull(webpIO0);
      
      // Undeclared exception!
      try { 
        webpIO0.toWEBP((File) null, (File) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("com.hellokaton.webp.WebpIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          WebpIO webpIO0 = WebpIO.create();
          assertNotNull(webpIO0);
          
          // Undeclared exception!
          try { 
            webpIO0.toWEBP("o*lA7D8$E{~vyv7Sb]", "o*lA7D8$E{~vyv7Sb]");
            fail("Expecting exception: RuntimeException");
          
          } catch(RuntimeException e) {
             //
             // org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.SecurityException: Security manager blocks (\"java.io.FilePermission\" \"<<ALL FILES>>\" \"execute\")
             // java.base/java.lang.Thread.getStackTrace(Thread.java:1602)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.base/java.lang.SecurityManager.checkExec(SecurityManager.java:572)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1096)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1071)
             // com.hellokaton.webp.WebpIO.executeCommand(WebpIO.java:136)
             // com.hellokaton.webp.WebpIO.toWEBP(WebpIO.java:119)
             // com.hellokaton.webp.WebpIO.toWEBP(WebpIO.java:107)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
             // java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.base/java.lang.reflect.Method.invoke(Method.java:566)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
             // java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
             // java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
             // java.base/java.lang.Thread.run(Thread.java:829)
             //
             verifyException("com.hellokaton.webp.WebpIO", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          WebpIO webpIO0 = new WebpIO();
          MockFile mockFile0 = new MockFile("0P\"So");
          File file0 = MockFile.createTempFile("com.hellokaton.webp.WebpIOException", (String) null, (File) mockFile0);
          // Undeclared exception!
          try { 
            webpIO0.toWEBP(file0, (File) mockFile0);
            fail("Expecting exception: RuntimeException");
          
          } catch(RuntimeException e) {
             //
             // org.evosuite.runtime.mock.java.lang.MockThrowable: java.lang.SecurityException: Security manager blocks (\"java.io.FilePermission\" \"<<ALL FILES>>\" \"execute\")
             // java.base/java.lang.Thread.getStackTrace(Thread.java:1602)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.base/java.lang.SecurityManager.checkExec(SecurityManager.java:572)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1096)
             // java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1071)
             // com.hellokaton.webp.WebpIO.executeCommand(WebpIO.java:136)
             // com.hellokaton.webp.WebpIO.toWEBP(WebpIO.java:119)
             // jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
             // java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.base/java.lang.reflect.Method.invoke(Method.java:566)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
             // java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
             // java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
             // java.base/java.lang.Thread.run(Thread.java:829)
             //
             verifyException("com.hellokaton.webp.WebpIO", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      WebpIO webpIO0 = WebpIO.create("F#");
      assertNotNull(webpIO0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      WebpIO webpIO0 = new WebpIO("c'U'hRlY=6'");
      try { 
        MockURI.URI("c'U'hRlY=6'", "c'U'hRlY=6'", "aSaxg");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 1: c'U'hRlY=6':c'U'hRlY=6'#aSaxg
         //
         verifyException("java.net.URI$Parser", e);
      }
  }
}
