/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 16:02:40 GMT 2022
 */

package com.github.paulcwarren.ginkgo4j.maven;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.paulcwarren.ginkgo4j.maven.JUnitRunListener;
import java.io.Serializable;
import java.lang.annotation.Annotation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.Description;
import org.junit.runner.Result;
import org.junit.runner.RunWith;
import org.junit.runner.notification.Failure;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JUnitRunListener_ESTest extends JUnitRunListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JUnitRunListener jUnitRunListener0 = new JUnitRunListener();
      Class<Description> class0 = Description.class;
      Description description0 = Description.createSuiteDescription(class0);
      jUnitRunListener0.testRunStarted(description0);
      jUnitRunListener0.testIgnored(description0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JUnitRunListener jUnitRunListener0 = new JUnitRunListener();
      Class<Description> class0 = Description.class;
      Description description0 = Description.createSuiteDescription(class0);
      jUnitRunListener0.testRunStarted(description0);
      jUnitRunListener0.testStarted(description0);
      MockThrowable mockThrowable0 = new MockThrowable();
      Failure failure0 = new Failure(description0, mockThrowable0);
      jUnitRunListener0.testFailure(failure0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JUnitRunListener jUnitRunListener0 = new JUnitRunListener();
      Class<Description> class0 = Description.class;
      Description description0 = Description.createSuiteDescription(class0);
      jUnitRunListener0.testRunStarted(description0);
      Description description1 = Description.createTestDescription("", (String) null, (Serializable) description0);
      MockThrowable mockThrowable0 = new MockThrowable();
      Failure failure0 = new Failure(description1, mockThrowable0);
      // Undeclared exception!
      try { 
        jUnitRunListener0.testFailure(failure0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.io.PrintStream cannot be cast to class com.github.paulcwarren.ginkgo4j.maven.ByteArrayPrintStream (java.io.PrintStream is in module java.base of loader 'bootstrap'; com.github.paulcwarren.ginkgo4j.maven.ByteArrayPrintStream is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @338080a1)
         //
         verifyException("com.github.paulcwarren.ginkgo4j.maven.JUnitRunListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JUnitRunListener jUnitRunListener0 = new JUnitRunListener();
      Annotation[] annotationArray0 = new Annotation[10];
      Description description0 = Description.createTestDescription("\u001B[30m", "\u001B[30m", annotationArray0);
      jUnitRunListener0.testRunStarted(description0);
      jUnitRunListener0.testStarted(description0);
      jUnitRunListener0.testFinished(description0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JUnitRunListener jUnitRunListener0 = new JUnitRunListener();
      Annotation[] annotationArray0 = new Annotation[10];
      Description description0 = Description.createTestDescription("\u001B[30m", "\u001B[30m", annotationArray0);
      jUnitRunListener0.testRunStarted(description0);
      jUnitRunListener0.testStarted(description0);
      MockThrowable mockThrowable0 = new MockThrowable();
      Failure failure0 = new Failure(description0, mockThrowable0);
      jUnitRunListener0.testAssumptionFailure(failure0);
      jUnitRunListener0.testFinished(description0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JUnitRunListener jUnitRunListener0 = new JUnitRunListener();
      Annotation[] annotationArray0 = new Annotation[10];
      Description description0 = Description.createTestDescription("\u001B[30m", "\u001B[30m", annotationArray0);
      // Undeclared exception!
      try { 
        jUnitRunListener0.testFinished(description0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.paulcwarren.ginkgo4j.maven.JUnitRunListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JUnitRunListener jUnitRunListener0 = new JUnitRunListener();
      Class<Description> class0 = Description.class;
      Description description0 = Description.createSuiteDescription(class0);
      jUnitRunListener0.testFinished(description0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JUnitRunListener jUnitRunListener0 = new JUnitRunListener();
      Description description0 = Description.EMPTY;
      // Undeclared exception!
      try { 
        jUnitRunListener0.testIgnored(description0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.paulcwarren.ginkgo4j.maven.JUnitRunListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JUnitRunListener jUnitRunListener0 = new JUnitRunListener();
      Annotation[] annotationArray0 = new Annotation[10];
      Description description0 = Description.createTestDescription("\u001B[30m", "\u001B[30m", annotationArray0);
      // Undeclared exception!
      try { 
        jUnitRunListener0.testStarted(description0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.io.PrintStream cannot be cast to class com.github.paulcwarren.ginkgo4j.maven.ThreadPrintStream (java.io.PrintStream is in module java.base of loader 'bootstrap'; com.github.paulcwarren.ginkgo4j.maven.ThreadPrintStream is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @338080a1)
         //
         verifyException("com.github.paulcwarren.ginkgo4j.maven.JUnitRunListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JUnitRunListener jUnitRunListener0 = new JUnitRunListener();
      Result result0 = new Result();
      jUnitRunListener0.testRunFinished(result0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JUnitRunListener jUnitRunListener0 = new JUnitRunListener();
      Class<Description> class0 = Description.class;
      Description description0 = Description.createSuiteDescription(class0);
      MockThrowable mockThrowable0 = new MockThrowable("\u001B[37m");
      Failure failure0 = new Failure(description0, mockThrowable0);
      // Undeclared exception!
      try { 
        jUnitRunListener0.testFailure(failure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.paulcwarren.ginkgo4j.maven.JUnitRunListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JUnitRunListener jUnitRunListener0 = new JUnitRunListener();
      Annotation[] annotationArray0 = new Annotation[10];
      Description description0 = Description.createTestDescription("\u001B[30m", "\u001B[30m", annotationArray0);
      jUnitRunListener0.testRunStarted(description0);
      MockThrowable mockThrowable0 = new MockThrowable();
      Failure failure0 = new Failure(description0, mockThrowable0);
      // Undeclared exception!
      try { 
        jUnitRunListener0.testAssumptionFailure(failure0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.io.PrintStream cannot be cast to class com.github.paulcwarren.ginkgo4j.maven.ByteArrayPrintStream (java.io.PrintStream is in module java.base of loader 'bootstrap'; com.github.paulcwarren.ginkgo4j.maven.ByteArrayPrintStream is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @338080a1)
         //
         verifyException("com.github.paulcwarren.ginkgo4j.maven.JUnitRunListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JUnitRunListener jUnitRunListener0 = new JUnitRunListener();
      Annotation[] annotationArray0 = new Annotation[10];
      Description description0 = Description.createTestDescription("\u001B[30m", "\u001B[30m", annotationArray0);
      MockThrowable mockThrowable0 = new MockThrowable();
      Failure failure0 = new Failure(description0, mockThrowable0);
      // Undeclared exception!
      try { 
        jUnitRunListener0.testAssumptionFailure(failure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.paulcwarren.ginkgo4j.maven.JUnitRunListener", e);
      }
  }
}
