/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 16:09:01 GMT 2022
 */

package com.github.paulcwarren.ginkgo4j.maven;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.paulcwarren.ginkgo4j.maven.ByteArrayPrintStream;
import java.io.ByteArrayOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteArrayPrintStream_ESTest extends ByteArrayPrintStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ByteArrayPrintStream byteArrayPrintStream0 = new ByteArrayPrintStream(byteArrayOutputStream0);
      byteArrayPrintStream0.append('a');
      ByteArrayOutputStream byteArrayOutputStream1 = byteArrayPrintStream0.getByteArrayOutputStream();
      assertSame(byteArrayOutputStream0, byteArrayOutputStream1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ByteArrayPrintStream byteArrayPrintStream0 = null;
      try {
        byteArrayPrintStream0 = new ByteArrayPrintStream((ByteArrayOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ByteArrayPrintStream byteArrayPrintStream0 = new ByteArrayPrintStream(byteArrayOutputStream0);
      ByteArrayOutputStream byteArrayOutputStream1 = byteArrayPrintStream0.getByteArrayOutputStream();
      assertSame(byteArrayOutputStream1, byteArrayOutputStream0);
  }
}
