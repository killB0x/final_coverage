/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 16:00:01 GMT 2022
 */

package impl.com.github.paulcwarren.ginkgo4j.watch;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import impl.com.github.paulcwarren.ginkgo4j.watch.FileWatcher;
import impl.com.github.paulcwarren.ginkgo4j.watch.FileWatcherListener;
import java.io.File;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileWatcher_ESTest extends FileWatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileWatcherListener[] fileWatcherListenerArray0 = new FileWatcherListener[1];
      // Undeclared exception!
      try { 
        FileWatcher.watch((List<File>) null, fileWatcherListenerArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("impl.com.github.paulcwarren.ginkgo4j.watch.FileWatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileWatcher fileWatcher0 = new FileWatcher();
  }
}
