/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 16:07:40 GMT 2022
 */

package impl.com.github.paulcwarren.ginkgo4j.junit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import impl.com.github.paulcwarren.ginkgo4j.junit.JunitRunnerListener;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.shaded.org.hamcrest.Matcher;
import org.junit.AssumptionViolatedException;
import org.junit.runner.Description;
import org.junit.runner.RunWith;
import org.junit.runner.notification.RunNotifier;
import org.junit.runner.notification.StoppedByUserException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JunitRunnerListener_ESTest extends JunitRunnerListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RunNotifier runNotifier0 = new RunNotifier();
      runNotifier0.pleaseStop();
      HashMap<String, Description> hashMap0 = new HashMap<String, Description>();
      JunitRunnerListener junitRunnerListener0 = new JunitRunnerListener(runNotifier0, hashMap0);
      // Undeclared exception!
      try { 
        junitRunnerListener0.testStarted("+,4z!");
        fail("Expecting exception: StoppedByUserException");
      
      } catch(StoppedByUserException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.junit.runner.notification.RunNotifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RunNotifier runNotifier0 = new RunNotifier();
      JunitRunnerListener junitRunnerListener0 = new JunitRunnerListener(runNotifier0, (Map<String, Description>) null);
      // Undeclared exception!
      try { 
        junitRunnerListener0.testSkipped("jvp");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("impl.com.github.paulcwarren.ginkgo4j.junit.JunitRunnerListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<String, Description> hashMap0 = new HashMap<String, Description>();
      JunitRunnerListener junitRunnerListener0 = new JunitRunnerListener((RunNotifier) null, hashMap0);
      // Undeclared exception!
      try { 
        junitRunnerListener0.testFinished("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("impl.com.github.paulcwarren.ginkgo4j.junit.JunitRunnerListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RunNotifier runNotifier0 = new RunNotifier();
      JunitRunnerListener junitRunnerListener0 = new JunitRunnerListener(runNotifier0, (Map<String, Description>) null);
      // Undeclared exception!
      try { 
        junitRunnerListener0.testFinished("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("impl.com.github.paulcwarren.ginkgo4j.junit.JunitRunnerListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HashMap<String, Description> hashMap0 = new HashMap<String, Description>();
      JunitRunnerListener junitRunnerListener0 = new JunitRunnerListener((RunNotifier) null, hashMap0);
      AssumptionViolatedException assumptionViolatedException0 = new AssumptionViolatedException("");
      MockThrowable mockThrowable0 = new MockThrowable((String) null, assumptionViolatedException0);
      // Undeclared exception!
      try { 
        junitRunnerListener0.testException("", mockThrowable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("impl.com.github.paulcwarren.ginkgo4j.junit.JunitRunnerListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RunNotifier runNotifier0 = new RunNotifier();
      HashMap<String, Description> hashMap0 = new HashMap<String, Description>();
      JunitRunnerListener junitRunnerListener0 = new JunitRunnerListener(runNotifier0, hashMap0);
      Matcher<Object> matcher0 = (Matcher<Object>) mock(Matcher.class, new ViolatedAssumptionAnswer());
      AssumptionViolatedException assumptionViolatedException0 = new AssumptionViolatedException((Object) junitRunnerListener0, matcher0);
      junitRunnerListener0.testException("o7kBsZsJ*^i%N", assumptionViolatedException0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RunNotifier runNotifier0 = new RunNotifier();
      HashMap<String, Description> hashMap0 = new HashMap<String, Description>();
      JunitRunnerListener junitRunnerListener0 = new JunitRunnerListener(runNotifier0, hashMap0);
      junitRunnerListener0.testException((String) null, (Throwable) null);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RunNotifier runNotifier0 = new RunNotifier();
      HashMap<String, Description> hashMap0 = new HashMap<String, Description>();
      JunitRunnerListener junitRunnerListener0 = new JunitRunnerListener(runNotifier0, hashMap0);
      junitRunnerListener0.testFinished("o7kBsZsJ*^i%N");
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RunNotifier runNotifier0 = new RunNotifier();
      HashMap<String, Description> hashMap0 = new HashMap<String, Description>();
      JunitRunnerListener junitRunnerListener0 = new JunitRunnerListener(runNotifier0, hashMap0);
      junitRunnerListener0.testSkipped("");
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      RunNotifier runNotifier0 = new RunNotifier();
      HashMap<String, Description> hashMap0 = new HashMap<String, Description>();
      JunitRunnerListener junitRunnerListener0 = new JunitRunnerListener(runNotifier0, hashMap0);
      junitRunnerListener0.testStarted("sN}_;a_");
  }
}
