/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 16:08:20 GMT 2022
 */

package impl.com.github.paulcwarren.ginkgo4j.runner;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import impl.com.github.paulcwarren.ginkgo4j.chains.ExecutableChain;
import impl.com.github.paulcwarren.ginkgo4j.junit.JunitRunnerListener;
import impl.com.github.paulcwarren.ginkgo4j.runner.SpecRunner;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.Description;
import org.junit.runner.RunWith;
import org.junit.runner.notification.RunNotifier;
import org.junit.runner.notification.StoppedByUserException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SpecRunner_ESTest extends SpecRunner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExecutableChain executableChain0 = new ExecutableChain("impl.com.github.paulcwarren.ginkgo4j.runner.SpecRunner$1");
      SpecRunner specRunner0 = new SpecRunner(executableChain0);
      executableChain0.setIsFocused(true);
      ExecutableChain executableChain1 = specRunner0.getChain();
      assertSame(executableChain1, executableChain0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExecutableChain executableChain0 = new ExecutableChain("impl.com.github.paulcwarren.ginkgo4j.runner.SpecRunner");
      SpecRunner specRunner0 = new SpecRunner(executableChain0);
      ExecutableChain executableChain1 = specRunner0.getChain();
      assertSame(executableChain0, executableChain1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExecutableChain executableChain0 = new ExecutableChain("");
      RunNotifier runNotifier0 = new RunNotifier();
      HashMap<String, Description> hashMap0 = new HashMap<String, Description>();
      JunitRunnerListener junitRunnerListener0 = new JunitRunnerListener(runNotifier0, hashMap0);
      SpecRunner specRunner0 = new SpecRunner(executableChain0, junitRunnerListener0);
      runNotifier0.pleaseStop();
      // Undeclared exception!
      try { 
        specRunner0.run();
        fail("Expecting exception: StoppedByUserException");
      
      } catch(StoppedByUserException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.junit.runner.notification.RunNotifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SpecRunner specRunner0 = new SpecRunner((ExecutableChain) null);
      // Undeclared exception!
      try { 
        specRunner0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("impl.com.github.paulcwarren.ginkgo4j.runner.SpecRunner", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ExecutableChain executableChain0 = new ExecutableChain("impl.com.github.paulcwarren.ginkgo4j.Context");
      SpecRunner specRunner0 = new SpecRunner(executableChain0);
      specRunner0.run();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ExecutableChain executableChain0 = new ExecutableChain("0LZQy;HoSGI]QT<,|xj");
      RunNotifier runNotifier0 = new RunNotifier();
      JunitRunnerListener junitRunnerListener0 = new JunitRunnerListener(runNotifier0, (Map<String, Description>) null);
      SpecRunner specRunner0 = new SpecRunner(executableChain0, junitRunnerListener0);
      // Undeclared exception!
      try { 
        specRunner0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("impl.com.github.paulcwarren.ginkgo4j.junit.JunitRunnerListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SpecRunner specRunner0 = new SpecRunner((ExecutableChain) null);
      ExecutableChain executableChain0 = specRunner0.getChain();
      assertNull(executableChain0);
  }
}
