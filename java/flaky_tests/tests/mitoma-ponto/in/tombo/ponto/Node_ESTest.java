/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 09:09:05 GMT 2022
 */

package in.tombo.ponto;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import in.tombo.ponto.MethodType;
import in.tombo.ponto.Node;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Node node0 = new Node((Node) null, "DOUBLE");
      Node node1 = new Node(node0, "");
      Node node2 = node1.getParent();
      assertNotSame(node1, node2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Node node0 = new Node((Node) null, "!WR3,&jUV<p!lJi ");
      Node node1 = new Node(node0, "!WR3,&jUV<p!lJi ");
      String string0 = node1.getName();
      assertEquals("!WR3,&jUV<p!lJi ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Node node0 = new Node((Node) null, "DOUBLE");
      Node node1 = new Node(node0, "");
      String string0 = node1.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Node node0 = new Node((Node) null, "!WR3,&jUV<p!lJi ");
      node0.addKeyString("]pb[W2hAL?");
      Map<String, MethodType> map0 = node0.getMethods();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Node node0 = new Node((Node) null, (String) null);
      Node node1 = new Node(node0, (String) null);
      String string0 = node1.getFullName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Node node0 = new Node((Node) null, "!WR3,&jUV<p!lJi ");
      Node node1 = new Node(node0, "!WR3,&jUV<p!lJi ");
      List<Node> list0 = node0.getChilds();
      assertTrue(list0.contains(node1));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Node node0 = new Node((Node) null, (String) null);
      Node node1 = new Node(node0, (String) null);
      Node node2 = new Node(node1, (String) null);
      // Undeclared exception!
      try { 
        node2.getFullName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Node node0 = new Node((Node) null, (String) null);
      Node node1 = new Node(node0, (String) null);
      // Undeclared exception!
      try { 
        node0.addKeyString("YOwtX:}Tn`r2|.$2");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Node node0 = new Node((Node) null, "in.tombo.ponto.Node");
      // Undeclared exception!
      try { 
        node0.addKeyString(".");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("in.tombo.ponto.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Node node0 = new Node((Node) null, "%j.*");
      String string0 = node0.getFullName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Node node0 = new Node((Node) null, "%j.*");
      Node node1 = new Node(node0, ";[9cJErz|oZIz'");
      Node node2 = new Node(node1, "_long");
      String string0 = node2.getFullName();
      assertEquals(";[9cJErz|oZIz'._long", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Node node0 = new Node((Node) null, "throw new RuntimeException(\"%s is showuld be true or false.\"); ");
      node0.addKeyString("throw new RuntimeException(\"%s is showuld be true or false.\"); ");
      node0.addKeyString("throw new RuntimeException(\"%s is showuld be true or false.\"); ");
      assertNull(node0.getName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Node node0 = new Node((Node) null, "%j.*");
      node0.addKeyString("REYpXg._long");
      assertNull(node0.getName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Node node0 = new Node((Node) null, "in.tombo.ponto.Node");
      node0.addKeyString("in.tombo.ponto.Node");
      assertNull(node0.getName());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Node node0 = new Node((Node) null, "%j.*");
      Node node1 = new Node(node0, ";[9cJErz|oZIz'");
      node0.addKeyString("%j.*");
      assertNull(node0.getName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Node node0 = new Node((Node) null, "!WR3,&jUV<p!lJi ");
      String string0 = node0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Node node0 = new Node((Node) null, "DOUBLE");
      Node node1 = node0.getParent();
      assertNull(node1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Node node0 = new Node((Node) null, "!WR3,&jUV<p!lJi ");
      List<Node> list0 = node0.getChilds();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Node node0 = new Node((Node) null, "!WR3,&jUV<p!lJi ");
      Map<String, MethodType> map0 = node0.getMethods();
      assertTrue(map0.isEmpty());
  }
}
