/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 04:13:28 GMT 2022
 */

package net.lvsq.jgossip.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.lvsq.jgossip.core.InMemMessageManager;
import net.lvsq.jgossip.model.GossipMember;
import net.lvsq.jgossip.model.GossipState;
import net.lvsq.jgossip.model.RegularMessage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InMemMessageManager_ESTest extends InMemMessageManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InMemMessageManager inMemMessageManager0 = new InMemMessageManager();
      String string0 = "3hR3MMS@=O_";
      RegularMessage regularMessage0 = new RegularMessage();
      regularMessage0.setForwardCount((-17));
      GossipMember gossipMember0 = new GossipMember();
      GossipState gossipState0 = GossipState.DOWN;
      gossipMember0.setState(gossipState0);
      regularMessage0.setCreateTime((-17));
      Integer integer0 = new Integer(0);
      gossipMember0.setPort(integer0);
      regularMessage0.setCreator(gossipMember0);
      regularMessage0.setId("3hR3MMS@=O_");
      inMemMessageManager0.acquire("3hR3MMS@=O_");
      RegularMessage regularMessage1 = inMemMessageManager0.remove("3hR3MMS@=O_");
      assertNull(regularMessage1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InMemMessageManager inMemMessageManager0 = new InMemMessageManager();
      String string0 = "3hR3MMS@=O_";
      RegularMessage regularMessage0 = new RegularMessage();
      regularMessage0.setForwardCount(0);
      GossipMember gossipMember0 = new GossipMember();
      GossipState gossipState0 = GossipState.DOWN;
      gossipMember0.setState(gossipState0);
      regularMessage0.setCreateTime(0);
      Integer integer0 = new Integer(0);
      gossipMember0.setPort(integer0);
      regularMessage0.setCreator(gossipMember0);
      regularMessage0.setId("3hR3MMS@=O_");
      inMemMessageManager0.acquire("3hR3MMS@=O_");
      regularMessage0.setForwardCount(0);
      RegularMessage regularMessage1 = inMemMessageManager0.remove("3hR3MMS@=O_");
      assertNull(regularMessage1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InMemMessageManager inMemMessageManager0 = new InMemMessageManager();
      RegularMessage regularMessage0 = inMemMessageManager0.acquire("rDz._ObL398");
      assertNull(regularMessage0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InMemMessageManager inMemMessageManager0 = new InMemMessageManager();
      Integer integer0 = new Integer((-1));
      GossipState gossipState0 = GossipState.JOIN;
      GossipMember gossipMember0 = new GossipMember("", "", integer0, "", gossipState0);
      Object object0 = new Object();
      RegularMessage regularMessage0 = new RegularMessage(gossipMember0, object0);
      regularMessage0.setId("");
      regularMessage0.setId("net.lvsq.jgossip.core.InMemMessageManager");
      inMemMessageManager0.add(regularMessage0);
      inMemMessageManager0.acquire("");
      inMemMessageManager0.list();
      inMemMessageManager0.acquire("");
      inMemMessageManager0.remove("");
      inMemMessageManager0.contains("<LjN");
      inMemMessageManager0.list();
      inMemMessageManager0.remove("net.lvsq.jgossip.core.InMemMessageManager");
      inMemMessageManager0.list();
      inMemMessageManager0.acquire("");
      boolean boolean0 = inMemMessageManager0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InMemMessageManager inMemMessageManager0 = new InMemMessageManager();
      // Undeclared exception!
      try { 
        inMemMessageManager0.remove((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      InMemMessageManager inMemMessageManager0 = new InMemMessageManager();
      // Undeclared exception!
      try { 
        inMemMessageManager0.contains((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      InMemMessageManager inMemMessageManager0 = new InMemMessageManager();
      // Undeclared exception!
      try { 
        inMemMessageManager0.acquire((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      InMemMessageManager inMemMessageManager0 = new InMemMessageManager();
      RegularMessage regularMessage0 = new RegularMessage();
      // Undeclared exception!
      try { 
        inMemMessageManager0.add(regularMessage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }
}
