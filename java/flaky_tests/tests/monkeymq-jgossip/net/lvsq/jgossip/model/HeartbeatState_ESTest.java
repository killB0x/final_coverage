/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 04:11:26 GMT 2022
 */

package net.lvsq.jgossip.model;

import org.junit.Test;
import static org.junit.Assert.*;
import net.lvsq.jgossip.model.HeartbeatState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HeartbeatState_ESTest extends HeartbeatState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HeartbeatState heartbeatState0 = new HeartbeatState();
      heartbeatState0.setVersion((-1L));
      long long0 = heartbeatState0.getVersion();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HeartbeatState heartbeatState0 = new HeartbeatState();
      heartbeatState0.setHeartbeatTime(0L);
      long long0 = heartbeatState0.getHeartbeatTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HeartbeatState heartbeatState0 = new HeartbeatState();
      heartbeatState0.setHeartbeatTime((-1L));
      long long0 = heartbeatState0.getHeartbeatTime();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HeartbeatState heartbeatState0 = new HeartbeatState();
      String string0 = heartbeatState0.toString();
      assertEquals("HeartbeatState{heartbeatTime=1392409281320, version=0}", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HeartbeatState heartbeatState0 = new HeartbeatState();
      long long0 = heartbeatState0.getHeartbeatTime();
      assertEquals(1392409281320L, long0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HeartbeatState heartbeatState0 = new HeartbeatState();
      long long0 = heartbeatState0.getVersion();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HeartbeatState heartbeatState0 = new HeartbeatState();
      heartbeatState0.updateVersion();
      long long0 = heartbeatState0.getVersion();
      assertEquals(1L, long0);
  }
}
