/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 04:09:48 GMT 2022
 */

package net.lvsq.jgossip.model;

import org.junit.Test;
import static org.junit.Assert.*;
import net.lvsq.jgossip.model.GossipMember;
import net.lvsq.jgossip.model.GossipState;
import net.lvsq.jgossip.model.RegularMessage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RegularMessage_ESTest extends RegularMessage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      RegularMessage regularMessage0 = new RegularMessage(gossipMember0, (Object) null);
      long long0 = regularMessage0.getTtl();
      assertEquals("REG_MSG_1392409281320", regularMessage0.getId());
      assertEquals(0, regularMessage0.getForwardCount());
      assertEquals(300000L, long0);
      assertEquals(1392409281320L, regularMessage0.getCreateTime());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      GossipState gossipState0 = GossipState.JOIN;
      GossipMember gossipMember0 = new GossipMember("+ c=<d", "+ c=<d", integer0, (String) null, gossipState0);
      RegularMessage regularMessage0 = new RegularMessage(gossipMember0, "+ c=<d");
      regularMessage0.setTtl((-1));
      long long0 = regularMessage0.getTtl();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      Object object0 = new Object();
      RegularMessage regularMessage0 = new RegularMessage(gossipMember0, object0);
      regularMessage0.getPayload();
      assertEquals(1392409281320L, regularMessage0.getCreateTime());
      assertEquals("REG_MSG_1392409281320", regularMessage0.getId());
      assertEquals(0, regularMessage0.getForwardCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(0);
      GossipState gossipState0 = GossipState.UP;
      GossipMember gossipMember0 = new GossipMember("down", "down", integer0, "down", gossipState0);
      Long long0 = new Long((-4871));
      RegularMessage regularMessage0 = new RegularMessage(gossipMember0, integer0, long0);
      String string0 = regularMessage0.getId();
      assertEquals(1392409281320L, regularMessage0.getCreateTime());
      assertEquals("REG_MSG_1392409281320", string0);
      assertEquals(0, regularMessage0.getForwardCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegularMessage regularMessage0 = new RegularMessage();
      regularMessage0.setId("");
      String string0 = regularMessage0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegularMessage regularMessage0 = new RegularMessage();
      regularMessage0.setForwardCount(225);
      int int0 = regularMessage0.getForwardCount();
      assertEquals(225, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(0);
      GossipState gossipState0 = GossipState.UP;
      GossipMember gossipMember0 = new GossipMember("down", "down", integer0, "down", gossipState0);
      Long long0 = new Long((-4871));
      RegularMessage regularMessage0 = new RegularMessage(gossipMember0, integer0, long0);
      regularMessage0.setForwardCount((-4871));
      int int0 = regularMessage0.getForwardCount();
      assertEquals((-4871), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegularMessage regularMessage0 = new RegularMessage();
      regularMessage0.setCreateTime((-1633L));
      long long0 = regularMessage0.getCreateTime();
      assertEquals((-1633L), long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      RegularMessage regularMessage0 = new RegularMessage(gossipMember0, gossipMember0, (Long) null);
      assertEquals("REG_MSG_1392409281320", regularMessage0.getId());
      assertEquals(300000L, regularMessage0.getTtl());
      assertEquals(1392409281320L, regularMessage0.getCreateTime());
      assertEquals(0, regularMessage0.getForwardCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegularMessage regularMessage0 = new RegularMessage();
      String string0 = regularMessage0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegularMessage regularMessage0 = new RegularMessage();
      long long0 = regularMessage0.getTtl();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegularMessage regularMessage0 = new RegularMessage();
      Integer integer0 = new Integer(0);
      GossipState gossipState0 = GossipState.RCV;
      GossipMember gossipMember0 = new GossipMember("[16X!-T^YY", "", integer0, "RegularMessage{id='null', ttl=0, createTime=0, payload=null, forwardCount=0, creator=null}", gossipState0);
      regularMessage0.setCreator(gossipMember0);
      GossipMember gossipMember1 = regularMessage0.getCreator();
      assertEquals(0, (int)gossipMember1.getPort());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegularMessage regularMessage0 = new RegularMessage();
      int int0 = regularMessage0.getForwardCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegularMessage regularMessage0 = new RegularMessage();
      String string0 = regularMessage0.toString();
      assertEquals("RegularMessage{id='null', ttl=0, createTime=0, payload=null, forwardCount=0, creator=null}", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegularMessage regularMessage0 = new RegularMessage();
      Object object0 = regularMessage0.getPayload();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegularMessage regularMessage0 = new RegularMessage((GossipMember) null, (Object) null);
      long long0 = regularMessage0.getCreateTime();
      assertEquals(0, regularMessage0.getForwardCount());
      assertEquals(1392409281320L, long0);
      assertEquals("REG_MSG_1392409281320", regularMessage0.getId());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegularMessage regularMessage0 = new RegularMessage();
      long long0 = regularMessage0.getCreateTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegularMessage regularMessage0 = new RegularMessage();
      GossipMember gossipMember0 = regularMessage0.getCreator();
      assertNull(gossipMember0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RegularMessage regularMessage0 = new RegularMessage();
      Object object0 = new Object();
      regularMessage0.setPayload(object0);
      assertEquals(0L, regularMessage0.getTtl());
  }
}
