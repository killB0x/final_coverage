/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 04:14:10 GMT 2022
 */

package net.lvsq.jgossip.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.atomic.AtomicInteger;
import net.lvsq.jgossip.model.CandidateMemberState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CandidateMemberState_ESTest extends CandidateMemberState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CandidateMemberState candidateMemberState0 = new CandidateMemberState((-2341L));
      candidateMemberState0.setHeartbeatTime(0);
      long long0 = candidateMemberState0.getHeartbeatTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CandidateMemberState candidateMemberState0 = new CandidateMemberState((-95L));
      long long0 = candidateMemberState0.getHeartbeatTime();
      assertEquals((-95L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CandidateMemberState candidateMemberState0 = new CandidateMemberState((-638L));
      candidateMemberState0.setDowningCount((AtomicInteger) null);
      candidateMemberState0.getDowningCount();
      assertEquals((-638L), candidateMemberState0.getHeartbeatTime());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CandidateMemberState candidateMemberState0 = new CandidateMemberState((-95L));
      AtomicInteger atomicInteger0 = new AtomicInteger(0);
      atomicInteger0.lazySet((-3288));
      candidateMemberState0.setDowningCount(atomicInteger0);
      candidateMemberState0.getDowningCount();
      assertEquals((-95L), candidateMemberState0.getHeartbeatTime());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CandidateMemberState candidateMemberState0 = new CandidateMemberState((-2341L));
      AtomicInteger atomicInteger0 = new AtomicInteger(0);
      candidateMemberState0.setDowningCount(atomicInteger0);
      atomicInteger0.addAndGet(1765);
      candidateMemberState0.getDowningCount();
      assertEquals((-2341L), candidateMemberState0.getHeartbeatTime());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CandidateMemberState candidateMemberState0 = new CandidateMemberState(3719L);
      candidateMemberState0.setDowningCount((AtomicInteger) null);
      // Undeclared exception!
      try { 
        candidateMemberState0.updateCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.lvsq.jgossip.model.CandidateMemberState", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CandidateMemberState candidateMemberState0 = new CandidateMemberState((-1637L));
      candidateMemberState0.setDowningCount((AtomicInteger) null);
      // Undeclared exception!
      try { 
        candidateMemberState0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.lvsq.jgossip.model.CandidateMemberState", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CandidateMemberState candidateMemberState0 = new CandidateMemberState((-95L));
      String string0 = candidateMemberState0.toString();
      assertEquals("CandidateMemberState{heartbeatTime=-95, downingCount=0}", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CandidateMemberState candidateMemberState0 = new CandidateMemberState((-95L));
      AtomicInteger atomicInteger0 = candidateMemberState0.getDowningCount();
      assertEquals((-95L), candidateMemberState0.getHeartbeatTime());
      assertEquals(0, atomicInteger0.get());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CandidateMemberState candidateMemberState0 = new CandidateMemberState((-95L));
      candidateMemberState0.updateCount();
      AtomicInteger atomicInteger0 = candidateMemberState0.getDowningCount();
      assertEquals((-95L), candidateMemberState0.getHeartbeatTime());
      assertEquals(1, atomicInteger0.get());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CandidateMemberState candidateMemberState0 = new CandidateMemberState(682L);
      long long0 = candidateMemberState0.getHeartbeatTime();
      assertEquals(682L, long0);
  }
}
