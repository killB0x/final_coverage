/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 04:03:51 GMT 2022
 */

package net.lvsq.jgossip.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.lvsq.jgossip.model.GossipMember;
import net.lvsq.jgossip.model.GossipState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GossipMember_ESTest extends GossipMember_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer(0);
      GossipState gossipState0 = GossipState.UP;
      GossipMember gossipMember0 = new GossipMember("e!fCC", "e!fCC", integer0, "e!fCC", gossipState0);
      gossipMember0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(781);
      GossipState gossipState0 = GossipState.JOIN;
      GossipMember gossipMember0 = new GossipMember("", "", integer0, "oQ%p", gossipState0);
      gossipMember0.getState();
      assertEquals("::781", gossipMember0.eigenvalue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(0);
      GossipState gossipState0 = GossipState.UP;
      GossipMember gossipMember0 = new GossipMember("e!fCC", "e!fCC", integer0, "e!fCC", gossipState0);
      Integer integer1 = gossipMember0.getPort();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(781);
      GossipState gossipState0 = GossipState.JOIN;
      GossipMember gossipMember0 = new GossipMember("", "", integer0, "oQ%p", gossipState0);
      gossipMember0.getPort();
      assertEquals("::781", gossipMember0.eigenvalue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer((-662));
      GossipState gossipState0 = GossipState.DOWN;
      GossipMember gossipMember0 = new GossipMember("GossipMember{cluster='", "Z4+:Nn", integer0, ", ipAddress='", gossipState0);
      gossipMember0.getPort();
      assertEquals("GossipMember{cluster=':Z4+:Nn:-662", gossipMember0.eigenvalue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      String string0 = gossipMember0.getIpAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      gossipMember0.setIpAddress("GossipMember{cluster='");
      String string0 = gossipMember0.getIpAddress();
      assertEquals("GossipMember{cluster='", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GossipState gossipState0 = GossipState.RCV;
      GossipMember gossipMember0 = new GossipMember("", (String) null, (Integer) null, "", gossipState0);
      String string0 = gossipMember0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      String string0 = gossipMember0.getCluster();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(0);
      GossipState gossipState0 = GossipState.UP;
      GossipMember gossipMember0 = new GossipMember("e!fCC", "e!fCC", integer0, "e!fCC", gossipState0);
      String string0 = gossipMember0.getCluster();
      assertEquals("e!fCC", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      // Undeclared exception!
      try { 
        gossipMember0.ipAndPort();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.lvsq.jgossip.model.GossipMember", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      // Undeclared exception!
      try { 
        gossipMember0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.lvsq.jgossip.model.GossipMember", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      // Undeclared exception!
      try { 
        gossipMember0.getId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.lvsq.jgossip.model.GossipMember", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      GossipMember gossipMember1 = new GossipMember();
      // Undeclared exception!
      try { 
        gossipMember0.equals(gossipMember1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      // Undeclared exception!
      try { 
        gossipMember0.eigenvalue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.lvsq.jgossip.model.GossipMember", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer(781);
      GossipState gossipState0 = GossipState.JOIN;
      GossipMember gossipMember0 = new GossipMember("", "", integer0, "oQ%p", gossipState0);
      gossipMember0.getIpAddress();
      assertEquals("::781", gossipMember0.eigenvalue());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer(781);
      GossipState gossipState0 = GossipState.JOIN;
      GossipMember gossipMember0 = new GossipMember("", "", integer0, "oQ%p", gossipState0);
      gossipMember0.getCluster();
      assertEquals("::781", gossipMember0.eigenvalue());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      Integer integer0 = gossipMember0.getPort();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer integer0 = new Integer(2487);
      GossipState gossipState0 = GossipState.RCV;
      GossipMember gossipMember0 = new GossipMember("WtkSQ", "WtkSQ", integer0, "WtkSQ", gossipState0);
      gossipMember0.setIpAddress("J]");
      GossipMember gossipMember1 = new GossipMember("WtkSQ", "J]", integer0, "", gossipState0);
      boolean boolean0 = gossipMember0.equals(gossipMember1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      Object object0 = new Object();
      boolean boolean0 = gossipMember0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      boolean boolean0 = gossipMember0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      boolean boolean0 = gossipMember0.equals(gossipMember0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = new Integer(2487);
      GossipState gossipState0 = GossipState.RCV;
      GossipMember gossipMember0 = new GossipMember("WtkSQ", "WtkSQ", integer0, "WtkSQ", gossipState0);
      GossipMember gossipMember1 = new GossipMember("WtkSQ", "J]", integer0, "", gossipState0);
      boolean boolean0 = gossipMember0.equals(gossipMember1);
      assertFalse(boolean0);
      assertEquals("WtkSQ:J]:2487", gossipMember1.eigenvalue());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      gossipMember0.setId("JOIN");
      String string0 = gossipMember0.getId();
      assertEquals("JOIN", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = new Integer(781);
      GossipState gossipState0 = GossipState.JOIN;
      GossipMember gossipMember0 = new GossipMember("", "", integer0, "oQ%p", gossipState0);
      gossipMember0.hashCode();
      assertEquals("::781", gossipMember0.eigenvalue());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Integer integer0 = new Integer(2487);
      GossipState gossipState0 = GossipState.RCV;
      GossipMember gossipMember0 = new GossipMember("WtkSQ", "WtkSQ", integer0, "WtkSQ", gossipState0);
      gossipMember0.setState(gossipState0);
      assertEquals(GossipState.RCV, gossipMember0.getState());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      gossipMember0.setCluster("down");
      GossipMember gossipMember1 = new GossipMember();
      boolean boolean0 = gossipMember0.equals(gossipMember1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GossipMember gossipMember0 = new GossipMember();
      gossipMember0.getState();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Integer integer0 = new Integer(2487);
      GossipState gossipState0 = GossipState.RCV;
      GossipMember gossipMember0 = new GossipMember("WtkSQ", "WtkSQ", integer0, "WtkSQ", gossipState0);
      String string0 = gossipMember0.toString();
      assertEquals("GossipMember{cluster='WtkSQ', ipAddress='WtkSQ', port=2487, id='WtkSQ', state=RCV}", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Integer integer0 = new Integer((-662));
      GossipState gossipState0 = GossipState.DOWN;
      GossipMember gossipMember0 = new GossipMember("GossipMember{cluster='", "Z4+:Nn", integer0, ", ipAddress='", gossipState0);
      gossipMember0.setPort(integer0);
      assertEquals("GossipMember{cluster=':Z4+:Nn:-662", gossipMember0.eigenvalue());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Integer integer0 = new Integer(2487);
      GossipState gossipState0 = GossipState.RCV;
      GossipMember gossipMember0 = new GossipMember("WtkSQ", "WtkSQ", integer0, "WtkSQ", gossipState0);
      String string0 = gossipMember0.ipAndPort();
      assertEquals("WtkSQ:2487", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Integer integer0 = new Integer(2487);
      GossipState gossipState0 = GossipState.RCV;
      GossipMember gossipMember0 = new GossipMember("WtkSQ", "WtkSQ", integer0, "WtkSQ", gossipState0);
      String string0 = gossipMember0.eigenvalue();
      assertEquals("WtkSQ:WtkSQ:2487", string0);
  }
}
