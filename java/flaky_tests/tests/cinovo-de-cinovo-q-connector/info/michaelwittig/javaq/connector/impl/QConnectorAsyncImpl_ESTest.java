/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 22:56:49 GMT 2022
 */

package info.michaelwittig.javaq.connector.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import info.michaelwittig.javaq.connector.QConnectorDataListener;
import info.michaelwittig.javaq.connector.QConnectorListener;
import info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QConnectorAsyncImpl_ESTest extends QConnectorAsyncImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "", 0, false);
      String[] stringArray0 = new String[4];
      String[] stringArray1 = new String[8];
      qConnectorAsyncImpl0.subscribe("m+SnO$xv'+H(g", stringArray0, stringArray1);
      assertEquals(8, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QConnectorListener qConnectorListener0 = mock(QConnectorListener.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(qConnectorListener0).toString();
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl(qConnectorListener0, "info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl$ReconnectTask", 538, true);
      QConnectorListener qConnectorListener1 = qConnectorAsyncImpl0.getConnectorListener();
      assertSame(qConnectorListener1, qConnectorListener0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "", (-3), true);
      // Undeclared exception!
      try { 
        qConnectorAsyncImpl0.subscribe("", (String[]) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "", 17, true);
      // Undeclared exception!
      try { 
        qConnectorAsyncImpl0.connect();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class kx.c
         //
         verifyException("info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "", 101, true);
      boolean boolean0 = qConnectorAsyncImpl0.isConnected();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "bd]", (-1), true);
      // Undeclared exception!
      try { 
        qConnectorAsyncImpl0.unsubscribe("bd]");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "", 17, true);
      String[] stringArray0 = new String[0];
      qConnectorAsyncImpl0.subscribe("", stringArray0, stringArray0);
      assertTrue(qConnectorAsyncImpl0.reconnectOnError());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "|uD!rhO]Ymdx)2).oI", 20, true);
      // Undeclared exception!
      try { 
        qConnectorAsyncImpl0.unsubscribe((QConnectorDataListener) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "", (-6), false);
      QConnectorListener qConnectorListener0 = qConnectorAsyncImpl0.getConnectorListener();
      assertNull(qConnectorListener0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "b+g", 19, true);
      try { 
        qConnectorAsyncImpl0.disconnect();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not connected
         //
         verifyException("info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, (String) null, 5, true);
      // Undeclared exception!
      try { 
        qConnectorAsyncImpl0.subscribe((QConnectorDataListener) null, (String[]) null, (String[]) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl", e);
      }
  }
}
