/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 23:27:31 GMT 2022
 */

package info.michaelwittig.javaq.connector.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import info.michaelwittig.javaq.connector.QConnectorListener;
import info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl;
import info.michaelwittig.javaq.connector.impl.QConnectorSyncImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QConnectorImpl_ESTest extends QConnectorImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QConnectorListener qConnectorListener0 = mock(QConnectorListener.class, new ViolatedAssumptionAnswer());
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl(qConnectorListener0, " bg xhijefcspmdznuvt", 0, false);
      boolean boolean0 = qConnectorAsyncImpl0.reconnectOnError();
      assertFalse(boolean0);
      assertEquals(0, qConnectorAsyncImpl0.getPort());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QConnectorListener qConnectorListener0 = mock(QConnectorListener.class, new ViolatedAssumptionAnswer());
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl(qConnectorListener0, "&Y", 0, false);
      int int0 = qConnectorAsyncImpl0.getPort();
      assertEquals(0, int0);
      assertFalse(qConnectorAsyncImpl0.reconnectOnError());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, (String) null, (-3268), true);
      int int0 = qConnectorAsyncImpl0.getPort();
      assertEquals((-3268), int0);
      assertTrue(qConnectorAsyncImpl0.reconnectOnError());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QConnectorSyncImpl qConnectorSyncImpl0 = new QConnectorSyncImpl("vX", 1762, false);
      qConnectorSyncImpl0.getHost();
      assertFalse(qConnectorSyncImpl0.reconnectOnError());
      assertEquals(1762, qConnectorSyncImpl0.getPort());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QConnectorSyncImpl qConnectorSyncImpl0 = new QConnectorSyncImpl("", 0, true);
      qConnectorSyncImpl0.getHost();
      assertTrue(qConnectorSyncImpl0.reconnectOnError());
      assertEquals(0, qConnectorSyncImpl0.getPort());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QConnectorSyncImpl qConnectorSyncImpl0 = new QConnectorSyncImpl((String) null, 5760, true);
      qConnectorSyncImpl0.getHost();
      assertEquals(5760, qConnectorSyncImpl0.getPort());
      assertTrue(qConnectorSyncImpl0.reconnectOnError());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      QConnectorSyncImpl qConnectorSyncImpl0 = new QConnectorSyncImpl("/3qO`", 0, true);
      boolean boolean0 = qConnectorSyncImpl0.reconnectOnError();
      assertEquals(0, qConnectorSyncImpl0.getPort());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      QConnectorListener qConnectorListener0 = mock(QConnectorListener.class, new ViolatedAssumptionAnswer());
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl(qConnectorListener0, "", 1799, false);
      int int0 = qConnectorAsyncImpl0.getPort();
      assertEquals(1799, int0);
      assertFalse(qConnectorAsyncImpl0.reconnectOnError());
  }
}
