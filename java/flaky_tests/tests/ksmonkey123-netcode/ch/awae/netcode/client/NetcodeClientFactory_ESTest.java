/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 01:51:39 GMT 2022
 */

package ch.awae.netcode.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.awae.netcode.client.ChannelEventHandler;
import ch.awae.netcode.client.ChannelFeatures;
import ch.awae.netcode.client.MessageHandler;
import ch.awae.netcode.client.NetcodeClientFactory;
import ch.awae.netcode.client.QuestionHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NetcodeClientFactory_ESTest extends NetcodeClientFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory("uexpected resonse to handshake 2", 1, "uexpected resonse to handshake 2");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      ChannelFeatures channelFeatures0 = new ChannelFeatures();
      // Undeclared exception!
      try { 
        netcodeClientFactory0.createChannel("uexpected resonse to handshake 2", channelFeatures0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // handshake failed: null
         //
         verifyException("ch.awae.netcode.client.NetcodeClientFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory();
      assertEquals((-1), netcodeClientFactory0.getPort());
      
      netcodeClientFactory0.setPort(0);
      int int0 = netcodeClientFactory0.getPort();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory();
      int int0 = netcodeClientFactory0.getPort();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory();
      netcodeClientFactory0.getHost();
      assertEquals((-1), netcodeClientFactory0.getPort());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory("", 1, "");
      netcodeClientFactory0.getHost();
      assertEquals(1, netcodeClientFactory0.getPort());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory();
      netcodeClientFactory0.getAppId();
      assertEquals((-1), netcodeClientFactory0.getPort());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory("", 1, "");
      netcodeClientFactory0.getAppId();
      assertEquals(1, netcodeClientFactory0.getPort());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory();
      // Undeclared exception!
      try { 
        netcodeClientFactory0.setHost((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory();
      // Undeclared exception!
      try { 
        netcodeClientFactory0.createChannel(", password=");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid port number: -1
         //
         verifyException("ch.awae.netcode.client.NetcodeClientFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = null;
      try {
        netcodeClientFactory0 = new NetcodeClientFactory((String) null, 11, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = null;
      try {
        netcodeClientFactory0 = new NetcodeClientFactory("", (-2520), "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid port number: -2520
         //
         verifyException("ch.awae.netcode.client.NetcodeClientFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory();
      // Undeclared exception!
      try { 
        netcodeClientFactory0.createChannel((String) null, (ChannelFeatures) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid port number: -1
         //
         verifyException("ch.awae.netcode.client.NetcodeClientFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory();
      netcodeClientFactory0.setHost("");
      assertEquals((-1), netcodeClientFactory0.getPort());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory();
      netcodeClientFactory0.setAppId((String) null);
      assertEquals((-1), netcodeClientFactory0.getPort());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory();
      // Undeclared exception!
      try { 
        netcodeClientFactory0.setPort(65560);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid port number: 65560
         //
         verifyException("ch.awae.netcode.client.NetcodeClientFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory();
      // Undeclared exception!
      try { 
        netcodeClientFactory0.joinChannel("", "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid port number: -1
         //
         verifyException("ch.awae.netcode.client.NetcodeClientFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory();
      netcodeClientFactory0.getChannelEventHandler();
      assertEquals((-1), netcodeClientFactory0.getPort());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory("ch.awae.netcode.client.NetcodeClientFactory", 65535, "ch.awae.netcode.server.ChannelInformationImpl");
      netcodeClientFactory0.getMessageHandler();
      assertEquals("ch.awae.netcode.server.ChannelInformationImpl", netcodeClientFactory0.getAppId());
      assertEquals(65535, netcodeClientFactory0.getPort());
      assertEquals("ch.awae.netcode.client.NetcodeClientFactory", netcodeClientFactory0.getHost());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory("e7", 957, "e7");
      netcodeClientFactory0.getHost();
      assertEquals(957, netcodeClientFactory0.getPort());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory("", 19, "");
      // Undeclared exception!
      try { 
        netcodeClientFactory0.joinChannel("", "", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // handshake failed: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@29c56e4e
         //
         verifyException("ch.awae.netcode.client.NetcodeClientFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory("ch.awae.netcode.client.NetcodeClientFactory", 65535, "ch.awae.netcode.server.ChannelInformationImpl");
      netcodeClientFactory0.getQuestionHandler();
      assertEquals("ch.awae.netcode.server.ChannelInformationImpl", netcodeClientFactory0.getAppId());
      assertEquals(65535, netcodeClientFactory0.getPort());
      assertEquals("ch.awae.netcode.client.NetcodeClientFactory", netcodeClientFactory0.getHost());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory("ch.awae.netcode.client.NetcodeClientFactory", 65535, "ch.awae.netcode.server.ChannelInformationImpl");
      netcodeClientFactory0.setQuestionHandler((QuestionHandler) null);
      assertEquals("ch.awae.netcode.client.NetcodeClientFactory", netcodeClientFactory0.getHost());
      assertEquals("ch.awae.netcode.server.ChannelInformationImpl", netcodeClientFactory0.getAppId());
      assertEquals(65535, netcodeClientFactory0.getPort());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory("ch.awae.netcode.client.NetcodeClientFactory", 65535, "ch.awae.netcode.server.ChannelInformationImpl");
      String string0 = netcodeClientFactory0.getAppId();
      assertEquals(65535, netcodeClientFactory0.getPort());
      assertEquals("ch.awae.netcode.server.ChannelInformationImpl", string0);
      assertEquals("ch.awae.netcode.client.NetcodeClientFactory", netcodeClientFactory0.getHost());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory();
      netcodeClientFactory0.setChannelEventHandler((ChannelEventHandler) null);
      assertEquals((-1), netcodeClientFactory0.getPort());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory("", 19, "");
      // Undeclared exception!
      try { 
        netcodeClientFactory0.createChannel("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // handshake failed: Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@29c56e4e
         //
         verifyException("ch.awae.netcode.client.NetcodeClientFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory();
      netcodeClientFactory0.setMessageHandler((MessageHandler) null);
      assertEquals((-1), netcodeClientFactory0.getPort());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NetcodeClientFactory netcodeClientFactory0 = new NetcodeClientFactory("ch.awae.netcode.client.NetcodeClientFactory", 65535, "ch.awae.netcode.server.ChannelInformationImpl");
      int int0 = netcodeClientFactory0.getPort();
      assertEquals("ch.awae.netcode.client.NetcodeClientFactory", netcodeClientFactory0.getHost());
      assertEquals(65535, int0);
      assertEquals("ch.awae.netcode.server.ChannelInformationImpl", netcodeClientFactory0.getAppId());
  }
}
