/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 01:44:56 GMT 2022
 */

package ch.awae.netcode.client.binding;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.awae.netcode.client.binding.LocalBindingsImpl;
import java.lang.reflect.Array;
import java.util.HashMap;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocalBindingsImpl_ESTest extends LocalBindingsImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LocalBindingsImpl localBindingsImpl0 = new LocalBindingsImpl();
      Class<String> class0 = String.class;
      localBindingsImpl0.register(class0);
      List<Object> list0 = localBindingsImpl0.getAllBeans();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalBindingsImpl localBindingsImpl0 = new LocalBindingsImpl();
      // Undeclared exception!
      try { 
        localBindingsImpl0.unregister("07/*L", (Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LocalBindingsImpl localBindingsImpl0 = new LocalBindingsImpl();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        localBindingsImpl0.unregister("", class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // class java.lang.String is no interface
         //
         verifyException("ch.awae.netcode.client.binding.LocalBindingsImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocalBindingsImpl localBindingsImpl0 = new LocalBindingsImpl();
      // Undeclared exception!
      try { 
        localBindingsImpl0.unregister((HashMap<String, Class<String>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LocalBindingsImpl localBindingsImpl0 = new LocalBindingsImpl();
      Class<String> class0 = String.class;
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 0);
      // Undeclared exception!
      try { 
        localBindingsImpl0.register((String) null, (String) null, (Class<? super String>) class0, (Class<?>[]) classArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LocalBindingsImpl localBindingsImpl0 = new LocalBindingsImpl();
      // Undeclared exception!
      try { 
        localBindingsImpl0.register((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LocalBindingsImpl localBindingsImpl0 = new LocalBindingsImpl();
      // Undeclared exception!
      try { 
        localBindingsImpl0.getBeans((Class<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LocalBindingsImpl localBindingsImpl0 = new LocalBindingsImpl();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        localBindingsImpl0.getBeans(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // class java.lang.String is no interface
         //
         verifyException("ch.awae.netcode.client.binding.LocalBindingsImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LocalBindingsImpl localBindingsImpl0 = new LocalBindingsImpl();
      // Undeclared exception!
      try { 
        localBindingsImpl0.getBean("07/*L", (Class<HashMap<HashMap, HashMap>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LocalBindingsImpl localBindingsImpl0 = new LocalBindingsImpl();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        localBindingsImpl0.getBean("e?V/FBQ{@}*)", class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // class java.lang.String is no interface
         //
         verifyException("ch.awae.netcode.client.binding.LocalBindingsImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocalBindingsImpl localBindingsImpl0 = new LocalBindingsImpl();
      // Undeclared exception!
      try { 
        localBindingsImpl0.unregister("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot unbind bean that is not bound
         //
         verifyException("ch.awae.netcode.client.binding.LocalBindingsImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocalBindingsImpl localBindingsImpl0 = new LocalBindingsImpl();
      localBindingsImpl0.register("", "");
      // Undeclared exception!
      try { 
        localBindingsImpl0.unregister("");
       //  fail("Expecting exception: IllegalStateException");
       // Unstable assertion
      } catch(IllegalStateException e) {
         //
         // cannot unbind bean that is not bound
         //
         verifyException("ch.awae.netcode.client.binding.LocalBindingsImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocalBindingsImpl localBindingsImpl0 = new LocalBindingsImpl();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        localBindingsImpl0.register("", "", (Class<? super String>) class0, (Class<?>[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // class java.lang.String is no interface
         //
         verifyException("ch.awae.netcode.client.binding.LocalBindingsImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocalBindingsImpl localBindingsImpl0 = new LocalBindingsImpl();
      localBindingsImpl0.register("", "");
      // Undeclared exception!
      try { 
        localBindingsImpl0.register("", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // cannot bind bean. there already exists an active binding for the interface interface java.io.Serializable
         //
         verifyException("ch.awae.netcode.client.binding.LocalBindingsImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LocalBindingsImpl localBindingsImpl0 = new LocalBindingsImpl();
      List<Object> list0 = localBindingsImpl0.getAllBeans();
      assertEquals(0, list0.size());
  }
}
