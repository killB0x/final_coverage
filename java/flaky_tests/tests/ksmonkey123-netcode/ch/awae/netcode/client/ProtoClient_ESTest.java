/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 02:01:30 GMT 2022
 */

package ch.awae.netcode.client;

import org.junit.Test;
import static org.junit.Assert.*;
import ch.awae.netcode.client.ProtoClient;
import ch.awae.netcode.internal.ObjectStreams;
import java.net.Socket;
import java.net.SocketAddress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProtoClient_ESTest extends ProtoClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ProtoClient protoClient0 = new ProtoClient((Socket) null, (ObjectStreams) null);
      Socket socket0 = protoClient0.getSocket();
      assertNull(socket0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.close();
      ProtoClient protoClient0 = new ProtoClient(mockSocket0, (ObjectStreams) null);
      Socket socket0 = protoClient0.getSocket();
      assertEquals("Socket[unconnected]", socket0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.bind((SocketAddress) null);
      ProtoClient protoClient0 = new ProtoClient(mockSocket0, (ObjectStreams) null);
      Socket socket0 = protoClient0.getSocket();
      assertSame(socket0, mockSocket0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      ProtoClient protoClient0 = new ProtoClient(mockSocket0, (ObjectStreams) null);
      ObjectStreams objectStreams0 = protoClient0.getStreams();
      assertNull(objectStreams0);
  }
}
