/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 01:53:25 GMT 2022
 */

package ch.awae.netcode.server;

import org.junit.Test;
import static org.junit.Assert.*;
import ch.awae.netcode.server.ChannelID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ChannelID_ESTest extends ChannelID_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ChannelID channelID0 = new ChannelID((String) null, (String) null);
      String string0 = channelID0.getChannelId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("d<Dg.`}LbRCeh", "d<Dg.`}LbRCeh");
      String string0 = channelID0.getChannelId();
      assertEquals("d<Dg.`}LbRCeh", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("", "");
      ChannelID channelID1 = new ChannelID("", (String) null);
      boolean boolean0 = channelID0.equals(channelID1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ChannelID channelID0 = new ChannelID((String) null, (String) null);
      ChannelID channelID1 = new ChannelID("", (String) null);
      boolean boolean0 = channelID0.equals(channelID1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("", "");
      ChannelID channelID1 = new ChannelID("", "");
      boolean boolean0 = channelID0.equals(channelID1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ChannelID channelID0 = new ChannelID((String) null, (String) null);
      boolean boolean0 = channelID0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("ChannelID{appId='", "ChannelID{appId='");
      boolean boolean0 = channelID0.equals(channelID0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("", "");
      boolean boolean0 = channelID0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("", "");
      channelID0.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("", "");
      String string0 = channelID0.toString();
      assertEquals("ChannelID{appId='', channelId=''}", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("", "");
      String string0 = channelID0.getChannelId();
      assertEquals("", string0);
  }
}
