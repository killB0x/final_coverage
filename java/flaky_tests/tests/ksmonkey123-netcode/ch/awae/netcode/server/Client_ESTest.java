/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 01:55:01 GMT 2022
 */

package ch.awae.netcode.server;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.awae.netcode.client.ChannelFeatures;
import ch.awae.netcode.internal.ObjectStreams;
import ch.awae.netcode.server.Channel;
import ch.awae.netcode.server.ChannelID;
import ch.awae.netcode.server.ChannelManager;
import ch.awae.netcode.server.Client;
import java.net.Proxy;
import java.net.Socket;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Client_ESTest extends Client_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("PZym-E\"", "PZym-E\"");
      ChannelFeatures channelFeatures0 = new ChannelFeatures();
      ChannelManager channelManager0 = new ChannelManager();
      Channel channel0 = new Channel(channelID0, channelFeatures0, channelManager0);
      Client client0 = new Client((String) null, (Socket) null, (ObjectStreams) null, channel0);
      String string0 = client0.getUserId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ChannelID channelID0 = new ChannelID((String) null, "e&u(i]Zn*");
      ChannelFeatures channelFeatures0 = new ChannelFeatures();
      ChannelManager channelManager0 = new ChannelManager();
      Channel channel0 = new Channel(channelID0, channelFeatures0, channelManager0);
      Client client0 = new Client("VZ[$F7X9~6EXKU", (Socket) null, (ObjectStreams) null, channel0);
      String string0 = client0.getUserId();
      assertEquals("VZ[$F7X9~6EXKU", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("", "");
      ChannelFeatures channelFeatures0 = new ChannelFeatures();
      ChannelManager channelManager0 = new ChannelManager();
      Channel channel0 = new Channel(channelID0, channelFeatures0, channelManager0);
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      Client client0 = new Client("", mockSocket0, (ObjectStreams) null, channel0);
      Socket socket0 = client0.getSocket();
      assertSame(socket0, mockSocket0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Client client0 = null;
      try {
        client0 = new Client("unauthorized", (Socket) null, (ObjectStreams) null, (Channel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.awae.netcode.server.Client", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("", "");
      ChannelFeatures channelFeatures0 = new ChannelFeatures();
      ChannelManager channelManager0 = new ChannelManager();
      Channel channel0 = new Channel(channelID0, channelFeatures0, channelManager0);
      Client client0 = new Client("", (Socket) null, (ObjectStreams) null, channel0);
      // Undeclared exception!
      try { 
        client0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.awae.netcode.server.Client", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("", "");
      ChannelFeatures channelFeatures0 = new ChannelFeatures();
      ChannelManager channelManager0 = new ChannelManager();
      Channel channel0 = new Channel(channelID0, channelFeatures0, channelManager0);
      Client client0 = new Client("", (Socket) null, (ObjectStreams) null, channel0);
      // Undeclared exception!
      try { 
        client0.send(channelFeatures0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.awae.netcode.server.Client", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("", "");
      ChannelFeatures channelFeatures0 = new ChannelFeatures();
      ChannelManager channelManager0 = new ChannelManager();
      Channel channel0 = new Channel(channelID0, channelFeatures0, channelManager0);
      Client client0 = new Client("", (Socket) null, (ObjectStreams) null, channel0);
      String string0 = client0.getUserId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("", "");
      ChannelFeatures channelFeatures0 = new ChannelFeatures();
      ChannelManager channelManager0 = new ChannelManager();
      Channel channel0 = new Channel(channelID0, channelFeatures0, channelManager0);
      Client client0 = new Client("", (Socket) null, (ObjectStreams) null, channel0);
      // Undeclared exception!
      try { 
        client0.closeStreams();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ch.awae.netcode.server.Client", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("W", "W");
      ChannelFeatures channelFeatures0 = new ChannelFeatures();
      ChannelManager channelManager0 = new ChannelManager();
      Channel channel0 = new Channel(channelID0, channelFeatures0, channelManager0);
      Client client0 = new Client("W", (Socket) null, (ObjectStreams) null, channel0);
      client0.terminate();
      //  // Unstable assertion: assertFalse(client0.isDaemon());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ChannelID channelID0 = new ChannelID("W", "W");
      ChannelFeatures channelFeatures0 = new ChannelFeatures();
      ChannelManager channelManager0 = new ChannelManager();
      Channel channel0 = new Channel(channelID0, channelFeatures0, channelManager0);
      Client client0 = new Client("W", (Socket) null, (ObjectStreams) null, channel0);
      Socket socket0 = client0.getSocket();
      assertNull(socket0);
  }
}
