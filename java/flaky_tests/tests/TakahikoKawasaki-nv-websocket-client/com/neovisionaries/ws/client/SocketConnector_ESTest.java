/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 13:37:50 GMT 2022
 */

package com.neovisionaries.ws.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.neovisionaries.ws.client.Address;
import com.neovisionaries.ws.client.DualStackMode;
import com.neovisionaries.ws.client.ProxyHandshaker;
import com.neovisionaries.ws.client.ProxySettings;
import com.neovisionaries.ws.client.SocketConnector;
import com.neovisionaries.ws.client.WebSocketFactory;
import javax.net.SocketFactory;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSocketFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SocketConnector_ESTest extends SocketConnector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SocketFactory socketFactory0 = SocketFactory.getDefault();
      String[] stringArray0 = new String[8];
      ProxyHandshaker proxyHandshaker0 = new ProxyHandshaker((String) null, 3, (ProxySettings) null);
      SSLContext sSLContext0 = SSLContext.getDefault();
      SSLSocketFactory sSLSocketFactory0 = sSLContext0.getSocketFactory();
      SocketConnector socketConnector0 = new SocketConnector(socketFactory0, (Address) null, 0, 0, stringArray0, proxyHandshaker0, sSLSocketFactory0, "q$xq<;h!r/#sw", 0);
      SocketConnector socketConnector1 = socketConnector0.setVerifyHostname(false);
      assertEquals(0, socketConnector1.getConnectionTimeout());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SocketFactory socketFactory0 = SocketFactory.getDefault();
      Address address0 = new Address("'T;S", (-507));
      String[] stringArray0 = new String[2];
      SocketConnector socketConnector0 = new SocketConnector(socketFactory0, address0, (-507), stringArray0, (-507));
      SocketConnector socketConnector1 = socketConnector0.setVerifyHostname(true);
      assertEquals((-507), socketConnector1.getConnectionTimeout());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SocketFactory socketFactory0 = SocketFactory.getDefault();
      String[] stringArray0 = new String[8];
      ProxyHandshaker proxyHandshaker0 = new ProxyHandshaker((String) null, 3, (ProxySettings) null);
      SSLContext sSLContext0 = SSLContext.getDefault();
      SSLSocketFactory sSLSocketFactory0 = sSLContext0.getSocketFactory();
      SocketConnector socketConnector0 = new SocketConnector(socketFactory0, (Address) null, 0, 0, stringArray0, proxyHandshaker0, sSLSocketFactory0, "q$xq<;h!r/#sw", 0);
      DualStackMode dualStackMode0 = DualStackMode.BOTH;
      SocketConnector socketConnector1 = socketConnector0.setDualStackSettings(dualStackMode0, 0);
      assertEquals(0, socketConnector1.getConnectionTimeout());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SocketFactory socketFactory0 = SocketFactory.getDefault();
      Address address0 = new Address("", 44);
      String[] stringArray0 = new String[9];
      SocketConnector socketConnector0 = new SocketConnector(socketFactory0, address0, 44, stringArray0, 44);
      DualStackMode dualStackMode0 = DualStackMode.BOTH;
      SocketConnector socketConnector1 = socketConnector0.setDualStackSettings(dualStackMode0, 44);
      assertEquals(44, socketConnector1.getConnectionTimeout());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SocketFactory socketFactory0 = SocketFactory.getDefault();
      Address address0 = new Address("", 44);
      String[] stringArray0 = new String[9];
      SocketConnector socketConnector0 = new SocketConnector(socketFactory0, address0, 44, stringArray0, 44);
      int int0 = socketConnector0.getConnectionTimeout();
      assertEquals(44, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      SSLSocketFactory sSLSocketFactory0 = sSLContext0.getSocketFactory();
      Address address0 = new Address((String) null, (-1));
      String[] stringArray0 = new String[6];
      SocketConnector socketConnector0 = new SocketConnector(sSLSocketFactory0, address0, (-2033), stringArray0, (-1631));
      int int0 = socketConnector0.getConnectionTimeout();
      assertEquals((-2033), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SocketFactory socketFactory0 = SocketFactory.getDefault();
      Address address0 = new Address("'T;S", (-507));
      String[] stringArray0 = new String[2];
      SocketConnector socketConnector0 = new SocketConnector(socketFactory0, address0, (-507), stringArray0, (-507));
      try { 
        socketConnector0.getConnectedSocket();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Failed to connect to ''T;S:-507': port out of range:-507
         //
         verifyException("com.neovisionaries.ws.client.SocketConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      SSLSocketFactory sSLSocketFactory0 = sSLContext0.getSocketFactory();
      SocketConnector socketConnector0 = new SocketConnector(sSLSocketFactory0, (Address) null, 573, (String[]) null, 573);
      socketConnector0.closeSilently();
      assertEquals(573, socketConnector0.getConnectionTimeout());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SocketFactory socketFactory0 = SocketFactory.getDefault();
      Address address0 = new Address("UNEXPECTED_RESERVED_BIT", (-865));
      String[] stringArray0 = new String[3];
      SocketConnector socketConnector0 = new SocketConnector(socketFactory0, address0, 4774, stringArray0, 0);
      try { 
        socketConnector0.connect();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Failed to connect to 'UNEXPECTED_RESERVED_BIT:-865': port out of range:-865
         //
         verifyException("com.neovisionaries.ws.client.SocketConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      SSLSocketFactory sSLSocketFactory0 = sSLContext0.getSocketFactory();
      SocketConnector socketConnector0 = new SocketConnector(sSLSocketFactory0, (Address) null, 573, (String[]) null, 573);
      // Undeclared exception!
      try { 
        socketConnector0.getConnectedSocket();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.neovisionaries.ws.client.SocketConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SocketFactory socketFactory0 = SocketFactory.getDefault();
      Address address0 = new Address("Host: ", (-2903));
      WebSocketFactory webSocketFactory0 = new WebSocketFactory();
      ProxySettings proxySettings0 = new ProxySettings(webSocketFactory0);
      ProxyHandshaker proxyHandshaker0 = new ProxyHandshaker("Host: ", (-2903), proxySettings0);
      SSLContext sSLContext0 = SSLContext.getDefault();
      SSLSocketFactory sSLSocketFactory0 = sSLContext0.getSocketFactory();
      SocketConnector socketConnector0 = new SocketConnector(socketFactory0, address0, (-2903), (-2903), (String[]) null, proxyHandshaker0, sSLSocketFactory0, "", (-3033));
      try { 
        socketConnector0.connect();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Failed to connect to the proxy 'Host: :-2903': port out of range:-2903
         //
         verifyException("com.neovisionaries.ws.client.SocketConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      SSLSocketFactory sSLSocketFactory0 = sSLContext0.getSocketFactory();
      Address address0 = new Address("nB:2", 0);
      SocketConnector socketConnector0 = new SocketConnector(sSLSocketFactory0, address0, 0, (String[]) null, 0);
      int int0 = socketConnector0.getConnectionTimeout();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      SSLSocketFactory sSLSocketFactory0 = sSLContext0.getSocketFactory();
      SocketConnector socketConnector0 = new SocketConnector(sSLSocketFactory0, (Address) null, 573, (String[]) null, 573);
      SocketConnector socketConnector1 = socketConnector0.setVerifyHostname(true);
      assertEquals(573, socketConnector1.getConnectionTimeout());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SSLContext sSLContext0 = SSLContext.getDefault();
      SSLSocketFactory sSLSocketFactory0 = sSLContext0.getSocketFactory();
      Address address0 = new Address("", 1815);
      String[] stringArray0 = new String[2];
      WebSocketFactory webSocketFactory0 = new WebSocketFactory();
      ProxySettings proxySettings0 = webSocketFactory0.getProxySettings();
      ProxyHandshaker proxyHandshaker0 = new ProxyHandshaker("", 0, proxySettings0);
      SocketConnector socketConnector0 = new SocketConnector(sSLSocketFactory0, address0, 0, (-3938), stringArray0, proxyHandshaker0, sSLSocketFactory0, "No IP addresses found", 0);
      socketConnector0.getSocket();
      assertEquals(0, socketConnector0.getConnectionTimeout());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SocketFactory socketFactory0 = SocketFactory.getDefault();
      Address address0 = new Address("Host: ", (-2903));
      WebSocketFactory webSocketFactory0 = new WebSocketFactory();
      ProxySettings proxySettings0 = new ProxySettings(webSocketFactory0);
      ProxyHandshaker proxyHandshaker0 = new ProxyHandshaker("Host: ", (-2903), proxySettings0);
      SSLContext sSLContext0 = SSLContext.getDefault();
      SSLSocketFactory sSLSocketFactory0 = sSLContext0.getSocketFactory();
      SocketConnector socketConnector0 = new SocketConnector(socketFactory0, address0, (-2903), (-2903), (String[]) null, proxyHandshaker0, sSLSocketFactory0, "", (-3033));
      DualStackMode dualStackMode0 = DualStackMode.IPV6_ONLY;
      SocketConnector socketConnector1 = socketConnector0.setDualStackSettings(dualStackMode0, 2);
      assertEquals((-2903), socketConnector1.getConnectionTimeout());
  }
}
