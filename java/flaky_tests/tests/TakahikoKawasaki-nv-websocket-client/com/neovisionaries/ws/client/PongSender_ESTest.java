/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 13:58:42 GMT 2022
 */

package com.neovisionaries.ws.client;

import org.junit.Test;
import static org.junit.Assert.*;
import com.neovisionaries.ws.client.CounterPayloadGenerator;
import com.neovisionaries.ws.client.PongSender;
import com.neovisionaries.ws.client.WebSocket;
import com.neovisionaries.ws.client.WebSocketFactory;
import com.neovisionaries.ws.client.WebSocketFrame;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PongSender_ESTest extends PongSender_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WebSocketFactory webSocketFactory0 = new WebSocketFactory();
      URI uRI0 = MockURI.aHttpURI;
      WebSocket webSocket0 = webSocketFactory0.createSocket(uRI0, 0);
      CounterPayloadGenerator counterPayloadGenerator0 = new CounterPayloadGenerator();
      PongSender pongSender0 = new PongSender(webSocket0, counterPayloadGenerator0);
      WebSocketFrame webSocketFrame0 = pongSender0.createFrame((byte[]) null);
      assertTrue(webSocketFrame0.getFin());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CounterPayloadGenerator counterPayloadGenerator0 = new CounterPayloadGenerator();
      PongSender pongSender0 = new PongSender((WebSocket) null, counterPayloadGenerator0);
      byte[] byteArray0 = new byte[4];
      WebSocketFrame webSocketFrame0 = pongSender0.createFrame(byteArray0);
      assertFalse(webSocketFrame0.isTextFrame());
  }
}
