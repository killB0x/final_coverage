/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 13:52:28 GMT 2022
 */

package com.neovisionaries.ws.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.neovisionaries.ws.client.Address;
import com.neovisionaries.ws.client.DualStackMode;
import com.neovisionaries.ws.client.SocketInitiator;
import java.net.InetAddress;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.net.SocketFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SocketInitiator_ESTest extends SocketInitiator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SocketFactory socketFactory0 = SocketFactory.getDefault();
      Address address0 = new Address("", 16);
      DualStackMode dualStackMode0 = DualStackMode.IPV6_ONLY;
      SocketInitiator socketInitiator0 = new SocketInitiator(socketFactory0, address0, 16, (String[]) null, dualStackMode0, 4328);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SocketFactory socketFactory0 = SocketFactory.getDefault();
      Address address0 = new Address("", (-19));
      DualStackMode dualStackMode0 = DualStackMode.BOTH;
      SocketInitiator socketInitiator0 = new SocketInitiator(socketFactory0, address0, (-19), (String[]) null, dualStackMode0, (-19));
      InetAddress[] inetAddressArray0 = new InetAddress[3];
      try { 
        socketInitiator0.establish(inetAddressArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-19
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DualStackMode dualStackMode0 = DualStackMode.IPV4_ONLY;
      SocketFactory socketFactory0 = SocketFactory.getDefault();
      SocketInitiator socketInitiator0 = new SocketInitiator(socketFactory0, (Address) null, 26, (String[]) null, dualStackMode0, 26);
      InetAddress[] inetAddressArray0 = new InetAddress[1];
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      inetAddressArray0[0] = inetAddress0;
      try { 
        socketInitiator0.establish(inetAddressArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.neovisionaries.ws.client.SocketInitiator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DualStackMode dualStackMode0 = DualStackMode.IPV4_ONLY;
      SocketInitiator socketInitiator0 = new SocketInitiator((SocketFactory) null, (Address) null, 3, (String[]) null, dualStackMode0, 3);
      InetAddress[] inetAddressArray0 = new InetAddress[1];
      try { 
        socketInitiator0.establish(inetAddressArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No viable interface to connect
         //
         verifyException("com.neovisionaries.ws.client.SocketInitiator$SocketFuture", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          SocketFactory socketFactory0 = SocketFactory.getDefault();
          Address address0 = new Address("4[]LqiV(0']MJ2W@3", 16);
          DualStackMode dualStackMode0 = DualStackMode.BOTH;
          SocketInitiator socketInitiator0 = new SocketInitiator(socketFactory0, address0, 16, (String[]) null, dualStackMode0, 16);
          InetAddress[] inetAddressArray0 = new InetAddress[3];
          try { 
            socketInitiator0.establish(inetAddressArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"192.168.1.42:16\" \"connect,resolve\")
             // <evosuite>.<evosuite>(<evosuite>)
             // <evosuite>.<evosuite>(<evosuite>)
             // <evosuite>.<evosuite>(<evosuite>)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DualStackMode dualStackMode0 = DualStackMode.IPV6_ONLY;
      SocketInitiator socketInitiator0 = new SocketInitiator((SocketFactory) null, (Address) null, 3, (String[]) null, dualStackMode0, 3);
      InetAddress[] inetAddressArray0 = new InetAddress[1];
      try { 
        socketInitiator0.establish(inetAddressArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No viable interface to connect
         //
         verifyException("com.neovisionaries.ws.client.SocketInitiator$SocketFuture", e);
      }
  }
}
