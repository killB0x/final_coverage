/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 13:53:18 GMT 2022
 */

package com.neovisionaries.ws.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.neovisionaries.ws.client.SocketFactorySettings;
import javax.net.SocketFactory;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSocketFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sun.security.ssl.SSLSocketFactoryImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SocketFactorySettings_ESTest extends SocketFactorySettings_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SocketFactorySettings socketFactorySettings0 = new SocketFactorySettings();
      SocketFactorySettings socketFactorySettings1 = new SocketFactorySettings(socketFactorySettings0);
      assertFalse(socketFactorySettings1.equals((Object)socketFactorySettings0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SocketFactorySettings socketFactorySettings0 = new SocketFactorySettings();
      SocketFactory socketFactory0 = socketFactorySettings0.selectSocketFactory(true);
      socketFactorySettings0.setSocketFactory(socketFactory0);
      SocketFactory socketFactory1 = socketFactorySettings0.getSocketFactory();
      assertSame(socketFactory1, socketFactory0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SocketFactorySettings socketFactorySettings0 = new SocketFactorySettings();
      SSLSocketFactoryImpl sSLSocketFactoryImpl0 = (SSLSocketFactoryImpl)socketFactorySettings0.selectSocketFactory(true);
      socketFactorySettings0.setSSLSocketFactory(sSLSocketFactoryImpl0);
      SSLSocketFactoryImpl sSLSocketFactoryImpl1 = (SSLSocketFactoryImpl)socketFactorySettings0.getSSLSocketFactory();
      assertSame(sSLSocketFactoryImpl1, sSLSocketFactoryImpl0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SocketFactorySettings socketFactorySettings0 = new SocketFactorySettings();
      SSLContext sSLContext0 = SSLContext.getDefault();
      socketFactorySettings0.setSSLContext(sSLContext0);
      SSLContext sSLContext1 = socketFactorySettings0.getSSLContext();
      assertSame(sSLContext1, sSLContext0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SocketFactorySettings socketFactorySettings0 = new SocketFactorySettings();
      SocketFactory socketFactory0 = socketFactorySettings0.selectSocketFactory(false);
      assertNotNull(socketFactory0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SocketFactorySettings socketFactorySettings0 = new SocketFactorySettings();
      SSLContext sSLContext0 = SSLContext.getDefault();
      socketFactorySettings0.setSSLContext(sSLContext0);
      SocketFactory socketFactory0 = socketFactorySettings0.selectSocketFactory(true);
      assertNotNull(socketFactory0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SocketFactorySettings socketFactorySettings0 = new SocketFactorySettings();
      SSLContext sSLContext0 = socketFactorySettings0.getSSLContext();
      assertNull(sSLContext0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SocketFactorySettings socketFactorySettings0 = new SocketFactorySettings();
      SSLSocketFactory sSLSocketFactory0 = socketFactorySettings0.getSSLSocketFactory();
      assertNull(sSLSocketFactory0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SocketFactorySettings socketFactorySettings0 = new SocketFactorySettings();
      SocketFactory socketFactory0 = socketFactorySettings0.getSocketFactory();
      assertNull(socketFactory0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SocketFactorySettings socketFactorySettings0 = new SocketFactorySettings();
      SocketFactory socketFactory0 = socketFactorySettings0.selectSocketFactory(true);
      socketFactorySettings0.setSocketFactory(socketFactory0);
      SocketFactory socketFactory1 = socketFactorySettings0.selectSocketFactory(false);
      assertSame(socketFactory1, socketFactory0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SocketFactorySettings socketFactorySettings0 = null;
      try {
        socketFactorySettings0 = new SocketFactorySettings((SocketFactorySettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.neovisionaries.ws.client.SocketFactorySettings", e);
      }
  }
}
