/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 13:16:29 GMT 2022
 */

package com.neovisionaries.ws.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.neovisionaries.ws.client.PerMessageCompressionExtension;
import com.neovisionaries.ws.client.PerMessageDeflateExtension;
import com.neovisionaries.ws.client.WebSocketFrame;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WebSocketFrame_ESTest extends WebSocketFrame_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(9, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      assertNotNull(perMessageDeflateExtension0);
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      
      List<WebSocketFrame> list0 = WebSocketFrame.splitIfNecessary(webSocketFrame0, 9, perMessageDeflateExtension0);
      assertNull(list0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(9, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)15;
      byte[] byteArray1 = WebSocketFrame.mask(byteArray0, byteArray0);
      assertNotNull(byteArray1);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
      assertEquals(5, byteArray0.length);
      assertEquals(5, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = new byte[4];
      assertFalse(byteArray1.equals((Object)byteArray0));
      
      byte[] byteArray2 = WebSocketFrame.mask(byteArray0, byteArray1);
      assertNotNull(byteArray2);
      assertNotSame(byteArray0, byteArray2);
      assertNotSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray2);
      assertNotSame(byteArray1, byteArray0);
      assertNotSame(byteArray2, byteArray0);
      assertSame(byteArray2, byteArray1);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray2);
      assertEquals(5, byteArray0.length);
      assertEquals(4, byteArray1.length);
      assertEquals(4, byteArray2.length);
      assertFalse(byteArray0.equals((Object)byteArray1));
      assertFalse(byteArray1.equals((Object)byteArray0));
      assertFalse(byteArray2.equals((Object)byteArray0));
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = WebSocketFrame.mask(byteArray0, byteArray0);
      assertNotNull(byteArray1);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
      assertEquals(4, byteArray0.length);
      assertEquals(4, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame("PiE");
      assertNotNull(webSocketFrame0);
      assertEquals(0, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertEquals(3, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(20585, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      
      String string0 = webSocketFrame0.getCloseReason();
      assertEquals("E", string0);
      assertNotNull(string0);
      assertEquals(0, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertEquals(3, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(20585, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode(15);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(15, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.isControlFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertEquals(15, webSocketFrame1.getOpcode());
      
      boolean boolean0 = webSocketFrame0.isControlFrame();
      assertTrue(boolean0);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(15, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isControlFrame());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame((-800), "M");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(64736, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(3, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      
      boolean boolean0 = webSocketFrame0.isControlFrame();
      assertTrue(boolean0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(64736, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(3, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(9, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isContinuationFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode((byte)7);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(9, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertEquals(7, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertEquals(7, webSocketFrame1.getOpcode());
      assertEquals(9, webSocketFrame1.getPayloadLength());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isBinaryFrame());
      
      boolean boolean0 = webSocketFrame0.isDataFrame();
      assertTrue(boolean0);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(9, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertEquals(7, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getCloseCode());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame("rl>Nce:av4aIgxE");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(29292, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(15, webSocketFrame0.getPayloadLength());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      
      boolean boolean0 = webSocketFrame0.isDataFrame();
      assertTrue(boolean0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(29292, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(15, webSocketFrame0.getPayloadLength());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode((byte)62);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(62, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertEquals(62, webSocketFrame1.getOpcode());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      
      boolean boolean0 = webSocketFrame0.isPongFrame();
      assertFalse(boolean0);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(62, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getPayloadLength());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(9, webSocketFrame0.getPayloadLength());
      
      boolean boolean0 = webSocketFrame0.isPingFrame();
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(9, webSocketFrame0.getPayloadLength());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame("\"4rAihrKM=#nYioY{");
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(17, webSocketFrame0.getPayloadLength());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(8756, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      
      boolean boolean0 = webSocketFrame0.isCloseFrame();
      assertFalse(boolean0);
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(17, webSocketFrame0.getPayloadLength());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(8756, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame((String) null);
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode((byte) (-15));
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals((-15), webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals((-15), webSocketFrame1.getOpcode());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      assertNotNull(perMessageDeflateExtension0);
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      
      List<WebSocketFrame> list0 = WebSocketFrame.splitIfNecessary(webSocketFrame1, (-424), perMessageDeflateExtension0);
      assertNull(list0);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals((-15), webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals((-15), webSocketFrame1.getOpcode());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(4, byteArray0.length);
      assertEquals(2, webSocketFrame0.getOpcode());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(4, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv3(false);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(4, byteArray0.length);
      assertEquals(2, webSocketFrame0.getOpcode());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(4, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(2, webSocketFrame1.getOpcode());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertEquals(4, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isTextFrame());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isPongFrame());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.getFin());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv2(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv2());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isPingFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertEquals(9, webSocketFrame1.getOpcode());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isDataFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setRsv3(true);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getRsv2());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isPingFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertEquals(9, webSocketFrame1.getOpcode());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(9, webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isPongFrame());
      assertTrue(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertTrue(webSocketFrame2.getFin());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isTextFrame());
      assertTrue(webSocketFrame2.getRsv3());
      assertTrue(webSocketFrame2.isPingFrame());
      assertTrue(webSocketFrame2.isControlFrame());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isDataFrame());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame((String) null);
      assertNotNull(webSocketFrame0);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv1(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv1());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setRsv3(false);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame2.getRsv3());
      assertTrue(webSocketFrame2.getRsv1());
      assertTrue(webSocketFrame2.isTextFrame());
      assertTrue(webSocketFrame2.getFin());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertEquals(1, webSocketFrame2.getOpcode());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.isPingFrame());
      assertTrue(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isBinaryFrame());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertFalse(webSocketFrame0.getFin());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(0, webSocketFrame0.getOpcode());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode((-2692));
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertFalse(webSocketFrame0.getFin());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals((-2692), webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame1.getFin());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals((-2692), webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setRsv3(false);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertFalse(webSocketFrame0.getFin());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals((-2692), webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertEquals((-2692), webSocketFrame2.getOpcode());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isTextFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.getRsv3());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(7, byteArray0.length);
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(7, webSocketFrame0.getPayloadLength());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv3(false);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(7, byteArray0.length);
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(7, webSocketFrame0.getPayloadLength());
      assertEquals(10, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(7, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(4, byteArray0.length);
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(4, webSocketFrame0.getPayloadLength());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getCloseCode());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv2(false);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(4, byteArray0.length);
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(4, webSocketFrame0.getPayloadLength());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.isBinaryFrame());
      assertEquals(2, webSocketFrame1.getOpcode());
      assertEquals(4, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame((String) null);
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getRsv2());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv3(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.hasPayload());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isBinaryFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setRsv2(true);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.getRsv2());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertTrue(webSocketFrame2.getFin());
      assertTrue(webSocketFrame2.isTextFrame());
      assertTrue(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertEquals(1, webSocketFrame2.getOpcode());
      assertTrue(webSocketFrame2.isDataFrame());
      assertTrue(webSocketFrame2.getRsv3());
      assertFalse(webSocketFrame2.isPingFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isPongFrame());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame((String) null);
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv1(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.isTextFrame());
      assertTrue(webSocketFrame1.getFin());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv1());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setRsv2(false);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.isTextFrame());
      assertTrue(webSocketFrame1.getFin());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv1());
      assertTrue(webSocketFrame2.isDataFrame());
      assertTrue(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.getRsv3());
      assertTrue(webSocketFrame2.getRsv1());
      assertEquals(1, webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertTrue(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv2());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.getFin());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode((byte) (-127));
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals((-127), webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals((-127), webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setRsv2(true);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals((-127), webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals((-127), webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertEquals((-127), webSocketFrame2.getOpcode());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.getRsv3());
      assertFalse(webSocketFrame2.isPongFrame());
      assertTrue(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.isTextFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isPingFrame());
      assertTrue(webSocketFrame2.getFin());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame("");
      assertNotNull(webSocketFrame0);
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setCloseFramePayload(0, "");
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.hasPayload());
      assertEquals(2, webSocketFrame1.getPayloadLength());
      assertEquals(0, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isCloseFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setRsv2(true);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.getRsv2());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isPingFrame());
      assertTrue(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.getFin());
      assertEquals(0, webSocketFrame2.getCloseCode());
      assertEquals(0, webSocketFrame2.getOpcode());
      assertEquals(2, webSocketFrame2.getPayloadLength());
      assertTrue(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.isDataFrame());
      assertTrue(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.getRsv3());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame("c_H8NK[q}r>]n$N");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertEquals(25439, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(15, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv3(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getRsv3());
      assertEquals(25439, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(15, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isPongFrame());
      assertTrue(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertEquals(25439, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertEquals(15, webSocketFrame1.getPayloadLength());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.getFin());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setRsv1(true);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getRsv3());
      assertEquals(25439, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(15, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertTrue(webSocketFrame2.hasPayload());
      assertEquals(1, webSocketFrame2.getOpcode());
      assertTrue(webSocketFrame2.getRsv3());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertTrue(webSocketFrame2.isTextFrame());
      assertEquals(25439, webSocketFrame2.getCloseCode());
      assertEquals(15, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertTrue(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertTrue(webSocketFrame2.getFin());
      assertTrue(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.getRsv2());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv2(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv2());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame1.hasPayload());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.getFin());
      assertTrue(webSocketFrame1.isCloseFrame());
      assertEquals(8, webSocketFrame1.getOpcode());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setRsv1(true);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.getRsv2());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame1.hasPayload());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv1());
      assertTrue(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.getFin());
      assertTrue(webSocketFrame1.isCloseFrame());
      assertEquals(8, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.isTextFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.getRsv3());
      assertFalse(webSocketFrame2.isDataFrame());
      assertTrue(webSocketFrame2.getRsv1());
      assertTrue(webSocketFrame2.isControlFrame());
      assertTrue(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.hasPayload());
      assertTrue(webSocketFrame2.isCloseFrame());
      assertEquals(8, webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isPongFrame());
      assertTrue(webSocketFrame2.getFin());
      assertEquals(0, webSocketFrame2.getPayloadLength());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isControlFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv1(false);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertTrue(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertEquals(9, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isBinaryFrame());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(1, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode((-1942));
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals((-1942), webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(1, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals((-1942), webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(1, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setRsv1(true);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals((-1942), webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(1, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv1());
      assertEquals((-1942), webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(1, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertEquals(1, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertTrue(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isDataFrame());
      assertEquals((-1942), webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.isTextFrame());
      assertTrue(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.getRsv3());
      assertTrue(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isPongFrame());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setPayload(byteArray0);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1, webSocketFrame1.getPayloadLength());
      assertEquals(2, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame("");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv3(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isControlFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.getRsv3());
      assertEquals(0, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv1());
      
      byte[] byteArray0 = new byte[6];
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setPayload(byteArray0);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(6, byteArray0.length);
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.getRsv3());
      assertEquals(6, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.getRsv2());
      assertTrue(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isDataFrame());
      assertTrue(webSocketFrame2.hasPayload());
      assertTrue(webSocketFrame2.getRsv3());
      assertEquals(0, webSocketFrame2.getOpcode());
      assertEquals(0, webSocketFrame2.getCloseCode());
      assertEquals(6, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.isCloseFrame());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv2(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv1());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(9, webSocketFrame1.getOpcode());
      
      byte[] byteArray0 = new byte[8];
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setPayload(byteArray0);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(8, byteArray0.length);
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(8, webSocketFrame0.getPayloadLength());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.isControlFrame());
      assertEquals(8, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv1());
      assertTrue(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(9, webSocketFrame1.getOpcode());
      assertEquals(0, webSocketFrame2.getCloseCode());
      assertTrue(webSocketFrame2.isControlFrame());
      assertEquals(9, webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertTrue(webSocketFrame2.getFin());
      assertTrue(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertEquals(8, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.getRsv3());
      assertTrue(webSocketFrame2.getRsv2());
      assertTrue(webSocketFrame2.hasPayload());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      assertNotNull(webSocketFrame0);
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      
      byte[] byteArray0 = new byte[1];
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv1(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertEquals(10, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.hasPayload());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setPayload(byteArray0);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(1, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(10, webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.getRsv3());
      assertTrue(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertTrue(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.isTextFrame());
      assertTrue(webSocketFrame2.isPongFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertTrue(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isPingFrame());
      assertEquals(1, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isDataFrame());
      assertTrue(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.getRsv2());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode((-3524));
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals((-3524), webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals((-3524), webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isPingFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setPayload((byte[]) null);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals((-3524), webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals((-3524), webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertTrue(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.getRsv3());
      assertFalse(webSocketFrame2.isPingFrame());
      assertEquals((-3524), webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isTextFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isBinaryFrame());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame("");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setPayload("_H)Nz{$&7mAr{avi");
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(16, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(24392, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertEquals(16, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isTextFrame());
      assertTrue(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(9, webSocketFrame1.getOpcode());
      assertEquals(24392, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isBinaryFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setPayload("");
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(8, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.getFin());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(1, webSocketFrame0.getPayloadLength());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setPayload("\u0000");
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(1, webSocketFrame0.getPayloadLength());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertEquals(2, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertEquals(1, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.getFin());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame((String) null);
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv3(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.getRsv3());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertTrue(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.getRsv3());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.isDataFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setPayload("");
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.getRsv3());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertTrue(webSocketFrame2.getRsv3());
      assertTrue(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertTrue(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.getRsv2());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertEquals(1, webSocketFrame2.getOpcode());
      assertTrue(webSocketFrame2.isDataFrame());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv2(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertEquals(10, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setPayload((String) null);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.isDataFrame());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertTrue(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv3());
      assertEquals(10, webSocketFrame2.getOpcode());
      assertTrue(webSocketFrame2.getRsv2());
      assertTrue(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.hasPayload());
      assertTrue(webSocketFrame2.isPongFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.isTextFrame());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      assertNotNull(webSocketFrame0);
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv1(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertEquals(10, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.isPongFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setPayload("\u0000");
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertTrue(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isTextFrame());
      assertEquals(10, webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.getRsv3());
      assertTrue(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertTrue(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.isPingFrame());
      assertTrue(webSocketFrame2.isControlFrame());
      assertTrue(webSocketFrame2.isPongFrame());
      assertEquals(1, webSocketFrame2.getPayloadLength());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode((-1433));
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals((-1433), webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertEquals((-1433), webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setPayload("G");
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals((-1433), webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isPingFrame());
      assertEquals((-1433), webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertEquals(1, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertEquals(1, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isDataFrame());
      assertEquals((-1433), webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.getRsv2());
      assertTrue(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.getRsv3());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.isTextFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isPongFrame());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = new WebSocketFrame();
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setPayload("\u0000\u0000\u0000\u0000");
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(4, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertEquals(0, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getFin());
      assertTrue(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertEquals(4, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isPongFrame());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isBinaryFrame());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode(10);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(10, webSocketFrame1.getOpcode());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame((String) null);
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isDataFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode(9);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertTrue(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertEquals(9, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isBinaryFrame());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame(3);
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(3, webSocketFrame0.getCloseCode());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode(8);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(3, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals(8, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.isControlFrame());
      assertEquals(3, webSocketFrame1.getCloseCode());
      assertEquals(2, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isCloseFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode(2);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals(2, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame();
      assertNotNull(webSocketFrame0);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv3(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(8, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setOpcode(1);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertEquals(1, webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertTrue(webSocketFrame2.getFin());
      assertTrue(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.isPingFrame());
      assertTrue(webSocketFrame2.isDataFrame());
      assertTrue(webSocketFrame2.getRsv3());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isPongFrame());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv2(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(10, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setOpcode(2899);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(2899, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertEquals(2899, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertTrue(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertEquals(2899, webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isPingFrame());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertTrue(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.getRsv3());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(5, byteArray0.length);
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(5, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertEquals(0, webSocketFrame0.getCloseCode());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv1(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(5, byteArray0.length);
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertEquals(5, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertEquals(0, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isPongFrame());
      assertEquals(5, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.isContinuationFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setOpcode(1323);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(5, byteArray0.length);
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1323, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertEquals(5, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertEquals(1323, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isPongFrame());
      assertEquals(5, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.isTextFrame());
      assertEquals(1323, webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertTrue(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.getRsv3());
      assertTrue(webSocketFrame2.getRsv1());
      assertEquals(5, webSocketFrame2.getPayloadLength());
      assertEquals(0, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.isPingFrame());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame(0);
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode(0);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(2, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals(0, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.getFin());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isCloseFrame());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(3, byteArray0.length);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(3, webSocketFrame0.getPayloadLength());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setMask(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(3, byteArray0.length);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(3, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame1.hasPayload());
      assertEquals(3, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.isPingFrame());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(9, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(2, webSocketFrame0.getOpcode());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setMask(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals(2, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isTextFrame());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertEquals(1, webSocketFrame1.getPayloadLength());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame(")A`s9}T:&.4W~");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(10561, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(13, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv3(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(10561, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(13, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(13, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isControlFrame());
      assertEquals(10561, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(0, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertTrue(webSocketFrame1.isContinuationFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setMask(true);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(10561, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(13, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(13, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isControlFrame());
      assertEquals(10561, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(0, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertTrue(webSocketFrame1.isContinuationFrame());
      assertEquals(0, webSocketFrame2.getOpcode());
      assertTrue(webSocketFrame2.hasPayload());
      assertTrue(webSocketFrame2.getRsv3());
      assertTrue(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertEquals(13, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertEquals(10561, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isDataFrame());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv2(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv2());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv1());
      assertTrue(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.isPongFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(10, webSocketFrame1.getOpcode());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setMask(false);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv2());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.isPingFrame());
      assertTrue(webSocketFrame2.isPongFrame());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertTrue(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertEquals(10, webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertTrue(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isTextFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.hasPayload());
      assertTrue(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.getRsv3());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame("INTERRUPTED_IN_READING");
      assertNotNull(webSocketFrame0);
      assertEquals(18766, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(22, webSocketFrame0.getPayloadLength());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv1(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertEquals(18766, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(22, webSocketFrame0.getPayloadLength());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertEquals(22, webSocketFrame1.getPayloadLength());
      assertEquals(18766, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.getRsv1());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.hasPayload());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setMask(true);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertEquals(18766, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(22, webSocketFrame0.getPayloadLength());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertEquals(1, webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.getRsv3());
      assertTrue(webSocketFrame2.getRsv1());
      assertTrue(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertTrue(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.isPingFrame());
      assertTrue(webSocketFrame2.isDataFrame());
      assertEquals(18766, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertTrue(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertEquals(22, webSocketFrame2.getPayloadLength());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = new WebSocketFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode((-1944));
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals((-1944), webSocketFrame0.getOpcode());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertEquals((-1944), webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setMask(true);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals((-1944), webSocketFrame0.getOpcode());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.isTextFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getFin());
      assertEquals((-1944), webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.getRsv3());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isDataFrame());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame("gMxx)");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertEquals(26445, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(5, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setFin(false);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertEquals(26445, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(5, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertEquals(26445, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.hasPayload());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.getFin());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(5, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isControlFrame());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame(1008, "bP&?Z_GNgyE}2%3b;wz");
      assertNotNull(webSocketFrame0);
      assertEquals(1008, webSocketFrame0.getCloseCode());
      assertEquals(21, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setFin(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertEquals(1008, webSocketFrame0.getCloseCode());
      assertEquals(21, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(1008, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(21, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.getRsv1());
      assertTrue(webSocketFrame1.isCloseFrame());
      assertEquals(8, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPingFrame());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame("\"4rAihrKM=#nYioY{");
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertEquals(8756, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(17, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(9, webSocketFrame0.getOpcode());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv3(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertEquals(8756, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(17, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertEquals(8756, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertTrue(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(17, webSocketFrame1.getPayloadLength());
      assertEquals(9, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isBinaryFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setFin(false);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isPingFrame());
      assertEquals(8756, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(17, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame1.getFin());
      assertTrue(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertEquals(8756, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertTrue(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(17, webSocketFrame1.getPayloadLength());
      assertEquals(9, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.isTextFrame());
      assertTrue(webSocketFrame2.getRsv3());
      assertTrue(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertEquals(8756, webSocketFrame2.getCloseCode());
      assertEquals(9, webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertTrue(webSocketFrame2.isControlFrame());
      assertEquals(17, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.getFin());
      assertTrue(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.isCloseFrame());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame("");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv2(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame1.getFin());
      assertTrue(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals(0, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.getRsv2());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isCloseFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setFin(true);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals(0, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.getRsv2());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertEquals(0, webSocketFrame2.getOpcode());
      assertTrue(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isTextFrame());
      assertTrue(webSocketFrame2.getFin());
      assertTrue(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.getRsv3());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.hasPayload());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.getFin());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv1(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals(10, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.getRsv1());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isPongFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isDataFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setFin(true);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertEquals(10, webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertTrue(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.getRsv3());
      assertTrue(webSocketFrame2.getRsv1());
      assertTrue(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.isPingFrame());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertTrue(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.isTextFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.getFin());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode((byte) (-127));
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals((-127), webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals((-127), webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setFin(false);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals((-127), webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getFin());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals((-127), webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame2.hasPayload());
      assertEquals((-127), webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.isTextFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv3());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.isDataFrame());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame("3Ja");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(13130, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertEquals(3, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv3());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setCloseFramePayload(44, "");
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(44, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertEquals(44, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(10, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertEquals(2, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.isPongFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isDataFrame());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame();
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setCloseFramePayload((byte) (-13), "$.W");
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(5, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(65523, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals(65523, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertEquals(8, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isTextFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isPongFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertEquals(5, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isPingFrame());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame();
      assertNotNull(webSocketFrame0);
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv3(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertEquals(9, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isDataFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setCloseFramePayload((byte) (-91), "L,0'FxP&IerSFkj");
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertTrue(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(17, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertEquals(65445, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertTrue(webSocketFrame2.getRsv3());
      assertFalse(webSocketFrame2.isTextFrame());
      assertEquals(17, webSocketFrame2.getPayloadLength());
      assertTrue(webSocketFrame2.hasPayload());
      assertEquals(9, webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertTrue(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertTrue(webSocketFrame2.isPingFrame());
      assertEquals(65445, webSocketFrame2.getCloseCode());
      assertTrue(webSocketFrame2.isControlFrame());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame("");
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getFin());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv2(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getFin());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertEquals(0, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getFin());
      assertTrue(webSocketFrame1.isContinuationFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setCloseFramePayload(0, "");
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.getRsv3());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertEquals(0, webSocketFrame2.getOpcode());
      assertEquals(2, webSocketFrame2.getPayloadLength());
      assertEquals(0, webSocketFrame2.getCloseCode());
      assertTrue(webSocketFrame2.hasPayload());
      assertTrue(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.isPingFrame());
      assertTrue(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.isPongFrame());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame("?)b]7xn\"6m-.=CP'");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(16169, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertEquals(16, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv1(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(16169, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertEquals(16, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(16169, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.isPingFrame());
      assertEquals(16, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.getFin());
      assertEquals(9, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame1.setCloseFramePayload(513, ".\"#I2vLo }s");
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(513, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(13, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals(13, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(513, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.getFin());
      assertEquals(9, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.getRsv3());
      assertEquals(13, webSocketFrame2.getPayloadLength());
      assertTrue(webSocketFrame2.getRsv1());
      assertTrue(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertEquals(9, webSocketFrame2.getOpcode());
      assertTrue(webSocketFrame2.isControlFrame());
      assertTrue(webSocketFrame2.isPingFrame());
      assertTrue(webSocketFrame2.getFin());
      assertEquals(513, webSocketFrame2.getCloseCode());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame("");
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getFin());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setCloseFramePayload(0, "");
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(0, webSocketFrame1.getOpcode());
      assertEquals(2, webSocketFrame1.getPayloadLength());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isContinuationFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setFin(true);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(0, webSocketFrame2.getCloseCode());
      assertEquals(2, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isPongFrame());
      assertTrue(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.isPingFrame());
      assertTrue(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.isDataFrame());
      assertEquals(0, webSocketFrame2.getOpcode());
      assertTrue(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.getRsv3());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame((String) null);
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode((byte) (-15));
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals((-15), webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals((-15), webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isDataFrame());
      
      WebSocketFrame webSocketFrame2 = webSocketFrame0.setCloseFramePayload(17, "");
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertEquals(17, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals((-15), webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(2, webSocketFrame2.getPayloadLength());
      assertTrue(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.getRsv3());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertEquals((-15), webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertTrue(webSocketFrame2.getFin());
      assertEquals(17, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.isBinaryFrame());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv3(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getRsv3());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(9, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.hasPayload());
      
      boolean boolean0 = webSocketFrame0.getRsv3();
      assertTrue(boolean0);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getRsv3());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      assertNotNull(webSocketFrame0);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isContinuationFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv2(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(10, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv1());
      
      boolean boolean0 = webSocketFrame0.getRsv2();
      assertTrue(boolean0);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isContinuationFrame());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(9, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv1(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(9, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals(2, webSocketFrame1.getOpcode());
      assertEquals(9, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.getRsv1());
      assertTrue(webSocketFrame1.isDataFrame());
      
      boolean boolean0 = webSocketFrame1.getRsv1();
      assertTrue(boolean0);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(9, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals(2, webSocketFrame1.getOpcode());
      assertEquals(9, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.getRsv1());
      assertTrue(webSocketFrame1.isDataFrame());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = new WebSocketFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      
      byte[] byteArray0 = webSocketFrame0.getPayload();
      assertNull(byteArray0);
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      
      int int0 = webSocketFrame0.getOpcode();
      assertEquals(10, int0);
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPongFrame());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame((-1351), "");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(64185, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode((-1351));
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals((-1351), webSocketFrame0.getOpcode());
      assertEquals(64185, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(2, webSocketFrame1.getPayloadLength());
      assertEquals((-1351), webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(64185, webSocketFrame1.getCloseCode());
      
      int int0 = webSocketFrame0.getOpcode();
      assertEquals((-1351), int0);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals((-1351), webSocketFrame0.getOpcode());
      assertEquals(64185, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isCloseFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setMask(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.isCloseFrame());
      assertEquals(8, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isPongFrame());
      
      boolean boolean0 = webSocketFrame0.getMask();
      assertTrue(boolean0);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isCloseFrame());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      assertNotNull(webSocketFrame0);
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      
      boolean boolean0 = webSocketFrame0.getFin();
      assertTrue(boolean0);
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame("\u0000\u0000");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame((String) null);
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertEquals(9, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isCloseFrame());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame("\u0000\u0000\u0000\u0000");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(4, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getCloseCode());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame("\u0000\u0000");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame(0, "CONTINUATION");
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(14, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame(0);
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      
      int int0 = webSocketFrame0.getCloseCode();
      assertEquals(0, int0);
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(3, byteArray0.length);
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(3, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isDataFrame());
      
      WebSocketFrame webSocketFrame1 = WebSocketFrame.compressFrame(webSocketFrame0, (PerMessageCompressionExtension) null);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(3, byteArray0.length);
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(3, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isPongFrame());
      assertEquals(10, webSocketFrame1.getOpcode());
      assertEquals(3, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertEquals(0, webSocketFrame1.getCloseCode());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv2());
      
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      assertNotNull(perMessageDeflateExtension0);
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      
      WebSocketFrame webSocketFrame1 = WebSocketFrame.compressFrame(webSocketFrame0, perMessageDeflateExtension0);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isPingFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertEquals(2, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame((String) null);
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv3(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.getRsv3());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.getFin());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      assertNotNull(perMessageDeflateExtension0);
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      
      WebSocketFrame webSocketFrame2 = WebSocketFrame.compressFrame(webSocketFrame0, perMessageDeflateExtension0);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.getRsv3());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.getRsv2());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isControlFrame());
      assertEquals(1, webSocketFrame2.getOpcode());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertTrue(webSocketFrame2.isDataFrame());
      assertTrue(webSocketFrame2.getRsv3());
      assertFalse(webSocketFrame2.isPongFrame());
      assertTrue(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertTrue(webSocketFrame2.getFin());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame();
      assertNotNull(webSocketFrame0);
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv2(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv1());
      assertEquals(9, webSocketFrame1.getOpcode());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isPongFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      assertNotNull(perMessageDeflateExtension0);
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      
      WebSocketFrame webSocketFrame2 = WebSocketFrame.compressFrame(webSocketFrame1, perMessageDeflateExtension0);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.getRsv1());
      assertEquals(9, webSocketFrame1.getOpcode());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isPongFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertTrue(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.getRsv3());
      assertTrue(webSocketFrame2.getRsv2());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertTrue(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isDataFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertTrue(webSocketFrame2.getFin());
      assertEquals(9, webSocketFrame2.getOpcode());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame("gMxx)");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(26445, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(5, webSocketFrame0.getPayloadLength());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv1(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(26445, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(5, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv1());
      assertTrue(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(5, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.hasPayload());
      assertEquals(26445, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      assertNotNull(perMessageDeflateExtension0);
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      
      WebSocketFrame webSocketFrame2 = WebSocketFrame.compressFrame(webSocketFrame1, perMessageDeflateExtension0);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(26445, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(5, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.getRsv1());
      assertTrue(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(5, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.hasPayload());
      assertEquals(26445, webSocketFrame1.getCloseCode());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertTrue(webSocketFrame2.isDataFrame());
      assertTrue(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertTrue(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertEquals(5, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.getRsv3());
      assertEquals(1, webSocketFrame2.getOpcode());
      assertTrue(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertEquals(26445, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertTrue(webSocketFrame2.getFin());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame((String) null);
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv3());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setOpcode((byte) (-15));
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals((-15), webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv1());
      assertEquals((-15), webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      assertNotNull(perMessageDeflateExtension0);
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      
      WebSocketFrame webSocketFrame2 = WebSocketFrame.compressFrame(webSocketFrame1, perMessageDeflateExtension0);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals((-15), webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv1());
      assertEquals((-15), webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertFalse(webSocketFrame2.isPingFrame());
      assertEquals(0, webSocketFrame2.getPayloadLength());
      assertFalse(webSocketFrame2.isDataFrame());
      assertEquals((-15), webSocketFrame2.getOpcode());
      assertTrue(webSocketFrame2.getFin());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.getRsv3());
      assertFalse(webSocketFrame2.getRsv2());
      assertFalse(webSocketFrame2.getRsv1());
      assertFalse(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isTextFrame());
      assertEquals(1005, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isContinuationFrame());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      
      WebSocketFrame webSocketFrame1 = WebSocketFrame.compressFrame(webSocketFrame0, (PerMessageCompressionExtension) null);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertEquals(0, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame("rR:ExEFD MUHX'KFB");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertEquals(29266, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertEquals(17, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      
      byte[] byteArray0 = new byte[3];
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setPayload(byteArray0);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(3, byteArray0.length);
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(3, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertTrue(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.getFin());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertEquals(3, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      
      WebSocketFrame webSocketFrame2 = WebSocketFrame.compressFrame(webSocketFrame1, (PerMessageCompressionExtension) null);
      assertNotNull(webSocketFrame2);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame2);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertSame(webSocketFrame2, webSocketFrame1);
      assertSame(webSocketFrame2, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(3, byteArray0.length);
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(3, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertTrue(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.getFin());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertEquals(3, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame2.isPingFrame());
      assertFalse(webSocketFrame2.isCloseFrame());
      assertTrue(webSocketFrame2.getFin());
      assertEquals(0, webSocketFrame2.getCloseCode());
      assertFalse(webSocketFrame2.isPongFrame());
      assertFalse(webSocketFrame2.getRsv3());
      assertFalse(webSocketFrame2.isBinaryFrame());
      assertFalse(webSocketFrame2.isControlFrame());
      assertFalse(webSocketFrame2.getRsv2());
      assertTrue(webSocketFrame2.isTextFrame());
      assertFalse(webSocketFrame2.getRsv1());
      assertEquals(3, webSocketFrame2.getPayloadLength());
      assertEquals(1, webSocketFrame2.getOpcode());
      assertTrue(webSocketFrame2.hasPayload());
      assertFalse(webSocketFrame2.isContinuationFrame());
      assertTrue(webSocketFrame2.isDataFrame());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      assertNotNull(perMessageDeflateExtension0);
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      
      // Undeclared exception!
      try { 
        WebSocketFrame.splitIfNecessary((WebSocketFrame) null, (-2557), perMessageDeflateExtension0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.neovisionaries.ws.client.WebSocketFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      assertNotNull(perMessageDeflateExtension0);
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      
      // Undeclared exception!
      try { 
        WebSocketFrame.compressFrame((WebSocketFrame) null, perMessageDeflateExtension0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.neovisionaries.ws.client.WebSocketFrame", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      assertNotNull(perMessageDeflateExtension0);
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame("permessage-deflate");
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertEquals(28773, webSocketFrame0.getCloseCode());
      assertEquals(18, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.getFin());
      
      // Undeclared exception!
      try { 
        WebSocketFrame.compressFrame(webSocketFrame0, perMessageDeflateExtension0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.zip.Deflater
         //
         verifyException("com.neovisionaries.ws.client.DeflateCompressor", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setCloseFramePayload(0, "");
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(2, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(9, webSocketFrame1.getOpcode());
      
      String string0 = webSocketFrame1.getCloseReason();
      assertNull(string0);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(2, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals(0, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(9, webSocketFrame1.getOpcode());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame("MESSAGE_CONSTRUCTION_ERROR");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(19781, webSocketFrame0.getCloseCode());
      assertEquals(26, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isDataFrame());
      
      String string0 = webSocketFrame0.getCloseReason();
      assertEquals("SSAGE_CONSTRUCTION_ERROR", string0);
      assertNotNull(string0);
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(19781, webSocketFrame0.getCloseCode());
      assertEquals(26, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isDataFrame());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      
      String string0 = webSocketFrame0.getCloseReason();
      assertNull(string0);
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      
      int int0 = webSocketFrame0.getCloseCode();
      assertEquals(1005, int0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame((-761), "");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertEquals(64775, webSocketFrame0.getCloseCode());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      
      int int0 = webSocketFrame0.getCloseCode();
      assertEquals(64775, int0);
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertEquals(64775, webSocketFrame0.getCloseCode());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertEquals(1, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setCloseFramePayload((byte)1, "");
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertFalse(webSocketFrame0.isTextFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertEquals(1, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.getFin());
      assertEquals(1, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertEquals(2, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isPingFrame());
      assertEquals(2, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.isDataFrame());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame((String) null);
      assertNotNull(webSocketFrame0);
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setCloseFramePayload((-761), (String) null);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(64775, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.hasPayload());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertEquals(64775, webSocketFrame1.getCloseCode());
      assertEquals(2, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.isTextFrame());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setPayload(byteArray0);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertFalse(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.getFin());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertTrue(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(0, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame((-469), (String) null);
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(65067, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isBinaryFrame());
      
      byte[] byteArray0 = new byte[1];
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setPayload(byteArray0);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals(1, byteArray0.length);
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertEquals(1, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.getRsv1());
      assertTrue(webSocketFrame1.isCloseFrame());
      assertEquals(8, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertEquals(1, webSocketFrame1.getPayloadLength());
      assertTrue(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isPongFrame());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = new WebSocketFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      
      int int0 = webSocketFrame0.getPayloadLength();
      assertEquals(0, int0);
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame(3633);
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(3633, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      
      int int0 = webSocketFrame0.getPayloadLength();
      assertEquals(2, int0);
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(3633, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPongFrame());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame(1495);
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(1495, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.getFin());
      
      boolean boolean0 = webSocketFrame0.isBinaryFrame();
      assertFalse(boolean0);
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(1495, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(2, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.getFin());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(9, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      
      boolean boolean0 = webSocketFrame0.isBinaryFrame();
      assertTrue(boolean0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(9, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      
      boolean boolean0 = webSocketFrame0.isTextFrame();
      assertFalse(boolean0);
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(9, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      
      boolean boolean0 = webSocketFrame0.isContinuationFrame();
      assertFalse(boolean0);
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(10, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertTrue(webSocketFrame0.isPongFrame());
      assertTrue(webSocketFrame0.isControlFrame());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      
      boolean boolean0 = webSocketFrame0.getRsv1();
      assertFalse(boolean0);
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame();
      assertNotNull(webSocketFrame0);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      
      boolean boolean0 = webSocketFrame0.getFin();
      assertFalse(boolean0);
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame("XqtpS%7Y9Q3_~9vDbg");
      assertNotNull(webSocketFrame0);
      assertEquals(22641, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(18, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
      
      byte[] byteArray0 = webSocketFrame0.getPayload();
      assertNotNull(byteArray0);
      assertEquals(18, byteArray0.length);
      assertEquals(22641, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(18, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isCloseFrame());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = new WebSocketFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getFin());
      
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      assertNotNull(perMessageDeflateExtension0);
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      
      List<WebSocketFrame> list0 = WebSocketFrame.splitIfNecessary(webSocketFrame0, 2853, perMessageDeflateExtension0);
      assertNull(list0);
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = new WebSocketFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      
      List<WebSocketFrame> list0 = WebSocketFrame.splitIfNecessary(webSocketFrame0, 0, (PerMessageCompressionExtension) null);
      assertNull(list0);
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.getFin());
      assertEquals(0, webSocketFrame0.getPayloadLength());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isControlFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setFin(false);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isControlFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertEquals(2, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertTrue(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isTextFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isPingFrame());
      
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      assertNotNull(perMessageDeflateExtension0);
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      
      // Undeclared exception!
      try { 
        WebSocketFrame.splitIfNecessary(webSocketFrame0, (-52), perMessageDeflateExtension0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -52
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isPongFrame());
      
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      assertNotNull(perMessageDeflateExtension0);
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      
      WebSocketFrame webSocketFrame1 = WebSocketFrame.compressFrame(webSocketFrame0, perMessageDeflateExtension0);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals("permessage-deflate", perMessageDeflateExtension0.getName());
      assertEquals(32768, perMessageDeflateExtension0.getServerWindowSize());
      assertFalse(perMessageDeflateExtension0.isClientNoContextTakeover());
      assertEquals(32768, perMessageDeflateExtension0.getClientWindowSize());
      assertFalse(perMessageDeflateExtension0.isServerNoContextTakeover());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.isCloseFrame());
      assertEquals(8, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isTextFrame());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.compressFrame((WebSocketFrame) null, (PerMessageCompressionExtension) null);
      assertNull(webSocketFrame0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = WebSocketFrame.mask(byteArray0, byteArray0);
      assertNotNull(byteArray1);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertArrayEquals(new byte[] {}, byteArray1);
      assertEquals(0, byteArray0.length);
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte[] byteArray1 = WebSocketFrame.mask(byteArray0, (byte[]) null);
      assertNull(byteArray1);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(8, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = WebSocketFrame.mask((byte[]) null, (byte[]) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertEquals(2, webSocketFrame0.getOpcode());
      
      String string0 = webSocketFrame0.toString();
      assertEquals("WebSocketFrame(FIN=1,RSV1=0,RSV2=0,RSV3=0,Opcode=BINARY,Length=0,Payload=null)", string0);
      assertNotNull(string0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray0.length);
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isDataFrame());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertEquals(2, webSocketFrame0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame("gMxx)");
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isDataFrame());
      assertEquals(26445, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertEquals(5, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv1(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isDataFrame());
      assertEquals(26445, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertEquals(5, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.getRsv1());
      assertEquals(5, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.isTextFrame());
      assertEquals(26445, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isPingFrame());
      
      String string0 = webSocketFrame1.toString();
      assertEquals("WebSocketFrame(FIN=1,RSV1=1,RSV2=0,RSV3=0,Opcode=TEXT,Length=5,Payload=compressed)", string0);
      assertNotNull(string0);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isDataFrame());
      assertEquals(26445, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isControlFrame());
      assertTrue(webSocketFrame0.isTextFrame());
      assertEquals(5, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame1.isDataFrame());
      assertTrue(webSocketFrame1.hasPayload());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertEquals(1, webSocketFrame1.getOpcode());
      assertTrue(webSocketFrame1.getRsv1());
      assertEquals(5, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isCloseFrame());
      assertTrue(webSocketFrame1.isTextFrame());
      assertEquals(26445, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isPingFrame());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      assertNotNull(webSocketFrame0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(5, byteArray0.length);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(5, webSocketFrame0.getPayloadLength());
      
      String string0 = webSocketFrame0.toString();
      assertEquals("WebSocketFrame(FIN=1,RSV1=0,RSV2=0,RSV3=0,Opcode=BINARY,Length=5,Payload=00 00 00 00 00)", string0);
      assertNotNull(string0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(5, byteArray0.length);
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertTrue(webSocketFrame0.hasPayload());
      assertEquals(2, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertTrue(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(0, webSocketFrame0.getCloseCode());
      assertEquals(5, webSocketFrame0.getPayloadLength());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame("gMxx)");
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(26445, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(5, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.hasPayload());
      
      String string0 = webSocketFrame0.toString();
      assertEquals("WebSocketFrame(FIN=1,RSV1=0,RSV2=0,RSV3=0,Opcode=TEXT,Length=5,Payload=\"gMxx)\")", string0);
      assertNotNull(string0);
      assertTrue(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(26445, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(5, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isDataFrame());
      assertEquals(1, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.hasPayload());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame();
      assertNotNull(webSocketFrame0);
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv3(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.hasPayload());
      assertEquals(0, webSocketFrame1.getOpcode());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertTrue(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getFin());
      assertTrue(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isCloseFrame());
      
      String string0 = webSocketFrame1.toString();
      assertEquals("WebSocketFrame(FIN=0,RSV1=0,RSV2=0,RSV3=1,Opcode=CONTINUATION,Length=0)", string0);
      assertNotNull(string0);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertFalse(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isDataFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertEquals(0, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getRsv3());
      assertFalse(webSocketFrame0.isTextFrame());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.isCloseFrame());
      assertFalse(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertFalse(webSocketFrame1.isControlFrame());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.getRsv2());
      assertFalse(webSocketFrame1.hasPayload());
      assertEquals(0, webSocketFrame1.getOpcode());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertTrue(webSocketFrame1.getRsv3());
      assertFalse(webSocketFrame1.isPingFrame());
      assertFalse(webSocketFrame1.getFin());
      assertTrue(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isDataFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame1.isCloseFrame());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame();
      assertNotNull(webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv1());
      assertFalse(webSocketFrame0.getRsv2());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv2(true);
      assertNotNull(webSocketFrame1);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.isCloseFrame());
      assertEquals(8, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
      
      String string0 = webSocketFrame1.toString();
      assertEquals("WebSocketFrame(FIN=1,RSV1=0,RSV2=1,RSV3=0,Opcode=CLOSE,Length=0,CloseCode=1005,Reason=null)", string0);
      assertNotNull(string0);
      assertSame(webSocketFrame0, webSocketFrame1);
      assertSame(webSocketFrame1, webSocketFrame0);
      assertFalse(webSocketFrame0.getRsv1());
      assertEquals(1005, webSocketFrame0.getCloseCode());
      assertFalse(webSocketFrame0.isTextFrame());
      assertFalse(webSocketFrame0.getRsv3());
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.getRsv2());
      assertFalse(webSocketFrame0.isDataFrame());
      assertFalse(webSocketFrame0.hasPayload());
      assertFalse(webSocketFrame0.isBinaryFrame());
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.isCloseFrame());
      assertEquals(0, webSocketFrame0.getPayloadLength());
      assertFalse(webSocketFrame0.isContinuationFrame());
      assertTrue(webSocketFrame0.isControlFrame());
      assertFalse(webSocketFrame0.isPongFrame());
      assertFalse(webSocketFrame0.isPingFrame());
      assertEquals(1005, webSocketFrame1.getCloseCode());
      assertFalse(webSocketFrame1.isTextFrame());
      assertFalse(webSocketFrame1.isContinuationFrame());
      assertFalse(webSocketFrame1.isBinaryFrame());
      assertFalse(webSocketFrame1.getRsv3());
      assertTrue(webSocketFrame1.isCloseFrame());
      assertEquals(8, webSocketFrame1.getOpcode());
      assertFalse(webSocketFrame1.getRsv1());
      assertFalse(webSocketFrame1.isDataFrame());
      assertFalse(webSocketFrame1.hasPayload());
      assertTrue(webSocketFrame1.getRsv2());
      assertTrue(webSocketFrame1.getFin());
      assertFalse(webSocketFrame1.isPongFrame());
      assertFalse(webSocketFrame1.isPingFrame());
      assertTrue(webSocketFrame1.isControlFrame());
      assertEquals(0, webSocketFrame1.getPayloadLength());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame((-1364), "permessage-deflate");
      String string0 = webSocketFrame0.toString();
      assertEquals("WebSocketFrame(FIN=1,RSV1=0,RSV2=0,RSV3=0,Opcode=CLOSE,Length=20,CloseCode=64172,Reason=\"permessage-deflate\")", string0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame("e");
      int int0 = webSocketFrame0.getCloseCode();
      assertTrue(webSocketFrame0.getFin());
      assertEquals(1005, int0);
      assertTrue(webSocketFrame0.isTextFrame());
      assertEquals(1, webSocketFrame0.getPayloadLength());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame((String) null);
      boolean boolean0 = webSocketFrame0.isTextFrame();
      assertTrue(boolean0);
      assertTrue(webSocketFrame0.getFin());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame();
      webSocketFrame0.getPayloadText();
      assertTrue(webSocketFrame0.isCloseFrame());
      assertTrue(webSocketFrame0.getFin());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      String string0 = webSocketFrame0.getPayloadText();
      assertTrue(webSocketFrame0.getFin());
      assertNotNull(string0);
      assertTrue(webSocketFrame0.isBinaryFrame());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame(byteArray0);
      boolean boolean0 = webSocketFrame0.hasPayload();
      assertTrue(boolean0);
      assertTrue(webSocketFrame0.isContinuationFrame());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame();
      boolean boolean0 = webSocketFrame0.hasPayload();
      assertFalse(boolean0);
      assertEquals(9, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getFin());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame();
      webSocketFrame0.setOpcode(4284);
      boolean boolean0 = webSocketFrame0.isControlFrame();
      assertEquals(4284, webSocketFrame0.getOpcode());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame();
      boolean boolean0 = webSocketFrame0.isControlFrame();
      assertTrue(webSocketFrame0.isContinuationFrame());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame(byteArray0);
      boolean boolean0 = webSocketFrame0.isDataFrame();
      assertFalse(boolean0);
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.isPongFrame());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = new WebSocketFrame();
      boolean boolean0 = webSocketFrame0.isDataFrame();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPongFrame(byteArray0);
      boolean boolean0 = webSocketFrame0.isPongFrame();
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(boolean0);
      assertTrue(webSocketFrame0.getFin());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = new WebSocketFrame();
      boolean boolean0 = webSocketFrame0.isPongFrame();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame();
      boolean boolean0 = webSocketFrame0.isPingFrame();
      assertTrue(webSocketFrame0.getFin());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = new WebSocketFrame();
      boolean boolean0 = webSocketFrame0.isPingFrame();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame();
      boolean boolean0 = webSocketFrame0.isCloseFrame();
      assertTrue(webSocketFrame0.getFin());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame();
      boolean boolean0 = webSocketFrame0.isCloseFrame();
      assertEquals(0, webSocketFrame0.getOpcode());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      // Undeclared exception!
      try { 
        WebSocketFrame.splitIfNecessary(webSocketFrame0, (-424), perMessageDeflateExtension0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.zip.Deflater
         //
         verifyException("com.neovisionaries.ws.client.DeflateCompressor", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame("XqtpS%7Y9Q3_~9vDbg");
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      WebSocketFrame.splitIfNecessary(webSocketFrame0, (byte)3, perMessageDeflateExtension0);
      assertEquals(3, webSocketFrame0.getPayloadLength());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = new WebSocketFrame();
      int int0 = webSocketFrame0.getOpcode();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame();
      webSocketFrame0.getMask();
      assertTrue(webSocketFrame0.getFin());
      assertTrue(webSocketFrame0.isCloseFrame());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createTextFrame("permessage-deflate");
      // Undeclared exception!
      try { 
        WebSocketFrame.splitIfNecessary(webSocketFrame0, 4, perMessageDeflateExtension0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.zip.Deflater
         //
         verifyException("com.neovisionaries.ws.client.DeflateCompressor", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createCloseFrame();
      webSocketFrame0.getRsv2();
      assertEquals(8, webSocketFrame0.getOpcode());
      assertTrue(webSocketFrame0.getFin());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createContinuationFrame("");
      boolean boolean0 = webSocketFrame0.isContinuationFrame();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createPingFrame(byteArray0);
      webSocketFrame0.getRsv3();
      assertFalse(webSocketFrame0.hasPayload());
      assertTrue(webSocketFrame0.getFin());
      assertEquals(9, webSocketFrame0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      WebSocketFrame webSocketFrame0 = WebSocketFrame.createBinaryFrame(byteArray0);
      WebSocketFrame webSocketFrame1 = webSocketFrame0.setRsv1(true);
      PerMessageDeflateExtension perMessageDeflateExtension0 = new PerMessageDeflateExtension();
      WebSocketFrame.splitIfNecessary(webSocketFrame1, (byte)3, perMessageDeflateExtension0);
      assertEquals(3, webSocketFrame1.getPayloadLength());
      assertFalse(webSocketFrame0.getFin());
  }
}
