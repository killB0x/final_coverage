/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 13:41:57 GMT 2022
 */

package com.neovisionaries.ws.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.neovisionaries.ws.client.ByteArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteArray_ESTest extends ByteArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(5, byteArray1.length());
      
      byteArray1.clearBit((byte)1);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(5, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(3, byteArray1.length());
      
      // Undeclared exception!
      try { 
        byteArray1.setBit((byte) (-113), true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Bad index: index=-14, length=3
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)71;
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)71, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(2, byteArray1.length());
      
      byteArray1.setBit((byte)0, true);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)71, (byte)0}, byteArray0);
      assertEquals(2, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(2190);
      assertNotNull(byteArray0);
      assertEquals(0, byteArray0.length());
      
      byteArray0.shrink(2190);
      assertEquals(0, byteArray0.length());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(3, byteArray1.length());
      
      byteArray1.shrink(1);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(1, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(0, byteArray0.length);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(0, byteArray1.length());
      
      byteArray1.put(103);
      assertEquals(0, byteArray0.length);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(1, byteArray1.length());
      
      byteArray1.put(byteArray0);
      assertEquals(0, byteArray0.length);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(1, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(0, byteArray0.length);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(0, byteArray1.length());
      
      byteArray1.put(byteArray0, 0, 0);
      assertEquals(0, byteArray0.length);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(3, byteArray1.length());
      
      byteArray1.shrink((byte)0);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(0);
      assertNotNull(byteArray0);
      assertEquals(0, byteArray0.length());
      
      byte[] byteArray1 = new byte[4];
      ByteArray byteArray2 = new ByteArray(byteArray1);
      assertEquals(4, byteArray1.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
      assertFalse(byteArray2.equals((Object)byteArray0));
      assertNotNull(byteArray2);
      assertEquals(4, byteArray2.length());
      
      byteArray0.put(byteArray2, (int) (byte)0, (int) (byte)2);
      assertEquals(4, byteArray1.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
      assertFalse(byteArray0.equals((Object)byteArray2));
      assertFalse(byteArray2.equals((Object)byteArray0));
      assertEquals(2, byteArray0.length());
      assertEquals(4, byteArray2.length());
      assertNotSame(byteArray0, byteArray2);
      assertNotSame(byteArray2, byteArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(6, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(6, byteArray1.length());
      
      byte[] byteArray2 = byteArray1.toBytes((int) (byte)0);
      assertEquals(6, byteArray0.length);
      assertEquals(6, byteArray2.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray2);
      assertFalse(byteArray2.equals((Object)byteArray0));
      assertNotNull(byteArray2);
      assertEquals(6, byteArray1.length());
      assertNotSame(byteArray0, byteArray2);
      assertNotSame(byteArray2, byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(1, byteArray1.length());
      
      byte[] byteArray2 = byteArray1.toBytes(1);
      assertEquals(1, byteArray0.length);
      assertEquals(0, byteArray2.length);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertArrayEquals(new byte[] {}, byteArray2);
      assertFalse(byteArray2.equals((Object)byteArray0));
      assertNotNull(byteArray2);
      assertEquals(1, byteArray1.length());
      assertNotSame(byteArray0, byteArray2);
      assertNotSame(byteArray2, byteArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(1, byteArray1.length());
      
      int[] intArray0 = new int[8];
      int int0 = byteArray1.readBits(intArray0, (-67));
      assertEquals(0, int0);
      assertEquals(1, byteArray0.length);
      assertEquals(8, intArray0.length);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertArrayEquals(new int[] {(-67), 0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(1, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-115);
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(7, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-115), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(7, byteArray1.length());
      
      int[] intArray0 = new int[3];
      int int0 = byteArray1.readBits(intArray0, 1);
      assertEquals(1, int0);
      assertEquals(7, byteArray0.length);
      assertEquals(3, intArray0.length);
      assertArrayEquals(new byte[] {(byte) (-115), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new int[] {1, 0, 0}, intArray0);
      assertEquals(7, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(0);
      assertNotNull(byteArray0);
      assertEquals(0, byteArray0.length());
      
      byte[] byteArray1 = new byte[9];
      byteArray1[3] = (byte) (-117);
      byteArray0.put(byteArray1);
      assertEquals(9, byteArray1.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte) (-117), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
      assertEquals(9, byteArray0.length());
      
      int[] intArray0 = new int[9];
      int int0 = byteArray0.readBits(intArray0, 57);
      assertEquals((-1962934272), int0);
      assertEquals(9, intArray0.length);
      assertArrayEquals(new int[] {57, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(9, byteArray0.length());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-115);
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(7, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-115), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(7, byteArray1.length());
      
      int[] intArray0 = new int[3];
      boolean boolean0 = byteArray1.readBit(intArray0);
      assertTrue(boolean0);
      assertEquals(7, byteArray0.length);
      assertEquals(3, intArray0.length);
      assertArrayEquals(new byte[] {(byte) (-115), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new int[] {1, 0, 0}, intArray0);
      assertEquals(7, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(1, byteArray1.length());
      
      int[] intArray0 = new int[4];
      boolean boolean0 = byteArray1.readBit(intArray0);
      assertFalse(boolean0);
      assertEquals(1, byteArray0.length);
      assertEquals(4, intArray0.length);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertArrayEquals(new int[] {1, 0, 0, 0}, intArray0);
      assertEquals(1, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(45);
      assertNotNull(byteArray0);
      assertEquals(0, byteArray0.length());
      
      int int0 = byteArray0.length();
      assertEquals(0, int0);
      assertEquals(0, byteArray0.length());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-110);
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-110), (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(5, byteArray1.length());
      
      int int0 = byteArray1.getHuffmanBits((-1), (byte)40);
      assertEquals(Integer.MIN_VALUE, int0);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-110), (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(5, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-67);
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-67)}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(1, byteArray1.length());
      
      int int0 = byteArray1.getBits(0, 1);
      assertEquals(1, int0);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-67)}, byteArray0);
      assertEquals(1, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-2);
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(8, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte) (-2), (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(8, byteArray1.length());
      
      int int0 = byteArray1.getBits(7, (byte)56);
      assertEquals((-67108864), int0);
      assertEquals(8, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte) (-2), (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(8, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)11;
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)11, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(9, byteArray1.length());
      
      byte byte0 = byteArray1.get((byte)3);
      assertEquals((byte)11, byte0);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)11, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-80);
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-80), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(9, byteArray1.length());
      
      byte byte0 = byteArray1.get(1);
      assertEquals((byte) (-80), byte0);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-80), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(11);
      assertNotNull(byteArray0);
      assertEquals(0, byteArray0.length());
      
      // Undeclared exception!
      try { 
        byteArray0.setBit(11, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Bad index: index=1, length=0
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(1039);
      assertNotNull(byteArray0);
      assertEquals(0, byteArray0.length());
      
      int[] intArray0 = new int[7];
      // Undeclared exception!
      try { 
        byteArray0.readBits(intArray0, 1039);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Bad index: index=0, length=0
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(1039);
      assertNotNull(byteArray0);
      assertEquals(0, byteArray0.length());
      
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        byteArray0.readBits(intArray0, 1039);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(1, byteArray1.length());
      
      // Undeclared exception!
      try { 
        byteArray1.readBit((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(1, byteArray1.length());
      
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        byteArray1.readBit(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(2068);
      assertNotNull(byteArray0);
      assertEquals(0, byteArray0.length());
      
      // Undeclared exception!
      try { 
        byteArray0.put((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(2);
      assertNotNull(byteArray0);
      assertEquals(0, byteArray0.length());
      
      // Undeclared exception!
      try { 
        byteArray0.put((ByteArray) null, 2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(2034);
      assertNotNull(byteArray0);
      assertEquals(0, byteArray0.length());
      
      // Undeclared exception!
      try { 
        byteArray0.getBit(2034);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Bad index: index=254, length=0
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(1735);
      assertNotNull(byteArray0);
      assertEquals(0, byteArray0.length());
      
      // Undeclared exception!
      try { 
        byteArray0.clearBit(1735);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Bad index: index=216, length=0
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteArray byteArray0 = null;
      try {
        byteArray0 = new ByteArray((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(2147483628);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteArray byteArray0 = null;
      try {
        byteArray0 = new ByteArray((-1040));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // capacity < 0: (-1040 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(5, byteArray1.length());
      
      byteArray1.setBit((byte)32, false);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(5, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(904);
      assertNotNull(byteArray0);
      assertEquals(0, byteArray0.length());
      
      byteArray0.put(904);
      assertEquals(1, byteArray0.length());
      
      boolean boolean0 = byteArray0.getBit(3);
      assertTrue(boolean0);
      assertEquals(1, byteArray0.length());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(3, byteArray1.length());
      
      byte[] byteArray2 = byteArray1.toBytes(0, (int) (byte)0);
      assertEquals(3, byteArray0.length);
      assertEquals(0, byteArray2.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new byte[] {}, byteArray2);
      assertFalse(byteArray2.equals((Object)byteArray0));
      assertNotNull(byteArray2);
      assertEquals(3, byteArray1.length());
      assertNotSame(byteArray0, byteArray2);
      assertNotSame(byteArray2, byteArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(8, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(8, byteArray1.length());
      
      // Undeclared exception!
      try { 
        byteArray1.toBytes((-1199), (int) (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad range: beginIndex=-1199, endIndex=0, length=8
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(9, byteArray1.length());
      
      // Undeclared exception!
      try { 
        byteArray1.toBytes((int) (byte) (-47), (-2375));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad range: beginIndex=-47, endIndex=-2375, length=9
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(3, byteArray1.length());
      
      byte[] byteArray2 = byteArray1.toBytes((int) (byte)0, (int) (byte)1);
      assertEquals(3, byteArray0.length);
      assertEquals(1, byteArray2.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray2);
      assertFalse(byteArray2.equals((Object)byteArray0));
      assertNotNull(byteArray2);
      assertEquals(3, byteArray1.length());
      assertNotSame(byteArray0, byteArray2);
      assertNotSame(byteArray2, byteArray0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(1024);
      assertNotNull(byteArray0);
      assertEquals(0, byteArray0.length());
      
      // Undeclared exception!
      try { 
        byteArray0.put((byte[]) null, 1024, 1024);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(1597);
      assertNotNull(byteArray0);
      assertEquals(0, byteArray0.length());
      
      try { 
        byteArray0.get(1597);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Bad index: index=1597, length=0
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(9, byteArray1.length());
      
      byte byte0 = byteArray1.get(1);
      assertEquals((byte)0, byte0);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray1);
      assertEquals(9, byteArray1.length());
      
      int int0 = byteArray1.length();
      assertEquals(9, int0);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(25);
      assertNotNull(byteArray0);
      assertEquals(0, byteArray0.length());
      
      byteArray0.put(1559);
      assertEquals(1, byteArray0.length());
      
      int int0 = byteArray0.getHuffmanBits(1, 1);
      assertEquals(1, int0);
      assertEquals(1, byteArray0.length());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      int int0 = byteArray1.getHuffmanBits((-1), (byte)40);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(25);
      // Undeclared exception!
      try { 
        byteArray0.getHuffmanBits(1, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Bad index: index=0, length=0
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      int int0 = byteArray1.getBits(7, (byte)56);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(943);
      byteArray0.put(943);
      // Undeclared exception!
      try { 
        byteArray0.getBits(1, 943);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Bad index: index=1, length=1
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(1);
      byteArray0.put((-14));
      boolean boolean0 = byteArray0.getBit(0);
      assertEquals(1, byteArray0.length());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      byteArray1.shrink((byte)117);
      assertEquals(3, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(2192);
      // Undeclared exception!
      try { 
        byteArray0.toBytes(2192, 2192);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad range: beginIndex=2192, endIndex=2192, length=0
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      // Undeclared exception!
      try { 
        byteArray1.toBytes((-1192));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad range: beginIndex=-1192, endIndex=1, length=1
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(1);
      // Undeclared exception!
      try { 
        byteArray0.shrink((-3250));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Bad range: beginIndex=3250, endIndex=0, length=0
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      // Undeclared exception!
      try { 
        byteArray1.put(byteArray0, 2315, 2315);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      byteArray1.put(byteArray0);
      assertEquals(0, byteArray1.length());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(25);
      byteArray0.put(1559);
      byteArray0.toBytes();
      assertEquals(1, byteArray0.length());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      try { 
        byteArray1.get((-233));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Bad index: index=-233, length=0
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(1024);
      byteArray0.clear();
      assertEquals(0, byteArray0.length());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArray byteArray1 = new ByteArray(byteArray0);
      // Undeclared exception!
      try { 
        byteArray1.put(byteArray1, (-189), (-1331));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(1024);
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        byteArray0.readBit(intArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Bad index: index=0, length=0
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(25);
      byte[] byteArray1 = byteArray0.toBytes();
      assertEquals(0, byteArray0.length());
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ByteArray byteArray0 = new ByteArray(5);
      // Undeclared exception!
      try { 
        byteArray0.readBits((int[]) null, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.neovisionaries.ws.client.ByteArray", e);
      }
  }
}
