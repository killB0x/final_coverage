/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 14:01:31 GMT 2022
 */

package com.neovisionaries.ws.client;

import org.junit.Test;
import static org.junit.Assert.*;
import com.neovisionaries.ws.client.OpeningHandshakeException;
import com.neovisionaries.ws.client.StatusLine;
import com.neovisionaries.ws.client.WebSocketError;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OpeningHandshakeException_ESTest extends OpeningHandshakeException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WebSocketError webSocketError0 = WebSocketError.IO_ERROR_IN_WRITING;
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>(3298, 3298);
      OpeningHandshakeException openingHandshakeException0 = new OpeningHandshakeException(webSocketError0, "K/winlM_<&OVRCr", (StatusLine) null, hashMap0);
      StatusLine statusLine0 = openingHandshakeException0.getStatusLine();
      assertNull(statusLine0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WebSocketError webSocketError0 = WebSocketError.SOCKET_OVERLAY_ERROR;
      OpeningHandshakeException openingHandshakeException0 = new OpeningHandshakeException(webSocketError0, "+eKmQ&suiR", (StatusLine) null, (Map<String, List<String>>) null);
      Map<String, List<String>> map0 = openingHandshakeException0.getHeaders();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      WebSocketError webSocketError0 = WebSocketError.IO_ERROR_IN_WRITING;
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>(3298, 3298);
      OpeningHandshakeException openingHandshakeException0 = new OpeningHandshakeException(webSocketError0, "K/winlM_<&OVRCr", (StatusLine) null, hashMap0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      hashMap0.put("K/winlM_<&OVRCr", linkedList0);
      Map<String, List<String>> map0 = openingHandshakeException0.getHeaders();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WebSocketError webSocketError0 = WebSocketError.IO_ERROR_IN_WRITING;
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>(3298, 3298);
      OpeningHandshakeException openingHandshakeException0 = new OpeningHandshakeException(webSocketError0, "K/winlM_<&OVRCr", (StatusLine) null, hashMap0);
      byte[] byteArray0 = openingHandshakeException0.getBody();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      WebSocketError webSocketError0 = WebSocketError.SOCKET_OVERLAY_ERROR;
      byte[] byteArray0 = new byte[2];
      OpeningHandshakeException openingHandshakeException0 = new OpeningHandshakeException(webSocketError0, "org.evosuite.runtime.mock.java.lang.MockThrowable: +eKmQ&suiR", (StatusLine) null, (Map<String, List<String>>) null, byteArray0);
      byte[] byteArray1 = openingHandshakeException0.getBody();
      assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      WebSocketError webSocketError0 = WebSocketError.HOSTNAME_UNVERIFIED;
      StatusLine statusLine0 = new StatusLine("^(Om 1 ?~.+>m#n");
      byte[] byteArray0 = new byte[4];
      OpeningHandshakeException openingHandshakeException0 = new OpeningHandshakeException(webSocketError0, "", statusLine0, (Map<String, List<String>>) null, byteArray0);
      StatusLine statusLine1 = openingHandshakeException0.getStatusLine();
      assertEquals(1, statusLine1.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      WebSocketError webSocketError0 = WebSocketError.HOSTNAME_UNVERIFIED;
      byte[] byteArray0 = new byte[0];
      OpeningHandshakeException openingHandshakeException0 = new OpeningHandshakeException(webSocketError0, "", (StatusLine) null, hashMap0, byteArray0);
      Map<String, List<String>> map0 = openingHandshakeException0.getHeaders();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      WebSocketError webSocketError0 = WebSocketError.HOSTNAME_UNVERIFIED;
      byte[] byteArray0 = new byte[0];
      OpeningHandshakeException openingHandshakeException0 = new OpeningHandshakeException(webSocketError0, "", (StatusLine) null, hashMap0, byteArray0);
      byte[] byteArray1 = openingHandshakeException0.getBody();
      assertEquals(0, byteArray1.length);
  }
}
