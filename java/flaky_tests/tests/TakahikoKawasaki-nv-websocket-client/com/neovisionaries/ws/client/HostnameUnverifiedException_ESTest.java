/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 14:02:11 GMT 2022
 */

package com.neovisionaries.ws.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.neovisionaries.ws.client.HostnameUnverifiedException;
import javax.net.ssl.SSLSession;
import javax.net.ssl.SSLSocket;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HostnameUnverifiedException_ESTest extends HostnameUnverifiedException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HostnameUnverifiedException hostnameUnverifiedException0 = new HostnameUnverifiedException((SSLSocket) null, "The certificate of the peer%s does not match the expected hostname (%s)");
      SSLSocket sSLSocket0 = hostnameUnverifiedException0.getSSLSocket();
      assertNull(sSLSocket0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SSLSocket sSLSocket0 = mock(SSLSocket.class, new ViolatedAssumptionAnswer());
      doReturn((SSLSession) null).when(sSLSocket0).getSession();
      HostnameUnverifiedException hostnameUnverifiedException0 = new HostnameUnverifiedException(sSLSocket0, (String) null);
      String string0 = hostnameUnverifiedException0.getHostname();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SSLSocket sSLSocket0 = mock(SSLSocket.class, new ViolatedAssumptionAnswer());
      doReturn((SSLSession) null).when(sSLSocket0).getSession();
      HostnameUnverifiedException hostnameUnverifiedException0 = new HostnameUnverifiedException(sSLSocket0, "");
      String string0 = hostnameUnverifiedException0.getHostname();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HostnameUnverifiedException hostnameUnverifiedException0 = new HostnameUnverifiedException((SSLSocket) null, "The certificate of the peer%s does not match the expected hostname (%s)");
      String string0 = hostnameUnverifiedException0.getHostname();
      assertEquals("The certificate of the peer%s does not match the expected hostname (%s)", string0);
  }
}
