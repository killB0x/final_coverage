/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 01:39:10 GMT 2022
 */

package com.google.cloud.spanner.pgadapter.parsers.copy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.cloud.spanner.pgadapter.parsers.copy.ASTCopyDirection;
import com.google.cloud.spanner.pgadapter.parsers.copy.ASTNamespace;
import com.google.cloud.spanner.pgadapter.parsers.copy.Copy;
import com.google.cloud.spanner.pgadapter.parsers.copy.CopyDefaultVisitor;
import com.google.cloud.spanner.pgadapter.parsers.copy.CopyTreeParser;
import com.google.cloud.spanner.pgadapter.parsers.copy.CopyVisitor;
import com.google.cloud.spanner.pgadapter.parsers.copy.Node;
import com.google.cloud.spanner.pgadapter.parsers.copy.SimpleCharStream;
import com.google.cloud.spanner.pgadapter.parsers.copy.Token;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTCopyDirection_ESTest extends ASTCopyDirection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ASTCopyDirection aSTCopyDirection0 = new ASTCopyDirection((-1));
      assertEquals(0, aSTCopyDirection0.jjtGetNumChildren());
      
      Object object0 = aSTCopyDirection0.value;
      // Undeclared exception!
      try { 
        aSTCopyDirection0.jjtAccept((CopyVisitor) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.cloud.spanner.pgadapter.parsers.copy.ASTCopyDirection", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ASTCopyDirection aSTCopyDirection0 = new ASTCopyDirection(1737);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) aSTCopyDirection0;
      aSTCopyDirection0.jjtAddChild(nodeArray0[0], 0);
      aSTCopyDirection0.children = nodeArray0;
      nodeArray0[1] = (Node) aSTCopyDirection0;
      nodeArray0[2] = (Node) aSTCopyDirection0;
      nodeArray0[3] = (Node) aSTCopyDirection0;
      aSTCopyDirection0.jjtSetParent(nodeArray0[3]);
      nodeArray0[4] = (Node) aSTCopyDirection0;
      nodeArray0[5] = (Node) aSTCopyDirection0;
      aSTCopyDirection0.children = nodeArray0;
      aSTCopyDirection0.getDirection();
      CopyDefaultVisitor copyDefaultVisitor0 = new CopyDefaultVisitor();
      // Undeclared exception!
      try { 
        aSTCopyDirection0.jjtAccept(copyDefaultVisitor0, nodeArray0[1]);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 4594;
      ASTCopyDirection aSTCopyDirection0 = new ASTCopyDirection(4594);
      String string0 = "t?h'";
      StringReader stringReader0 = new StringReader("t?h'");
      // Undeclared exception!
      try { 
        aSTCopyDirection0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.cloud.spanner.pgadapter.parsers.copy.ASTCopyDirection", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 17;
      ASTCopyDirection aSTCopyDirection0 = new ASTCopyDirection(17);
      CopyDefaultVisitor copyDefaultVisitor0 = new CopyDefaultVisitor();
      Object object0 = aSTCopyDirection0.value;
      aSTCopyDirection0.jjtAccept(copyDefaultVisitor0, (Object) null);
      aSTCopyDirection0.jjtAccept(copyDefaultVisitor0, (Object) null);
      // Undeclared exception!
      try { 
        aSTCopyDirection0.setDirection("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.cloud.spanner.pgadapter.parsers.copy.CopyTreeParser.CopyOptions.FromTo.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ASTCopyDirection aSTCopyDirection0 = new ASTCopyDirection((-1523));
      CopyDefaultVisitor copyDefaultVisitor0 = new CopyDefaultVisitor();
      Object object0 = aSTCopyDirection0.jjtAccept(copyDefaultVisitor0, copyDefaultVisitor0);
      assertSame(copyDefaultVisitor0, object0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ASTCopyDirection aSTCopyDirection0 = new ASTCopyDirection(1828);
      aSTCopyDirection0.getDirection();
      String string0 = "Q%0QaE^*_M^x[";
      // Undeclared exception!
      try { 
        aSTCopyDirection0.dump("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.cloud.spanner.pgadapter.parsers.copy.ASTCopyDirection", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ASTCopyDirection aSTCopyDirection0 = new ASTCopyDirection(0);
      // Undeclared exception!
      try { 
        aSTCopyDirection0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.cloud.spanner.pgadapter.parsers.copy.ASTCopyDirection", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ASTCopyDirection aSTCopyDirection0 = new ASTCopyDirection(0);
      // Undeclared exception!
      try { 
        aSTCopyDirection0.setDirection("Copy Direction: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.cloud.spanner.pgadapter.parsers.copy.CopyTreeParser.CopyOptions.FromTo.Copy Direction: 
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Copy copy0 = null;
      ASTCopyDirection aSTCopyDirection0 = new ASTCopyDirection((Copy) null, 0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) aSTCopyDirection0;
      nodeArray0[1] = (Node) aSTCopyDirection0;
      nodeArray0[2] = (Node) aSTCopyDirection0;
      nodeArray0[3] = (Node) aSTCopyDirection0;
      nodeArray0[4] = (Node) aSTCopyDirection0;
      nodeArray0[5] = (Node) aSTCopyDirection0;
      nodeArray0[6] = (Node) aSTCopyDirection0;
      // Undeclared exception!
      try { 
        aSTCopyDirection0.setDirection((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ASTCopyDirection aSTCopyDirection0 = new ASTCopyDirection((Copy) null, (-23));
      // Undeclared exception!
      try { 
        aSTCopyDirection0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.cloud.spanner.pgadapter.parsers.copy.ASTCopyDirection", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ASTCopyDirection aSTCopyDirection0 = new ASTCopyDirection(914);
      aSTCopyDirection0.getDirection();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ASTCopyDirection aSTCopyDirection0 = new ASTCopyDirection(2677);
      aSTCopyDirection0.getDirection();
      CopyTreeParser.CopyOptions copyTreeParser_CopyOptions0 = new CopyTreeParser.CopyOptions();
      CopyTreeParser copyTreeParser0 = new CopyTreeParser(copyTreeParser_CopyOptions0);
      ASTCopyDirection aSTCopyDirection1 = new ASTCopyDirection(0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte) (-68);
      byteArray0[3] = (byte) (-22);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)92;
      byteArray0[8] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = null;
      try {
        simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, "DELIMITER");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
      }
  }
}
