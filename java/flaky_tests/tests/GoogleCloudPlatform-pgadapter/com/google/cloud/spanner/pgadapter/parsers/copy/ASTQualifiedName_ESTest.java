/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 01:58:36 GMT 2022
 */

package com.google.cloud.spanner.pgadapter.parsers.copy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.cloud.spanner.pgadapter.parsers.copy.ASTQualifiedName;
import com.google.cloud.spanner.pgadapter.parsers.copy.Copy;
import com.google.cloud.spanner.pgadapter.parsers.copy.CopyDefaultVisitor;
import com.google.cloud.spanner.pgadapter.parsers.copy.CopyTreeParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTQualifiedName_ESTest extends ASTQualifiedName_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ASTQualifiedName aSTQualifiedName0 = new ASTQualifiedName(0);
      CopyDefaultVisitor copyDefaultVisitor0 = new CopyDefaultVisitor();
      Object object0 = aSTQualifiedName0.jjtAccept(copyDefaultVisitor0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTQualifiedName aSTQualifiedName0 = new ASTQualifiedName(0);
      CopyDefaultVisitor copyDefaultVisitor0 = new CopyDefaultVisitor();
      Object object0 = aSTQualifiedName0.jjtAccept(copyDefaultVisitor0, copyDefaultVisitor0);
      assertSame(copyDefaultVisitor0, object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ASTQualifiedName aSTQualifiedName0 = new ASTQualifiedName((Copy) null, 565);
      assertEquals(0, aSTQualifiedName0.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CopyTreeParser.CopyOptions copyTreeParser_CopyOptions0 = new CopyTreeParser.CopyOptions();
      CopyTreeParser copyTreeParser0 = new CopyTreeParser(copyTreeParser_CopyOptions0);
      ASTQualifiedName aSTQualifiedName0 = new ASTQualifiedName((-2147483264));
      // Undeclared exception!
      try { 
        aSTQualifiedName0.jjtAccept(copyTreeParser0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.cloud.spanner.pgadapter.parsers.copy.SimpleNode", e);
      }
  }
}
