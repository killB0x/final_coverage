/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 01:29:46 GMT 2022
 */

package com.google.cloud.spanner.pgadapter.parsers.copy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.cloud.spanner.pgadapter.parsers.copy.ASTBoolean;
import com.google.cloud.spanner.pgadapter.parsers.copy.ASTCopyDirection;
import com.google.cloud.spanner.pgadapter.parsers.copy.ASTCopyOptions;
import com.google.cloud.spanner.pgadapter.parsers.copy.ASTFilename;
import com.google.cloud.spanner.pgadapter.parsers.copy.ASTQualifiedName;
import com.google.cloud.spanner.pgadapter.parsers.copy.ASTStart;
import com.google.cloud.spanner.pgadapter.parsers.copy.JJTCopyState;
import com.google.cloud.spanner.pgadapter.parsers.copy.Node;
import com.google.cloud.spanner.pgadapter.parsers.copy.SimpleNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JJTCopyState_ESTest extends JJTCopyState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTFilename aSTFilename0 = new ASTFilename(114);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, true);
      ASTCopyDirection aSTCopyDirection0 = new ASTCopyDirection(3408);
      jJTCopyState0.closeNodeScope((Node) aSTCopyDirection0, true);
      assertTrue(jJTCopyState0.nodeCreated());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTStart aSTStart0 = new ASTStart(0);
      jJTCopyState0.pushNode(aSTStart0);
      ASTFilename aSTFilename0 = new ASTFilename(0);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, false);
      Node node0 = jJTCopyState0.popNode();
      jJTCopyState0.clearNodeScope(node0);
      // Undeclared exception!
      try { 
        jJTCopyState0.closeNodeScope((Node) aSTFilename0, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTFilename aSTFilename0 = new ASTFilename(0);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.pushNode(aSTFilename0);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, true);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, true);
      assertEquals(1, jJTCopyState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTBoolean aSTBoolean0 = new ASTBoolean(2354);
      jJTCopyState0.pushNode(aSTBoolean0);
      ASTQualifiedName aSTQualifiedName0 = new ASTQualifiedName(16);
      jJTCopyState0.openNodeScope(aSTQualifiedName0);
      // Undeclared exception!
      try { 
        jJTCopyState0.closeNodeScope((Node) aSTQualifiedName0, 16);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTStart aSTStart0 = new ASTStart(0);
      ASTFilename aSTFilename0 = new ASTFilename(0);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.clearNodeScope(aSTStart0);
      assertEquals(0, jJTCopyState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      jJTCopyState0.pushNode((Node) null);
      jJTCopyState0.rootNode();
      assertEquals(1, jJTCopyState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTFilename aSTFilename0 = new ASTFilename(0);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, true);
      Node[] nodeArray0 = new Node[6];
      aSTFilename0.children = nodeArray0;
      jJTCopyState0.rootNode();
      assertTrue(jJTCopyState0.nodeCreated());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTBoolean aSTBoolean0 = new ASTBoolean(2354);
      jJTCopyState0.pushNode(aSTBoolean0);
      jJTCopyState0.rootNode();
      assertEquals(1, jJTCopyState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTFilename aSTFilename0 = new ASTFilename((-1604));
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, true);
      jJTCopyState0.rootNode();
      assertTrue(jJTCopyState0.nodeCreated());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      jJTCopyState0.pushNode((Node) null);
      jJTCopyState0.popNode();
      assertEquals(0, jJTCopyState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTFilename aSTFilename0 = new ASTFilename(0);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, true);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, true);
      jJTCopyState0.popNode();
      assertTrue(jJTCopyState0.nodeCreated());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTFilename aSTFilename0 = new ASTFilename(108);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, true);
      jJTCopyState0.popNode();
      assertTrue(jJTCopyState0.nodeCreated());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTFilename aSTFilename0 = new ASTFilename(0);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, true);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, true);
      jJTCopyState0.peekNode();
      assertTrue(jJTCopyState0.nodeCreated());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTFilename aSTFilename0 = new ASTFilename(0);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, (-1));
      jJTCopyState0.peekNode();
      assertEquals(1, jJTCopyState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTFilename aSTFilename0 = new ASTFilename(3);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, 0);
      jJTCopyState0.peekNode();
      assertEquals(1, jJTCopyState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      SimpleNode simpleNode0 = new SimpleNode((-734));
      jJTCopyState0.openNodeScope(simpleNode0);
      jJTCopyState0.closeNodeScope((Node) simpleNode0, (-734));
      jJTCopyState0.peekNode();
      assertEquals(1, jJTCopyState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTFilename aSTFilename0 = new ASTFilename(0);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, true);
      boolean boolean0 = jJTCopyState0.nodeCreated();
      assertEquals(1, jJTCopyState0.nodeArity());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTFilename aSTFilename0 = new ASTFilename(0);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, true);
      int int0 = jJTCopyState0.nodeArity();
      assertTrue(jJTCopyState0.nodeCreated());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      // Undeclared exception!
      try { 
        jJTCopyState0.openNodeScope((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.cloud.spanner.pgadapter.parsers.copy.JJTCopyState", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTCopyOptions aSTCopyOptions0 = new ASTCopyOptions(0);
      jJTCopyState0.openNodeScope(aSTCopyOptions0);
      // Undeclared exception!
      try { 
        jJTCopyState0.closeNodeScope((Node) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.cloud.spanner.pgadapter.parsers.copy.JJTCopyState", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTFilename aSTFilename0 = new ASTFilename((-381));
      jJTCopyState0.openNodeScope(aSTFilename0);
      // Undeclared exception!
      try { 
        jJTCopyState0.closeNodeScope((Node) null, (-1604));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.cloud.spanner.pgadapter.parsers.copy.JJTCopyState", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTFilename aSTFilename0 = new ASTFilename((-734));
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, true);
      jJTCopyState0.popNode();
      assertTrue(jJTCopyState0.nodeCreated());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      int int0 = jJTCopyState0.nodeArity();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTStart aSTStart0 = new ASTStart(0);
      // Undeclared exception!
      try { 
        jJTCopyState0.closeNodeScope((Node) aSTStart0, false);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      ASTFilename aSTFilename0 = new ASTFilename(114);
      jJTCopyState0.openNodeScope(aSTFilename0);
      jJTCopyState0.closeNodeScope((Node) aSTFilename0, true);
      // Undeclared exception!
      try { 
        jJTCopyState0.clearNodeScope(aSTFilename0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      // Undeclared exception!
      try { 
        jJTCopyState0.popNode();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      // Undeclared exception!
      try { 
        jJTCopyState0.rootNode();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      jJTCopyState0.reset();
      assertEquals(0, jJTCopyState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      jJTCopyState0.nodeCreated();
      assertEquals(0, jJTCopyState0.nodeArity());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JJTCopyState jJTCopyState0 = new JJTCopyState();
      // Undeclared exception!
      try { 
        jJTCopyState0.peekNode();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }
}
