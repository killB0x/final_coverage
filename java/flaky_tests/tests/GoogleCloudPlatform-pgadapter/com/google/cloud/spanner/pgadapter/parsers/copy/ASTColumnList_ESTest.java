/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 01:43:05 GMT 2022
 */

package com.google.cloud.spanner.pgadapter.parsers.copy;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.cloud.spanner.pgadapter.parsers.copy.ASTColumnList;
import com.google.cloud.spanner.pgadapter.parsers.copy.Copy;
import com.google.cloud.spanner.pgadapter.parsers.copy.CopyDefaultVisitor;
import com.google.cloud.spanner.pgadapter.parsers.copy.CopyTreeParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTColumnList_ESTest extends ASTColumnList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ASTColumnList aSTColumnList0 = new ASTColumnList((-2685));
      CopyDefaultVisitor copyDefaultVisitor0 = new CopyDefaultVisitor();
      Object object0 = aSTColumnList0.jjtAccept(copyDefaultVisitor0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTColumnList aSTColumnList0 = new ASTColumnList((Copy) null, (-699));
      assertEquals((-699), aSTColumnList0.getId());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ASTColumnList aSTColumnList0 = new ASTColumnList((-410));
      CopyTreeParser.CopyOptions copyTreeParser_CopyOptions0 = new CopyTreeParser.CopyOptions();
      CopyTreeParser copyTreeParser0 = new CopyTreeParser(copyTreeParser_CopyOptions0);
      Object object0 = aSTColumnList0.jjtAccept(copyTreeParser0, copyTreeParser_CopyOptions0);
      assertSame(copyTreeParser_CopyOptions0, object0);
  }
}
