/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 01:23:16 GMT 2022
 */

package com.google.cloud.spanner.pgadapter.parsers.copy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.cloud.spanner.pgadapter.parsers.copy.ParseException;
import com.google.cloud.spanner.pgadapter.parsers.copy.Token;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParseException_ESTest extends ParseException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = ParseException.add_escapes("AfxQ3:'Qu!>~");
      assertEquals("AfxQ3:\\'Qu!>~", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Token token0 = new Token(0);
      int[][] intArray0 = new int[7][8];
      int[] intArray1 = new int[1];
      intArray0[0] = intArray1;
      intArray0[1] = intArray1;
      String[] stringArray0 = new String[5];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.cloud.spanner.pgadapter.parsers.copy.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Token token0 = new Token(0);
      int[][] intArray0 = new int[3][8];
      int[] intArray1 = new int[3];
      intArray0[1] = intArray1;
      String[] stringArray0 = new String[4];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.cloud.spanner.pgadapter.parsers.copy.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = ParseException.add_escapes("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        ParseException.add_escapes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.cloud.spanner.pgadapter.parsers.copy.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Token token0 = new Token();
      int[][] intArray0 = new int[1][4];
      String[] stringArray0 = new String[0];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.google.cloud.spanner.pgadapter.parsers.copy.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = ParseException.add_escapes("\\2m(K:;:=Mn N(k|71");
      assertEquals("\\\\2m(K:;:=Mn N(k|71", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = ParseException.add_escapes("x2ubF%-:-[-xi");
      assertEquals("x2ubF%-:-[-\\u007fxi", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = ParseException.add_escapes("r/K\"x=bLC}_\"+");
      assertEquals("r/K\\\"x=bLC}_\\\"+", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = ParseException.add_escapes("\n");
      assertEquals("\\n", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Token token0 = new Token();
      String[] stringArray0 = new String[2];
      token0.next = token0;
      int[][] intArray0 = new int[1][9];
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Token token0 = new Token(15);
      int[][] intArray0 = new int[0][4];
      String[] stringArray0 = new String[1];
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Token token0 = new Token(0);
      int[][] intArray0 = new int[7][8];
      token0.next = token0;
      String[] stringArray0 = new String[5];
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Token token0 = new Token(2);
      int[][] intArray0 = new int[7][8];
      token0.next = token0;
      String[] stringArray0 = new String[9];
      token0.image = "\u0002m(K:;:=Mn N(k|71";
      ParseException parseException0 = new ParseException(token0.next, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Token token0 = new Token(1);
      int[][] intArray0 = new int[1][3];
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      intArray0[0] = intArray1;
      String[] stringArray0 = new String[4];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.cloud.spanner.pgadapter.parsers.copy.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParseException parseException0 = new ParseException();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ParseException parseException0 = new ParseException("$aIJR");
  }
}
