/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 01:33:19 GMT 2022
 */

package com.google.cloud.spanner.pgadapter.wireoutput;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.cloud.spanner.pgadapter.wireoutput.ParameterDescriptionResponse;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParameterDescriptionResponse_ESTest extends ParameterDescriptionResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int[] intArray0 = new int[0];
      ParameterDescriptionResponse parameterDescriptionResponse0 = new ParameterDescriptionResponse((DataOutputStream) null, intArray0);
      // Undeclared exception!
      try { 
        parameterDescriptionResponse0.sendPayload();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.cloud.spanner.pgadapter.wireoutput.ParameterDescriptionResponse", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[4];
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      ParameterDescriptionResponse parameterDescriptionResponse0 = new ParameterDescriptionResponse(dataOutputStream0, intArray0);
      try { 
        parameterDescriptionResponse0.sendPayload();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ParameterDescriptionResponse parameterDescriptionResponse0 = null;
      try {
        parameterDescriptionResponse0 = new ParameterDescriptionResponse((DataOutputStream) null, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.cloud.spanner.pgadapter.wireoutput.ParameterDescriptionResponse", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("hR<WJ]&Xa><>GDqqm", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      int[] intArray0 = new int[2];
      ParameterDescriptionResponse parameterDescriptionResponse0 = new ParameterDescriptionResponse(dataOutputStream0, intArray0);
      parameterDescriptionResponse0.sendPayload();
      assertEquals((byte)116, parameterDescriptionResponse0.getIdentifier());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int[] intArray0 = new int[1];
      ParameterDescriptionResponse parameterDescriptionResponse0 = new ParameterDescriptionResponse((DataOutputStream) null, intArray0);
      String string0 = parameterDescriptionResponse0.getMessageName();
      assertEquals("Parameter Description", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int[] intArray0 = new int[9];
      ParameterDescriptionResponse parameterDescriptionResponse0 = new ParameterDescriptionResponse((DataOutputStream) null, intArray0);
      byte byte0 = parameterDescriptionResponse0.getIdentifier();
      assertEquals((byte)116, byte0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("hR<WJ]&Xa><>GDqqm", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      int[] intArray0 = new int[2];
      ParameterDescriptionResponse parameterDescriptionResponse0 = new ParameterDescriptionResponse(dataOutputStream0, intArray0);
      String string0 = parameterDescriptionResponse0.getPayloadString();
      assertEquals("Length: 14, Parameters: [0, 0]", string0);
  }
}
