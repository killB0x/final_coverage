/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 04:54:24 GMT 2022
 */

package heros.solver;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import heros.solver.PathEdge;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PathEdge_ESTest extends PathEdge_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer((-262));
      Integer integer1 = new Integer((-262));
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer1);
      String string0 = pathEdge0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer((-262));
      Integer integer1 = new Integer((-262));
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer1);
      PathEdge<Integer, Integer> pathEdge1 = new PathEdge<Integer, Integer>(integer0, integer1, integer0);
      boolean boolean0 = pathEdge0.equals(pathEdge1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer((-1078));
      Integer integer1 = new Integer(884);
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer1, integer1, integer0);
      PathEdge<PathEdge<Integer, Integer>, Integer> pathEdge1 = new PathEdge<PathEdge<Integer, Integer>, Integer>(integer0, pathEdge0, integer1);
      PathEdge<Integer, Integer> pathEdge2 = new PathEdge<Integer, Integer>(integer0, integer1, (Integer) null);
      boolean boolean0 = pathEdge2.equals(pathEdge1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer((-1089));
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>((Integer) null, integer0, integer0);
      PathEdge<Integer, Integer> pathEdge1 = new PathEdge<Integer, Integer>((Integer) null, integer0, integer0);
      boolean boolean0 = pathEdge1.equals(pathEdge0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer((-262));
      Integer integer1 = new Integer((-262));
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer1);
      Integer integer2 = pathEdge0.factAtTarget();
      assertEquals((-262), (int)integer2);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(0);
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, (Integer) null, (Integer) null);
      Integer integer1 = pathEdge0.factAtSource();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(4659);
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer0);
      PathEdge<Integer, PathEdge<Integer, Integer>> pathEdge1 = new PathEdge<Integer, PathEdge<Integer, Integer>>(pathEdge0, (Integer) null, pathEdge0);
      Integer integer1 = pathEdge1.getTarget();
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(0);
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer0);
      PathEdge<PathEdge<Integer, Integer>, Integer> pathEdge1 = new PathEdge<PathEdge<Integer, Integer>, Integer>(integer0, pathEdge0, integer0);
      PathEdge<Integer, Integer> pathEdge2 = pathEdge1.getTarget();
      assertSame(pathEdge2, pathEdge0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(0);
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, (Integer) null, (Integer) null);
      Integer integer1 = pathEdge0.factAtTarget();
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(1223);
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>((Integer) null, integer0, (Integer) null);
      Integer integer1 = pathEdge0.factAtSource();
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer((-1487));
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer0);
      PathEdge<Integer, PathEdge<Integer, Integer>> pathEdge1 = new PathEdge<Integer, PathEdge<Integer, Integer>>(pathEdge0, integer0, pathEdge0);
      PathEdge<Integer, Integer> pathEdge2 = pathEdge1.factAtSource();
      assertSame(pathEdge0, pathEdge2);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>((Integer) null, (Integer) null, (Integer) null);
      // Undeclared exception!
      try { 
        pathEdge0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer((-4784));
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer0);
      boolean boolean0 = pathEdge0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer((-2166));
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer0);
      boolean boolean0 = pathEdge0.equals(pathEdge0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer((-1084));
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer0);
      Integer integer1 = new Integer(213);
      PathEdge<PathEdge<Integer, Integer>, Integer> pathEdge1 = new PathEdge<PathEdge<Integer, Integer>, Integer>(integer0, pathEdge0, integer1);
      boolean boolean0 = pathEdge1.equals(pathEdge0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer((-1112));
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer0);
      PathEdge<PathEdge<Integer, Integer>, Integer> pathEdge1 = new PathEdge<PathEdge<Integer, Integer>, Integer>(integer0, pathEdge0, (Integer) null);
      boolean boolean0 = pathEdge1.equals(pathEdge0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer((-1089));
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer0);
      PathEdge<Integer, PathEdge<Integer, Integer>> pathEdge1 = new PathEdge<Integer, PathEdge<Integer, Integer>>(pathEdge0, integer0, pathEdge0);
      boolean boolean0 = pathEdge1.equals(pathEdge0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer(350);
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer0);
      PathEdge<PathEdge<Integer, Integer>, Integer> pathEdge1 = new PathEdge<PathEdge<Integer, Integer>, Integer>((Integer) null, pathEdge0, integer0);
      boolean boolean0 = pathEdge1.equals(pathEdge0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer integer0 = new Integer((-1099));
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer0);
      boolean boolean0 = pathEdge0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>((Integer) null, (Integer) null, (Integer) null);
      PathEdge<Integer, PathEdge<Integer, Integer>> pathEdge1 = new PathEdge<Integer, PathEdge<Integer, Integer>>(pathEdge0, (Integer) null, pathEdge0);
      PathEdge<PathEdge<Integer, Integer>, PathEdge<Integer, Integer>> pathEdge2 = new PathEdge<PathEdge<Integer, Integer>, PathEdge<Integer, Integer>>(pathEdge0, pathEdge0, pathEdge0);
      boolean boolean0 = pathEdge2.equals(pathEdge1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PathEdge<PathEdge<Integer, Integer>, PathEdge<Integer, Integer>> pathEdge0 = new PathEdge<PathEdge<Integer, Integer>, PathEdge<Integer, Integer>>((PathEdge<Integer, Integer>) null, (PathEdge<Integer, Integer>) null, (PathEdge<Integer, Integer>) null);
      PathEdge<PathEdge<Integer, Integer>, PathEdge<Integer, Integer>> pathEdge1 = new PathEdge<PathEdge<Integer, Integer>, PathEdge<Integer, Integer>>((PathEdge<Integer, Integer>) null, (PathEdge<Integer, Integer>) null, (PathEdge<Integer, Integer>) null);
      boolean boolean0 = pathEdge0.equals(pathEdge1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer((-1099));
      PathEdge<Integer, PathEdge<Integer, Integer>> pathEdge0 = new PathEdge<Integer, PathEdge<Integer, Integer>>((PathEdge<Integer, Integer>) null, integer0, (PathEdge<Integer, Integer>) null);
      PathEdge<PathEdge<Integer, Integer>, PathEdge<Integer, Integer>> pathEdge1 = new PathEdge<PathEdge<Integer, Integer>, PathEdge<Integer, Integer>>((PathEdge<Integer, Integer>) null, (PathEdge<Integer, Integer>) null, (PathEdge<Integer, Integer>) null);
      boolean boolean0 = pathEdge1.equals(pathEdge0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = new Integer((-262));
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer0);
      pathEdge0.hashCode();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Integer integer0 = new Integer((-1089));
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer0);
      PathEdge<Integer, PathEdge<Integer, Integer>> pathEdge1 = new PathEdge<Integer, PathEdge<Integer, Integer>>(pathEdge0, integer0, pathEdge0);
      String string0 = pathEdge1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = new Integer((-1089));
      PathEdge<Integer, Integer> pathEdge0 = new PathEdge<Integer, Integer>(integer0, integer0, integer0);
      PathEdge<PathEdge<Integer, Integer>, PathEdge<Integer, Integer>> pathEdge1 = new PathEdge<PathEdge<Integer, Integer>, PathEdge<Integer, Integer>>(pathEdge0, pathEdge0, pathEdge0);
      Object object0 = pathEdge1.factAtTarget();
      assertNotNull(object0);
  }
}
