/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 05:27:05 GMT 2022
 */

package heros.fieldsens;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import heros.fieldsens.AccessPath;
import heros.fieldsens.CallEdge;
import heros.fieldsens.Context;
import heros.fieldsens.Debugger;
import heros.fieldsens.PerAccessPathMethodAnalyzer;
import heros.fieldsens.Resolver;
import heros.fieldsens.SourceStmtAnnotatedMethodAnalyzer;
import heros.fieldsens.structs.WrappedFact;
import heros.fieldsens.structs.WrappedFactAtStatement;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SourceStmtAnnotatedMethodAnalyzer_ESTest extends SourceStmtAnnotatedMethodAnalyzer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      Context<Object, Object, Object, Object> context0 = (Context<Object, Object, Object, Object>) mock(Context.class, new ViolatedAssumptionAnswer());
      SourceStmtAnnotatedMethodAnalyzer.Synchronizer<Object> sourceStmtAnnotatedMethodAnalyzer_Synchronizer0 = (SourceStmtAnnotatedMethodAnalyzer.Synchronizer<Object>) mock(SourceStmtAnnotatedMethodAnalyzer.Synchronizer.class, new ViolatedAssumptionAnswer());
      Debugger.NullDebugger<Object, Object, Object, Object> debugger_NullDebugger0 = new Debugger.NullDebugger<Object, Object, Object, Object>();
      SourceStmtAnnotatedMethodAnalyzer<Object, Object, Object, Object> sourceStmtAnnotatedMethodAnalyzer0 = new SourceStmtAnnotatedMethodAnalyzer<Object, Object, Object, Object>(object0, context0, sourceStmtAnnotatedMethodAnalyzer_Synchronizer0, debugger_NullDebugger0);
      WrappedFactAtStatement<Object, Object, Object, Object> wrappedFactAtStatement0 = new WrappedFactAtStatement<Object, Object, Object, Object>(sourceStmtAnnotatedMethodAnalyzer0, (WrappedFact<Object, Object, Object, Object>) null);
      sourceStmtAnnotatedMethodAnalyzer0.addUnbalancedReturnFlow(wrappedFactAtStatement0, wrappedFactAtStatement0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Debugger.NullDebugger<Object, Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object> debugger_NullDebugger0 = new Debugger.NullDebugger<Object, Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object>();
      SourceStmtAnnotatedMethodAnalyzer<Object, Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object> sourceStmtAnnotatedMethodAnalyzer0 = new SourceStmtAnnotatedMethodAnalyzer<Object, Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object>((Object) null, (Context<Object, Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object>) null, (SourceStmtAnnotatedMethodAnalyzer.Synchronizer<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>>) null, debugger_NullDebugger0);
      // Undeclared exception!
      try { 
        sourceStmtAnnotatedMethodAnalyzer0.addIncomingEdge((CallEdge<Object, Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("heros.fieldsens.SourceStmtAnnotatedMethodAnalyzer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Debugger.NullDebugger<Object, Object, Object, Object> debugger_NullDebugger0 = new Debugger.NullDebugger<Object, Object, Object, Object>();
      SourceStmtAnnotatedMethodAnalyzer<Object, Object, Object, Object> sourceStmtAnnotatedMethodAnalyzer0 = new SourceStmtAnnotatedMethodAnalyzer<Object, Object, Object, Object>(debugger_NullDebugger0, (Context<Object, Object, Object, Object>) null, (SourceStmtAnnotatedMethodAnalyzer.Synchronizer<Object>) null, debugger_NullDebugger0);
      // Undeclared exception!
      try { 
        sourceStmtAnnotatedMethodAnalyzer0.addInitialSeed(debugger_NullDebugger0, (Object) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Sets
         //
         verifyException("heros.fieldsens.AccessPath", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Debugger.NullDebugger<Object, Object, Object, Object> debugger_NullDebugger0 = new Debugger.NullDebugger<Object, Object, Object, Object>();
      SourceStmtAnnotatedMethodAnalyzer<Object, Object, Object, Object> sourceStmtAnnotatedMethodAnalyzer0 = new SourceStmtAnnotatedMethodAnalyzer<Object, Object, Object, Object>((Object) null, (Context<Object, Object, Object, Object>) null, (SourceStmtAnnotatedMethodAnalyzer.Synchronizer<Object>) null, debugger_NullDebugger0);
      Object object0 = new Object();
      Object[] objectArray0 = new Object[3];
      AccessPath<Object> accessPath0 = new AccessPath<Object>(objectArray0, (Set<Object>) null);
      WrappedFact<Object, Object, Object, Object> wrappedFact0 = new WrappedFact<Object, Object, Object, Object>(object0, accessPath0, (Resolver<Object, Object, Object, Object>) null);
      WrappedFactAtStatement<Object, Object, Object, Object> wrappedFactAtStatement0 = new WrappedFactAtStatement<Object, Object, Object, Object>(object0, wrappedFact0);
      CallEdge<Object, Object, Object, Object> callEdge0 = new CallEdge<Object, Object, Object, Object>((PerAccessPathMethodAnalyzer<Object, Object, Object, Object>) null, wrappedFactAtStatement0, wrappedFact0);
      // Undeclared exception!
      try { 
        sourceStmtAnnotatedMethodAnalyzer0.addIncomingEdge(callEdge0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Sets
         //
         verifyException("heros.fieldsens.AccessPath", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Debugger.NullDebugger<Object, Object, Object, Object> debugger_NullDebugger0 = new Debugger.NullDebugger<Object, Object, Object, Object>();
      SourceStmtAnnotatedMethodAnalyzer<Object, Object, Object, Object> sourceStmtAnnotatedMethodAnalyzer0 = new SourceStmtAnnotatedMethodAnalyzer<Object, Object, Object, Object>(debugger_NullDebugger0, (Context<Object, Object, Object, Object>) null, (SourceStmtAnnotatedMethodAnalyzer.Synchronizer<Object>) null, debugger_NullDebugger0);
      // Undeclared exception!
      try { 
        sourceStmtAnnotatedMethodAnalyzer0.addUnbalancedReturnFlow((WrappedFactAtStatement<Object, Object, Object, Object>) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("heros.fieldsens.SourceStmtAnnotatedMethodAnalyzer", e);
      }
  }
}
