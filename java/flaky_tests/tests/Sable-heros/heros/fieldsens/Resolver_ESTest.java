/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 05:02:47 GMT 2022
 */

package heros.fieldsens;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import heros.fieldsens.AccessPath;
import heros.fieldsens.CallEdge;
import heros.fieldsens.CallEdgeResolver;
import heros.fieldsens.Debugger;
import heros.fieldsens.PerAccessPathMethodAnalyzer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Resolver_ESTest extends Resolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PerAccessPathMethodAnalyzer<CallEdge<Object, Object, Object, Object>, CallEdge<Object, Object, Object, Object>, Object, Object> perAccessPathMethodAnalyzer0 = (PerAccessPathMethodAnalyzer<CallEdge<Object, Object, Object, Object>, CallEdge<Object, Object, Object, Object>, Object, Object>) mock(PerAccessPathMethodAnalyzer.class, new ViolatedAssumptionAnswer());
      doReturn((AccessPath) null).when(perAccessPathMethodAnalyzer0).getAccessPath();
      Debugger.NullDebugger<CallEdge<Object, Object, Object, Object>, CallEdge<Object, Object, Object, Object>, Object, Object> debugger_NullDebugger0 = new Debugger.NullDebugger<CallEdge<Object, Object, Object, Object>, CallEdge<Object, Object, Object, Object>, Object, Object>();
      CallEdgeResolver<CallEdge<Object, Object, Object, Object>, CallEdge<Object, Object, Object, Object>, Object, Object> callEdgeResolver0 = null;
      try {
        callEdgeResolver0 = new CallEdgeResolver<CallEdge<Object, Object, Object, Object>, CallEdge<Object, Object, Object, Object>, Object, Object>(perAccessPathMethodAnalyzer0, debugger_NullDebugger0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Sets
         //
         verifyException("heros.fieldsens.Resolver", e);
      }
  }
}
