/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 05:08:12 GMT 2022
 */

package heros.fieldsens.structs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import heros.fieldsens.AccessPath;
import heros.fieldsens.structs.DeltaConstraint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DeltaConstraint_ESTest extends DeltaConstraint_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DeltaConstraint<Object> deltaConstraint0 = new DeltaConstraint<Object>((AccessPath.Delta<Object>) null);
      DeltaConstraint<Object> deltaConstraint1 = new DeltaConstraint<Object>((AccessPath.Delta<Object>) null);
      boolean boolean0 = deltaConstraint1.equals(deltaConstraint0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DeltaConstraint<Object> deltaConstraint0 = new DeltaConstraint<Object>((AccessPath.Delta<Object>) null);
      boolean boolean0 = deltaConstraint0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DeltaConstraint<Object> deltaConstraint0 = new DeltaConstraint<Object>((AccessPath.Delta<Object>) null);
      boolean boolean0 = deltaConstraint0.equals(deltaConstraint0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DeltaConstraint<Object> deltaConstraint0 = new DeltaConstraint<Object>((AccessPath.Delta<Object>) null);
      Integer integer0 = new Integer(0);
      boolean boolean0 = deltaConstraint0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DeltaConstraint<Object> deltaConstraint0 = new DeltaConstraint<Object>((AccessPath.Delta<Object>) null);
      deltaConstraint0.hashCode();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DeltaConstraint<Object> deltaConstraint0 = new DeltaConstraint<Object>((AccessPath.Delta<Object>) null);
      // Undeclared exception!
      try { 
        deltaConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("heros.fieldsens.structs.DeltaConstraint", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DeltaConstraint<Object> deltaConstraint0 = new DeltaConstraint<Object>((AccessPath.Delta<Object>) null);
      // Undeclared exception!
      try { 
        deltaConstraint0.applyToAccessPath((AccessPath<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("heros.fieldsens.structs.DeltaConstraint", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DeltaConstraint<Object> deltaConstraint0 = null;
      try {
        deltaConstraint0 = new DeltaConstraint<Object>((AccessPath<Object>) null, (AccessPath<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("heros.fieldsens.structs.DeltaConstraint", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DeltaConstraint<Object> deltaConstraint0 = new DeltaConstraint<Object>((AccessPath.Delta<Object>) null);
      // Undeclared exception!
      try { 
        deltaConstraint0.canBeAppliedTo((AccessPath<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("heros.fieldsens.structs.DeltaConstraint", e);
      }
  }
}
