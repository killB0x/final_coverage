/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 04:57:52 GMT 2022
 */

package heros.fieldsens.structs;

import org.junit.Test;
import static org.junit.Assert.*;
import heros.fieldsens.structs.FactAtStatement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FactAtStatement_ESTest extends FactAtStatement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FactAtStatement<Integer, Integer> factAtStatement0 = new FactAtStatement<Integer, Integer>((Integer) null, (Integer) null);
      Integer integer0 = new Integer(0);
      FactAtStatement<Integer, FactAtStatement<Integer, Integer>> factAtStatement1 = new FactAtStatement<Integer, FactAtStatement<Integer, Integer>>(integer0, factAtStatement0);
      boolean boolean0 = factAtStatement1.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(0);
      FactAtStatement<Integer, Integer> factAtStatement0 = new FactAtStatement<Integer, Integer>(integer0, integer0);
      FactAtStatement<Integer, Integer> factAtStatement1 = new FactAtStatement<Integer, Integer>(integer0, integer0);
      boolean boolean0 = factAtStatement0.equals(factAtStatement1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(1);
      FactAtStatement<Integer, Integer> factAtStatement0 = new FactAtStatement<Integer, Integer>(integer0, (Integer) null);
      FactAtStatement<Integer, Integer> factAtStatement1 = new FactAtStatement<Integer, Integer>(integer0, (Integer) null);
      boolean boolean0 = factAtStatement0.equals(factAtStatement1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(1);
      FactAtStatement<Integer, Integer> factAtStatement0 = new FactAtStatement<Integer, Integer>(integer0, (Integer) null);
      FactAtStatement<Integer, FactAtStatement<Integer, Integer>> factAtStatement1 = new FactAtStatement<Integer, FactAtStatement<Integer, Integer>>(integer0, factAtStatement0);
      FactAtStatement<FactAtStatement<Integer, Integer>, Integer> factAtStatement2 = new FactAtStatement<FactAtStatement<Integer, Integer>, Integer>(factAtStatement0, integer0);
      boolean boolean0 = factAtStatement2.equals(factAtStatement1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FactAtStatement<Integer, Integer> factAtStatement0 = new FactAtStatement<Integer, Integer>((Integer) null, (Integer) null);
      Integer integer0 = new Integer(0);
      FactAtStatement<FactAtStatement<Integer, Integer>, Integer> factAtStatement1 = new FactAtStatement<FactAtStatement<Integer, Integer>, Integer>(factAtStatement0, integer0);
      boolean boolean0 = factAtStatement0.equals(factAtStatement1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FactAtStatement<Integer, Integer> factAtStatement0 = new FactAtStatement<Integer, Integer>((Integer) null, (Integer) null);
      Integer integer0 = new Integer(0);
      FactAtStatement<Integer, Integer> factAtStatement1 = new FactAtStatement<Integer, Integer>((Integer) null, integer0);
      boolean boolean0 = factAtStatement0.equals(factAtStatement1);
      assertFalse(factAtStatement1.equals((Object)factAtStatement0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(1);
      FactAtStatement<Integer, Integer> factAtStatement0 = new FactAtStatement<Integer, Integer>(integer0, (Integer) null);
      FactAtStatement<Integer, FactAtStatement<Integer, Integer>> factAtStatement1 = new FactAtStatement<Integer, FactAtStatement<Integer, Integer>>(integer0, factAtStatement0);
      boolean boolean0 = factAtStatement1.equals(factAtStatement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer((-887));
      FactAtStatement<Integer, Integer> factAtStatement0 = new FactAtStatement<Integer, Integer>(integer0, integer0);
      boolean boolean0 = factAtStatement0.equals(factAtStatement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(1);
      FactAtStatement<Integer, Integer> factAtStatement0 = new FactAtStatement<Integer, Integer>(integer0, (Integer) null);
      boolean boolean0 = factAtStatement0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(1);
      FactAtStatement<Integer, Integer> factAtStatement0 = new FactAtStatement<Integer, Integer>(integer0, (Integer) null);
      FactAtStatement<Integer, FactAtStatement<Integer, Integer>> factAtStatement1 = new FactAtStatement<Integer, FactAtStatement<Integer, Integer>>(integer0, factAtStatement0);
      factAtStatement1.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(1);
      FactAtStatement<Integer, Integer> factAtStatement0 = new FactAtStatement<Integer, Integer>(integer0, (Integer) null);
      factAtStatement0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FactAtStatement<FactAtStatement<Integer, Integer>, FactAtStatement<Integer, Integer>> factAtStatement0 = new FactAtStatement<FactAtStatement<Integer, Integer>, FactAtStatement<Integer, Integer>>((FactAtStatement<Integer, Integer>) null, (FactAtStatement<Integer, Integer>) null);
      factAtStatement0.hashCode();
  }
}
