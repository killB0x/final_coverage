/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 05:05:36 GMT 2022
 */

package heros.fieldsens;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import heros.fieldsens.AccessPath;
import heros.fieldsens.Debugger;
import heros.fieldsens.PerAccessPathMethodAnalyzer;
import heros.fieldsens.ZeroCallEdgeResolver;
import heros.fieldsens.ZeroHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ZeroCallEdgeResolver_ESTest extends ZeroCallEdgeResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ZeroHandler<ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>> zeroHandler0 = (ZeroHandler<ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>>) mock(ZeroHandler.class, new ViolatedAssumptionAnswer());
      Debugger.NullDebugger<ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, Integer, Integer> debugger_NullDebugger0 = new Debugger.NullDebugger<ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, Integer, Integer>();
      ZeroCallEdgeResolver<ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, Integer, Integer> zeroCallEdgeResolver0 = null;
      try {
        zeroCallEdgeResolver0 = new ZeroCallEdgeResolver<ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, Integer, Integer>((PerAccessPathMethodAnalyzer<ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, Integer, Integer>) null, zeroHandler0, debugger_NullDebugger0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("heros.fieldsens.CallEdgeResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PerAccessPathMethodAnalyzer<Integer, Integer, ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, Integer> perAccessPathMethodAnalyzer0 = (PerAccessPathMethodAnalyzer<Integer, Integer, ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, Integer>) mock(PerAccessPathMethodAnalyzer.class, new ViolatedAssumptionAnswer());
      doReturn((AccessPath) null).when(perAccessPathMethodAnalyzer0).getAccessPath();
      Debugger.NullDebugger<Integer, Integer, ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, Integer> debugger_NullDebugger0 = new Debugger.NullDebugger<Integer, Integer, ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, Integer>();
      ZeroHandler<Integer> zeroHandler0 = (ZeroHandler<Integer>) mock(ZeroHandler.class, new ViolatedAssumptionAnswer());
      ZeroCallEdgeResolver<Integer, Integer, ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, Integer> zeroCallEdgeResolver0 = null;
      try {
        zeroCallEdgeResolver0 = new ZeroCallEdgeResolver<Integer, Integer, ZeroCallEdgeResolver<Integer, Integer, Integer, Integer>, Integer>(perAccessPathMethodAnalyzer0, zeroHandler0, debugger_NullDebugger0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Sets
         //
         verifyException("heros.fieldsens.Resolver", e);
      }
  }
}
