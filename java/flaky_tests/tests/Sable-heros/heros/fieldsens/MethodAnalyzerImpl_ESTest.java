/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 05:29:05 GMT 2022
 */

package heros.fieldsens;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import heros.fieldsens.CallEdge;
import heros.fieldsens.Context;
import heros.fieldsens.Debugger;
import heros.fieldsens.MethodAnalyzerImpl;
import heros.fieldsens.PerAccessPathMethodAnalyzer;
import heros.fieldsens.structs.WrappedFact;
import heros.fieldsens.structs.WrappedFactAtStatement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MethodAnalyzerImpl_ESTest extends MethodAnalyzerImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      Debugger.NullDebugger<Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object> debugger_NullDebugger0 = new Debugger.NullDebugger<Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object>();
      Debugger.NullDebugger<Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>> debugger_NullDebugger1 = new Debugger.NullDebugger<Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>>();
      Context<Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object> context0 = (Context<Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object>) mock(Context.class, new ViolatedAssumptionAnswer());
      MethodAnalyzerImpl<Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object> methodAnalyzerImpl0 = new MethodAnalyzerImpl<Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object>(debugger_NullDebugger1, context0, debugger_NullDebugger0);
      WrappedFactAtStatement<Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object> wrappedFactAtStatement0 = new WrappedFactAtStatement<Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object>(object0, (WrappedFact<Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object>) null);
      CallEdge<Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object> callEdge0 = new CallEdge<Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object>((PerAccessPathMethodAnalyzer<Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object>) null, wrappedFactAtStatement0, (WrappedFact<Object, PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object>) null);
      // Undeclared exception!
      try { 
        methodAnalyzerImpl0.addIncomingEdge(callEdge0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("heros.fieldsens.MethodAnalyzerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Context<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object> context0 = (Context<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object>) mock(Context.class, new ViolatedAssumptionAnswer());
      Debugger.NullDebugger<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object> debugger_NullDebugger0 = new Debugger.NullDebugger<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object>();
      MethodAnalyzerImpl<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object> methodAnalyzerImpl0 = new MethodAnalyzerImpl<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object>(debugger_NullDebugger0, context0, debugger_NullDebugger0);
      // Undeclared exception!
      try { 
        methodAnalyzerImpl0.addUnbalancedReturnFlow((WrappedFactAtStatement<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object>) null, debugger_NullDebugger0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Sets
         //
         verifyException("heros.fieldsens.AccessPath", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Debugger.NullDebugger<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object> debugger_NullDebugger0 = new Debugger.NullDebugger<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object>();
      Object object0 = new Object();
      MethodAnalyzerImpl<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object> methodAnalyzerImpl0 = new MethodAnalyzerImpl<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object>(debugger_NullDebugger0, (Context<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object>) null, debugger_NullDebugger0);
      // Undeclared exception!
      try { 
        methodAnalyzerImpl0.addInitialSeed(object0, (Object) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Sets
         //
         verifyException("heros.fieldsens.AccessPath", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Debugger.NullDebugger<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object> debugger_NullDebugger0 = new Debugger.NullDebugger<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object>();
      MethodAnalyzerImpl<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object> methodAnalyzerImpl0 = new MethodAnalyzerImpl<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object>(debugger_NullDebugger0, (Context<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object>) null, debugger_NullDebugger0);
      // Undeclared exception!
      try { 
        methodAnalyzerImpl0.addUnbalancedReturnFlow((WrappedFactAtStatement<PerAccessPathMethodAnalyzer<Object, Object, Object, Object>, Object, Object, Object>) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("heros.fieldsens.MethodAnalyzerImpl", e);
      }
  }
}
