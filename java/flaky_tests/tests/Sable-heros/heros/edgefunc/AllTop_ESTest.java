/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 05:23:54 GMT 2022
 */

package heros.edgefunc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import heros.EdgeFunction;
import heros.edgefunc.AllBottom;
import heros.edgefunc.AllTop;
import heros.edgefunc.EdgeIdentity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AllTop_ESTest extends AllTop_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AllTop<AllTop<Integer>> allTop0 = new AllTop<AllTop<Integer>>((AllTop<Integer>) null);
      AllTop<Object> allTop1 = new AllTop<Object>(allTop0);
      AllTop<Object> allTop2 = new AllTop<Object>(allTop0);
      boolean boolean0 = allTop1.equalTo(allTop2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      AllTop<Integer> allTop0 = new AllTop<Integer>(integer0);
      EdgeFunction<Integer> edgeFunction0 = allTop0.meetWith((EdgeFunction<Integer>) null);
      assertNull(edgeFunction0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      AllTop<Object> allTop0 = new AllTop<Object>(object0);
      AllTop<AllTop<Object>> allTop1 = new AllTop<AllTop<Object>>(allTop0);
      AllBottom<AllTop<Object>> allBottom0 = new AllBottom<AllTop<Object>>(allTop0);
      boolean boolean0 = allTop1.equalTo(allBottom0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AllTop<Integer> allTop0 = new AllTop<Integer>((Integer) null);
      Integer integer0 = new Integer((-462));
      Integer integer1 = allTop0.computeTarget(integer0);
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AllTop<Object> allTop0 = new AllTop<Object>((Object) null);
      // Undeclared exception!
      try { 
        allTop0.equalTo(allTop0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("heros.edgefunc.AllTop", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AllTop<AllTop<Integer>> allTop0 = new AllTop<AllTop<Integer>>((AllTop<Integer>) null);
      AllTop<Object> allTop1 = new AllTop<Object>(allTop0);
      Object object0 = allTop1.computeTarget(allTop0);
      assertEquals("alltop", object0.toString());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AllTop<AllTop<Integer>> allTop0 = new AllTop<AllTop<Integer>>((AllTop<Integer>) null);
      String string0 = allTop0.toString();
      assertEquals("alltop", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AllTop<AllTop<Integer>> allTop0 = new AllTop<AllTop<Integer>>((AllTop<Integer>) null);
      AllTop<Object> allTop1 = new AllTop<Object>(allTop0);
      EdgeFunction<Object> edgeFunction0 = allTop1.composeWith(allTop1);
      assertNotNull(edgeFunction0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Object object0 = new Object();
      AllTop<Object> allTop0 = new AllTop<Object>(object0);
      EdgeIdentity<Object> edgeIdentity0 = EdgeIdentity.v();
      EdgeFunction<Object> edgeFunction0 = allTop0.meetWith(edgeIdentity0);
      assertNotNull(edgeFunction0);
  }
}
