/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 22:10:40 GMT 2022
 */

package org.gedcom4j.io.reader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.io.reader.Utf8Reader;
import org.gedcom4j.parser.GedcomParser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Utf8Reader_ESTest extends Utf8Reader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-10);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Utf8Reader utf8Reader0 = new Utf8Reader(gedcomParser0, byteArrayInputStream0);
      String string0 = utf8Reader0.nextLine();
      assertEquals("\uFFFD\u0000\u0000\u0000", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      Utf8Reader utf8Reader0 = new Utf8Reader(gedcomParser0, (InputStream) null);
      // Undeclared exception!
      try { 
        utf8Reader0.nextLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.io.reader.ProgressTrackingInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), 128);
      Utf8Reader utf8Reader0 = new Utf8Reader((GedcomParser) null, byteArrayInputStream0);
      // Undeclared exception!
      try { 
        utf8Reader0.nextLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      GedcomParser gedcomParser0 = new GedcomParser();
      Utf8Reader utf8Reader0 = new Utf8Reader(gedcomParser0, pipedInputStream0);
      try { 
        utf8Reader0.nextLine();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Utf8Reader utf8Reader0 = new Utf8Reader(gedcomParser0, byteArrayInputStream0);
      String string0 = utf8Reader0.nextLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Utf8Reader utf8Reader0 = new Utf8Reader(gedcomParser0, byteArrayInputStream0);
      String string0 = utf8Reader0.nextLine();
      assertEquals("\u0000\u0000\u0000", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Utf8Reader utf8Reader0 = new Utf8Reader(gedcomParser0, byteArrayInputStream0);
      String string0 = utf8Reader0.nextLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Utf8Reader utf8Reader0 = new Utf8Reader(gedcomParser0, byteArrayInputStream0);
      utf8Reader0.nextLine();
      String string0 = utf8Reader0.nextLine();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Utf8Reader utf8Reader0 = new Utf8Reader(gedcomParser0, pipedInputStream0);
      utf8Reader0.setByteOrderMarkerRead(true);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      Utf8Reader utf8Reader0 = new Utf8Reader(gedcomParser0, bufferedInputStream0);
      utf8Reader0.cleanUp();
      assertEquals(7, byteArrayInputStream0.available());
  }
}
