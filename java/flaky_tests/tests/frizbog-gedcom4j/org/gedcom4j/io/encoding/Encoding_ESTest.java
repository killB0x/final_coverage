/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 22:59:37 GMT 2022
 */

package org.gedcom4j.io.encoding;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.io.encoding.Encoding;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Encoding_ESTest extends Encoding_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Encoding[] encodingArray0 = Encoding.values();
      assertEquals(5, encodingArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Encoding encoding0 = Encoding.valueOf("UNICODE_BIG_ENDIAN");
      assertEquals("UNICODE", encoding0.getCharacterSetName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      boolean boolean0 = Encoding.isValidCharacterSetName("UNICODE");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      boolean boolean0 = Encoding.isValidCharacterSetName("UNICODE_BIG_ENDIAN");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Set<String> set0 = Encoding.getSupportedCharacterSetNames();
      assertEquals(4, set0.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Encoding encoding0 = Encoding.UNICODE_LITTLE_ENDIAN;
      String string0 = encoding0.getCharacterSetName();
      assertEquals("UNICODE", string0);
  }
}
