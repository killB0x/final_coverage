/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 23:08:26 GMT 2022
 */

package org.gedcom4j.io.writer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.io.writer.AsciiWriter;
import org.gedcom4j.io.writer.LineTerminator;
import org.gedcom4j.io.writer.Utf8Writer;
import org.gedcom4j.model.Gedcom;
import org.gedcom4j.writer.GedcomWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractEncodingSpecificWriter_ESTest extends AbstractEncodingSpecificWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      gedcomWriter0.setFileNotificationRate(1);
      gedcomWriter0.write("9<Va>@91[`Ego]}Zko");
      assertEquals(LineTerminator.LF_ONLY, gedcomWriter0.getLineTerminator());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AsciiWriter asciiWriter0 = new AsciiWriter((GedcomWriter) null);
      // Undeclared exception!
      try { 
        asciiWriter0.write((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.io.writer.AbstractEncodingSpecificWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      Utf8Writer utf8Writer0 = new Utf8Writer(gedcomWriter0);
      // Undeclared exception!
      try { 
        utf8Writer0.write((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.io.writer.Utf8Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      gedcomWriter0.write("9<Va>@91[`Ego]}Zko");
      assertFalse(gedcomWriter0.isValidationSuppressed());
  }
}
