/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 22:52:23 GMT 2022
 */

package org.gedcom4j.io.writer;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.io.writer.LineTerminator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LineTerminator_ESTest extends LineTerminator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LineTerminator[] lineTerminatorArray0 = LineTerminator.values();
      assertEquals(4, lineTerminatorArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LineTerminator lineTerminator0 = LineTerminator.valueOf("LF_ONLY");
      assertEquals(LineTerminator.LF_ONLY, lineTerminator0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LineTerminator lineTerminator0 = LineTerminator.getFromSystemProperty("\n\r");
      assertEquals(LineTerminator.LFCR, lineTerminator0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LineTerminator lineTerminator0 = LineTerminator.getFromSystemProperty("\r\n");
      assertEquals(LineTerminator.CRLF, lineTerminator0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LineTerminator lineTerminator0 = LineTerminator.getFromSystemProperty("T?");
      assertEquals(LineTerminator.CRLF, lineTerminator0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LineTerminator lineTerminator0 = LineTerminator.getFromSystemProperty("\r");
      assertEquals(LineTerminator.CR_ONLY, lineTerminator0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LineTerminator lineTerminator0 = LineTerminator.getDefaultLineTerminator();
      assertEquals(LineTerminator.LF_ONLY, lineTerminator0);
  }
}
