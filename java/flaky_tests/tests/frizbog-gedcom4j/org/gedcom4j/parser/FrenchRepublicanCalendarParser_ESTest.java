/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 21:52:27 GMT 2022
 */

package org.gedcom4j.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.parser.FrenchRepublicanCalendarParser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FrenchRepublicanCalendarParser_ESTest extends FrenchRepublicanCalendarParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FrenchRepublicanCalendarParser frenchRepublicanCalendarParser0 = new FrenchRepublicanCalendarParser();
      frenchRepublicanCalendarParser0.convertFrenchRepublicanDateToGregorian(8, "PRAI", 2621);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FrenchRepublicanCalendarParser frenchRepublicanCalendarParser0 = new FrenchRepublicanCalendarParser();
      frenchRepublicanCalendarParser0.convertFrenchRepublicanDateToGregorian(84, "COMP", 1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FrenchRepublicanCalendarParser frenchRepublicanCalendarParser0 = new FrenchRepublicanCalendarParser();
      frenchRepublicanCalendarParser0.isFrenchLeapYearRomme(400);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FrenchRepublicanCalendarParser frenchRepublicanCalendarParser0 = new FrenchRepublicanCalendarParser();
      frenchRepublicanCalendarParser0.isFrenchLeapYearRomme(8);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FrenchRepublicanCalendarParser frenchRepublicanCalendarParser0 = new FrenchRepublicanCalendarParser();
      frenchRepublicanCalendarParser0.convertFrenchRepublicanDateToGregorian(6323, "COMP", 398);
      // Undeclared exception!
      frenchRepublicanCalendarParser0.convertFrenchRepublicanDateToGregorian(6323, "COMP", 4);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FrenchRepublicanCalendarParser frenchRepublicanCalendarParser0 = new FrenchRepublicanCalendarParser();
      // Undeclared exception!
      try { 
        frenchRepublicanCalendarParser0.convertFrenchRepublicanDateToGregorian(336, (String) null, 13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.parser.FrenchRepublicanMonth", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FrenchRepublicanCalendarParser frenchRepublicanCalendarParser0 = new FrenchRepublicanCalendarParser();
      frenchRepublicanCalendarParser0.convertFrenchRepublicanDateToGregorian(230, "COMP", 6);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FrenchRepublicanCalendarParser frenchRepublicanCalendarParser0 = new FrenchRepublicanCalendarParser();
      Date date0 = frenchRepublicanCalendarParser0.convertFrenchRepublicanDateToGregorian(3345, "PRAI", (-128));
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FrenchRepublicanCalendarParser frenchRepublicanCalendarParser0 = new FrenchRepublicanCalendarParser();
      Date date0 = frenchRepublicanCalendarParser0.convertFrenchRepublicanDateToGregorian(13, "ZD5Bs+P}phfDS", 3259);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FrenchRepublicanCalendarParser frenchRepublicanCalendarParser0 = new FrenchRepublicanCalendarParser();
      Date date0 = frenchRepublicanCalendarParser0.convertFrenchRepublicanDateToGregorian((-679), "COMP", 84);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FrenchRepublicanCalendarParser frenchRepublicanCalendarParser0 = new FrenchRepublicanCalendarParser();
      Date date0 = frenchRepublicanCalendarParser0.convertFrenchRepublicanDateToGregorian(15, "BRUM", 15);
      assertNotNull(date0);
      assertEquals("Thu Nov 06 00:00:00 GMT 1806", date0.toString());
  }
}
