/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 23:15:34 GMT 2022
 */

package org.gedcom4j.parser.event;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.Gedcom;
import org.gedcom4j.parser.event.ParseProgressEvent;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParseProgressEvent_ESTest extends ParseProgressEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      Gedcom gedcom0 = new Gedcom();
      ParseProgressEvent parseProgressEvent0 = new ParseProgressEvent(object0, gedcom0, true, 0);
      boolean boolean0 = parseProgressEvent0.isComplete();
      assertEquals(0, parseProgressEvent0.getLinesParsed());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      Gedcom gedcom0 = new Gedcom();
      ParseProgressEvent parseProgressEvent0 = new ParseProgressEvent(object0, gedcom0, false, 1764);
      int int0 = parseProgressEvent0.getLinesParsed();
      assertFalse(parseProgressEvent0.isComplete());
      assertEquals(1764, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = new Object();
      Gedcom gedcom0 = new Gedcom();
      ParseProgressEvent parseProgressEvent0 = new ParseProgressEvent(object0, gedcom0, false, (-1));
      int int0 = parseProgressEvent0.getLinesParsed();
      assertEquals((-1), int0);
      assertFalse(parseProgressEvent0.isComplete());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object object0 = new Object();
      ParseProgressEvent parseProgressEvent0 = null;
      try {
        parseProgressEvent0 = new ParseProgressEvent(object0, (Gedcom) null, false, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.parser.event.ParseProgressEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      ParseProgressEvent parseProgressEvent0 = null;
      try {
        parseProgressEvent0 = new ParseProgressEvent((Object) null, gedcom0, false, 7387);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object object0 = new Object();
      Gedcom gedcom0 = new Gedcom();
      ParseProgressEvent parseProgressEvent0 = new ParseProgressEvent(object0, gedcom0, true, 0);
      int int0 = parseProgressEvent0.getLinesParsed();
      assertTrue(parseProgressEvent0.isComplete());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object object0 = new Object();
      Gedcom gedcom0 = new Gedcom();
      ParseProgressEvent parseProgressEvent0 = new ParseProgressEvent(object0, gedcom0, true, 0);
      int int0 = parseProgressEvent0.getMultimediaProcessed();
      assertEquals(0, int0);
      assertTrue(parseProgressEvent0.isComplete());
      assertEquals(0, parseProgressEvent0.getLinesParsed());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object object0 = new Object();
      Gedcom gedcom0 = new Gedcom();
      ParseProgressEvent parseProgressEvent0 = new ParseProgressEvent(object0, gedcom0, true, 0);
      String string0 = parseProgressEvent0.toString();
      assertEquals("ParseProgressEvent [complete=true, linesParsed=0, familiesProcessed=0, individualsProcessed=0, multimediaProcessed=0, notesProcessed=0, repositoriesProcessed=0, sourcesProcessed=0, submittersProcessed=0]", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      Gedcom gedcom0 = new Gedcom();
      ParseProgressEvent parseProgressEvent0 = new ParseProgressEvent(object0, gedcom0, false, (-1));
      int int0 = parseProgressEvent0.getFamiliesProcessed();
      assertEquals((-1), parseProgressEvent0.getLinesParsed());
      assertEquals(0, int0);
      assertFalse(parseProgressEvent0.isComplete());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      Gedcom gedcom0 = new Gedcom();
      ParseProgressEvent parseProgressEvent0 = new ParseProgressEvent(object0, gedcom0, false, (-1));
      boolean boolean0 = parseProgressEvent0.isComplete();
      assertFalse(boolean0);
      assertEquals((-1), parseProgressEvent0.getLinesParsed());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object object0 = new Object();
      Gedcom gedcom0 = new Gedcom();
      ParseProgressEvent parseProgressEvent0 = new ParseProgressEvent(object0, gedcom0, false, (-1));
      int int0 = parseProgressEvent0.getIndividualsProcessed();
      assertEquals(0, int0);
      assertEquals((-1), parseProgressEvent0.getLinesParsed());
      assertFalse(parseProgressEvent0.isComplete());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = new Object();
      Gedcom gedcom0 = new Gedcom();
      ParseProgressEvent parseProgressEvent0 = new ParseProgressEvent(object0, gedcom0, true, 0);
      int int0 = parseProgressEvent0.getSubmittersProcessed();
      assertEquals(0, int0);
      assertEquals(0, parseProgressEvent0.getLinesParsed());
      assertTrue(parseProgressEvent0.isComplete());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      Gedcom gedcom0 = new Gedcom();
      ParseProgressEvent parseProgressEvent0 = new ParseProgressEvent(object0, gedcom0, false, (-1));
      int int0 = parseProgressEvent0.getNotesProcessed();
      assertFalse(parseProgressEvent0.isComplete());
      assertEquals((-1), parseProgressEvent0.getLinesParsed());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object object0 = new Object();
      Gedcom gedcom0 = new Gedcom();
      ParseProgressEvent parseProgressEvent0 = new ParseProgressEvent(object0, gedcom0, false, (-1));
      int int0 = parseProgressEvent0.getSourcesProcessed();
      assertEquals(0, int0);
      assertEquals((-1), parseProgressEvent0.getLinesParsed());
      assertFalse(parseProgressEvent0.isComplete());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      ParseProgressEvent parseProgressEvent0 = new ParseProgressEvent(gedcom0, gedcom0, false, 0);
      int int0 = parseProgressEvent0.getRepositoriesProcessed();
      assertEquals(0, int0);
      assertFalse(parseProgressEvent0.isComplete());
      assertEquals(0, parseProgressEvent0.getLinesParsed());
  }
}
