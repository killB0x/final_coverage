/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 20:59:58 GMT 2022
 */

package org.gedcom4j.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.gedcom4j.io.event.FileProgressEvent;
import org.gedcom4j.io.event.FileProgressListener;
import org.gedcom4j.model.Repository;
import org.gedcom4j.parser.GedcomParser;
import org.gedcom4j.parser.event.ParseProgressListener;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GedcomParser_ESTest extends GedcomParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      assertTrue(gedcomParser0.isStrictLineBreaks());
      
      gedcomParser0.setStrictLineBreaks(false);
      boolean boolean0 = gedcomParser0.isStrictLineBreaks();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.setInsideCustomTag(true);
      boolean boolean0 = gedcomParser0.isInsideCustomTag();
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertTrue(boolean0);
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.addWarning("MARRIAGE_BANNER");
      gedcomParser0.getWarnings();
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictLineBreaks());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      ParseProgressListener parseProgressListener0 = mock(ParseProgressListener.class, new ViolatedAssumptionAnswer());
      gedcomParser0.unregisterParseObserver(parseProgressListener0);
      gedcomParser0.getParseObservers();
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      FileProgressListener fileProgressListener0 = mock(FileProgressListener.class, new ViolatedAssumptionAnswer());
      gedcomParser0.unregisterFileObserver(fileProgressListener0);
      gedcomParser0.getFileObservers();
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.getErrors();
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertTrue(gedcomParser0.isStrictCustomTags());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.addError("whereInSource=");
      gedcomParser0.getErrors();
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      // Undeclared exception!
      try { 
        gedcomParser0.load((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      // Undeclared exception!
      try { 
        gedcomParser0.load((BufferedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.io.reader.GedcomFileReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      try { 
        gedcomParser0.load(bufferedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.unregisterParseObserver((ParseProgressListener) null);
      gedcomParser0.unregisterParseObserver((ParseProgressListener) null);
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      ParseProgressListener parseProgressListener0 = mock(ParseProgressListener.class, new ViolatedAssumptionAnswer());
      gedcomParser0.unregisterParseObserver(parseProgressListener0);
      ParseProgressListener parseProgressListener1 = mock(ParseProgressListener.class, new ViolatedAssumptionAnswer());
      gedcomParser0.unregisterParseObserver(parseProgressListener1);
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.unregisterFileObserver((FileProgressListener) null);
      gedcomParser0.unregisterFileObserver((FileProgressListener) null);
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      FileProgressListener fileProgressListener0 = mock(FileProgressListener.class, new ViolatedAssumptionAnswer());
      gedcomParser0.unregisterFileObserver(fileProgressListener0);
      FileProgressListener fileProgressListener1 = mock(FileProgressListener.class, new ViolatedAssumptionAnswer());
      gedcomParser0.unregisterFileObserver(fileProgressListener1);
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictCustomTags());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      // Undeclared exception!
      try { 
        gedcomParser0.setReadNotificationRate((-1240));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read Notification Rate must be at least 1
         //
         verifyException("org.gedcom4j.parser.GedcomParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.setReadNotificationRate(771);
      assertEquals(771, gedcomParser0.getReadNotificationRate());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      // Undeclared exception!
      try { 
        gedcomParser0.setParseNotificationRate((-1620));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Parse Notification Rate must be at least 1
         //
         verifyException("org.gedcom4j.parser.GedcomParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.setParseNotificationRate(629);
      assertEquals(629, gedcomParser0.getParseNotificationRate());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.unregisterFileObserver((FileProgressListener) null);
      gedcomParser0.notifyFileObservers((FileProgressEvent) null);
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      FileProgressListener fileProgressListener0 = mock(FileProgressListener.class, new ViolatedAssumptionAnswer());
      gedcomParser0.unregisterFileObserver(fileProgressListener0);
      Repository repository0 = gedcomParser0.getRepository("");
      FileProgressEvent fileProgressEvent0 = new FileProgressEvent(repository0, (-1), 0, true);
      gedcomParser0.notifyFileObservers(fileProgressEvent0);
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-7), 2070);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)19);
      // Undeclared exception!
      try { 
        gedcomParser0.load(bufferedInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      int int0 = gedcomParser0.getLineNum();
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.registerFileObserver((FileProgressListener) null);
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.getWarnings();
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      
      gedcomParser0.setIgnoreCustomTags(true);
      boolean boolean0 = gedcomParser0.isIgnoreCustomTags();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.isCancelled();
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.getFileObservers();
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.parse();
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.isInsideCustomTag();
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      try { 
        gedcomParser0.load("E@zkvO 4B.1d83Qa");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      assertTrue(gedcomParser0.isStrictCustomTags());
      
      gedcomParser0.setStrictCustomTags(false);
      assertFalse(gedcomParser0.isStrictCustomTags());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.registerParseObserver((ParseProgressListener) null);
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictCustomTags());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      int int0 = gedcomParser0.getParseNotificationRate();
      assertEquals(500, int0);
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictCustomTags());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      boolean boolean0 = gedcomParser0.isIgnoreCustomTags();
      assertFalse(boolean0);
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictCustomTags());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      boolean boolean0 = gedcomParser0.isStrictCustomTags();
      assertTrue(boolean0);
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.getParseObservers();
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictCustomTags());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      int int0 = gedcomParser0.getReadNotificationRate();
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertEquals(500, int0);
      assertFalse(gedcomParser0.isIgnoreCustomTags());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.cancel();
      boolean boolean0 = gedcomParser0.isCancelled();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      gedcomParser0.getGedcom();
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertFalse(gedcomParser0.isIgnoreCustomTags());
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertTrue(gedcomParser0.isStrictLineBreaks());
      assertTrue(gedcomParser0.isStrictCustomTags());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GedcomParser gedcomParser0 = new GedcomParser();
      boolean boolean0 = gedcomParser0.isStrictLineBreaks();
      assertEquals(500, gedcomParser0.getParseNotificationRate());
      assertEquals(500, gedcomParser0.getReadNotificationRate());
      assertTrue(gedcomParser0.isStrictCustomTags());
      assertTrue(boolean0);
      assertFalse(gedcomParser0.isIgnoreCustomTags());
  }
}
