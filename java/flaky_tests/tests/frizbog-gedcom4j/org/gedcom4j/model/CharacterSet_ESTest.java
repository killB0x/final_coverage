/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 21:48:54 GMT 2022
 */

package org.gedcom4j.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.CharacterSet;
import org.gedcom4j.model.StringWithCustomFacts;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterSet_ESTest extends CharacterSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      characterSet0.getCustomFacts(true);
      characterSet0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts("customFacts=");
      characterSet0.setVersionNum(stringWithCustomFacts0);
      StringWithCustomFacts stringWithCustomFacts1 = characterSet0.getVersionNum();
      assertSame(stringWithCustomFacts1, stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      characterSet0.setCharacterSetName((StringWithCustomFacts) null);
      StringWithCustomFacts stringWithCustomFacts0 = characterSet0.getCharacterSetName();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharacterSet characterSet0 = null;
      try {
        characterSet0 = new CharacterSet((CharacterSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.model.AbstractElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      characterSet0.getCustomFacts(true);
      String string0 = characterSet0.toString();
      assertEquals("CharacterSet [characterSetName=ANSEL, customFacts=[]]", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts("customFacts=");
      characterSet0.setVersionNum(stringWithCustomFacts0);
      String string0 = characterSet0.toString();
      assertEquals("CharacterSet [characterSetName=ANSEL, versionNum=customFacts=, ]", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      characterSet0.setCharacterSetName((StringWithCustomFacts) null);
      String string0 = characterSet0.toString();
      assertEquals("CharacterSet []", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      characterSet0.setVersionNum((String) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      characterSet0.setVersionNum("phonetic=");
      characterSet0.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      characterSet0.setCharacterSetName((StringWithCustomFacts) null);
      characterSet0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      characterSet0.setVersionNum("-");
      CharacterSet characterSet1 = new CharacterSet(characterSet0);
      boolean boolean0 = characterSet0.equals(characterSet1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      CharacterSet characterSet1 = new CharacterSet(characterSet0);
      assertTrue(characterSet1.equals((Object)characterSet0));
      
      characterSet1.setVersionNum("`8@*;r83B\u0000Y");
      boolean boolean0 = characterSet0.equals(characterSet1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      CharacterSet characterSet1 = new CharacterSet(characterSet0);
      assertTrue(characterSet1.equals((Object)characterSet0));
      
      characterSet1.setVersionNum("phonetic=");
      boolean boolean0 = characterSet1.equals(characterSet0);
      assertFalse(characterSet1.equals((Object)characterSet0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      characterSet0.setCharacterSetName("(  yEB%?z:@[7S5P{");
      CharacterSet characterSet1 = new CharacterSet();
      boolean boolean0 = characterSet0.equals(characterSet1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      CharacterSet characterSet1 = new CharacterSet(characterSet0);
      assertTrue(characterSet1.equals((Object)characterSet0));
      
      characterSet1.setCharacterSetName((StringWithCustomFacts) null);
      boolean boolean0 = characterSet1.equals(characterSet0);
      assertFalse(characterSet1.equals((Object)characterSet0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      boolean boolean0 = characterSet0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      boolean boolean0 = characterSet0.equals(characterSet0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      CharacterSet characterSet1 = new CharacterSet(characterSet0);
      boolean boolean0 = characterSet0.equals(characterSet1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      characterSet0.setCharacterSetName((StringWithCustomFacts) null);
      CharacterSet characterSet1 = new CharacterSet(characterSet0);
      assertFalse(characterSet1.equals((Object)characterSet0));
      
      characterSet1.setCharacterSetName((String) null);
      boolean boolean0 = characterSet1.equals(characterSet0);
      assertTrue(characterSet1.equals((Object)characterSet0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      StringWithCustomFacts stringWithCustomFacts0 = characterSet0.getVersionNum();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharacterSet characterSet0 = new CharacterSet();
      StringWithCustomFacts stringWithCustomFacts0 = characterSet0.getCharacterSetName();
      assertEquals("ANSEL", stringWithCustomFacts0.getValue());
  }
}
