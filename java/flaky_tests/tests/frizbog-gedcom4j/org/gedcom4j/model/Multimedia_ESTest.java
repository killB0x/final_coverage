/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 20:18:21 GMT 2022
 */

package org.gedcom4j.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.Options;
import org.gedcom4j.model.AbstractCitation;
import org.gedcom4j.model.ChangeDate;
import org.gedcom4j.model.FileReference;
import org.gedcom4j.model.Multimedia;
import org.gedcom4j.model.MultimediaReference;
import org.gedcom4j.model.StringWithCustomFacts;
import org.gedcom4j.model.UserReference;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Multimedia_ESTest extends Multimedia_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setXref("&$");
      String string0 = multimedia0.getXref();
      assertEquals("&$", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setXref("");
      String string0 = multimedia0.getXref();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.getUserReferences(true);
      List<UserReference> list0 = multimedia0.getUserReferences();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setRecIdNumber("~e0i(O3!W^vW@");
      StringWithCustomFacts stringWithCustomFacts0 = multimedia0.getRecIdNumber();
      assertEquals("~e0i(O3!W^vW@", stringWithCustomFacts0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.getFileReferences(true);
      List<FileReference> list0 = multimedia0.getFileReferences();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setEmbeddedTitle("");
      StringWithCustomFacts stringWithCustomFacts0 = multimedia0.getEmbeddedTitle();
      assertEquals("", stringWithCustomFacts0.getValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setEmbeddedMediaFormat("Multimedia [");
      StringWithCustomFacts stringWithCustomFacts0 = multimedia0.getEmbeddedMediaFormat();
      assertEquals("Multimedia [", stringWithCustomFacts0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      MultimediaReference multimediaReference0 = new MultimediaReference(multimedia0);
      multimedia0.setContinuedObject(multimediaReference0);
      MultimediaReference multimediaReference1 = multimedia0.getContinuedObject();
      assertSame(multimediaReference1, multimediaReference0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.getCitations(true);
      List<AbstractCitation> list0 = multimedia0.getCitations();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      ChangeDate changeDate0 = new ChangeDate();
      multimedia0.setChangeDate(changeDate0);
      ChangeDate changeDate1 = multimedia0.getChangeDate();
      assertSame(changeDate1, changeDate0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      List<String> list0 = multimedia0.getBlob(true);
      List<String> list1 = multimedia0.getBlob();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Multimedia multimedia0 = null;
      try {
        multimedia0 = new Multimedia((Multimedia) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.model.AbstractElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      List<UserReference> list0 = multimedia0.getUserReferences(false);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      List<FileReference> list0 = multimedia0.getFileReferences(false);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      List<AbstractCitation> list0 = multimedia0.getCitations(false);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      List<String> list0 = multimedia0.getBlob(false);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setXref("");
      String string0 = multimedia0.toString();
      assertEquals("Multimedia [xref=, ]", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setRecIdNumber("Multimedia []");
      String string0 = multimedia0.toString();
      assertEquals("Multimedia [recIdNumber=Multimedia [], ]", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setEmbeddedTitle("LDZ(<@r {o*!M");
      String string0 = multimedia0.toString();
      assertEquals("Multimedia [embeddedTitle=LDZ(<@r {o*!M, ]", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setEmbeddedMediaFormat("1kd2:e4h");
      String string0 = multimedia0.toString();
      assertEquals("Multimedia [embeddedMediaFormat=1kd2:e4h, ]", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      MultimediaReference multimediaReference0 = new MultimediaReference();
      multimedia0.setContinuedObject(multimediaReference0);
      String string0 = multimedia0.toString();
      assertEquals("Multimedia [continuedObject=MultimediaReference [], ]", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      ChangeDate changeDate0 = new ChangeDate();
      multimedia0.setChangeDate(changeDate0);
      String string0 = multimedia0.toString();
      assertEquals("Multimedia [changeDate=ChangeDate [], ]", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Options.setCollectionInitializationEnabled(true);
      Multimedia multimedia0 = new Multimedia();
      String string0 = multimedia0.toString();
      assertEquals("Multimedia [blob=[], citations=[], fileReferences=[], noteStructures=[], userReferences=[], customFacts=[]]", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setRecIdNumber((String) null);
      assertNull(multimedia0.getXref());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setEmbeddedTitle((String) null);
      assertNull(multimedia0.getXref());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setEmbeddedMediaFormat((String) null);
      assertNull(multimedia0.getXref());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setXref("");
      multimedia0.hashCode();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setEmbeddedTitle("");
      multimedia0.hashCode();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setRecIdNumber("(VXi>");
      multimedia0.hashCode();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      MultimediaReference multimediaReference0 = new MultimediaReference();
      multimedia0.setContinuedObject(multimediaReference0);
      multimedia0.hashCode();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      ChangeDate changeDate0 = new ChangeDate();
      multimedia0.setChangeDate(changeDate0);
      multimedia0.hashCode();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setEmbeddedMediaFormat("0vZy8,ZPkvq1F");
      multimedia0.hashCode();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Options.setCollectionInitializationEnabled(true);
      Multimedia multimedia0 = new Multimedia();
      multimedia0.hashCode();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      List<UserReference> list0 = multimedia0.getUserReferences(true);
      List<UserReference> list1 = multimedia0.getUserReferences(true);
      assertNotNull(list1);
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      List<FileReference> list0 = multimedia0.getFileReferences(true);
      List<FileReference> list1 = multimedia0.getFileReferences(true);
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Options.setCollectionInitializationEnabled(true);
      Multimedia multimedia0 = new Multimedia();
      List<AbstractCitation> list0 = multimedia0.getCitations(true);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Options.setCollectionInitializationEnabled(true);
      Multimedia multimedia0 = new Multimedia();
      List<String> list0 = multimedia0.getBlob(true);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia();
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      multimedia0.setXref("");
      boolean boolean0 = multimedia0.equals(multimedia1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia();
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      multimedia0.setXref("?B<@75nHQHN3ks");
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia(multimedia0);
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      multimedia1.getUserReferences(true);
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia(multimedia0);
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      multimedia1.getUserReferences(true);
      boolean boolean0 = multimedia0.equals(multimedia1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia(multimedia0);
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      multimedia1.setEmbeddedTitle("]");
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia(multimedia0);
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      multimedia1.setEmbeddedTitle(">rP");
      boolean boolean0 = multimedia0.equals(multimedia1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setRecIdNumber("");
      Multimedia multimedia1 = new Multimedia();
      boolean boolean0 = multimedia0.equals(multimedia1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia();
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      multimedia0.setRecIdNumber("(VXi>");
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia(multimedia0);
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      multimedia1.getFileReferences(true);
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      List<FileReference> list0 = multimedia0.getFileReferences(true);
      assertNotNull(list0);
      
      Multimedia multimedia1 = new Multimedia();
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia(multimedia0);
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      MultimediaReference multimediaReference0 = new MultimediaReference();
      multimedia1.setContinuedObject(multimediaReference0);
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia(multimedia0);
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      MultimediaReference multimediaReference0 = new MultimediaReference();
      multimedia1.setContinuedObject(multimediaReference0);
      boolean boolean0 = multimedia0.equals(multimedia1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia(multimedia0);
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      multimedia0.getCitations(true);
      boolean boolean0 = multimedia0.equals(multimedia1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia(multimedia0);
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      multimedia0.getCitations(true);
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia(multimedia0);
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      ChangeDate changeDate0 = new ChangeDate();
      multimedia1.setChangeDate(changeDate0);
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertFalse(multimedia1.equals((Object)multimedia0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      ChangeDate changeDate0 = new ChangeDate();
      multimedia0.setChangeDate(changeDate0);
      Multimedia multimedia1 = new Multimedia();
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia(multimedia0);
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      multimedia0.setEmbeddedMediaFormat("customFacts=");
      boolean boolean0 = multimedia0.equals(multimedia1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia(multimedia0);
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      multimedia1.setEmbeddedMediaFormat("1kd2:e4h");
      boolean boolean0 = multimedia0.equals(multimedia1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia(multimedia0);
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      multimedia0.getBlob(true);
      boolean boolean0 = multimedia0.equals(multimedia1);
      assertFalse(multimedia1.equals((Object)multimedia0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia();
      assertTrue(multimedia1.equals((Object)multimedia0));
      
      multimedia1.getBlob(true);
      boolean boolean0 = multimedia0.equals(multimedia1);
      assertFalse(multimedia1.equals((Object)multimedia0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Options.setCollectionInitializationEnabled(true);
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia();
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      Object object0 = new Object();
      boolean boolean0 = multimedia0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      boolean boolean0 = multimedia0.equals(multimedia0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setRecIdNumber("-oUoHLnwh~C");
      Multimedia multimedia1 = new Multimedia(multimedia0);
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setEmbeddedTitle("");
      Multimedia multimedia1 = new Multimedia(multimedia0);
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setEmbeddedMediaFormat("(8J)2BijwVA");
      Multimedia multimedia1 = new Multimedia(multimedia0);
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Options.setCollectionInitializationEnabled(true);
      Multimedia multimedia0 = new Multimedia();
      Multimedia multimedia1 = new Multimedia(multimedia0);
      assertNull(multimedia1.getXref());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      StringWithCustomFacts stringWithCustomFacts0 = multimedia0.getRecIdNumber();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setRecIdNumber((StringWithCustomFacts) null);
      assertNull(multimedia0.getXref());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      String string0 = multimedia0.getXref();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      MultimediaReference multimediaReference0 = new MultimediaReference();
      multimedia0.setContinuedObject(multimediaReference0);
      Multimedia multimedia1 = new Multimedia(multimedia0);
      boolean boolean0 = multimedia0.equals(multimedia1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      ChangeDate changeDate0 = new ChangeDate();
      multimedia0.setChangeDate(changeDate0);
      Multimedia multimedia1 = new Multimedia(multimedia0);
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      multimedia0.setEmbeddedTitle(stringWithCustomFacts0);
      assertNull(stringWithCustomFacts0.getValue());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      StringWithCustomFacts stringWithCustomFacts0 = multimedia0.getEmbeddedMediaFormat();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setXref("xref=");
      Multimedia multimedia1 = new Multimedia(multimedia0);
      boolean boolean0 = multimedia1.equals(multimedia0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      List<FileReference> list0 = multimedia0.getFileReferences();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      multimedia0.setEmbeddedMediaFormat((StringWithCustomFacts) null);
      assertNull(multimedia0.getXref());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      ChangeDate changeDate0 = multimedia0.getChangeDate();
      assertNull(changeDate0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      List<AbstractCitation> list0 = multimedia0.getCitations();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      List<String> list0 = multimedia0.getBlob();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      List<UserReference> list0 = multimedia0.getUserReferences();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      StringWithCustomFacts stringWithCustomFacts0 = multimedia0.getEmbeddedTitle();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      MultimediaReference multimediaReference0 = multimedia0.getContinuedObject();
      assertNull(multimediaReference0);
  }
}
