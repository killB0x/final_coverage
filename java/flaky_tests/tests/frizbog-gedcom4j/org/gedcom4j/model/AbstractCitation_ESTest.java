/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 23:01:58 GMT 2022
 */

package org.gedcom4j.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.CitationWithSource;
import org.gedcom4j.model.CitationWithoutSource;
import org.gedcom4j.model.MultimediaReference;
import org.gedcom4j.model.Source;
import org.gedcom4j.model.StringWithCustomFacts;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCitation_ESTest extends AbstractCitation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CitationWithSource citationWithSource0 = new CitationWithSource();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      citationWithSource0.setCertainty(stringWithCustomFacts0);
      assertNull(stringWithCustomFacts0.getValue());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CitationWithSource citationWithSource0 = new CitationWithSource();
      LinkedList<MultimediaReference> linkedList0 = new LinkedList<MultimediaReference>();
      MultimediaReference multimediaReference0 = new MultimediaReference();
      linkedList0.offerLast(multimediaReference0);
      citationWithSource0.multimedia = (List<MultimediaReference>) linkedList0;
      List<MultimediaReference> list0 = citationWithSource0.getMultimedia();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CitationWithSource citationWithSource0 = new CitationWithSource();
      Source source0 = new Source();
      List<MultimediaReference> list0 = source0.getMultimedia(true);
      citationWithSource0.multimedia = list0;
      List<MultimediaReference> list1 = citationWithSource0.getMultimedia();
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CitationWithoutSource citationWithoutSource0 = new CitationWithoutSource();
      List<MultimediaReference> list0 = citationWithoutSource0.getMultimedia(false);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CitationWithSource citationWithSource0 = new CitationWithSource();
      List<MultimediaReference> list0 = citationWithSource0.getMultimedia(true);
      List<MultimediaReference> list1 = citationWithSource0.getMultimedia(true);
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CitationWithoutSource citationWithoutSource0 = new CitationWithoutSource();
      citationWithoutSource0.setCertainty((String) null);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CitationWithSource citationWithSource0 = new CitationWithSource();
      citationWithSource0.setCertainty("y+#PuOG");
      StringWithCustomFacts stringWithCustomFacts0 = citationWithSource0.getCertainty();
      assertEquals("y+#PuOG", stringWithCustomFacts0.toString());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CitationWithoutSource citationWithoutSource0 = new CitationWithoutSource();
      StringWithCustomFacts stringWithCustomFacts0 = citationWithoutSource0.getCertainty();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CitationWithoutSource citationWithoutSource0 = new CitationWithoutSource();
      CitationWithoutSource citationWithoutSource1 = new CitationWithoutSource(citationWithoutSource0);
      assertTrue(citationWithoutSource1.equals((Object)citationWithoutSource0));
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CitationWithSource citationWithSource0 = new CitationWithSource();
      List<MultimediaReference> list0 = citationWithSource0.getMultimedia();
      assertNull(list0);
  }
}
