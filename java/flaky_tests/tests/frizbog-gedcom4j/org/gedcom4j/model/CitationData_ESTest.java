/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 21:42:00 GMT 2022
 */

package org.gedcom4j.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.Options;
import org.gedcom4j.model.CitationData;
import org.gedcom4j.model.CustomFact;
import org.gedcom4j.model.MultiStringWithCustomFacts;
import org.gedcom4j.model.StringWithCustomFacts;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CitationData_ESTest extends CitationData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Options.setCollectionInitializationEnabled(true);
      CitationData citationData0 = new CitationData();
      citationData0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      List<MultiStringWithCustomFacts> list0 = citationData0.getSourceText(true);
      List<MultiStringWithCustomFacts> list1 = citationData0.getSourceText();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      citationData0.setEntryDate("customFacts=");
      StringWithCustomFacts stringWithCustomFacts0 = citationData0.getEntryDate();
      assertEquals("customFacts=", stringWithCustomFacts0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CitationData citationData0 = null;
      try {
        citationData0 = new CitationData((CitationData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.model.AbstractElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      List<MultiStringWithCustomFacts> list0 = citationData0.getSourceText(false);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      List<CustomFact> list0 = citationData0.getCustomFactsWithTag("+|dyoLd?:K4,?hL");
      citationData0.customFacts = list0;
      String string0 = citationData0.toString();
      assertEquals("CitationData [customFacts=[]]", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      List<MultiStringWithCustomFacts> list0 = citationData0.getSourceText(true);
      assertNotNull(list0);
      
      String string0 = citationData0.toString();
      assertEquals("CitationData [sourceText=[], ]", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      citationData0.setEntryDate("CitationData [sourceText=[], ]");
      String string0 = citationData0.toString();
      assertEquals("CitationData [entryDate=CitationData [sourceText=[], ], ]", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      citationData0.setEntryDate((String) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      citationData0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      citationData0.setEntryDate("customFacts=");
      citationData0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      List<MultiStringWithCustomFacts> list0 = citationData0.getSourceText(true);
      List<MultiStringWithCustomFacts> list1 = citationData0.getSourceText(true);
      assertNotNull(list1);
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      CitationData citationData1 = new CitationData(citationData0);
      assertTrue(citationData1.equals((Object)citationData0));
      
      citationData0.getSourceText(true);
      boolean boolean0 = citationData1.equals(citationData0);
      assertFalse(citationData1.equals((Object)citationData0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      CitationData citationData1 = new CitationData(citationData0);
      assertTrue(citationData1.equals((Object)citationData0));
      
      citationData0.getSourceText(true);
      boolean boolean0 = citationData0.equals(citationData1);
      assertFalse(citationData1.equals((Object)citationData0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      CitationData citationData1 = new CitationData(citationData0);
      assertTrue(citationData1.equals((Object)citationData0));
      
      citationData1.setEntryDate("Tl:6qt:,");
      boolean boolean0 = citationData1.equals(citationData0);
      assertFalse(citationData1.equals((Object)citationData0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      CitationData citationData1 = new CitationData();
      assertTrue(citationData1.equals((Object)citationData0));
      
      citationData1.setEntryDate("");
      boolean boolean0 = citationData0.equals(citationData1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      citationData0.setEntryDate("");
      CitationData citationData1 = new CitationData(citationData0);
      boolean boolean0 = citationData0.equals(citationData1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      Object object0 = new Object();
      boolean boolean0 = citationData0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      boolean boolean0 = citationData0.equals(citationData0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      List<MultiStringWithCustomFacts> list0 = citationData0.getSourceText(true);
      assertNotNull(list0);
      
      CitationData citationData1 = new CitationData(citationData0);
      boolean boolean0 = citationData0.equals(citationData1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      List<MultiStringWithCustomFacts> list0 = citationData0.getSourceText();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      citationData0.setEntryDate(stringWithCustomFacts0);
      assertNull(stringWithCustomFacts0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      StringWithCustomFacts stringWithCustomFacts0 = citationData0.getEntryDate();
      assertNull(stringWithCustomFacts0);
  }
}
