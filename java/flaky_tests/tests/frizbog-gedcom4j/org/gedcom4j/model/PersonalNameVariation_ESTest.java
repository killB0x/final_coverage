/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 20:23:27 GMT 2022
 */

package org.gedcom4j.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.Options;
import org.gedcom4j.model.AbstractCitation;
import org.gedcom4j.model.CitationWithSource;
import org.gedcom4j.model.NoteStructure;
import org.gedcom4j.model.PersonalNameVariation;
import org.gedcom4j.model.StringWithCustomFacts;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PersonalNameVariation_ESTest extends PersonalNameVariation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      CitationWithSource citationWithSource0 = new CitationWithSource();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts("L64O<C0*");
      citationWithSource0.certainty = stringWithCustomFacts0;
      personalNameVariation0.setSurnamePrefix(citationWithSource0.certainty);
      StringWithCustomFacts stringWithCustomFacts1 = personalNameVariation0.getSurnamePrefix();
      assertSame(stringWithCustomFacts1, stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setSuffix("(f{LpBD");
      StringWithCustomFacts stringWithCustomFacts0 = personalNameVariation0.getSuffix();
      assertEquals("(f{LpBD", stringWithCustomFacts0.getValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setPrefix("Q98)");
      StringWithCustomFacts stringWithCustomFacts0 = personalNameVariation0.getPrefix();
      assertEquals("Q98)", stringWithCustomFacts0.getValue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.getNoteStructures(true);
      List<NoteStructure> list0 = personalNameVariation0.getNoteStructures();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setNickname("");
      StringWithCustomFacts stringWithCustomFacts0 = personalNameVariation0.getNickname();
      assertEquals("", stringWithCustomFacts0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setGivenName("mediaType=");
      StringWithCustomFacts stringWithCustomFacts0 = personalNameVariation0.getGivenName();
      assertEquals("mediaType=", stringWithCustomFacts0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Options.setCollectionInitializationEnabled(true);
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      List<AbstractCitation> list0 = personalNameVariation0.getCitations();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = null;
      try {
        personalNameVariation0 = new PersonalNameVariation((PersonalNameVariation) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.model.AbstractElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      List<NoteStructure> list0 = personalNameVariation0.getNoteStructures(false);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      List<AbstractCitation> list0 = personalNameVariation0.getCitations(false);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      List<NoteStructure> list0 = personalNameVariation0.getNoteStructures();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setVariationType("^.Jq64=<:s@<");
      String string0 = personalNameVariation0.toString();
      assertEquals("PersonalNameVariation [variationType=^.Jq64=<:s@<, ]", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setVariation("1LnQ?G^ao\"+:iZ`jZF");
      String string0 = personalNameVariation0.toString();
      assertEquals("PersonalNameVariation [variation=1LnQ?G^ao\"+:iZ`jZF, ]", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setSurnamePrefix("oagzz");
      String string0 = personalNameVariation0.toString();
      assertEquals("PersonalNameVariation [surnamePrefix=oagzz, ]", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setSurname("noteStructures=");
      String string0 = personalNameVariation0.toString();
      assertEquals("PersonalNameVariation [surname=noteStructures=, ]", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setSuffix("");
      String string0 = personalNameVariation0.toString();
      assertEquals("PersonalNameVariation [suffix=, ]", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      personalNameVariation0.setPrefix(stringWithCustomFacts0);
      String string0 = personalNameVariation0.toString();
      assertEquals("PersonalNameVariation [prefix=null, ]", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setNickname("a87");
      String string0 = personalNameVariation0.toString();
      assertEquals("PersonalNameVariation [nickname=a87, ]", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      personalNameVariation0.setGivenName(stringWithCustomFacts0);
      String string0 = personalNameVariation0.toString();
      assertEquals("PersonalNameVariation [givenName=null, ]", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Options.setCollectionInitializationEnabled(true);
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      String string0 = personalNameVariation0.toString();
      assertEquals("PersonalNameVariation [citations=[], noteStructures=[], customFacts=[]]", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setSurnamePrefix((String) null);
      assertNull(personalNameVariation0.getVariation());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setSurname((String) null);
      assertNull(personalNameVariation0.getVariation());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setSuffix((String) null);
      assertNull(personalNameVariation0.getVariation());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setPrefix((String) null);
      assertNull(personalNameVariation0.getVariation());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setNickname((String) null);
      assertNull(personalNameVariation0.getVariation());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setGivenName((String) null);
      assertNull(personalNameVariation0.getVariation());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setVariationType("^.Jq64=<:s@<");
      personalNameVariation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setVariation("");
      personalNameVariation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setSurnamePrefix("nL=_|TK%+{Rw#[|02uy");
      personalNameVariation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setSurname("UserReference [");
      personalNameVariation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setSuffix("");
      personalNameVariation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setPrefix("");
      personalNameVariation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setNickname("^.Jq64=<:s@<");
      personalNameVariation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setGivenName("1h");
      personalNameVariation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Options.setCollectionInitializationEnabled(true);
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Options.setCollectionInitializationEnabled(true);
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      List<NoteStructure> list0 = personalNameVariation0.getNoteStructures(true);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      List<AbstractCitation> list0 = personalNameVariation0.getCitations(true);
      List<AbstractCitation> list1 = personalNameVariation0.getCitations(true);
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setVariationType("");
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      boolean boolean0 = personalNameVariation1.equals(personalNameVariation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.variation = ", ";
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      boolean boolean0 = personalNameVariation1.equals(personalNameVariation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      assertTrue(personalNameVariation1.equals((Object)personalNameVariation0));
      
      personalNameVariation1.setSurnamePrefix("place=");
      boolean boolean0 = personalNameVariation1.equals(personalNameVariation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setSurnamePrefix("8pB_D0{-iBNt");
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation();
      boolean boolean0 = personalNameVariation1.equals(personalNameVariation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation();
      assertTrue(personalNameVariation1.equals((Object)personalNameVariation0));
      
      personalNameVariation0.setSurname("prefix=");
      boolean boolean0 = personalNameVariation0.equals(personalNameVariation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      assertTrue(personalNameVariation1.equals((Object)personalNameVariation0));
      
      personalNameVariation1.setSurname(":>");
      boolean boolean0 = personalNameVariation0.equals(personalNameVariation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      assertTrue(personalNameVariation1.equals((Object)personalNameVariation0));
      
      personalNameVariation1.setSuffix("v;4I<vbPQ!V-");
      boolean boolean0 = personalNameVariation1.equals(personalNameVariation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      assertTrue(personalNameVariation1.equals((Object)personalNameVariation0));
      
      personalNameVariation1.setSuffix("org.gedcom4j.model.AbstractCitation");
      boolean boolean0 = personalNameVariation0.equals(personalNameVariation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      assertTrue(personalNameVariation1.equals((Object)personalNameVariation0));
      
      personalNameVariation1.setPrefix("#7CU`SE)NA,2U~L4[");
      boolean boolean0 = personalNameVariation1.equals(personalNameVariation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      personalNameVariation0.setPrefix(stringWithCustomFacts0);
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation();
      boolean boolean0 = personalNameVariation1.equals(personalNameVariation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      assertTrue(personalNameVariation1.equals((Object)personalNameVariation0));
      
      personalNameVariation1.getNoteStructures(true);
      boolean boolean0 = personalNameVariation1.equals(personalNameVariation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      assertTrue(personalNameVariation1.equals((Object)personalNameVariation0));
      
      personalNameVariation1.getNoteStructures(true);
      boolean boolean0 = personalNameVariation0.equals(personalNameVariation1);
      assertFalse(personalNameVariation1.equals((Object)personalNameVariation0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setNickname("1q=7l44=W= h]A8Y/");
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation();
      boolean boolean0 = personalNameVariation0.equals(personalNameVariation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      assertTrue(personalNameVariation1.equals((Object)personalNameVariation0));
      
      personalNameVariation1.setNickname("a87");
      boolean boolean0 = personalNameVariation0.equals(personalNameVariation1);
      assertFalse(personalNameVariation1.equals((Object)personalNameVariation0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      assertTrue(personalNameVariation1.equals((Object)personalNameVariation0));
      
      personalNameVariation1.setGivenName("");
      boolean boolean0 = personalNameVariation0.equals(personalNameVariation1);
      assertFalse(personalNameVariation1.equals((Object)personalNameVariation0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      assertTrue(personalNameVariation1.equals((Object)personalNameVariation0));
      
      personalNameVariation1.getCitations(true);
      boolean boolean0 = personalNameVariation1.equals(personalNameVariation0);
      assertFalse(personalNameVariation1.equals((Object)personalNameVariation0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      assertTrue(personalNameVariation1.equals((Object)personalNameVariation0));
      
      personalNameVariation1.getCitations(true);
      boolean boolean0 = personalNameVariation0.equals(personalNameVariation1);
      assertFalse(personalNameVariation1.equals((Object)personalNameVariation0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      CitationWithSource citationWithSource0 = new CitationWithSource();
      boolean boolean0 = personalNameVariation0.equals(citationWithSource0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      boolean boolean0 = personalNameVariation0.equals(personalNameVariation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setSurnamePrefix("");
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      boolean boolean0 = personalNameVariation1.equals(personalNameVariation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setSurname("Sb7!.OlQZv[c");
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      boolean boolean0 = personalNameVariation1.equals(personalNameVariation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setSuffix(", ");
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      boolean boolean0 = personalNameVariation0.equals(personalNameVariation1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setPrefix("HA 7");
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      boolean boolean0 = personalNameVariation1.equals(personalNameVariation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setNickname("1q=7l44=W= h]A8Y/");
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      boolean boolean0 = personalNameVariation0.equals(personalNameVariation1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      personalNameVariation0.setGivenName("surnamePrefix=");
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      boolean boolean0 = personalNameVariation0.equals(personalNameVariation1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Options.setCollectionInitializationEnabled(true);
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation(personalNameVariation0);
      boolean boolean0 = personalNameVariation1.equals(personalNameVariation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      StringWithCustomFacts stringWithCustomFacts0 = personalNameVariation0.getSurname();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      StringWithCustomFacts stringWithCustomFacts0 = personalNameVariation0.getSuffix();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts("QLM<m|:9&J4F;vLL}D2");
      personalNameVariation0.setSuffix(stringWithCustomFacts0);
      assertNull(personalNameVariation0.getVariation());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      StringWithCustomFacts stringWithCustomFacts0 = personalNameVariation0.getPrefix();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      List<AbstractCitation> list0 = personalNameVariation0.getCitations();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      personalNameVariation0.setGivenName(stringWithCustomFacts0);
      PersonalNameVariation personalNameVariation1 = new PersonalNameVariation();
      boolean boolean0 = personalNameVariation0.equals(personalNameVariation1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      StringWithCustomFacts stringWithCustomFacts0 = personalNameVariation0.getNickname();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      personalNameVariation0.setNickname(stringWithCustomFacts0);
      assertNull(stringWithCustomFacts0.toString());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      StringWithCustomFacts stringWithCustomFacts0 = personalNameVariation0.getGivenName();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      StringWithCustomFacts stringWithCustomFacts0 = personalNameVariation0.getSurnamePrefix();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      PersonalNameVariation personalNameVariation0 = new PersonalNameVariation();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts("I;Fvs0XHkf-F0%tXT|;");
      personalNameVariation0.setSurname(stringWithCustomFacts0);
      StringWithCustomFacts stringWithCustomFacts1 = personalNameVariation0.getSurname();
      assertEquals("I;Fvs0XHkf-F0%tXT|;", stringWithCustomFacts1.toString());
  }
}
