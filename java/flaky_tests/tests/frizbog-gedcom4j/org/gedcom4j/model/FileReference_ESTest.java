/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 21:10:40 GMT 2022
 */

package org.gedcom4j.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.CustomFact;
import org.gedcom4j.model.FileReference;
import org.gedcom4j.model.StringWithCustomFacts;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileReference_ESTest extends FileReference_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.getCustomFacts(true);
      fileReference0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setTitle("");
      StringWithCustomFacts stringWithCustomFacts0 = fileReference0.getTitle();
      assertEquals("", stringWithCustomFacts0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setReferenceToFile("-z}){W|");
      StringWithCustomFacts stringWithCustomFacts0 = fileReference0.getReferenceToFile();
      assertEquals("-z}){W|", stringWithCustomFacts0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      fileReference0.setMediaType(stringWithCustomFacts0);
      StringWithCustomFacts stringWithCustomFacts1 = fileReference0.getMediaType();
      assertNull(stringWithCustomFacts1.getValue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileReference fileReference0 = null;
      try {
        fileReference0 = new FileReference((FileReference) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.model.AbstractElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      LinkedList<CustomFact> linkedList0 = new LinkedList<CustomFact>();
      fileReference0.customFacts = (List<CustomFact>) linkedList0;
      String string0 = fileReference0.toString();
      assertEquals("FileReference [customFacts=[]]", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setTitle("}O_]YW$e>yI+(lyOT|");
      String string0 = fileReference0.toString();
      assertEquals("FileReference [title=}O_]YW$e>yI+(lyOT|, ]", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setReferenceToFile("+8-/$#A0MpdYA$QMg");
      String string0 = fileReference0.toString();
      assertEquals("FileReference [referenceToFile=+8-/$#A0MpdYA$QMg, ]", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      fileReference0.setMediaType(stringWithCustomFacts0);
      String string0 = fileReference0.toString();
      assertEquals("FileReference [mediaType=null, ]", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setFormat("FileReference []");
      String string0 = fileReference0.toString();
      assertEquals("FileReference [format=FileReference [], ]", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setTitle((String) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setReferenceToFile((String) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setMediaType((String) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setFormat((String) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setTitle("O^QQ7yN!K~W_\"J%Mn");
      fileReference0.hashCode();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setReferenceToFile("FileReference []");
      fileReference0.hashCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setMediaType("");
      fileReference0.hashCode();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setFormat("FileReference []");
      fileReference0.hashCode();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setTitle("");
      FileReference fileReference1 = new FileReference(fileReference0);
      boolean boolean0 = fileReference0.equals(fileReference1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      FileReference fileReference1 = new FileReference(fileReference0);
      assertTrue(fileReference1.equals((Object)fileReference0));
      
      fileReference0.setTitle("}O_]YW$e>yI+(lyOT|");
      boolean boolean0 = fileReference1.equals(fileReference0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      FileReference fileReference1 = new FileReference(fileReference0);
      assertTrue(fileReference1.equals((Object)fileReference0));
      
      fileReference0.setTitle("}O_]YW$e>yI+(lyOT|");
      boolean boolean0 = fileReference0.equals(fileReference1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setReferenceToFile("+8-/$#A0MpdYA$QMg");
      FileReference fileReference1 = new FileReference(fileReference0);
      assertTrue(fileReference1.equals((Object)fileReference0));
      
      fileReference1.setReferenceToFile("L");
      boolean boolean0 = fileReference0.equals(fileReference1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      FileReference fileReference1 = new FileReference(fileReference0);
      assertTrue(fileReference1.equals((Object)fileReference0));
      
      fileReference1.setReferenceToFile("");
      boolean boolean0 = fileReference0.equals(fileReference1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setReferenceToFile("+8-/$#A0MpdYA$QMg");
      FileReference fileReference1 = new FileReference(fileReference0);
      boolean boolean0 = fileReference0.equals(fileReference1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      FileReference fileReference1 = new FileReference(fileReference0);
      assertTrue(fileReference1.equals((Object)fileReference0));
      
      fileReference0.setMediaType("4pLW$C']c1\"");
      boolean boolean0 = fileReference0.equals(fileReference1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      FileReference fileReference1 = new FileReference(fileReference0);
      assertTrue(fileReference1.equals((Object)fileReference0));
      
      fileReference1.setMediaType("");
      boolean boolean0 = fileReference0.equals(fileReference1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      fileReference0.setMediaType(stringWithCustomFacts0);
      FileReference fileReference1 = new FileReference(fileReference0);
      boolean boolean0 = fileReference0.equals(fileReference1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      FileReference fileReference1 = new FileReference(fileReference0);
      assertTrue(fileReference1.equals((Object)fileReference0));
      
      fileReference1.setFormat("romanized=");
      boolean boolean0 = fileReference1.equals(fileReference0);
      assertFalse(fileReference1.equals((Object)fileReference0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      FileReference fileReference1 = new FileReference(fileReference0);
      assertTrue(fileReference1.equals((Object)fileReference0));
      
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      fileReference1.setFormat(stringWithCustomFacts0);
      boolean boolean0 = fileReference0.equals(fileReference1);
      assertFalse(fileReference1.equals((Object)fileReference0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      Object object0 = new Object();
      boolean boolean0 = fileReference0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      boolean boolean0 = fileReference0.equals(fileReference0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setFormat("");
      FileReference fileReference1 = new FileReference(fileReference0);
      boolean boolean0 = fileReference0.equals(fileReference1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      fileReference0.setTitle((StringWithCustomFacts) null);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      fileReference0.setReferenceToFile(stringWithCustomFacts0);
      assertNull(stringWithCustomFacts0.getValue());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      fileReference0.setFormat(stringWithCustomFacts0);
      StringWithCustomFacts stringWithCustomFacts1 = fileReference0.getFormat();
      assertSame(stringWithCustomFacts1, stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      StringWithCustomFacts stringWithCustomFacts0 = fileReference0.getTitle();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      StringWithCustomFacts stringWithCustomFacts0 = fileReference0.getReferenceToFile();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      StringWithCustomFacts stringWithCustomFacts0 = fileReference0.getMediaType();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileReference fileReference0 = new FileReference();
      StringWithCustomFacts stringWithCustomFacts0 = fileReference0.getFormat();
      assertNull(stringWithCustomFacts0);
  }
}
