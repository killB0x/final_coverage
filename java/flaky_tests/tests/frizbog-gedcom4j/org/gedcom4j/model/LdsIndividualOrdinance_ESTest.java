/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 21:29:26 GMT 2022
 */

package org.gedcom4j.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.FamilyChild;
import org.gedcom4j.model.Individual;
import org.gedcom4j.model.LdsIndividualOrdinance;
import org.gedcom4j.model.StringWithCustomFacts;
import org.gedcom4j.model.enumerations.LdsIndividualOrdinanceType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LdsIndividualOrdinance_ESTest extends LdsIndividualOrdinance_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      ldsIndividualOrdinance0.setYNull("|Klv");
      String string0 = ldsIndividualOrdinance0.getYNull();
      assertEquals("|Klv", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      ldsIndividualOrdinance0.setYNull("");
      String string0 = ldsIndividualOrdinance0.getYNull();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      LdsIndividualOrdinanceType ldsIndividualOrdinanceType0 = LdsIndividualOrdinanceType.BAPTISM;
      ldsIndividualOrdinance0.setType(ldsIndividualOrdinanceType0);
      LdsIndividualOrdinanceType ldsIndividualOrdinanceType1 = ldsIndividualOrdinance0.getType();
      assertEquals(LdsIndividualOrdinanceType.BAPTISM, ldsIndividualOrdinanceType1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      FamilyChild familyChild0 = new FamilyChild();
      ldsIndividualOrdinance0.setFamilyWhereChild(familyChild0);
      FamilyChild familyChild1 = ldsIndividualOrdinance0.getFamilyWhereChild();
      assertSame(familyChild1, familyChild0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = null;
      try {
        ldsIndividualOrdinance0 = new LdsIndividualOrdinance((LdsIndividualOrdinance) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.model.AbstractElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      ldsIndividualOrdinance0.getCustomFacts(true);
      String string0 = ldsIndividualOrdinance0.toString();
      assertEquals("LdsIndividualOrdinance [customFacts=[]]", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      ldsIndividualOrdinance0.setTemple("");
      String string0 = ldsIndividualOrdinance0.toString();
      assertEquals("LdsIndividualOrdinance [temple=, ]", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      ldsIndividualOrdinance0.setStatus("familyWhereChild=");
      String string0 = ldsIndividualOrdinance0.toString();
      assertEquals("LdsIndividualOrdinance [status=familyWhereChild=, ]", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      ldsIndividualOrdinance0.setPlace("#T&pP9NT&D+p#");
      String string0 = ldsIndividualOrdinance0.toString();
      assertEquals("LdsIndividualOrdinance [place=#T&pP9NT&D+p#, ]", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      ldsIndividualOrdinance0.getNoteStructures(true);
      String string0 = ldsIndividualOrdinance0.toString();
      assertEquals("LdsIndividualOrdinance [noteStructures=[], ]", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      Individual individual0 = new Individual();
      individual0.setRestrictionNotice("\"4r5eeqEfsNG");
      StringWithCustomFacts stringWithCustomFacts0 = individual0.getRestrictionNotice();
      ldsIndividualOrdinance0.setDate(stringWithCustomFacts0);
      String string0 = ldsIndividualOrdinance0.toString();
      assertEquals("LdsIndividualOrdinance [date=\"4r5eeqEfsNG, ]", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      ldsIndividualOrdinance0.getCitations(true);
      String string0 = ldsIndividualOrdinance0.toString();
      assertEquals("LdsIndividualOrdinance [citations=[], ]", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      ldsIndividualOrdinance0.setYNull("HLw~zjX*5z]n");
      String string0 = ldsIndividualOrdinance0.toString();
      assertEquals("LdsIndividualOrdinance [yNull=HLw~zjX*5z]n, ]", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      LdsIndividualOrdinanceType ldsIndividualOrdinanceType0 = LdsIndividualOrdinanceType.BAPTISM;
      ldsIndividualOrdinance0.setType(ldsIndividualOrdinanceType0);
      String string0 = ldsIndividualOrdinance0.toString();
      assertEquals("LdsIndividualOrdinance [type=LDS Baptism, ]", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      FamilyChild familyChild0 = new FamilyChild();
      ldsIndividualOrdinance0.setFamilyWhereChild(familyChild0);
      String string0 = ldsIndividualOrdinance0.toString();
      assertEquals("LdsIndividualOrdinance [familyWhereChild=FamilyChild [], ]", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      ldsIndividualOrdinance0.setYNull("HLw~zjX*5z]n");
      ldsIndividualOrdinance0.hashCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      LdsIndividualOrdinanceType ldsIndividualOrdinanceType0 = LdsIndividualOrdinanceType.BAPTISM;
      ldsIndividualOrdinance0.setType(ldsIndividualOrdinanceType0);
      ldsIndividualOrdinance0.hashCode();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      FamilyChild familyChild0 = new FamilyChild();
      ldsIndividualOrdinance0.setFamilyWhereChild(familyChild0);
      ldsIndividualOrdinance0.hashCode();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      ldsIndividualOrdinance0.setYNull("HLw~zjX*5z]n");
      LdsIndividualOrdinance ldsIndividualOrdinance1 = new LdsIndividualOrdinance();
      boolean boolean0 = ldsIndividualOrdinance0.equals(ldsIndividualOrdinance1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      ldsIndividualOrdinance0.setYNull("HLw~zjX*5z]n");
      LdsIndividualOrdinance ldsIndividualOrdinance1 = new LdsIndividualOrdinance();
      boolean boolean0 = ldsIndividualOrdinance1.equals(ldsIndividualOrdinance0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      LdsIndividualOrdinance ldsIndividualOrdinance1 = new LdsIndividualOrdinance();
      assertTrue(ldsIndividualOrdinance1.equals((Object)ldsIndividualOrdinance0));
      
      LdsIndividualOrdinanceType ldsIndividualOrdinanceType0 = LdsIndividualOrdinanceType.ENDOWMENT;
      ldsIndividualOrdinance1.setType(ldsIndividualOrdinanceType0);
      boolean boolean0 = ldsIndividualOrdinance0.equals(ldsIndividualOrdinance1);
      assertFalse(ldsIndividualOrdinance1.equals((Object)ldsIndividualOrdinance0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      LdsIndividualOrdinance ldsIndividualOrdinance1 = new LdsIndividualOrdinance(ldsIndividualOrdinance0);
      assertTrue(ldsIndividualOrdinance1.equals((Object)ldsIndividualOrdinance0));
      
      FamilyChild familyChild0 = new FamilyChild();
      ldsIndividualOrdinance1.setFamilyWhereChild(familyChild0);
      boolean boolean0 = ldsIndividualOrdinance0.equals(ldsIndividualOrdinance1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      LdsIndividualOrdinance ldsIndividualOrdinance1 = new LdsIndividualOrdinance(ldsIndividualOrdinance0);
      assertTrue(ldsIndividualOrdinance1.equals((Object)ldsIndividualOrdinance0));
      
      FamilyChild familyChild0 = new FamilyChild();
      ldsIndividualOrdinance1.setFamilyWhereChild(familyChild0);
      boolean boolean0 = ldsIndividualOrdinance1.equals(ldsIndividualOrdinance0);
      assertFalse(ldsIndividualOrdinance1.equals((Object)ldsIndividualOrdinance0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      LdsIndividualOrdinance ldsIndividualOrdinance1 = new LdsIndividualOrdinance(ldsIndividualOrdinance0);
      Individual individual0 = new Individual();
      individual0.setRestrictionNotice("\"4r5eeqEfsNG");
      StringWithCustomFacts stringWithCustomFacts0 = individual0.getRestrictionNotice();
      ldsIndividualOrdinance0.setDate(stringWithCustomFacts0);
      boolean boolean0 = ldsIndividualOrdinance1.equals(ldsIndividualOrdinance0);
      assertFalse(ldsIndividualOrdinance1.equals((Object)ldsIndividualOrdinance0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      boolean boolean0 = ldsIndividualOrdinance0.equals(ldsIndividualOrdinance0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      LdsIndividualOrdinance ldsIndividualOrdinance1 = new LdsIndividualOrdinance(ldsIndividualOrdinance0);
      boolean boolean0 = ldsIndividualOrdinance0.equals(ldsIndividualOrdinance1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      String string0 = ldsIndividualOrdinance0.getYNull();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      ldsIndividualOrdinance0.getType();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      FamilyChild familyChild0 = ldsIndividualOrdinance0.getFamilyWhereChild();
      assertNull(familyChild0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      ldsIndividualOrdinance0.setYNull("HLw~zjX*5z]n");
      LdsIndividualOrdinance ldsIndividualOrdinance1 = new LdsIndividualOrdinance(ldsIndividualOrdinance0);
      boolean boolean0 = ldsIndividualOrdinance0.equals(ldsIndividualOrdinance1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LdsIndividualOrdinance ldsIndividualOrdinance0 = new LdsIndividualOrdinance();
      FamilyChild familyChild0 = new FamilyChild();
      ldsIndividualOrdinance0.setFamilyWhereChild(familyChild0);
      LdsIndividualOrdinance ldsIndividualOrdinance1 = new LdsIndividualOrdinance(ldsIndividualOrdinance0);
      boolean boolean0 = ldsIndividualOrdinance1.equals(ldsIndividualOrdinance0);
      assertTrue(boolean0);
  }
}
