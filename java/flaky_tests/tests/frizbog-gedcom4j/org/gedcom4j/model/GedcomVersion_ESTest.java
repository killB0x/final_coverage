/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 21:51:08 GMT 2022
 */

package org.gedcom4j.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.GedcomVersion;
import org.gedcom4j.model.StringWithCustomFacts;
import org.gedcom4j.model.enumerations.SupportedVersion;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GedcomVersion_ESTest extends GedcomVersion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      gedcomVersion0.getCustomFacts(true);
      gedcomVersion0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      gedcomVersion0.setVersionNumber((String) null);
      StringWithCustomFacts stringWithCustomFacts0 = gedcomVersion0.getVersionNumber();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      gedcomVersion0.setGedcomForm((String) null);
      StringWithCustomFacts stringWithCustomFacts0 = gedcomVersion0.getGedcomForm();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GedcomVersion gedcomVersion0 = null;
      try {
        gedcomVersion0 = new GedcomVersion((GedcomVersion) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.model.AbstractElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      gedcomVersion0.getCustomFacts(true);
      String string0 = gedcomVersion0.toString();
      assertEquals("GedcomVersion [gedcomForm=LINEAGE-LINKED, versionNumber=5.5.1, customFacts=[]]", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      gedcomVersion0.setVersionNumber((String) null);
      String string0 = gedcomVersion0.toString();
      assertEquals("GedcomVersion [gedcomForm=LINEAGE-LINKED, ]", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      gedcomVersion0.setGedcomForm((String) null);
      String string0 = gedcomVersion0.toString();
      assertEquals("GedcomVersion [versionNumber=5.5.1, ]", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      gedcomVersion0.setVersionNumber((SupportedVersion) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      gedcomVersion0.setVersionNumber("(dx#NSY~mIMf");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      gedcomVersion0.setGedcomForm("^wU p");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      gedcomVersion0.setGedcomForm((String) null);
      gedcomVersion0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      GedcomVersion gedcomVersion1 = new GedcomVersion();
      assertTrue(gedcomVersion1.equals((Object)gedcomVersion0));
      
      SupportedVersion supportedVersion0 = SupportedVersion.V5_5;
      gedcomVersion1.setVersionNumber(supportedVersion0);
      boolean boolean0 = gedcomVersion1.equals(gedcomVersion0);
      assertFalse(gedcomVersion1.equals((Object)gedcomVersion0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      GedcomVersion gedcomVersion1 = new GedcomVersion();
      assertTrue(gedcomVersion1.equals((Object)gedcomVersion0));
      
      gedcomVersion1.setVersionNumber((StringWithCustomFacts) null);
      boolean boolean0 = gedcomVersion1.equals(gedcomVersion0);
      assertFalse(gedcomVersion1.equals((Object)gedcomVersion0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      gedcomVersion0.setVersionNumber((String) null);
      GedcomVersion gedcomVersion1 = new GedcomVersion(gedcomVersion0);
      boolean boolean0 = gedcomVersion0.equals(gedcomVersion1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      GedcomVersion gedcomVersion1 = new GedcomVersion(gedcomVersion0);
      assertTrue(gedcomVersion1.equals((Object)gedcomVersion0));
      
      gedcomVersion0.setGedcomForm((String) null);
      boolean boolean0 = gedcomVersion1.equals(gedcomVersion0);
      assertFalse(gedcomVersion1.equals((Object)gedcomVersion0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      GedcomVersion gedcomVersion1 = new GedcomVersion(gedcomVersion0);
      gedcomVersion1.setGedcomForm((StringWithCustomFacts) null);
      assertFalse(gedcomVersion0.equals((Object)gedcomVersion1));
      
      gedcomVersion0.setGedcomForm((StringWithCustomFacts) null);
      boolean boolean0 = gedcomVersion1.equals(gedcomVersion0);
      assertTrue(gedcomVersion0.equals((Object)gedcomVersion1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      GedcomVersion gedcomVersion1 = new GedcomVersion(gedcomVersion0);
      assertTrue(gedcomVersion1.equals((Object)gedcomVersion0));
      
      gedcomVersion1.setGedcomForm((StringWithCustomFacts) null);
      boolean boolean0 = gedcomVersion1.equals(gedcomVersion0);
      assertFalse(gedcomVersion1.equals((Object)gedcomVersion0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      Object object0 = new Object();
      boolean boolean0 = gedcomVersion0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      boolean boolean0 = gedcomVersion0.equals(gedcomVersion0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      gedcomVersion0.setGedcomForm((String) null);
      GedcomVersion gedcomVersion1 = new GedcomVersion(gedcomVersion0);
      assertFalse(gedcomVersion1.equals((Object)gedcomVersion0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      gedcomVersion0.setVersionNumber((StringWithCustomFacts) null);
      gedcomVersion0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      StringWithCustomFacts stringWithCustomFacts0 = gedcomVersion0.getGedcomForm();
      assertEquals("LINEAGE-LINKED", stringWithCustomFacts0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GedcomVersion gedcomVersion0 = new GedcomVersion();
      StringWithCustomFacts stringWithCustomFacts0 = gedcomVersion0.getVersionNumber();
      assertEquals("5.5.1", stringWithCustomFacts0.getValue());
  }
}
