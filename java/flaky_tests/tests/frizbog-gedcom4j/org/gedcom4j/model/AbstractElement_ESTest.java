/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 21:45:31 GMT 2022
 */

package org.gedcom4j.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.CitationData;
import org.gedcom4j.model.CustomFact;
import org.gedcom4j.model.Family;
import org.gedcom4j.model.FamilySpouse;
import org.gedcom4j.model.Gedcom;
import org.gedcom4j.model.Multimedia;
import org.gedcom4j.model.MultimediaReference;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractElement_ESTest extends AbstractElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Family family0 = new Family();
      String string0 = family0.toString();
      assertEquals("Family []", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CustomFact customFact0 = new CustomFact("'qkb0@0");
      LinkedList<CustomFact> linkedList0 = new LinkedList<CustomFact>();
      linkedList0.offerLast(customFact0);
      FamilySpouse familySpouse0 = new FamilySpouse();
      familySpouse0.customFacts = (List<CustomFact>) linkedList0;
      FamilySpouse familySpouse1 = new FamilySpouse(familySpouse0);
      List<CustomFact> list0 = familySpouse1.getCustomFacts(true);
      assertTrue(list0.contains(customFact0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      List<CustomFact> list0 = gedcom0.getCustomFacts();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      LinkedList<CustomFact> linkedList0 = new LinkedList<CustomFact>();
      gedcom0.customFacts = (List<CustomFact>) linkedList0;
      List<CustomFact> list0 = gedcom0.getCustomFacts();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Family family0 = new Family();
      boolean boolean0 = family0.equals(family0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Family family0 = new Family();
      boolean boolean0 = family0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      MultimediaReference multimediaReference0 = new MultimediaReference(multimedia0);
      multimedia0.setContinuedObject(multimediaReference0);
      // Undeclared exception!
      multimedia0.hashCode();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      List<CustomFact> list0 = multimedia0.getCustomFacts(false);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Family family0 = new Family();
      family0.getCustomFacts(true);
      family0.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<CustomFact> linkedList0 = new LinkedList<CustomFact>();
      CustomFact customFact0 = new CustomFact("0`t6`$A^#ePS^6");
      linkedList0.offerLast(customFact0);
      FamilySpouse familySpouse0 = new FamilySpouse();
      familySpouse0.customFacts = (List<CustomFact>) linkedList0;
      List<CustomFact> list0 = familySpouse0.getCustomFactsWithTag("'qkb0@0");
      assertFalse(list0.contains(customFact0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      LinkedList<CustomFact> linkedList0 = new LinkedList<CustomFact>();
      CustomFact customFact0 = new CustomFact((String) null);
      linkedList0.offerLast(customFact0);
      citationData0.customFacts = (List<CustomFact>) linkedList0;
      FamilySpouse familySpouse0 = new FamilySpouse();
      familySpouse0.customFacts = citationData0.customFacts;
      List<CustomFact> list0 = familySpouse0.getCustomFactsWithTag("lines=");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CustomFact customFact0 = new CustomFact("'qkb0@0");
      LinkedList<CustomFact> linkedList0 = new LinkedList<CustomFact>();
      linkedList0.offerLast(customFact0);
      FamilySpouse familySpouse0 = new FamilySpouse();
      familySpouse0.customFacts = (List<CustomFact>) linkedList0;
      List<CustomFact> list0 = familySpouse0.getCustomFactsWithTag("'qkb0@0");
      assertTrue(list0.contains(customFact0));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      LinkedList<CustomFact> linkedList0 = new LinkedList<CustomFact>();
      linkedList0.add((CustomFact) null);
      citationData0.customFacts = (List<CustomFact>) linkedList0;
      FamilySpouse familySpouse0 = new FamilySpouse();
      familySpouse0.customFacts = citationData0.customFacts;
      List<CustomFact> list0 = familySpouse0.getCustomFactsWithTag("lines=");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Multimedia multimedia0 = new Multimedia();
      FamilySpouse familySpouse0 = new FamilySpouse();
      FamilySpouse familySpouse1 = new FamilySpouse(familySpouse0);
      List<CustomFact> list0 = multimedia0.getCustomFactsWithTag((String) null);
      familySpouse0.customFacts = list0;
      familySpouse1.getCustomFacts(true);
      boolean boolean0 = familySpouse1.equals(familySpouse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FamilySpouse familySpouse0 = new FamilySpouse();
      FamilySpouse familySpouse1 = new FamilySpouse(familySpouse0);
      assertTrue(familySpouse1.equals((Object)familySpouse0));
      
      familySpouse1.getCustomFacts(true);
      boolean boolean0 = familySpouse0.equals(familySpouse1);
      assertFalse(familySpouse1.equals((Object)familySpouse0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FamilySpouse familySpouse0 = new FamilySpouse();
      FamilySpouse familySpouse1 = new FamilySpouse(familySpouse0);
      assertTrue(familySpouse1.equals((Object)familySpouse0));
      
      familySpouse1.getCustomFacts(true);
      boolean boolean0 = familySpouse1.equals(familySpouse0);
      assertFalse(familySpouse1.equals((Object)familySpouse0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FamilySpouse familySpouse0 = new FamilySpouse();
      FamilySpouse familySpouse1 = new FamilySpouse(familySpouse0);
      boolean boolean0 = familySpouse1.equals(familySpouse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FamilySpouse familySpouse0 = new FamilySpouse();
      Object object0 = new Object();
      boolean boolean0 = familySpouse0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CitationData citationData0 = new CitationData();
      LinkedList<CustomFact> linkedList0 = new LinkedList<CustomFact>();
      linkedList0.add((CustomFact) null);
      citationData0.customFacts = (List<CustomFact>) linkedList0;
      CitationData citationData1 = new CitationData(citationData0);
      assertFalse(citationData1.equals((Object)citationData0));
  }
}
