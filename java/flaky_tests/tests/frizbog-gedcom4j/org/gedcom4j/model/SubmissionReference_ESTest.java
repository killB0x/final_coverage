/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 22:29:07 GMT 2022
 */

package org.gedcom4j.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.CustomFact;
import org.gedcom4j.model.Submission;
import org.gedcom4j.model.SubmissionReference;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SubmissionReference_ESTest extends SubmissionReference_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Submission submission0 = new Submission();
      SubmissionReference submissionReference0 = new SubmissionReference(submission0);
      SubmissionReference submissionReference1 = new SubmissionReference(submissionReference0);
      submissionReference1.setSubmission(submission0);
      assertNull(submission0.getXref());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SubmissionReference submissionReference0 = new SubmissionReference();
      Submission submission0 = new Submission((String) null);
      List<CustomFact> list0 = submission0.getCustomFactsWithTag("{k=i[XvR<HV3");
      submissionReference0.customFacts = list0;
      submissionReference0.hashCode();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Submission submission0 = new Submission();
      SubmissionReference submissionReference0 = new SubmissionReference(submission0);
      Submission submission1 = submissionReference0.getSubmission();
      assertNull(submission1.getXref());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SubmissionReference submissionReference0 = new SubmissionReference();
      SubmissionReference submissionReference1 = null;
      try {
        submissionReference1 = new SubmissionReference(submissionReference0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.model.AbstractElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SubmissionReference submissionReference0 = new SubmissionReference();
      Submission submission0 = new Submission((String) null);
      List<CustomFact> list0 = submission0.getCustomFactsWithTag("{k=i[XvR<HV3");
      submissionReference0.customFacts = list0;
      String string0 = submissionReference0.toString();
      assertEquals("SubmissionReference [customFacts=[]]", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Submission submission0 = new Submission();
      SubmissionReference submissionReference0 = new SubmissionReference(submission0);
      String string0 = submissionReference0.toString();
      assertEquals("SubmissionReference [submission=Submission [], ]", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Submission submission0 = new Submission();
      SubmissionReference submissionReference0 = new SubmissionReference(submission0);
      submissionReference0.hashCode();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SubmissionReference submissionReference0 = new SubmissionReference();
      Submission submission0 = new Submission();
      SubmissionReference submissionReference1 = new SubmissionReference(submission0);
      boolean boolean0 = submissionReference0.equals(submissionReference1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SubmissionReference submissionReference0 = new SubmissionReference();
      SubmissionReference submissionReference1 = new SubmissionReference();
      boolean boolean0 = submissionReference0.equals(submissionReference1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SubmissionReference submissionReference0 = new SubmissionReference();
      boolean boolean0 = submissionReference0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SubmissionReference submissionReference0 = new SubmissionReference();
      boolean boolean0 = submissionReference0.equals(submissionReference0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Submission submission0 = new Submission();
      SubmissionReference submissionReference0 = new SubmissionReference(submission0);
      SubmissionReference submissionReference1 = new SubmissionReference();
      boolean boolean0 = submissionReference0.equals(submissionReference1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SubmissionReference submissionReference0 = new SubmissionReference();
      Submission submission0 = submissionReference0.getSubmission();
      assertNull(submission0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Submission submission0 = new Submission();
      SubmissionReference submissionReference0 = new SubmissionReference(submission0);
      SubmissionReference submissionReference1 = new SubmissionReference(submissionReference0);
      boolean boolean0 = submissionReference1.equals(submissionReference0);
      assertTrue(boolean0);
  }
}
