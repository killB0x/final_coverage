/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 21:50:01 GMT 2022
 */

package org.gedcom4j.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.StringWithCustomFacts;
import org.gedcom4j.model.UserReference;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UserReference_ESTest extends UserReference_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      userReference0.getCustomFacts(true);
      userReference0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      userReference0.setType("^9r0KVkO?xBB-c4([");
      StringWithCustomFacts stringWithCustomFacts0 = userReference0.getType();
      assertEquals("^9r0KVkO?xBB-c4([", stringWithCustomFacts0.getValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      userReference0.setReferenceNum("");
      StringWithCustomFacts stringWithCustomFacts0 = userReference0.getReferenceNum();
      assertEquals("", stringWithCustomFacts0.getValue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UserReference userReference0 = null;
      try {
        userReference0 = new UserReference((UserReference) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.model.AbstractElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      userReference0.getCustomFacts(true);
      String string0 = userReference0.toString();
      assertEquals("UserReference [customFacts=[]]", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      userReference0.setType("UserReference []");
      String string0 = userReference0.toString();
      assertEquals("UserReference [type=UserReference [], ]", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      userReference0.setReferenceNum("4");
      String string0 = userReference0.toString();
      assertEquals("UserReference [referenceNum=4, ]", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      userReference0.setType((String) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      userReference0.setReferenceNum((String) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      userReference0.setType("UserReference []");
      userReference0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      userReference0.setReferenceNum(stringWithCustomFacts0);
      userReference0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      userReference0.setType(">1n}&qg$cL=");
      UserReference userReference1 = new UserReference();
      boolean boolean0 = userReference0.equals(userReference1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      UserReference userReference1 = new UserReference(userReference0);
      assertTrue(userReference1.equals((Object)userReference0));
      
      userReference0.setType("");
      boolean boolean0 = userReference1.equals(userReference0);
      assertFalse(userReference1.equals((Object)userReference0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      UserReference userReference1 = new UserReference(userReference0);
      assertTrue(userReference1.equals((Object)userReference0));
      
      userReference1.setReferenceNum("4");
      boolean boolean0 = userReference0.equals(userReference1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      Object object0 = new Object();
      boolean boolean0 = userReference0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      boolean boolean0 = userReference0.equals(userReference0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      userReference0.setType("");
      UserReference userReference1 = new UserReference(userReference0);
      boolean boolean0 = userReference0.equals(userReference1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      userReference0.setReferenceNum("");
      UserReference userReference1 = new UserReference(userReference0);
      boolean boolean0 = userReference1.equals(userReference0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      StringWithCustomFacts stringWithCustomFacts0 = userReference0.getReferenceNum();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      StringWithCustomFacts stringWithCustomFacts0 = userReference0.getType();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      userReference0.setReferenceNum(stringWithCustomFacts0);
      UserReference userReference1 = new UserReference();
      boolean boolean0 = userReference0.equals(userReference1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UserReference userReference0 = new UserReference();
      userReference0.setType((StringWithCustomFacts) null);
  }
}
