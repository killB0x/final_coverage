/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 23:05:57 GMT 2022
 */

package org.gedcom4j.model.enumerations;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.enumerations.LdsBaptismDateStatus;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LdsBaptismDateStatus_ESTest extends LdsBaptismDateStatus_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LdsBaptismDateStatus ldsBaptismDateStatus0 = LdsBaptismDateStatus.getForCode("UNCLEARED");
      assertEquals(LdsBaptismDateStatus.UNCLEARED, ldsBaptismDateStatus0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LdsBaptismDateStatus[] ldsBaptismDateStatusArray0 = LdsBaptismDateStatus.values();
      assertEquals(7, ldsBaptismDateStatusArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LdsBaptismDateStatus ldsBaptismDateStatus0 = LdsBaptismDateStatus.valueOf("CHILD");
      assertEquals("CHILD", ldsBaptismDateStatus0.getCode());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LdsBaptismDateStatus ldsBaptismDateStatus0 = LdsBaptismDateStatus.getForCode("PRE-1970");
      assertEquals(LdsBaptismDateStatus.PRE_1970, ldsBaptismDateStatus0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LdsBaptismDateStatus.getForCode(",'&<9g9.TBiVq");
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LdsBaptismDateStatus ldsBaptismDateStatus0 = LdsBaptismDateStatus.CHILD;
      String string0 = ldsBaptismDateStatus0.toString();
      assertEquals("CHILD", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LdsBaptismDateStatus ldsBaptismDateStatus0 = LdsBaptismDateStatus.PRE_1970;
      String string0 = ldsBaptismDateStatus0.getDescription();
      assertEquals("Ordinance from temple records of work completed before 1970, assumed complete.", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LdsBaptismDateStatus ldsBaptismDateStatus0 = LdsBaptismDateStatus.CHILD;
      String string0 = ldsBaptismDateStatus0.getCode();
      assertEquals("CHILD", string0);
  }
}
