/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 23:12:10 GMT 2022
 */

package org.gedcom4j.model.enumerations;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.enumerations.LdsChildSealingDateStatus;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LdsChildSealingDateStatus_ESTest extends LdsChildSealingDateStatus_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LdsChildSealingDateStatus ldsChildSealingDateStatus0 = LdsChildSealingDateStatus.getForCode("BIC");
      assertEquals(LdsChildSealingDateStatus.BIC, ldsChildSealingDateStatus0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LdsChildSealingDateStatus[] ldsChildSealingDateStatusArray0 = LdsChildSealingDateStatus.values();
      assertEquals(8, ldsChildSealingDateStatusArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LdsChildSealingDateStatus ldsChildSealingDateStatus0 = LdsChildSealingDateStatus.valueOf("SUBMITTED");
      assertEquals("SUBMITTED", ldsChildSealingDateStatus0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LdsChildSealingDateStatus ldsChildSealingDateStatus0 = LdsChildSealingDateStatus.getForCode("PRE-1970");
      assertEquals(LdsChildSealingDateStatus.PRE_1970, ldsChildSealingDateStatus0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LdsChildSealingDateStatus.getForCode("");
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LdsChildSealingDateStatus ldsChildSealingDateStatus0 = LdsChildSealingDateStatus.COMPLETED;
      String string0 = ldsChildSealingDateStatus0.getDescription();
      assertEquals("Completed but the date is not known.", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LdsChildSealingDateStatus ldsChildSealingDateStatus0 = LdsChildSealingDateStatus.UNCLEARED;
      String string0 = ldsChildSealingDateStatus0.toString();
      assertEquals("UNCLEARED", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LdsChildSealingDateStatus ldsChildSealingDateStatus0 = LdsChildSealingDateStatus.SUBMITTED;
      String string0 = ldsChildSealingDateStatus0.getCode();
      assertEquals("SUBMITTED", string0);
  }
}
