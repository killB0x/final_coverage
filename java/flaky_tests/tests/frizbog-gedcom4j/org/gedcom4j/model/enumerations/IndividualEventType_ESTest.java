/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 23:01:11 GMT 2022
 */

package org.gedcom4j.model.enumerations;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.enumerations.IndividualEventType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IndividualEventType_ESTest extends IndividualEventType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IndividualEventType[] individualEventTypeArray0 = IndividualEventType.values();
      assertEquals(24, individualEventTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IndividualEventType individualEventType0 = IndividualEventType.valueOf("BURIAL");
      assertEquals(IndividualEventType.BURIAL, individualEventType0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IndividualEventType individualEventType0 = IndividualEventType.getFromTag("ORDN");
      assertEquals(IndividualEventType.ORDINATION, individualEventType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IndividualEventType.getFromTag((String) null);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IndividualEventType individualEventType0 = IndividualEventType.GRADUATION;
      String string0 = individualEventType0.getDisplay();
      assertEquals("Graduation", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      boolean boolean0 = IndividualEventType.isValidTag("BLES");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      boolean boolean0 = IndividualEventType.isValidTag("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IndividualEventType individualEventType0 = IndividualEventType.CENSUS;
      String string0 = individualEventType0.getTag();
      assertEquals("CENS", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      IndividualEventType individualEventType0 = IndividualEventType.FIRST_COMMUNION;
      String string0 = individualEventType0.toString();
      assertEquals("First Communion", string0);
  }
}
