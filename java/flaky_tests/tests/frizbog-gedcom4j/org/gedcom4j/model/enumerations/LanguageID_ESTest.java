/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 23:03:43 GMT 2022
 */

package org.gedcom4j.model.enumerations;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.enumerations.LanguageID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LanguageID_ESTest extends LanguageID_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LanguageID languageID0 = LanguageID.getForCode("Serb");
      assertEquals(LanguageID.SERB, languageID0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LanguageID[] languageIDArray0 = LanguageID.values();
      assertEquals(87, languageIDArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LanguageID languageID0 = LanguageID.valueOf("ESPERANTO");
      assertEquals(LanguageID.ESPERANTO, languageID0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LanguageID languageID0 = LanguageID.getForCode("Korean");
      assertEquals(LanguageID.KOREAN, languageID0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LanguageID.getForCode("");
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LanguageID languageID0 = LanguageID.KOREAN;
      String string0 = languageID0.getDescription();
      assertEquals("Korean", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LanguageID languageID0 = LanguageID.KOREAN;
      String string0 = languageID0.getCode();
      assertEquals("Korean", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LanguageID languageID0 = LanguageID.LITHUANIAN;
      String string0 = languageID0.toString();
      assertEquals("Lithuanian", string0);
  }
}
