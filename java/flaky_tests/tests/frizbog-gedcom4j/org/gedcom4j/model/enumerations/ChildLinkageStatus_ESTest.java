/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 23:10:40 GMT 2022
 */

package org.gedcom4j.model.enumerations;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.enumerations.ChildLinkageStatus;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ChildLinkageStatus_ESTest extends ChildLinkageStatus_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ChildLinkageStatus childLinkageStatus0 = ChildLinkageStatus.getForCode("disproven");
      assertEquals(ChildLinkageStatus.DISPROVEN, childLinkageStatus0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ChildLinkageStatus[] childLinkageStatusArray0 = ChildLinkageStatus.values();
      assertEquals(3, childLinkageStatusArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ChildLinkageStatus childLinkageStatus0 = ChildLinkageStatus.valueOf("DISPROVEN");
      assertEquals("disproven", childLinkageStatus0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ChildLinkageStatus childLinkageStatus0 = ChildLinkageStatus.getForCode("challenged");
      assertEquals(ChildLinkageStatus.CHALLENGED, childLinkageStatus0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ChildLinkageStatus.getForCode("");
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ChildLinkageStatus childLinkageStatus0 = ChildLinkageStatus.DISPROVEN;
      String string0 = childLinkageStatus0.getCode();
      assertEquals("disproven", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ChildLinkageStatus childLinkageStatus0 = ChildLinkageStatus.CHALLENGED;
      String string0 = childLinkageStatus0.toString();
      assertEquals("challenged", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ChildLinkageStatus childLinkageStatus0 = ChildLinkageStatus.DISPROVEN;
      String string0 = childLinkageStatus0.getDescription();
      assertEquals("there has been a challenge but linkage was disproven", string0);
  }
}
