/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 23:06:42 GMT 2022
 */

package org.gedcom4j.model.enumerations;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.enumerations.LdsEndowmentDateStatus;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LdsEndowmentDateStatus_ESTest extends LdsEndowmentDateStatus_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LdsEndowmentDateStatus ldsEndowmentDateStatus0 = LdsEndowmentDateStatus.getForCode("CHILD");
      assertEquals(LdsEndowmentDateStatus.CHILD, ldsEndowmentDateStatus0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LdsEndowmentDateStatus[] ldsEndowmentDateStatusArray0 = LdsEndowmentDateStatus.values();
      assertEquals(7, ldsEndowmentDateStatusArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LdsEndowmentDateStatus ldsEndowmentDateStatus0 = LdsEndowmentDateStatus.valueOf("UNCLEARED");
      assertEquals("Data for clearing ordinance request was insufficient.", ldsEndowmentDateStatus0.getDescription());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LdsEndowmentDateStatus ldsEndowmentDateStatus0 = LdsEndowmentDateStatus.getForCode("SUBMITTED");
      assertEquals(LdsEndowmentDateStatus.SUBMITTED, ldsEndowmentDateStatus0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LdsEndowmentDateStatus.getForCode("#&t;|a v2Q{");
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LdsEndowmentDateStatus ldsEndowmentDateStatus0 = LdsEndowmentDateStatus.STILLBORN;
      String string0 = ldsEndowmentDateStatus0.toString();
      assertEquals("STILLBORN", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LdsEndowmentDateStatus ldsEndowmentDateStatus0 = LdsEndowmentDateStatus.UNCLEARED;
      String string0 = ldsEndowmentDateStatus0.getCode();
      assertEquals("UNCLEARED", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LdsEndowmentDateStatus ldsEndowmentDateStatus0 = LdsEndowmentDateStatus.SUBMITTED;
      String string0 = ldsEndowmentDateStatus0.getDescription();
      assertEquals("Ordinance was previously submitted.", string0);
  }
}
