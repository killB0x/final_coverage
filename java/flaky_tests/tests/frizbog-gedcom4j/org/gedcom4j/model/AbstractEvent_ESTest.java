/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 20:03:17 GMT 2022
 */

package org.gedcom4j.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.AbstractCitation;
import org.gedcom4j.model.Address;
import org.gedcom4j.model.FamilyEvent;
import org.gedcom4j.model.IndividualAttribute;
import org.gedcom4j.model.IndividualEvent;
import org.gedcom4j.model.MultimediaReference;
import org.gedcom4j.model.Place;
import org.gedcom4j.model.StringWithCustomFacts;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractEvent_ESTest extends AbstractEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setReligiousAffiliation("X_h?/mq\",]");
      StringBuilder stringBuilder0 = new StringBuilder("X_h?/mq\",]");
      familyEvent0.buildAbstractEventToString(stringBuilder0);
      assertEquals("X_h?/mq\",]religiousAffiliation=X_h?/mq\",], ", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setYNull("%$%c^&%KHqq<n");
      String string0 = familyEvent0.getYNull();
      assertEquals("%$%c^&%KHqq<n", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setYNull("");
      String string0 = familyEvent0.getYNull();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setSubType("O0@9");
      StringWithCustomFacts stringWithCustomFacts0 = familyEvent0.getSubType();
      assertNotNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      IndividualAttribute individualAttribute0 = new IndividualAttribute();
      individualAttribute0.setRestrictionNotice("u24?5]wSsz+Lc");
      StringWithCustomFacts stringWithCustomFacts0 = individualAttribute0.getRestrictionNotice();
      assertEquals("u24?5]wSsz+Lc", stringWithCustomFacts0.getValue());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      IndividualAttribute individualAttribute0 = new IndividualAttribute();
      individualAttribute0.setRespAgency("-5y @;$i$Yi_]$T");
      StringWithCustomFacts stringWithCustomFacts0 = individualAttribute0.getRespAgency();
      assertEquals("-5y @;$i$Yi_]$T", stringWithCustomFacts0.getValue());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setReligiousAffiliation("X_h?/mq\",]");
      StringWithCustomFacts stringWithCustomFacts0 = familyEvent0.getReligiousAffiliation();
      assertEquals("X_h?/mq\",]", stringWithCustomFacts0.toString());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      Place place0 = new Place();
      familyEvent0.setPlace(place0);
      Place place1 = familyEvent0.getPlace();
      assertNull(place1.getPlaceName());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.getMultimedia(true);
      List<MultimediaReference> list0 = familyEvent0.getMultimedia();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      IndividualEvent individualEvent0 = new IndividualEvent();
      individualEvent0.setDescription("=2-Of$Ao.{6M{z");
      StringWithCustomFacts stringWithCustomFacts0 = individualEvent0.getDescription();
      assertEquals("=2-Of$Ao.{6M{z", stringWithCustomFacts0.toString());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      IndividualEvent individualEvent0 = new IndividualEvent();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      individualEvent0.setDate(stringWithCustomFacts0);
      StringWithCustomFacts stringWithCustomFacts1 = individualEvent0.getDate();
      assertNull(stringWithCustomFacts1.toString());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.getCitations(true);
      List<AbstractCitation> list0 = familyEvent0.getCitations();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setCause("");
      StringWithCustomFacts stringWithCustomFacts0 = familyEvent0.getCause();
      assertEquals("", stringWithCustomFacts0.getValue());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setAge("fyY");
      StringWithCustomFacts stringWithCustomFacts0 = familyEvent0.getAge();
      assertEquals("fyY", stringWithCustomFacts0.toString());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      IndividualAttribute individualAttribute0 = new IndividualAttribute();
      StringBuilder stringBuilder0 = individualAttribute0.buildAbstractEventToString((StringBuilder) null);
      assertNull(stringBuilder0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      IndividualAttribute individualAttribute0 = new IndividualAttribute();
      List<MultimediaReference> list0 = individualAttribute0.getMultimedia(false);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      IndividualAttribute individualAttribute0 = new IndividualAttribute();
      List<AbstractCitation> list0 = individualAttribute0.getCitations(false);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      IndividualEvent individualEvent0 = new IndividualEvent();
      individualEvent0.getCustomFacts(true);
      String string0 = individualEvent0.toString();
      assertEquals("IndividualEvent [customFacts=[]]", string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setYNull("");
      String string0 = familyEvent0.toString();
      assertEquals("FamilyEvent [yNull=, ]", string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setSubType("Um*$Of@QM=nQk-Q|");
      String string0 = familyEvent0.toString();
      assertEquals("FamilyEvent [subType=Um*$Of@QM=nQk-Q|, ]", string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setRestrictionNotice("respAgency=");
      String string0 = familyEvent0.toString();
      assertEquals("FamilyEvent [restrictionNotice=respAgency=, ]", string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setRespAgency("|(PuW<5hgo");
      String string0 = familyEvent0.toString();
      assertEquals("FamilyEvent [respAgency=|(PuW<5hgo, ]", string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setReligiousAffiliation("");
      // Undeclared exception!
      try { 
        familyEvent0.buildAbstractEventToString((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.model.AbstractEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      Place place0 = new Place();
      familyEvent0.setPlace(place0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "date=");
      familyEvent0.buildAbstractEventToString(stringBuilder0);
      assertEquals("date=place=Place [], ", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.getNoteStructures(true);
      String string0 = familyEvent0.toString();
      assertEquals("FamilyEvent [noteStructures=[], ]", string0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      List<MultimediaReference> list0 = familyEvent0.getMultimedia(true);
      assertNotNull(list0);
      
      String string0 = familyEvent0.toString();
      assertEquals("FamilyEvent [multimedia=[], ]", string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setDescription("c\"H)d#JU,Jn~QNf^BcL");
      String string0 = familyEvent0.toString();
      assertEquals("FamilyEvent [description=c\"H)d#JU,Jn~QNf^BcL, ]", string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      IndividualEvent individualEvent0 = new IndividualEvent();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      individualEvent0.setDate(stringWithCustomFacts0);
      String string0 = individualEvent0.toString();
      assertEquals("IndividualEvent [date=null, ]", string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      List<AbstractCitation> list0 = familyEvent0.getCitations(true);
      assertNotNull(list0);
      
      String string0 = familyEvent0.toString();
      assertEquals("FamilyEvent [citations=[], ]", string0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setCause("p Sg+M'dfk;");
      String string0 = familyEvent0.toString();
      assertEquals("FamilyEvent [cause=p Sg+M'dfk;, ]", string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setAge("AbstractNameVariation [");
      String string0 = familyEvent0.toString();
      assertEquals("FamilyEvent [age=AbstractNameVariation [, ]", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setSubType((String) null);
      assertNull(familyEvent0.getYNull());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setRestrictionNotice((String) null);
      assertNull(familyEvent0.getYNull());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setRespAgency((String) null);
      assertNull(familyEvent0.getType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      IndividualEvent individualEvent0 = new IndividualEvent();
      individualEvent0.setReligiousAffiliation((String) null);
      assertNull(individualEvent0.getType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setDescription((String) null);
      assertNull(familyEvent0.getType());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setDate((String) null);
      assertNull(familyEvent0.getYNull());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setCause((String) null);
      assertNull(familyEvent0.getType());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setAge((String) null);
      assertNull(familyEvent0.getYNull());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      List<StringWithCustomFacts> list0 = familyEvent0.getWwwUrls(true);
      familyEvent0.emails = list0;
      familyEvent0.hashCode();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.getWwwUrls(true);
      familyEvent0.hashCode();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      IndividualAttribute individualAttribute0 = new IndividualAttribute();
      individualAttribute0.getFaxNumbers(true);
      individualAttribute0.hashCode();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setRestrictionNotice("1+T+q5+a ");
      familyEvent0.hashCode();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setYNull("");
      familyEvent0.hashCode();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setSubType("OY@9");
      familyEvent0.hashCode();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setRespAgency("geM6{Zc");
      familyEvent0.hashCode();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      Place place0 = new Place();
      familyEvent0.setPlace(place0);
      familyEvent0.hashCode();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      IndividualAttribute individualAttribute0 = new IndividualAttribute();
      individualAttribute0.getPhoneNumbers(true);
      individualAttribute0.hashCode();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.getMultimedia(true);
      familyEvent0.hashCode();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setDescription("O");
      familyEvent0.hashCode();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setDate("OY@9");
      familyEvent0.hashCode();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      IndividualEvent individualEvent0 = new IndividualEvent();
      individualEvent0.getCitations(true);
      individualEvent0.hashCode();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      IndividualAttribute individualAttribute0 = new IndividualAttribute();
      individualAttribute0.setCause("");
      individualAttribute0.hashCode();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setAge("8%'hCL(JGcjp&Ly(s");
      familyEvent0.hashCode();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      Address address0 = new Address();
      familyEvent0.address = address0;
      familyEvent0.hashCode();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      List<MultimediaReference> list0 = familyEvent0.getMultimedia(true);
      List<MultimediaReference> list1 = familyEvent0.getMultimedia(true);
      assertNotNull(list1);
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      List<AbstractCitation> list0 = familyEvent0.getCitations(true);
      List<AbstractCitation> list1 = familyEvent0.getCitations(true);
      assertNotNull(list1);
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      LinkedList<StringWithCustomFacts> linkedList0 = new LinkedList<StringWithCustomFacts>();
      familyEvent0.faxNumbers = (List<StringWithCustomFacts>) linkedList0;
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.getWwwUrls(true);
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setRestrictionNotice("1+T+q5+a ");
      FamilyEvent familyEvent1 = new FamilyEvent();
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      familyEvent1.setRestrictionNotice("UJW`h$RZ1");
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setReligiousAffiliation("X_h?/mq\",]");
      FamilyEvent familyEvent1 = new FamilyEvent();
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      familyEvent1.setReligiousAffiliation("MEb%\"k");
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setYNull("IOTj");
      FamilyEvent familyEvent1 = new FamilyEvent();
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setYNull("");
      FamilyEvent familyEvent1 = new FamilyEvent();
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      familyEvent1.setSubType("O0@9");
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent();
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      familyEvent0.setSubType("multimedia=");
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent();
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      familyEvent1.setRespAgency("jf=s#\"+`");
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent();
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      familyEvent1.setRespAgency("YAg!Oc 4:(swA!");
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent();
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      Place place0 = new Place();
      familyEvent1.setPlace(place0);
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      Place place0 = new Place();
      familyEvent1.setPlace(place0);
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.getPhoneNumbers(true);
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      familyEvent1.getMultimedia(true);
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      List<MultimediaReference> list0 = familyEvent0.getMultimedia(true);
      assertNotNull(list0);
      
      FamilyEvent familyEvent1 = new FamilyEvent();
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      familyEvent1.setDescription("a&17@E");
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      familyEvent1.setDescription("w\b)$?M_6QKz");
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      familyEvent1.setDate("place=");
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      familyEvent1.setDate("AbstractEvent [");
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      List<AbstractCitation> list0 = familyEvent0.getCitations(true);
      assertNotNull(list0);
      
      FamilyEvent familyEvent1 = new FamilyEvent();
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent();
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      familyEvent1.getCitations(true);
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertFalse(familyEvent1.equals((Object)familyEvent0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setCause("0eg;:hcM@");
      FamilyEvent familyEvent1 = new FamilyEvent();
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      familyEvent1.setCause("org.gedcom4j.model.AbstractEvent");
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent();
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      familyEvent1.setAge(stringWithCustomFacts0);
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertFalse(familyEvent1.equals((Object)familyEvent0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      assertTrue(familyEvent1.equals((Object)familyEvent0));
      
      familyEvent1.setAge("%D1!Rj");
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      Address address0 = new Address();
      familyEvent0.setAddress(address0);
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      Object object0 = new Object();
      boolean boolean0 = familyEvent0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setSubType("E QM_9&lQSo6*@urr!");
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setRestrictionNotice("respAgency=");
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setRespAgency("g");
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setReligiousAffiliation("X_h?/mq\",]");
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      List<MultimediaReference> list0 = familyEvent0.getMultimedia(true);
      assertNotNull(list0);
      
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setDescription("Family [");
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setDate("O09");
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      List<AbstractCitation> list0 = familyEvent0.getCitations(true);
      assertNotNull(list0);
      
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setCause("0eg;:hcM@");
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setAge(";V }?");
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent1.equals(familyEvent0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      StringWithCustomFacts stringWithCustomFacts0 = familyEvent0.getDescription();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      StringWithCustomFacts stringWithCustomFacts0 = familyEvent0.getCause();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      IndividualEvent individualEvent0 = new IndividualEvent();
      individualEvent0.setDescription((StringWithCustomFacts) null);
      assertNull(individualEvent0.getYNull());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      String string0 = familyEvent0.getYNull();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      IndividualAttribute individualAttribute0 = new IndividualAttribute();
      individualAttribute0.setCause((StringWithCustomFacts) null);
      assertNull(individualAttribute0.getType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      StringWithCustomFacts stringWithCustomFacts0 = familyEvent0.getDate();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      StringWithCustomFacts stringWithCustomFacts0 = familyEvent0.getReligiousAffiliation();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      StringWithCustomFacts stringWithCustomFacts0 = familyEvent0.getRespAgency();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      IndividualAttribute individualAttribute0 = new IndividualAttribute();
      Place place0 = individualAttribute0.getPlace();
      assertNull(place0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setSubType((StringWithCustomFacts) null);
      assertNull(familyEvent0.getType());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      Place place0 = new Place();
      familyEvent0.setPlace(place0);
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      List<MultimediaReference> list0 = familyEvent0.getMultimedia();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      StringWithCustomFacts stringWithCustomFacts0 = familyEvent0.getAge();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      StringWithCustomFacts stringWithCustomFacts0 = familyEvent0.getSubType();
      assertNull(stringWithCustomFacts0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      List<AbstractCitation> list0 = familyEvent0.getCitations();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      familyEvent0.setReligiousAffiliation(stringWithCustomFacts0);
      familyEvent0.hashCode();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FamilyEvent familyEvent0 = new FamilyEvent();
      familyEvent0.setYNull("IOTj");
      FamilyEvent familyEvent1 = new FamilyEvent(familyEvent0);
      boolean boolean0 = familyEvent0.equals(familyEvent1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      IndividualAttribute individualAttribute0 = new IndividualAttribute();
      individualAttribute0.setRespAgency((StringWithCustomFacts) null);
      assertNull(individualAttribute0.getType());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      IndividualAttribute individualAttribute0 = new IndividualAttribute();
      StringWithCustomFacts stringWithCustomFacts0 = individualAttribute0.getRestrictionNotice();
      individualAttribute0.setRestrictionNotice(stringWithCustomFacts0);
      assertNull(individualAttribute0.getType());
  }
}
