/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 21:03:15 GMT 2022
 */

package org.gedcom4j.relationship;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import java.util.MissingResourceException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.Individual;
import org.gedcom4j.model.StringWithCustomFacts;
import org.gedcom4j.relationship.KinshipNameCalculator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KinshipNameCalculator_ESTest extends KinshipNameCalculator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      KinshipNameCalculator kinshipNameCalculator0 = new KinshipNameCalculator(locale0);
      Individual individual0 = new Individual();
      Individual individual1 = new Individual(individual0);
      String string0 = kinshipNameCalculator0.getRelationshipName(individual1, individual0);
      assertEquals("Self", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KinshipNameCalculator kinshipNameCalculator0 = new KinshipNameCalculator();
      // Undeclared exception!
      try { 
        kinshipNameCalculator0.getSexCode((Individual) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.relationship.KinshipNameCalculator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      KinshipNameCalculator kinshipNameCalculator0 = new KinshipNameCalculator(locale0);
      Individual individual0 = new Individual();
      kinshipNameCalculator0.getRelationshipName(individual0, individual0);
      kinshipNameCalculator0.getRelationshipName(individual0, individual0);
      kinshipNameCalculator0.getRelationshipName(individual0, individual0);
      kinshipNameCalculator0.getRelationshipName(individual0, individual0);
      kinshipNameCalculator0.getRelationshipName(individual0, individual0);
      kinshipNameCalculator0.getRelationshipName(individual0, individual0);
      kinshipNameCalculator0.getRelationshipName(individual0, individual0);
      kinshipNameCalculator0.getRelationshipName(individual0, individual0);
      kinshipNameCalculator0.getRelationshipName(individual0, individual0);
      // Undeclared exception!
      kinshipNameCalculator0.getRelationshipName(individual0, individual0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KinshipNameCalculator kinshipNameCalculator0 = new KinshipNameCalculator();
      Individual individual0 = new Individual();
      individual0.setSex("`:sRl=Sz3");
      // Undeclared exception!
      try { 
        kinshipNameCalculator0.getRelationshipName(individual0, individual0);
        fail("Expecting exception: MissingResourceException");
      
      } catch(MissingResourceException e) {
         //
         // Can't find resource for bundle java.util.PropertyResourceBundle, key relationship.0.0.`
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KinshipNameCalculator kinshipNameCalculator0 = new KinshipNameCalculator();
      // Undeclared exception!
      try { 
        kinshipNameCalculator0.getRelationshipName((Individual) null, (Individual) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.relationship.KinshipNameCalculator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KinshipNameCalculator kinshipNameCalculator0 = null;
      try {
        kinshipNameCalculator0 = new KinshipNameCalculator((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      KinshipNameCalculator kinshipNameCalculator0 = null;
      try {
        kinshipNameCalculator0 = new KinshipNameCalculator("{-[MzL'kP:T_*2]", locale0);
        fail("Expecting exception: MissingResourceException");
      
      } catch(MissingResourceException e) {
         //
         // Can't find bundle for base name {-[MzL'kP:T_*2], locale fr
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KinshipNameCalculator kinshipNameCalculator0 = null;
      try {
        kinshipNameCalculator0 = new KinshipNameCalculator("k8v}&W8J6{Z2", (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KinshipNameCalculator kinshipNameCalculator0 = null;
      try {
        kinshipNameCalculator0 = new KinshipNameCalculator("");
        fail("Expecting exception: MissingResourceException");
      
      } catch(MissingResourceException e) {
         //
         // Can't find bundle for base name , locale en
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KinshipNameCalculator kinshipNameCalculator0 = null;
      try {
        kinshipNameCalculator0 = new KinshipNameCalculator((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KinshipNameCalculator kinshipNameCalculator0 = new KinshipNameCalculator();
      Individual individual0 = new Individual();
      individual0.setSex("");
      String string0 = kinshipNameCalculator0.getSexCode(individual0);
      assertEquals("u", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Individual individual0 = new Individual();
      KinshipNameCalculator kinshipNameCalculator0 = new KinshipNameCalculator();
      String string0 = kinshipNameCalculator0.getSexCode(individual0);
      assertEquals("u", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      KinshipNameCalculator kinshipNameCalculator0 = new KinshipNameCalculator();
      Individual individual0 = new Individual();
      Individual individual1 = new Individual(individual0);
      individual1.getFamiliesWhereSpouse(true);
      String string0 = kinshipNameCalculator0.getRelationshipName(individual0, individual1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      KinshipNameCalculator kinshipNameCalculator0 = new KinshipNameCalculator();
      Individual individual0 = new Individual();
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      individual0.setSex(stringWithCustomFacts0);
      String string0 = kinshipNameCalculator0.getSexCode(individual0);
      assertEquals("u", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      KinshipNameCalculator kinshipNameCalculator0 = new KinshipNameCalculator();
      Individual individual0 = new Individual();
      individual0.setSex("hEcUXt/~.4r~> Ag");
      String string0 = kinshipNameCalculator0.getSexCode(individual0);
      assertEquals("h", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      KinshipNameCalculator kinshipNameCalculator0 = new KinshipNameCalculator("gedcom4j_relationship_names");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      KinshipNameCalculator kinshipNameCalculator0 = new KinshipNameCalculator("gedcom4j_relationship_names", locale0);
  }
}
