/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 23:14:12 GMT 2022
 */

package org.gedcom4j.writer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.Address;
import org.gedcom4j.model.CharacterSet;
import org.gedcom4j.model.Gedcom;
import org.gedcom4j.model.StringWithCustomFacts;
import org.gedcom4j.writer.AddressEmitter;
import org.gedcom4j.writer.GedcomWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AddressEmitter_ESTest extends AddressEmitter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Address address0 = new Address();
      CharacterSet characterSet0 = new CharacterSet();
      characterSet0.setVersionNum("N;?g8o*");
      StringWithCustomFacts stringWithCustomFacts0 = characterSet0.getVersionNum();
      address0.setAddr1(stringWithCustomFacts0);
      AddressEmitter addressEmitter0 = new AddressEmitter((GedcomWriter) null, 12, address0);
      // Undeclared exception!
      try { 
        addressEmitter0.emit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.writer.AbstractEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      AddressEmitter addressEmitter0 = new AddressEmitter(gedcomWriter0, 0, (Address) null);
      addressEmitter0.emit();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      Address address0 = new Address();
      AddressEmitter addressEmitter0 = new AddressEmitter(gedcomWriter0, 0, address0);
      addressEmitter0.emit();
  }
}
