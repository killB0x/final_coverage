/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 22:26:08 GMT 2022
 */

package org.gedcom4j.writer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.model.Gedcom;
import org.gedcom4j.model.Header;
import org.gedcom4j.model.SourceSystem;
import org.gedcom4j.model.StringWithCustomFacts;
import org.gedcom4j.model.Submission;
import org.gedcom4j.model.SubmissionReference;
import org.gedcom4j.model.SubmitterReference;
import org.gedcom4j.writer.GedcomWriter;
import org.gedcom4j.writer.HeaderEmitter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HeaderEmitter_ESTest extends HeaderEmitter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      Header header0 = gedcom0.getHeader();
      HeaderEmitter headerEmitter0 = new HeaderEmitter(gedcomWriter0, 986, header0);
      Submission submission0 = new Submission("associatedEntityXref=");
      SubmissionReference submissionReference0 = new SubmissionReference(submission0);
      header0.setSubmissionReference(submissionReference0);
      headerEmitter0.emit();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      Header header0 = gedcom0.getHeader();
      HeaderEmitter headerEmitter0 = new HeaderEmitter(gedcomWriter0, 31, header0);
      gedcomWriter0.cancel();
      try { 
        headerEmitter0.emit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Construction of GEDCOM data cancelled
         //
         verifyException("org.gedcom4j.writer.AbstractEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      Header header0 = new Header();
      gedcomWriter0.cancel();
      HeaderEmitter headerEmitter0 = null;
      try {
        headerEmitter0 = new HeaderEmitter(gedcomWriter0, 323, header0);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // Construction of GEDCOM data cancelled
         //
         verifyException("org.gedcom4j.writer.AbstractEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Header header0 = new Header();
      Gedcom gedcom0 = new Gedcom();
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      gedcomWriter0.lines = null;
      HeaderEmitter headerEmitter0 = null;
      try {
        headerEmitter0 = new HeaderEmitter(gedcomWriter0, (-1), header0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.writer.GedcomWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      Header header0 = gedcom0.getHeader();
      header0.setSourceSystem((SourceSystem) null);
      HeaderEmitter headerEmitter0 = new HeaderEmitter(gedcomWriter0, 288, header0);
      headerEmitter0.emit();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      Header header0 = new Header();
      header0.setPlaceHierarchy(" ");
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      HeaderEmitter headerEmitter0 = new HeaderEmitter(gedcomWriter0, 39, header0);
      try { 
        headerEmitter0.emit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Required value for tag FORM at level 2 was null or blank
         //
         verifyException("org.gedcom4j.writer.AbstractEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      Header header0 = new Header();
      HeaderEmitter headerEmitter0 = new HeaderEmitter(gedcomWriter0, 15, header0);
      StringWithCustomFacts stringWithCustomFacts0 = new StringWithCustomFacts();
      header0.setPlaceHierarchy(stringWithCustomFacts0);
      headerEmitter0.emit();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      Header header0 = gedcom0.getHeader();
      header0.setPlaceHierarchy("");
      HeaderEmitter headerEmitter0 = new HeaderEmitter(gedcomWriter0, 10, header0);
      headerEmitter0.emit();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      Header header0 = gedcom0.getHeader();
      SubmissionReference submissionReference0 = new SubmissionReference();
      header0.setSubmissionReference(submissionReference0);
      HeaderEmitter headerEmitter0 = new HeaderEmitter(gedcomWriter0, 263, header0);
      // Undeclared exception!
      try { 
        headerEmitter0.emit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.writer.HeaderEmitter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Header header0 = new Header();
      GedcomWriter gedcomWriter0 = new GedcomWriter((Gedcom) null);
      header0.setSubmitterReference((SubmitterReference) null);
      HeaderEmitter headerEmitter0 = new HeaderEmitter(gedcomWriter0, 7887, header0);
      headerEmitter0.emit();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      Header header0 = gedcom0.getHeader();
      header0.setDate("ARABIC");
      HeaderEmitter headerEmitter0 = new HeaderEmitter(gedcomWriter0, 27, header0);
      headerEmitter0.emit();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Gedcom gedcom0 = new Gedcom();
      GedcomWriter gedcomWriter0 = new GedcomWriter(gedcom0);
      HeaderEmitter headerEmitter0 = new HeaderEmitter(gedcomWriter0, (-446), (Header) null);
      headerEmitter0.emit();
  }
}
