/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 11 22:05:25 GMT 2022
 */

package org.gedcom4j.comparators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.gedcom4j.comparators.IndividualsByEventDateLastNameFirstNameComparator;
import org.gedcom4j.model.Individual;
import org.gedcom4j.model.enumerations.IndividualEventType;
import org.gedcom4j.parser.DateParser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IndividualsByEventDateLastNameFirstNameComparator_ESTest extends IndividualsByEventDateLastNameFirstNameComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IndividualEventType individualEventType0 = IndividualEventType.BAR_MITZVAH;
      DateParser.ImpreciseDatePreference dateParser_ImpreciseDatePreference0 = DateParser.ImpreciseDatePreference.FAVOR_MIDPOINT;
      IndividualsByEventDateLastNameFirstNameComparator individualsByEventDateLastNameFirstNameComparator0 = new IndividualsByEventDateLastNameFirstNameComparator(individualEventType0, dateParser_ImpreciseDatePreference0);
      Individual individual0 = new Individual();
      Individual individual1 = new Individual(individual0, false);
      int int0 = individualsByEventDateLastNameFirstNameComparator0.compare(individual0, individual1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IndividualEventType individualEventType0 = IndividualEventType.CREMATION;
      DateParser.ImpreciseDatePreference dateParser_ImpreciseDatePreference0 = DateParser.ImpreciseDatePreference.FAVOR_LATEST;
      IndividualsByEventDateLastNameFirstNameComparator individualsByEventDateLastNameFirstNameComparator0 = new IndividualsByEventDateLastNameFirstNameComparator(individualEventType0, dateParser_ImpreciseDatePreference0);
      // Undeclared exception!
      try { 
        individualsByEventDateLastNameFirstNameComparator0.compare((Individual) null, (Individual) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.gedcom4j.comparators.IndividualsByEventDateLastNameFirstNameComparator", e);
      }
  }
}
