/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 21:50:06 GMT 2022
 */

package com.alibaba.tamper.core.builder.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.tamper.core.builder.BeanMappingBuilder;
import com.alibaba.tamper.core.builder.impl.BeanMappingFieldAttributesBuilder;
import com.alibaba.tamper.core.builder.impl.BeanMappingFieldBuilder;
import com.alibaba.tamper.core.config.BeanMappingBehavior;
import com.alibaba.tamper.core.config.BeanMappingField;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BeanMappingFieldBuilder_ESTest extends BeanMappingFieldBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BeanMappingBuilder beanMappingBuilder0 = new BeanMappingBuilder();
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = beanMappingBuilder0.targetField("");
      Class<Object> class0 = Object.class;
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder1 = beanMappingBuilder0.srcField("", class0);
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = new BeanMappingFieldBuilder(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder1, true, beanMappingBehavior0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("com.alibaba.tamper.core.builder.impl.BeanMappingFieldBuilder");
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = new BeanMappingFieldBuilder(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder0, beanMappingBehavior0);
      // Undeclared exception!
      try { 
        beanMappingFieldBuilder0.nestObject((BeanMappingBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.tamper.core.builder.impl.BeanMappingFieldBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = null;
      try {
        beanMappingFieldBuilder0 = new BeanMappingFieldBuilder((BeanMappingFieldAttributesBuilder) null, (BeanMappingFieldAttributesBuilder) null, false, beanMappingBehavior0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.tamper.core.builder.impl.BeanMappingFieldBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = null;
      try {
        beanMappingFieldBuilder0 = new BeanMappingFieldBuilder((BeanMappingFieldAttributesBuilder) null, (BeanMappingFieldAttributesBuilder) null, (BeanMappingBehavior) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.tamper.core.builder.impl.BeanMappingFieldBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("");
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = new BeanMappingFieldBuilder(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder0, beanMappingBehavior0);
      Class<Object> class0 = Object.class;
      BeanMappingFieldBuilder beanMappingFieldBuilder1 = beanMappingFieldBuilder0.convertor(class0);
      assertSame(beanMappingFieldBuilder0, beanMappingFieldBuilder1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("");
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = new BeanMappingFieldBuilder(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder0, beanMappingBehavior0);
      BeanMappingFieldBuilder beanMappingFieldBuilder1 = beanMappingFieldBuilder0.recursiveMapping(true);
      assertSame(beanMappingFieldBuilder1, beanMappingFieldBuilder0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder(")");
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = new BeanMappingFieldBuilder(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder0, beanMappingBehavior0);
      BeanMappingFieldBuilder beanMappingFieldBuilder1 = beanMappingFieldBuilder0.defaultValue(")");
      assertSame(beanMappingFieldBuilder0, beanMappingFieldBuilder1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("");
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = new BeanMappingFieldBuilder(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder0, beanMappingBehavior0);
      beanMappingFieldBuilder0.recursiveMapping(true, "");
      BeanMappingField beanMappingField0 = beanMappingFieldBuilder0.get();
      assertTrue(beanMappingField0.isMapping());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("");
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = new BeanMappingFieldBuilder(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder0, beanMappingBehavior0);
      BeanMappingFieldBuilder beanMappingFieldBuilder1 = beanMappingFieldBuilder0.convertor("");
      assertSame(beanMappingFieldBuilder0, beanMappingFieldBuilder1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("");
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = new BeanMappingFieldBuilder(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder0, beanMappingBehavior0);
      BeanMappingField beanMappingField0 = beanMappingFieldBuilder0.get();
      assertFalse(beanMappingField0.isMapping());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("");
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = new BeanMappingFieldBuilder(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder0, beanMappingBehavior0);
      BeanMappingFieldBuilder beanMappingFieldBuilder1 = beanMappingFieldBuilder0.mappingEmptyStrings(false);
      assertSame(beanMappingFieldBuilder1, beanMappingFieldBuilder0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("");
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = new BeanMappingFieldBuilder(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder0, beanMappingBehavior0);
      BeanMappingFieldBuilder beanMappingFieldBuilder1 = beanMappingFieldBuilder0.script("");
      assertSame(beanMappingFieldBuilder0, beanMappingFieldBuilder1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("");
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = new BeanMappingFieldBuilder(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder0, beanMappingBehavior0);
      BeanMappingBuilder beanMappingBuilder0 = new BeanMappingBuilder();
      BeanMappingFieldBuilder beanMappingFieldBuilder1 = beanMappingFieldBuilder0.nestObject(beanMappingBuilder0);
      assertSame(beanMappingFieldBuilder1, beanMappingFieldBuilder0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("com.alibaba.tamper.core.builder.impl.BeanMappingFielBuilder");
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = new BeanMappingFieldBuilder(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder0, beanMappingBehavior0);
      BeanMappingFieldBuilder beanMappingFieldBuilder1 = beanMappingFieldBuilder0.debug(true);
      assertSame(beanMappingFieldBuilder1, beanMappingFieldBuilder0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("com.alibaba.tamper.core.bui;der.impl.BeanMappingFieldBuilder");
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = new BeanMappingFieldBuilder(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder0, beanMappingBehavior0);
      BeanMappingFieldBuilder beanMappingFieldBuilder1 = beanMappingFieldBuilder0.trimStrings(true);
      assertSame(beanMappingFieldBuilder0, beanMappingFieldBuilder1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("");
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = new BeanMappingFieldBuilder(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder0, beanMappingBehavior0);
      BeanMappingFieldBuilder beanMappingFieldBuilder1 = beanMappingFieldBuilder0.nestName("");
      assertSame(beanMappingFieldBuilder0, beanMappingFieldBuilder1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("");
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = new BeanMappingFieldBuilder(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder0, false, beanMappingBehavior0);
      BeanMappingFieldBuilder beanMappingFieldBuilder1 = beanMappingFieldBuilder0.mappingNullValue(false);
      assertSame(beanMappingFieldBuilder1, beanMappingFieldBuilder0);
  }
}
