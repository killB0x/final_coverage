/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 21:50:56 GMT 2022
 */

package com.alibaba.tamper.core.builder.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.tamper.core.builder.impl.BeanMappingObjectBuilder;
import com.alibaba.tamper.core.config.BeanMappingBehavior;
import com.alibaba.tamper.core.config.BeanMappingObject;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BeanMappingObjectBuilder_ESTest extends BeanMappingObjectBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<BeanMappingObject> class0 = BeanMappingObject.class;
      Class<Object> class1 = Object.class;
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingObjectBuilder beanMappingObjectBuilder0 = new BeanMappingObjectBuilder(class0, class1, beanMappingBehavior0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<BeanMappingObject> class0 = BeanMappingObject.class;
      Class<Object> class1 = Object.class;
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingObjectBuilder beanMappingObjectBuilder0 = new BeanMappingObjectBuilder("yes", class1, class0, beanMappingBehavior0);
      BeanMappingObjectBuilder beanMappingObjectBuilder1 = beanMappingObjectBuilder0.batch(true);
      BeanMappingObject beanMappingObject0 = beanMappingObjectBuilder1.get();
      assertTrue(beanMappingObject0.isBatch());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<BeanMappingObject> class0 = BeanMappingObject.class;
      BeanMappingObjectBuilder beanMappingObjectBuilder0 = null;
      try {
        beanMappingObjectBuilder0 = new BeanMappingObjectBuilder(class0, class0, (BeanMappingBehavior) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.tamper.core.builder.impl.BeanMappingObjectBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object> class0 = Object.class;
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingObjectBuilder beanMappingObjectBuilder0 = new BeanMappingObjectBuilder(class0, class0, beanMappingBehavior0);
      BeanMappingObjectBuilder beanMappingObjectBuilder1 = beanMappingObjectBuilder0.mappingNullValue(false);
      assertSame(beanMappingObjectBuilder1, beanMappingObjectBuilder0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingObjectBuilder beanMappingObjectBuilder0 = new BeanMappingObjectBuilder(class0, class0, beanMappingBehavior0);
      BeanMappingObjectBuilder beanMappingObjectBuilder1 = beanMappingObjectBuilder0.mappingEmptyStrings(true);
      assertSame(beanMappingObjectBuilder1, beanMappingObjectBuilder0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<Object> class0 = Object.class;
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingObjectBuilder beanMappingObjectBuilder0 = new BeanMappingObjectBuilder(class0, class0, beanMappingBehavior0);
      beanMappingObjectBuilder0.reversable(false);
      BeanMappingObject beanMappingObject0 = beanMappingObjectBuilder0.get();
      assertFalse(beanMappingObject0.isReversable());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<Object> class0 = Object.class;
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingObjectBuilder beanMappingObjectBuilder0 = new BeanMappingObjectBuilder(class0, class0, beanMappingBehavior0);
      BeanMappingObjectBuilder beanMappingObjectBuilder1 = beanMappingObjectBuilder0.trimStrings(false);
      assertSame(beanMappingObjectBuilder0, beanMappingObjectBuilder1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Class<Object> class0 = Object.class;
      BeanMappingObjectBuilder beanMappingObjectBuilder0 = null;
      try {
        beanMappingObjectBuilder0 = new BeanMappingObjectBuilder((String) null, class0, class0, (BeanMappingBehavior) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.tamper.core.builder.impl.BeanMappingObjectBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Class<Object> class0 = Object.class;
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingObjectBuilder beanMappingObjectBuilder0 = new BeanMappingObjectBuilder(class0, class0, beanMappingBehavior0);
      BeanMappingObjectBuilder beanMappingObjectBuilder1 = beanMappingObjectBuilder0.keys("", "com.alibaba.tamper.core.builder.impl.BeanMappingObjectBuilder");
      assertSame(beanMappingObjectBuilder0, beanMappingObjectBuilder1);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Class<Object> class0 = Object.class;
      BeanMappingBehavior beanMappingBehavior0 = new BeanMappingBehavior();
      BeanMappingObjectBuilder beanMappingObjectBuilder0 = new BeanMappingObjectBuilder(class0, class0, beanMappingBehavior0);
      BeanMappingObjectBuilder beanMappingObjectBuilder1 = beanMappingObjectBuilder0.debug(true);
      assertSame(beanMappingObjectBuilder0, beanMappingObjectBuilder1);
  }
}
