/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 21:47:18 GMT 2022
 */

package com.alibaba.tamper.core.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.tamper.core.builder.BeanMappingBuilder;
import com.alibaba.tamper.core.builder.impl.BeanMappingBehaviorBuilder;
import com.alibaba.tamper.core.builder.impl.BeanMappingFieldAttributesBuilder;
import com.alibaba.tamper.core.builder.impl.BeanMappingFieldBuilder;
import com.alibaba.tamper.core.builder.impl.BeanMappingObjectBuilder;
import com.alibaba.tamper.core.config.BeanMappingObject;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BeanMappingBuilder_ESTest extends BeanMappingBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BeanMappingBuilder beanMappingBuilder0 = new BeanMappingBuilder();
      BeanMappingBehaviorBuilder beanMappingBehaviorBuilder0 = beanMappingBuilder0.behavior(true, false, false, true);
      assertNotNull(beanMappingBehaviorBuilder0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BeanMappingBuilder beanMappingBuilder0 = new BeanMappingBuilder();
      BeanMappingBehaviorBuilder beanMappingBehaviorBuilder0 = beanMappingBuilder0.behavior(true, true, false, false);
      assertNotNull(beanMappingBehaviorBuilder0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BeanMappingBuilder beanMappingBuilder0 = new BeanMappingBuilder();
      Class<BeanMappingObject> class0 = BeanMappingObject.class;
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = beanMappingBuilder0.targetField("UG,", class0);
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder1 = beanMappingBuilder0.srcField("UG,");
      // Undeclared exception!
      try { 
        beanMappingBuilder0.fields(beanMappingFieldAttributesBuilder1, beanMappingFieldAttributesBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.tamper.core.builder.BeanMappingBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BeanMappingBuilder beanMappingBuilder0 = new BeanMappingBuilder();
      Class<BeanMappingObject> class0 = BeanMappingObject.class;
      Class<Object> class1 = Object.class;
      BeanMappingObjectBuilder beanMappingObjectBuilder0 = beanMappingBuilder0.mapping(class0, class1);
      assertNotNull(beanMappingObjectBuilder0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BeanMappingBuilder beanMappingBuilder0 = new BeanMappingBuilder();
      beanMappingBuilder0.configure();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BeanMappingBuilder beanMappingBuilder0 = new BeanMappingBuilder();
      Class<BeanMappingObject> class0 = BeanMappingObject.class;
      beanMappingBuilder0.mapping(class0, class0);
      BeanMappingObject beanMappingObject0 = beanMappingBuilder0.get();
      assertEquals("src", beanMappingObject0.getSrcKey());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BeanMappingBuilder beanMappingBuilder0 = new BeanMappingBuilder();
      Class<BeanMappingObject> class0 = BeanMappingObject.class;
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = beanMappingBuilder0.targetField("UG,", class0);
      Class<Object> class1 = Object.class;
      beanMappingBuilder0.mapping("UG,", class0, class1);
      BeanMappingFieldBuilder beanMappingFieldBuilder0 = beanMappingBuilder0.fields(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder0);
      assertNotNull(beanMappingFieldBuilder0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BeanMappingBuilder beanMappingBuilder0 = new BeanMappingBuilder();
      BeanMappingObject beanMappingObject0 = beanMappingBuilder0.get();
      assertNull(beanMappingObject0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BeanMappingBuilder beanMappingBuilder0 = new BeanMappingBuilder();
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = beanMappingBuilder0.targetField("XL|HTXR-1mrvZ");
      assertNotNull(beanMappingFieldAttributesBuilder0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BeanMappingBuilder beanMappingBuilder0 = new BeanMappingBuilder();
      Class<Object> class0 = Object.class;
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = beanMappingBuilder0.srcField("MAhVu", class0);
      assertNotNull(beanMappingFieldAttributesBuilder0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BeanMappingBuilder beanMappingBuilder0 = new BeanMappingBuilder();
      BeanMappingBehaviorBuilder beanMappingBehaviorBuilder0 = beanMappingBuilder0.behavior();
      assertNotNull(beanMappingBehaviorBuilder0);
  }
}
