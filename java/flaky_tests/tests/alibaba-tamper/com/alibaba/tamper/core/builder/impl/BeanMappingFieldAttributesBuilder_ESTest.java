/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 31 21:49:18 GMT 2022
 */

package com.alibaba.tamper.core.builder.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.tamper.core.builder.impl.BeanMappingFieldAttributesBuilder;
import com.alibaba.tamper.core.config.BeanMappingFieldAttributes;
import java.lang.reflect.Array;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BeanMappingFieldAttributesBuilder_ESTest extends BeanMappingFieldAttributesBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Object> class0 = Object.class;
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("", class0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder((String) null);
      // Undeclared exception!
      try { 
        beanMappingFieldAttributesBuilder0.componentClasses((Class[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("");
      Class<Object> class0 = Object.class;
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder1 = beanMappingFieldAttributesBuilder0.clazz(class0);
      assertSame(beanMappingFieldAttributesBuilder1, beanMappingFieldAttributesBuilder0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("");
      Class<BeanMappingFieldAttributes>[] classArray0 = (Class<BeanMappingFieldAttributes>[]) Array.newInstance(Class.class, 7);
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder1 = beanMappingFieldAttributesBuilder0.componentClasses(classArray0);
      assertSame(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder("");
      BeanMappingFieldAttributes beanMappingFieldAttributes0 = beanMappingFieldAttributesBuilder0.get();
      assertEquals("", beanMappingFieldAttributes0.getName());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder0 = new BeanMappingFieldAttributesBuilder(" ");
      Class<Object> class0 = Object.class;
      BeanMappingFieldAttributesBuilder beanMappingFieldAttributesBuilder1 = beanMappingFieldAttributesBuilder0.locatorClass(class0);
      assertSame(beanMappingFieldAttributesBuilder0, beanMappingFieldAttributesBuilder1);
  }
}
