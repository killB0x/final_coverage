/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 02:10:30 GMT 2022
 */

package org.intelligentsia.eventbus;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.intelligentsia.eventbus.BasicEventBus;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BasicEventBus_ESTest extends BasicEventBus_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BasicEventBus basicEventBus0 = new BasicEventBus();
      // Undeclared exception!
      try { 
        basicEventBus0.subscribe((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.intelligentsia.eventbus.BasicEventBus", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      BasicEventBus basicEventBus0 = new BasicEventBus((ExecutorService) null, false);
      // Undeclared exception!
      try { 
        basicEventBus0.shutdown((-118L), timeUnit0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.intelligentsia.eventbus.BasicEventBus", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BasicEventBus basicEventBus0 = new BasicEventBus((ExecutorService) null, false);
      // Undeclared exception!
      try { 
        basicEventBus0.publish((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.LinkedBlockingQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BasicEventBus basicEventBus0 = new BasicEventBus();
      boolean boolean0 = basicEventBus0.hasPendingEvents();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BasicEventBus basicEventBus0 = new BasicEventBus();
      Object object0 = new Object();
      basicEventBus0.unsubscribe(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BasicEventBus basicEventBus0 = new BasicEventBus();
      Boolean boolean0 = Boolean.valueOf("org.intelligentsia.eventbus.VetoEvent");
      basicEventBus0.subscribe(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BasicEventBus basicEventBus0 = new BasicEventBus();
      Object object0 = new Object();
      basicEventBus0.publish(object0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BasicEventBus basicEventBus0 = new BasicEventBus();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      basicEventBus0.shutdown(961L, timeUnit0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      basicEventBus0.unsubscribe(object2);
      basicEventBus0.publish(object1);
      basicEventBus0.unsubscribe(object0);
      boolean boolean0 = basicEventBus0.hasPendingEvents();
      //  // Unstable assertion: assertFalse(boolean0);
  }
}
