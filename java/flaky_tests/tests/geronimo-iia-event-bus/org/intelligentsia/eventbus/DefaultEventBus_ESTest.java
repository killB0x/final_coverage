/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 02:11:10 GMT 2022
 */

package org.intelligentsia.eventbus;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.intelligentsia.eventbus.DefaultEventBus;
import org.intelligentsia.eventbus.EventBus;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultEventBus_ESTest extends DefaultEventBus_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      DefaultEventBus.subscribe(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      DefaultEventBus.publish(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultEventBus[] defaultEventBusArray0 = DefaultEventBus.values();
      assertEquals(0, defaultEventBusArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        DefaultEventBus.subscribe((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.intelligentsia.eventbus.BasicEventBus", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      DefaultEventBus.unsubscribe(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EventBus eventBus0 = DefaultEventBus.getInstance();
      assertNotNull(eventBus0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      boolean boolean0 = DefaultEventBus.hasPendingEvents();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        DefaultEventBus.publish((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.LinkedBlockingQueue", e);
      }
  }
}
