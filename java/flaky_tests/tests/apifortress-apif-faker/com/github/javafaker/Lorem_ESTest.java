/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 12:25:04 GMT 2022
 */

package com.github.javafaker;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.javafaker.Faker;
import com.github.javafaker.Lorem;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Lorem_ESTest extends Lorem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Faker faker0 = new Faker(locale0);
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      try { 
        lorem0.fixedString((-3966));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      Faker faker0 = new Faker(locale0);
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      try { 
        lorem0.paragraph(0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Random.setNextRandom(256);
      MockRandom mockRandom0 = new MockRandom();
      Faker faker0 = new Faker(mockRandom0);
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.paragraph(256);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.UK;
      MockRandom mockRandom0 = new MockRandom(77L);
      Faker faker0 = Faker.instance(locale0, (java.util.Random) mockRandom0);
      Lorem lorem0 = new Lorem(faker0);
      mockRandom0.nextLong();
      // Undeclared exception!
      try { 
        lorem0.sentence(732);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Faker faker0 = Faker.instance(locale0);
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      try { 
        lorem0.sentence((-513), (-3387));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      Random.setNextRandom(714);
      lorem0.characters(714, 31, false, true);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.UK;
      MockRandom mockRandom0 = new MockRandom(77L);
      Faker faker0 = Faker.instance(locale0, (java.util.Random) mockRandom0);
      Lorem lorem0 = new Lorem(faker0);
      mockRandom0.nextLong();
      lorem0.characters(95, 654, true);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Faker faker0 = Faker.instance((java.util.Random) mockRandom0);
      Lorem lorem0 = faker0.lorem();
      String string0 = lorem0.characters(1000, 573, true);
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom(1297L);
      Faker faker0 = Faker.instance((java.util.Random) mockRandom0);
      Lorem lorem0 = new Lorem(faker0);
      mockRandom0.nextDouble();
      String string0 = lorem0.characters(229, 209);
      assertEquals("bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      MockRandom mockRandom0 = new MockRandom(0L);
      Faker faker0 = Faker.instance(locale0, (java.util.Random) mockRandom0);
      Lorem lorem0 = new Lorem(faker0);
      String string0 = lorem0.characters((-2147), true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      String string0 = lorem0.characters((-1769), 2958, false, false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      String string0 = lorem0.characters(0, 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = Locale.US;
      Faker faker0 = Faker.instance(locale0);
      Lorem lorem0 = faker0.lorem();
      String string0 = lorem0.characters(36);
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Faker faker0 = Faker.instance(locale0);
      Lorem lorem0 = faker0.lorem();
      String string0 = lorem0.characters(0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Faker faker0 = new Faker();
      Random.setNextRandom((-1036));
      Lorem lorem0 = faker0.lorem();
      char char0 = lorem0.character(false);
      assertEquals('2', char0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Faker faker0 = Faker.instance((java.util.Random) null);
      Lorem lorem0 = new Lorem(faker0);
      char char0 = lorem0.character(false);
      assertEquals('a', char0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      Random.setNextRandom(714);
      char char0 = lorem0.character();
      assertEquals('4', char0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.words(80);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      try { 
        lorem0.words();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.word();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      try { 
        lorem0.sentences(433);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      try { 
        lorem0.sentences((-4267));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -4267
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.sentence();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.paragraphs(113);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      try { 
        lorem0.paragraphs((-1297));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1297
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      try { 
        lorem0.paragraph((-2080));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2080
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.paragraph();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.fixedString(255);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      lorem0.characters(9947, 9947);
      // Undeclared exception!
      lorem0.characters(false);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      lorem0.characters(8499, true);
      // Undeclared exception!
      lorem0.characters(8499, false, false);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      lorem0.characters(899957, true);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters(2992, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters(30, 30, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      lorem0.characters(900000, 900000, true);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters(2172, 2172, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      lorem0.characters(899957, 899957);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters(122, 122);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters(250);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.character();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.sentences(48);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.sentence(32, 32);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.words(903);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      List<String> list0 = lorem0.words((-955));
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      String string0 = lorem0.characters(8499, false, false);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Faker faker0 = new Faker(locale0);
      Lorem lorem0 = faker0.lorem();
      String string0 = lorem0.characters(116, true, true);
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters(875, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Faker faker0 = new Faker(locale0);
      Lorem lorem0 = faker0.lorem();
      String string0 = lorem0.characters(0, false, false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.word();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.character(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.sentence();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.paragraph();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.paragraph(20);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.sentence(57);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      lorem0.characters(85000);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.fixedString(0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      List<String> list0 = lorem0.paragraphs(0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Faker faker0 = Faker.instance((java.util.Random) mockRandom0);
      Lorem lorem0 = new Lorem(faker0);
      List<String> list0 = lorem0.sentences(0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.sentence(0, 0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      lorem0.characters(899995, 899995, true, true);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Faker faker0 = Faker.instance((java.util.Random) mockRandom0);
      Lorem lorem0 = new Lorem(faker0);
      String string0 = lorem0.characters(0, 0, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      lorem0.characters(9947, 9947);
      // Undeclared exception!
      lorem0.characters();
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      String string0 = lorem0.characters(3, 632);
      assertEquals("aaa", string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Faker faker0 = Faker.instance((java.util.Random) mockRandom0);
      Lorem lorem0 = new Lorem(faker0);
      String string0 = lorem0.characters();
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      try { 
        lorem0.paragraphs(31);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      char char0 = lorem0.character();
      assertEquals('a', char0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      String string0 = lorem0.characters(false);
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.words();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }
}
