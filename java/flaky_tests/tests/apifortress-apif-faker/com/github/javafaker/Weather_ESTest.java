/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:32:29 GMT 2022
 */

package com.github.javafaker;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.javafaker.Faker;
import com.github.javafaker.Weather;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Weather_ESTest extends Weather_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Faker faker0 = new Faker();
      Weather weather0 = faker0.weather();
      // Undeclared exception!
      try { 
        weather0.temperatureFahrenheit((-2028), (-2028));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Weather weather0 = new Weather(faker0);
      // Undeclared exception!
      try { 
        weather0.temperatureFahrenheit(1, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.evosuite.runtime.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Weather weather0 = faker0.weather();
      // Undeclared exception!
      try { 
        weather0.temperatureFahrenheit();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Faker faker0 = new Faker();
      Weather weather0 = new Weather(faker0);
      // Undeclared exception!
      try { 
        weather0.temperatureCelsius((-1), (-1));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Faker faker0 = new Faker();
      Weather weather0 = new Weather(faker0);
      // Undeclared exception!
      try { 
        weather0.temperatureCelsius(0, (-1));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.evosuite.runtime.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Faker faker0 = new Faker();
      Weather weather0 = new Weather(faker0);
      // Undeclared exception!
      try { 
        weather0.temperatureCelsius();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Weather weather0 = new Weather((Faker) null);
      // Undeclared exception!
      try { 
        weather0.description();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Weather", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Weather weather0 = new Weather((Faker) null);
      // Undeclared exception!
      try { 
        weather0.temperatureFahrenheit(146, 146);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Weather", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Weather weather0 = new Weather((Faker) null);
      // Undeclared exception!
      try { 
        weather0.temperatureCelsius();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Weather", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Weather weather0 = new Weather((Faker) null);
      // Undeclared exception!
      try { 
        weather0.temperatureFahrenheit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Weather", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Weather weather0 = new Weather(faker0);
      // Undeclared exception!
      try { 
        weather0.description();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Weather weather0 = new Weather((Faker) null);
      // Undeclared exception!
      try { 
        weather0.temperatureCelsius((-30), (-30));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Weather", e);
      }
  }
}
