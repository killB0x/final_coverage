/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:54:27 GMT 2022
 */

package com.evolvedbinary.xpath.parser.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.evolvedbinary.xpath.parser.ast.DecimalLiteral;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DecimalLiteral_ESTest extends DecimalLiteral_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DecimalLiteral decimalLiteral0 = null;
      try {
        decimalLiteral0 = new DecimalLiteral("PB`BKG&@j*,KG");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Character P is neither a decimal digit number, decimal point, nor \"e\" notation exponential mark.
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DecimalLiteral decimalLiteral0 = null;
      try {
        decimalLiteral0 = new DecimalLiteral((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DecimalLiteral decimalLiteral0 = new DecimalLiteral("7");
      String string0 = decimalLiteral0.describe();
      assertEquals("DecimalLiteral(7)", string0);
  }
}
