/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:30:58 GMT 2022
 */

package com.evolvedbinary.xpath.parser.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.evolvedbinary.functional.Either;
import com.evolvedbinary.xpath.parser.ast.DocumentTest;
import com.evolvedbinary.xpath.parser.ast.ElementTest;
import com.evolvedbinary.xpath.parser.ast.QNameW;
import com.evolvedbinary.xpath.parser.ast.SchemaElementTest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DocumentTest_ESTest extends DocumentTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ElementTest elementTest0 = new ElementTest((QNameW) null, (QNameW) null);
      Either<ElementTest, SchemaElementTest> either0 = Either.Left(elementTest0);
      DocumentTest documentTest0 = new DocumentTest(either0);
      SchemaElementTest schemaElementTest0 = new SchemaElementTest((QNameW) null);
      Either<ElementTest, SchemaElementTest> either1 = Either.Right(schemaElementTest0);
      DocumentTest documentTest1 = new DocumentTest(either1);
      boolean boolean0 = documentTest1.equals(documentTest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DocumentTest documentTest0 = new DocumentTest((Either<ElementTest, SchemaElementTest>) null);
      SchemaElementTest schemaElementTest0 = new SchemaElementTest((QNameW) null);
      Either<ElementTest, SchemaElementTest> either0 = Either.Right(schemaElementTest0);
      DocumentTest documentTest1 = new DocumentTest(either0);
      // Undeclared exception!
      try { 
        documentTest1.equals(documentTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.evolvedbinary.xpath.parser.ast.DocumentTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DocumentTest documentTest0 = new DocumentTest((Either<ElementTest, SchemaElementTest>) null);
      boolean boolean0 = documentTest0.equals(documentTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QNameW qNameW0 = new QNameW("");
      SchemaElementTest schemaElementTest0 = new SchemaElementTest(qNameW0);
      Either<ElementTest, SchemaElementTest> either0 = Either.Right(schemaElementTest0);
      DocumentTest documentTest0 = new DocumentTest(either0);
      boolean boolean0 = documentTest0.equals(documentTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QNameW qNameW0 = new QNameW("");
      SchemaElementTest schemaElementTest0 = new SchemaElementTest(qNameW0);
      Either<ElementTest, SchemaElementTest> either0 = Either.Right(schemaElementTest0);
      DocumentTest documentTest0 = new DocumentTest(either0);
      Object object0 = new Object();
      boolean boolean0 = documentTest0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DocumentTest documentTest0 = new DocumentTest((Either<ElementTest, SchemaElementTest>) null);
      boolean boolean0 = documentTest0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      QNameW qNameW0 = new QNameW("");
      SchemaElementTest schemaElementTest0 = new SchemaElementTest(qNameW0);
      Either<ElementTest, SchemaElementTest> either0 = Either.Right(schemaElementTest0);
      DocumentTest documentTest0 = new DocumentTest(either0);
      String string0 = documentTest0.describeParams();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DocumentTest documentTest0 = new DocumentTest((Either<ElementTest, SchemaElementTest>) null);
      String string0 = documentTest0.describeParams();
      assertEquals("", string0);
  }
}
