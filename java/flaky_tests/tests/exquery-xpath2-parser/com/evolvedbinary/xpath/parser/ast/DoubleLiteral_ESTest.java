/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:39:10 GMT 2022
 */

package com.evolvedbinary.xpath.parser.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.evolvedbinary.xpath.parser.ast.DoubleLiteral;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleLiteral_ESTest extends DoubleLiteral_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DoubleLiteral doubleLiteral0 = null;
      try {
        doubleLiteral0 = new DoubleLiteral("7gTI%U+Q-vTGq4>");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Character g is neither a decimal digit number, decimal point, nor \"e\" notation exponential mark.
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DoubleLiteral doubleLiteral0 = null;
      try {
        doubleLiteral0 = new DoubleLiteral((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DoubleLiteral doubleLiteral0 = new DoubleLiteral("8");
      String string0 = doubleLiteral0.describe();
      assertEquals("DoubleLiteral(8)", string0);
  }
}
