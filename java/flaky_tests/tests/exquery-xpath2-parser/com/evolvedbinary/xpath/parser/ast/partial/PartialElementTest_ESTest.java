/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:47:41 GMT 2022
 */

package com.evolvedbinary.xpath.parser.ast.partial;

import org.junit.Test;
import static org.junit.Assert.*;
import com.evolvedbinary.xpath.parser.ast.ElementTest;
import com.evolvedbinary.xpath.parser.ast.KindTest;
import com.evolvedbinary.xpath.parser.ast.QNameW;
import com.evolvedbinary.xpath.parser.ast.partial.PartialElementTest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PartialElementTest_ESTest extends PartialElementTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PartialElementTest partialElementTest0 = new PartialElementTest();
      String string0 = partialElementTest0.describe();
      assertEquals("ElementTest(?, ?, ?)", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PartialElementTest partialElementTest0 = new PartialElementTest();
      QNameW qNameW0 = new QNameW(",]qE(K9F$3o1pW#S.", ",]qE(K9F$3o1pW#S.");
      PartialElementTest.PartialElementTest1 partialElementTest_PartialElementTest1_0 = partialElementTest0.complete(qNameW0);
      PartialElementTest.PartialElementTest1.PartialElementTest2 partialElementTest_PartialElementTest1_PartialElementTest2_0 = partialElementTest_PartialElementTest1_0.new PartialElementTest2((QNameW) null);
      String string0 = partialElementTest_PartialElementTest1_PartialElementTest2_0.describe();
      assertEquals("ElementTest(AST_QNameW(,]qE(K9F$3o1pW#S.:,]qE(K9F$3o1pW#S.), , ?)", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PartialElementTest partialElementTest0 = new PartialElementTest();
      QNameW qNameW0 = new QNameW("", "Pj@rt2`m'v_Jax!_R");
      PartialElementTest.PartialElementTest1 partialElementTest_PartialElementTest1_0 = partialElementTest0.new PartialElementTest1((QNameW) null);
      PartialElementTest.PartialElementTest1.PartialElementTest2 partialElementTest_PartialElementTest1_PartialElementTest2_0 = partialElementTest_PartialElementTest1_0.complete(qNameW0);
      String string0 = partialElementTest_PartialElementTest1_PartialElementTest2_0.toString();
      assertEquals("P_AST_ElementTest(, AST_QNameW(:Pj@rt2`m'v_Jax!_R), ?)", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PartialElementTest partialElementTest0 = new PartialElementTest();
      PartialElementTest.PartialElementTest1 partialElementTest_PartialElementTest1_0 = partialElementTest0.new PartialElementTest1((QNameW) null);
      String string0 = partialElementTest_PartialElementTest1_0.describe();
      assertEquals("ElementTest(, ?, ?)", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PartialElementTest partialElementTest0 = new PartialElementTest();
      QNameW qNameW0 = new QNameW("", "Pj@rt2`m'v_Jax!_R");
      PartialElementTest.PartialElementTest1 partialElementTest_PartialElementTest1_0 = partialElementTest0.complete(qNameW0);
      String string0 = partialElementTest_PartialElementTest1_0.describe();
      assertEquals("ElementTest(AST_QNameW(:Pj@rt2`m'v_Jax!_R), ?, ?)", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PartialElementTest partialElementTest0 = new PartialElementTest();
      QNameW qNameW0 = new QNameW("", "");
      PartialElementTest.PartialElementTest1 partialElementTest_PartialElementTest1_0 = partialElementTest0.new PartialElementTest1(qNameW0);
      PartialElementTest.PartialElementTest1.PartialElementTest2 partialElementTest_PartialElementTest1_PartialElementTest2_0 = partialElementTest_PartialElementTest1_0.complete(qNameW0);
      Boolean boolean0 = Boolean.FALSE;
      ElementTest elementTest0 = partialElementTest_PartialElementTest1_PartialElementTest2_0.complete(boolean0);
      assertEquals(KindTest.Kind.ELEMENT, elementTest0.getKind());
  }
}
