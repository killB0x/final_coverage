/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:33:50 GMT 2022
 */

package com.evolvedbinary.xpath.parser.ast.partial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.evolvedbinary.xpath.parser.ast.DecimalLiteral;
import com.evolvedbinary.xpath.parser.ast.partial.PartialDecimalLiteral;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PartialDecimalLiteral_ESTest extends PartialDecimalLiteral_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PartialDecimalLiteral partialDecimalLiteral0 = new PartialDecimalLiteral("");
      // Undeclared exception!
      try { 
        partialDecimalLiteral0.complete("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // No digits found.
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PartialDecimalLiteral partialDecimalLiteral0 = new PartialDecimalLiteral((String) null);
      // Undeclared exception!
      try { 
        partialDecimalLiteral0.complete((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PartialDecimalLiteral partialDecimalLiteral0 = new PartialDecimalLiteral("1");
      DecimalLiteral decimalLiteral0 = partialDecimalLiteral0.complete("");
      assertNotNull(decimalLiteral0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PartialDecimalLiteral partialDecimalLiteral0 = new PartialDecimalLiteral("`Z[{ER");
      String string0 = partialDecimalLiteral0.describe();
      assertEquals("DecimalLiteral(`Z[{ER.?)", string0);
  }
}
