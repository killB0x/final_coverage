/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:21:54 GMT 2022
 */

package com.evolvedbinary.xpath.parser.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.evolvedbinary.xpath.parser.ast.StringLiteral;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringLiteral_ESTest extends StringLiteral_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringLiteral stringLiteral0 = new StringLiteral((String) null);
      String string0 = stringLiteral0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringLiteral stringLiteral0 = new StringLiteral("");
      String string0 = stringLiteral0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringLiteral stringLiteral0 = new StringLiteral("com.evolvedbinary.xpath.parser.ast.Literal");
      boolean boolean0 = stringLiteral0.equals(stringLiteral0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringLiteral stringLiteral0 = new StringLiteral((String) null);
      boolean boolean0 = stringLiteral0.equals("AST_StringLiteral(null)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringLiteral stringLiteral0 = new StringLiteral((String) null);
      // Undeclared exception!
      try { 
        stringLiteral0.equals(stringLiteral0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StringLiteral stringLiteral0 = new StringLiteral((String) null);
      boolean boolean0 = stringLiteral0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StringLiteral stringLiteral0 = new StringLiteral("2?s{LE");
      String string0 = stringLiteral0.getValue();
      assertEquals("2?s{LE", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StringLiteral stringLiteral0 = new StringLiteral("");
      String string0 = stringLiteral0.describe();
      assertEquals("StringLiteral()", string0);
  }
}
