/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:35:11 GMT 2022
 */

package com.evolvedbinary.xpath.parser.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.evolvedbinary.xpath.parser.ast.IntegerLiteral;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntegerLiteral_ESTest extends IntegerLiteral_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IntegerLiteral integerLiteral0 = null;
      try {
        integerLiteral0 = new IntegerLiteral("IntegerLiteral(0)");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"IntegerL\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IntegerLiteral integerLiteral0 = null;
      try {
        integerLiteral0 = new IntegerLiteral((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IntegerLiteral integerLiteral0 = new IntegerLiteral("0");
      String string0 = integerLiteral0.describe();
      assertEquals("IntegerLiteral(0)", string0);
  }
}
