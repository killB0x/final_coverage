/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:31:39 GMT 2022
 */

package com.evolvedbinary.xpath.parser.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.evolvedbinary.xpath.parser.ast.AtomicType;
import com.evolvedbinary.xpath.parser.ast.QNameW;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AtomicType_ESTest extends AtomicType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QNameW qNameW0 = new QNameW("com.evolvedbinary.xpath.parser.ast.QNameW");
      AtomicType atomicType0 = new AtomicType(qNameW0);
      String string0 = atomicType0.describe();
      assertEquals("AtomicType(AST_QNameW(com.evolvedbinary.xpath.parser.ast.QNameW))", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AtomicType atomicType0 = new AtomicType((QNameW) null);
      // Undeclared exception!
      try { 
        atomicType0.equals(atomicType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.evolvedbinary.xpath.parser.ast.AtomicType", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QNameW qNameW0 = new QNameW("com.evolvedbinary.xpath.parser.ast.QNameW");
      AtomicType atomicType0 = new AtomicType(qNameW0);
      Object object0 = new Object();
      boolean boolean0 = atomicType0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QNameW qNameW0 = new QNameW("com.evolvedbinary.xpath.parser.ast.QNameW");
      AtomicType atomicType0 = new AtomicType(qNameW0);
      boolean boolean0 = atomicType0.equals(atomicType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AtomicType atomicType0 = new AtomicType((QNameW) null);
      boolean boolean0 = atomicType0.equals((Object) null);
      assertFalse(boolean0);
  }
}
