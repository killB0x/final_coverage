/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Oct 25 08:45:00 GMT 2022
 */

package com.evolvedbinary.xpath.parser.ast.partial;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class PartialUnaryExpr_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.evolvedbinary.xpath.parser.ast.partial.PartialUnaryExpr"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PartialUnaryExpr_ESTest_scaffolding.class.getClassLoader() ,
      "com.evolvedbinary.xpath.parser.ast.ValueExpr",
      "com.evolvedbinary.xpath.parser.ast.AbstractOperand",
      "com.evolvedbinary.xpath.parser.ast.UnaryExpr",
      "com.evolvedbinary.xpath.parser.ast.AbstractASTNode",
      "com.evolvedbinary.xpath.parser.ast.ASTNode",
      "com.evolvedbinary.xpath.parser.ast.partial.PartialASTNode",
      "com.evolvedbinary.xpath.parser.ast.partial.AbstractPartialASTNode",
      "com.evolvedbinary.xpath.parser.ast.partial.PartialUnaryExpr"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PartialUnaryExpr_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.evolvedbinary.xpath.parser.ast.AbstractASTNode",
      "com.evolvedbinary.xpath.parser.ast.partial.AbstractPartialASTNode",
      "com.evolvedbinary.xpath.parser.ast.partial.PartialUnaryExpr",
      "com.evolvedbinary.xpath.parser.ast.AbstractOperand",
      "com.evolvedbinary.xpath.parser.ast.ValueExpr",
      "com.evolvedbinary.xpath.parser.ast.UnaryExpr",
      "com.evolvedbinary.xpath.parser.ast.ValueComp$ValueCompOperator",
      "com.evolvedbinary.xpath.parser.ast.ValueComp",
      "com.evolvedbinary.xpath.parser.ast.GeneralComp$GeneralCompOperator",
      "com.evolvedbinary.xpath.parser.ast.GeneralComp",
      "com.evolvedbinary.xpath.parser.ast.QNameW",
      "com.evolvedbinary.xpath.parser.ast.Axis$Direction",
      "com.evolvedbinary.xpath.parser.ast.Axis",
      "com.evolvedbinary.xpath.parser.ast.AbstractOperandWithOps",
      "com.evolvedbinary.xpath.parser.ast.MultiplicativeExpr",
      "com.evolvedbinary.xpath.parser.ast.UnionExpr",
      "com.evolvedbinary.xpath.parser.ast.KindTest",
      "com.evolvedbinary.xpath.parser.ast.SchemaAttributeTest",
      "com.evolvedbinary.xpath.parser.ast.KindTest$Kind",
      "com.evolvedbinary.xpath.parser.ast.AdditiveExpr$AdditiveOp",
      "com.evolvedbinary.xpath.parser.ast.AdditiveExpr",
      "com.evolvedbinary.xpath.parser.ast.Expr",
      "com.evolvedbinary.xpath.parser.ast.IfExpr",
      "com.evolvedbinary.xpath.parser.ast.PrimaryExpr",
      "com.evolvedbinary.xpath.parser.ast.VarRef",
      "com.evolvedbinary.xpath.parser.ast.Literal",
      "com.evolvedbinary.xpath.parser.ast.NumericLiteral",
      "com.evolvedbinary.xpath.parser.ast.IntegerLiteral",
      "com.evolvedbinary.xpath.parser.ast.MultiplicativeExpr$MultiplicativeOp",
      "com.evolvedbinary.xpath.parser.ast.ElementTest",
      "com.evolvedbinary.xpath.parser.ast.OccurrenceIndicator$Occurrence",
      "com.evolvedbinary.xpath.parser.ast.OccurrenceIndicator",
      "com.evolvedbinary.xpath.parser.ast.SequenceType",
      "com.evolvedbinary.xpath.parser.ast.InstanceOfExpr",
      "com.evolvedbinary.xpath.parser.ast.Step",
      "com.evolvedbinary.xpath.parser.ast.AnyKindTest",
      "com.evolvedbinary.xpath.parser.ast.PredicateList",
      "com.evolvedbinary.xpath.parser.ast.AxisStep",
      "com.evolvedbinary.xpath.parser.ast.ContextItemExpr",
      "com.evolvedbinary.xpath.parser.ast.FilterExpr",
      "com.evolvedbinary.xpath.parser.ast.TreatExpr",
      "com.evolvedbinary.xpath.parser.ast.RelativePathExpr",
      "com.evolvedbinary.xpath.parser.ast.FunctionCall",
      "com.evolvedbinary.xpath.parser.ast.DocumentTest",
      "com.evolvedbinary.xpath.parser.ast.ParenthesizedExpr",
      "com.evolvedbinary.xpath.parser.ast.PathExpr",
      "com.evolvedbinary.xpath.parser.ast.AndExpr",
      "com.evolvedbinary.xpath.parser.ast.PITest",
      "com.evolvedbinary.xpath.parser.ast.AttributeTest",
      "com.evolvedbinary.xpath.parser.ast.NameTest",
      "com.evolvedbinary.xpath.parser.ast.QuantifiedExpr",
      "com.evolvedbinary.xpath.parser.ast.NodeComp$NodeCompOperator",
      "com.evolvedbinary.xpath.parser.ast.NodeComp",
      "com.evolvedbinary.xpath.parser.ast.TextTest",
      "com.evolvedbinary.xpath.parser.ast.StringLiteral",
      "com.evolvedbinary.xpath.parser.ast.Predicate",
      "com.evolvedbinary.xpath.parser.ast.SimpleForClause",
      "com.evolvedbinary.xpath.parser.ast.SimpleForClause$RangeVariable",
      "com.evolvedbinary.xpath.parser.ast.ComparisonExpr",
      "com.evolvedbinary.xpath.parser.ast.DoubleLiteral",
      "com.evolvedbinary.xpath.parser.ast.OrExpr",
      "com.evolvedbinary.xpath.parser.ast.CommentTest",
      "com.evolvedbinary.xpath.parser.ast.SingleType",
      "com.evolvedbinary.xpath.parser.ast.CastExpr",
      "com.evolvedbinary.xpath.parser.ast.RangeExpr",
      "com.evolvedbinary.xpath.parser.ast.IntersectExceptExpr$IntersectExceptOp",
      "com.evolvedbinary.xpath.parser.ast.IntersectExceptExpr",
      "com.evolvedbinary.xpath.parser.ast.AtomicType",
      "com.evolvedbinary.xpath.parser.ast.SchemaElementTest",
      "com.evolvedbinary.xpath.parser.ast.ForExpr",
      "com.evolvedbinary.xpath.parser.ast.DecimalLiteral",
      "com.evolvedbinary.functional.Either",
      "com.evolvedbinary.functional.Either$Right",
      "com.evolvedbinary.functional.Either$Left",
      "com.evolvedbinary.xpath.parser.ast.ItemTypeItem",
      "com.evolvedbinary.xpath.parser.ast.CastableExpr",
      "com.evolvedbinary.functional.Either$LeftProjection",
      "com.evolvedbinary.xpath.parser.ast.QuantifiedExpr$InClause"
    );
  }
}
