/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:24:00 GMT 2022
 */

package com.evolvedbinary.xpath.parser.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.evolvedbinary.xpath.parser.ast.AttributeTest;
import com.evolvedbinary.xpath.parser.ast.QNameW;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AttributeTest_ESTest extends AttributeTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QNameW qNameW0 = new QNameW("");
      AttributeTest attributeTest0 = new AttributeTest(qNameW0);
      QNameW qNameW1 = attributeTest0.getName();
      assertEquals("", qNameW1.getLocalPart());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QNameW qNameW0 = new QNameW("");
      AttributeTest attributeTest0 = new AttributeTest(qNameW0);
      boolean boolean0 = attributeTest0.equals(attributeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AttributeTest attributeTest0 = new AttributeTest();
      QNameW qNameW0 = new QNameW("z)%'9Kc");
      attributeTest0.typeName = qNameW0;
      String string0 = attributeTest0.toString();
      assertEquals("AST_attribute(, AST_QNameW(z)%'9Kc))", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QNameW qNameW0 = new QNameW("");
      AttributeTest attributeTest0 = new AttributeTest(qNameW0);
      String string0 = attributeTest0.describeParams();
      assertEquals("AST_QNameW()", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QNameW qNameW0 = new QNameW("ATTRIBUTE");
      AttributeTest attributeTest0 = new AttributeTest(qNameW0, qNameW0);
      QNameW qNameW1 = attributeTest0.getName();
      assertSame(qNameW1, qNameW0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AttributeTest attributeTest0 = new AttributeTest();
      QNameW qNameW0 = new QNameW("z)%'9Kc");
      attributeTest0.typeName = qNameW0;
      AttributeTest attributeTest1 = new AttributeTest((QNameW) null);
      boolean boolean0 = attributeTest0.equals(attributeTest1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AttributeTest attributeTest0 = new AttributeTest();
      QNameW qNameW0 = new QNameW("z)%'9Kc");
      attributeTest0.typeName = qNameW0;
      AttributeTest attributeTest1 = new AttributeTest((QNameW) null);
      // Undeclared exception!
      try { 
        attributeTest1.equals(attributeTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.evolvedbinary.xpath.parser.ast.AttributeTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QNameW qNameW0 = new QNameW("ATTRIBUTE");
      AttributeTest attributeTest0 = new AttributeTest(qNameW0, qNameW0);
      AttributeTest attributeTest1 = new AttributeTest();
      boolean boolean0 = attributeTest0.equals(attributeTest1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QNameW qNameW0 = new QNameW("ATTRIBUTE");
      AttributeTest attributeTest0 = new AttributeTest(qNameW0, qNameW0);
      AttributeTest attributeTest1 = new AttributeTest();
      // Undeclared exception!
      try { 
        attributeTest1.equals(attributeTest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.evolvedbinary.xpath.parser.ast.AttributeTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QNameW qNameW0 = new QNameW("ATTRIBUTE");
      AttributeTest attributeTest0 = new AttributeTest(qNameW0, qNameW0);
      boolean boolean0 = attributeTest0.equals(attributeTest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QNameW qNameW0 = new QNameW("ATTRIBUTE");
      AttributeTest attributeTest0 = new AttributeTest(qNameW0, qNameW0);
      boolean boolean0 = attributeTest0.equals("AST_attribute()");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AttributeTest attributeTest0 = new AttributeTest((QNameW) null);
      boolean boolean0 = attributeTest0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AttributeTest attributeTest0 = new AttributeTest();
      String string0 = attributeTest0.describeParams();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AttributeTest attributeTest0 = new AttributeTest();
      QNameW qNameW0 = attributeTest0.getName();
      assertNull(qNameW0);
  }
}
