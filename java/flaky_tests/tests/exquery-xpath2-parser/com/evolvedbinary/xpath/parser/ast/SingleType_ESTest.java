/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 07:46:41 GMT 2022
 */

package com.evolvedbinary.xpath.parser.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.evolvedbinary.xpath.parser.ast.AtomicType;
import com.evolvedbinary.xpath.parser.ast.QNameW;
import com.evolvedbinary.xpath.parser.ast.SingleType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SingleType_ESTest extends SingleType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SingleType singleType0 = new SingleType((AtomicType) null, false);
      // Undeclared exception!
      try { 
        singleType0.equals(singleType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.evolvedbinary.xpath.parser.ast.SingleType", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QNameW qNameW0 = new QNameW("");
      AtomicType atomicType0 = new AtomicType(qNameW0);
      SingleType singleType0 = new SingleType(atomicType0, true);
      SingleType singleType1 = new SingleType(atomicType0, false);
      boolean boolean0 = singleType0.equals(singleType1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QNameW qNameW0 = new QNameW("rXU-qMk>dRT");
      AtomicType atomicType0 = new AtomicType(qNameW0);
      SingleType singleType0 = new SingleType(atomicType0, true);
      AtomicType atomicType1 = new AtomicType((QNameW) null);
      SingleType singleType1 = new SingleType(atomicType1, true);
      boolean boolean0 = singleType0.equals(singleType1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QNameW qNameW0 = new QNameW("", "");
      AtomicType atomicType0 = new AtomicType(qNameW0);
      SingleType singleType0 = new SingleType(atomicType0, false);
      boolean boolean0 = singleType0.equals(singleType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QNameW qNameW0 = new QNameW("", "");
      AtomicType atomicType0 = new AtomicType(qNameW0);
      SingleType singleType0 = new SingleType(atomicType0, false);
      boolean boolean0 = singleType0.equals(qNameW0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QNameW qNameW0 = new QNameW("", "");
      AtomicType atomicType0 = new AtomicType(qNameW0);
      SingleType singleType0 = new SingleType(atomicType0, false);
      boolean boolean0 = singleType0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SingleType singleType0 = new SingleType((AtomicType) null, true);
      String string0 = singleType0.describe();
      assertEquals("SingleType(null?)", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SingleType singleType0 = new SingleType((AtomicType) null, false);
      String string0 = singleType0.describe();
      assertEquals("SingleType(null)", string0);
  }
}
