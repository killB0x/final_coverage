/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:52:22 GMT 2022
 */

package com.evolvedbinary.xpath.parser.ast.partial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.evolvedbinary.xpath.parser.ast.ASTNode;
import com.evolvedbinary.xpath.parser.ast.Expr;
import com.evolvedbinary.xpath.parser.ast.IfExpr;
import com.evolvedbinary.xpath.parser.ast.partial.PartialIfExpr;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PartialIfExpr_ESTest extends PartialIfExpr_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<PartialIfExpr.PartialIfExpr1> linkedList0 = new LinkedList<PartialIfExpr.PartialIfExpr1>();
      Expr expr0 = new Expr(linkedList0);
      PartialIfExpr partialIfExpr0 = new PartialIfExpr(expr0);
      String string0 = partialIfExpr0.describe();
      assertEquals("IfExpr(AST_Expr() then ? else ?)", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Expr expr0 = new Expr((List<? extends ASTNode>) null);
      PartialIfExpr partialIfExpr0 = new PartialIfExpr(expr0);
      // Undeclared exception!
      try { 
        partialIfExpr0.describe();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.evolvedbinary.xpath.parser.ast.Expr", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<PartialIfExpr.PartialIfExpr1> linkedList0 = new LinkedList<PartialIfExpr.PartialIfExpr1>();
      Expr expr0 = new Expr(linkedList0);
      PartialIfExpr partialIfExpr0 = new PartialIfExpr(expr0);
      PartialIfExpr.PartialIfExpr1 partialIfExpr_PartialIfExpr1_0 = partialIfExpr0.new PartialIfExpr1(partialIfExpr0);
      assertFalse(linkedList0.contains(partialIfExpr_PartialIfExpr1_0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<PartialIfExpr.PartialIfExpr1> linkedList0 = new LinkedList<PartialIfExpr.PartialIfExpr1>();
      Expr expr0 = new Expr(linkedList0);
      PartialIfExpr partialIfExpr0 = new PartialIfExpr(expr0);
      PartialIfExpr.PartialIfExpr1 partialIfExpr_PartialIfExpr1_0 = partialIfExpr0.complete((ASTNode) expr0);
      IfExpr ifExpr0 = partialIfExpr_PartialIfExpr1_0.complete((ASTNode) expr0);
      assertNotNull(ifExpr0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<PartialIfExpr.PartialIfExpr1> linkedList0 = new LinkedList<PartialIfExpr.PartialIfExpr1>();
      Expr expr0 = new Expr(linkedList0);
      PartialIfExpr partialIfExpr0 = new PartialIfExpr(expr0);
      PartialIfExpr.PartialIfExpr1 partialIfExpr_PartialIfExpr1_0 = partialIfExpr0.complete((ASTNode) expr0);
      String string0 = partialIfExpr_PartialIfExpr1_0.describe();
      assertEquals("IfExpr(AST_Expr() then AST_Expr() else ?)", string0);
  }
}
