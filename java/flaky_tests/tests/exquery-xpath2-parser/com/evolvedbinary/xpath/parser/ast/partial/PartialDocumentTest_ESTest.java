/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 08:53:44 GMT 2022
 */

package com.evolvedbinary.xpath.parser.ast.partial;

import org.junit.Test;
import static org.junit.Assert.*;
import com.evolvedbinary.functional.Either;
import com.evolvedbinary.xpath.parser.ast.DocumentTest;
import com.evolvedbinary.xpath.parser.ast.ElementTest;
import com.evolvedbinary.xpath.parser.ast.KindTest;
import com.evolvedbinary.xpath.parser.ast.SchemaElementTest;
import com.evolvedbinary.xpath.parser.ast.partial.PartialDocumentTest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PartialDocumentTest_ESTest extends PartialDocumentTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PartialDocumentTest partialDocumentTest0 = new PartialDocumentTest();
      String string0 = partialDocumentTest0.describe();
      assertEquals("DocumentTest(?)", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PartialDocumentTest partialDocumentTest0 = new PartialDocumentTest();
      DocumentTest documentTest0 = partialDocumentTest0.complete((Either<ElementTest, SchemaElementTest>) null);
      assertEquals(KindTest.Kind.DOCUMENT, documentTest0.getKind());
  }
}
