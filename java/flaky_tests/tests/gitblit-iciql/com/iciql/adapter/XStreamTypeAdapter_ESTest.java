/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 11:29:47 GMT 2022
 */

package com.iciql.adapter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iciql.Iciql;
import com.iciql.adapter.XStreamTypeAdapter;
import com.thoughtworks.xstream.XStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XStreamTypeAdapter_ESTest extends XStreamTypeAdapter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XStreamTypeAdapter xStreamTypeAdapter0 = new XStreamTypeAdapter();
      XStream xStream0 = xStreamTypeAdapter0.xstream();
      // Undeclared exception!
      try { 
        xStreamTypeAdapter0.serialize(xStream0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No converter available
         // ---- Debugging information ----
         // message             : No converter available
         // type                : com.thoughtworks.xstream.mapper.DynamicProxyMapper
         // converter           : java.lang.String@0000002109
         // message[1]          : java.lang.String@0000002110
         // -------------------------------
         //
         verifyException("com.thoughtworks.xstream.core.DefaultConverterLookup", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XStreamTypeAdapter xStreamTypeAdapter0 = new XStreamTypeAdapter();
      // Undeclared exception!
      try { 
        xStreamTypeAdapter0.deserialize(xStreamTypeAdapter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("com.thoughtworks.xstream.io.xml.XppReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XStreamTypeAdapter xStreamTypeAdapter0 = new XStreamTypeAdapter();
      String string0 = xStreamTypeAdapter0.getDataType();
      assertEquals("TEXT", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XStreamTypeAdapter xStreamTypeAdapter0 = new XStreamTypeAdapter();
      Iciql.Mode iciql_Mode0 = Iciql.Mode.PROD;
      xStreamTypeAdapter0.setMode(iciql_Mode0);
      assertEquals("TEXT", xStreamTypeAdapter0.getDataType());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XStreamTypeAdapter xStreamTypeAdapter0 = new XStreamTypeAdapter();
      // Undeclared exception!
      try { 
        xStreamTypeAdapter0.deserialize((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XStreamTypeAdapter xStreamTypeAdapter0 = new XStreamTypeAdapter();
      Object object0 = new Object();
      Object object1 = xStreamTypeAdapter0.serialize(object0);
      assertNotNull(object1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      XStreamTypeAdapter xStreamTypeAdapter0 = new XStreamTypeAdapter();
      Class<Object> class0 = xStreamTypeAdapter0.getJavaType();
      assertFalse(class0.isAnnotation());
  }
}
