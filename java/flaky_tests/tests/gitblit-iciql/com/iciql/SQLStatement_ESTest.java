/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 11:08:15 GMT 2022
 */

package com.iciql;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iciql.Db;
import com.iciql.SQLStatement;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SQLStatement_ESTest extends SQLStatement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SQLStatement sQLStatement0 = new SQLStatement((Db) null);
      SQLStatement sQLStatement1 = sQLStatement0.appendSQL("error setting parameter {0} as {1}");
      String string0 = sQLStatement1.getSQL();
      assertEquals("error setting parameter {0} as {1}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SQLStatement sQLStatement0 = new SQLStatement((Db) null);
      // Undeclared exception!
      try { 
        sQLStatement0.setSQL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SQLStatement sQLStatement0 = new SQLStatement((Db) null);
      SQLStatement sQLStatement1 = sQLStatement0.appendSQL("java.time.ZoneId");
      sQLStatement1.addParameter("");
      // Undeclared exception!
      try { 
        sQLStatement1.toSQL();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.SQLStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SQLStatement sQLStatement0 = new SQLStatement((Db) null);
      Instant instant0 = MockInstant.now();
      Date date0 = Date.from(instant0);
      // Undeclared exception!
      try { 
        sQLStatement0.addParameter(date0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.SQLStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SQLStatement sQLStatement0 = new SQLStatement((Db) null);
      SQLStatement sQLStatement1 = sQLStatement0.addParameter((Object) null);
      assertSame(sQLStatement0, sQLStatement1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SQLStatement sQLStatement0 = new SQLStatement((Db) null);
      Object object0 = new Object();
      SQLStatement sQLStatement1 = sQLStatement0.addParameter(object0);
      String string0 = sQLStatement1.toSQL();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SQLStatement sQLStatement0 = new SQLStatement((Db) null);
      sQLStatement0.toSQL();
      // Undeclared exception!
      try { 
        sQLStatement0.prepare(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.SQLStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SQLStatement sQLStatement0 = new SQLStatement((Db) null);
      sQLStatement0.getSQL();
      String string0 = sQLStatement0.toSQL();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SQLStatement sQLStatement0 = new SQLStatement((Db) null);
      sQLStatement0.getSQL();
      // Undeclared exception!
      try { 
        sQLStatement0.executeInsert();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.SQLStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SQLStatement sQLStatement0 = new SQLStatement((Db) null);
      // Undeclared exception!
      try { 
        sQLStatement0.appendColumn(".");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.SQLStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SQLStatement sQLStatement0 = new SQLStatement((Db) null);
      // Undeclared exception!
      try { 
        sQLStatement0.appendTable("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.SQLStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SQLStatement sQLStatement0 = new SQLStatement((Db) null);
      sQLStatement0.setSQL("_s(y4~_");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SQLStatement sQLStatement0 = new SQLStatement((Db) null);
      // Undeclared exception!
      try { 
        sQLStatement0.executeQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.SQLStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SQLStatement sQLStatement0 = new SQLStatement((Db) null);
      // Undeclared exception!
      try { 
        sQLStatement0.executeUpdate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.SQLStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SQLStatement sQLStatement0 = new SQLStatement((Db) null);
      // Undeclared exception!
      try { 
        sQLStatement0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.SQLStatement", e);
      }
  }
}
