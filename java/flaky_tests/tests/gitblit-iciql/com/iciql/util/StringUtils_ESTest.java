/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 10:58:40 GMT 2022
 */

package com.iciql.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iciql.util.StringUtils;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringUtils_ESTest extends StringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringUtils.escapeForHtml("\r\n", true);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringUtils.calculateSHA1("JEtiJFNxHDo-[(8");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringUtils.quoteStringSQL("Dh JXkG_a=");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringUtils.javaEncode("Dh JXkG_a=");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringUtils.replaceAll("'Qt:d|zsJp'", "Qt:d|zsJp", "'Qt:d|zsJp'");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("<br/>", "<br/>");
      StringUtils.readContent(mockFile0, "<br/>");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringUtils.replaceAll("", "%j*TazQ4\u0003<P8d", "@=8");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringUtils.javaEncode("");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringUtils.escapeForHtml("", true);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringUtils.breakLinesForHtml("");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      StringUtils.replaceAll("", "", "");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtils.replaceAll((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.util.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtils.readContent((File) null, "B\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.util.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      StringUtils.pad("", 65535, "", true);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtils.javaEncode((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.util.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtils.escapeForHtml((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.util.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtils.count('&', (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.util.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtils.calculateSHA1((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.util.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtils.calculateSHA1((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.util.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtils.breakLinesForHtml((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.util.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      StringUtils.calculateSHA1(byteArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringUtils.javaEncode("\\n");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/42ES11042ES11");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "30[_>rk");
      File file0 = MockFile.createTempFile("42ES11", "42ES11");
      StringUtils.readContent(file0, (String) null);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/42ES11042ES11");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "30[_>rk");
      File file0 = MockFile.createTempFile("42ES11", "42ES11");
      StringUtils.readContent(file0, "42ES11");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringUtils.escapeForHtml("tgROLI17=n4) !)UxUT", true);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringUtils.escapeForHtml("<br/`>", true);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringUtils.escapeForHtml("\"#fj@(..&lfF]j]g9%", false);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringUtils.count('B', "B}x$vu$,}11l|]l");
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringUtils.count('h', "b753d636f6ee46bb9242d01ff8b61f715e9a88c3");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringUtils.arraySplit("l)xTrdv9thoF.Zou\\", 'v', false);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringUtils.arraySplit("UUR2H\",W3D'kMj$", 'M', true);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringUtils.arraySplit((String) null, '<', true);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringUtils.arraySplit("", 'I', false);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringUtils.quoteStringSQL("B\n");
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = StringUtils.pad("c;huo0rQ@", 3541, "x", false);
      String string1 = StringUtils.quoteStringSQL(string0);
      StringUtils.quoteStringSQL(string1);
      // Undeclared exception!
      StringUtils.quoteStringSQL(string1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = StringUtils.quoteStringSQL((String) null);
      assertEquals("NULL", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = StringUtils.pad("2BP01", (byte)102, (String) null, true);
      assertEquals("2BP01                                                                                                 ", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = StringUtils.pad("", 0, "", false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = StringUtils.pad("_-kU(^k~P/t", (byte)0, "STRINGDECODE(", false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtils.pad((String) null, (-2289), (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = StringUtils.javaEncode("\"##B");
      assertEquals("\\\"##B", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = StringUtils.javaEncode("\r\n");
      assertEquals("\\r\\n", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      boolean boolean0 = StringUtils.isNullOrEmpty("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      boolean boolean0 = StringUtils.isNullOrEmpty("b753d636f6ee46bb9242d01ff8b61f715e9a88c3");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      boolean boolean0 = StringUtils.isNullOrEmpty((String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = StringUtils.pad("'", 1897, "'", false);
      String string1 = StringUtils.replaceAll(string0, "'", "'");
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = StringUtils.breakLinesForHtml(":{TU|QOkY*");
      assertEquals(":{TU|QOkY*", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringUtils stringUtils0 = new StringUtils();
  }
}
