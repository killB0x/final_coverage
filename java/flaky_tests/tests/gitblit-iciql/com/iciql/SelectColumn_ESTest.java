/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 11:24:36 GMT 2022
 */

package com.iciql;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iciql.Dao;
import com.iciql.DaoProxy;
import com.iciql.SQLStatement;
import com.iciql.SelectColumn;
import com.iciql.SelectTable;
import com.iciql.TableDefinition;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SelectColumn_ESTest extends SelectColumn_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SelectColumn<DaoProxy<Dao>> selectColumn0 = new SelectColumn<DaoProxy<Dao>>((SelectTable<DaoProxy<Dao>>) null, (TableDefinition.FieldDefinition) null);
      TableDefinition.FieldDefinition tableDefinition_FieldDefinition0 = selectColumn0.getFieldDefinition();
      assertNull(tableDefinition_FieldDefinition0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TableDefinition.FieldDefinition tableDefinition_FieldDefinition0 = new TableDefinition.FieldDefinition();
      SelectColumn<Object> selectColumn0 = new SelectColumn<Object>((SelectTable<Object>) null, tableDefinition_FieldDefinition0);
      // Undeclared exception!
      try { 
        selectColumn0.appendSQL((SQLStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.SelectColumn", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TableDefinition.FieldDefinition tableDefinition_FieldDefinition0 = new TableDefinition.FieldDefinition();
      SelectColumn<Object> selectColumn0 = new SelectColumn<Object>((SelectTable<Object>) null, tableDefinition_FieldDefinition0);
      TableDefinition.FieldDefinition tableDefinition_FieldDefinition1 = selectColumn0.getFieldDefinition();
      assertNotNull(tableDefinition_FieldDefinition1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TableDefinition.FieldDefinition tableDefinition_FieldDefinition0 = new TableDefinition.FieldDefinition();
      SelectColumn<Object> selectColumn0 = new SelectColumn<Object>((SelectTable<Object>) null, tableDefinition_FieldDefinition0);
      // Undeclared exception!
      try { 
        selectColumn0.getCurrentValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.SelectColumn", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TableDefinition.FieldDefinition tableDefinition_FieldDefinition0 = new TableDefinition.FieldDefinition();
      SelectColumn<Object> selectColumn0 = new SelectColumn<Object>((SelectTable<Object>) null, tableDefinition_FieldDefinition0);
      SelectTable<Object> selectTable0 = selectColumn0.getSelectTable();
      assertNull(selectTable0);
  }
}
