/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 11:44:35 GMT 2022
 */

package com.iciql.bytecode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iciql.Query;
import com.iciql.RuntimeToken;
import com.iciql.SQLStatement;
import com.iciql.Token;
import com.iciql.bytecode.Function;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Function_ESTest extends Function_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      RuntimeToken runtimeToken0 = new RuntimeToken("", objectArray0);
      Function function0 = new Function("", runtimeToken0);
      SQLStatement sQLStatement0 = mock(SQLStatement.class, new ViolatedAssumptionAnswer());
      doReturn((SQLStatement) null, (SQLStatement) null, (SQLStatement) null).when(sQLStatement0).appendSQL(anyString());
      function0.appendSQL(sQLStatement0, (Query<Object>) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Function function0 = new Function("6^Q1n7GfakN)W", (Token) null);
      // Undeclared exception!
      try { 
        function0.appendSQL((SQLStatement) null, (Query<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.bytecode.Function", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      RuntimeToken runtimeToken0 = new RuntimeToken("", objectArray0);
      Function function0 = new Function("", runtimeToken0);
      SQLStatement sQLStatement0 = mock(SQLStatement.class, new ViolatedAssumptionAnswer());
      doReturn((SQLStatement) null).when(sQLStatement0).appendSQL(anyString());
      // Undeclared exception!
      try { 
        function0.appendSQL(sQLStatement0, (Query<Object>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Fragment \"\" specifies 0 tokens but you supplied 2 args
         //
         verifyException("com.iciql.RuntimeToken", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Function function0 = new Function("X0Y25", (Token) null);
      String string0 = function0.toString();
      assertEquals("X0Y25(null)", string0);
  }
}
