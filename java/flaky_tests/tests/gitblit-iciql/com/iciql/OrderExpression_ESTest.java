/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 11:19:24 GMT 2022
 */

package com.iciql;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iciql.OrderExpression;
import com.iciql.Query;
import com.iciql.SQLStatement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OrderExpression_ESTest extends OrderExpression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      OrderExpression<Object> orderExpression0 = new OrderExpression<Object>((Query<Object>) null, object0, true, false, true);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OrderExpression<Object> orderExpression0 = new OrderExpression<Object>((Query<Object>) null, (Object) null, false, true, true);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OrderExpression<Integer> orderExpression0 = new OrderExpression<Integer>((Query<Integer>) null, (Object) null, false, false, false);
      // Undeclared exception!
      try { 
        orderExpression0.appendSQL((SQLStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.OrderExpression", e);
      }
  }
}
