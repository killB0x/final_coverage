/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 24 11:09:21 GMT 2022
 */

package com.iciql;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.iciql.ValueCount;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ValueCount_ESTest extends ValueCount_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-175), (-175), (-1741), (-1042), (-1447), 1519);
      ValueCount<Object> valueCount0 = new ValueCount<Object>(mockDate0, 440L);
      valueCount0.getValue();
      assertEquals(440L, valueCount0.getCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1237), (-1515), (-2494), (-1237), (-1237), (-1515));
      ValueCount<Date> valueCount0 = new ValueCount<Date>(mockDate0, 0L);
      long long0 = valueCount0.getCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ValueCount<Date> valueCount0 = new ValueCount<Date>((Date) null, (-181L));
      ValueCount<Object> valueCount1 = new ValueCount<Object>(valueCount0, (-181L));
      long long0 = valueCount1.getCount();
      assertEquals((-181L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ValueCount<Object> valueCount0 = new ValueCount<Object>((Object) null, (-1603L));
      // Undeclared exception!
      try { 
        valueCount0.compareTo((ValueCount<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.iciql.ValueCount", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      ValueCount<Object> valueCount0 = new ValueCount<Object>(mockDate0, (-1643L));
      ValueCount<Object> valueCount1 = new ValueCount<Object>(valueCount0, (-1643L));
      // Undeclared exception!
      try { 
        valueCount0.compareTo(valueCount1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.iciql.ValueCount cannot be cast to class java.util.Date (com.iciql.ValueCount is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3a64b387; java.util.Date is in module java.base of loader 'bootstrap')
         //
         verifyException("com.iciql.ValueCount", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      ValueCount<Object> valueCount0 = new ValueCount<Object>(mockDate0, (-1643L));
      int int0 = valueCount0.compareTo(valueCount0);
      assertEquals(0, int0);
      assertEquals((-1643L), valueCount0.getCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Long long0 = new Long((-936L));
      ValueCount<Long> valueCount0 = new ValueCount<Long>(long0, (-2488L));
      Long long1 = new Long(0L);
      ValueCount<Long> valueCount1 = new ValueCount<Long>(long1, (-2488L));
      int int0 = valueCount1.compareTo(valueCount0);
      assertEquals(1, int0);
      assertEquals((-2488L), valueCount1.getCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Long long0 = new Long((-936L));
      ValueCount<Long> valueCount0 = new ValueCount<Long>(long0, (-2488L));
      Long long1 = new Long(0L);
      ValueCount<Long> valueCount1 = new ValueCount<Long>(long1, (-2488L));
      int int0 = valueCount0.compareTo(valueCount1);
      assertEquals((-1), int0);
      assertEquals((-2488L), valueCount1.getCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      ValueCount<Object> valueCount0 = new ValueCount<Object>(object0, (-481L));
      int int0 = valueCount0.compareTo(valueCount0);
      assertEquals(0, int0);
      assertEquals((-481L), valueCount0.getCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ValueCount<Date> valueCount0 = new ValueCount<Date>((Date) null, 1202L);
      ValueCount<Object> valueCount1 = new ValueCount<Object>(valueCount0, (-1972));
      ValueCount<Object> valueCount2 = new ValueCount<Object>((Object) null, (-1972));
      int int0 = valueCount1.compareTo(valueCount2);
      assertEquals((-1), int0);
      assertEquals((-1972L), valueCount2.getCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ValueCount<Date> valueCount0 = new ValueCount<Date>((Date) null, 1179L);
      int int0 = valueCount0.compareTo(valueCount0);
      assertEquals(0, int0);
      assertEquals(1179L, valueCount0.getCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ValueCount<Date> valueCount0 = new ValueCount<Date>((Date) null, 1202L);
      ValueCount<Object> valueCount1 = new ValueCount<Object>(valueCount0, (-1972));
      ValueCount<Object> valueCount2 = new ValueCount<Object>((Object) null, (-1972));
      int int0 = valueCount2.compareTo(valueCount1);
      assertEquals((-1972L), valueCount2.getCount());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ValueCount<Date> valueCount0 = new ValueCount<Date>((Date) null, 1202L);
      ValueCount<Date> valueCount1 = new ValueCount<Date>((Date) null, (-2205L));
      int int0 = valueCount0.compareTo(valueCount1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ValueCount<Date> valueCount0 = new ValueCount<Date>((Date) null, 1202L);
      Object object0 = new Object();
      ValueCount<Object> valueCount1 = new ValueCount<Object>(object0, 1547L);
      ValueCount<Object> valueCount2 = new ValueCount<Object>(valueCount0, 1202L);
      int int0 = valueCount2.compareTo(valueCount1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Long long0 = new Long((-936L));
      ValueCount<Long> valueCount0 = new ValueCount<Long>(long0, (-2488L));
      int int0 = valueCount0.compareTo(valueCount0);
      assertEquals(0, int0);
      assertEquals((-2488L), valueCount0.getCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object object0 = new Object();
      ValueCount<Object> valueCount0 = new ValueCount<Object>(object0, 1547L);
      long long0 = valueCount0.getCount();
      assertEquals(1547L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ValueCount<Date> valueCount0 = new ValueCount<Date>((Date) null, 1202L);
      valueCount0.getValue();
      assertEquals(1202L, valueCount0.getCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Long long0 = new Long((-936L));
      ValueCount<Long> valueCount0 = new ValueCount<Long>(long0, (-2488L));
      String string0 = valueCount0.toString();
      assertEquals("-936=-2488", string0);
  }
}
