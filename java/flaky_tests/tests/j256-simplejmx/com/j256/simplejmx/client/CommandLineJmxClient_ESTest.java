/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 10:26:22 GMT 2022
 */

package com.j256.simplejmx.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplejmx.client.CommandLineJmxClient;
import com.j256.simplejmx.client.JmxClient;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.InetAddress;
import javax.management.JMException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CommandLineJmxClient_ESTest extends CommandLineJmxClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "dolin \"esW,s^";
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "F5";
      stringArray0[1] = "\"";
      stringArray0[2] = "getgetdolinesW,s^";
      stringArray0[3] = "run script  -  execute a script from a file path";
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "  ";
      // Undeclared exception!
      try { 
        commandLineJmxClient0.runCommands(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.j256.simplejmx.client.CommandLineJmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SystemInUtil.addInputLine("  ");
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      // Undeclared exception!
      try { 
        commandLineJmxClient0.runCommandLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.j256.simplejmx.client.CommandLineJmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      File file0 = MockFile.createTempFile("runget]7+;\"i>P\"", "runget]7+;\"i>P\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        commandLineJmxClient0.runBatchFile(file0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      MockFile mockFile0 = new MockFile("ETTa7%4F:7o/");
      try { 
        commandLineJmxClient0.runBatchFile(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      CommandLineJmxClient commandLineJmxClient0 = null;
      try {
        commandLineJmxClient0 = new CommandLineJmxClient(inetAddress0, (-4766));
        fail("Expecting exception: JMException");
      
      } catch(Throwable e) {
         //
         // Problems connecting to the serverjava.io.IOException: Failed to retrieve RMIServer stub: javax.naming.InvalidNameException: invalid authority: 192.168.1.42:-4766 [Root exception is java.lang.IllegalArgumentException: invalid authority: 192.168.1.42:-4766]
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      CommandLineJmxClient commandLineJmxClient0 = null;
      try {
        commandLineJmxClient0 = new CommandLineJmxClient(inetAddress0, 2147483645);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:2147483645
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = null;
      try {
        commandLineJmxClient0 = new CommandLineJmxClient("km~=L\")n1|PAvoPI3", 2391);
        fail("Expecting exception: JMException");
      
      } catch(Throwable e) {
         //
         // Problems connecting to the serverjava.io.IOException: Failed to retrieve RMIServer stub: javax.naming.InvalidNameException: Illegal character in authority at index 6: rmi://km~=L\")n1|PAvoPI3:2391 [Root exception is java.lang.IllegalArgumentException: Illegal character in authority at index 6: rmi://km~=L\")n1|PAvoPI3:2391]
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = null;
      try {
        commandLineJmxClient0 = new CommandLineJmxClient(": ", 40);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \" :40\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = null;
      try {
        commandLineJmxClient0 = new CommandLineJmxClient("", 2147483645);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:2147483645
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = null;
      try {
        commandLineJmxClient0 = new CommandLineJmxClient((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Jmx URL cannot be null
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = null;
      try {
        commandLineJmxClient0 = new CommandLineJmxClient("service:jmx:rmi:///jndi/rmi://");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = null;
      try {
        commandLineJmxClient0 = new CommandLineJmxClient(2147483645);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:2147483645
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "quit\"";
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "sleep";
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "dolinesW,s^";
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "opsf_jt{RKh@V;#~PBWK";
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "opers";
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "setqp8usbk3";
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "get object-name attr  -  output the value associated with this attribute";
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "attrs\"ns-mvP\"=ql>[QVk";
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "runget]7+;\"i>P\"";
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "objects [re6ex] -  list =bject-names exposed by JMX";
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SystemInUtil.addInputLine("CLK!xszsD?qZ59+;}");
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      try { 
        commandLineJmxClient0.runCommandLine();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated exception in System.in
         //
         verifyException("org.evosuite.runtime.util.SystemInUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "//attrs\"ns-mvP\"=ql>[QVk";
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "#runget]7+;\"i>P\"";
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      File file0 = MockFile.createTempFile("/-,KN<F-,6,{.S'VRG", "/-,KN<F-,6,{.S'VRG");
      commandLineJmxClient0.runBatchFile(file0);
      assertEquals(0L, file0.getUsableSpace());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "help";
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      commandLineJmxClient0.runCommandLine();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      commandLineJmxClient0.close();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "examples";
      commandLineJmxClient0.runCommands(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      // Undeclared exception!
      try { 
        commandLineJmxClient0.runBatchFile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = null;
      try {
        commandLineJmxClient0 = new CommandLineJmxClient("");
        fail("Expecting exception: JMException");
      
      } catch(Throwable e) {
         //
         // JmxServiceUrl was malformed: 
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = null;
      try {
        commandLineJmxClient0 = new CommandLineJmxClient((InetAddress) null, (-2));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = null;
      try {
        commandLineJmxClient0 = new CommandLineJmxClient("7N;.:Byju}vqs", 2);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CommandLineJmxClient commandLineJmxClient0 = new CommandLineJmxClient((JmxClient) null);
      // Undeclared exception!
      try { 
        commandLineJmxClient0.runCommands((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplejmx.client.CommandLineJmxClient$1", e);
      }
  }
}
