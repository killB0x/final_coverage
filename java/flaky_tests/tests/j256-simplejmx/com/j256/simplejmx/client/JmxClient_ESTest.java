/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 10:29:56 GMT 2022
 */

package com.j256.simplejmx.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplejmx.client.JmxClient;
import java.net.InetAddress;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.management.JMException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JmxClient_ESTest extends JmxClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = JmxClient.generalJmxUrlForHostNamePort("", 0);
      assertEquals("service:jmx:rmi:///jndi/rmi://:0/jmxrmi", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient("mgh_^3qEYw+>fI", hashtable0);
        fail("Expecting exception: JMException");
      
      } catch(Throwable e) {
         //
         // JmxServiceUrl was malformed: mgh_^3qEYw+>fI
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient((String) null, hashtable0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Jmx URL cannot be null
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Hashtable<String, Character> hashtable0 = new Hashtable<String, Character>();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>(hashtable0);
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient("service:jmx:rmi:///jndi/rmi://", hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.sun.jndi.rmi.registry.RegistryContext cannot be cast to class javax.management.remote.rmi.RMIServer (com.sun.jndi.rmi.registry.RegistryContext is in module jdk.naming.rmi of loader 'bootstrap'; javax.management.remote.rmi.RMIServer is in module java.management.rmi of loader 'bootstrap')
         //
         verifyException("javax.management.remote.rmi.RMIConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.putIfAbsent((String) null, "service:jmx:rmi://jni/rmi:/");
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient("service:jmx:rmi://jni/rmi:/", "service:jmx:rmi://jni/rmi:/", "service:jmx:rmi://jni/rmi:/", hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient((String) null, (String) null, (String) null, hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Jmx URL cannot be null
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient("service:jmx:rmi:///jndi/rmi://", "service:jmx:rmi:///jndi/rmi://", "service:jmx:rmi:///jndi/rmi://", hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.sun.jndi.rmi.registry.RegistryContext cannot be cast to class javax.management.remote.rmi.RMIServer (com.sun.jndi.rmi.registry.RegistryContext is in module jdk.naming.rmi of loader 'bootstrap'; javax.management.remote.rmi.RMIServer is in module java.management.rmi of loader 'bootstrap')
         //
         verifyException("javax.management.remote.rmi.RMIConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient("service:jmx:rmi:///jndi/rmi://", "service:jmx:rmi:///jndi/rmi://", "service:jmx:rmi:///jndi/rmi://");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.sun.jndi.rmi.registry.RegistryContext cannot be cast to class javax.management.remote.rmi.RMIServer (com.sun.jndi.rmi.registry.RegistryContext is in module jdk.naming.rmi of loader 'bootstrap'; javax.management.remote.rmi.RMIServer is in module java.management.rmi of loader 'bootstrap')
         //
         verifyException("javax.management.remote.rmi.RMIConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient("9~R%3B", 0, hashtable0);
        fail("Expecting exception: JMException");
      
      } catch(Throwable e) {
         //
         // Problems connecting to the serverjava.io.IOException: Failed to retrieve RMIServer stub: javax.naming.InvalidNameException: invalid authority: 9~R%3B:0 [Root exception is java.lang.IllegalArgumentException: invalid authority: 9~R%3B:0]
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.putIfAbsent((String) null, (Object) null);
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient((String) null, 1489, hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient(";~5", (-4133), hashtable0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.sun.jndi.rmi.registry.RegistryContext cannot be cast to class javax.management.remote.rmi.RMIServer (com.sun.jndi.rmi.registry.RegistryContext is in module jdk.naming.rmi of loader 'bootstrap'; javax.management.remote.rmi.RMIServer is in module java.management.rmi of loader 'bootstrap')
         //
         verifyException("javax.management.remote.rmi.RMIConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient(":", (-4109), ":", ":");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \":-4109\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient("jo;BLP)78", (-3011), "jo;BLP)78", "jo;BLP)78");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.sun.jndi.rmi.registry.RegistryContext cannot be cast to class javax.management.remote.rmi.RMIServer (com.sun.jndi.rmi.registry.RegistryContext is in module jdk.naming.rmi of loader 'bootstrap'; javax.management.remote.rmi.RMIServer is in module java.management.rmi of loader 'bootstrap')
         //
         verifyException("javax.management.remote.rmi.RMIConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient("V*@%}=i[kVr", (-3162));
        fail("Expecting exception: JMException");
      
      } catch(Throwable e) {
         //
         // Problems connecting to the serverjava.io.IOException: Failed to retrieve RMIServer stub: javax.naming.InvalidNameException: Malformed escape pair at index 9: rmi://V*@%}=i[kVr:-3162 [Root exception is java.lang.IllegalArgumentException: Malformed escape pair at index 9: rmi://V*@%}=i[kVr:-3162]
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient(":*", 7);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"*:7\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient("jo;BLP)78", (-3011));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.sun.jndi.rmi.registry.RegistryContext cannot be cast to class javax.management.remote.rmi.RMIServer (com.sun.jndi.rmi.registry.RegistryContext is in module jdk.naming.rmi of loader 'bootstrap'; javax.management.remote.rmi.RMIServer is in module java.management.rmi of loader 'bootstrap')
         //
         verifyException("javax.management.remote.rmi.RMIConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient("service:jmx:rmi:///jndi/rmi://");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.sun.jndi.rmi.registry.RegistryContext cannot be cast to class javax.management.remote.rmi.RMIServer (com.sun.jndi.rmi.registry.RegistryContext is in module jdk.naming.rmi of loader 'bootstrap'; javax.management.remote.rmi.RMIServer is in module java.management.rmi of loader 'bootstrap')
         //
         verifyException("javax.management.remote.rmi.RMIConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient((String) null, (String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Jmx URL cannot be null
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Jmx URL cannot be null
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient(inetAddress0, (-3162));
        fail("Expecting exception: JMException");
      
      } catch(Throwable e) {
         //
         // Problems connecting to the serverjava.io.IOException: Failed to retrieve RMIServer stub: javax.naming.InvalidNameException: invalid authority: 192.168.1.42:-3162 [Root exception is java.lang.IllegalArgumentException: invalid authority: 192.168.1.42:-3162]
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          JmxClient jmxClient0 = null;
          try {
            jmxClient0 = new JmxClient((-1038));
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"172.17.0.9:1099\" \"connect,resolve\")
             // java.base/java.lang.Thread.getStackTrace(Thread.java:1602)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.base/java.lang.SecurityManager.checkConnect(SecurityManager.java:824)
             // java.base/java.net.Socket.connect(Socket.java:604)
             // java.base/java.net.Socket.connect(Socket.java:558)
             // java.base/java.net.Socket.<init>(Socket.java:454)
             // java.base/java.net.Socket.<init>(Socket.java:231)
             // java.rmi/sun.rmi.transport.tcp.TCPDirectSocketFactory.createSocket(TCPDirectSocketFactory.java:40)
             // java.rmi/sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:617)
             // java.rmi/sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:209)
             // java.rmi/sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:196)
             // java.rmi/sun.rmi.server.UnicastRef.newCall(UnicastRef.java:343)
             // java.rmi/sun.rmi.registry.RegistryImpl_Stub.lookup(RegistryImpl_Stub.java:116)
             // jdk.naming.rmi/com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:133)
             // java.naming/com.sun.jndi.toolkit.url.GenericURLContext.lookup(GenericURLContext.java:220)
             // java.naming/javax.naming.InitialContext.lookup(InitialContext.java:409)
             // java.management.rmi/javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(RMIConnector.java:1839)
             // java.management.rmi/javax.management.remote.rmi.RMIConnector.findRMIServer(RMIConnector.java:1813)
             // java.management.rmi/javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:302)
             // java.management/javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:270)
             // com.j256.simplejmx.client.JmxClient.<init>(JmxClient.java:154)
             // com.j256.simplejmx.client.JmxClient.<init>(JmxClient.java:100)
             // java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
             // java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
             // java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
             // org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:218)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:173)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
             // java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
             // java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
             // java.base/java.lang.Thread.run(Thread.java:829)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient("", (String) null, "");
        fail("Expecting exception: JMException");
      
      } catch(Throwable e) {
         //
         // JmxServiceUrl was malformed: 
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient("", "", "", hashMap0);
        fail("Expecting exception: JMException");
      
      } catch(Throwable e) {
         //
         // JmxServiceUrl was malformed: 
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient(":VZ*mM+t~=", (-1), hashMap0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"VZ*mM+t~=:-1\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient("$vU!{", (-2017), "$vU!{", "$vU!{");
        fail("Expecting exception: JMException");
      
      } catch(Throwable e) {
         //
         // Problems connecting to the serverjava.io.IOException: Failed to retrieve RMIServer stub: javax.naming.InvalidNameException: Illegal character in authority at index 6: rmi://$vU!{:-2017 [Root exception is java.lang.IllegalArgumentException: Illegal character in authority at index 6: rmi://$vU!{:-2017]
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JmxClient jmxClient0 = null;
      try {
        jmxClient0 = new JmxClient("m/f:Re.?g");
        fail("Expecting exception: JMException");
      
      } catch(Throwable e) {
         //
         // JmxServiceUrl was malformed: m/f:Re.?g
         //
         verifyException("com.j256.simplejmx.client.JmxClient", e);
      }
  }
}
