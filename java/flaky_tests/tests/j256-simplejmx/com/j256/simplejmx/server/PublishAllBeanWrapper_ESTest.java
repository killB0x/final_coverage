/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 10:34:24 GMT 2022
 */

package com.j256.simplejmx.server;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplejmx.common.JmxAttributeFieldInfo;
import com.j256.simplejmx.common.JmxAttributeMethodInfo;
import com.j256.simplejmx.common.JmxOperationInfo;
import com.j256.simplejmx.common.JmxResourceInfo;
import com.j256.simplejmx.server.PublishAllBeanWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PublishAllBeanWrapper_ESTest extends PublishAllBeanWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PublishAllBeanWrapper publishAllBeanWrapper0 = new PublishAllBeanWrapper();
      Object object0 = publishAllBeanWrapper0.getTarget();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      JmxResourceInfo jmxResourceInfo0 = new JmxResourceInfo();
      PublishAllBeanWrapper publishAllBeanWrapper0 = new PublishAllBeanWrapper(object0, jmxResourceInfo0);
      JmxAttributeMethodInfo[] jmxAttributeMethodInfoArray0 = publishAllBeanWrapper0.getAttributeMethodInfos();
      assertEquals(0, jmxAttributeMethodInfoArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PublishAllBeanWrapper publishAllBeanWrapper0 = new PublishAllBeanWrapper();
      Object object0 = new Object();
      publishAllBeanWrapper0.setDelegate(object0);
      JmxAttributeFieldInfo[] jmxAttributeFieldInfoArray0 = publishAllBeanWrapper0.getAttributeFieldInfos();
      assertEquals(0, jmxAttributeFieldInfoArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PublishAllBeanWrapper publishAllBeanWrapper0 = new PublishAllBeanWrapper();
      // Undeclared exception!
      try { 
        publishAllBeanWrapper0.getOperationInfos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplejmx.server.PublishAllBeanWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PublishAllBeanWrapper publishAllBeanWrapper0 = new PublishAllBeanWrapper();
      // Undeclared exception!
      try { 
        publishAllBeanWrapper0.getAttributeMethodInfos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplejmx.server.PublishAllBeanWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PublishAllBeanWrapper publishAllBeanWrapper0 = new PublishAllBeanWrapper();
      // Undeclared exception!
      try { 
        publishAllBeanWrapper0.getAttributeFieldInfos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplejmx.server.PublishAllBeanWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PublishAllBeanWrapper publishAllBeanWrapper0 = null;
      try {
        publishAllBeanWrapper0 = new PublishAllBeanWrapper("com.j256.simplejmx.common.JmxOperationInfo", (JmxResourceInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.j256.simplejmx.server.PublishAllBeanWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PublishAllBeanWrapper publishAllBeanWrapper0 = new PublishAllBeanWrapper();
      publishAllBeanWrapper0.setDelegate("r");
      JmxOperationInfo[] jmxOperationInfoArray0 = publishAllBeanWrapper0.getOperationInfos();
      assertEquals(40, jmxOperationInfoArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      JmxResourceInfo jmxResourceInfo0 = new JmxResourceInfo();
      PublishAllBeanWrapper publishAllBeanWrapper0 = new PublishAllBeanWrapper(object0, jmxResourceInfo0);
      JmxOperationInfo jmxOperationInfo0 = new JmxOperationInfo("");
      publishAllBeanWrapper0.setDelegate(jmxOperationInfo0);
      JmxOperationInfo[] jmxOperationInfoArray0 = publishAllBeanWrapper0.getOperationInfos();
      //  // Unstable assertion: assertEquals(0, jmxOperationInfoArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PublishAllBeanWrapper publishAllBeanWrapper0 = new PublishAllBeanWrapper();
      publishAllBeanWrapper0.setDelegate("r");
      JmxAttributeMethodInfo[] jmxAttributeMethodInfoArray0 = publishAllBeanWrapper0.getAttributeMethodInfos();
      assertEquals(4, jmxAttributeMethodInfoArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JmxResourceInfo jmxResourceInfo0 = new JmxResourceInfo("", "", "");
      PublishAllBeanWrapper publishAllBeanWrapper0 = new PublishAllBeanWrapper("", jmxResourceInfo0);
      assertEquals("", jmxResourceInfo0.getJmxBeanName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PublishAllBeanWrapper publishAllBeanWrapper0 = new PublishAllBeanWrapper();
      JmxResourceInfo jmxResourceInfo0 = publishAllBeanWrapper0.getJmxResourceInfo();
      assertNull(jmxResourceInfo0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PublishAllBeanWrapper publishAllBeanWrapper0 = new PublishAllBeanWrapper();
      publishAllBeanWrapper0.setTarget("r");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PublishAllBeanWrapper publishAllBeanWrapper0 = new PublishAllBeanWrapper();
      publishAllBeanWrapper0.setDelegate("r");
      JmxAttributeFieldInfo[] jmxAttributeFieldInfoArray0 = publishAllBeanWrapper0.getAttributeFieldInfos();
      assertEquals(1, jmxAttributeFieldInfoArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PublishAllBeanWrapper publishAllBeanWrapper0 = new PublishAllBeanWrapper();
      String[] stringArray0 = new String[4];
      JmxResourceInfo jmxResourceInfo0 = new JmxResourceInfo("L%><N", (String) null, stringArray0, "getParameterNames");
      publishAllBeanWrapper0.setJmxResourceInfo(jmxResourceInfo0);
      JmxResourceInfo jmxResourceInfo1 = publishAllBeanWrapper0.getJmxResourceInfo();
      assertEquals("getParameterNames", jmxResourceInfo1.getJmxDescription());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object object0 = new Object();
      JmxResourceInfo jmxResourceInfo0 = new JmxResourceInfo();
      PublishAllBeanWrapper publishAllBeanWrapper0 = new PublishAllBeanWrapper(object0, jmxResourceInfo0);
      Object object1 = publishAllBeanWrapper0.getTarget();
      assertSame(object1, object0);
  }
}
