/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 18 10:39:31 GMT 2022
 */

package com.j256.simplejmx.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.j256.simplejmx.common.IoUtils;
import java.io.BufferedWriter;
import java.io.Closeable;
import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.io.PipedWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IoUtils_ESTest extends IoUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      BufferedWriter bufferedWriter0 = new BufferedWriter(pipedWriter0);
      bufferedWriter0.newLine();
      IoUtils.closeQuietly(bufferedWriter0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        IoUtils.closeQuietly(filterOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      BufferedWriter bufferedWriter0 = new BufferedWriter(pipedWriter0);
      IoUtils.closeQuietly(bufferedWriter0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IoUtils.closeQuietly((Closeable) null);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IoUtils ioUtils0 = new IoUtils();
  }
}
