/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 14:45:21 GMT 2022
 */

package com.github.edgar615.util.sort;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.edgar615.util.sort.CountingSortAlgorithm;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CountingSortAlgorithm_ESTest extends CountingSortAlgorithm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CountingSortAlgorithm countingSortAlgorithm0 = new CountingSortAlgorithm();
      int[] intArray0 = new int[2];
      intArray0[0] = (-2402);
      intArray0[1] = 9984;
      // Undeclared exception!
      countingSortAlgorithm0.sort(intArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CountingSortAlgorithm countingSortAlgorithm0 = new CountingSortAlgorithm();
      // Undeclared exception!
      try { 
        countingSortAlgorithm0.sort((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CountingSortAlgorithm countingSortAlgorithm0 = new CountingSortAlgorithm();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        countingSortAlgorithm0.sort(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CountingSortAlgorithm countingSortAlgorithm0 = new CountingSortAlgorithm();
      int[] intArray0 = new int[3];
      intArray0[1] = (-1);
      countingSortAlgorithm0.sort(intArray0);
      assertArrayEquals(new int[] {(-1), 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CountingSortAlgorithm countingSortAlgorithm0 = new CountingSortAlgorithm();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        countingSortAlgorithm0.sort(byteArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.sort.CountingSortAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CountingSortAlgorithm countingSortAlgorithm0 = new CountingSortAlgorithm();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      // Undeclared exception!
      try { 
        countingSortAlgorithm0.sort((List<Integer>) linkedList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.sort.CountingSortAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CountingSortAlgorithm countingSortAlgorithm0 = new CountingSortAlgorithm();
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        countingSortAlgorithm0.sort(floatArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.sort.CountingSortAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CountingSortAlgorithm countingSortAlgorithm0 = new CountingSortAlgorithm();
      // Undeclared exception!
      try { 
        countingSortAlgorithm0.sort((double[]) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.sort.CountingSortAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CountingSortAlgorithm countingSortAlgorithm0 = new CountingSortAlgorithm();
      short[] shortArray0 = new short[0];
      // Undeclared exception!
      try { 
        countingSortAlgorithm0.sort(shortArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.sort.CountingSortAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CountingSortAlgorithm countingSortAlgorithm0 = new CountingSortAlgorithm();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        countingSortAlgorithm0.sort(charArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.sort.CountingSortAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CountingSortAlgorithm countingSortAlgorithm0 = new CountingSortAlgorithm();
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        countingSortAlgorithm0.sort(longArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.sort.CountingSortAlgorithm", e);
      }
  }
}
