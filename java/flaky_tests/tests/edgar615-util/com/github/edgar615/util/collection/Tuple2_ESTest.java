/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 14:35:25 GMT 2022
 */

package com.github.edgar615.util.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.edgar615.util.collection.Tuple2;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Tuple2_ESTest extends Tuple2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tuple2<Integer, Integer> tuple2_0 = Tuple2.create((Integer) null, (Integer) null);
      Integer integer0 = tuple2_0.getT2();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tuple2<Integer, Integer> tuple2_0 = Tuple2.create((Integer) null, (Integer) null);
      Tuple2<Integer, Tuple2<Integer, Integer>> tuple2_1 = Tuple2.create((Integer) null, tuple2_0);
      Integer integer0 = tuple2_1.getT1();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tuple2<Integer, Integer> tuple2_0 = Tuple2.create((Integer) null, (Integer) null);
      Integer integer0 = new Integer(1899);
      Tuple2<Tuple2<Integer, Integer>, Integer> tuple2_1 = Tuple2.create(tuple2_0, integer0);
      Tuple2<Integer, Integer> tuple2_2 = tuple2_1.getT1();
      assertSame(tuple2_2, tuple2_0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Tuple2<Integer, Integer> tuple2_0 = Tuple2.create((Integer) null, (Integer) null);
      Tuple2<Integer, Tuple2<Integer, Integer>> tuple2_1 = Tuple2.create((Integer) null, tuple2_0);
      Object object0 = tuple2_1.getT2();
      boolean boolean0 = tuple2_0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tuple2<Integer, Integer> tuple2_0 = Tuple2.create((Integer) null, (Integer) null);
      Tuple2<Integer, Tuple2<Integer, Integer>> tuple2_1 = Tuple2.create((Integer) null, tuple2_0);
      boolean boolean0 = tuple2_0.equals(tuple2_1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(1072);
      Tuple2<Integer, Integer> tuple2_0 = Tuple2.create((Integer) null, (Integer) null);
      Tuple2<Integer, Tuple2<Integer, Integer>> tuple2_1 = Tuple2.create(integer0, tuple2_0);
      boolean boolean0 = tuple2_0.equals(tuple2_1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(2);
      Tuple2<Integer, Integer> tuple2_0 = Tuple2.create(integer0, integer0);
      Tuple2<Tuple2<Integer, Integer>, Integer> tuple2_1 = Tuple2.create(tuple2_0, integer0);
      boolean boolean0 = tuple2_1.equals(tuple2_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Tuple2<Integer, Integer> tuple2_0 = Tuple2.create((Integer) null, (Integer) null);
      Tuple2<Integer, Integer> tuple2_1 = Tuple2.create((Integer) null, (Integer) null);
      boolean boolean0 = tuple2_0.equals(tuple2_1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Tuple2<Integer, Integer> tuple2_0 = Tuple2.create(integer0, integer0);
      Tuple2<Integer, Tuple2<Integer, Integer>> tuple2_1 = Tuple2.create(integer0, tuple2_0);
      boolean boolean0 = tuple2_1.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Tuple2<Integer, Integer> tuple2_0 = Tuple2.create((Integer) null, (Integer) null);
      Tuple2<Integer, Tuple2<Integer, Integer>> tuple2_1 = Tuple2.create((Integer) null, tuple2_0);
      boolean boolean0 = tuple2_1.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tuple2<Integer, Integer> tuple2_0 = Tuple2.create((Integer) null, (Integer) null);
      Integer integer0 = new Integer(1899);
      Tuple2<Tuple2<Integer, Integer>, Tuple2<Integer, Integer>> tuple2_1 = Tuple2.create(tuple2_0, tuple2_0);
      Tuple2<Tuple2<Integer, Integer>, Integer> tuple2_2 = Tuple2.create(tuple2_0, integer0);
      boolean boolean0 = tuple2_2.equals(tuple2_1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Tuple2<Integer, Integer> tuple2_0 = Tuple2.create(integer0, integer0);
      Tuple2<Integer, Integer> tuple2_1 = Tuple2.create(integer0, integer0);
      boolean boolean0 = tuple2_1.equals(tuple2_0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Tuple2<Integer, Integer> tuple2_0 = Tuple2.create(integer0, integer0);
      Tuple2<Tuple2<Integer, Integer>, Integer> tuple2_1 = Tuple2.create(tuple2_0, integer0);
      tuple2_1.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Tuple2<Integer, Integer> tuple2_0 = Tuple2.create((Integer) null, (Integer) null);
      tuple2_0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Tuple2<Integer, Integer> tuple2_0 = Tuple2.create((Integer) null, (Integer) null);
      String string0 = tuple2_0.toString();
      assertEquals("(null, null)", string0);
  }
}
