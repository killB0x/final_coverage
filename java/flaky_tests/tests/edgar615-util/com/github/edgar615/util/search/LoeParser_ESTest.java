/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 14:42:12 GMT 2022
 */

package com.github.edgar615.util.search;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.edgar615.util.search.Criterion;
import com.github.edgar615.util.search.LoeParser;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LoeParser_ESTest extends LoeParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LoeParser loeParser0 = new LoeParser();
      // Undeclared exception!
      try { 
        loeParser0.create((String) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LoeParser loeParser0 = new LoeParser();
      // Undeclared exception!
      try { 
        loeParser0.create("", ">=", false);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Strings
         //
         verifyException("com.github.edgar615.util.search.LoeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LoeParser loeParser0 = new LoeParser();
      // Undeclared exception!
      try { 
        loeParser0.create(" <> ", ">", false);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/base/Strings
         //
         verifyException("com.github.edgar615.util.search.LoeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LoeParser loeParser0 = new LoeParser();
      List<Criterion> list0 = loeParser0.create("", ",huw8", false);
      assertNull(list0);
  }
}
