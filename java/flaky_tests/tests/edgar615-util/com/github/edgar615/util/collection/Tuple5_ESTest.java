/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 14:14:57 GMT 2022
 */

package com.github.edgar615.util.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.edgar615.util.collection.Tuple5;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Tuple5_ESTest extends Tuple5_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer(3544);
      Tuple5<Integer, Integer, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_0 = Tuple5.create(integer0, integer0, integer0, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_1 = tuple5_0.getT5();
      assertNull(tuple5_1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer((-825));
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_0 = Tuple5.create(integer0, (Integer) null, integer0, (Integer) null, (Integer) null);
      Integer integer1 = tuple5_0.getT4();
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer((-2395));
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_0 = Tuple5.create(integer0, integer0, integer0, integer0, integer0);
      Tuple5<Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_1 = Tuple5.create((Integer) null, integer0, tuple5_0, tuple5_0, tuple5_0);
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_2 = tuple5_1.getT4();
      assertSame(tuple5_2, tuple5_0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(3562);
      Tuple5<Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_0 = Tuple5.create(integer0, (Integer) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_1 = tuple5_0.getT3();
      assertNull(tuple5_1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer(1995);
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_0 = Tuple5.create((Integer) null, integer0, integer0, integer0, integer0);
      Tuple5<Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_1 = Tuple5.create(integer0, integer0, tuple5_0, integer0, tuple5_0);
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_2 = tuple5_1.getT3();
      assertSame(tuple5_2, tuple5_0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer((-133));
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer> tuple5_0 = Tuple5.create(integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0);
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_1 = tuple5_0.getT2();
      assertNull(tuple5_1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(1995);
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_0 = Tuple5.create((Integer) null, integer0, integer0, integer0, integer0);
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer> tuple5_1 = Tuple5.create(integer0, tuple5_0, tuple5_0, integer0, integer0);
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_2 = tuple5_1.getT2();
      assertSame(tuple5_2, tuple5_0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer((-2395));
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_0 = Tuple5.create(integer0, integer0, integer0, integer0, integer0);
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Integer> tuple5_1 = Tuple5.create((Integer) null, tuple5_0, integer0, integer0, integer0);
      Integer integer1 = tuple5_1.getT1();
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(1995);
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_0 = Tuple5.create((Integer) null, integer0, integer0, integer0, integer0);
      Tuple5<Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_1 = Tuple5.create(tuple5_0, (Integer) null, integer0, tuple5_0, tuple5_0);
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_2 = tuple5_1.getT5();
      assertSame(tuple5_0, tuple5_2);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer((-12));
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_0 = Tuple5.create(integer0, integer0, integer0, integer0, integer0);
      Tuple5<Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer> tuple5_1 = Tuple5.create(tuple5_0, (Integer) null, tuple5_0, integer0, integer0);
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_2 = tuple5_1.getT1();
      assertSame(tuple5_2, tuple5_0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(2);
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_0 = Tuple5.create(integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_1 = Tuple5.create(integer0, integer0, integer0, integer0, integer0);
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_2 = Tuple5.create(integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, integer0, tuple5_1);
      boolean boolean0 = tuple5_0.equals(tuple5_2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(2);
      Integer integer1 = new Integer(0);
      Tuple5<Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer> tuple5_0 = Tuple5.create(integer0, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, integer1);
      Tuple5<Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer> tuple5_1 = Tuple5.create(integer0, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, integer0);
      boolean boolean0 = tuple5_0.equals(tuple5_1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(2);
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_0 = Tuple5.create(integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_1 = Tuple5.create(integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      boolean boolean0 = tuple5_0.equals(tuple5_1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer((-581));
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer> tuple5_0 = Tuple5.create((Integer) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Integer) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0);
      Tuple5<Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Integer> tuple5_1 = Tuple5.create((Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Integer) null, (Integer) null, integer0);
      boolean boolean0 = tuple5_0.equals(tuple5_1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer((-581));
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_0 = Tuple5.create(integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, (Integer) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_1 = Tuple5.create(integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      boolean boolean0 = tuple5_1.equals(tuple5_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer((-581));
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_0 = Tuple5.create(integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Integer) null, (Integer) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_1 = Tuple5.create(integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      boolean boolean0 = tuple5_0.equals(tuple5_1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_0 = Tuple5.create((Integer) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Integer) null, (Integer) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      Integer integer0 = new Integer((-888));
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_1 = Tuple5.create((Integer) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, (Integer) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      boolean boolean0 = tuple5_1.equals(tuple5_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer((-581));
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_0 = Tuple5.create(integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, (Integer) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_1 = Tuple5.create(integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      boolean boolean0 = tuple5_0.equals(tuple5_1);
      assertFalse(boolean0);
      assertFalse(tuple5_1.equals((Object)tuple5_0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer integer0 = new Integer((-581));
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_0 = Tuple5.create(integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      Tuple5<Integer, Integer, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_1 = Tuple5.create(integer0, integer0, integer0, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      boolean boolean0 = tuple5_0.equals(tuple5_1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Integer integer0 = new Integer(2);
      Tuple5<Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Integer, Integer> tuple5_0 = Tuple5.create((Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, integer0, integer0, integer0);
      Tuple5<Integer, Integer, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_1 = Tuple5.create(integer0, integer0, integer0, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      boolean boolean0 = tuple5_0.equals(tuple5_1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer(2377);
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_0 = Tuple5.create(integer0, integer0, integer0, integer0, integer0);
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_1 = Tuple5.create(integer0, tuple5_0, integer0, tuple5_0, tuple5_0);
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_2 = Tuple5.create((Integer) null, tuple5_0, tuple5_0, tuple5_0, tuple5_0);
      boolean boolean0 = tuple5_1.equals(tuple5_2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer(31);
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_0 = Tuple5.create(integer0, integer0, integer0, integer0, integer0);
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_1 = Tuple5.create(integer0, tuple5_0, integer0, integer0, tuple5_0);
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_2 = Tuple5.create(integer0, tuple5_0, integer0, integer0, tuple5_0);
      boolean boolean0 = tuple5_1.equals(tuple5_2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = new Integer(2);
      Tuple5<Integer, Integer, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_0 = Tuple5.create(integer0, integer0, integer0, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      boolean boolean0 = tuple5_0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Integer integer0 = new Integer((-363));
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_0 = Tuple5.create((Integer) null, integer0, integer0, integer0, integer0);
      boolean boolean0 = tuple5_0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = new Integer(31);
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_0 = Tuple5.create(integer0, integer0, integer0, integer0, integer0);
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_1 = Tuple5.create(integer0, tuple5_0, integer0, integer0, tuple5_0);
      boolean boolean0 = tuple5_1.equals(tuple5_1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Integer integer0 = new Integer((-133));
      Tuple5<Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_0 = Tuple5.create((Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      Tuple5<Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_1 = Tuple5.create((Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      boolean boolean0 = tuple5_1.equals(tuple5_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Integer integer0 = new Integer((-363));
      Tuple5<Integer, Integer, Integer, Integer, Integer> tuple5_0 = Tuple5.create((Integer) null, integer0, integer0, integer0, integer0);
      tuple5_0.hashCode();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Integer integer0 = new Integer(3544);
      Tuple5<Integer, Tuple5<Integer, Integer, Integer, Integer, Integer>, Integer, Integer, Integer> tuple5_0 = Tuple5.create(integer0, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, integer0, integer0, integer0);
      tuple5_0.hashCode();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Tuple5<Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_0 = Tuple5.create((Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      tuple5_0.hashCode();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Tuple5<Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>, Tuple5<Integer, Integer, Integer, Integer, Integer>> tuple5_0 = Tuple5.create((Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null, (Tuple5<Integer, Integer, Integer, Integer, Integer>) null);
      String string0 = tuple5_0.toString();
      assertEquals("(null, null, null, null, null)", string0);
  }
}
