/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 14:37:48 GMT 2022
 */

package com.github.edgar615.util.interceptor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.edgar615.util.interceptor.Interceptor;
import com.github.edgar615.util.interceptor.ObjectInterceptedJdkProxy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ObjectInterceptedJdkProxy_ESTest extends ObjectInterceptedJdkProxy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        ObjectInterceptedJdkProxy.create((Object) null, (Interceptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.reflect.ReflectUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      Interceptor interceptor0 = mock(Interceptor.class, new ViolatedAssumptionAnswer());
      Object object1 = ObjectInterceptedJdkProxy.create(object0, interceptor0);
      assertSame(object0, object1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Interceptor interceptor0 = mock(Interceptor.class, new ViolatedAssumptionAnswer());
      Object object0 = ObjectInterceptedJdkProxy.create(interceptor0, interceptor0);
      assertNotNull(object0);
  }
}
