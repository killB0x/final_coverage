/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 14:55:47 GMT 2022
 */

package com.github.edgar615.util.base;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.edgar615.util.base.EncryptUtils;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EncryptUtils_ESTest extends EncryptUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = EncryptUtils.encryptHmacMd5("", ",&@C; ]^vIjzGsdP");
      assertEquals("FE383F739EC1E2B11A38D81DA707BC2A", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = EncryptUtils.encryptHmacSha512("", "3PjlJTH2");
      assertEquals("E6F89C5B500C533C058986D16950C81613D2581492421EF9976E129FD44D697CC4BDD1E5CE0E4571BC5556AD3CBB445090FAEC35F0C145F5F24FB746943779F2", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = EncryptUtils.encryptHmacSha256("W0De|L(lH", "0C9B1EC62218389ADD5F0729470C72F1E49EB088");
      assertEquals("4832CE6652D550B88A2E7FD51422E2CB79C564F720B1E2E682A72EC835EEF2C8", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = EncryptUtils.encryptHMAC("", "HMACSHA256", "HMACSHA256");
      assertEquals(32, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      String string0 = EncryptUtils.byte2hex(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncryptUtils.hex2byte("gzYm5=bJFTv");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"g\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncryptUtils.hex2byte((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.base.EncryptUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncryptUtils.encryptMD5((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.base.EncryptUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncryptUtils.encryptHmacSha512((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.base.EncryptUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncryptUtils.encryptHmacSha512("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty key
         //
         verifyException("javax.crypto.spec.SecretKeySpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncryptUtils.encryptHmacSha256((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.base.EncryptUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncryptUtils.encryptHmacSha256("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty key
         //
         verifyException("javax.crypto.spec.SecretKeySpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncryptUtils.encryptHmacSha1((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.base.EncryptUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncryptUtils.encryptHmacSha1("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty key
         //
         verifyException("javax.crypto.spec.SecretKeySpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncryptUtils.encryptHmacMd5((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.base.EncryptUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncryptUtils.encryptHmacMd5("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty key
         //
         verifyException("javax.crypto.spec.SecretKeySpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncryptUtils.encryptHMAC((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.base.EncryptUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncryptUtils.encryptHMAC("", "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty key
         //
         verifyException("javax.crypto.spec.SecretKeySpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        EncryptUtils.byte2hex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.base.EncryptUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-85);
      String string0 = EncryptUtils.byte2hex(byteArray0);
      assertEquals("AB00000000", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      try { 
        EncryptUtils.encryptHMAC("l[\"l5!{]18]", "l[\"l5!{]18]", "l[\"l5!{]18]");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // java.security.NoSuchAlgorithmException: Algorithm l[\"l5!{]18] not available
         //
         verifyException("com.github.edgar615.util.base.EncryptUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = EncryptUtils.hex2byte("F76A772E47EE83131912D7304CBF8117AAB6814D68A82B2B1779888A6D3F6B9F4DC503ECADFEABDA5F82B71C65FC4C55FEB814ECBA46BAFACB855B5F6A3B5E6D");
      assertEquals(64, byteArray0.length);
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = EncryptUtils.hex2byte("");
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = EncryptUtils.hex2byte("]");
      assertEquals(0, byteArray0.length);
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = EncryptUtils.encryptHmacSha1("9rS", "]");
      assertEquals("90C848E485CF428C7A71AA2845EB5265F47B8DDC", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = EncryptUtils.encryptMD5("00");
      assertNotNull(string0);
      assertEquals("B4B147BC522828731F1A016BFA72C073", string0);
  }
}
