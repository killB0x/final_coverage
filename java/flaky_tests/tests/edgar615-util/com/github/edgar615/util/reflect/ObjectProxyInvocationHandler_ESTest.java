/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 15:29:15 GMT 2022
 */

package com.github.edgar615.util.reflect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.edgar615.util.reflect.ObjectProxyInvocationHandler;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ObjectProxyInvocationHandler_ESTest extends ObjectProxyInvocationHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ObjectProxyInvocationHandler objectProxyInvocationHandler0 = ObjectProxyInvocationHandler.create((Integer) null);
      Object object0 = objectProxyInvocationHandler0.getProxiedObject();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        ObjectProxyInvocationHandler.createProxy(class0, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.lang.Object is not an interface
         //
         verifyException("java.lang.reflect.Proxy$ProxyBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ObjectProxyInvocationHandler objectProxyInvocationHandler0 = ObjectProxyInvocationHandler.create((Object) class0);
      Class class1 = (Class)objectProxyInvocationHandler0.getProxiedObject();
      assertFalse(class1.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ObjectProxyInvocationHandler objectProxyInvocationHandler0 = ObjectProxyInvocationHandler.create((Integer) null);
      try { 
        objectProxyInvocationHandler0.invoke((Object) null, (Method) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.reflect.ObjectProxyInvocationHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        ObjectProxyInvocationHandler.createProxy((Class<Object>) null, (Object) class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.reflect.ObjectProxyInvocationHandler", e);
      }
  }
}
