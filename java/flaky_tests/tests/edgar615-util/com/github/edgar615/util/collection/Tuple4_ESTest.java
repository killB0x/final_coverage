/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 14:18:28 GMT 2022
 */

package com.github.edgar615.util.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.edgar615.util.collection.Tuple4;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Tuple4_ESTest extends Tuple4_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Tuple4<Integer, Integer, Tuple4<Integer, Integer, Integer, Integer>, Tuple4<Integer, Integer, Integer, Integer>> tuple4_0 = Tuple4.create(integer0, integer0, (Tuple4<Integer, Integer, Integer, Integer>) null, (Tuple4<Integer, Integer, Integer, Integer>) null);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_1 = tuple4_0.getT4();
      Tuple4<Tuple4<Integer, Integer, Integer, Integer>, Tuple4<Integer, Integer, Integer, Integer>, Tuple4<Integer, Integer, Integer, Integer>, Integer> tuple4_2 = Tuple4.create(tuple4_1, (Tuple4<Integer, Integer, Integer, Integer>) null, (Tuple4<Integer, Integer, Integer, Integer>) null, integer0);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_3 = tuple4_2.getT3();
      assertNull(tuple4_3);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, integer0, integer0);
      Tuple4<Tuple4<Integer, Integer, Integer, Integer>, Tuple4<Integer, Integer, Integer, Integer>, Tuple4<Integer, Integer, Integer, Integer>, Integer> tuple4_1 = Tuple4.create(tuple4_0, tuple4_0, tuple4_0, integer0);
      Object object0 = tuple4_1.getT3();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Tuple4<Tuple4<Integer, Integer, Integer, Integer>, Tuple4<Integer, Integer, Integer, Integer>, Integer, Integer> tuple4_0 = Tuple4.create((Tuple4<Integer, Integer, Integer, Integer>) null, (Tuple4<Integer, Integer, Integer, Integer>) null, integer0, integer0);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_1 = tuple4_0.getT2();
      assertNull(tuple4_1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, integer0, integer0);
      Tuple4<Integer, Tuple4<Integer, Integer, Integer, Integer>, Integer, Integer> tuple4_1 = Tuple4.create(integer0, tuple4_0, integer0, integer0);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_2 = tuple4_1.getT2();
      assertSame(tuple4_0, tuple4_2);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create((Integer) null, (Integer) null, (Integer) null, (Integer) null);
      Integer integer0 = tuple4_0.getT1();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer((-2007));
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, integer0, integer0);
      Tuple4<Tuple4<Integer, Integer, Integer, Integer>, Integer, Integer, Integer> tuple4_1 = Tuple4.create(tuple4_0, integer0, integer0, integer0);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_2 = tuple4_1.getT1();
      assertSame(tuple4_2, tuple4_0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, integer0, integer0);
      Tuple4<Integer, Tuple4<Integer, Integer, Integer, Integer>, Tuple4<Integer, Integer, Integer, Integer>, Tuple4<Integer, Integer, Integer, Integer>> tuple4_1 = Tuple4.create(integer0, tuple4_0, tuple4_0, tuple4_0);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_2 = tuple4_1.getT4();
      assertSame(tuple4_0, tuple4_2);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, integer0, integer0);
      Tuple4<Integer, Integer, Integer, Tuple4<Integer, Integer, Integer, Integer>> tuple4_1 = Tuple4.create(integer0, integer0, integer0, tuple4_0);
      boolean boolean0 = tuple4_1.equals(tuple4_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(6);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, integer0, integer0);
      Tuple4<Integer, Integer, Integer, Tuple4<Integer, Integer, Integer, Integer>> tuple4_1 = Tuple4.create(integer0, integer0, (Integer) null, tuple4_0);
      Tuple4<Integer, Integer, Integer, Tuple4<Integer, Integer, Integer, Integer>> tuple4_2 = Tuple4.create(integer0, integer0, (Integer) null, tuple4_0);
      boolean boolean0 = tuple4_2.equals(tuple4_1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, integer0, integer0);
      Tuple4<Integer, Integer, Integer, Tuple4<Integer, Integer, Integer, Integer>> tuple4_1 = Tuple4.create(integer0, integer0, (Integer) null, tuple4_0);
      boolean boolean0 = tuple4_1.equals(tuple4_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer((-1007));
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, integer0, integer0);
      Tuple4<Integer, Integer, Tuple4<Integer, Integer, Integer, Integer>, Tuple4<Integer, Integer, Integer, Integer>> tuple4_1 = Tuple4.create(integer0, integer0, tuple4_0, tuple4_0);
      boolean boolean0 = tuple4_1.equals(tuple4_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer((-32));
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, integer0, integer0);
      Tuple4<Integer, Integer, Integer, Tuple4<Integer, Integer, Integer, Integer>> tuple4_1 = Tuple4.create(integer0, (Integer) null, integer0, tuple4_0);
      boolean boolean0 = tuple4_1.equals(tuple4_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer((-3301));
      Tuple4<Integer, Integer, Integer, Tuple4<Integer, Integer, Integer, Integer>> tuple4_0 = Tuple4.create(integer0, (Integer) null, (Integer) null, (Tuple4<Integer, Integer, Integer, Integer>) null);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_1 = Tuple4.create(integer0, (Integer) null, (Integer) null, integer0);
      boolean boolean0 = tuple4_0.equals(tuple4_1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, integer0, integer0);
      Tuple4<Tuple4<Integer, Integer, Integer, Integer>, Integer, Integer, Integer> tuple4_1 = Tuple4.create(tuple4_0, integer0, integer0, integer0);
      Tuple4<Integer, Tuple4<Integer, Integer, Integer, Integer>, Integer, Tuple4<Integer, Integer, Integer, Integer>> tuple4_2 = Tuple4.create((Integer) null, tuple4_0, integer0, tuple4_0);
      boolean boolean0 = tuple4_2.equals(tuple4_1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, integer0, integer0);
      Tuple4<Integer, Integer, Integer, Tuple4<Integer, Integer, Integer, Integer>> tuple4_1 = Tuple4.create(integer0, integer0, integer0, tuple4_0);
      Tuple4<Tuple4<Integer, Integer, Integer, Integer>, Integer, Tuple4<Integer, Integer, Integer, Integer>, Integer> tuple4_2 = Tuple4.create(tuple4_0, integer0, tuple4_0, integer0);
      boolean boolean0 = tuple4_1.equals(tuple4_2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, (Integer) null, integer0);
      Tuple4<Integer, Integer, Integer, Tuple4<Integer, Integer, Integer, Integer>> tuple4_1 = Tuple4.create((Integer) null, integer0, (Integer) null, tuple4_0);
      Tuple4<Integer, Integer, Integer, Tuple4<Integer, Integer, Integer, Integer>> tuple4_2 = Tuple4.create((Integer) null, (Integer) null, integer0, tuple4_0);
      boolean boolean0 = tuple4_1.equals(tuple4_2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer((-3294));
      Tuple4<Integer, Integer, Integer, Tuple4<Integer, Integer, Integer, Integer>> tuple4_0 = Tuple4.create(integer0, integer0, integer0, (Tuple4<Integer, Integer, Integer, Integer>) null);
      Tuple4<Integer, Integer, Integer, Tuple4<Integer, Integer, Integer, Integer>> tuple4_1 = Tuple4.create(integer0, integer0, integer0, (Tuple4<Integer, Integer, Integer, Integer>) null);
      boolean boolean0 = tuple4_0.equals(tuple4_1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, integer0, integer0);
      boolean boolean0 = tuple4_0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer integer0 = new Integer(6);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, integer0, integer0);
      Tuple4<Integer, Integer, Integer, Tuple4<Integer, Integer, Integer, Integer>> tuple4_1 = Tuple4.create(integer0, integer0, (Integer) null, tuple4_0);
      boolean boolean0 = tuple4_1.equals(tuple4_1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, integer0, integer0);
      boolean boolean0 = tuple4_0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create((Integer) null, (Integer) null, (Integer) null, (Integer) null);
      tuple4_0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create(integer0, integer0, integer0, integer0);
      Tuple4<Tuple4<Integer, Integer, Integer, Integer>, Tuple4<Integer, Integer, Integer, Integer>, Tuple4<Integer, Integer, Integer, Integer>, Integer> tuple4_1 = Tuple4.create(tuple4_0, tuple4_0, tuple4_0, integer0);
      tuple4_1.hashCode();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tuple4<Integer, Integer, Integer, Integer> tuple4_0 = Tuple4.create((Integer) null, (Integer) null, (Integer) null, (Integer) null);
      String string0 = tuple4_0.toString();
      assertEquals("(null, null, null, null)", string0);
  }
}
