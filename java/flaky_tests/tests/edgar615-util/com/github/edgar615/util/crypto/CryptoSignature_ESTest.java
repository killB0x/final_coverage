/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 15:19:04 GMT 2022
 */

package com.github.edgar615.util.crypto;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.edgar615.util.crypto.CryptoSignature;
import java.security.PrivateKey;
import java.security.cert.X509Certificate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CryptoSignature_ESTest extends CryptoSignature_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      X509Certificate x509Certificate0 = mock(X509Certificate.class, new ViolatedAssumptionAnswer());
      doReturn("").when(x509Certificate0).getSigAlgName();
      PrivateKey privateKey0 = mock(PrivateKey.class, new ViolatedAssumptionAnswer());
      CryptoSignature cryptoSignature0 = null;
      try {
        cryptoSignature0 = new CryptoSignature("", x509Certificate0, privateKey0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.security.NoSuchAlgorithmException:  Signature not available
         //
         verifyException("com.github.edgar615.util.crypto.CryptoSignature", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CryptoSignature cryptoSignature0 = null;
      try {
        cryptoSignature0 = new CryptoSignature("9Jy816qXX*Tb+tw?", (X509Certificate) null, (PrivateKey) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.crypto.CryptoSignature", e);
      }
  }
}
