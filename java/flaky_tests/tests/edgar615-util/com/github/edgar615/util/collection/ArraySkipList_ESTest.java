/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 13:53:56 GMT 2022
 */

package com.github.edgar615.util.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.edgar615.util.collection.ArraySkipList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ArraySkipList_ESTest extends ArraySkipList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>(1912);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(2338);
      arraySkipList0.add(integer0, integer1);
      arraySkipList0.findRange(integer0, integer1);
      assertEquals(1L, arraySkipList0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>(1912);
      Integer integer0 = new Integer(0);
      Integer integer1 = arraySkipList0.add(integer0, integer0);
      arraySkipList0.add(integer0, integer0);
      // Undeclared exception!
      try { 
        arraySkipList0.findRange(integer1, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>();
      Integer integer0 = new Integer(1);
      arraySkipList0.add(integer0, integer0);
      Integer integer1 = new Integer(696);
      arraySkipList0.add(integer1, integer1);
      Integer integer2 = arraySkipList0.get(integer1);
      assertFalse(integer2.equals((Object)integer0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>(2);
      Integer integer0 = new Integer(2);
      Integer integer1 = arraySkipList0.add(integer0, integer0);
      Integer integer2 = arraySkipList0.add(integer0, integer0);
      arraySkipList0.add(integer0, integer0);
      // Undeclared exception!
      try { 
        arraySkipList0.add(integer1, integer2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>(1912);
      Integer integer0 = new Integer(0);
      arraySkipList0.add(integer0, integer0);
      long long0 = arraySkipList0.size();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>();
      arraySkipList0.add((Integer) null, (Integer) null);
      // Undeclared exception!
      try { 
        arraySkipList0.remove((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.collection.ArraySkipList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>(0);
      // Undeclared exception!
      try { 
        arraySkipList0.remove((Integer) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.github.edgar615.util.collection.ArraySkipList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>(4283);
      arraySkipList0.printAll();
      arraySkipList0.printAll();
      // Undeclared exception!
      arraySkipList0.printAll();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>(0);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        arraySkipList0.get(integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.github.edgar615.util.collection.ArraySkipList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>(0);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        arraySkipList0.findRange(integer0, integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.github.edgar615.util.collection.ArraySkipList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>(3474);
      Integer integer0 = new Integer(3474);
      Integer integer1 = arraySkipList0.add(integer0, integer0);
      arraySkipList0.add(integer0, integer1);
      Integer integer2 = arraySkipList0.add(integer0, integer0);
      // Undeclared exception!
      arraySkipList0.add(integer2, (Integer) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>(0);
      // Undeclared exception!
      try { 
        arraySkipList0.add((Integer) null, (Integer) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.github.edgar615.util.collection.ArraySkipList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = null;
      try {
        arraySkipList0 = new ArraySkipList<Integer, Integer>((-650));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -650
         //
         verifyException("com.github.edgar615.util.collection.ArraySkipList$Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>();
      Integer integer0 = new Integer(1982);
      arraySkipList0.add(integer0, integer0);
      arraySkipList0.findRange(integer0, integer0);
      assertEquals(1L, arraySkipList0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>();
      Integer integer0 = new Integer(956);
      arraySkipList0.add(integer0, integer0);
      Integer integer1 = new Integer(0);
      arraySkipList0.findRange(integer1, integer1);
      assertEquals(1L, arraySkipList0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>();
      Integer integer0 = new Integer((-1));
      arraySkipList0.add(integer0, integer0);
      Integer integer1 = new Integer(1880);
      arraySkipList0.findRange(integer1, integer0);
      assertEquals(1L, arraySkipList0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>();
      Integer integer0 = new Integer(2625);
      arraySkipList0.add(integer0, integer0);
      Integer integer1 = arraySkipList0.add(integer0, integer0);
      arraySkipList0.add(integer0, integer1);
      Integer integer2 = new Integer(1552);
      arraySkipList0.remove(integer2);
      assertEquals(1L, arraySkipList0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>();
      Integer integer0 = new Integer(1);
      arraySkipList0.add(integer0, integer0);
      Integer integer1 = new Integer(696);
      arraySkipList0.add(integer1, integer1);
      arraySkipList0.remove(integer0);
      assertEquals(1L, arraySkipList0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>();
      Integer integer0 = new Integer(4);
      Integer integer1 = arraySkipList0.add(integer0, integer0);
      Integer integer2 = new Integer((-65));
      arraySkipList0.add(integer2, integer1);
      arraySkipList0.remove(integer0);
      assertEquals(1L, arraySkipList0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>();
      Integer integer0 = new Integer((-1478));
      arraySkipList0.add(integer0, integer0);
      Integer integer1 = new Integer((-594));
      arraySkipList0.remove(integer1);
      assertEquals(1L, arraySkipList0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>();
      Integer integer0 = new Integer(1552);
      arraySkipList0.add(integer0, integer0);
      Integer integer1 = new Integer((-384));
      arraySkipList0.get(integer1);
      assertEquals(1L, arraySkipList0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>();
      Integer integer0 = new Integer((-774));
      arraySkipList0.add(integer0, integer0);
      Integer integer1 = new Integer(15);
      arraySkipList0.get(integer1);
      assertEquals(1L, arraySkipList0.size());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>();
      arraySkipList0.add((Integer) null, (Integer) null);
      // Undeclared exception!
      try { 
        arraySkipList0.get((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.collection.ArraySkipList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>();
      Integer integer0 = new Integer(7);
      arraySkipList0.add(integer0, integer0);
      Integer integer1 = new Integer(696);
      arraySkipList0.add(integer1, integer1);
      arraySkipList0.printAll();
      assertEquals(2L, arraySkipList0.size());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ArraySkipList<Integer, Integer> arraySkipList0 = new ArraySkipList<Integer, Integer>();
      long long0 = arraySkipList0.size();
      assertEquals(0L, long0);
  }
}
