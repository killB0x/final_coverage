/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 14:47:24 GMT 2022
 */

package com.github.edgar615.util.reflect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.edgar615.util.reflect.ObjectProxyBuilder;
import com.github.edgar615.util.reflect.ObjectProxyInvocationHandler;
import java.lang.reflect.Array;
import java.lang.reflect.InvocationHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ObjectProxyBuilder_ESTest extends ObjectProxyBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      ObjectProxyInvocationHandler objectProxyInvocationHandler0 = ObjectProxyInvocationHandler.create(class0);
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 1);
      classArray0[0] = class0;
      // Undeclared exception!
      try { 
        ObjectProxyBuilder.createProxy((InvocationHandler) objectProxyInvocationHandler0, (Class<?>[]) classArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // class java.lang.Class does not extend class java.lang.Integer
         //
         verifyException("com.github.edgar615.util.reflect.ObjectProxyBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ObjectProxyInvocationHandler objectProxyInvocationHandler0 = ObjectProxyInvocationHandler.create(class0);
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 1);
      classArray0[0] = class0;
      // Undeclared exception!
      try { 
        ObjectProxyBuilder.createProxy((InvocationHandler) objectProxyInvocationHandler0, (Class<?>[]) classArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.lang.Object referenced from a method is not visible from class loader
         //
         verifyException("java.lang.reflect.Proxy$ProxyBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ObjectProxyInvocationHandler objectProxyInvocationHandler0 = ObjectProxyInvocationHandler.create(class0);
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 1);
      // Undeclared exception!
      try { 
        ObjectProxyBuilder.createProxy((InvocationHandler) objectProxyInvocationHandler0, (Class<?>[]) classArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.reflect.ReflectUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ObjectProxyInvocationHandler objectProxyInvocationHandler0 = ObjectProxyInvocationHandler.create(class0);
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 0);
      // Undeclared exception!
      try { 
        ObjectProxyBuilder.createProxy((InvocationHandler) objectProxyInvocationHandler0, (Class<?>[]) classArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 0);
      // Undeclared exception!
      try { 
        ObjectProxyBuilder.createProxy((InvocationHandler) null, classArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<Object> class0 = Object.class;
      ObjectProxyInvocationHandler objectProxyInvocationHandler0 = ObjectProxyInvocationHandler.create(class0);
      // Undeclared exception!
      try { 
        ObjectProxyBuilder.createProxy((InvocationHandler) objectProxyInvocationHandler0, class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.lang.Object is not an interface
         //
         verifyException("java.lang.reflect.Proxy$ProxyBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        ObjectProxyBuilder.createProxy((InvocationHandler) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ObjectProxyBuilder objectProxyBuilder0 = new ObjectProxyBuilder();
      ObjectProxyInvocationHandler objectProxyInvocationHandler0 = ObjectProxyInvocationHandler.create((Object) objectProxyBuilder0);
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        ObjectProxyBuilder.createProxy((InvocationHandler) objectProxyInvocationHandler0, class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // class com.github.edgar615.util.reflect.ObjectProxyBuilder does not extend class java.lang.Integer
         //
         verifyException("com.github.edgar615.util.reflect.ObjectProxyBuilder", e);
      }
  }
}
