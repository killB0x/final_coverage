/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 15:29:54 GMT 2022
 */

package com.github.edgar615.util.reflect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.edgar615.util.reflect.MyClassloader;
import java.net.URL;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MyClassloader_ESTest extends MyClassloader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MyClassloader myClassloader0 = new MyClassloader();
      try { 
        myClassloader0.loadClass((String) null);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.reflect.MyClassloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MyClassloader myClassloader0 = new MyClassloader();
      URL uRL0 = myClassloader0.getResource("");
      assertNull(uRL0);
  }
}
