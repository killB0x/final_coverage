/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 15:08:13 GMT 2022
 */

package com.github.edgar615.util.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.edgar615.util.exception.ExceptionUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExceptionUtils_ESTest extends ExceptionUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Exception> class0 = Exception.class;
      // Undeclared exception!
      try { 
        ExceptionUtils.wrap((Exception) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.edgar615.util.exception.ExceptionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockException mockException0 = new MockException();
      Class<Exception> class0 = Exception.class;
      Exception exception0 = ExceptionUtils.wrap((Exception) mockException0, class0);
      assertSame(exception0, mockException0);
  }
}
