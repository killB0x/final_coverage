/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 10:42:10 GMT 2022
 */

package com.etsy.statsd.profiler.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.etsy.statsd.profiler.util.TimeUtil;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TimeUtil_ESTest extends TimeUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      TimeUnit timeUnit1 = TimeUnit.MILLISECONDS;
      long long0 = TimeUtil.convertReportingPeriod(0L, timeUnit0, (-1L), timeUnit1);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      TimeUnit timeUnit1 = TimeUnit.MILLISECONDS;
      long long0 = TimeUtil.convertReportingPeriod((-1622L), timeUnit0, (-3804L), timeUnit1);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      long long0 = TimeUtil.convertReportingPeriod((-1625L), timeUnit0, 2289L, timeUnit0);
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.HOURS;
      // Undeclared exception!
      try { 
        TimeUtil.convertReportingPeriod((-1625L), timeUnit0, (-1625L), (TimeUnit) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      TimeUnit timeUnit1 = TimeUnit.HOURS;
      long long0 = TimeUtil.convertReportingPeriod((-2650L), timeUnit0, (-1L), timeUnit1);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      // Undeclared exception!
      try { 
        TimeUtil.convertReportingPeriod(0L, timeUnit0, 1638L, timeUnit0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.etsy.statsd.profiler.util.TimeUtil", e);
      }
  }
}
