/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 10:32:14 GMT 2022
 */

package com.etsy.statsd.profiler.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.etsy.statsd.profiler.util.MapUtil;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MapUtil_ESTest extends MapUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, Number> hashMap0 = new HashMap<String, Number>();
      Byte byte0 = Byte.decode("0");
      // Undeclared exception!
      try { 
        MapUtil.setOrIncrementMap(hashMap0, "0", byte0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected Number type: Byte
         //
         verifyException("com.etsy.statsd.profiler.util.MapUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<String, Number> hashMap0 = new HashMap<String, Number>();
      Float float0 = Float.valueOf(0.0F);
      hashMap0.put("zEn0Rwj`", float0);
      // Undeclared exception!
      try { 
        MapUtil.setOrIncrementMap(hashMap0, "zEn0Rwj`", (Number) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected Number type: Float
         //
         verifyException("com.etsy.statsd.profiler.util.MapUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<String, Number> hashMap0 = new HashMap<String, Number>();
      HashMap<String, Integer> hashMap1 = new HashMap<String, Integer>();
      Integer integer0 = new Integer(2317);
      hashMap1.put("=IN$D+_yc4#[", integer0);
      hashMap0.putAll(hashMap1);
      Short short0 = Short.valueOf((short)1);
      MapUtil.setOrIncrementMap(hashMap0, "=IN$D+_yc4#[", short0);
      assertEquals(1, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<String, Number> hashMap0 = new HashMap<String, Number>();
      Integer integer0 = new Integer((-1));
      MapUtil.setOrIncrementMap(hashMap0, "2vv9N]5", integer0);
      assertEquals(1, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HashMap<String, Number> hashMap0 = new HashMap<String, Number>();
      // Undeclared exception!
      try { 
        MapUtil.setOrIncrementMap(hashMap0, (String) null, (Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.etsy.statsd.profiler.util.MapUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashMap<String, Number> hashMap0 = new HashMap<String, Number>();
      Long long0 = Long.valueOf(0L);
      MapUtil.setOrIncrementMap(hashMap0, "c:5XBsx#@Y+M", long0);
      MapUtil.setOrIncrementMap(hashMap0, "c:5XBsx#@Y+M", long0);
      assertEquals(1, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashMap<String, Number> hashMap0 = new HashMap<String, Number>();
      Double double0 = Double.valueOf(2740.895533214114);
      MapUtil.setOrIncrementMap(hashMap0, "c:5XBsx#@Y+M", double0);
      MapUtil.setOrIncrementMap(hashMap0, "c:5XBsx#@Y+M", double0);
      assertFalse(hashMap0.isEmpty());
  }
}
