/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 15:39:09 GMT 2022
 */

package spark.route;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import spark.route.HttpMethod;
import spark.route.RouteMatch;
import spark.route.SimpleRouteMatcher;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleRouteMatcher_ESTest extends SimpleRouteMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleRouteMatcher simpleRouteMatcher0 = new SimpleRouteMatcher();
      simpleRouteMatcher0.parseValidateAddRoute("_Boboz'm=9 X{%[C+", "^?Z<{8r.[ajo^OtB", (Object) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpleRouteMatcher simpleRouteMatcher0 = new SimpleRouteMatcher();
      simpleRouteMatcher0.parseValidateAddRoute("?;.f7WHiku=?-", "y;jT0 ,#/yE$c", "y;jT0 ,#/yE$c");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SimpleRouteMatcher simpleRouteMatcher0 = new SimpleRouteMatcher();
      HttpMethod httpMethod0 = HttpMethod.post;
      RouteMatch routeMatch0 = simpleRouteMatcher0.findTargetForRequestedRoute(httpMethod0, "lC2^BG", "HD/");
      assertNull(routeMatch0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SimpleRouteMatcher simpleRouteMatcher0 = new SimpleRouteMatcher();
      HttpMethod httpMethod0 = HttpMethod.post;
      List<RouteMatch> list0 = simpleRouteMatcher0.findTargetsForRequestedRoute(httpMethod0, "lC2^BG", "");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SimpleRouteMatcher simpleRouteMatcher0 = new SimpleRouteMatcher();
      HttpMethod httpMethod0 = HttpMethod.options;
      RouteMatch routeMatch0 = simpleRouteMatcher0.findTargetForRequestedRoute(httpMethod0, (String) null, (String) null);
      assertNull(routeMatch0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SimpleRouteMatcher simpleRouteMatcher0 = new SimpleRouteMatcher();
      simpleRouteMatcher0.clearRoutes();
  }
}
