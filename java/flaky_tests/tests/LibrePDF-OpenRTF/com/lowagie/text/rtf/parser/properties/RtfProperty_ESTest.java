/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 09 07:13:07 GMT 2022
 */

package com.lowagie.text.rtf.parser.properties;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.rtf.parser.ctrlwords.RtfCtrlWordData;
import com.lowagie.text.rtf.parser.properties.RtfProperty;
import com.lowagie.text.rtf.parser.properties.RtfPropertyListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RtfProperty_ESTest extends RtfProperty_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setToDefault();
      RtfCtrlWordData rtfCtrlWordData0 = new RtfCtrlWordData();
      rtfCtrlWordData0.specialHandler = "document.marginLeftTwips";
      rtfProperty0.toggleProperty(rtfCtrlWordData0);
      rtfProperty0.toggleProperty(rtfCtrlWordData0);
      rtfProperty0.setToDefault();
      assertTrue(rtfProperty0.isModifiedSection());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      RtfPropertyListener rtfPropertyListener0 = mock(RtfPropertyListener.class, new ViolatedAssumptionAnswer());
      rtfProperty0.addRtfPropertyListener(rtfPropertyListener0);
      rtfProperty0.setToDefault("color.");
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      RtfPropertyListener rtfPropertyListener0 = mock(RtfPropertyListener.class, new ViolatedAssumptionAnswer());
      rtfProperty0.addRtfPropertyListener(rtfPropertyListener0);
      rtfProperty0.afterChange("character.bold");
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setToDefault();
      boolean boolean0 = rtfProperty0.isModifiedSection();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setToDefault();
      boolean boolean0 = rtfProperty0.isModifiedParagraph();
      assertTrue(rtfProperty0.isModifiedDocument());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setToDefault();
      boolean boolean0 = rtfProperty0.isModifiedDocument();
      assertTrue(rtfProperty0.isModifiedParagraph());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setToDefault();
      boolean boolean0 = rtfProperty0.isModifiedCharacter();
      assertTrue(rtfProperty0.isModified());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      RtfCtrlWordData rtfCtrlWordData0 = new RtfCtrlWordData();
      rtfProperty0.setProperty(rtfCtrlWordData0);
      Object object0 = rtfProperty0.getProperty("");
      assertNotNull(object0);
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      // Undeclared exception!
      try { 
        rtfProperty0.toggleProperty((RtfCtrlWordData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lowagie.text.rtf.parser.properties.RtfProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.addRtfPropertyListener((RtfPropertyListener) null);
      // Undeclared exception!
      try { 
        rtfProperty0.setToDefault("character.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lowagie.text.rtf.parser.properties.RtfProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.addRtfPropertyListener((RtfPropertyListener) null);
      // Undeclared exception!
      try { 
        rtfProperty0.setToDefault();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lowagie.text.rtf.parser.properties.RtfProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      // Undeclared exception!
      try { 
        rtfProperty0.setModified((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setToDefault();
      // Undeclared exception!
      try { 
        rtfProperty0.getProperties((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.afterChange("document.marginTopTwips");
      assertFalse(rtfProperty0.isModifiedSection());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.afterChange("section.document.marginRightTwips");
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.afterChange("paragraph.indentLeft");
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.afterChange("{M_gl");
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      // Undeclared exception!
      try { 
        rtfProperty0.afterChange((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.beforeChange("F{l&#");
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.beforeChange("document.pageNumberStart");
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.beforeChange("paragraph.indentRight");
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.beforeChange("character.style");
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.beforeChange("section.pageNumberPositionX");
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      // Undeclared exception!
      try { 
        rtfProperty0.beforeChange((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setModified("document.document.pageOrientation", false);
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setModified("section.numberOfColumns", false);
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setModified("paragraph.", false);
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      assertFalse(rtfProperty0.isModifiedCharacter());
      
      rtfProperty0.setModified("character.document.pageNumberStart", true);
      assertTrue(rtfProperty0.isModifiedCharacter());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setModified("{M_gl", true);
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setToDefault("document.");
      assertTrue(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setToDefault("section.");
      assertTrue(rtfProperty0.isModifiedSection());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setToDefault("paragraph.");
      assertTrue(rtfProperty0.isModifiedParagraph());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.getProperty("tbllkhdrrows");
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      assertFalse(rtfProperty0.isModified());
      
      rtfProperty0.setModifiedCharacter(true);
      assertTrue(rtfProperty0.isModifiedCharacter());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      assertFalse(rtfProperty0.isModifiedDocument());
      
      rtfProperty0.setModifiedDocument(true);
      boolean boolean0 = rtfProperty0.isModified();
      assertTrue(rtfProperty0.isModifiedDocument());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      assertFalse(rtfProperty0.isModifiedSection());
      
      rtfProperty0.setModifiedSection(true);
      boolean boolean0 = rtfProperty0.isModified();
      assertTrue(rtfProperty0.isModifiedSection());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      assertFalse(rtfProperty0.isModified());
      
      rtfProperty0.setModifiedParagraph(true);
      boolean boolean0 = rtfProperty0.isModified();
      assertTrue(rtfProperty0.isModifiedParagraph());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      boolean boolean0 = rtfProperty0.isModified();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setToDefault();
      rtfProperty0.isModified();
      assertTrue(rtfProperty0.isModifiedCharacter());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.getProperties("section.pageNumberPositionX");
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setToDefault();
      rtfProperty0.getProperties("document.enableFacingPages");
      assertTrue(rtfProperty0.isModifiedSection());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      RtfCtrlWordData rtfCtrlWordData0 = new RtfCtrlWordData();
      rtfCtrlWordData0.specialHandler = "paragraph.indentLeft";
      rtfProperty0.toggleProperty(rtfCtrlWordData0);
      rtfProperty0.setToDefault();
      assertTrue(rtfProperty0.isModifiedParagraph());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setToDefault();
      RtfCtrlWordData rtfCtrlWordData0 = new RtfCtrlWordData();
      rtfCtrlWordData0.specialHandler = "document.marginBottomTwips";
      boolean boolean0 = rtfProperty0.setProperty(rtfCtrlWordData0);
      assertTrue(rtfProperty0.isModifiedDocument());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      RtfCtrlWordData rtfCtrlWordData0 = new RtfCtrlWordData();
      rtfCtrlWordData0.specialHandler = null;
      boolean boolean0 = rtfProperty0.setProperty(rtfCtrlWordData0);
      assertTrue(boolean0);
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setToDefault();
      RtfCtrlWordData rtfCtrlWordData0 = new RtfCtrlWordData();
      rtfCtrlWordData0.specialHandler = "paragraph.indentFirstLine";
      boolean boolean0 = rtfProperty0.toggleProperty(rtfCtrlWordData0);
      assertTrue(rtfProperty0.isModifiedParagraph());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      assertFalse(rtfProperty0.isModifiedDocument());
      
      RtfCtrlWordData rtfCtrlWordData0 = new RtfCtrlWordData();
      rtfCtrlWordData0.specialHandler = "document.marginBottomTwips";
      rtfProperty0.setProperty(rtfCtrlWordData0);
      rtfProperty0.toggleProperty(rtfCtrlWordData0);
      assertTrue(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      RtfCtrlWordData rtfCtrlWordData0 = new RtfCtrlWordData();
      boolean boolean0 = rtfProperty0.toggleProperty(rtfCtrlWordData0);
      assertFalse(rtfProperty0.isModified());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      RtfCtrlWordData rtfCtrlWordData0 = new RtfCtrlWordData();
      rtfCtrlWordData0.specialHandler = null;
      boolean boolean0 = rtfProperty0.toggleProperty(rtfCtrlWordData0);
      assertFalse(boolean0);
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.setToDefault("paragraph.justification");
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.removeRtfPropertyListener((RtfPropertyListener) null);
      assertFalse(rtfProperty0.isModified());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      // Undeclared exception!
      try { 
        rtfProperty0.setProperty((RtfCtrlWordData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lowagie.text.rtf.parser.properties.RtfProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      boolean boolean0 = rtfProperty0.isModifiedParagraph();
      assertFalse(rtfProperty0.isModified());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      rtfProperty0.addRtfPropertyListener((RtfPropertyListener) null);
      // Undeclared exception!
      try { 
        rtfProperty0.beforeChange("O-,&@}{=UZ/7@J");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lowagie.text.rtf.parser.properties.RtfProperty", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      boolean boolean0 = rtfProperty0.isModifiedDocument();
      assertFalse(rtfProperty0.isModified());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      boolean boolean0 = rtfProperty0.isModifiedCharacter();
      assertFalse(rtfProperty0.isModified());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RtfProperty rtfProperty0 = new RtfProperty();
      boolean boolean0 = rtfProperty0.isModifiedSection();
      assertFalse(rtfProperty0.isModified());
      assertFalse(boolean0);
  }
}
