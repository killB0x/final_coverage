/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 20:33:59 GMT 2022
 */

package com.github.tminglei.swagger.fake;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.tminglei.swagger.fake.ConstDataProvider;
import com.github.tminglei.swagger.fake.DataProvider;
import com.github.tminglei.swagger.fake.ListDataProvider;
import com.github.tminglei.swagger.fake.MapDataProvider;
import com.github.tminglei.swagger.fake.ObjectDataProvider;
import com.github.tminglei.swagger.fake.OrDataProvider;
import com.github.tminglei.swagger.fake.ParamDataProvider;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractDataProvider_ESTest extends AbstractDataProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, DataProvider> hashMap0 = new HashMap<String, DataProvider>();
      ObjectDataProvider objectDataProvider0 = new ObjectDataProvider(hashMap0, "%:3Zkd/1vwy&<H9");
      objectDataProvider0.setRequired(false);
      assertEquals("%:3Zkd/1vwy&<H9", objectDataProvider0.name());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<String, DataProvider> hashMap0 = new HashMap<String, DataProvider>();
      ObjectDataProvider objectDataProvider0 = new ObjectDataProvider(hashMap0, "%:3Zkd/1vwy&<H9");
      Object object0 = objectDataProvider0.create();
      ConstDataProvider constDataProvider0 = new ConstDataProvider(object0, "NK<#8pm-O}3^");
      MapDataProvider mapDataProvider0 = new MapDataProvider(constDataProvider0, "blEGL6~Uj)4_km");
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      mapDataProvider0.setRequestParams(hashMap1);
      assertEquals("blEGL6~Uj)4_km", mapDataProvider0.name());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ParamDataProvider paramDataProvider0 = new ParamDataProvider("", "nU");
      OrDataProvider orDataProvider0 = new OrDataProvider(paramDataProvider0, paramDataProvider0);
      ListDataProvider listDataProvider0 = new ListDataProvider(orDataProvider0, (String) null);
      String string0 = listDataProvider0.name();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<String, DataProvider> hashMap0 = new HashMap<String, DataProvider>();
      ObjectDataProvider objectDataProvider0 = new ObjectDataProvider(hashMap0, "");
      String string0 = objectDataProvider0.name();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ParamDataProvider paramDataProvider0 = new ParamDataProvider((String) null);
      Object object0 = paramDataProvider0.get();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MapDataProvider mapDataProvider0 = new MapDataProvider((DataProvider) null, (String) null);
      mapDataProvider0.setRequired(true);
      // Undeclared exception!
      try { 
        mapDataProvider0.get();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.tminglei.swagger.fake.MapDataProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ParamDataProvider paramDataProvider0 = new ParamDataProvider((String) null);
      ListDataProvider listDataProvider0 = new ListDataProvider(paramDataProvider0);
      MapDataProvider mapDataProvider0 = new MapDataProvider(listDataProvider0, "vj`~xjE9+/75)ES{");
      HashMap hashMap0 = (HashMap)mapDataProvider0.create();
      assertEquals(5, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ParamDataProvider paramDataProvider0 = new ParamDataProvider((String) null);
      ListDataProvider listDataProvider0 = new ListDataProvider(paramDataProvider0);
      MapDataProvider mapDataProvider0 = new MapDataProvider(listDataProvider0, "vj`~xjE9+/75)ES{");
      mapDataProvider0.setRequired(true);
      HashMap hashMap0 = (HashMap)mapDataProvider0.get();
      assertFalse(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ParamDataProvider paramDataProvider0 = new ParamDataProvider((String) null);
      ListDataProvider listDataProvider0 = new ListDataProvider(paramDataProvider0);
      MapDataProvider mapDataProvider0 = new MapDataProvider(listDataProvider0, "vj`~xjE9+/75)ES{");
      String string0 = mapDataProvider0.name();
      assertEquals("vj`~xjE9+/75)ES{", string0);
  }
}
