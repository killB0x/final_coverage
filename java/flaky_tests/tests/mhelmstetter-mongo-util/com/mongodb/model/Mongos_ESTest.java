/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 13:05:17 GMT 2022
 */

package com.mongodb.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mongodb.model.Mongos;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Mongos_ESTest extends Mongos_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Mongos mongos0 = new Mongos();
      Long long0 = new Long(0L);
      mongos0.setUp(long0);
      Long long1 = mongos0.getUp();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Mongos mongos0 = new Mongos();
      Long long0 = new Long((-2627L));
      mongos0.setUp(long0);
      Long long1 = mongos0.getUp();
      assertEquals((-2627L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Mongos mongos0 = new Mongos();
      MockDate mockDate0 = new MockDate();
      mongos0.setPing(mockDate0);
      Date date0 = mongos0.getPing();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Mongos mongos0 = new Mongos();
      mongos0.setMongoVersion("xWJ`XHG{@F:B7h1Z");
      String string0 = mongos0.getMongoVersion();
      assertEquals("xWJ`XHG{@F:B7h1Z", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Mongos mongos0 = new Mongos();
      mongos0.setId("1+H ko@2N.R{dWR2F6");
      String string0 = mongos0.getId();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Mongos mongos0 = new Mongos();
      mongos0.setId("");
      String string0 = mongos0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Mongos mongos0 = new Mongos();
      Long long0 = mongos0.getUp();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Mongos mongos0 = new Mongos();
      mongos0.setMongoVersion("");
      String string0 = mongos0.getMongoVersion();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Mongos mongos0 = new Mongos();
      mongos0.setWaiting(true);
      boolean boolean0 = mongos0.isWaiting();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Mongos mongos0 = new Mongos();
      Date date0 = mongos0.getPing();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Mongos mongos0 = new Mongos();
      String string0 = mongos0.getMongoVersion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Mongos mongos0 = new Mongos();
      String string0 = mongos0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Mongos mongos0 = new Mongos();
      Long long0 = new Long(1L);
      mongos0.setUp(long0);
      Long long1 = mongos0.getUp();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Mongos mongos0 = new Mongos();
      boolean boolean0 = mongos0.isWaiting();
      assertFalse(boolean0);
  }
}
