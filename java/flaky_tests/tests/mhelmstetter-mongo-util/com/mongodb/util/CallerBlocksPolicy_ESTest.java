/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 12:45:36 GMT 2022
 */

package com.mongodb.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mongodb.util.CallerBlocksPolicy;
import com.mongodb.util.PausableThreadPoolExecutor;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.RejectedExecutionException;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CallerBlocksPolicy_ESTest extends CallerBlocksPolicy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CallerBlocksPolicy callerBlocksPolicy0 = new CallerBlocksPolicy(17L);
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      LinkedBlockingQueue<Runnable> linkedBlockingQueue0 = new LinkedBlockingQueue<Runnable>();
      PausableThreadPoolExecutor pausableThreadPoolExecutor0 = new PausableThreadPoolExecutor(1509, 1509, 1509, timeUnit0, linkedBlockingQueue0, callerBlocksPolicy0);
      // Undeclared exception!
      try { 
        callerBlocksPolicy0.rejectedExecution((Runnable) null, pausableThreadPoolExecutor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.LinkedBlockingQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Thread thread0 = MockThread.currentThread();
      CallerBlocksPolicy callerBlocksPolicy0 = new CallerBlocksPolicy(0L);
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      SynchronousQueue<Runnable> synchronousQueue0 = new SynchronousQueue<Runnable>();
      PausableThreadPoolExecutor pausableThreadPoolExecutor0 = new PausableThreadPoolExecutor(5, 2953, 2953, timeUnit0, synchronousQueue0, callerBlocksPolicy0);
      // Undeclared exception!
      try { 
        callerBlocksPolicy0.rejectedExecution(thread0, pausableThreadPoolExecutor0);
        fail("Expecting exception: RejectedExecutionException");
      
      } catch(RejectedExecutionException e) {
         //
         // Max wait time expired to queue task
         //
         verifyException("com.mongodb.util.CallerBlocksPolicy", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Thread thread0 = MockThread.currentThread();
      CallerBlocksPolicy callerBlocksPolicy0 = new CallerBlocksPolicy(17L);
      PriorityBlockingQueue<Runnable> priorityBlockingQueue0 = new PriorityBlockingQueue<Runnable>();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      PausableThreadPoolExecutor pausableThreadPoolExecutor0 = new PausableThreadPoolExecutor(2953, 9001, 9001, timeUnit0, priorityBlockingQueue0);
      pausableThreadPoolExecutor0.pause();
      // Undeclared exception!
      try { 
        callerBlocksPolicy0.rejectedExecution(thread0, pausableThreadPoolExecutor0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Thread cannot be cast to class java.lang.Comparable (java.lang.Thread and java.lang.Comparable are in module java.base of loader 'bootstrap')
         //
         verifyException("java.util.concurrent.PriorityBlockingQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CallerBlocksPolicy callerBlocksPolicy0 = new CallerBlocksPolicy((-22L));
      LinkedBlockingQueue<Runnable> linkedBlockingQueue0 = new LinkedBlockingQueue<Runnable>(485);
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      PausableThreadPoolExecutor pausableThreadPoolExecutor0 = new PausableThreadPoolExecutor(1, 485, 1, timeUnit0, linkedBlockingQueue0, callerBlocksPolicy0);
      pausableThreadPoolExecutor0.shutdown();
      // Undeclared exception!
      try { 
        callerBlocksPolicy0.rejectedExecution((Runnable) null, pausableThreadPoolExecutor0);
        fail("Expecting exception: RejectedExecutionException");
      
      } catch(RejectedExecutionException e) {
         //
         // Executor has been shut down
         //
         verifyException("com.mongodb.util.CallerBlocksPolicy", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CallerBlocksPolicy callerBlocksPolicy0 = new CallerBlocksPolicy(63L);
      LinkedBlockingQueue<Runnable> linkedBlockingQueue0 = new LinkedBlockingQueue<Runnable>();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      PausableThreadPoolExecutor pausableThreadPoolExecutor0 = new PausableThreadPoolExecutor(1509, 1509, 63L, timeUnit0, linkedBlockingQueue0, callerBlocksPolicy0);
      MockThread mockThread0 = new MockThread();
      callerBlocksPolicy0.rejectedExecution(mockThread0, pausableThreadPoolExecutor0);
      assertEquals(0, mockThread0.countStackFrames());
  }
}
