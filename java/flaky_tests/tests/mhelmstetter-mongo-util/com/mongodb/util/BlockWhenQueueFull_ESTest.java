/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 12:53:05 GMT 2022
 */

package com.mongodb.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mongodb.util.BlockWhenQueueFull;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.RejectedExecutionException;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BlockWhenQueueFull_ESTest extends BlockWhenQueueFull_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BlockWhenQueueFull blockWhenQueueFull0 = new BlockWhenQueueFull();
      MockThread mockThread0 = new MockThread((ThreadGroup) null, "2GT9*7hc[");
      // Undeclared exception!
      try { 
        blockWhenQueueFull0.rejectedExecution(mockThread0, (ThreadPoolExecutor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mongodb.util.BlockWhenQueueFull", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockThread mockThread0 = new MockThread("Max wait time expired to queue task");
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      BlockWhenQueueFull blockWhenQueueFull0 = new BlockWhenQueueFull();
      PriorityBlockingQueue<Runnable> priorityBlockingQueue0 = new PriorityBlockingQueue<Runnable>();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(3583, 3583, 1197, timeUnit0, priorityBlockingQueue0);
      // Undeclared exception!
      try { 
        blockWhenQueueFull0.rejectedExecution(mockThread0, threadPoolExecutor0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.evosuite.runtime.mock.java.lang.MockThread cannot be cast to class java.lang.Comparable (org.evosuite.runtime.mock.java.lang.MockThread is in unnamed module of loader 'app'; java.lang.Comparable is in module java.base of loader 'bootstrap')
         //
         verifyException("java.util.concurrent.PriorityBlockingQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BlockWhenQueueFull blockWhenQueueFull0 = new BlockWhenQueueFull();
      MockThread mockThread0 = new MockThread("");
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      LinkedBlockingDeque<Runnable> linkedBlockingDeque0 = new LinkedBlockingDeque<Runnable>();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(897, 1326, 0L, timeUnit0, linkedBlockingDeque0, threadFactory0, blockWhenQueueFull0);
      blockWhenQueueFull0.rejectedExecution(mockThread0, threadPoolExecutor0);
      //  // Unstable assertion: assertFalse(mockThread0.isDaemon());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BlockWhenQueueFull blockWhenQueueFull0 = new BlockWhenQueueFull();
      MockThread mockThread0 = new MockThread("");
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      LinkedBlockingDeque<Runnable> linkedBlockingDeque0 = new LinkedBlockingDeque<Runnable>();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(897, 1326, 0L, timeUnit0, linkedBlockingDeque0, threadFactory0, blockWhenQueueFull0);
      threadPoolExecutor0.shutdownNow();
      // Undeclared exception!
      try { 
        blockWhenQueueFull0.rejectedExecution(mockThread0, threadPoolExecutor0);
        fail("Expecting exception: RejectedExecutionException");
      
      } catch(RejectedExecutionException e) {
         //
         // Executor has been shut down
         //
         verifyException("com.mongodb.util.BlockWhenQueueFull", e);
      }
  }
}
