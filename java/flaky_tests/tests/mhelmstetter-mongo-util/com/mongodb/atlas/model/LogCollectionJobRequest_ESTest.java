/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 13:07:31 GMT 2022
 */

package com.mongodb.atlas.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mongodb.atlas.model.LogCollectionJobRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LogCollectionJobRequest_ESTest extends LogCollectionJobRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LogCollectionJobRequest logCollectionJobRequest0 = new LogCollectionJobRequest();
      assertEquals(10000000, logCollectionJobRequest0.getSizeRequestedPerFileBytes());
      
      logCollectionJobRequest0.setSizeRequestedPerFileBytes((-1));
      int int0 = logCollectionJobRequest0.getSizeRequestedPerFileBytes();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LogCollectionJobRequest logCollectionJobRequest0 = new LogCollectionJobRequest();
      logCollectionJobRequest0.setResourceType("");
      logCollectionJobRequest0.getResourceType();
      assertEquals(10000000, logCollectionJobRequest0.getSizeRequestedPerFileBytes());
      assertTrue(logCollectionJobRequest0.isRedacted());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LogCollectionJobRequest logCollectionJobRequest0 = new LogCollectionJobRequest();
      logCollectionJobRequest0.setResourceName("_erVv:Ohb");
      logCollectionJobRequest0.getResourceName();
      assertEquals(10000000, logCollectionJobRequest0.getSizeRequestedPerFileBytes());
      assertTrue(logCollectionJobRequest0.isRedacted());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LogCollectionJobRequest logCollectionJobRequest0 = new LogCollectionJobRequest();
      logCollectionJobRequest0.setResourceName("");
      logCollectionJobRequest0.getResourceName();
      assertEquals(10000000, logCollectionJobRequest0.getSizeRequestedPerFileBytes());
      assertTrue(logCollectionJobRequest0.isRedacted());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LogCollectionJobRequest logCollectionJobRequest0 = new LogCollectionJobRequest();
      String[] stringArray0 = new String[8];
      logCollectionJobRequest0.setLogTypes(stringArray0);
      logCollectionJobRequest0.getLogTypes();
      assertEquals(10000000, logCollectionJobRequest0.getSizeRequestedPerFileBytes());
      assertTrue(logCollectionJobRequest0.isRedacted());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LogCollectionJobRequest logCollectionJobRequest0 = new LogCollectionJobRequest();
      String[] stringArray0 = new String[0];
      logCollectionJobRequest0.setLogTypes(stringArray0);
      logCollectionJobRequest0.getLogTypes();
      assertTrue(logCollectionJobRequest0.isRedacted());
      assertEquals(10000000, logCollectionJobRequest0.getSizeRequestedPerFileBytes());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LogCollectionJobRequest logCollectionJobRequest0 = new LogCollectionJobRequest();
      assertTrue(logCollectionJobRequest0.isRedacted());
      
      logCollectionJobRequest0.setRedacted(false);
      boolean boolean0 = logCollectionJobRequest0.isRedacted();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LogCollectionJobRequest logCollectionJobRequest0 = new LogCollectionJobRequest();
      int int0 = logCollectionJobRequest0.getSizeRequestedPerFileBytes();
      assertTrue(logCollectionJobRequest0.isRedacted());
      assertEquals(10000000, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LogCollectionJobRequest logCollectionJobRequest0 = new LogCollectionJobRequest();
      boolean boolean0 = logCollectionJobRequest0.isRedacted();
      assertEquals(10000000, logCollectionJobRequest0.getSizeRequestedPerFileBytes());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LogCollectionJobRequest logCollectionJobRequest0 = new LogCollectionJobRequest();
      logCollectionJobRequest0.setResourceType("M^BcNPF");
      logCollectionJobRequest0.getResourceType();
      assertTrue(logCollectionJobRequest0.isRedacted());
      assertEquals(10000000, logCollectionJobRequest0.getSizeRequestedPerFileBytes());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LogCollectionJobRequest logCollectionJobRequest0 = new LogCollectionJobRequest();
      assertEquals(10000000, logCollectionJobRequest0.getSizeRequestedPerFileBytes());
      
      logCollectionJobRequest0.setSizeRequestedPerFileBytes(0);
      int int0 = logCollectionJobRequest0.getSizeRequestedPerFileBytes();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LogCollectionJobRequest logCollectionJobRequest0 = new LogCollectionJobRequest();
      logCollectionJobRequest0.getLogTypes();
      assertTrue(logCollectionJobRequest0.isRedacted());
      assertEquals(10000000, logCollectionJobRequest0.getSizeRequestedPerFileBytes());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LogCollectionJobRequest logCollectionJobRequest0 = new LogCollectionJobRequest();
      logCollectionJobRequest0.getResourceName();
      assertEquals(10000000, logCollectionJobRequest0.getSizeRequestedPerFileBytes());
      assertTrue(logCollectionJobRequest0.isRedacted());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LogCollectionJobRequest logCollectionJobRequest0 = new LogCollectionJobRequest();
      logCollectionJobRequest0.getResourceType();
      assertTrue(logCollectionJobRequest0.isRedacted());
      assertEquals(10000000, logCollectionJobRequest0.getSizeRequestedPerFileBytes());
  }
}
