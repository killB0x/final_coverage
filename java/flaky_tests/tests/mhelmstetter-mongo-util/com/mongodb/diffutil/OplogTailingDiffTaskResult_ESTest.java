/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 13:13:04 GMT 2022
 */

package com.mongodb.diffutil;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mongodb.diffutil.DiffResult;
import com.mongodb.diffutil.OplogTailingDiffTaskResult;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OplogTailingDiffTaskResult_ESTest extends OplogTailingDiffTaskResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OplogTailingDiffTaskResult oplogTailingDiffTaskResult0 = new OplogTailingDiffTaskResult(", hashMismatched=");
      oplogTailingDiffTaskResult0.incrementKeysMisordered();
      String string0 = oplogTailingDiffTaskResult0.toString();
      assertEquals("OplogTailingDiffTaskResult [missing=0, matches=0, keysMisordered=1, hashMismatched=0, sourceTotal=0]", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OplogTailingDiffTaskResult oplogTailingDiffTaskResult0 = new OplogTailingDiffTaskResult(", hashMismatched=");
      OplogTailingDiffTaskResult oplogTailingDiffTaskResult1 = new OplogTailingDiffTaskResult("OplogTailingDiffTaskResult [missing=0, matches=0, keysMisordered=0, hashMismatched=0, sourceTotal=0]");
      oplogTailingDiffTaskResult1.matches = (-1L);
      oplogTailingDiffTaskResult0.addDiffResult(oplogTailingDiffTaskResult1);
      String string0 = oplogTailingDiffTaskResult0.toString();
      assertEquals("OplogTailingDiffTaskResult [missing=0, matches=-1, keysMisordered=0, hashMismatched=0, sourceTotal=0]", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OplogTailingDiffTaskResult oplogTailingDiffTaskResult0 = new OplogTailingDiffTaskResult(", hashMismatched=");
      oplogTailingDiffTaskResult0.incrementTotal();
      String string0 = oplogTailingDiffTaskResult0.toString();
      assertEquals("OplogTailingDiffTaskResult [missing=0, matches=0, keysMisordered=0, hashMismatched=0, sourceTotal=1]", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OplogTailingDiffTaskResult oplogTailingDiffTaskResult0 = new OplogTailingDiffTaskResult("bAO%Y");
      oplogTailingDiffTaskResult0.incrementHashMismatched();
      String string0 = oplogTailingDiffTaskResult0.toString();
      assertEquals("OplogTailingDiffTaskResult [missing=0, matches=0, keysMisordered=0, hashMismatched=1, sourceTotal=0]", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OplogTailingDiffTaskResult oplogTailingDiffTaskResult0 = new OplogTailingDiffTaskResult((String) null);
      DiffResult diffResult0 = new DiffResult("Y|.eIK%!wzC");
      diffResult0.missing = (-1141L);
      oplogTailingDiffTaskResult0.addDiffResult(diffResult0);
      assertEquals("Y|.eIK%!wzC", diffResult0.getShardName());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OplogTailingDiffTaskResult oplogTailingDiffTaskResult0 = new OplogTailingDiffTaskResult("bAO%Y");
      oplogTailingDiffTaskResult0.incrementKeysMisordered();
      oplogTailingDiffTaskResult0.addDiffResult(oplogTailingDiffTaskResult0);
      assertEquals("bAO%Y", oplogTailingDiffTaskResult0.getShardName());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OplogTailingDiffTaskResult oplogTailingDiffTaskResult0 = new OplogTailingDiffTaskResult("bAO%Y");
      oplogTailingDiffTaskResult0.matches = (-586L);
      oplogTailingDiffTaskResult0.addDiffResult(oplogTailingDiffTaskResult0);
      assertEquals("bAO%Y", oplogTailingDiffTaskResult0.getShardName());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      OplogTailingDiffTaskResult oplogTailingDiffTaskResult0 = new OplogTailingDiffTaskResult(", hashMismatched=");
      oplogTailingDiffTaskResult0.incrementTotal();
      oplogTailingDiffTaskResult0.addDiffResult(oplogTailingDiffTaskResult0);
      assertEquals(", hashMismatched=", oplogTailingDiffTaskResult0.getShardName());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      OplogTailingDiffTaskResult oplogTailingDiffTaskResult0 = new OplogTailingDiffTaskResult("bAO%Y");
      oplogTailingDiffTaskResult0.incrementHashMismatched();
      oplogTailingDiffTaskResult0.addDiffResult(oplogTailingDiffTaskResult0);
      assertEquals("bAO%Y", oplogTailingDiffTaskResult0.getShardName());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      OplogTailingDiffTaskResult oplogTailingDiffTaskResult0 = new OplogTailingDiffTaskResult("com.mongodb.diffutil.DiffResult");
      // Undeclared exception!
      try { 
        oplogTailingDiffTaskResult0.addDiffResult((DiffResult) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.mongodb.diffutil.OplogTailingDiffTaskResult", e);
      }
  }
}
