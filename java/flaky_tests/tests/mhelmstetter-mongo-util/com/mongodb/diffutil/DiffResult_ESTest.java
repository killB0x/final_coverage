/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 13:22:05 GMT 2022
 */

package com.mongodb.diffutil;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mongodb.diffutil.DiffResult;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DiffResult_ESTest extends DiffResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult("TsDo{ys%+@ZzIkA");
      diffResult0.incrementHashMismatched();
      diffResult0.incrementHashMismatched();
      assertEquals("TsDo{ys%+@ZzIkA", diffResult0.getShardName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult("TsDo{ys%+@ZzIkA");
      diffResult0.incrementKeysMisordered();
      diffResult0.incrementKeysMisordered();
      assertEquals("TsDo{ys%+@ZzIkA", diffResult0.getShardName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult("Kdoq'[UdI)wYDsa>");
      diffResult0.total = (-101L);
      diffResult0.incrementTotal();
      assertEquals("Kdoq'[UdI)wYDsa>", diffResult0.getShardName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult("TsDo{ys%+@ZzIkA");
      diffResult0.incrementMatches();
      diffResult0.incrementMissing();
      assertEquals("TsDo{ys%+@ZzIkA", diffResult0.getShardName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult("TsDo{ys%+@ZzIkA");
      diffResult0.incrementHashMismatched();
      diffResult0.incrementMissing();
      assertEquals("TsDo{ys%+@ZzIkA", diffResult0.getShardName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult("TsDo{ys%+@ZzIkA");
      diffResult0.incrementMatches();
      diffResult0.incrementMatches();
      assertEquals("TsDo{ys%+@ZzIkA", diffResult0.getShardName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult((String) null);
      String string0 = diffResult0.getShardName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult("TsDo{ys%+@ZzIkA");
      diffResult0.incrementTotal();
      diffResult0.incrementMissing();
      assertEquals("TsDo{ys%+@ZzIkA", diffResult0.getShardName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult("TsDo{ys%+@ZzIkA");
      diffResult0.incrementKeysMisordered();
      diffResult0.incrementMissing();
      assertEquals("TsDo{ys%+@ZzIkA", diffResult0.getShardName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult("TsDo{ys%+@ZzIkA");
      String string0 = diffResult0.getShardName();
      assertEquals("TsDo{ys%+@ZzIkA", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DiffResult diffResult0 = new DiffResult("TsDo{ys%+@ZzIkA");
      diffResult0.setShardName("");
      String string0 = diffResult0.getShardName();
      assertEquals("", string0);
  }
}
