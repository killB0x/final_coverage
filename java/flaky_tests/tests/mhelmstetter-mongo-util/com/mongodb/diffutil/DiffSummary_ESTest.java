/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 12:21:20 GMT 2022
 */

package com.mongodb.diffutil;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mongodb.diffutil.DiffSummary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DiffSummary_ESTest extends DiffSummary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      assertEquals(0L, diffSummary0.totalKeysMisordered);
      
      diffSummary0.totalKeysMisordered = 1918L;
      DiffSummary diffSummary1 = new DiffSummary();
      boolean boolean0 = diffSummary1.equals(diffSummary0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      assertEquals(0L, diffSummary0.totalHashMismatched);
      
      diffSummary0.totalHashMismatched = 1L;
      DiffSummary diffSummary1 = new DiffSummary();
      boolean boolean0 = diffSummary0.equals(diffSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      DiffSummary diffSummary1 = new DiffSummary();
      assertEquals(0L, diffSummary1.totalHashMismatched);
      
      diffSummary1.totalHashMismatched = 1L;
      boolean boolean0 = diffSummary0.equals(diffSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      assertEquals(0L, diffSummary0.totalDbs);
      
      diffSummary0.totalDbs = 2571L;
      DiffSummary diffSummary1 = new DiffSummary();
      boolean boolean0 = diffSummary1.equals(diffSummary0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      DiffSummary diffSummary1 = new DiffSummary();
      assertEquals(0L, diffSummary1.totalCollections);
      
      diffSummary1.totalCollections = (-2526L);
      boolean boolean0 = diffSummary0.equals(diffSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      assertEquals(0L, diffSummary0.totalMissingDocs);
      
      diffSummary0.totalMissingDocs = (-1L);
      DiffSummary diffSummary1 = new DiffSummary();
      boolean boolean0 = diffSummary0.equals(diffSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      assertEquals(0L, diffSummary0.missingDbs);
      
      diffSummary0.missingDbs = (-6938L);
      DiffSummary diffSummary1 = new DiffSummary();
      boolean boolean0 = diffSummary1.equals(diffSummary0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      assertEquals(0L, diffSummary0.totalMatches);
      
      diffSummary0.totalMatches = 834L;
      diffSummary0.hashCode();
      assertEquals(0L, diffSummary0.totalKeysMisordered);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      assertEquals(0L, diffSummary0.totalDbs);
      
      diffSummary0.totalDbs = 2575L;
      diffSummary0.hashCode();
      assertEquals(0L, diffSummary0.missingDbs);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      assertEquals(0L, diffSummary0.totalKeysMisordered);
      
      diffSummary0.totalKeysMisordered = 1918L;
      diffSummary0.hashCode();
      assertEquals(0L, diffSummary0.totalDbs);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      assertEquals(0L, diffSummary0.totalHashMismatched);
      
      diffSummary0.totalHashMismatched = 1L;
      diffSummary0.hashCode();
      assertEquals(0L, diffSummary0.missingDbs);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      assertEquals(0L, diffSummary0.missingDbs);
      
      diffSummary0.missingDbs = (-1L);
      diffSummary0.hashCode();
      assertEquals(0L, diffSummary0.totalDbs);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      assertEquals(0L, diffSummary0.totalMissingDocs);
      
      diffSummary0.totalMissingDocs = 1L;
      DiffSummary diffSummary1 = new DiffSummary();
      boolean boolean0 = diffSummary1.equals(diffSummary0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      assertEquals(0L, diffSummary0.totalMatches);
      
      diffSummary0.totalMatches = (-1L);
      DiffSummary diffSummary1 = new DiffSummary();
      boolean boolean0 = diffSummary1.equals(diffSummary0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      assertEquals(0L, diffSummary0.totalKeysMisordered);
      
      diffSummary0.totalKeysMisordered = 1918L;
      DiffSummary diffSummary1 = new DiffSummary();
      boolean boolean0 = diffSummary0.equals(diffSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      DiffSummary diffSummary1 = new DiffSummary();
      assertEquals(0L, diffSummary1.missingDbs);
      
      diffSummary0.missingDbs = (-1L);
      diffSummary0.totalDbs = 2575L;
      diffSummary1.missingDbs = (-1L);
      boolean boolean0 = diffSummary0.equals(diffSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      DiffSummary diffSummary1 = new DiffSummary();
      assertEquals(0L, diffSummary1.totalCollections);
      
      diffSummary1.totalCollections = 2023L;
      boolean boolean0 = diffSummary0.equals(diffSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      assertEquals(0L, diffSummary0.missingDbs);
      
      DiffSummary diffSummary1 = new DiffSummary();
      diffSummary0.missingDbs = (-1L);
      boolean boolean0 = diffSummary0.equals(diffSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      Object object0 = new Object();
      boolean boolean0 = diffSummary0.equals(object0);
      assertEquals(0L, diffSummary0.totalDbs);
      assertFalse(boolean0);
      assertEquals(0L, diffSummary0.totalHashMismatched);
      assertEquals(0L, diffSummary0.totalMissingDocs);
      assertEquals(0L, diffSummary0.totalKeysMisordered);
      assertEquals(0L, diffSummary0.totalMatches);
      assertEquals(0L, diffSummary0.missingDbs);
      assertEquals(0L, diffSummary0.totalCollections);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      DiffSummary diffSummary1 = new DiffSummary();
      boolean boolean0 = diffSummary0.equals(diffSummary1);
      assertEquals(0L, diffSummary1.totalKeysMisordered);
      assertEquals(0L, diffSummary1.totalHashMismatched);
      assertTrue(boolean0);
      assertEquals(0L, diffSummary1.totalDbs);
      assertEquals(0L, diffSummary1.totalMissingDocs);
      assertEquals(0L, diffSummary1.totalMatches);
      assertEquals(0L, diffSummary1.totalCollections);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      boolean boolean0 = diffSummary0.equals(diffSummary0);
      assertTrue(boolean0);
      assertEquals(0L, diffSummary0.totalMatches);
      assertEquals(0L, diffSummary0.totalMissingDocs);
      assertEquals(0L, diffSummary0.totalHashMismatched);
      assertEquals(0L, diffSummary0.totalDbs);
      assertEquals(0L, diffSummary0.totalKeysMisordered);
      assertEquals(0L, diffSummary0.totalCollections);
      assertEquals(0L, diffSummary0.missingDbs);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DiffSummary diffSummary0 = new DiffSummary();
      boolean boolean0 = diffSummary0.equals((Object) null);
      assertEquals(0L, diffSummary0.missingDbs);
      assertEquals(0L, diffSummary0.totalCollections);
      assertEquals(0L, diffSummary0.totalMissingDocs);
      assertEquals(0L, diffSummary0.totalKeysMisordered);
      assertEquals(0L, diffSummary0.totalHashMismatched);
      assertEquals(0L, diffSummary0.totalDbs);
      assertFalse(boolean0);
      assertEquals(0L, diffSummary0.totalMatches);
  }
}
