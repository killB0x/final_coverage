/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 13:04:55 GMT 2022
 */

package com.mongodb.mongoreplay;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mongodb.mongoreplay.Command;
import com.mongodb.mongoreplay.CommandType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Command_ESTest extends Command_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Command[] commandArray0 = Command.values();
      assertEquals(8, commandArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Command command0 = Command.valueOf("AGGREGATE");
      assertEquals(Command.AGGREGATE, command0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Command command0 = Command.valueOf("UPDATE");
      assertEquals(Command.UPDATE, command0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Command command0 = Command.AGGREGATE;
      boolean boolean0 = command0.isRead();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Command command0 = Command.UPDATE;
      boolean boolean0 = command0.isRead();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Command command0 = Command.UPDATE;
      CommandType commandType0 = command0.getCommandType();
      assertEquals(CommandType.WRITE, commandType0);
  }
}
