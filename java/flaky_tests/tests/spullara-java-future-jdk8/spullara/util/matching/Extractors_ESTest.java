/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 03:19:05 GMT 2022
 */

package spullara.util.matching;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.regex.Matcher;
import java.util.regex.PatternSyntaxException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import spullara.util.matching.Extractor;
import spullara.util.matching.Extractors;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Extractors_ESTest extends Extractors_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        Extractors.RegexExtractor("+w^Jl#");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Dangling meta character '+' near index 0
         // +w^Jl#
         // ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        Extractors.RegexExtractor((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Extractor<String, Long> extractor0 = Extractors.LongExtractor();
      assertNotNull(extractor0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Extractor<String, Integer> extractor0 = Extractors.IntegerExtractor();
      assertNotNull(extractor0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Extractors extractors0 = new Extractors();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Extractor<String, Matcher> extractor0 = Extractors.RegexExtractor("");
      assertNotNull(extractor0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Extractor<String, Double> extractor0 = Extractors.DoubleExtractor();
      assertNotNull(extractor0);
  }
}
