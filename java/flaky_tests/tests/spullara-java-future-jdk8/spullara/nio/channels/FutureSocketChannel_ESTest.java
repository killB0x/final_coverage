/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 03:19:47 GMT 2022
 */

package spullara.nio.channels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.nio.channels.AsynchronousChannelGroup;
import java.nio.channels.AsynchronousSocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.junit.runner.RunWith;
import spullara.nio.channels.FutureSocketChannel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FutureSocketChannel_ESTest extends FutureSocketChannel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FutureSocketChannel futureSocketChannel0 = new FutureSocketChannel((AsynchronousSocketChannel) null);
      // Undeclared exception!
      try { 
        futureSocketChannel0.getPort();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spullara.nio.channels.FutureSocketChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        FutureSocketChannel.open((AsynchronousChannelGroup) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder
         //
         verifyException("java.nio.channels.spi.AsynchronousChannelProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FutureSocketChannel futureSocketChannel0 = new FutureSocketChannel((AsynchronousSocketChannel) null);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1);
      // Undeclared exception!
      try { 
        futureSocketChannel0.write(byteBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spullara.nio.channels.FutureSocketChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FutureSocketChannel futureSocketChannel0 = new FutureSocketChannel((AsynchronousSocketChannel) null);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(2812);
      // Undeclared exception!
      try { 
        futureSocketChannel0.connect(mockInetSocketAddress0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spullara.nio.channels.FutureSocketChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FutureSocketChannel futureSocketChannel0 = new FutureSocketChannel((AsynchronousSocketChannel) null);
      // Undeclared exception!
      try { 
        futureSocketChannel0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spullara.nio.channels.FutureSocketChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FutureSocketChannel futureSocketChannel0 = null;
      try {
        futureSocketChannel0 = new FutureSocketChannel();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder
         //
         verifyException("java.nio.channels.spi.AsynchronousChannelProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        FutureSocketChannel.open();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.nio.channels.spi.AsynchronousChannelProvider$ProviderHolder
         //
         verifyException("java.nio.channels.spi.AsynchronousChannelProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FutureSocketChannel futureSocketChannel0 = new FutureSocketChannel((AsynchronousSocketChannel) null);
      // Undeclared exception!
      try { 
        futureSocketChannel0.read((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spullara.nio.channels.FutureSocketChannel", e);
      }
  }
}
