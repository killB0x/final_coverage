/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 02:32:30 GMT 2022
 */

package com.github.lyhnx.bittrexapiwrapper.api.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.lyhnx.bittrexapiwrapper.api.models.QuantityRate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuantityRate_ESTest extends QuantityRate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QuantityRate quantityRate0 = new QuantityRate();
      quantityRate0.setRate(1.0);
      double double0 = quantityRate0.getRate();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QuantityRate quantityRate0 = new QuantityRate();
      quantityRate0.setRate((-2034.4164));
      double double0 = quantityRate0.getRate();
      assertEquals((-2034.4164), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QuantityRate quantityRate0 = new QuantityRate();
      quantityRate0.setQuantity(1376.02583284);
      double double0 = quantityRate0.getQuantity();
      assertEquals(1376.02583284, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QuantityRate quantityRate0 = new QuantityRate();
      quantityRate0.setQuantity((-2034.4164));
      double double0 = quantityRate0.getQuantity();
      assertEquals((-2034.4164), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QuantityRate quantityRate0 = new QuantityRate();
      String string0 = quantityRate0.toString();
      assertEquals("QuantityRate [quantity=0.0, rate=0.0]", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QuantityRate quantityRate0 = new QuantityRate();
      double double0 = quantityRate0.getQuantity();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      QuantityRate quantityRate0 = new QuantityRate();
      double double0 = quantityRate0.getRate();
      assertEquals(0.0, double0, 0.01);
  }
}
