/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 02:36:26 GMT 2022
 */

package com.github.lyhnx.bittrexapiwrapper.api.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.lyhnx.bittrexapiwrapper.api.models.Market;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Market_ESTest extends Market_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Market market0 = new Market();
      market0.setMinTradeSize(430.3);
      double double0 = market0.getMinTradeSize();
      assertEquals(430.3, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Market market0 = new Market();
      market0.setMinTradeSize((-432.799709693));
      double double0 = market0.getMinTradeSize();
      assertEquals((-432.799709693), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Market market0 = new Market();
      market0.setMarketName("i=a4~{UKSQ6JqD");
      String string0 = market0.getMarketName();
      assertEquals("i=a4~{UKSQ6JqD", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Market market0 = new Market();
      market0.setMarketCurrencyLong("i=a4~{UKSQ6JqD");
      String string0 = market0.getMarketCurrencyLong();
      assertEquals("i=a4~{UKSQ6JqD", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Market market0 = new Market();
      market0.setMarketCurrencyLong("");
      String string0 = market0.getMarketCurrencyLong();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Market market0 = new Market();
      market0.setMarketCurrency("=");
      String string0 = market0.getMarketCurrency();
      assertEquals("=", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Market market0 = new Market();
      market0.setBaseCurrencyLong("i=a4~{UKSQ6JqD");
      String string0 = market0.getBaseCurrencyLong();
      assertEquals("i=a4~{UKSQ6JqD", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Market market0 = new Market();
      market0.setBaseCurrency("i=a4~{UKSQ6JqD");
      String string0 = market0.getBaseCurrency();
      assertEquals("i=a4~{UKSQ6JqD", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Market market0 = new Market();
      market0.setBaseCurrency("");
      String string0 = market0.getBaseCurrency();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Market market0 = new Market();
      market0.setActive("?u7R;hKE2E)$");
      String string0 = market0.getActive();
      assertEquals("?u7R;hKE2E)$", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Market market0 = new Market();
      market0.setActive("");
      String string0 = market0.getActive();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Market market0 = new Market();
      String string0 = market0.toString();
      assertEquals("Market [marketCurrency=null, baseCurrency=null, marketCurrencyLong=null, baseCurrencyLong=null, minTradeSize=0.0, marketName=null, active=null, created=null]", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Market market0 = new Market();
      String string0 = market0.getBaseCurrency();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Market market0 = new Market();
      market0.setBaseCurrencyLong("");
      String string0 = market0.getBaseCurrencyLong();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Market market0 = new Market();
      market0.setMarketName("");
      String string0 = market0.getMarketName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Market market0 = new Market();
      market0.setMarketCurrency("");
      String string0 = market0.getMarketCurrency();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Market market0 = new Market();
      String string0 = market0.getActive();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Market market0 = new Market();
      Date date0 = market0.getCreated();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Market market0 = new Market();
      String string0 = market0.getBaseCurrencyLong();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Market market0 = new Market();
      double double0 = market0.getMinTradeSize();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Market market0 = new Market();
      String string0 = market0.getMarketCurrency();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Market market0 = new Market();
      MockDate mockDate0 = new MockDate();
      market0.setCreated(mockDate0);
      Date date0 = market0.getCreated();
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Market market0 = new Market();
      String string0 = market0.getMarketName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Market market0 = new Market();
      String string0 = market0.getMarketCurrencyLong();
      assertNull(string0);
  }
}
