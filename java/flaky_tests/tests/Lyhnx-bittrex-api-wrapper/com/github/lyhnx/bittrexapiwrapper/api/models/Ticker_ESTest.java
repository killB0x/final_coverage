/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 02:31:48 GMT 2022
 */

package com.github.lyhnx.bittrexapiwrapper.api.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.lyhnx.bittrexapiwrapper.api.models.Ticker;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Ticker_ESTest extends Ticker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Ticker ticker0 = new Ticker();
      ticker0.setLast(1.0);
      double double0 = ticker0.getLast();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Ticker ticker0 = new Ticker();
      ticker0.setLast((-1.0));
      double double0 = ticker0.getLast();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Ticker ticker0 = new Ticker();
      ticker0.setBid((-1933.039929961992));
      double double0 = ticker0.getBid();
      assertEquals((-1933.039929961992), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Ticker ticker0 = new Ticker();
      ticker0.setAsk(694.139964);
      double double0 = ticker0.getAsk();
      assertEquals(694.139964, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Ticker ticker0 = new Ticker();
      double double0 = ticker0.getAsk();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Ticker ticker0 = new Ticker();
      ticker0.setBid(694.139964);
      double double0 = ticker0.getBid();
      assertEquals(694.139964, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Ticker ticker0 = new Ticker();
      double double0 = ticker0.getBid();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Ticker ticker0 = new Ticker();
      double double0 = ticker0.getLast();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Ticker ticker0 = new Ticker();
      ticker0.setAsk((-1.0));
      double double0 = ticker0.getAsk();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Ticker ticker0 = new Ticker();
      String string0 = ticker0.toString();
      assertEquals("Ticker [bid=0.0, ask=0.0, last=0.0]", string0);
  }
}
