/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 02:37:55 GMT 2022
 */

package com.github.lyhnx.bittrexapiwrapper.market;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.lyhnx.bittrexapiwrapper.market.BittrexMarket;
import com.github.lyhnx.bittrexapiwrapper.market.Currency;
import com.github.lyhnx.bittrexapiwrapper.market.Market;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Market_ESTest extends Market_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BittrexMarket bittrexMarket0 = BittrexMarket.ETHEREUM;
      Currency currency0 = new Currency((String) null, "");
      Market market0 = new Market(bittrexMarket0, currency0);
      String string0 = market0.getMarketName();
      assertEquals("ETH-", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BittrexMarket bittrexMarket0 = BittrexMarket.ETHEREUM;
      Currency currency0 = new Currency((String) null, "");
      Market market0 = new Market(bittrexMarket0, currency0);
      BittrexMarket bittrexMarket1 = market0.getMarket();
      assertEquals(BittrexMarket.ETHEREUM, bittrexMarket1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BittrexMarket bittrexMarket0 = BittrexMarket.ETHEREUM;
      Currency currency0 = new Currency((String) null, "");
      Market market0 = new Market(bittrexMarket0, currency0);
      Currency currency1 = market0.getCurrency();
      assertNull(currency1.getName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BittrexMarket bittrexMarket0 = BittrexMarket.ETHEREUM;
      Currency currency0 = new Currency((String) null, "");
      Market market0 = new Market(bittrexMarket0, currency0);
      market0.setCurrency(currency0);
      assertEquals("", currency0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BittrexMarket bittrexMarket0 = BittrexMarket.ETHEREUM;
      Currency currency0 = new Currency((String) null, "");
      Market market0 = new Market(bittrexMarket0, currency0);
      market0.setMarket(bittrexMarket0);
      assertEquals(BittrexMarket.ETHEREUM, market0.getMarket());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Market market0 = new Market((BittrexMarket) null, (Currency) null);
      market0.getMarket();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BittrexMarket bittrexMarket0 = BittrexMarket.USDT;
      Market market0 = new Market(bittrexMarket0, (Currency) null);
      // Undeclared exception!
      try { 
        market0.getMarketName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.lyhnx.bittrexapiwrapper.market.Market", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BittrexMarket bittrexMarket0 = BittrexMarket.ETHEREUM;
      Market market0 = new Market(bittrexMarket0, (Currency) null);
      Currency currency0 = market0.getCurrency();
      assertNull(currency0);
  }
}
