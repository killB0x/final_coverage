/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 02:38:39 GMT 2022
 */

package com.github.lyhnx.bittrexapiwrapper.api.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.lyhnx.bittrexapiwrapper.api.models.MarketHistory;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MarketHistory_ESTest extends MarketHistory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      marketHistory0.setTotal(1754.2137121433138);
      double double0 = marketHistory0.getTotal();
      assertEquals(1754.2137121433138, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      marketHistory0.setTotal((-1456.20393710861));
      double double0 = marketHistory0.getTotal();
      assertEquals((-1456.20393710861), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      MockDate mockDate0 = new MockDate((-1), 0, 0);
      marketHistory0.setTimeStamp(mockDate0);
      Date date0 = marketHistory0.getTimeStamp();
      assertEquals("Sat Dec 31 00:00:00 GMT 1898", date0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      marketHistory0.setQuantity((-2102L));
      double double0 = marketHistory0.getQuantity();
      assertEquals((-2102.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      marketHistory0.setPrice(1.0);
      double double0 = marketHistory0.getPrice();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      marketHistory0.setPrice((-1388.207));
      double double0 = marketHistory0.getPrice();
      assertEquals((-1388.207), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      marketHistory0.setOrderType("\"Br-xTN|Xc8oQuO{");
      String string0 = marketHistory0.getOrderType();
      assertEquals("\"Br-xTN|Xc8oQuO{", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      marketHistory0.setOrderType("");
      String string0 = marketHistory0.getOrderType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      marketHistory0.setId(1L);
      long long0 = marketHistory0.getId();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      marketHistory0.setId((-509L));
      long long0 = marketHistory0.getId();
      assertEquals((-509L), long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      marketHistory0.setFillType("");
      String string0 = marketHistory0.getFillType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      double double0 = marketHistory0.getPrice();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      String string0 = marketHistory0.getOrderType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      double double0 = marketHistory0.getTotal();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      double double0 = marketHistory0.getQuantity();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      marketHistory0.setQuantity(694.8688340180983);
      double double0 = marketHistory0.getQuantity();
      assertEquals(694.8688340180983, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      Date date0 = marketHistory0.getTimeStamp();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      String string0 = marketHistory0.toString();
      assertEquals("MarketHistory [id=0, timeStamp=null, quantity=0.0, price=0.0, total=0.0, fillType=null, orderType=null]", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      marketHistory0.setFillType("Z%,h+#C0DVZ~-@&gjH)");
      String string0 = marketHistory0.getFillType();
      assertEquals("Z%,h+#C0DVZ~-@&gjH)", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      String string0 = marketHistory0.getFillType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MarketHistory marketHistory0 = new MarketHistory();
      long long0 = marketHistory0.getId();
      assertEquals(0L, long0);
  }
}
