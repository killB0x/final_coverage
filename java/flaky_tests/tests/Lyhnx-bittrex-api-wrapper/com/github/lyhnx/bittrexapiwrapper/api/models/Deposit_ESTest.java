/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 02:25:59 GMT 2022
 */

package com.github.lyhnx.bittrexapiwrapper.api.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.lyhnx.bittrexapiwrapper.api.models.Deposit;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Deposit_ESTest extends Deposit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      deposit0.setTxId(", currency=");
      String string0 = deposit0.getTxId();
      assertEquals(", currency=", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      MockDate mockDate0 = new MockDate(0, 1, 1, 0, 0);
      deposit0.setLastUpdated(mockDate0);
      Date date0 = deposit0.getLastUpdated();
      assertEquals("Thu Feb 01 00:00:00 GMT 1900", date0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      deposit0.setId(670L);
      long long0 = deposit0.getId();
      assertEquals(670L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      deposit0.setId((-3249L));
      long long0 = deposit0.getId();
      assertEquals((-3249L), long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      deposit0.setCurrency("b NX`V{~b4P@s");
      String string0 = deposit0.getCurrency();
      assertEquals("b NX`V{~b4P@s", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      deposit0.setCryptoAddress("");
      String string0 = deposit0.getCryptoAddress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      deposit0.setConfirmations(2155);
      int int0 = deposit0.getConfirmations();
      assertEquals(2155, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      deposit0.setConfirmations((-3212));
      int int0 = deposit0.getConfirmations();
      assertEquals((-3212), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      deposit0.setAmount((-1.0));
      double double0 = deposit0.getAmount();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      deposit0.setCryptoAddress("b NX`V{~b4P@s");
      String string0 = deposit0.getCryptoAddress();
      assertEquals("b NX`V{~b4P@s", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      deposit0.setAmount(2896.1949221888);
      double double0 = deposit0.getAmount();
      assertEquals(2896.1949221888, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      double double0 = deposit0.getAmount();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      long long0 = deposit0.getId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      String string0 = deposit0.getCurrency();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      deposit0.setCurrency("");
      String string0 = deposit0.getCurrency();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      String string0 = deposit0.toString();
      assertEquals("Deposit [id=0, amount=0.0, currency=null, lastUpdated=null, txId=null, cryptoAddress=null, confirmations=0]", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      int int0 = deposit0.getConfirmations();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      deposit0.setTxId("");
      String string0 = deposit0.getTxId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      String string0 = deposit0.getTxId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      Date date0 = deposit0.getLastUpdated();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Deposit deposit0 = new Deposit();
      String string0 = deposit0.getCryptoAddress();
      assertNull(string0);
  }
}
