/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 02:34:05 GMT 2022
 */

package com.github.lyhnx.bittrexapiwrapper.api.models;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.lyhnx.bittrexapiwrapper.api.models.DepositAddress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DepositAddress_ESTest extends DepositAddress_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DepositAddress depositAddress0 = new DepositAddress();
      com.github.lyhnx.bittrexapiwrapper.market.Currency currency0 = new com.github.lyhnx.bittrexapiwrapper.market.Currency("LqX7\u0003{", "4*Nj=P6");
      depositAddress0.setCurrency(currency0);
      com.github.lyhnx.bittrexapiwrapper.market.Currency currency1 = depositAddress0.getCurrency();
      assertEquals("4*Nj=P6", currency1.getSymbol());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DepositAddress depositAddress0 = new DepositAddress();
      depositAddress0.setAddress("LqX7\u0003{");
      String string0 = depositAddress0.getAddress();
      assertEquals("LqX7\u0003{", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DepositAddress depositAddress0 = new DepositAddress();
      depositAddress0.setAddress("");
      String string0 = depositAddress0.getAddress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DepositAddress depositAddress0 = new DepositAddress();
      String string0 = depositAddress0.getAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DepositAddress depositAddress0 = new DepositAddress();
      com.github.lyhnx.bittrexapiwrapper.market.Currency currency0 = depositAddress0.getCurrency();
      assertNull(currency0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DepositAddress depositAddress0 = new DepositAddress();
      String string0 = depositAddress0.toString();
      assertEquals("DepositAddress [currency=null, address=null]", string0);
  }
}
