/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 00:41:11 GMT 2022
 */

package com.googlecode.javaewah32;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.googlecode.javaewah32.EWAHCompressedBitmap32;
import com.googlecode.javaewah32.IteratingBufferedRunningLengthWord32;
import com.googlecode.javaewah32.IteratingRLW32;
import com.googlecode.javaewah32.ORIt;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ORIt_ESTest extends ORIt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      ORIt oRIt0 = new ORIt(linkedList0, 1);
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = oRIt0.buffer;
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords(1);
      linkedList0.add((IteratingRLW32) iteratingBufferedRunningLengthWord32_0);
      oRIt0.next();
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ORIt oRIt0 = new ORIt((LinkedList<IteratingRLW32>) null, 0);
      // Undeclared exception!
      try { 
        oRIt0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.ORIt", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ORIt oRIt0 = new ORIt((LinkedList<IteratingRLW32>) null, 0);
      // Undeclared exception!
      try { 
        oRIt0.hasNext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.ORIt", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      ORIt oRIt0 = null;
      try {
        oRIt0 = new ORIt(linkedList0, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("com.googlecode.javaewah32.ORIt", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      eWAHCompressedBitmap32_0.setSizeInBitsWithinLastWord(32);
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      linkedList0.add((IteratingRLW32) iteratingBufferedRunningLengthWord32_0);
      ORIt oRIt0 = new ORIt(linkedList0, 32);
      oRIt0.next();
      assertEquals(1, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      eWAHCompressedBitmap32_0.setSizeInBitsWithinLastWord(32);
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      linkedList0.add((IteratingRLW32) iteratingBufferedRunningLengthWord32_0);
      ORIt oRIt0 = new ORIt(linkedList0, 0);
      oRIt0.next();
      assertEquals(1, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      ORIt oRIt0 = new ORIt(linkedList0, 1);
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = oRIt0.buffer;
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      linkedList0.add((IteratingRLW32) iteratingBufferedRunningLengthWord32_0);
      oRIt0.next();
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      ORIt oRIt0 = new ORIt(linkedList0, 5151);
      linkedList0.add((IteratingRLW32) null);
      boolean boolean0 = oRIt0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      ORIt oRIt0 = new ORIt(linkedList0, 1);
      boolean boolean0 = oRIt0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      ORIt oRIt0 = new ORIt(linkedList0, 5151);
      // Undeclared exception!
      try { 
        oRIt0.clone();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.googlecode.javaewah32.ORIt cannot be cast to class com.googlecode.javaewah32.XORIt (com.googlecode.javaewah32.ORIt and com.googlecode.javaewah32.XORIt are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @4f1c8dfc)
         //
         verifyException("com.googlecode.javaewah32.ORIt", e);
      }
  }
}
