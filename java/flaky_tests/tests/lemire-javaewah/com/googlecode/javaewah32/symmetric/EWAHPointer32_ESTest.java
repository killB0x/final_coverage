/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 00:23:26 GMT 2022
 */

package com.googlecode.javaewah32.symmetric;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.googlecode.javaewah32.BitmapStorage32;
import com.googlecode.javaewah32.EWAHCompressedBitmap32;
import com.googlecode.javaewah32.EWAHIterator32;
import com.googlecode.javaewah32.IteratingBufferedRunningLengthWord32;
import com.googlecode.javaewah32.symmetric.EWAHPointer32;
import com.googlecode.javaewah32.symmetric.ThresholdFuncBitmap32;
import com.googlecode.javaewah32.symmetric.UpdateableBitmapFunction32;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EWAHPointer32_ESTest extends EWAHPointer32_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      EWAHIterator32 eWAHIterator32_0 = eWAHCompressedBitmap32_0.getEWAHIterator();
      eWAHCompressedBitmap32_0.setSizeInBitsWithinLastWord(32768);
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHIterator32_0);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(913, iteratingBufferedRunningLengthWord32_0, (-1778));
      int int0 = eWAHPointer32_0.beginOfRun();
      assertEquals(913, int0);
      assertFalse(eWAHPointer32_0.hasNoData());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords((-2294));
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(0, iteratingBufferedRunningLengthWord32_0, 0);
      eWAHPointer32_0.parseNextRun();
      int int0 = eWAHPointer32_0.beginOfRun();
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(2294, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords(2739);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(0, iteratingBufferedRunningLengthWord32_0, 0);
      eWAHPointer32_0.parseNextRun();
      assertTrue(eWAHPointer32_0.hasNoData());
      
      eWAHPointer32_0.parseNextRun();
      assertEquals((-2739), eWAHPointer32_0.endOfRun());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(0, iteratingBufferedRunningLengthWord32_0, 0);
      ThresholdFuncBitmap32 thresholdFuncBitmap32_0 = new ThresholdFuncBitmap32(0);
      thresholdFuncBitmap32_0.resize(1);
      eWAHPointer32_0.callbackUpdate(thresholdFuncBitmap32_0);
      assertEquals(0, eWAHPointer32_0.beginOfRun());
      assertTrue(eWAHPointer32_0.hasNoData());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(0, iteratingBufferedRunningLengthWord32_0, 0);
      boolean boolean0 = eWAHPointer32_0.hasNoData();
      assertTrue(boolean0);
      assertEquals(0, eWAHPointer32_0.beginOfRun());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords((-2294));
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(0, iteratingBufferedRunningLengthWord32_0, 2825);
      boolean boolean0 = eWAHPointer32_0.hasNoData();
      assertEquals(0, eWAHPointer32_0.beginOfRun());
      assertFalse(boolean0);
      assertEquals(2294, eWAHPointer32_0.endOfRun());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EWAHCompressedBitmap32[] eWAHCompressedBitmap32Array0 = new EWAHCompressedBitmap32[1];
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      eWAHCompressedBitmap32Array0[0] = eWAHCompressedBitmap32_0;
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32Array0[0]);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(0, iteratingBufferedRunningLengthWord32_0, (-681));
      int int0 = eWAHPointer32_0.endOfRun();
      assertTrue(eWAHPointer32_0.hasNoData());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(91, iteratingBufferedRunningLengthWord32_0, 32);
      int int0 = eWAHPointer32_0.endOfRun();
      assertTrue(eWAHPointer32_0.hasNoData());
      assertEquals(91, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2084);
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(byteBuffer0);
      EWAHIterator32 eWAHIterator32_0 = EWAHIterator32.getEWAHIterator(eWAHCompressedBitmap32_0);
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHIterator32_0);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32((-2078), iteratingBufferedRunningLengthWord32_0, (-917));
      int int0 = eWAHPointer32_0.endOfRun();
      assertEquals((-2078), int0);
      assertTrue(eWAHPointer32_0.hasNoData());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      EWAHIterator32 eWAHIterator32_0 = eWAHCompressedBitmap32_0.getEWAHIterator();
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHIterator32_0);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(32, iteratingBufferedRunningLengthWord32_0, 0);
      int int0 = eWAHPointer32_0.compareTo(eWAHPointer32_0);
      assertEquals(0, int0);
      assertEquals(32, eWAHPointer32_0.endOfRun());
      assertTrue(eWAHPointer32_0.hasNoData());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(64);
      EWAHIterator32 eWAHIterator32_0 = eWAHCompressedBitmap32_0.getEWAHIterator();
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHIterator32_0);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(4049, iteratingBufferedRunningLengthWord32_0, 4049);
      EWAHPointer32 eWAHPointer32_1 = new EWAHPointer32(16, eWAHPointer32_0.iterator, 64);
      int int0 = eWAHPointer32_0.compareTo(eWAHPointer32_1);
      assertEquals(4033, int0);
      assertTrue(eWAHPointer32_1.hasNoData());
      assertEquals(16, eWAHPointer32_1.endOfRun());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(0);
      EWAHIterator32 eWAHIterator32_0 = eWAHCompressedBitmap32_0.getEWAHIterator();
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHIterator32_0);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32((-3381), iteratingBufferedRunningLengthWord32_0, 0);
      EWAHPointer32 eWAHPointer32_1 = new EWAHPointer32(32, eWAHPointer32_0.iterator, 32);
      int int0 = eWAHPointer32_0.compareTo(eWAHPointer32_1);
      assertTrue(eWAHPointer32_1.hasNoData());
      assertEquals(32, eWAHPointer32_1.endOfRun());
      assertEquals((-3413), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32((-1640531535), iteratingBufferedRunningLengthWord32_0, 32);
      int int0 = eWAHPointer32_0.beginOfRun();
      assertTrue(eWAHPointer32_0.hasNoData());
      assertEquals((-1640531535), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(0, iteratingBufferedRunningLengthWord32_0, 32);
      // Undeclared exception!
      try { 
        eWAHPointer32_0.compareTo((EWAHPointer32) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(32, iteratingBufferedRunningLengthWord32_0, 32);
      // Undeclared exception!
      try { 
        eWAHPointer32_0.callbackUpdate((UpdateableBitmapFunction32) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.symmetric.EWAHPointer32", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EWAHPointer32 eWAHPointer32_0 = null;
      try {
        eWAHPointer32_0 = new EWAHPointer32(32, (IteratingBufferedRunningLengthWord32) null, 32);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.symmetric.EWAHPointer32", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      eWAHCompressedBitmap32_0.addWord((-1));
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(32, iteratingBufferedRunningLengthWord32_0, 32);
      ThresholdFuncBitmap32 thresholdFuncBitmap32_0 = new ThresholdFuncBitmap32(32768);
      // Undeclared exception!
      try { 
        eWAHPointer32_0.callbackUpdate(thresholdFuncBitmap32_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 32 out of bounds for length 0
         //
         verifyException("com.googlecode.javaewah32.symmetric.UpdateableBitmapFunction32", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[1];
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = EWAHCompressedBitmap32.bitmapOf(intArray0);
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(0, iteratingBufferedRunningLengthWord32_0, 32);
      ThresholdFuncBitmap32 thresholdFuncBitmap32_0 = new ThresholdFuncBitmap32(32);
      // Undeclared exception!
      try { 
        eWAHPointer32_0.callbackUpdate(thresholdFuncBitmap32_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.googlecode.javaewah.datastructure.BitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      eWAHCompressedBitmap32_0.setSizeInBits(2147483615, true);
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(32, iteratingBufferedRunningLengthWord32_0, 32);
      eWAHPointer32_0.parseNextRun();
      assertEquals(131102, eWAHPointer32_0.endOfRun());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32((-65));
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords((-65));
      iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) eWAHCompressedBitmap32_0, (-2885));
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32((-2885), iteratingBufferedRunningLengthWord32_0, (-1128));
      eWAHPointer32_0.parseNextRun();
      assertEquals(0, eWAHPointer32_0.beginOfRun());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords((-2294));
      EWAHPointer32 eWAHPointer32_0 = new EWAHPointer32(0, iteratingBufferedRunningLengthWord32_0, 0);
      int int0 = eWAHPointer32_0.beginOfRun();
      assertEquals(0, int0);
      assertEquals(2294, eWAHPointer32_0.endOfRun());
      assertFalse(eWAHPointer32_0.hasNoData());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      eWAHCompressedBitmap32_0.clear(0);
      EWAHCompressedBitmap32[] eWAHCompressedBitmap32Array0 = new EWAHCompressedBitmap32[2];
      eWAHCompressedBitmap32Array0[0] = eWAHCompressedBitmap32_0;
      eWAHCompressedBitmap32Array0[1] = eWAHCompressedBitmap32_0;
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_1 = EWAHCompressedBitmap32.threshold(12, eWAHCompressedBitmap32Array0);
      assertEquals(32, eWAHCompressedBitmap32_1.sizeInBits());
  }
}
