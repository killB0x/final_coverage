/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 00:07:24 GMT 2022
 */

package com.googlecode.javaewah32.symmetric;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.googlecode.javaewah32.BitCounter32;
import com.googlecode.javaewah32.BitmapStorage32;
import com.googlecode.javaewah32.EWAHCompressedBitmap32;
import com.googlecode.javaewah32.NonEmptyVirtualStorage32;
import com.googlecode.javaewah32.symmetric.ThresholdFuncBitmap32;
import java.nio.IntBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ThresholdFuncBitmap32_ESTest extends ThresholdFuncBitmap32_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ThresholdFuncBitmap32 thresholdFuncBitmap32_0 = new ThresholdFuncBitmap32(70);
      thresholdFuncBitmap32_0.litWeight = 70;
      thresholdFuncBitmap32_0.litWeight = 2364;
      BitCounter32 bitCounter32_0 = new BitCounter32();
      thresholdFuncBitmap32_0.dispatch(bitCounter32_0, 70, (-1950));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ThresholdFuncBitmap32 thresholdFuncBitmap32_0 = new ThresholdFuncBitmap32(70);
      thresholdFuncBitmap32_0.hammingWeight = 1;
      thresholdFuncBitmap32_0.litWeight = 70;
      BitCounter32 bitCounter32_0 = new BitCounter32();
      thresholdFuncBitmap32_0.dispatch(bitCounter32_0, (-1957), 70);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ThresholdFuncBitmap32 thresholdFuncBitmap32_0 = new ThresholdFuncBitmap32(70);
      thresholdFuncBitmap32_0.hammingWeight = 1;
      BitCounter32 bitCounter32_0 = new BitCounter32();
      thresholdFuncBitmap32_0.dispatch(bitCounter32_0, (-1957), 70);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ThresholdFuncBitmap32 thresholdFuncBitmap32_0 = new ThresholdFuncBitmap32((-11));
      NonEmptyVirtualStorage32 nonEmptyVirtualStorage32_0 = new NonEmptyVirtualStorage32();
      // Undeclared exception!
      try { 
        thresholdFuncBitmap32_0.dispatch(nonEmptyVirtualStorage32_0, (-1786), (-11));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ThresholdFuncBitmap32 thresholdFuncBitmap32_0 = new ThresholdFuncBitmap32((-1640531535));
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      // Undeclared exception!
      thresholdFuncBitmap32_0.dispatch(eWAHCompressedBitmap32_0, (-1640531535), 1983);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ThresholdFuncBitmap32 thresholdFuncBitmap32_0 = new ThresholdFuncBitmap32((-43));
      // Undeclared exception!
      try { 
        thresholdFuncBitmap32_0.dispatch((BitmapStorage32) null, (-43), (-43));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.symmetric.ThresholdFuncBitmap32", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ThresholdFuncBitmap32 thresholdFuncBitmap32_0 = new ThresholdFuncBitmap32(0);
      int[] intArray0 = new int[0];
      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(intBuffer0);
      // Undeclared exception!
      try { 
        thresholdFuncBitmap32_0.dispatch(eWAHCompressedBitmap32_0, 32, 64);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ThresholdFuncBitmap32 thresholdFuncBitmap32_0 = new ThresholdFuncBitmap32(70);
      thresholdFuncBitmap32_0.litWeight = 70;
      BitCounter32 bitCounter32_0 = new BitCounter32();
      thresholdFuncBitmap32_0.dispatch(bitCounter32_0, (-1957), 70);
      assertEquals(0, bitCounter32_0.getCount());
  }
}
