/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 00:50:01 GMT 2022
 */

package com.googlecode.javaewah32;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.googlecode.javaewah32.Buffer32;
import com.googlecode.javaewah32.EWAHCompressedBitmap32;
import com.googlecode.javaewah32.EWAHIterator32;
import com.googlecode.javaewah32.IntArray;
import com.googlecode.javaewah32.IntBufferWrapper;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EWAHIterator32_ESTest extends EWAHIterator32_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      EWAHIterator32 eWAHIterator32_0 = eWAHCompressedBitmap32_0.getEWAHIterator();
      assertTrue(eWAHIterator32_0.hasNext());
      
      eWAHIterator32_0.next();
      eWAHIterator32_0.next();
      boolean boolean0 = eWAHIterator32_0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IntArray intArray0 = new IntArray();
      EWAHIterator32 eWAHIterator32_0 = new EWAHIterator32(intArray0);
      eWAHIterator32_0.next();
      int int0 = eWAHIterator32_0.literalWords();
      assertFalse(eWAHIterator32_0.hasNext());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(0);
      EWAHIterator32 eWAHIterator32_0 = EWAHIterator32.getEWAHIterator(eWAHCompressedBitmap32_0);
      eWAHCompressedBitmap32_0.addWord(16, 16);
      int int0 = eWAHIterator32_0.literalWords();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      EWAHIterator32 eWAHIterator32_0 = eWAHCompressedBitmap32_0.getEWAHIterator();
      assertTrue(eWAHIterator32_0.hasNext());
      
      eWAHIterator32_0.next();
      eWAHIterator32_0.clone();
      assertFalse(eWAHIterator32_0.hasNext());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(131070);
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(byteBuffer0);
      EWAHIterator32 eWAHIterator32_0 = EWAHIterator32.getEWAHIterator(eWAHCompressedBitmap32_0);
      IntBufferWrapper intBufferWrapper0 = (IntBufferWrapper)eWAHIterator32_0.buffer();
      assertEquals(0, intBufferWrapper0.sizeInWords());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      EWAHIterator32 eWAHIterator32_0 = EWAHIterator32.getEWAHIterator(eWAHCompressedBitmap32_0);
      eWAHIterator32_0.buffer();
      assertTrue(eWAHIterator32_0.hasNext());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32((IntBuffer) null);
      EWAHIterator32 eWAHIterator32_0 = EWAHIterator32.getEWAHIterator(eWAHCompressedBitmap32_0);
      // Undeclared exception!
      try { 
        eWAHIterator32_0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.IntBufferWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      IntBuffer intBuffer0 = byteBuffer0.asIntBuffer();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(intBuffer0);
      EWAHIterator32 eWAHIterator32_0 = EWAHIterator32.getEWAHIterator(eWAHCompressedBitmap32_0);
      // Undeclared exception!
      try { 
        eWAHIterator32_0.next();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IntArray intArray0 = new IntArray();
      intArray0.trim();
      EWAHIterator32 eWAHIterator32_0 = new EWAHIterator32(intArray0);
      eWAHIterator32_0.next();
      // Undeclared exception!
      try { 
        eWAHIterator32_0.next();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("com.googlecode.javaewah32.IntArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IntBufferWrapper intBufferWrapper0 = new IntBufferWrapper((IntBuffer) null);
      EWAHIterator32 eWAHIterator32_0 = new EWAHIterator32(intBufferWrapper0);
      // Undeclared exception!
      try { 
        eWAHIterator32_0.literalWords();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.IntBufferWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWAHIterator32.getEWAHIterator((EWAHCompressedBitmap32) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.EWAHIterator32", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EWAHIterator32 eWAHIterator32_0 = null;
      try {
        eWAHIterator32_0 = new EWAHIterator32((Buffer32) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.EWAHIterator32", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      EWAHIterator32 eWAHIterator32_0 = eWAHCompressedBitmap32_0.getEWAHIterator();
      boolean boolean0 = eWAHIterator32_0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(17);
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(byteBuffer0);
      EWAHIterator32 eWAHIterator32_0 = EWAHIterator32.getEWAHIterator(eWAHCompressedBitmap32_0);
      boolean boolean0 = eWAHIterator32_0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[1];
      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);
      IntBufferWrapper intBufferWrapper0 = new IntBufferWrapper(intBuffer0, (-1));
      EWAHIterator32 eWAHIterator32_0 = new EWAHIterator32(intBufferWrapper0);
      Buffer32 buffer32_0 = eWAHIterator32_0.buffer();
      assertSame(buffer32_0, intBufferWrapper0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IntArray intArray0 = new IntArray();
      EWAHIterator32 eWAHIterator32_0 = new EWAHIterator32(intArray0);
      EWAHIterator32 eWAHIterator32_1 = eWAHIterator32_0.clone();
      assertTrue(eWAHIterator32_1.hasNext());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      EWAHIterator32 eWAHIterator32_0 = EWAHIterator32.getEWAHIterator(eWAHCompressedBitmap32_0);
      int int0 = eWAHIterator32_0.literalWords();
      assertEquals(0, int0);
  }
}
