/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 00:48:31 GMT 2022
 */

package com.googlecode.javaewah32;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.googlecode.javaewah32.Buffer32;
import com.googlecode.javaewah32.IntArray;
import com.googlecode.javaewah32.IntBufferWrapper;
import com.googlecode.javaewah32.ReverseEWAHIterator32;
import com.googlecode.javaewah32.RunningLengthWord32;
import java.nio.IntBuffer;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReverseEWAHIterator32_ESTest extends ReverseEWAHIterator32_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IntArray intArray0 = new IntArray();
      intArray0.negative_push_back(intArray0, (-534), (-534));
      ReverseEWAHIterator32 reverseEWAHIterator32_0 = new ReverseEWAHIterator32(intArray0);
      int int0 = reverseEWAHIterator32_0.position();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IntArray intArray0 = new IntArray();
      ReverseEWAHIterator32 reverseEWAHIterator32_0 = new ReverseEWAHIterator32(intArray0);
      RunningLengthWord32 runningLengthWord32_0 = new RunningLengthWord32((Buffer32) null, 1411);
      reverseEWAHIterator32_0.rlw = runningLengthWord32_0;
      reverseEWAHIterator32_0.buffer();
      assertEquals(1, reverseEWAHIterator32_0.position());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[8];
      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);
      IntBufferWrapper intBufferWrapper0 = new IntBufferWrapper(intBuffer0, 0);
      ReverseEWAHIterator32 reverseEWAHIterator32_0 = new ReverseEWAHIterator32(intBufferWrapper0);
      reverseEWAHIterator32_0.buffer();
      assertEquals(0, reverseEWAHIterator32_0.position());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IntBuffer intBuffer0 = IntBuffer.allocate(2902);
      IntBufferWrapper intBufferWrapper0 = new IntBufferWrapper(intBuffer0, (-1507));
      ReverseEWAHIterator32 reverseEWAHIterator32_0 = new ReverseEWAHIterator32(intBufferWrapper0);
      Buffer32 buffer32_0 = reverseEWAHIterator32_0.buffer();
      assertSame(buffer32_0, intBufferWrapper0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IntArray intArray0 = new IntArray();
      ReverseEWAHIterator32 reverseEWAHIterator32_0 = new ReverseEWAHIterator32(intArray0);
      reverseEWAHIterator32_0.previous();
      // Undeclared exception!
      try { 
        reverseEWAHIterator32_0.previous();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IntArray intArray0 = new IntArray();
      ReverseEWAHIterator32 reverseEWAHIterator32_0 = new ReverseEWAHIterator32(intArray0);
      reverseEWAHIterator32_0.rlw = null;
      // Undeclared exception!
      try { 
        reverseEWAHIterator32_0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.ReverseEWAHIterator32", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IntArray intArray0 = new IntArray();
      ReverseEWAHIterator32 reverseEWAHIterator32_0 = new ReverseEWAHIterator32(intArray0);
      reverseEWAHIterator32_0.rlw = null;
      // Undeclared exception!
      try { 
        reverseEWAHIterator32_0.buffer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.ReverseEWAHIterator32", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IntBuffer intBuffer0 = IntBuffer.allocate(32768);
      IntBufferWrapper intBufferWrapper0 = new IntBufferWrapper(intBuffer0, 32768);
      ReverseEWAHIterator32 reverseEWAHIterator32_0 = new ReverseEWAHIterator32(intBufferWrapper0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IntBuffer intBuffer0 = IntBuffer.allocate(597);
      IntBufferWrapper intBufferWrapper0 = new IntBufferWrapper(intBuffer0, Integer.MAX_VALUE);
      ReverseEWAHIterator32 reverseEWAHIterator32_0 = new ReverseEWAHIterator32(intBufferWrapper0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ReverseEWAHIterator32 reverseEWAHIterator32_0 = null;
      try {
        reverseEWAHIterator32_0 = new ReverseEWAHIterator32((Buffer32) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.ReverseEWAHIterator32", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);
      IntBufferWrapper intBufferWrapper0 = new IntBufferWrapper(intBuffer0);
      ReverseEWAHIterator32 reverseEWAHIterator32_0 = null;
      try {
        reverseEWAHIterator32_0 = new ReverseEWAHIterator32(intBufferWrapper0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IntArray intArray0 = new IntArray();
      ReverseEWAHIterator32 reverseEWAHIterator32_0 = new ReverseEWAHIterator32(intArray0);
      boolean boolean0 = reverseEWAHIterator32_0.hasPrevious();
      assertEquals(1, reverseEWAHIterator32_0.position());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IntArray intArray0 = new IntArray();
      ReverseEWAHIterator32 reverseEWAHIterator32_0 = new ReverseEWAHIterator32(intArray0);
      int int0 = reverseEWAHIterator32_0.position();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IntArray intArray0 = new IntArray();
      ReverseEWAHIterator32 reverseEWAHIterator32_0 = new ReverseEWAHIterator32(intArray0);
      reverseEWAHIterator32_0.buffer();
      assertEquals(1, reverseEWAHIterator32_0.position());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IntArray intArray0 = new IntArray();
      ReverseEWAHIterator32 reverseEWAHIterator32_0 = new ReverseEWAHIterator32(intArray0);
      assertEquals(1, reverseEWAHIterator32_0.position());
      
      reverseEWAHIterator32_0.previous();
      boolean boolean0 = reverseEWAHIterator32_0.hasPrevious();
      assertEquals(0, reverseEWAHIterator32_0.position());
      assertFalse(boolean0);
  }
}
