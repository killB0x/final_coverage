/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 00:10:34 GMT 2022
 */

package com.googlecode.javaewah32;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.googlecode.javaewah32.BitCounter32;
import com.googlecode.javaewah32.BitmapStorage32;
import com.googlecode.javaewah32.BufferedRunningLengthWord32;
import com.googlecode.javaewah32.EWAHCompressedBitmap32;
import com.googlecode.javaewah32.EWAHIterator32;
import com.googlecode.javaewah32.IntBufferWrapper;
import com.googlecode.javaewah32.IteratingBufferedRunningLengthWord32;
import com.googlecode.javaewah32.NonEmptyVirtualStorage32;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IteratingBufferedRunningLengthWord32_ESTest extends IteratingBufferedRunningLengthWord32_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EWAHCompressedBitmap32[] eWAHCompressedBitmap32Array0 = new EWAHCompressedBitmap32[2];
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      eWAHCompressedBitmap32Array0[0] = eWAHCompressedBitmap32_0;
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32Array0[0]);
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(2, eWAHCompressedBitmap32Array0.length);
      
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords(32);
      assertEquals((-32), iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals((-32), iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(2, eWAHCompressedBitmap32Array0.length);
      
      iteratingBufferedRunningLengthWord32_0.dischargeAsEmpty(eWAHCompressedBitmap32Array0[0]);
      assertEquals((-32), iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals((-32), iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(2, eWAHCompressedBitmap32Array0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords(1575);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals((-1575), iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals((-1575), iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.dischargeNegated(eWAHCompressedBitmap32_0, 65535);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals((-1575), iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals((-1575), iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, int0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.dischargeNegated(eWAHCompressedBitmap32_0, (-4094));
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, int0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[2];
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = EWAHCompressedBitmap32.bitmapOf(intArray0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(8, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(1, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(20, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(2, intArray0.length);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      BitCounter32 bitCounter32_0 = new BitCounter32();
      assertEquals(0, bitCounter32_0.getCount());
      assertNotNull(bitCounter32_0);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(8, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(1, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(20, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(1, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(1, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(2, intArray0.length);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) bitCounter32_0, 12);
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(8, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(1, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(20, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(1, bitCounter32_0.getCount());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1, int0);
      assertEquals(2, intArray0.length);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.writeLiteralWords(1587, eWAHCompressedBitmap32_0);
      assertEquals(6364, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(50784, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(6352, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_1 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertFalse(iteratingBufferedRunningLengthWord32_1.equals((Object)iteratingBufferedRunningLengthWord32_0));
      assertEquals(6364, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(50784, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(6352, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(1587, iteratingBufferedRunningLengthWord32_1.size());
      assertEquals(0, iteratingBufferedRunningLengthWord32_1.getRunningLength());
      assertEquals(1587, iteratingBufferedRunningLengthWord32_1.getNumberOfLiteralWords());
      assertFalse(iteratingBufferedRunningLengthWord32_1.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_1);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int0 = iteratingBufferedRunningLengthWord32_1.discharge((BitmapStorage32) eWAHCompressedBitmap32_0, 504);
      assertNotSame(iteratingBufferedRunningLengthWord32_1, iteratingBufferedRunningLengthWord32_0);
      assertFalse(iteratingBufferedRunningLengthWord32_1.equals((Object)iteratingBufferedRunningLengthWord32_0));
      assertEquals(8368, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(66912, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(8380, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(1083, iteratingBufferedRunningLengthWord32_1.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_1.getRunningLength());
      assertEquals(1083, iteratingBufferedRunningLengthWord32_1.size());
      assertFalse(iteratingBufferedRunningLengthWord32_1.getRunningBit());
      assertEquals(504, int0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords(1135);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals((-1135), iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals((-1135), iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.discardRunningWords();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals((-1135), iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals((-1135), iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords(Integer.MAX_VALUE);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals((-2147483647), iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals((-2147483647), iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.discardFirstWords(892);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) eWAHCompressedBitmap32_0);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.discardRunningWords();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32((-2422));
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.size();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, int0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32((-1178));
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) eWAHCompressedBitmap32_0, (-1178));
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals((-37696), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals((-1178), int0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int1 = iteratingBufferedRunningLengthWord32_0.size();
      assertFalse(int1 == int0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals((-37696), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(1178, int1);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords(1135);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals((-1135), iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals((-1135), iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.size();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals((-1135), iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals((-1135), iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals((-1135), int0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.getRunningLength();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, int0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32((-1178));
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) eWAHCompressedBitmap32_0, (-1178));
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals((-37696), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals((-1178), int0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int1 = iteratingBufferedRunningLengthWord32_0.getRunningLength();
      assertFalse(int1 == int0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals((-37696), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1178, int1);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32((-212));
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_1 = new EWAHCompressedBitmap32();
      assertTrue(eWAHCompressedBitmap32_1.equals((Object)eWAHCompressedBitmap32_0));
      assertEquals(0, eWAHCompressedBitmap32_1.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_1.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_1.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_1);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_1);
      assertTrue(eWAHCompressedBitmap32_1.equals((Object)eWAHCompressedBitmap32_0));
      assertEquals(0, eWAHCompressedBitmap32_1.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_1.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_1.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) eWAHCompressedBitmap32_0, (-3));
      assertNotSame(eWAHCompressedBitmap32_0, eWAHCompressedBitmap32_1);
      assertNotSame(eWAHCompressedBitmap32_1, eWAHCompressedBitmap32_0);
      assertTrue(eWAHCompressedBitmap32_0.equals((Object)eWAHCompressedBitmap32_1));
      assertTrue(eWAHCompressedBitmap32_1.equals((Object)eWAHCompressedBitmap32_0));
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals((-96), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, eWAHCompressedBitmap32_1.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_1.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_1.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(3, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(3, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals((-3), int0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      int int1 = iteratingBufferedRunningLengthWord32_0.dischargeNegated(eWAHCompressedBitmap32_1, 32);
      assertNotSame(eWAHCompressedBitmap32_1, eWAHCompressedBitmap32_0);
      assertFalse(eWAHCompressedBitmap32_1.equals((Object)eWAHCompressedBitmap32_0));
      assertFalse(int1 == int0);
      assertEquals(96, eWAHCompressedBitmap32_1.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_1.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_1.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(3, int1);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_1 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_1);
      assertFalse(eWAHCompressedBitmap32_1.equals((Object)eWAHCompressedBitmap32_0));
      assertFalse(iteratingBufferedRunningLengthWord32_1.equals((Object)iteratingBufferedRunningLengthWord32_0));
      assertEquals(96, eWAHCompressedBitmap32_1.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_1.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_1.serializedSizeInBytes());
      assertTrue(iteratingBufferedRunningLengthWord32_1.getRunningBit());
      assertEquals(3, iteratingBufferedRunningLengthWord32_1.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_1.getNumberOfLiteralWords());
      assertEquals(3, iteratingBufferedRunningLengthWord32_1.size());
      assertNotNull(iteratingBufferedRunningLengthWord32_1);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      boolean boolean0 = iteratingBufferedRunningLengthWord32_1.getRunningBit();
      assertNotSame(eWAHCompressedBitmap32_1, eWAHCompressedBitmap32_0);
      assertNotSame(iteratingBufferedRunningLengthWord32_1, iteratingBufferedRunningLengthWord32_0);
      assertFalse(eWAHCompressedBitmap32_1.equals((Object)eWAHCompressedBitmap32_0));
      assertFalse(iteratingBufferedRunningLengthWord32_1.equals((Object)iteratingBufferedRunningLengthWord32_0));
      assertEquals(96, eWAHCompressedBitmap32_1.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_1.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_1.serializedSizeInBytes());
      assertTrue(iteratingBufferedRunningLengthWord32_1.getRunningBit());
      assertEquals(3, iteratingBufferedRunningLengthWord32_1.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_1.getNumberOfLiteralWords());
      assertEquals(3, iteratingBufferedRunningLengthWord32_1.size());
      assertTrue(boolean0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32((-2422));
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      boolean boolean0 = iteratingBufferedRunningLengthWord32_0.getRunningBit();
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertFalse(boolean0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, int0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords((-1802));
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(1802, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(1802, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords();
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(1802, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(1802, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1802, int0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords(3129);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals((-3129), iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals((-3129), iteratingBufferedRunningLengthWord32_0.size());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords();
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals((-3129), iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals((-3129), iteratingBufferedRunningLengthWord32_0.size());
      assertEquals((-3129), int0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32((-1242));
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.getLiteralWordAt((-1));
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, int0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32((-1223));
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) eWAHCompressedBitmap32_0, (-1223));
      assertEquals((-39136), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1223, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(1223, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals((-1223), int0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int1 = iteratingBufferedRunningLengthWord32_0.dischargeNegated(eWAHCompressedBitmap32_0, 2);
      assertFalse(int1 == int0);
      assertEquals((-39072), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(20, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(8, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(1221, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1221, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(2, int1);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int2 = iteratingBufferedRunningLengthWord32_0.getLiteralWordAt(0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals((-39072), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(20, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(8, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(1221, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1221, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(5, int2);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.writeNegatedLiteralWords(32, eWAHCompressedBitmap32_0);
      assertEquals(132, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(1024, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(144, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.getLiteralWordAt(0);
      assertEquals(132, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(1024, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(144, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals((-1), int0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EWAHCompressedBitmap32[] eWAHCompressedBitmap32Array0 = new EWAHCompressedBitmap32[2];
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      eWAHCompressedBitmap32Array0[0] = eWAHCompressedBitmap32_0;
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32Array0[0]);
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(2, eWAHCompressedBitmap32Array0.length);
      
      BitCounter32 bitCounter32_0 = new BitCounter32();
      assertEquals(0, bitCounter32_0.getCount());
      assertNotNull(bitCounter32_0);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) bitCounter32_0, (-189));
      assertEquals(189, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(189, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, bitCounter32_0.getCount());
      assertEquals((-189), int0);
      assertEquals(2, eWAHCompressedBitmap32Array0.length);
      
      int int1 = iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) eWAHCompressedBitmap32Array0[0], 32);
      assertFalse(int1 == int0);
      assertEquals(157, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(157, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(32, int1);
      assertEquals(2, eWAHCompressedBitmap32Array0.length);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-15);
      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);
      assertArrayEquals(new int[] {(-15), 0, 0}, intArray0);
      assertTrue(intBuffer0.hasRemaining());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(0, intBuffer0.position());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=3 cap=3]", intBuffer0.toString());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals(3, intBuffer0.capacity());
      assertEquals(3, intBuffer0.limit());
      assertEquals(3, intBuffer0.remaining());
      assertFalse(intBuffer0.isDirect());
      assertTrue(intBuffer0.hasArray());
      assertNotNull(intBuffer0);
      assertEquals(3, intArray0.length);
      
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(intBuffer0);
      assertArrayEquals(new int[] {(-15), 0, 0}, intArray0);
      assertTrue(intBuffer0.hasRemaining());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(0, intBuffer0.position());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=3 cap=3]", intBuffer0.toString());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals(3, intBuffer0.capacity());
      assertEquals(3, intBuffer0.limit());
      assertEquals(3, intBuffer0.remaining());
      assertFalse(intBuffer0.isDirect());
      assertTrue(intBuffer0.hasArray());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(3, intArray0.length);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertArrayEquals(new int[] {(-15), 0, 0}, intArray0);
      assertTrue(intBuffer0.hasRemaining());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(0, intBuffer0.position());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=3 cap=3]", intBuffer0.toString());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals(3, intBuffer0.capacity());
      assertEquals(3, intBuffer0.limit());
      assertEquals(3, intBuffer0.remaining());
      assertFalse(intBuffer0.isDirect());
      assertTrue(intBuffer0.hasArray());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(32767, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertTrue(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(65528, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(98295, iteratingBufferedRunningLengthWord32_0.size());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(3, intArray0.length);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_1 = iteratingBufferedRunningLengthWord32_0.clone();
      assertArrayEquals(new int[] {(-15), 0, 0}, intArray0);
      assertNotSame(iteratingBufferedRunningLengthWord32_0, iteratingBufferedRunningLengthWord32_1);
      assertNotSame(iteratingBufferedRunningLengthWord32_1, iteratingBufferedRunningLengthWord32_0);
      assertFalse(iteratingBufferedRunningLengthWord32_1.equals((Object)iteratingBufferedRunningLengthWord32_0));
      assertTrue(intBuffer0.hasRemaining());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(0, intBuffer0.position());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=3 cap=3]", intBuffer0.toString());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals(3, intBuffer0.capacity());
      assertEquals(3, intBuffer0.limit());
      assertEquals(3, intBuffer0.remaining());
      assertFalse(intBuffer0.isDirect());
      assertTrue(intBuffer0.hasArray());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(32767, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertTrue(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(65528, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(98295, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(98295, iteratingBufferedRunningLengthWord32_1.size());
      assertEquals(65528, iteratingBufferedRunningLengthWord32_1.getRunningLength());
      assertTrue(iteratingBufferedRunningLengthWord32_1.getRunningBit());
      assertEquals(32767, iteratingBufferedRunningLengthWord32_1.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_1);
      assertEquals(3, intArray0.length);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32((-1223));
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords((-1223));
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(1223, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1223, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_1 = iteratingBufferedRunningLengthWord32_0.clone();
      assertNotSame(iteratingBufferedRunningLengthWord32_0, iteratingBufferedRunningLengthWord32_1);
      assertNotSame(iteratingBufferedRunningLengthWord32_1, iteratingBufferedRunningLengthWord32_0);
      assertFalse(iteratingBufferedRunningLengthWord32_1.equals((Object)iteratingBufferedRunningLengthWord32_0));
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(1223, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1223, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(1223, iteratingBufferedRunningLengthWord32_1.getNumberOfLiteralWords());
      assertEquals(1223, iteratingBufferedRunningLengthWord32_1.size());
      assertEquals(0, iteratingBufferedRunningLengthWord32_1.getRunningLength());
      assertFalse(iteratingBufferedRunningLengthWord32_1.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_1);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(2518);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords(2016);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals((-2016), iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals((-2016), iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_1 = iteratingBufferedRunningLengthWord32_0.clone();
      assertNotSame(iteratingBufferedRunningLengthWord32_0, iteratingBufferedRunningLengthWord32_1);
      assertNotSame(iteratingBufferedRunningLengthWord32_1, iteratingBufferedRunningLengthWord32_0);
      assertFalse(iteratingBufferedRunningLengthWord32_1.equals((Object)iteratingBufferedRunningLengthWord32_0));
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals((-2016), iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals((-2016), iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals((-2016), iteratingBufferedRunningLengthWord32_1.size());
      assertFalse(iteratingBufferedRunningLengthWord32_1.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_1.getRunningLength());
      assertEquals((-2016), iteratingBufferedRunningLengthWord32_1.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_1);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32((-189));
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      NonEmptyVirtualStorage32 nonEmptyVirtualStorage32_0 = new NonEmptyVirtualStorage32();
      assertNotNull(nonEmptyVirtualStorage32_0);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.writeNegatedLiteralWords(32, nonEmptyVirtualStorage32_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      iteratingBufferedRunningLengthWord32_0.writeNegatedLiteralWords(32767, eWAHCompressedBitmap32_0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32((-2422));
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.writeNegatedLiteralWords(63, (BitmapStorage32) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.IteratingBufferedRunningLengthWord32", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords((-1178));
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.writeNegatedLiteralWords(2300, eWAHCompressedBitmap32_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.writeLiteralWords(261, (BitmapStorage32) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.IteratingBufferedRunningLengthWord32", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      IntBuffer intBuffer0 = IntBuffer.allocate(32);
      assertTrue(intBuffer0.hasRemaining());
      assertFalse(intBuffer0.isDirect());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=32 cap=32]", intBuffer0.toString());
      assertTrue(intBuffer0.hasArray());
      assertEquals(32, intBuffer0.capacity());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(32, intBuffer0.remaining());
      assertEquals(32, intBuffer0.limit());
      assertEquals(0, intBuffer0.position());
      assertFalse(intBuffer0.isReadOnly());
      assertNotNull(intBuffer0);
      
      IntBufferWrapper intBufferWrapper0 = new IntBufferWrapper(intBuffer0);
      assertTrue(intBuffer0.hasRemaining());
      assertFalse(intBuffer0.isDirect());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=32 cap=32]", intBuffer0.toString());
      assertTrue(intBuffer0.hasArray());
      assertEquals(32, intBuffer0.capacity());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(32, intBuffer0.remaining());
      assertEquals(32, intBuffer0.limit());
      assertEquals(0, intBuffer0.position());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals(1, intBufferWrapper0.sizeInWords());
      assertNotNull(intBufferWrapper0);
      
      EWAHIterator32 eWAHIterator32_0 = new EWAHIterator32(intBufferWrapper0);
      assertTrue(intBuffer0.hasRemaining());
      assertFalse(intBuffer0.isDirect());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=32 cap=32]", intBuffer0.toString());
      assertTrue(intBuffer0.hasArray());
      assertEquals(32, intBuffer0.capacity());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(32, intBuffer0.remaining());
      assertEquals(32, intBuffer0.limit());
      assertEquals(0, intBuffer0.position());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals(1, intBufferWrapper0.sizeInWords());
      assertTrue(eWAHIterator32_0.hasNext());
      assertNotNull(eWAHIterator32_0);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHIterator32_0);
      assertTrue(intBuffer0.hasRemaining());
      assertFalse(intBuffer0.isDirect());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=32 cap=32]", intBuffer0.toString());
      assertTrue(intBuffer0.hasArray());
      assertEquals(32, intBuffer0.capacity());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(32, intBuffer0.remaining());
      assertEquals(32, intBuffer0.limit());
      assertEquals(0, intBuffer0.position());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals(1, intBufferWrapper0.sizeInWords());
      assertFalse(eWAHIterator32_0.hasNext());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.writeLiteralWords(3641, eWAHCompressedBitmap32_0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_1 = new EWAHCompressedBitmap32();
      assertTrue(eWAHCompressedBitmap32_1.equals((Object)eWAHCompressedBitmap32_0));
      assertEquals(0, eWAHCompressedBitmap32_1.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_1.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_1.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_1);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_1);
      assertTrue(eWAHCompressedBitmap32_1.equals((Object)eWAHCompressedBitmap32_0));
      assertEquals(0, eWAHCompressedBitmap32_1.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_1.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_1.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.writeLiteralWords(691, eWAHCompressedBitmap32_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(32);
      assertEquals(32, byteBuffer0.remaining());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(32, byteBuffer0.capacity());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=32 cap=32]", byteBuffer0.toString());
      assertEquals(32, byteBuffer0.limit());
      assertFalse(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(0, byteBuffer0.position());
      assertFalse(byteBuffer0.isReadOnly());
      assertNotNull(byteBuffer0);
      
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(byteBuffer0);
      assertEquals(32, byteBuffer0.remaining());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(32, byteBuffer0.capacity());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=32 cap=32]", byteBuffer0.toString());
      assertEquals(32, byteBuffer0.limit());
      assertFalse(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(0, byteBuffer0.position());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(12, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(32, byteBuffer0.remaining());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(32, byteBuffer0.capacity());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=32 cap=32]", byteBuffer0.toString());
      assertEquals(32, byteBuffer0.limit());
      assertFalse(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(0, byteBuffer0.position());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(12, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.getLiteralWordAt((-913));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // -912
         //
         verifyException("java.nio.ByteBufferAsIntBufferB", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.getLiteralWordAt(32);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      eWAHCompressedBitmap32_0.setSizeInBitsWithinLastWord(32);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(32, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(32, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(1, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(1, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      NonEmptyVirtualStorage32 nonEmptyVirtualStorage32_0 = new NonEmptyVirtualStorage32();
      assertNotNull(nonEmptyVirtualStorage32_0);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.dischargeNegated(nonEmptyVirtualStorage32_0, 32);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) eWAHCompressedBitmap32_0, (-1178));
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals((-37696), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals((-1178), int0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords(32);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals((-37696), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals((-32), iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1146, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      iteratingBufferedRunningLengthWord32_0.dischargeNegated(eWAHCompressedBitmap32_0, 20);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      eWAHCompressedBitmap32_0.setSizeInBitsWithinLastWord(32);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(32, eWAHCompressedBitmap32_0.sizeInBits());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(32, eWAHCompressedBitmap32_0.sizeInBits());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(1, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.dischargeNegated((BitmapStorage32) null, 131071);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.IteratingBufferedRunningLengthWord32", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EWAHCompressedBitmap32[] eWAHCompressedBitmap32Array0 = new EWAHCompressedBitmap32[2];
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      eWAHCompressedBitmap32Array0[1] = eWAHCompressedBitmap32_0;
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32Array0[1]);
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(2, eWAHCompressedBitmap32Array0.length);
      
      BitCounter32 bitCounter32_0 = new BitCounter32();
      assertEquals(0, bitCounter32_0.getCount());
      assertNotNull(bitCounter32_0);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) bitCounter32_0, (-189));
      assertEquals(189, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(189, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, bitCounter32_0.getCount());
      assertEquals((-189), int0);
      assertEquals(2, eWAHCompressedBitmap32Array0.length);
      
      IntBuffer intBuffer0 = IntBuffer.allocate(0);
      assertFalse(intBuffer0.isDirect());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=0 cap=0]", intBuffer0.toString());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals(0, intBuffer0.capacity());
      assertEquals(0, intBuffer0.position());
      assertFalse(intBuffer0.hasRemaining());
      assertEquals(0, intBuffer0.limit());
      assertEquals(0, intBuffer0.arrayOffset());
      assertTrue(intBuffer0.hasArray());
      assertEquals(0, intBuffer0.remaining());
      assertNotNull(intBuffer0);
      
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_1 = new EWAHCompressedBitmap32(intBuffer0);
      assertFalse(intBuffer0.isDirect());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=0 cap=0]", intBuffer0.toString());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals(0, intBuffer0.capacity());
      assertEquals(0, intBuffer0.position());
      assertFalse(intBuffer0.hasRemaining());
      assertEquals(0, intBuffer0.limit());
      assertEquals(0, intBuffer0.arrayOffset());
      assertTrue(intBuffer0.hasArray());
      assertEquals(0, intBuffer0.remaining());
      assertEquals(4, eWAHCompressedBitmap32_1.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_1.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_1.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_1);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.dischargeNegated(eWAHCompressedBitmap32_1, 32768);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords((-1178));
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.size());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.dischargeNegated(eWAHCompressedBitmap32_0, 32);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      BufferedRunningLengthWord32 bufferedRunningLengthWord32_0 = new BufferedRunningLengthWord32(32);
      assertEquals(16, bufferedRunningLengthWord32_0.getRunningLength());
      assertFalse(bufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, bufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(16, bufferedRunningLengthWord32_0.size());
      assertNotNull(bufferedRunningLengthWord32_0);
      assertFalse(bufferedRunningLengthWord32_0.RunningBit);
      assertEquals(0, bufferedRunningLengthWord32_0.literalWordOffset);
      assertEquals(16, bufferedRunningLengthWord32_0.RunningLength);
      
      // Undeclared exception!
      try { 
        IteratingBufferedRunningLengthWord32.discharge(bufferedRunningLengthWord32_0, (EWAHIterator32) null, (BitmapStorage32) eWAHCompressedBitmap32_0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.IteratingBufferedRunningLengthWord32", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      BufferedRunningLengthWord32 bufferedRunningLengthWord32_0 = new BufferedRunningLengthWord32((-3));
      assertEquals(98301, bufferedRunningLengthWord32_0.size());
      assertEquals(65534, bufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(32767, bufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertTrue(bufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(bufferedRunningLengthWord32_0);
      assertEquals(0, bufferedRunningLengthWord32_0.literalWordOffset);
      assertEquals(65534, bufferedRunningLengthWord32_0.RunningLength);
      assertTrue(bufferedRunningLengthWord32_0.RunningBit);
      
      EWAHIterator32 eWAHIterator32_0 = eWAHCompressedBitmap32_0.getEWAHIterator();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertTrue(eWAHIterator32_0.hasNext());
      assertNotNull(eWAHIterator32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_1 = new EWAHCompressedBitmap32();
      assertTrue(eWAHCompressedBitmap32_1.equals((Object)eWAHCompressedBitmap32_0));
      assertEquals(4, eWAHCompressedBitmap32_1.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_1.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_1.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_1);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      // Undeclared exception!
      try { 
        IteratingBufferedRunningLengthWord32.discharge(bufferedRunningLengthWord32_0, eWAHIterator32_0, (BitmapStorage32) eWAHCompressedBitmap32_1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) null, 32);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.IteratingBufferedRunningLengthWord32", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int[] intArray0 = new int[1];
      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);
      assertArrayEquals(new int[] {0}, intArray0);
      assertTrue(intBuffer0.hasArray());
      assertEquals(1, intBuffer0.capacity());
      assertEquals(1, intBuffer0.remaining());
      assertFalse(intBuffer0.isReadOnly());
      assertFalse(intBuffer0.isDirect());
      assertTrue(intBuffer0.hasRemaining());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=1 cap=1]", intBuffer0.toString());
      assertEquals(0, intBuffer0.position());
      assertEquals(1, intBuffer0.limit());
      assertEquals(0, intBuffer0.arrayOffset());
      assertNotNull(intBuffer0);
      assertEquals(1, intArray0.length);
      
      IntBufferWrapper intBufferWrapper0 = new IntBufferWrapper(intBuffer0, 1172);
      assertArrayEquals(new int[] {0}, intArray0);
      assertTrue(intBuffer0.hasArray());
      assertEquals(1, intBuffer0.capacity());
      assertEquals(1, intBuffer0.remaining());
      assertFalse(intBuffer0.isReadOnly());
      assertFalse(intBuffer0.isDirect());
      assertTrue(intBuffer0.hasRemaining());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=1 cap=1]", intBuffer0.toString());
      assertEquals(0, intBuffer0.position());
      assertEquals(1, intBuffer0.limit());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(1172, intBufferWrapper0.sizeInWords());
      assertNotNull(intBufferWrapper0);
      assertEquals(1, intArray0.length);
      
      EWAHIterator32 eWAHIterator32_0 = new EWAHIterator32(intBufferWrapper0);
      assertArrayEquals(new int[] {0}, intArray0);
      assertTrue(intBuffer0.hasArray());
      assertEquals(1, intBuffer0.capacity());
      assertEquals(1, intBuffer0.remaining());
      assertFalse(intBuffer0.isReadOnly());
      assertFalse(intBuffer0.isDirect());
      assertTrue(intBuffer0.hasRemaining());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=1 cap=1]", intBuffer0.toString());
      assertEquals(0, intBuffer0.position());
      assertEquals(1, intBuffer0.limit());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(1172, intBufferWrapper0.sizeInWords());
      assertTrue(eWAHIterator32_0.hasNext());
      assertNotNull(eWAHIterator32_0);
      assertEquals(1, intArray0.length);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHIterator32_0);
      assertArrayEquals(new int[] {0}, intArray0);
      assertTrue(intBuffer0.hasArray());
      assertEquals(1, intBuffer0.capacity());
      assertEquals(1, intBuffer0.remaining());
      assertFalse(intBuffer0.isReadOnly());
      assertFalse(intBuffer0.isDirect());
      assertTrue(intBuffer0.hasRemaining());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=1 cap=1]", intBuffer0.toString());
      assertEquals(0, intBuffer0.position());
      assertEquals(1, intBuffer0.limit());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(1172, intBufferWrapper0.sizeInWords());
      assertTrue(eWAHIterator32_0.hasNext());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(1, intArray0.length);
      
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = EWAHCompressedBitmap32.bitmapOf(intArray0);
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(8, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(20, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(1, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(1, intArray0.length);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) eWAHCompressedBitmap32_0, 1172);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords((-1178));
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) eWAHCompressedBitmap32_0, 32);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int[] intArray0 = new int[2];
      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(2, intBuffer0.remaining());
      assertFalse(intBuffer0.isDirect());
      assertTrue(intBuffer0.hasArray());
      assertFalse(intBuffer0.isReadOnly());
      assertTrue(intBuffer0.hasRemaining());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(0, intBuffer0.position());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=2 cap=2]", intBuffer0.toString());
      assertEquals(2, intBuffer0.capacity());
      assertEquals(2, intBuffer0.limit());
      assertNotNull(intBuffer0);
      assertEquals(2, intArray0.length);
      
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(intBuffer0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(2, intBuffer0.remaining());
      assertFalse(intBuffer0.isDirect());
      assertTrue(intBuffer0.hasArray());
      assertFalse(intBuffer0.isReadOnly());
      assertTrue(intBuffer0.hasRemaining());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(0, intBuffer0.position());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=2 cap=2]", intBuffer0.toString());
      assertEquals(2, intBuffer0.capacity());
      assertEquals(2, intBuffer0.limit());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(2, intArray0.length);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(2, intBuffer0.remaining());
      assertFalse(intBuffer0.isDirect());
      assertTrue(intBuffer0.hasArray());
      assertFalse(intBuffer0.isReadOnly());
      assertTrue(intBuffer0.hasRemaining());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(0, intBuffer0.position());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=2 cap=2]", intBuffer0.toString());
      assertEquals(2, intBuffer0.capacity());
      assertEquals(2, intBuffer0.limit());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(2, intArray0.length);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.IteratingBufferedRunningLengthWord32", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.discardLiteralWords((-1178));
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) eWAHCompressedBitmap32_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = null;
      try {
        iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32((EWAHIterator32) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.IteratingBufferedRunningLengthWord32", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      IntBuffer intBuffer0 = IntBuffer.allocate(0);
      assertFalse(intBuffer0.isDirect());
      assertEquals(0, intBuffer0.position());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=0 cap=0]", intBuffer0.toString());
      assertFalse(intBuffer0.hasRemaining());
      assertEquals(0, intBuffer0.limit());
      assertEquals(0, intBuffer0.capacity());
      assertEquals(0, intBuffer0.remaining());
      assertTrue(intBuffer0.hasArray());
      assertEquals(0, intBuffer0.arrayOffset());
      assertNotNull(intBuffer0);
      
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(intBuffer0);
      assertFalse(intBuffer0.isDirect());
      assertEquals(0, intBuffer0.position());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=0 cap=0]", intBuffer0.toString());
      assertFalse(intBuffer0.hasRemaining());
      assertEquals(0, intBuffer0.limit());
      assertEquals(0, intBuffer0.capacity());
      assertEquals(0, intBuffer0.remaining());
      assertTrue(intBuffer0.hasArray());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      EWAHIterator32 eWAHIterator32_0 = EWAHIterator32.getEWAHIterator(eWAHCompressedBitmap32_0);
      assertFalse(intBuffer0.isDirect());
      assertEquals(0, intBuffer0.position());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=0 cap=0]", intBuffer0.toString());
      assertFalse(intBuffer0.hasRemaining());
      assertEquals(0, intBuffer0.limit());
      assertEquals(0, intBuffer0.capacity());
      assertEquals(0, intBuffer0.remaining());
      assertTrue(intBuffer0.hasArray());
      assertEquals(0, intBuffer0.arrayOffset());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertTrue(eWAHIterator32_0.hasNext());
      assertNotNull(eWAHIterator32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = null;
      try {
        iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHIterator32_0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32((-212));
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      EWAHIterator32 eWAHIterator32_0 = EWAHIterator32.getEWAHIterator(eWAHCompressedBitmap32_0);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertTrue(eWAHIterator32_0.hasNext());
      assertNotNull(eWAHIterator32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHIterator32_0);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertFalse(eWAHIterator32_0.hasNext());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_1 = null;
      try {
        iteratingBufferedRunningLengthWord32_1 = new IteratingBufferedRunningLengthWord32(eWAHIterator32_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = null;
      try {
        iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32((EWAHCompressedBitmap32) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.EWAHIterator32", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=1 cap=1]", byteBuffer0.toString());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(1, byteBuffer0.remaining());
      assertEquals(1, byteBuffer0.capacity());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(1, byteBuffer0.limit());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(0, byteBuffer0.position());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertFalse(byteBuffer0.isDirect());
      assertNotNull(byteBuffer0);
      assertEquals(1, byteArray0.length);
      
      IntBuffer intBuffer0 = byteBuffer0.asIntBuffer();
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=1 cap=1]", byteBuffer0.toString());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(1, byteBuffer0.remaining());
      assertEquals(1, byteBuffer0.capacity());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(1, byteBuffer0.limit());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(0, byteBuffer0.position());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertFalse(byteBuffer0.isDirect());
      assertFalse(intBuffer0.isDirect());
      assertEquals(0, intBuffer0.remaining());
      assertEquals(0, intBuffer0.position());
      assertFalse(intBuffer0.hasRemaining());
      assertEquals(0, intBuffer0.limit());
      assertEquals(0, intBuffer0.capacity());
      assertEquals("java.nio.ByteBufferAsIntBufferB[pos=0 lim=0 cap=0]", intBuffer0.toString());
      assertFalse(intBuffer0.hasArray());
      assertFalse(intBuffer0.isReadOnly());
      assertNotNull(intBuffer0);
      assertEquals(1, byteArray0.length);
      
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(intBuffer0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=1 cap=1]", byteBuffer0.toString());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(1, byteBuffer0.remaining());
      assertEquals(1, byteBuffer0.capacity());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(1, byteBuffer0.limit());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(0, byteBuffer0.position());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertFalse(byteBuffer0.isDirect());
      assertFalse(intBuffer0.isDirect());
      assertEquals(0, intBuffer0.remaining());
      assertEquals(0, intBuffer0.position());
      assertFalse(intBuffer0.hasRemaining());
      assertEquals(0, intBuffer0.limit());
      assertEquals(0, intBuffer0.capacity());
      assertEquals("java.nio.ByteBufferAsIntBufferB[pos=0 lim=0 cap=0]", intBuffer0.toString());
      assertFalse(intBuffer0.hasArray());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(1, byteArray0.length);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = null;
      try {
        iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.nio.ByteBufferAsIntBufferB", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(32);
      assertEquals(32, byteBuffer0.capacity());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals("java.nio.DirectByteBuffer[pos=0 lim=32 cap=32]", byteBuffer0.toString());
      assertEquals(0, byteBuffer0.position());
      assertEquals(32, byteBuffer0.limit());
      assertTrue(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasRemaining());
      assertFalse(byteBuffer0.hasArray());
      assertEquals(32, byteBuffer0.remaining());
      assertNotNull(byteBuffer0);
      
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_1 = new EWAHCompressedBitmap32(byteBuffer0);
      assertTrue(eWAHCompressedBitmap32_1.equals((Object)eWAHCompressedBitmap32_0));
      assertEquals(32, byteBuffer0.capacity());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals("java.nio.DirectByteBuffer[pos=0 lim=32 cap=32]", byteBuffer0.toString());
      assertEquals(0, byteBuffer0.position());
      assertEquals(32, byteBuffer0.limit());
      assertTrue(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasRemaining());
      assertFalse(byteBuffer0.hasArray());
      assertEquals(32, byteBuffer0.remaining());
      assertEquals(12, eWAHCompressedBitmap32_1.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_1.sizeInBits());
      assertEquals(0, eWAHCompressedBitmap32_1.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_1);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      eWAHCompressedBitmap32_0.swap(eWAHCompressedBitmap32_1);
      assertNotSame(eWAHCompressedBitmap32_0, eWAHCompressedBitmap32_1);
      assertNotSame(eWAHCompressedBitmap32_1, eWAHCompressedBitmap32_0);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(12, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(32, byteBuffer0.capacity());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals("java.nio.DirectByteBuffer[pos=0 lim=32 cap=32]", byteBuffer0.toString());
      assertEquals(0, byteBuffer0.position());
      assertEquals(32, byteBuffer0.limit());
      assertTrue(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasRemaining());
      assertFalse(byteBuffer0.hasArray());
      assertEquals(32, byteBuffer0.remaining());
      assertEquals(0, eWAHCompressedBitmap32_1.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_1.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_1.serializedSizeInBytes());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = null;
      try {
        iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      boolean boolean0 = iteratingBufferedRunningLengthWord32_0.next();
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertFalse(boolean0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 2890;
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = EWAHCompressedBitmap32.bitmapOf(intArray0);
      assertArrayEquals(new int[] {2890, 0, 0, 0, 0}, intArray0);
      assertEquals(2891, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(28, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(5, intArray0.length);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertArrayEquals(new int[] {2890, 0, 0, 0, 0}, intArray0);
      assertEquals(2891, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(28, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.sizeInBytes());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(1, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(5, intArray0.length);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      boolean boolean0 = iteratingBufferedRunningLengthWord32_0.next();
      assertArrayEquals(new int[] {2890, 0, 0, 0, 0}, intArray0);
      assertEquals(2891, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(28, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.sizeInBytes());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(90, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(89, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertTrue(boolean0);
      assertEquals(5, intArray0.length);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32((-1178));
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) eWAHCompressedBitmap32_0, (-1178));
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals((-37696), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals((-1178), int0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int1 = iteratingBufferedRunningLengthWord32_0.dischargeNegated(eWAHCompressedBitmap32_0, 2);
      assertFalse(int1 == int0);
      assertEquals(20, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals((-37632), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(8, eWAHCompressedBitmap32_0.sizeInBytes());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1176, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(1176, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(2, int1);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_1 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertFalse(iteratingBufferedRunningLengthWord32_1.equals((Object)iteratingBufferedRunningLengthWord32_0));
      assertEquals(20, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals((-37632), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(8, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_1.getNumberOfLiteralWords());
      assertEquals(64358, iteratingBufferedRunningLengthWord32_1.getRunningLength());
      assertEquals(64358, iteratingBufferedRunningLengthWord32_1.size());
      assertFalse(iteratingBufferedRunningLengthWord32_1.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_1);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_1.discardFirstWords(64358);
      assertNotSame(iteratingBufferedRunningLengthWord32_1, iteratingBufferedRunningLengthWord32_0);
      assertFalse(iteratingBufferedRunningLengthWord32_1.equals((Object)iteratingBufferedRunningLengthWord32_0));
      assertEquals(20, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals((-37632), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(8, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_1.getNumberOfLiteralWords());
      assertEquals(2, iteratingBufferedRunningLengthWord32_1.size());
      assertEquals(2, iteratingBufferedRunningLengthWord32_1.getRunningLength());
      assertTrue(iteratingBufferedRunningLengthWord32_1.getRunningBit());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32((-1178));
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) eWAHCompressedBitmap32_0, (-1178));
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals((-37696), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(1178, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals((-1178), int0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.discardFirstWords(32);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals((-37696), eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(1146, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(1146, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      IntBuffer intBuffer0 = IntBuffer.allocate(1523);
      assertEquals(1523, intBuffer0.limit());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=1523 cap=1523]", intBuffer0.toString());
      assertEquals(0, intBuffer0.position());
      assertEquals(1523, intBuffer0.capacity());
      assertEquals(0, intBuffer0.arrayOffset());
      assertTrue(intBuffer0.hasRemaining());
      assertTrue(intBuffer0.hasArray());
      assertEquals(1523, intBuffer0.remaining());
      assertFalse(intBuffer0.isDirect());
      assertNotNull(intBuffer0);
      
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(intBuffer0);
      assertEquals(1523, intBuffer0.limit());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=1523 cap=1523]", intBuffer0.toString());
      assertEquals(0, intBuffer0.position());
      assertEquals(1523, intBuffer0.capacity());
      assertEquals(0, intBuffer0.arrayOffset());
      assertTrue(intBuffer0.hasRemaining());
      assertTrue(intBuffer0.hasArray());
      assertEquals(1523, intBuffer0.remaining());
      assertFalse(intBuffer0.isDirect());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(1523, intBuffer0.limit());
      assertFalse(intBuffer0.isReadOnly());
      assertEquals("java.nio.HeapIntBuffer[pos=0 lim=1523 cap=1523]", intBuffer0.toString());
      assertEquals(0, intBuffer0.position());
      assertEquals(1523, intBuffer0.capacity());
      assertEquals(0, intBuffer0.arrayOffset());
      assertTrue(intBuffer0.hasRemaining());
      assertTrue(intBuffer0.hasArray());
      assertEquals(1523, intBuffer0.remaining());
      assertFalse(intBuffer0.isDirect());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      // Undeclared exception!
      try { 
        iteratingBufferedRunningLengthWord32_0.writeNegatedLiteralWords(1523, eWAHCompressedBitmap32_0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      BufferedRunningLengthWord32 bufferedRunningLengthWord32_0 = new BufferedRunningLengthWord32(32);
      assertEquals(16, bufferedRunningLengthWord32_0.getRunningLength());
      assertFalse(bufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, bufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(16, bufferedRunningLengthWord32_0.size());
      assertNotNull(bufferedRunningLengthWord32_0);
      assertEquals(0, bufferedRunningLengthWord32_0.literalWordOffset);
      assertFalse(bufferedRunningLengthWord32_0.RunningBit);
      assertEquals(16, bufferedRunningLengthWord32_0.RunningLength);
      
      EWAHIterator32 eWAHIterator32_0 = EWAHIterator32.getEWAHIterator(eWAHCompressedBitmap32_0);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertTrue(eWAHIterator32_0.hasNext());
      assertNotNull(eWAHIterator32_0);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      IteratingBufferedRunningLengthWord32.discharge(bufferedRunningLengthWord32_0, eWAHIterator32_0, (BitmapStorage32) eWAHCompressedBitmap32_0);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(1024, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(16, bufferedRunningLengthWord32_0.getRunningLength());
      assertFalse(bufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, bufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(16, bufferedRunningLengthWord32_0.size());
      assertFalse(eWAHIterator32_0.hasNext());
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(0, bufferedRunningLengthWord32_0.literalWordOffset);
      assertFalse(bufferedRunningLengthWord32_0.RunningBit);
      assertEquals(16, bufferedRunningLengthWord32_0.RunningLength);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_0.writeLiteralWords(1587, eWAHCompressedBitmap32_0);
      assertEquals(6352, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(6364, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(50784, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      EWAHIterator32 eWAHIterator32_0 = eWAHCompressedBitmap32_0.getEWAHIterator();
      assertEquals(6352, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(6364, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(50784, eWAHCompressedBitmap32_0.sizeInBits());
      assertTrue(eWAHIterator32_0.hasNext());
      assertNotNull(eWAHIterator32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_1 = new IteratingBufferedRunningLengthWord32(eWAHIterator32_0);
      assertFalse(iteratingBufferedRunningLengthWord32_1.equals((Object)iteratingBufferedRunningLengthWord32_0));
      assertEquals(6352, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(6364, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(50784, eWAHCompressedBitmap32_0.sizeInBits());
      assertFalse(eWAHIterator32_0.hasNext());
      assertEquals(1587, iteratingBufferedRunningLengthWord32_1.size());
      assertEquals(0, iteratingBufferedRunningLengthWord32_1.getRunningLength());
      assertFalse(iteratingBufferedRunningLengthWord32_1.getRunningBit());
      assertEquals(1587, iteratingBufferedRunningLengthWord32_1.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_1);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      iteratingBufferedRunningLengthWord32_1.dischargeAsEmpty(eWAHCompressedBitmap32_0);
      assertNotSame(iteratingBufferedRunningLengthWord32_1, iteratingBufferedRunningLengthWord32_0);
      assertFalse(iteratingBufferedRunningLengthWord32_1.equals((Object)iteratingBufferedRunningLengthWord32_0));
      assertEquals(101568, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(6368, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(6356, eWAHCompressedBitmap32_0.sizeInBytes());
      assertFalse(eWAHIterator32_0.hasNext());
      assertEquals(0, iteratingBufferedRunningLengthWord32_1.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_1.getRunningLength());
      assertEquals(0, iteratingBufferedRunningLengthWord32_1.size());
      assertFalse(iteratingBufferedRunningLengthWord32_1.getRunningBit());
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      int int0 = iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) eWAHCompressedBitmap32_0, 0);
      assertEquals(16, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(0, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(4, eWAHCompressedBitmap32_0.sizeInBytes());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, int0);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[2] = 1992;
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = EWAHCompressedBitmap32.bitmapOf(intArray0);
      assertArrayEquals(new int[] {0, 0, 1992}, intArray0);
      assertEquals(1993, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(28, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(16, eWAHCompressedBitmap32_0.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(3, intArray0.length);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      EWAHCompressedBitmap32[] eWAHCompressedBitmap32Array0 = new EWAHCompressedBitmap32[2];
      eWAHCompressedBitmap32Array0[0] = eWAHCompressedBitmap32_0;
      eWAHCompressedBitmap32Array0[1] = eWAHCompressedBitmap32_0;
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_1 = EWAHCompressedBitmap32.and(eWAHCompressedBitmap32Array0);
      assertNotSame(eWAHCompressedBitmap32_1, eWAHCompressedBitmap32_0);
      assertTrue(eWAHCompressedBitmap32_1.equals((Object)eWAHCompressedBitmap32_0));
      assertEquals(28, eWAHCompressedBitmap32_1.serializedSizeInBytes());
      assertEquals(1993, eWAHCompressedBitmap32_1.sizeInBits());
      assertEquals(16, eWAHCompressedBitmap32_1.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_1);
      assertEquals(2, eWAHCompressedBitmap32Array0.length);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      
      EWAHCompressedBitmap32.xorWithContainer(eWAHCompressedBitmap32_1, eWAHCompressedBitmap32Array0);
      assertNotSame(eWAHCompressedBitmap32_1, eWAHCompressedBitmap32_0);
      assertFalse(eWAHCompressedBitmap32_1.equals((Object)eWAHCompressedBitmap32_0));
      assertEquals(1993, eWAHCompressedBitmap32_1.sizeInBits());
      assertEquals(20, eWAHCompressedBitmap32_1.serializedSizeInBytes());
      assertEquals(8, eWAHCompressedBitmap32_1.sizeInBytes());
      assertEquals(2, eWAHCompressedBitmap32Array0.length);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      int[] intArray0 = new int[3];
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = EWAHCompressedBitmap32.bitmapOf(intArray0);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(1, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(20, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(8, eWAHCompressedBitmap32_0.sizeInBytes());
      assertNotNull(eWAHCompressedBitmap32_0);
      assertEquals(3, intArray0.length);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      EWAHIterator32 eWAHIterator32_0 = EWAHIterator32.getEWAHIterator(eWAHCompressedBitmap32_0);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(1, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(20, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(8, eWAHCompressedBitmap32_0.sizeInBytes());
      assertTrue(eWAHIterator32_0.hasNext());
      assertNotNull(eWAHIterator32_0);
      assertEquals(3, intArray0.length);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHIterator32_0);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(1, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(20, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(8, eWAHCompressedBitmap32_0.sizeInBytes());
      assertFalse(eWAHIterator32_0.hasNext());
      assertEquals(1, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(1, iteratingBufferedRunningLengthWord32_0.size());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertNotNull(iteratingBufferedRunningLengthWord32_0);
      assertEquals(3, intArray0.length);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
      
      iteratingBufferedRunningLengthWord32_0.discardFirstWords(16);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(1, eWAHCompressedBitmap32_0.sizeInBits());
      assertEquals(20, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(8, eWAHCompressedBitmap32_0.sizeInBytes());
      assertFalse(eWAHIterator32_0.hasNext());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getNumberOfLiteralWords());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.size());
      assertFalse(iteratingBufferedRunningLengthWord32_0.getRunningBit());
      assertEquals(0, iteratingBufferedRunningLengthWord32_0.getRunningLength());
      assertEquals(3, intArray0.length);
      assertEquals(32, EWAHCompressedBitmap32.WORD_IN_BITS);
      assertTrue(EWAHCompressedBitmap32.ADJUST_CONTAINER_SIZE_WHEN_AGGREGATING);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      iteratingBufferedRunningLengthWord32_0.writeLiteralWords(1587, eWAHCompressedBitmap32_0);
      iteratingBufferedRunningLengthWord32_0.discharge((BitmapStorage32) eWAHCompressedBitmap32_0, (-119));
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_1 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      int int0 = iteratingBufferedRunningLengthWord32_1.dischargeNegated(eWAHCompressedBitmap32_0, 65417);
      assertEquals(12720, eWAHCompressedBitmap32_0.serializedSizeInBytes());
      assertEquals(65417, int0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_1 = iteratingBufferedRunningLengthWord32_0.clone();
      assertNotSame(iteratingBufferedRunningLengthWord32_1, iteratingBufferedRunningLengthWord32_0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      eWAHCompressedBitmap32_0.setSizeInBitsWithinLastWord(32);
      IteratingBufferedRunningLengthWord32 iteratingBufferedRunningLengthWord32_0 = new IteratingBufferedRunningLengthWord32(eWAHCompressedBitmap32_0);
      iteratingBufferedRunningLengthWord32_0.dischargeNegated(eWAHCompressedBitmap32_0, 32);
      assertEquals(8, eWAHCompressedBitmap32_0.sizeInBytes());
      
      EWAHCompressedBitmap32[] eWAHCompressedBitmap32Array0 = new EWAHCompressedBitmap32[2];
      eWAHCompressedBitmap32Array0[0] = eWAHCompressedBitmap32_0;
      eWAHCompressedBitmap32Array0[1] = eWAHCompressedBitmap32_0;
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_1 = EWAHCompressedBitmap32.xor(eWAHCompressedBitmap32Array0);
      assertEquals(16, eWAHCompressedBitmap32_1.serializedSizeInBytes());
  }
}
