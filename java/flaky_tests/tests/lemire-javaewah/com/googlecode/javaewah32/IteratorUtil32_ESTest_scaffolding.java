/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Nov 15 00:15:14 GMT 2022
 */

package com.googlecode.javaewah32;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class IteratorUtil32_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.googlecode.javaewah32.IteratorUtil32"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IteratorUtil32_ESTest_scaffolding.class.getClassLoader() ,
      "com.googlecode.javaewah32.NonEmptyVirtualStorage32$NonEmptyException",
      "com.googlecode.javaewah32.RunningLengthWord32",
      "com.googlecode.javaewah32.symmetric.RunningBitmapMerge32",
      "com.googlecode.javaewah32.ReverseEWAHIterator32",
      "com.googlecode.javaewah32.symmetric.BitmapSymmetricAlgorithm32",
      "com.googlecode.javaewah32.BufferedRunningLengthWord32",
      "com.googlecode.javaewah.datastructure.BitSet",
      "com.googlecode.javaewah.ChunkIterator",
      "com.googlecode.javaewah.IntIterator",
      "com.googlecode.javaewah32.EWAHIterator32",
      "com.googlecode.javaewah32.symmetric.EWAHPointer32",
      "com.googlecode.javaewah32.IntIteratorOverIteratingRLW32",
      "com.googlecode.javaewah32.symmetric.ThresholdFuncBitmap32",
      "com.googlecode.javaewah.datastructure.PriorityQ",
      "com.googlecode.javaewah32.Buffer32",
      "com.googlecode.javaewah.LogicalElement",
      "com.googlecode.javaewah32.IteratorUtil32",
      "com.googlecode.javaewah32.IteratingRLW32",
      "com.googlecode.javaewah32.IntArray",
      "com.googlecode.javaewah32.NonEmptyVirtualStorage32",
      "com.googlecode.javaewah32.IteratorUtil32$1",
      "com.googlecode.javaewah32.symmetric.RunningBitmapMerge32$1",
      "com.googlecode.javaewah32.IteratingBufferedRunningLengthWord32",
      "com.googlecode.javaewah32.IntIteratorImpl32",
      "com.googlecode.javaewah32.symmetric.UpdateableBitmapFunction32",
      "com.googlecode.javaewah32.BitmapStorage32",
      "com.googlecode.javaewah32.EWAHCompressedBitmap32",
      "com.googlecode.javaewah.datastructure.WordArray",
      "com.googlecode.javaewah32.IntBufferWrapper"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IteratorUtil32_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.googlecode.javaewah32.IteratorUtil32",
      "com.googlecode.javaewah32.IteratorUtil32$1",
      "com.googlecode.javaewah32.XORIt",
      "com.googlecode.javaewah32.EWAHCompressedBitmap32",
      "com.googlecode.javaewah32.IntArray",
      "com.googlecode.javaewah32.RunningLengthWord32",
      "com.googlecode.javaewah32.IteratingBufferedRunningLengthWord32",
      "com.googlecode.javaewah32.EWAHIterator32",
      "com.googlecode.javaewah32.BufferedRunningLengthWord32",
      "com.googlecode.javaewah32.ORIt",
      "com.googlecode.javaewah32.AndIt",
      "com.googlecode.javaewah32.BufferedIterator32",
      "com.googlecode.javaewah32.symmetric.RunningBitmapMerge32",
      "com.googlecode.javaewah32.symmetric.UpdateableBitmapFunction32",
      "com.googlecode.javaewah32.symmetric.ThresholdFuncBitmap32",
      "com.googlecode.javaewah.datastructure.BitSet",
      "com.googlecode.javaewah.datastructure.PriorityQ",
      "com.googlecode.javaewah32.symmetric.RunningBitmapMerge32$1",
      "com.googlecode.javaewah32.symmetric.EWAHPointer32",
      "com.googlecode.javaewah32.IntIteratorOverIteratingRLW32",
      "com.googlecode.javaewah32.FastAggregation32",
      "com.googlecode.javaewah32.FastAggregation32$5",
      "com.googlecode.javaewah32.IntBufferWrapper",
      "com.googlecode.javaewah32.IntIteratorImpl32",
      "com.googlecode.javaewah32.FastAggregation32$4",
      "com.googlecode.javaewah32.ReverseIntIterator32",
      "com.googlecode.javaewah32.ReverseEWAHIterator32",
      "com.googlecode.javaewah32.BitCounter32",
      "com.googlecode.javaewah32.FastAggregation32$3",
      "com.googlecode.javaewah32.EWAHCompressedBitmap32$1",
      "com.googlecode.javaewah32.ClearIntIterator32",
      "com.googlecode.javaewah32.ChunkIteratorImpl32",
      "com.googlecode.javaewah32.NonEmptyVirtualStorage32$NonEmptyException",
      "com.googlecode.javaewah32.NonEmptyVirtualStorage32",
      "com.googlecode.javaewah32.FastAggregation32$8"
    );
  }
}
