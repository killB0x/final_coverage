/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 00:43:31 GMT 2022
 */

package com.googlecode.javaewah32;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.googlecode.javaewah32.BitCounter32;
import com.googlecode.javaewah32.Buffer32;
import com.googlecode.javaewah32.IntArray;
import com.googlecode.javaewah32.IntBufferWrapper;
import java.nio.IntBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BitCounter32_ESTest extends BitCounter32_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      int[] intArray0 = new int[9];
      intArray0[1] = 110;
      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);
      IntBufferWrapper intBufferWrapper0 = new IntBufferWrapper(intBuffer0);
      // Undeclared exception!
      try { 
        bitCounter32_0.addStreamOfNegatedLiteralWords(intBufferWrapper0, 1, 750);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      IntArray intArray0 = new IntArray();
      bitCounter32_0.addStreamOfNegatedLiteralWords(intArray0, 0, (-1518));
      assertEquals(1, intArray0.sizeInWords());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      IntArray intArray0 = new IntArray(423);
      intArray0.ensureCapacity(2229);
      // Undeclared exception!
      try { 
        bitCounter32_0.addStreamOfLiteralWords(intArray0, 2201, 4085);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      IntArray intArray0 = new IntArray(1506);
      bitCounter32_0.addStreamOfLiteralWords(intArray0, (-3071), (-3071));
      assertEquals(0, intArray0.getLastWord());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      bitCounter32_0.addLiteralWord(1506);
      int int0 = bitCounter32_0.getCount();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      bitCounter32_0.addStreamOfEmptyWords(true, (-2402));
      int int0 = bitCounter32_0.getCount();
      assertEquals((-76864), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      IntBufferWrapper intBufferWrapper0 = new IntBufferWrapper((IntBuffer) null);
      // Undeclared exception!
      try { 
        bitCounter32_0.addStreamOfNegatedLiteralWords(intBufferWrapper0, 6, 591);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      IntArray intArray0 = new IntArray(0);
      // Undeclared exception!
      try { 
        bitCounter32_0.addStreamOfNegatedLiteralWords(intArray0, (-510), 32);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      // Undeclared exception!
      try { 
        bitCounter32_0.addStreamOfLiteralWords((Buffer32) null, 0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.BitCounter32", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      IntBuffer intBuffer0 = IntBuffer.allocate(6764);
      IntBufferWrapper intBufferWrapper0 = new IntBufferWrapper(intBuffer0);
      // Undeclared exception!
      try { 
        bitCounter32_0.addStreamOfLiteralWords(intBufferWrapper0, (-2147481173), 1520);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      bitCounter32_0.addStreamOfEmptyWords(false, 162);
      assertEquals(0, bitCounter32_0.getCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      IntArray intArray0 = new IntArray();
      bitCounter32_0.addStreamOfLiteralWords(intArray0, 1, 1);
      assertEquals(0, bitCounter32_0.getCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      bitCounter32_0.setSizeInBitsWithinLastWord(0);
      assertEquals(0, bitCounter32_0.getCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      bitCounter32_0.clear();
      assertEquals(0, bitCounter32_0.getCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      int[] intArray0 = new int[4];
      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);
      IntBufferWrapper intBufferWrapper0 = new IntBufferWrapper(intBuffer0);
      bitCounter32_0.addStreamOfNegatedLiteralWords(intBufferWrapper0, 0, 1);
      assertEquals(32, bitCounter32_0.getCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      int int0 = bitCounter32_0.getCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BitCounter32 bitCounter32_0 = new BitCounter32();
      bitCounter32_0.addWord(1);
      assertEquals(1, bitCounter32_0.getCount());
  }
}
