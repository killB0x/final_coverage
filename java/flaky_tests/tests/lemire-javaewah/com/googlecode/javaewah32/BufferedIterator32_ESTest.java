/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 00:21:08 GMT 2022
 */

package com.googlecode.javaewah32;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.googlecode.javaewah.CloneableIterator;
import com.googlecode.javaewah32.AndIt;
import com.googlecode.javaewah32.BufferedIterator32;
import com.googlecode.javaewah32.EWAHCompressedBitmap32;
import com.googlecode.javaewah32.EWAHIterator32;
import com.googlecode.javaewah32.IteratingRLW32;
import com.googlecode.javaewah32.ORIt;
import com.googlecode.javaewah32.XORIt;
import java.nio.IntBuffer;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BufferedIterator32_ESTest extends BufferedIterator32_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      eWAHCompressedBitmap32_0.addLiteralWord(1811);
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 1811);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      bufferedIterator32_0.discardRunningWords();
      assertEquals(1, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      bufferedIterator32_0.discardLiteralWords(2147483615);
      bufferedIterator32_0.discardFirstWords(560);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 1811);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      int int0 = bufferedIterator32_0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 1320);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      bufferedIterator32_0.discardLiteralWords((-12));
      int int0 = bufferedIterator32_0.size();
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 64);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      bufferedIterator32_0.discardLiteralWords(32);
      int int0 = bufferedIterator32_0.size();
      assertEquals((-32), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 1811);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      int int0 = bufferedIterator32_0.getRunningLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      int[] intArray0 = new int[2];
      intArray0[0] = 32;
      intArray0[1] = 32;
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = EWAHCompressedBitmap32.bitmapOf(intArray0);
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      int int0 = bufferedIterator32_0.getRunningLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      boolean boolean0 = linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 1811);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      boolean boolean1 = bufferedIterator32_0.getRunningBit();
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 1811);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      int int0 = bufferedIterator32_0.getNumberOfLiteralWords();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      bufferedIterator32_0.discardLiteralWords((-1265));
      int int0 = bufferedIterator32_0.getNumberOfLiteralWords();
      assertEquals(1265, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 1811);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      bufferedIterator32_0.discardLiteralWords(12);
      int int0 = bufferedIterator32_0.getNumberOfLiteralWords();
      assertEquals((-12), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 1);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      int int0 = bufferedIterator32_0.getLiteralWordAt((-1));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 1811);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      BufferedIterator32 bufferedIterator32_1 = bufferedIterator32_0.clone();
      assertNotSame(bufferedIterator32_1, bufferedIterator32_0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      XORIt xORIt0 = new XORIt(linkedList0, 1817);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      // Undeclared exception!
      try { 
        bufferedIterator32_0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.BufferedIterator32", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      // Undeclared exception!
      try { 
        bufferedIterator32_0.getLiteralWordAt(32);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      AndIt andIt0 = new AndIt(linkedList0, 1336);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(andIt0);
      // Undeclared exception!
      try { 
        bufferedIterator32_0.discardLiteralWords(1336);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.BufferedIterator32", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      ORIt oRIt0 = new ORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(oRIt0);
      // Undeclared exception!
      try { 
        bufferedIterator32_0.clone();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.googlecode.javaewah32.ORIt cannot be cast to class com.googlecode.javaewah32.XORIt (com.googlecode.javaewah32.ORIt and com.googlecode.javaewah32.XORIt are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @2509d670)
         //
         verifyException("com.googlecode.javaewah32.ORIt", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BufferedIterator32 bufferedIterator32_0 = null;
      try {
        bufferedIterator32_0 = new BufferedIterator32((CloneableIterator<EWAHIterator32>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.BufferedIterator32", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      AndIt andIt0 = new AndIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = null;
      try {
        bufferedIterator32_0 = new BufferedIterator32(andIt0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      bufferedIterator32_0.discardLiteralWords((-1265));
      linkedList0.offer(bufferedIterator32_0);
      BufferedIterator32 bufferedIterator32_1 = null;
      try {
        bufferedIterator32_1 = new BufferedIterator32(xORIt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      eWAHCompressedBitmap32_0.set(1234);
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      boolean boolean0 = bufferedIterator32_0.next();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      boolean boolean0 = bufferedIterator32_0.next();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      int[] intArray0 = new int[1];
      intArray0[0] = 1811;
      IntBuffer intBuffer0 = IntBuffer.wrap(intArray0);
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32(intBuffer0);
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.add(iteratingRLW32_0);
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_1 = new EWAHCompressedBitmap32();
      eWAHCompressedBitmap32_1.addLiteralWord(1811);
      IteratingRLW32 iteratingRLW32_1 = eWAHCompressedBitmap32_1.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_1);
      XORIt xORIt0 = new XORIt(linkedList0, 1811);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      boolean boolean0 = bufferedIterator32_0.next();
      assertEquals(2, linkedList0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      bufferedIterator32_0.discardRunningWords();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      bufferedIterator32_0.discardLiteralWords(32);
      bufferedIterator32_0.discardRunningWords();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      bufferedIterator32_0.discardLiteralWords(0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      eWAHCompressedBitmap32_0.setSizeInBits(2147483615, false);
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offerFirst(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 1);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      // Undeclared exception!
      bufferedIterator32_0.discardFirstWords(1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      bufferedIterator32_0.discardLiteralWords((-1265));
      bufferedIterator32_0.discardFirstWords(1233);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      bufferedIterator32_0.discardLiteralWords((-1));
      bufferedIterator32_0.discardFirstWords(1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      EWAHCompressedBitmap32 eWAHCompressedBitmap32_0 = new EWAHCompressedBitmap32();
      eWAHCompressedBitmap32_0.set(1234);
      IteratingRLW32 iteratingRLW32_0 = eWAHCompressedBitmap32_0.getIteratingRLW();
      linkedList0.offer(iteratingRLW32_0);
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      bufferedIterator32_0.discardFirstWords(1);
      assertEquals(1, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      XORIt xORIt0 = new XORIt(linkedList0, 1);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      // Undeclared exception!
      try { 
        bufferedIterator32_0.discardFirstWords(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      // Undeclared exception!
      try { 
        bufferedIterator32_0.getNumberOfLiteralWords();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.BufferedIterator32", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      // Undeclared exception!
      try { 
        bufferedIterator32_0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.BufferedIterator32", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      XORIt xORIt0 = new XORIt(linkedList0, 64);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      // Undeclared exception!
      try { 
        bufferedIterator32_0.size();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.BufferedIterator32", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      XORIt xORIt0 = new XORIt(linkedList0, 1);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      // Undeclared exception!
      try { 
        bufferedIterator32_0.getLiteralWordAt((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.BufferedIterator32", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      XORIt xORIt0 = new XORIt(linkedList0, 1811);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      // Undeclared exception!
      try { 
        bufferedIterator32_0.getRunningLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.BufferedIterator32", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<IteratingRLW32> linkedList0 = new LinkedList<IteratingRLW32>();
      XORIt xORIt0 = new XORIt(linkedList0, 32);
      BufferedIterator32 bufferedIterator32_0 = new BufferedIterator32(xORIt0);
      // Undeclared exception!
      try { 
        bufferedIterator32_0.getRunningBit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah32.BufferedIterator32", e);
      }
  }
}
