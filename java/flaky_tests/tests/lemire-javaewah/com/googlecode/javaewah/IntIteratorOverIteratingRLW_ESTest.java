/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 00:26:10 GMT 2022
 */

package com.googlecode.javaewah;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.googlecode.javaewah.BufferedXORIterator;
import com.googlecode.javaewah.EWAHCompressedBitmap;
import com.googlecode.javaewah.EWAHIterator;
import com.googlecode.javaewah.IntIteratorOverIteratingRLW;
import com.googlecode.javaewah.IteratingBufferedRunningLengthWord;
import com.googlecode.javaewah.IteratingRLW;
import com.googlecode.javaewah.LongBufferWrapper;
import java.nio.LongBuffer;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntIteratorOverIteratingRLW_ESTest extends IntIteratorOverIteratingRLW_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<IteratingRLW> linkedList0 = new LinkedList<IteratingRLW>();
      BufferedXORIterator bufferedXORIterator0 = new BufferedXORIterator(linkedList0, 0);
      EWAHIterator eWAHIterator0 = bufferedXORIterator0.next();
      IteratingBufferedRunningLengthWord iteratingBufferedRunningLengthWord0 = new IteratingBufferedRunningLengthWord(eWAHIterator0);
      iteratingBufferedRunningLengthWord0.discardLiteralWords(64L);
      IntIteratorOverIteratingRLW intIteratorOverIteratingRLW0 = new IntIteratorOverIteratingRLW(iteratingBufferedRunningLengthWord0);
      assertEquals(0, iteratingBufferedRunningLengthWord0.getNumberOfLiteralWords());
      assertFalse(intIteratorOverIteratingRLW0.hasNext());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 3024;
      EWAHCompressedBitmap eWAHCompressedBitmap0 = EWAHCompressedBitmap.bitmapOf(intArray0);
      IteratingBufferedRunningLengthWord iteratingBufferedRunningLengthWord0 = new IteratingBufferedRunningLengthWord(eWAHCompressedBitmap0);
      IntIteratorOverIteratingRLW intIteratorOverIteratingRLW0 = new IntIteratorOverIteratingRLW(iteratingBufferedRunningLengthWord0);
      int int0 = intIteratorOverIteratingRLW0.next();
      assertEquals(46L, iteratingBufferedRunningLengthWord0.getRunningLength());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      long[] longArray0 = new long[6];
      longArray0[0] = (-982L);
      longArray0[1] = (-1056L);
      LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
      EWAHCompressedBitmap eWAHCompressedBitmap0 = new EWAHCompressedBitmap(longBuffer0);
      EWAHIterator eWAHIterator0 = EWAHIterator.getEWAHIterator(eWAHCompressedBitmap0);
      IteratingBufferedRunningLengthWord iteratingBufferedRunningLengthWord0 = new IteratingBufferedRunningLengthWord(eWAHIterator0);
      IntIteratorOverIteratingRLW intIteratorOverIteratingRLW0 = new IntIteratorOverIteratingRLW(iteratingBufferedRunningLengthWord0);
      int int0 = intIteratorOverIteratingRLW0.next();
      assertTrue(intIteratorOverIteratingRLW0.hasNext());
      assertEquals((-31419), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int[] intArray0 = new int[6];
      EWAHCompressedBitmap eWAHCompressedBitmap0 = EWAHCompressedBitmap.bitmapOf(intArray0);
      IteratingBufferedRunningLengthWord iteratingBufferedRunningLengthWord0 = new IteratingBufferedRunningLengthWord(eWAHCompressedBitmap0);
      IntIteratorOverIteratingRLW intIteratorOverIteratingRLW0 = new IntIteratorOverIteratingRLW(iteratingBufferedRunningLengthWord0);
      boolean boolean0 = intIteratorOverIteratingRLW0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IntIteratorOverIteratingRLW intIteratorOverIteratingRLW0 = null;
      try {
        intIteratorOverIteratingRLW0 = new IntIteratorOverIteratingRLW((IteratingRLW) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah.IntIteratorOverIteratingRLW", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      long[] longArray0 = new long[13];
      LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
      LongBufferWrapper longBufferWrapper0 = new LongBufferWrapper(longBuffer0, 1908);
      EWAHIterator eWAHIterator0 = new EWAHIterator(longBufferWrapper0);
      IteratingBufferedRunningLengthWord iteratingBufferedRunningLengthWord0 = new IteratingBufferedRunningLengthWord(eWAHIterator0);
      IntIteratorOverIteratingRLW intIteratorOverIteratingRLW0 = null;
      try {
        intIteratorOverIteratingRLW0 = new IntIteratorOverIteratingRLW(iteratingBufferedRunningLengthWord0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EWAHCompressedBitmap eWAHCompressedBitmap0 = new EWAHCompressedBitmap();
      IteratingBufferedRunningLengthWord iteratingBufferedRunningLengthWord0 = new IteratingBufferedRunningLengthWord(eWAHCompressedBitmap0);
      iteratingBufferedRunningLengthWord0.discardLiteralWords((-2L));
      IntIteratorOverIteratingRLW intIteratorOverIteratingRLW0 = null;
      try {
        intIteratorOverIteratingRLW0 = new IntIteratorOverIteratingRLW(iteratingBufferedRunningLengthWord0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 4
         //
         verifyException("com.googlecode.javaewah.LongArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      long[] longArray0 = new long[2];
      longArray0[0] = 1011L;
      LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
      EWAHCompressedBitmap eWAHCompressedBitmap0 = new EWAHCompressedBitmap(longBuffer0);
      IteratingBufferedRunningLengthWord iteratingBufferedRunningLengthWord0 = new IteratingBufferedRunningLengthWord(eWAHCompressedBitmap0);
      IntIteratorOverIteratingRLW intIteratorOverIteratingRLW0 = new IntIteratorOverIteratingRLW(iteratingBufferedRunningLengthWord0);
      int int0 = intIteratorOverIteratingRLW0.next();
      assertTrue(intIteratorOverIteratingRLW0.hasNext());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      long[] longArray0 = new long[6];
      LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
      EWAHCompressedBitmap eWAHCompressedBitmap0 = new EWAHCompressedBitmap(longBuffer0);
      EWAHIterator eWAHIterator0 = EWAHIterator.getEWAHIterator(eWAHCompressedBitmap0);
      IteratingBufferedRunningLengthWord iteratingBufferedRunningLengthWord0 = new IteratingBufferedRunningLengthWord(eWAHIterator0);
      IntIteratorOverIteratingRLW intIteratorOverIteratingRLW0 = new IntIteratorOverIteratingRLW(iteratingBufferedRunningLengthWord0);
      int int0 = intIteratorOverIteratingRLW0.next();
      assertFalse(intIteratorOverIteratingRLW0.hasNext());
      assertEquals(64, int0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      EWAHCompressedBitmap eWAHCompressedBitmap0 = new EWAHCompressedBitmap();
      IteratingRLW iteratingRLW0 = eWAHCompressedBitmap0.getIteratingRLW();
      IntIteratorOverIteratingRLW intIteratorOverIteratingRLW0 = new IntIteratorOverIteratingRLW(iteratingRLW0);
      boolean boolean0 = intIteratorOverIteratingRLW0.hasNext();
      assertFalse(boolean0);
  }
}
