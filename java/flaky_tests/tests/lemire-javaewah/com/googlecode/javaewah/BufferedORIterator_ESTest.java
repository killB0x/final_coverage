/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 00:42:55 GMT 2022
 */

package com.googlecode.javaewah;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.googlecode.javaewah.BufferedORIterator;
import com.googlecode.javaewah.EWAHCompressedBitmap;
import com.googlecode.javaewah.EWAHIterator;
import com.googlecode.javaewah.IteratingBufferedRunningLengthWord;
import com.googlecode.javaewah.IteratingRLW;
import com.googlecode.javaewah.LongBufferWrapper;
import java.nio.ByteBuffer;
import java.nio.LongBuffer;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BufferedORIterator_ESTest extends BufferedORIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<IteratingRLW> linkedList0 = new LinkedList<IteratingRLW>();
      BufferedORIterator bufferedORIterator0 = new BufferedORIterator(linkedList0, 63);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(63);
      EWAHCompressedBitmap eWAHCompressedBitmap0 = new EWAHCompressedBitmap(byteBuffer0);
      IteratingBufferedRunningLengthWord iteratingBufferedRunningLengthWord0 = new IteratingBufferedRunningLengthWord(eWAHCompressedBitmap0);
      iteratingBufferedRunningLengthWord0.discardLiteralWords(63);
      linkedList0.offerFirst(iteratingBufferedRunningLengthWord0);
      bufferedORIterator0.next();
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<IteratingRLW> linkedList0 = new LinkedList<IteratingRLW>();
      linkedList0.add((IteratingRLW) null);
      BufferedORIterator bufferedORIterator0 = new BufferedORIterator(linkedList0, 2429);
      // Undeclared exception!
      try { 
        bufferedORIterator0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah.BufferedORIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<IteratingRLW> linkedList0 = new LinkedList<IteratingRLW>();
      long[] longArray0 = new long[6];
      longArray0[0] = (-8589934592L);
      LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
      LongBufferWrapper longBufferWrapper0 = new LongBufferWrapper(longBuffer0);
      EWAHIterator eWAHIterator0 = new EWAHIterator(longBufferWrapper0);
      IteratingBufferedRunningLengthWord iteratingBufferedRunningLengthWord0 = new IteratingBufferedRunningLengthWord(eWAHIterator0);
      linkedList0.offerFirst(iteratingBufferedRunningLengthWord0);
      BufferedORIterator bufferedORIterator0 = new BufferedORIterator(linkedList0, 948);
      // Undeclared exception!
      try { 
        bufferedORIterator0.next();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("java.nio.HeapLongBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<IteratingRLW> linkedList0 = new LinkedList<IteratingRLW>();
      BufferedORIterator bufferedORIterator0 = new BufferedORIterator(linkedList0, 0);
      long[] longArray0 = new long[4];
      longArray0[0] = (long) (-935);
      LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
      LongBufferWrapper longBufferWrapper0 = new LongBufferWrapper(longBuffer0);
      EWAHIterator eWAHIterator0 = new EWAHIterator(longBufferWrapper0);
      IteratingBufferedRunningLengthWord iteratingBufferedRunningLengthWord0 = new IteratingBufferedRunningLengthWord(eWAHIterator0);
      linkedList0.offerFirst(iteratingBufferedRunningLengthWord0);
      // Undeclared exception!
      try { 
        bufferedORIterator0.next();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-468)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<IteratingRLW> linkedList0 = new LinkedList<IteratingRLW>();
      BufferedORIterator bufferedORIterator0 = new BufferedORIterator(linkedList0, 0);
      long[] longArray0 = new long[5];
      longArray0[0] = (long) (-1568);
      LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
      LongBufferWrapper longBufferWrapper0 = new LongBufferWrapper(longBuffer0);
      EWAHIterator eWAHIterator0 = new EWAHIterator(longBufferWrapper0);
      IteratingBufferedRunningLengthWord iteratingBufferedRunningLengthWord0 = new IteratingBufferedRunningLengthWord(eWAHIterator0);
      linkedList0.offerFirst(iteratingBufferedRunningLengthWord0);
      // Undeclared exception!
      try { 
        bufferedORIterator0.next();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -784 out of bounds for length 0
         //
         verifyException("com.googlecode.javaewah.IteratorAggregation", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BufferedORIterator bufferedORIterator0 = new BufferedORIterator((LinkedList<IteratingRLW>) null, 128);
      // Undeclared exception!
      try { 
        bufferedORIterator0.hasNext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah.BufferedORIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<IteratingRLW> linkedList0 = new LinkedList<IteratingRLW>();
      BufferedORIterator bufferedORIterator0 = null;
      try {
        bufferedORIterator0 = new BufferedORIterator(linkedList0, (-2402));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2402
         //
         verifyException("com.googlecode.javaewah.BufferedORIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<IteratingRLW> linkedList0 = new LinkedList<IteratingRLW>();
      BufferedORIterator bufferedORIterator0 = new BufferedORIterator(linkedList0, 430);
      long[] longArray0 = new long[6];
      longArray0[0] = (long) 430;
      LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
      LongBufferWrapper longBufferWrapper0 = new LongBufferWrapper(longBuffer0);
      EWAHIterator eWAHIterator0 = new EWAHIterator(longBufferWrapper0);
      IteratingBufferedRunningLengthWord iteratingBufferedRunningLengthWord0 = new IteratingBufferedRunningLengthWord(eWAHIterator0);
      linkedList0.offerFirst(iteratingBufferedRunningLengthWord0);
      bufferedORIterator0.next();
      assertEquals(1, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<IteratingRLW> linkedList0 = new LinkedList<IteratingRLW>();
      BufferedORIterator bufferedORIterator0 = new BufferedORIterator(linkedList0, 0);
      long[] longArray0 = new long[5];
      longArray0[0] = (long) 430;
      LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
      LongBufferWrapper longBufferWrapper0 = new LongBufferWrapper(longBuffer0);
      EWAHIterator eWAHIterator0 = new EWAHIterator(longBufferWrapper0);
      IteratingBufferedRunningLengthWord iteratingBufferedRunningLengthWord0 = new IteratingBufferedRunningLengthWord(eWAHIterator0);
      linkedList0.offerFirst(iteratingBufferedRunningLengthWord0);
      bufferedORIterator0.next();
      assertEquals(1, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<IteratingRLW> linkedList0 = new LinkedList<IteratingRLW>();
      BufferedORIterator bufferedORIterator0 = new BufferedORIterator(linkedList0, 0);
      long[] longArray0 = new long[5];
      LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
      LongBufferWrapper longBufferWrapper0 = new LongBufferWrapper(longBuffer0);
      EWAHIterator eWAHIterator0 = new EWAHIterator(longBufferWrapper0);
      IteratingBufferedRunningLengthWord iteratingBufferedRunningLengthWord0 = new IteratingBufferedRunningLengthWord(eWAHIterator0);
      linkedList0.offerFirst(iteratingBufferedRunningLengthWord0);
      bufferedORIterator0.next();
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<IteratingRLW> linkedList0 = new LinkedList<IteratingRLW>();
      BufferedORIterator bufferedORIterator0 = new BufferedORIterator(linkedList0, 3789);
      linkedList0.add((IteratingRLW) null);
      boolean boolean0 = bufferedORIterator0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<IteratingRLW> linkedList0 = new LinkedList<IteratingRLW>();
      BufferedORIterator bufferedORIterator0 = new BufferedORIterator(linkedList0, 2206);
      boolean boolean0 = bufferedORIterator0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<IteratingRLW> linkedList0 = new LinkedList<IteratingRLW>();
      BufferedORIterator bufferedORIterator0 = new BufferedORIterator(linkedList0, 0);
      // Undeclared exception!
      try { 
        bufferedORIterator0.clone();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.googlecode.javaewah.BufferedORIterator cannot be cast to class com.googlecode.javaewah.BufferedXORIterator (com.googlecode.javaewah.BufferedORIterator and com.googlecode.javaewah.BufferedXORIterator are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6b18b39e)
         //
         verifyException("com.googlecode.javaewah.BufferedORIterator", e);
      }
  }
}
