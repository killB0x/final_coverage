/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 00:16:29 GMT 2022
 */

package com.googlecode.javaewah;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.googlecode.javaewah.ClearIntIterator;
import com.googlecode.javaewah.EWAHCompressedBitmap;
import com.googlecode.javaewah.EWAHIterator;
import com.googlecode.javaewah.LongArray;
import com.googlecode.javaewah.LongBufferWrapper;
import java.nio.LongBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClearIntIterator_ESTest extends ClearIntIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[1];
      EWAHCompressedBitmap eWAHCompressedBitmap0 = EWAHCompressedBitmap.bitmapOf(intArray0);
      EWAHIterator eWAHIterator0 = eWAHCompressedBitmap0.getEWAHIterator();
      ClearIntIterator clearIntIterator0 = new ClearIntIterator(eWAHIterator0, 32);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long[] longArray0 = new long[7];
      longArray0[0] = (-3912L);
      LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
      LongBufferWrapper longBufferWrapper0 = new LongBufferWrapper(longBuffer0, 2537);
      EWAHIterator eWAHIterator0 = new EWAHIterator(longBufferWrapper0);
      ClearIntIterator clearIntIterator0 = null;
      try {
        clearIntIterator0 = new ClearIntIterator(eWAHIterator0, 2537);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[1] = 2140;
      EWAHCompressedBitmap eWAHCompressedBitmap0 = EWAHCompressedBitmap.bitmapOf(intArray0);
      EWAHIterator eWAHIterator0 = EWAHIterator.getEWAHIterator(eWAHCompressedBitmap0);
      eWAHCompressedBitmap0.not();
      ClearIntIterator clearIntIterator0 = new ClearIntIterator(eWAHIterator0, 0);
      clearIntIterator0.next();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[15];
      EWAHCompressedBitmap eWAHCompressedBitmap0 = EWAHCompressedBitmap.bitmapOf(intArray0);
      EWAHIterator eWAHIterator0 = eWAHCompressedBitmap0.getEWAHIterator();
      eWAHCompressedBitmap0.not();
      ClearIntIterator clearIntIterator0 = new ClearIntIterator(eWAHIterator0, (-522));
      clearIntIterator0.next();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[2];
      EWAHCompressedBitmap eWAHCompressedBitmap0 = EWAHCompressedBitmap.bitmapOf(intArray0);
      EWAHIterator eWAHIterator0 = eWAHCompressedBitmap0.getEWAHIterator();
      ClearIntIterator clearIntIterator0 = new ClearIntIterator(eWAHIterator0, (-1));
      clearIntIterator0.hasNext();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LongBuffer longBuffer0 = LongBuffer.allocate(32768);
      LongBufferWrapper longBufferWrapper0 = new LongBufferWrapper(longBuffer0, 32768);
      EWAHIterator eWAHIterator0 = new EWAHIterator(longBufferWrapper0);
      ClearIntIterator clearIntIterator0 = new ClearIntIterator(eWAHIterator0, 32768);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClearIntIterator clearIntIterator0 = null;
      try {
        clearIntIterator0 = new ClearIntIterator((EWAHIterator) null, (-1493));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah.ClearIntIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LongArray longArray0 = new LongArray(64);
      EWAHIterator eWAHIterator0 = new EWAHIterator(longArray0);
      longArray0.removeLastWord();
      longArray0.trim();
      ClearIntIterator clearIntIterator0 = null;
      try {
        clearIntIterator0 = new ClearIntIterator(eWAHIterator0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[2];
      EWAHCompressedBitmap eWAHCompressedBitmap0 = EWAHCompressedBitmap.bitmapOf(intArray0);
      EWAHIterator eWAHIterator0 = eWAHCompressedBitmap0.getEWAHIterator();
      ClearIntIterator clearIntIterator0 = new ClearIntIterator(eWAHIterator0, (-1));
      boolean boolean0 = clearIntIterator0.moveToNext();
      assertFalse(eWAHIterator0.hasNext());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[1] = 2140;
      EWAHCompressedBitmap eWAHCompressedBitmap0 = EWAHCompressedBitmap.bitmapOf(intArray0);
      EWAHIterator eWAHIterator0 = EWAHIterator.getEWAHIterator(eWAHCompressedBitmap0);
      ClearIntIterator clearIntIterator0 = new ClearIntIterator(eWAHIterator0, 0);
      ClearIntIterator clearIntIterator1 = new ClearIntIterator(eWAHIterator0, 1786);
      boolean boolean0 = clearIntIterator1.moveToNext();
      assertFalse(eWAHIterator0.hasNext());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      EWAHIterator eWAHIterator0 = new EWAHIterator(longArray0);
      ClearIntIterator clearIntIterator0 = new ClearIntIterator(eWAHIterator0, 0);
      boolean boolean0 = clearIntIterator0.moveToNext();
      assertFalse(eWAHIterator0.hasNext());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[1];
      EWAHCompressedBitmap eWAHCompressedBitmap0 = EWAHCompressedBitmap.bitmapOf(intArray0);
      EWAHIterator eWAHIterator0 = EWAHIterator.getEWAHIterator(eWAHCompressedBitmap0);
      eWAHCompressedBitmap0.addLiteralWord(32);
      ClearIntIterator clearIntIterator0 = new ClearIntIterator(eWAHIterator0, 32);
      assertFalse(eWAHIterator0.hasNext());
      assertTrue(clearIntIterator0.hasNext());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 64;
      EWAHCompressedBitmap eWAHCompressedBitmap0 = EWAHCompressedBitmap.bitmapOf(intArray0);
      EWAHIterator eWAHIterator0 = eWAHCompressedBitmap0.getEWAHIterator();
      ClearIntIterator clearIntIterator0 = new ClearIntIterator(eWAHIterator0, 64);
      int int0 = clearIntIterator0.next();
      assertFalse(eWAHIterator0.hasNext());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      EWAHIterator eWAHIterator0 = new EWAHIterator(longArray0);
      ClearIntIterator clearIntIterator0 = new ClearIntIterator(eWAHIterator0, 0);
      int int0 = clearIntIterator0.next();
      assertFalse(eWAHIterator0.hasNext());
      assertEquals(64, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      EWAHIterator eWAHIterator0 = new EWAHIterator(longArray0);
      ClearIntIterator clearIntIterator0 = new ClearIntIterator(eWAHIterator0, 0);
      boolean boolean0 = clearIntIterator0.hasNext();
      assertFalse(eWAHIterator0.hasNext());
      assertFalse(boolean0);
  }
}
