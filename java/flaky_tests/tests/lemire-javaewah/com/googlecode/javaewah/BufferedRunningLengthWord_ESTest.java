/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 00:45:18 GMT 2022
 */

package com.googlecode.javaewah;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.googlecode.javaewah.BufferedRunningLengthWord;
import com.googlecode.javaewah.LongArray;
import com.googlecode.javaewah.LongBufferWrapper;
import com.googlecode.javaewah.RunningLengthWord;
import java.nio.LongBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BufferedRunningLengthWord_ESTest extends BufferedRunningLengthWord_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(0L);
      bufferedRunningLengthWord0.reset((-1363L));
      bufferedRunningLengthWord0.setRunningBit(false);
      assertEquals(Integer.MAX_VALUE, bufferedRunningLengthWord0.getNumberOfLiteralWords());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      longArray0.ensureCapacity(1409);
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longArray0, 1491);
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(runningLengthWord0);
      bufferedRunningLengthWord0.reset((-781L));
      bufferedRunningLengthWord0.discardFirstWords(2299L);
      assertEquals(2147480957, bufferedRunningLengthWord0.getNumberOfLiteralWords());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord((-4L));
      bufferedRunningLengthWord0.discardFirstWords((-4L));
      assertEquals(2L, bufferedRunningLengthWord0.getRunningLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      longArray0.ensureCapacity(1409);
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longArray0, 1491);
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(runningLengthWord0);
      bufferedRunningLengthWord0.reset(runningLengthWord0);
      assertFalse(bufferedRunningLengthWord0.getRunningBit());
      assertEquals(0L, bufferedRunningLengthWord0.getRunningLength());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(410L);
      long long0 = bufferedRunningLengthWord0.size();
      assertFalse(bufferedRunningLengthWord0.getRunningBit());
      assertEquals(205L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(0L);
      bufferedRunningLengthWord0.setNumberOfLiteralWords((-1980));
      long long0 = bufferedRunningLengthWord0.size();
      assertEquals((-1980L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      longArray0.ensureCapacity(1409);
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longArray0, 1491);
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(runningLengthWord0);
      bufferedRunningLengthWord0.reset(2299L);
      long long0 = bufferedRunningLengthWord0.getRunningLength();
      assertEquals(1149L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(8589934590L);
      long long0 = bufferedRunningLengthWord0.getRunningLength();
      assertFalse(bufferedRunningLengthWord0.getRunningBit());
      assertEquals((-1L), long0);
      assertEquals((-1L), bufferedRunningLengthWord0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(0L);
      bufferedRunningLengthWord0.reset((-1363L));
      boolean boolean0 = bufferedRunningLengthWord0.getRunningBit();
      assertEquals(Integer.MAX_VALUE, bufferedRunningLengthWord0.getNumberOfLiteralWords());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(0L);
      bufferedRunningLengthWord0.setNumberOfLiteralWords(33);
      int int0 = bufferedRunningLengthWord0.getNumberOfLiteralWords();
      assertEquals(33L, bufferedRunningLengthWord0.size());
      assertEquals(33, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      longArray0.ensureCapacity(1409);
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longArray0, 1491);
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(runningLengthWord0);
      bufferedRunningLengthWord0.setNumberOfLiteralWords((-1));
      int int0 = bufferedRunningLengthWord0.getNumberOfLiteralWords();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(4294967295L);
      BufferedRunningLengthWord bufferedRunningLengthWord1 = bufferedRunningLengthWord0.clone();
      assertTrue(bufferedRunningLengthWord1.getRunningBit());
      assertEquals(2147483647L, bufferedRunningLengthWord1.size());
      assertNotSame(bufferedRunningLengthWord1, bufferedRunningLengthWord0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(0L);
      // Undeclared exception!
      try { 
        bufferedRunningLengthWord0.reset((RunningLengthWord) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah.BufferedRunningLengthWord", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord((-2956L));
      LongArray longArray0 = new LongArray();
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longArray0, 1129);
      // Undeclared exception!
      try { 
        bufferedRunningLengthWord0.reset(runningLengthWord0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1129 out of bounds for length 4
         //
         verifyException("com.googlecode.javaewah.LongArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BufferedRunningLengthWord bufferedRunningLengthWord0 = null;
      try {
        bufferedRunningLengthWord0 = new BufferedRunningLengthWord((RunningLengthWord) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah.BufferedRunningLengthWord", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LongBuffer longBuffer0 = LongBuffer.allocate(2);
      LongBufferWrapper longBufferWrapper0 = new LongBufferWrapper(longBuffer0);
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longBufferWrapper0, 2);
      BufferedRunningLengthWord bufferedRunningLengthWord0 = null;
      try {
        bufferedRunningLengthWord0 = new BufferedRunningLengthWord(runningLengthWord0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("java.nio.HeapLongBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LongArray longArray0 = new LongArray(316);
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longArray0, 316);
      BufferedRunningLengthWord bufferedRunningLengthWord0 = null;
      try {
        bufferedRunningLengthWord0 = new BufferedRunningLengthWord(runningLengthWord0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 316 out of bounds for length 316
         //
         verifyException("com.googlecode.javaewah.LongArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      longArray0.ensureCapacity(1409);
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longArray0, 1491);
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(runningLengthWord0);
      int int0 = bufferedRunningLengthWord0.getNumberOfLiteralWords();
      assertFalse(bufferedRunningLengthWord0.getRunningBit());
      assertEquals(0L, bufferedRunningLengthWord0.size());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      longArray0.ensureCapacity(1409);
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longArray0, 1491);
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(runningLengthWord0);
      long long0 = bufferedRunningLengthWord0.getRunningLength();
      assertFalse(bufferedRunningLengthWord0.getRunningBit());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      longArray0.ensureCapacity(1409);
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longArray0, 1491);
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(runningLengthWord0);
      boolean boolean0 = bufferedRunningLengthWord0.getRunningBit();
      assertEquals(0L, bufferedRunningLengthWord0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      longArray0.ensureCapacity(1409);
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longArray0, 1491);
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(runningLengthWord0);
      bufferedRunningLengthWord0.reset((-781L));
      bufferedRunningLengthWord0.clone();
      assertEquals((-391L), bufferedRunningLengthWord0.getRunningLength());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(4294967295L);
      bufferedRunningLengthWord0.reset(982L);
      assertEquals(491L, bufferedRunningLengthWord0.getRunningLength());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(0L);
      bufferedRunningLengthWord0.discardFirstWords(0L);
      assertEquals(0L, bufferedRunningLengthWord0.size());
      assertFalse(bufferedRunningLengthWord0.getRunningBit());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(0L);
      long long0 = bufferedRunningLengthWord0.size();
      assertFalse(bufferedRunningLengthWord0.getRunningBit());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      longArray0.ensureCapacity(1409);
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longArray0, 1491);
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(runningLengthWord0);
      bufferedRunningLengthWord0.setRunningLength((-2956L));
      assertEquals((-2956L), bufferedRunningLengthWord0.getRunningLength());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(4294967295L);
      LongBuffer longBuffer0 = LongBuffer.allocate(1);
      LongBufferWrapper longBufferWrapper0 = new LongBufferWrapper(longBuffer0, (-1831));
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longBufferWrapper0, (-961));
      // Undeclared exception!
      try { 
        bufferedRunningLengthWord0.reset(runningLengthWord0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // -961
         //
         verifyException("java.nio.HeapLongBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      longArray0.ensureCapacity(1409);
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longArray0, 1491);
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(runningLengthWord0);
      bufferedRunningLengthWord0.setNumberOfLiteralWords((-1));
      bufferedRunningLengthWord0.clone();
      assertEquals((-1), bufferedRunningLengthWord0.getNumberOfLiteralWords());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      longArray0.ensureCapacity(1409);
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longArray0, 1491);
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(runningLengthWord0);
      BufferedRunningLengthWord bufferedRunningLengthWord1 = bufferedRunningLengthWord0.clone();
      assertEquals(0L, bufferedRunningLengthWord1.size());
      assertFalse(bufferedRunningLengthWord1.getRunningBit());
      assertNotSame(bufferedRunningLengthWord1, bufferedRunningLengthWord0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      longArray0.ensureCapacity(1409);
      RunningLengthWord runningLengthWord0 = new RunningLengthWord(longArray0, 1491);
      BufferedRunningLengthWord bufferedRunningLengthWord0 = new BufferedRunningLengthWord(runningLengthWord0);
      String string0 = bufferedRunningLengthWord0.toString();
      assertEquals("running bit = false running length = 0 number of lit. words 0", string0);
  }
}
