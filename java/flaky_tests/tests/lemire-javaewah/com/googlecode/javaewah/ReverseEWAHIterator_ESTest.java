/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 00:46:54 GMT 2022
 */

package com.googlecode.javaewah;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.googlecode.javaewah.Buffer;
import com.googlecode.javaewah.LongArray;
import com.googlecode.javaewah.LongBufferWrapper;
import com.googlecode.javaewah.ReverseEWAHIterator;
import com.googlecode.javaewah.RunningLengthWord;
import java.nio.LongBuffer;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReverseEWAHIterator_ESTest extends ReverseEWAHIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LongArray longArray0 = new LongArray(50);
      ReverseEWAHIterator reverseEWAHIterator0 = new ReverseEWAHIterator(longArray0);
      RunningLengthWord runningLengthWord0 = new RunningLengthWord((Buffer) null, 415);
      reverseEWAHIterator0.rlw = runningLengthWord0;
      reverseEWAHIterator0.buffer();
      assertEquals(1, reverseEWAHIterator0.position());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long[] longArray0 = new long[2];
      LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
      LongBufferWrapper longBufferWrapper0 = new LongBufferWrapper(longBuffer0, 0);
      ReverseEWAHIterator reverseEWAHIterator0 = new ReverseEWAHIterator(longBufferWrapper0);
      reverseEWAHIterator0.buffer();
      assertEquals(0, reverseEWAHIterator0.position());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long[] longArray0 = new long[2];
      LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
      LongBufferWrapper longBufferWrapper0 = new LongBufferWrapper(longBuffer0, (-1267));
      ReverseEWAHIterator reverseEWAHIterator0 = new ReverseEWAHIterator(longBufferWrapper0);
      Buffer buffer0 = reverseEWAHIterator0.buffer();
      assertSame(buffer0, longBufferWrapper0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      ReverseEWAHIterator reverseEWAHIterator0 = new ReverseEWAHIterator(longArray0);
      reverseEWAHIterator0.previous();
      // Undeclared exception!
      try { 
        reverseEWAHIterator0.previous();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      ReverseEWAHIterator reverseEWAHIterator0 = new ReverseEWAHIterator(longArray0);
      reverseEWAHIterator0.rlw = null;
      // Undeclared exception!
      try { 
        reverseEWAHIterator0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah.ReverseEWAHIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      ReverseEWAHIterator reverseEWAHIterator0 = new ReverseEWAHIterator(longArray0);
      reverseEWAHIterator0.rlw = null;
      // Undeclared exception!
      try { 
        reverseEWAHIterator0.buffer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah.ReverseEWAHIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      long[] longArray0 = new long[1];
      LongBuffer longBuffer0 = LongBuffer.wrap(longArray0);
      LongBufferWrapper longBufferWrapper0 = new LongBufferWrapper(longBuffer0, Integer.MAX_VALUE);
      ReverseEWAHIterator reverseEWAHIterator0 = new ReverseEWAHIterator(longBufferWrapper0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ReverseEWAHIterator reverseEWAHIterator0 = null;
      try {
        reverseEWAHIterator0 = new ReverseEWAHIterator((Buffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.googlecode.javaewah.ReverseEWAHIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LongBuffer longBuffer0 = LongBuffer.allocate(0);
      LongBufferWrapper longBufferWrapper0 = new LongBufferWrapper(longBuffer0);
      ReverseEWAHIterator reverseEWAHIterator0 = null;
      try {
        reverseEWAHIterator0 = new ReverseEWAHIterator(longBufferWrapper0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      longArray0.push_back((-443L));
      ReverseEWAHIterator reverseEWAHIterator0 = null;
      try {
        reverseEWAHIterator0 = new ReverseEWAHIterator(longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LongArray longArray0 = new LongArray(50);
      ReverseEWAHIterator reverseEWAHIterator0 = new ReverseEWAHIterator(longArray0);
      boolean boolean0 = reverseEWAHIterator0.hasPrevious();
      assertTrue(boolean0);
      assertEquals(1, reverseEWAHIterator0.position());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LongArray longArray0 = new LongArray();
      ReverseEWAHIterator reverseEWAHIterator0 = new ReverseEWAHIterator(longArray0);
      reverseEWAHIterator0.previous();
      boolean boolean0 = reverseEWAHIterator0.hasPrevious();
      assertEquals(0, reverseEWAHIterator0.position());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LongArray longArray0 = new LongArray(50);
      ReverseEWAHIterator reverseEWAHIterator0 = new ReverseEWAHIterator(longArray0);
      assertEquals(1, reverseEWAHIterator0.position());
      
      reverseEWAHIterator0.previous();
      int int0 = reverseEWAHIterator0.position();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LongArray longArray0 = new LongArray(50);
      ReverseEWAHIterator reverseEWAHIterator0 = new ReverseEWAHIterator(longArray0);
      int int0 = reverseEWAHIterator0.position();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LongArray longArray0 = new LongArray(50);
      ReverseEWAHIterator reverseEWAHIterator0 = new ReverseEWAHIterator(longArray0);
      reverseEWAHIterator0.buffer();
      assertEquals(1, reverseEWAHIterator0.position());
  }
}
