/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 22:30:36 GMT 2022
 */

package no.sintef.jasm;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.Map;
import no.sintef.jasm.AtomicState;
import no.sintef.jasm.Handler;
import no.sintef.jasm.Status;
import no.sintef.jasm.Transition;
import no.sintef.jasm.ext.Event;
import no.sintef.jasm.ext.HandlerAction;
import no.sintef.jasm.ext.NullEventType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Transition_ESTest extends Transition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Transition transition0 = new Transition();
      AtomicState atomicState0 = new AtomicState("unL>BSPHSU*8Mi/");
      AtomicState atomicState1 = atomicState0.add(transition0);
      transition0.source = atomicState1;
      NullEventType nullEventType0 = (NullEventType)transition0.event;
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Event event0 = nullEventType0.instantiate((Map<String, Object>) hashMap0);
      HandlerAction handlerAction0 = transition0.action;
      AtomicState atomicState2 = new AtomicState("no.sintef.jasm.Status");
      Transition transition1 = transition0.to(atomicState2);
      transition1.action(handlerAction0);
      Status status0 = new Status();
      atomicState1.handle(event0, status0);
      assertSame(atomicState0, atomicState1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Transition transition0 = new Transition();
      Transition transition1 = new Transition();
      HandlerAction handlerAction0 = transition1.action;
      Handler handler0 = transition0.action(handlerAction0);
      assertNotSame(transition1, handler0);
  }
}
