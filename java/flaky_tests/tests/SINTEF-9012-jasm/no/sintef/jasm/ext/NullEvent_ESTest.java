/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 22:29:38 GMT 2022
 */

package no.sintef.jasm.ext;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import no.sintef.jasm.ext.Event;
import no.sintef.jasm.ext.EventType;
import no.sintef.jasm.ext.NullEvent;
import no.sintef.jasm.ext.NullEventType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NullEvent_ESTest extends NullEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NullEventType nullEventType0 = new NullEventType();
      NullEvent nullEvent0 = new NullEvent(nullEventType0);
      Event event0 = nullEvent0.clone();
      assertNotSame(event0, nullEvent0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NullEvent nullEvent0 = new NullEvent((EventType) null);
      // Undeclared exception!
      try { 
        nullEvent0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.sintef.jasm.ext.NullEvent", e);
      }
  }
}
