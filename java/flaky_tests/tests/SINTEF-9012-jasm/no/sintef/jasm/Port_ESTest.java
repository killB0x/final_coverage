/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 22:23:30 GMT 2022
 */

package no.sintef.jasm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import no.sintef.jasm.Component;
import no.sintef.jasm.Port;
import no.sintef.jasm.ext.Event;
import no.sintef.jasm.ext.NullEvent;
import no.sintef.jasm.ext.NullEventType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Port_ESTest extends Port_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      Port port0 = new Port("", component0);
      NullEventType nullEventType0 = new NullEventType();
      NullEvent nullEvent0 = new NullEvent(nullEventType0);
      Component component1 = mock(Component.class, new ViolatedAssumptionAnswer());
      Port port1 = new Port("", component1);
      port0.addListener(port1);
      port0.send(nullEvent0);
      assertTrue(port0.equals((Object)port1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      Port port0 = new Port("", component0);
      Component component1 = mock(Component.class, new ViolatedAssumptionAnswer());
      Port port1 = new Port("", component1);
      port0.addListener(port1);
      port0.removeListener((Port) null);
      assertEquals("", port0.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      Port port0 = new Port("", component0);
      port0.addListener(port0);
      port0.addListener(port0);
      assertEquals("", port0.getName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      Port port0 = new Port((String) null, component0);
      String string0 = port0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      Port port0 = new Port("C;=o#v0`o{P_", component0);
      String string0 = port0.getName();
      assertEquals("C;=o#v0`o{P_", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Port port0 = new Port("Error while starting session: ", (Component) null);
      port0.addListener(port0);
      // Undeclared exception!
      try { 
        port0.send((Event) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.sintef.jasm.Port", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Port port0 = new Port("Error while starting session: ", (Component) null);
      port0.addListener((Port) null);
      // Undeclared exception!
      try { 
        port0.removeListener(port0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.sintef.jasm.Port", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Port port0 = new Port((String) null, (Component) null);
      // Undeclared exception!
      try { 
        port0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("no.sintef.jasm.Port", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Port port0 = new Port("Error while starting session: ", (Component) null);
      Port port1 = new Port((String) null, (Component) null);
      // Undeclared exception!
      try { 
        port0.equals(port1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      Port port0 = new Port("", component0);
      boolean boolean0 = port0.equals(port0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      Port port0 = new Port("", component0);
      boolean boolean0 = port0.equals("uZ[zh8 ^5{lK=XuK#");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Port port0 = new Port("Error while starting session: ", (Component) null);
      port0.addListener(port0);
      port0.removeListener(port0);
      assertEquals("Error while starting session: ", port0.getName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      Port port0 = new Port("", component0);
      port0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Component component0 = mock(Component.class, new ViolatedAssumptionAnswer());
      Port port0 = new Port("", component0);
      String string0 = port0.getName();
      assertEquals("", string0);
  }
}
