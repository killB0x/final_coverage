/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 20:02:59 GMT 2022
 */

package org.jeasy.states.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jeasy.states.api.Event;
import org.jeasy.states.api.FiniteStateMachine;
import org.jeasy.states.api.State;
import org.jeasy.states.api.Transition;
import org.jeasy.states.core.FiniteStateMachineBuilder;
import org.jeasy.states.core.TransitionImpl;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FiniteStateMachineBuilder_ESTest extends FiniteStateMachineBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      linkedHashSet0.add((State) null);
      FiniteStateMachineBuilder finiteStateMachineBuilder0 = new FiniteStateMachineBuilder(linkedHashSet0, (State) null);
      FiniteStateMachine finiteStateMachine0 = finiteStateMachineBuilder0.build();
      assertNotNull(finiteStateMachine0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      State state0 = new State("EJ}=$,k!w\"");
      FiniteStateMachineBuilder finiteStateMachineBuilder0 = new FiniteStateMachineBuilder(linkedHashSet0, state0);
      LinkedHashSet<Transition> linkedHashSet1 = new LinkedHashSet<Transition>();
      TransitionImpl<Event> transitionImpl0 = new TransitionImpl<Event>();
      transitionImpl0.setSourceState(state0);
      linkedHashSet1.add(transitionImpl0);
      // Undeclared exception!
      try { 
        finiteStateMachineBuilder0.registerTransitions(linkedHashSet1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No target state is defined for transition 'transition'
         //
         verifyException("org.jeasy.states.core.TransitionDefinitionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineBuilder finiteStateMachineBuilder0 = new FiniteStateMachineBuilder(linkedHashSet0, (State) null);
      // Undeclared exception!
      try { 
        finiteStateMachineBuilder0.registerTransition((Transition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeasy.states.core.TransitionDefinitionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FiniteStateMachineBuilder finiteStateMachineBuilder0 = new FiniteStateMachineBuilder((Set<State>) null, (State) null);
      // Undeclared exception!
      try { 
        finiteStateMachineBuilder0.registerFinalStates((Set<State>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeasy.states.core.FiniteStateMachineBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      State state0 = new State((String) null);
      FiniteStateMachineBuilder finiteStateMachineBuilder0 = new FiniteStateMachineBuilder(linkedHashSet0, state0);
      // Undeclared exception!
      try { 
        finiteStateMachineBuilder0.registerFinalState(state0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeasy.states.api.State", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      State state0 = new State("]kB{n[!}>*");
      FiniteStateMachineBuilder finiteStateMachineBuilder0 = new FiniteStateMachineBuilder(linkedHashSet0, state0);
      // Undeclared exception!
      try { 
        finiteStateMachineBuilder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Initial state ']kB{n[!}>*' must belong to FSM states: 
         //
         verifyException("org.jeasy.states.core.FiniteStateMachineDefinitionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      State state0 = new State((String) null);
      FiniteStateMachineBuilder finiteStateMachineBuilder0 = new FiniteStateMachineBuilder(linkedHashSet0, state0);
      TransitionImpl<Event> transitionImpl0 = new TransitionImpl<Event>();
      // Undeclared exception!
      try { 
        finiteStateMachineBuilder0.registerTransition(transitionImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No source state is defined for transition 'transition'
         //
         verifyException("org.jeasy.states.core.TransitionDefinitionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      linkedHashSet0.add((State) null);
      FiniteStateMachineBuilder finiteStateMachineBuilder0 = new FiniteStateMachineBuilder(linkedHashSet0, (State) null);
      FiniteStateMachineBuilder finiteStateMachineBuilder1 = finiteStateMachineBuilder0.registerFinalStates(linkedHashSet0);
      assertSame(finiteStateMachineBuilder1, finiteStateMachineBuilder0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineBuilder finiteStateMachineBuilder0 = new FiniteStateMachineBuilder(linkedHashSet0, (State) null);
      LinkedHashSet<Transition> linkedHashSet1 = new LinkedHashSet<Transition>();
      FiniteStateMachineBuilder finiteStateMachineBuilder1 = finiteStateMachineBuilder0.registerTransitions(linkedHashSet1);
      assertSame(finiteStateMachineBuilder0, finiteStateMachineBuilder1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineBuilder finiteStateMachineBuilder0 = new FiniteStateMachineBuilder(linkedHashSet0, (State) null);
      // Undeclared exception!
      try { 
        finiteStateMachineBuilder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeasy.states.core.FiniteStateMachineDefinitionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineBuilder finiteStateMachineBuilder0 = new FiniteStateMachineBuilder(linkedHashSet0, (State) null);
      FiniteStateMachineBuilder finiteStateMachineBuilder1 = finiteStateMachineBuilder0.registerFinalState((State) null);
      assertSame(finiteStateMachineBuilder1, finiteStateMachineBuilder0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineBuilder finiteStateMachineBuilder0 = new FiniteStateMachineBuilder(linkedHashSet0, (State) null);
      LinkedHashSet<Transition> linkedHashSet1 = new LinkedHashSet<Transition>();
      linkedHashSet1.add((Transition) null);
      // Undeclared exception!
      try { 
        finiteStateMachineBuilder0.registerTransitions(linkedHashSet1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeasy.states.core.TransitionDefinitionValidator", e);
      }
  }
}
