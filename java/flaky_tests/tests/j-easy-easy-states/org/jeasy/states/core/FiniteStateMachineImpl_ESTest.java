/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 19:56:48 GMT 2022
 */

package org.jeasy.states.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jeasy.states.api.Event;
import org.jeasy.states.api.State;
import org.jeasy.states.api.Transition;
import org.jeasy.states.core.FiniteStateMachineImpl;
import org.jeasy.states.core.TransitionImpl;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FiniteStateMachineImpl_ESTest extends FiniteStateMachineImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      State state0 = new State("org.jeasy.states.api.State");
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl((Set<State>) null, state0);
      finiteStateMachineImpl0.registerFinalState(state0);
      // Undeclared exception!
      try { 
        finiteStateMachineImpl0.fire((Event) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, (State) null);
      finiteStateMachineImpl0.registerTransition((Transition) null);
      Set<Transition> set0 = finiteStateMachineImpl0.getTransitions();
      assertFalse(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl((Set<State>) null, (State) null);
      Set<State> set0 = finiteStateMachineImpl0.getStates();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      State state0 = new State("!L~(FFUoi?k/FDB]");
      linkedHashSet0.add(state0);
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, state0);
      Set<State> set0 = finiteStateMachineImpl0.getStates();
      assertFalse(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      State state0 = new State("transition");
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, state0);
      State state1 = finiteStateMachineImpl0.getInitialState();
      assertSame(state0, state1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl((Set<State>) null, (State) null);
      finiteStateMachineImpl0.registerFinalState((State) null);
      Set<State> set0 = finiteStateMachineImpl0.getFinalStates();
      assertFalse(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      State state0 = new State("!L~(FFUoi?k/FDB]");
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, state0);
      State state1 = finiteStateMachineImpl0.getCurrentState();
      assertEquals("!L~(FFUoi?k/FDB]", state1.getName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, (State) null);
      TransitionImpl<Event> transitionImpl0 = new TransitionImpl<Event>();
      // Undeclared exception!
      try { 
        finiteStateMachineImpl0.registerTransition(transitionImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeasy.states.core.TransitionImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      State state0 = new State((String) null);
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, state0);
      // Undeclared exception!
      try { 
        finiteStateMachineImpl0.registerFinalState(state0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeasy.states.api.State", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl((Set<State>) null, (State) null);
      State state0 = new State("', event ");
      finiteStateMachineImpl0.registerFinalState(state0);
      // Undeclared exception!
      try { 
        finiteStateMachineImpl0.fire((Event) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, (State) null);
      // Undeclared exception!
      try { 
        finiteStateMachineImpl0.fire((Event) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl((Set<State>) null, (State) null);
      Event event0 = finiteStateMachineImpl0.getLastEvent();
      assertNull(event0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, (State) null);
      State state0 = finiteStateMachineImpl0.getCurrentState();
      assertNull(state0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TransitionImpl<Event> transitionImpl0 = new TransitionImpl<Event>();
      State state0 = transitionImpl0.getTargetState();
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl((Set<State>) null, (State) null);
      finiteStateMachineImpl0.registerFinalState(state0);
      // Undeclared exception!
      try { 
        finiteStateMachineImpl0.fire((Event) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeasy.states.core.FiniteStateMachineImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl((Set<State>) null, (State) null);
      Transition transition0 = finiteStateMachineImpl0.getLastTransition();
      assertNull(transition0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, (State) null);
      Set<State> set0 = finiteStateMachineImpl0.getFinalStates();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, (State) null);
      Set<State> set0 = finiteStateMachineImpl0.getStates();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl((Set<State>) null, (State) null);
      State state0 = finiteStateMachineImpl0.getInitialState();
      assertNull(state0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, (State) null);
      Set<Transition> set0 = finiteStateMachineImpl0.getTransitions();
      assertTrue(set0.isEmpty());
  }
}
