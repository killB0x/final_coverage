/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 19:58:32 GMT 2022
 */

package org.jeasy.states.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jeasy.states.api.Event;
import org.jeasy.states.api.FiniteStateMachine;
import org.jeasy.states.api.State;
import org.jeasy.states.core.FiniteStateMachineImpl;
import org.jeasy.states.core.TransitionDefinitionValidator;
import org.jeasy.states.core.TransitionImpl;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TransitionDefinitionValidator_ESTest extends TransitionDefinitionValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TransitionImpl<Event> transitionImpl0 = new TransitionImpl<Event>();
      Class<Event> class0 = Event.class;
      transitionImpl0.setEventType(class0);
      State state0 = new State("No event type is defined for transition '");
      transitionImpl0.setTargetState(state0);
      transitionImpl0.setSourceState(state0);
      TransitionDefinitionValidator transitionDefinitionValidator0 = new TransitionDefinitionValidator();
      // Undeclared exception!
      try { 
        transitionDefinitionValidator0.validateTransitionDefinition(transitionImpl0, (FiniteStateMachine) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeasy.states.core.TransitionDefinitionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TransitionImpl<Event> transitionImpl0 = new TransitionImpl<Event>();
      Class<Event> class0 = Event.class;
      transitionImpl0.setEventType(class0);
      State state0 = new State("T92`aD4PHUh!jc:5");
      transitionImpl0.setTargetState(state0);
      State state1 = new State("#QD_rM>9)");
      transitionImpl0.setSourceState(state1);
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      TransitionDefinitionValidator transitionDefinitionValidator0 = new TransitionDefinitionValidator();
      linkedHashSet0.add(state1);
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, state1);
      // Undeclared exception!
      try { 
        transitionDefinitionValidator0.validateTransitionDefinition(transitionImpl0, finiteStateMachineImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // target state 'T92`aD4PHUh!jc:5' is not registered in FSM states for transition 'transition'
         //
         verifyException("org.jeasy.states.core.TransitionDefinitionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TransitionImpl<Event> transitionImpl0 = new TransitionImpl<Event>();
      Class<Event> class0 = Event.class;
      transitionImpl0.setEventType(class0);
      State state0 = new State(", targetState=");
      transitionImpl0.setTargetState(state0);
      transitionImpl0.setSourceState(state0);
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, state0);
      linkedHashSet0.add(state0);
      TransitionDefinitionValidator transitionDefinitionValidator0 = new TransitionDefinitionValidator();
      transitionDefinitionValidator0.validateTransitionDefinition(transitionImpl0, finiteStateMachineImpl0);
      assertEquals("transition", transitionImpl0.getName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TransitionImpl<Event> transitionImpl0 = new TransitionImpl<Event>();
      Class<Event> class0 = Event.class;
      transitionImpl0.setEventType(class0);
      State state0 = new State(", targetState=");
      transitionImpl0.setTargetState(state0);
      transitionImpl0.setSourceState(state0);
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, state0);
      TransitionDefinitionValidator transitionDefinitionValidator0 = new TransitionDefinitionValidator();
      // Undeclared exception!
      try { 
        transitionDefinitionValidator0.validateTransitionDefinition(transitionImpl0, finiteStateMachineImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Source state ', targetState=' is not registered in FSM states for transition 'transition'
         //
         verifyException("org.jeasy.states.core.TransitionDefinitionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TransitionImpl<Event> transitionImpl0 = new TransitionImpl<Event>();
      State state0 = new State(", targetState=");
      transitionImpl0.setTargetState(state0);
      transitionImpl0.setSourceState(state0);
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, state0);
      TransitionDefinitionValidator transitionDefinitionValidator0 = new TransitionDefinitionValidator();
      // Undeclared exception!
      try { 
        transitionDefinitionValidator0.validateTransitionDefinition(transitionImpl0, finiteStateMachineImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No event type is defined for transition 'transition'
         //
         verifyException("org.jeasy.states.core.TransitionDefinitionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TransitionImpl<Event> transitionImpl0 = new TransitionImpl<Event>();
      State state0 = new State(", targetState=");
      transitionImpl0.setSourceState(state0);
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, state0);
      TransitionDefinitionValidator transitionDefinitionValidator0 = new TransitionDefinitionValidator();
      // Undeclared exception!
      try { 
        transitionDefinitionValidator0.validateTransitionDefinition(transitionImpl0, finiteStateMachineImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No target state is defined for transition 'transition'
         //
         verifyException("org.jeasy.states.core.TransitionDefinitionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TransitionDefinitionValidator transitionDefinitionValidator0 = new TransitionDefinitionValidator();
      TransitionImpl<Event> transitionImpl0 = new TransitionImpl<Event>();
      State state0 = new State("");
      LinkedHashSet<State> linkedHashSet0 = new LinkedHashSet<State>();
      FiniteStateMachineImpl finiteStateMachineImpl0 = new FiniteStateMachineImpl(linkedHashSet0, state0);
      // Undeclared exception!
      try { 
        transitionDefinitionValidator0.validateTransitionDefinition(transitionImpl0, finiteStateMachineImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No source state is defined for transition 'transition'
         //
         verifyException("org.jeasy.states.core.TransitionDefinitionValidator", e);
      }
  }
}
