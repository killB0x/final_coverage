/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 20:04:31 GMT 2022
 */

package org.jeasy.states.api;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.jeasy.states.api.Event;
import org.jeasy.states.api.FiniteStateMachineException;
import org.jeasy.states.api.Transition;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FiniteStateMachineException_ESTest extends FiniteStateMachineException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Event event0 = mock(Event.class, new ViolatedAssumptionAnswer());
      MockThrowable mockThrowable0 = new MockThrowable();
      FiniteStateMachineException finiteStateMachineException0 = new FiniteStateMachineException((Transition) null, event0, mockThrowable0);
      Transition transition0 = finiteStateMachineException0.getTransition();
      assertNull(transition0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Transition transition0 = mock(Transition.class, new ViolatedAssumptionAnswer());
      Event event0 = mock(Event.class, new ViolatedAssumptionAnswer());
      FiniteStateMachineException finiteStateMachineException0 = new FiniteStateMachineException(transition0, event0, (Throwable) null);
      Throwable throwable0 = finiteStateMachineException0.getCause();
      assertNull(throwable0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      FiniteStateMachineException finiteStateMachineException0 = new FiniteStateMachineException((Transition) null, (Event) null, mockThrowable0);
      Event event0 = finiteStateMachineException0.getEvent();
      assertNull(event0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      FiniteStateMachineException finiteStateMachineException0 = new FiniteStateMachineException((Transition) null, (Event) null, mockThrowable0);
      Throwable throwable0 = finiteStateMachineException0.getCause();
      assertSame(throwable0, mockThrowable0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Transition transition0 = mock(Transition.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(transition0).toString();
      Event event0 = mock(Event.class, new ViolatedAssumptionAnswer());
      MockThrowable mockThrowable0 = new MockThrowable("");
      FiniteStateMachineException finiteStateMachineException0 = new FiniteStateMachineException(transition0, event0, mockThrowable0);
      Transition transition1 = finiteStateMachineException0.getTransition();
      assertNull(transition1.getName());
  }
}
