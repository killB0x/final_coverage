/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 15:56:09 GMT 2022
 */

package com.accelad.math.doubledouble;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.accelad.math.doubledouble.DoubleMap;
import java.util.function.Supplier;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DoubleMap_ESTest extends DoubleMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DoubleMap<Integer> doubleMap0 = new DoubleMap<Integer>();
      Double double0 = new Double((-508.83141054));
      Supplier<Integer> supplier0 = (Supplier<Integer>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      Integer integer0 = doubleMap0.get(double0, supplier0);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DoubleMap<Object> doubleMap0 = new DoubleMap<Object>();
      Double double0 = new Double(0.0);
      Object object0 = new Object();
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(object0).when(supplier0).get();
      Object object1 = doubleMap0.get(double0, supplier0);
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DoubleMap<Object> doubleMap0 = new DoubleMap<Object>();
      Double double0 = new Double(0.0);
      // Undeclared exception!
      try { 
        doubleMap0.get(double0, (Supplier<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.accelad.math.doubledouble.CacheMap", e);
      }
  }
}
