/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 12:17:08 GMT 2022
 */

package com.irurueta.navigation.indoor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.irurueta.navigation.indoor.WifiAccessPointWithPower;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WifiAccessPointWithPower_ESTest extends WifiAccessPointWithPower_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("", 1053.0, "", 1053.0, (Double) null, 1.0, (Double) 2.0);
      assertEquals(1053.0, wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
      assertEquals(1.0, wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Double double0 = new Double(0.0);
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("{QXV>-D)", 0.0, "~3!F WyhRF(Z[V'4Hsi", 0.0, double0, 314.0, double0);
      assertEquals(0.0, wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
      assertEquals(314.0, wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Double double0 = new Double(3683.0);
      Double double1 = new Double(1.0);
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("", 2537.9, 1.0, double1, 0.0, double0);
      assertEquals(3683.0, wifiAccessPointWithPower0.getPathLossExponentStandardDeviation(), 0.01);
      assertEquals(0.0, wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
      assertEquals(1.0, wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("YS<3s&lok)kMk", 115.512673, 0.0, (-1699.9347));
      assertEquals(0.0, wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
      assertEquals((-1699.9347), wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Double double0 = new Double(1.0);
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("", 0.0, "", 1.0, double0, 1053.0);
      assertEquals(1.0, wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
      assertEquals(1053.0, wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("", 1685.27808917, "", 1685.27808917, (Double) null);
      assertEquals(2.0, wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
      assertEquals(1685.27808917, wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("comirurueta.navigation.indoor.WifiAccssPointWithPwe", 1864.999346236, "comirurueta.navigation.indoor.WifiAccssPointWithPwe", 1864.999346236);
      assertEquals(1864.999346236, wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
      assertEquals(2.0, wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("", 0.0, 0.0);
      assertEquals(2.0, wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
      assertEquals(0.0, wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Double double0 = new Double(0.0);
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("v", 0.0, (-1.0), double0);
      wifiAccessPointWithPower0.getTransmittedPowerStandardDeviation();
      assertEquals(2.0, wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
      assertEquals((-1.0), wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Double double0 = new Double(3683.0);
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("", 2537.9, 1.0, double0, 0.0, double0);
      wifiAccessPointWithPower0.getTransmittedPowerStandardDeviation();
      assertEquals(0.0, wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
      assertEquals(1.0, wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double(3683.0);
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("", 2537.9, 1.0, double0, 0.0, double0);
      double double1 = wifiAccessPointWithPower0.getTransmittedPower();
      assertEquals(1.0, double1, 0.01);
      assertEquals(0.0, wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("", 1962.40355, "", (-2040.50861645272), (Double) null, (-1.0), (Double) null);
      double double0 = wifiAccessPointWithPower0.getTransmittedPower();
      assertEquals((-1.0), wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
      assertEquals((-2040.50861645272), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Double double0 = new Double(0.0);
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("jnff4", 0.0, 0.0, double0, 0.0, double0);
      wifiAccessPointWithPower0.getPathLossExponentStandardDeviation();
      assertEquals(0.0, wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
      assertEquals(0.0, wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Double double0 = new Double(115.512673);
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("{QXV>-D)", 2992.0, "PoE>D\":DCAl@b+<@", 115.512673, double0, 2992.0, double0);
      wifiAccessPointWithPower0.getPathLossExponentStandardDeviation();
      assertEquals(115.512673, wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
      assertEquals(2992.0, wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double double0 = new Double(0.0);
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("jnff4", 0.0, 0.0, double0, 0.0, double0);
      double double1 = wifiAccessPointWithPower0.getPathLossExponent();
      assertEquals(0.0, double1, 0.01);
      assertEquals(0.0, wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Double double0 = new Double(115.512673);
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("{QXV>-D)", 2992.0, "PoE>D\":DCAl@b+<@", 115.512673, double0, 2992.0, double0);
      double double1 = wifiAccessPointWithPower0.getPathLossExponent();
      assertEquals(2992.0, double1, 0.01);
      assertEquals(115.512673, wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Double double0 = new Double((-4273.05553498304));
      WifiAccessPointWithPower wifiAccessPointWithPower0 = null;
      try {
        wifiAccessPointWithPower0 = new WifiAccessPointWithPower("", 332.2204090399933, "", 332.2204090399933, double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.navigation.indoor.WifiAccessPointWithPower", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      WifiAccessPointWithPower wifiAccessPointWithPower0 = null;
      try {
        wifiAccessPointWithPower0 = new WifiAccessPointWithPower("WIFI_ACCESS_POINT", (-1066.5785444918672), "WIFI_ACCESS_POINT", 2.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.navigation.indoor.WifiAccessPoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Double double0 = new Double((-838.160299447));
      WifiAccessPointWithPower wifiAccessPointWithPower0 = null;
      try {
        wifiAccessPointWithPower0 = new WifiAccessPointWithPower("dW", 3223.93032313, 3223.93032313, double0, 3223.93032313);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.navigation.indoor.WifiAccessPointWithPower", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WifiAccessPointWithPower wifiAccessPointWithPower0 = null;
      try {
        wifiAccessPointWithPower0 = new WifiAccessPointWithPower("jnff4", (-1.0), 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.navigation.indoor.WifiAccessPoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      WifiAccessPointWithPower wifiAccessPointWithPower0 = null;
      try {
        wifiAccessPointWithPower0 = new WifiAccessPointWithPower("v", (-1.0), 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.navigation.indoor.WifiAccessPoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Double double0 = new Double(0.0);
      Double double1 = new Double((-1.0));
      WifiAccessPointWithPower wifiAccessPointWithPower0 = null;
      try {
        wifiAccessPointWithPower0 = new WifiAccessPointWithPower(")'jh", 1962.40355, ")'jh", (-1.0), double0, 0.0, double1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.navigation.indoor.WifiAccessPointWithPower", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Double double0 = new Double((-2283.0));
      WifiAccessPointWithPower wifiAccessPointWithPower0 = null;
      try {
        wifiAccessPointWithPower0 = new WifiAccessPointWithPower("", 315.47, 315.47, (Double) null, 315.47, double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.navigation.indoor.WifiAccessPointWithPower", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Double double0 = new Double((-1.0));
      WifiAccessPointWithPower wifiAccessPointWithPower0 = null;
      try {
        wifiAccessPointWithPower0 = new WifiAccessPointWithPower("", 2564.05411362494, "", 2564.05411362494, double0, 2564.05411362494);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.navigation.indoor.WifiAccessPointWithPower", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Double double0 = new Double((-1373.21471));
      WifiAccessPointWithPower wifiAccessPointWithPower0 = null;
      try {
        wifiAccessPointWithPower0 = new WifiAccessPointWithPower("", 111.0475563, 111.0475563, double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.irurueta.navigation.indoor.WifiAccessPointWithPower", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Double double0 = new Double(0.0);
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("jnff4", 0.0, 0.0, double0, (-2339.283076819651));
      assertEquals((-2339.283076819651), wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
      assertEquals(0.0, wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("D5$n;_ySEuElsw^5nS~", 2.0, 2.0, (Double) null, 2.0, (Double) null);
      assertEquals(2.0, wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
      assertEquals(2.0, wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("", 1962.40355, "", (-2040.50861645272), (Double) null, (-1.0), (Double) null);
      wifiAccessPointWithPower0.getTransmittedPowerStandardDeviation();
      assertEquals((-1.0), wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
      assertEquals((-2040.50861645272), wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower();
      double double0 = wifiAccessPointWithPower0.getTransmittedPower();
      assertEquals(2.0, wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower();
      wifiAccessPointWithPower0.getPathLossExponentStandardDeviation();
      assertEquals(2.0, wifiAccessPointWithPower0.getPathLossExponent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      WifiAccessPointWithPower wifiAccessPointWithPower0 = new WifiAccessPointWithPower("", 1962.40355, "", (-2040.50861645272), (Double) null, (-1.0), (Double) null);
      double double0 = wifiAccessPointWithPower0.getPathLossExponent();
      assertEquals((-2040.50861645272), wifiAccessPointWithPower0.getTransmittedPower(), 0.01);
      assertEquals((-1.0), double0, 0.01);
  }
}
