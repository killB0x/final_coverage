/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 11:40:33 GMT 2022
 */

package jetbrick.template.resource;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jetbrick.template.resource.CompiledClassResource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CompiledClassResource_ESTest extends CompiledClassResource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CompiledClassResource compiledClassResource0 = null;
      try {
        compiledClassResource0 = new CompiledClassResource((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.resource.Resource", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CompiledClassResource compiledClassResource0 = new CompiledClassResource("<<@Z{h8:");
      Class<?> class0 = compiledClassResource0.getCompiledClass();
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CompiledClassResource compiledClassResource0 = new CompiledClassResource(",TN~EpW?]");
      boolean boolean0 = compiledClassResource0.exist();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CompiledClassResource compiledClassResource0 = new CompiledClassResource("");
      // Undeclared exception!
      try { 
        compiledClassResource0.getSource("K(M@,#");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.resource.CompiledClassResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CompiledClassResource compiledClassResource0 = new CompiledClassResource(",TN~EpW?]");
      long long0 = compiledClassResource0.lastModified();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CompiledClassResource compiledClassResource0 = new CompiledClassResource(",TN~EpW?]");
      // Undeclared exception!
      try { 
        compiledClassResource0.getInputStream();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.resource.CompiledClassResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CompiledClassResource compiledClassResource0 = new CompiledClassResource("/mczU6R)tu;uF2&");
      // Undeclared exception!
      try { 
        compiledClassResource0.getSource();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.resource.CompiledClassResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CompiledClassResource compiledClassResource0 = new CompiledClassResource(",TN~EpW?]");
      String string0 = compiledClassResource0.getAbsolutePath();
      assertEquals("(unknown)", string0);
  }
}
