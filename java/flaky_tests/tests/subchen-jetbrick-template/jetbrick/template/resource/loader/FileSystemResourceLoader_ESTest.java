/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 11:34:20 GMT 2022
 */

package jetbrick.template.resource.loader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import jetbrick.template.JetEngine;
import jetbrick.template.resource.Resource;
import jetbrick.template.resource.loader.FileSystemResourceLoader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileSystemResourceLoader_ESTest extends FileSystemResourceLoader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileSystemResourceLoader fileSystemResourceLoader0 = new FileSystemResourceLoader();
      JetEngine jetEngine0 = JetEngine.create();
      fileSystemResourceLoader0.initialize(jetEngine0, "1.0.0", "QKXv@");
      List<String> list0 = fileSystemResourceLoader0.loadAll();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileSystemResourceLoader fileSystemResourceLoader0 = new FileSystemResourceLoader();
      JetEngine jetEngine0 = JetEngine.create();
      fileSystemResourceLoader0.initialize(jetEngine0, "1.0.0", "QKXv@");
      Resource resource0 = fileSystemResourceLoader0.load("QKXv@");
      assertNull(resource0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FileSystemResourceLoader fileSystemResourceLoader0 = new FileSystemResourceLoader();
      JetEngine jetEngine0 = JetEngine.create();
      fileSystemResourceLoader0.initialize(jetEngine0, "", "");
      Resource resource0 = fileSystemResourceLoader0.load("");
      assertEquals("", resource0.getName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileSystemResourceLoader fileSystemResourceLoader0 = new FileSystemResourceLoader();
      JetEngine jetEngine0 = JetEngine.create();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fileSystemResourceLoader0.initialize(jetEngine0, "", "");
      // Undeclared exception!
      try { 
        fileSystemResourceLoader0.load("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Simulated IOException
         //
         verifyException("jetbrick.template.utils.ExceptionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileSystemResourceLoader fileSystemResourceLoader0 = new FileSystemResourceLoader();
      // Undeclared exception!
      try { 
        fileSystemResourceLoader0.load("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.utils.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileSystemResourceLoader fileSystemResourceLoader0 = new FileSystemResourceLoader();
      // Undeclared exception!
      try { 
        fileSystemResourceLoader0.initialize((JetEngine) null, "jetbrick.template.resource.loader.FileSystemResourceLoader", "jetbrick.template.resource.loader.FileSystemResourceLoader");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.resource.loader.FileSystemResourceLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileSystemResourceLoader fileSystemResourceLoader0 = new FileSystemResourceLoader();
      JetEngine jetEngine0 = JetEngine.create();
      // Undeclared exception!
      try { 
        fileSystemResourceLoader0.initialize(jetEngine0, (String) null, "1.0.0");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // path is null.
         //
         verifyException("jetbrick.template.utils.PathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FileSystemResourceLoader fileSystemResourceLoader0 = new FileSystemResourceLoader();
      // Undeclared exception!
      try { 
        fileSystemResourceLoader0.loadAll();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      JetEngine jetEngine0 = JetEngine.create();
      Resource resource0 = jetEngine0.getResource(".");
      assertEquals("", resource0.getName());
      assertEquals("utf-8", resource0.getEncoding());
  }
}
