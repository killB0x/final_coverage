/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 11:36:50 GMT 2022
 */

package jetbrick.template.resource.loader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import jetbrick.template.JetEngine;
import jetbrick.template.resource.Resource;
import jetbrick.template.resource.loader.CompiledClassResourceLoader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CompiledClassResourceLoader_ESTest extends CompiledClassResourceLoader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CompiledClassResourceLoader compiledClassResourceLoader0 = new CompiledClassResourceLoader();
      // Undeclared exception!
      try { 
        compiledClassResourceLoader0.load("pXIOt{43//b2[p=Z]H");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CompiledClassResourceLoader compiledClassResourceLoader0 = new CompiledClassResourceLoader();
      // Undeclared exception!
      try { 
        compiledClassResourceLoader0.load((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.resource.Resource", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CompiledClassResourceLoader compiledClassResourceLoader0 = new CompiledClassResourceLoader();
      Resource resource0 = compiledClassResourceLoader0.load("jetbrick.template.resource.loader.CompiledClassResourceLoader");
      assertNull(resource0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CompiledClassResourceLoader compiledClassResourceLoader0 = new CompiledClassResourceLoader();
      List<String> list0 = compiledClassResourceLoader0.loadAll();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CompiledClassResourceLoader compiledClassResourceLoader0 = new CompiledClassResourceLoader();
      JetEngine jetEngine0 = JetEngine.create();
      compiledClassResourceLoader0.initialize(jetEngine0, "yHa#lOJr{r%4", "pa{.$'v)<n#]xX");
      assertEquals("1.0.0", jetEngine0.getVersion());
  }
}
