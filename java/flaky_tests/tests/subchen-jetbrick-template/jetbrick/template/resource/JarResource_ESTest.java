/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 11:28:34 GMT 2022
 */

package jetbrick.template.resource;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.net.URI;
import java.nio.file.NoSuchFileException;
import jetbrick.template.resource.JarResource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JarResource_ESTest extends JarResource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      File file0 = MockFile.createTempFile("jetbrick.template.resource.JarResource", "jetbrick.template.resource.JarResource");
      JarResource jarResource0 = new JarResource("jetbrick.template.resource.JarResource", file0, "jetbrick.template.resource.JarResource", "pDvW`.Lg");
      String string0 = jarResource0.getAbsolutePath();
      assertEquals("/tmp/jetbrick.template.resource.JarResource0jetbrick.template.resource.JarResource!/jetbrick.template.resource.JarResource", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      File file0 = MockFile.createTempFile("5V3.Dx~A&A5[$mz>O", "");
      JarResource jarResource0 = new JarResource("5V3.Dx~A&A5[$mz>O", file0, "", "");
      long long0 = jarResource0.lastModified();
      assertEquals(1392409281320L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JarResource jarResource0 = new JarResource("`!.V\u0005<P]+<", (File) null, "`!.V\u0005<P]+<", "`!.V\u0005<P]+<");
      // Undeclared exception!
      try { 
        jarResource0.lastModified();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.resource.JarResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      JarResource jarResource0 = new JarResource("", mockFile0, "", "");
      // Undeclared exception!
      try { 
        jarResource0.getSource("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.FileNotFoundException: / (Is a directory)
         //
         verifyException("jetbrick.template.utils.ExceptionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JarResource jarResource0 = new JarResource("~ZLTbn", (File) null, "~ZLTbn", "~ZLTbn");
      // Undeclared exception!
      try { 
        jarResource0.getSource("~ZLTbn");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile(",");
      JarResource jarResource0 = new JarResource(",", mockFile0, ",", ",");
      try { 
        jarResource0.getInputStream();
        fail("Expecting exception: NoSuchFileException");
      
      } catch(NoSuchFileException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      JarResource jarResource0 = new JarResource("", mockFile0, "", "");
      try { 
        jarResource0.getInputStream();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         //  (No such file or directory)
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      JarResource jarResource0 = null;
      try {
        jarResource0 = new JarResource((String) null, mockFile0, "", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.resource.Resource", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      JarResource jarResource0 = new JarResource("", mockFile0, "6[8x=wE3#{D7#tu>7", "6[8x=wE3#{D7#tu>7");
      String string0 = jarResource0.getAbsolutePath();
      assertEquals("!/6[8x=wE3#{D7#tu>7", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      JarResource jarResource0 = new JarResource("jetbrick.template.resource.Resource", mockFile0, "", "YS{X pXO rGj");
      long long0 = jarResource0.lastModified();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JarResource jarResource0 = new JarResource("~ZLTbn", (File) null, "~ZLTbn", "~ZLTbn");
      // Undeclared exception!
      try { 
        jarResource0.getInputStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }
}
