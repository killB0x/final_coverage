/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 11:19:50 GMT 2022
 */

package jetbrick.template.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import jetbrick.template.utils.DateUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DateUtils_ESTest extends DateUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Date date0 = DateUtils.asDate("", "2014-02-14 20:21:21");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Date date0 = DateUtils.asDate((String) null, "");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Date date0 = DateUtils.asDate("", "");
      String string0 = DateUtils.format(date0, "yyyy-MM-dd HH:mm:ss.SSS");
      assertEquals("2014-02-14 20:21:21.320", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateUtils.format((Date) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateUtils.format((Date) null, "l=xU`tuMS|G");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'l'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateUtils.format((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateUtils.asDate((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateUtils.asDate("D>/LzwT*H", "D>/LzwT*H");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'T'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Date date0 = DateUtils.asDate("dd MMM yy HH:mm z", "dd MMM yy HH:mm z");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Date date0 = DateUtils.asDate("2014-02-14 20:21:21");
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Date date0 = DateUtils.asDate("");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Date date0 = DateUtils.asDate((String) null);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DateUtils dateUtils0 = new DateUtils();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Date date0 = DateUtils.asDate("", "");
      String string0 = DateUtils.format(date0);
      assertEquals("2014-02-14 20:21:21", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Date date0 = DateUtils.asDate("", "");
      String string0 = DateUtils.format(date0, "");
      assertEquals("", string0);
  }
}
