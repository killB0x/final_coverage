/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 11:02:23 GMT 2022
 */

package jetbrick.template.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import jetbrick.template.utils.UnsafeCharArrayWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UnsafeCharArrayWriter_ESTest extends UnsafeCharArrayWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.append((CharSequence) "", 0, 32);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter(0);
      unsafeCharArrayWriter0.write(0);
      unsafeCharArrayWriter0.write("\u0000");
      UnsafeCharArrayWriter unsafeCharArrayWriter1 = unsafeCharArrayWriter0.append('F');
      unsafeCharArrayWriter1.write(0);
      assertEquals(4, unsafeCharArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      char[] charArray0 = new char[1];
      unsafeCharArrayWriter0.write(charArray0, 0, 0);
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter(0);
      unsafeCharArrayWriter0.write("", 0, 0);
      assertEquals(0, unsafeCharArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter(0);
      unsafeCharArrayWriter0.write(4254);
      unsafeCharArrayWriter0.toString();
      assertEquals(1, unsafeCharArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter(0);
      unsafeCharArrayWriter0.write(0);
      unsafeCharArrayWriter0.toCharArray();
      assertEquals(1, unsafeCharArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      UnsafeCharArrayWriter unsafeCharArrayWriter1 = unsafeCharArrayWriter0.append('R');
      int int0 = unsafeCharArrayWriter1.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      unsafeCharArrayWriter0.count = (-608);
      int int0 = unsafeCharArrayWriter0.size();
      assertEquals((-608), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter(0);
      unsafeCharArrayWriter0.append('i');
      unsafeCharArrayWriter0.append((CharSequence) null, 0, 0);
      assertEquals(1, unsafeCharArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.writeTo((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.utils.UnsafeCharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      unsafeCharArrayWriter0.count = 34;
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.writeTo(stringWriter0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.write((char[]) null, 1266, 1266);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.utils.UnsafeCharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      UnsafeCharArrayWriter unsafeCharArrayWriter1 = unsafeCharArrayWriter0.append((CharSequence) "");
      unsafeCharArrayWriter1.count = (-740);
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.write(charArray0, 1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.write((String) null, (-3216), (-3216));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.utils.UnsafeCharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      unsafeCharArrayWriter0.buf = null;
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.write((-842));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.utils.UnsafeCharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      unsafeCharArrayWriter0.count = (-1399);
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.write((-1399));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1399 out of bounds for length 32
         //
         verifyException("jetbrick.template.utils.UnsafeCharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      unsafeCharArrayWriter0.count = (-1047);
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      unsafeCharArrayWriter0.buf = null;
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      unsafeCharArrayWriter0.buf = null;
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.toCharArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      unsafeCharArrayWriter0.count = (-35);
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.toCharArray();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -35
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      char[] charArray0 = unsafeCharArrayWriter0.toCharArray();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.append((CharSequence) charBuffer0, (-99), (-99));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      unsafeCharArrayWriter0.count = (-47);
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.append((CharSequence) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      unsafeCharArrayWriter0.buf = null;
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.append((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.utils.UnsafeCharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter(1621);
      CharBuffer charBuffer0 = CharBuffer.allocate(1621);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      char[] charArray0 = new char[6];
      charBuffer0.get(charArray0);
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.append((CharSequence) charBuffer1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      unsafeCharArrayWriter0.buf = null;
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.append('c');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.utils.UnsafeCharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      unsafeCharArrayWriter0.count = (-1143);
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.append('>');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1143 out of bounds for length 32
         //
         verifyException("jetbrick.template.utils.UnsafeCharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter(0);
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.write("jetbrick.template.utils.UnsafeCharArrayWriter", 4133, (-2741));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      char[] charArray0 = unsafeCharArrayWriter0.toCharArray();
      unsafeCharArrayWriter0.write(charArray0);
      assertEquals(0, charArray0.length);
      assertEquals(0, unsafeCharArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter(0);
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.write(charArray0, 0, (-768));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.utils.UnsafeCharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter(0);
      UnsafeCharArrayWriter unsafeCharArrayWriter1 = unsafeCharArrayWriter0.append((CharSequence) null, 0, 0);
      assertEquals(0, unsafeCharArrayWriter1.size());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      unsafeCharArrayWriter0.append((CharSequence) null);
      assertEquals(4, unsafeCharArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter(0);
      unsafeCharArrayWriter0.write(4133);
      char[] charArray0 = new char[4];
      unsafeCharArrayWriter0.write(charArray0);
      UnsafeCharArrayWriter unsafeCharArrayWriter1 = unsafeCharArrayWriter0.append('B');
      unsafeCharArrayWriter1.write(charArray0);
      assertEquals(10, unsafeCharArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      char[] charArray0 = unsafeCharArrayWriter0.toCharArray();
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.write(charArray0, 0, 1650);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.utils.UnsafeCharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      unsafeCharArrayWriter0.count = (-1);
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.writeTo(unsafeCharArrayWriter0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.utils.UnsafeCharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.write(charArray0, 3903, 3903);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.utils.UnsafeCharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.write((char[]) null, (-697), (-697));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.utils.UnsafeCharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      unsafeCharArrayWriter0.write(1544);
      UnsafeCharArrayWriter unsafeCharArrayWriter1 = new UnsafeCharArrayWriter(1544);
      unsafeCharArrayWriter1.count = (-2455);
      // Undeclared exception!
      try { 
        unsafeCharArrayWriter0.writeTo(unsafeCharArrayWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = null;
      try {
        unsafeCharArrayWriter0 = new UnsafeCharArrayWriter((-245));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -245
         //
         verifyException("jetbrick.template.utils.UnsafeCharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter(0);
      unsafeCharArrayWriter0.reset();
      assertEquals(0, unsafeCharArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter(0);
      unsafeCharArrayWriter0.flush();
      assertEquals(0, unsafeCharArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter(0);
      unsafeCharArrayWriter0.writeTo(unsafeCharArrayWriter0);
      assertEquals(0, unsafeCharArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter(0);
      unsafeCharArrayWriter0.close();
      assertEquals(0, unsafeCharArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter(0);
      int int0 = unsafeCharArrayWriter0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      UnsafeCharArrayWriter unsafeCharArrayWriter0 = new UnsafeCharArrayWriter();
      String string0 = unsafeCharArrayWriter0.toString();
      assertEquals("", string0);
  }
}
