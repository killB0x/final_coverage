/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 11:36:06 GMT 2022
 */

package jetbrick.template.utils.finder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;
import jetbrick.template.utils.finder.FileFinder;
import jetbrick.template.utils.finder.TemplateFileFinder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TemplateFileFinder_ESTest extends TemplateFileFinder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TemplateFileFinder templateFileFinder0 = new TemplateFileFinder((String) null);
      // Undeclared exception!
      try { 
        templateFileFinder0.visitFileEntry((FileFinder.FileEntry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.utils.finder.TemplateFileFinder", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TemplateFileFinder templateFileFinder0 = new TemplateFileFinder("&c)x9D-;S_&&3Q-7eE");
      ZipEntry zipEntry0 = new ZipEntry("&c)x9D-;S_&&3Q-7eE");
      FileFinder.ZipFileEntry fileFinder_ZipFileEntry0 = new FileFinder.ZipFileEntry((ZipFile) null, zipEntry0, "&c)x9D-;S_&&3Q-7eE");
      templateFileFinder0.visitFileEntry(fileFinder_ZipFileEntry0);
      List<String> list0 = templateFileFinder0.getResources();
      assertTrue(list0.contains("&c)x9D-;S_&&3Q-7eE"));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("19Hr@cw&@.Zz");
      FileFinder.SystemFileEntry fileFinder_SystemFileEntry0 = new FileFinder.SystemFileEntry(mockFile0, "19Hr@cw&@.Zz", " =o)0~rh1=]gP1");
      TemplateFileFinder templateFileFinder0 = new TemplateFileFinder("19Hr@cw&@.Zz");
      templateFileFinder0.visitFileEntry(fileFinder_SystemFileEntry0);
      assertEquals(0L, fileFinder_SystemFileEntry0.length());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TemplateFileFinder templateFileFinder0 = new TemplateFileFinder("&c)x9D-;S_&&3Q-7eE");
      List<String> list0 = templateFileFinder0.getResources();
      assertTrue(list0.isEmpty());
  }
}
