/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 11:16:57 GMT 2022
 */

package jetbrick.template.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import jetbrick.template.utils.ConcurrentCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConcurrentCache_ESTest extends ConcurrentCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConcurrentCache.VolatileReference<ConcurrentCache.VolatileReference<Integer>> concurrentCache_VolatileReference0 = new ConcurrentCache.VolatileReference<ConcurrentCache.VolatileReference<Integer>>();
      ConcurrentCache.VolatileReference<Integer> concurrentCache_VolatileReference1 = concurrentCache_VolatileReference0.get();
      assertNull(concurrentCache_VolatileReference1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConcurrentCache.VolatileReference<ConcurrentCache.VolatileReference<Integer>> concurrentCache_VolatileReference0 = new ConcurrentCache.VolatileReference<ConcurrentCache.VolatileReference<Integer>>();
      concurrentCache_VolatileReference0.set((ConcurrentCache.VolatileReference<Integer>) null);
  }
}
