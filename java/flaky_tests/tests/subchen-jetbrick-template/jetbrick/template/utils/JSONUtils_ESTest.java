/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 10:54:44 GMT 2022
 */

package jetbrick.template.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.temporal.ChronoField;
import java.time.temporal.TemporalField;
import java.util.HashMap;
import jetbrick.template.utils.JSONUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JSONUtils_ESTest extends JSONUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<TemporalField, Long> hashMap0 = new HashMap<TemporalField, Long>();
      Long long0 = new Long((-263L));
      hashMap0.put((TemporalField) null, long0);
      // Undeclared exception!
      try { 
        JSONUtils.toJSONString(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<TemporalField, Long> hashMap0 = new HashMap<TemporalField, Long>();
      ChronoField chronoField0 = ChronoField.MILLI_OF_SECOND;
      ChronoField chronoField1 = ChronoField.DAY_OF_YEAR;
      Long long0 = new Long(0L);
      hashMap0.put(chronoField1, long0);
      hashMap0.put(chronoField0, long0);
      String string0 = JSONUtils.toJSONString(hashMap0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      String string0 = JSONUtils.toJSONString(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = JSONUtils.toJSONString("");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Long long0 = new Long(6481L);
      String string0 = JSONUtils.toJSONString(long0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = JSONUtils.toJSONString((Object) null);
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JSONUtils jSONUtils0 = new JSONUtils();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0L);
      String string0 = JSONUtils.toJSONString(mockDate0);
      assertEquals("\"1970-01-01 00:00:00\"", string0);
  }
}
