/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 10:31:21 GMT 2022
 */

package jetbrick.template.parser.code;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jetbrick.template.parser.code.TextCode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TextCode_ESTest extends TextCode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TextCode textCode0 = new TextCode("==null ? (short) 0 : ", "  @Override\n");
      textCode0.trimComments(true, true, "  @Override\n", "");
      assertTrue(textCode0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TextCode textCode0 = new TextCode("    ", " = \"");
      textCode0.trimComments(true, true, "sI*", "jH+#`<Z[MB_kw");
      assertFalse(textCode0.isEmpty());
      assertEquals(" = \"", textCode0.getText());
      assertEquals("    ", textCode0.getId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TextCode textCode0 = new TextCode(" \n", " \n");
      textCode0.trimEmptyLine(true, false, true);
      assertEquals("\n", textCode0.getText());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TextCode textCode0 = new TextCode("K`0b.mKF9`", "K`0b.mKF9`");
      textCode0.trimComments(true, true, "K`0b.mKF9`", "");
      textCode0.getText();
      assertTrue(textCode0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TextCode textCode0 = new TextCode("", "");
      String string0 = textCode0.getText();
      assertEquals("", string0);
      assertEquals("", textCode0.getId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TextCode textCode0 = new TextCode((String) null, (String) null);
      String string0 = textCode0.getId();
      assertTrue(textCode0.isEmpty());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TextCode textCode0 = new TextCode("", "");
      String string0 = textCode0.getId();
      assertEquals("", string0);
      assertTrue(textCode0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TextCode textCode0 = new TextCode("\n", "\n");
      // Undeclared exception!
      try { 
        textCode0.trimComments(false, false, (String) null, "\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.parser.code.TextCode", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TextCode textCode0 = new TextCode((String) null, "\n");
      String string0 = textCode0.toString();
      assertNotNull(string0);
      assertEquals("\n", textCode0.getText());
      assertEquals("$out.print(null, null_bytes);", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TextCode textCode0 = new TextCode("$out.print(", "ZbJ");
      textCode0.trimComments(true, false, "$out.print(", "ZbJ");
      textCode0.toString();
      assertTrue(textCode0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TextCode textCode0 = new TextCode("", "");
      boolean boolean0 = textCode0.isEmpty();
      assertEquals("", textCode0.getId());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TextCode textCode0 = new TextCode(", final JetWriter $out) throws Throwable {\n", "Uz?>-!`_aA\":[9.cS");
      boolean boolean0 = textCode0.isEmpty();
      assertFalse(boolean0);
      assertEquals("Uz?>-!`_aA\":[9.cS", textCode0.getText());
      assertEquals(", final JetWriter $out) throws Throwable {\n", textCode0.getId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TextCode textCode0 = new TextCode("$out.print(", "ZbJ");
      textCode0.trimComments(true, false, "$out.print(", "ZbJ");
      boolean boolean0 = textCode0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TextCode textCode0 = new TextCode("-HDsse~.uOL>;jV", "\";\n");
      textCode0.trimLastNewLine();
      textCode0.trimLastNewLine();
      assertEquals("\";", textCode0.getText());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TextCode textCode0 = new TextCode("", "");
      textCode0.trimLastNewLine();
      assertTrue(textCode0.isEmpty());
      assertEquals("", textCode0.getId());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TextCode textCode0 = new TextCode((String) null, "\n");
      assertFalse(textCode0.isEmpty());
      
      textCode0.trimLastNewLine();
      assertEquals("", textCode0.getText());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TextCode textCode0 = new TextCode(" \n", " \n");
      textCode0.trimEmptyLine(true, true, false);
      textCode0.trimLastNewLine();
      assertTrue(textCode0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TextCode textCode0 = new TextCode("}\n", "}\n");
      textCode0.trimComments(true, true, "}\n", "context");
      assertTrue(textCode0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TextCode textCode0 = new TextCode((String) null, "\n");
      textCode0.trimComments(true, true, ">@b07sJ", "$out.print(null, null_bytes);");
      assertFalse(textCode0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TextCode textCode0 = new TextCode("   ", "   ");
      textCode0.trimComments(true, true, "   ", "context");
      assertEquals("   ", textCode0.getId());
      assertEquals("   ", textCode0.getText());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TextCode textCode0 = new TextCode("}", "{L`%VR_g'0os=MyN");
      textCode0.trimComments(false, true, "", "jetbrick.template.parser.code.TextCode");
      assertEquals("{L`%VR_g'0os=MyN", textCode0.getText());
      assertEquals("}", textCode0.getId());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TextCode textCode0 = new TextCode("", "");
      textCode0.trimComments(false, false, "context", "");
      assertEquals("", textCode0.getId());
      assertEquals("", textCode0.getText());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TextCode textCode0 = new TextCode("   G", "   G");
      textCode0.trimEmptyLine(true, true, true);
      assertEquals("   G", textCode0.getText());
      assertEquals("   G", textCode0.getId());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TextCode textCode0 = new TextCode(" \n", " \n");
      textCode0.trimEmptyLine(true, true, false);
      textCode0.trimComments(false, false, " \n", " \n");
      assertTrue(textCode0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TextCode textCode0 = new TextCode("   ", "   ");
      textCode0.trimEmptyLine(true, true, true);
      assertEquals("   ", textCode0.getId());
      assertEquals("   ", textCode0.getText());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TextCode textCode0 = new TextCode("-HDsse~.uOL>;jV", "\";\n");
      textCode0.trimEmptyLine(false, false, false);
      assertEquals("\";\n", textCode0.getText());
      assertEquals("-HDsse~.uOL>;jV", textCode0.getId());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TextCode textCode0 = new TextCode("", "");
      textCode0.trimEmptyLine(true, true, true);
      assertTrue(textCode0.isEmpty());
      assertEquals("", textCode0.getId());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TextCode textCode0 = new TextCode("$out.print(", "ZbJ");
      textCode0.trimComments(true, false, "$out.print(", "ZbJ");
      textCode0.trimEmptyLine(false, false, true);
      assertTrue(textCode0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TextCode textCode0 = new TextCode("$out.print(", "ZbJ");
      String string0 = textCode0.getId();
      assertEquals("$out.print(", string0);
      assertEquals("ZbJ", textCode0.getText());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TextCode textCode0 = new TextCode("$out.print(", "ZbJ");
      String string0 = textCode0.getText();
      assertEquals("$out.print(", textCode0.getId());
      assertEquals("ZbJ", string0);
  }
}
