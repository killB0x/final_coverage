/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 11:37:31 GMT 2022
 */

package jetbrick.template.parser.code;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jetbrick.template.parser.code.Code;
import jetbrick.template.parser.code.LineCode;
import jetbrick.template.parser.code.MethodCode;
import jetbrick.template.parser.code.ScopeCode;
import jetbrick.template.parser.code.TemplateClassCode;
import jetbrick.template.parser.code.TextCode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Code_ESTest extends Code_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TextCode textCode0 = new TextCode("", "context");
      textCode0.trimComments(true, true, "", "context");
      String string0 = textCode0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ScopeCode scopeCode0 = new ScopeCode((ScopeCode) null, "");
      LineCode lineCode0 = scopeCode0.createLineCode("");
      String string0 = lineCode0.toString();
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ScopeCode scopeCode0 = new ScopeCode((ScopeCode) null, "");
      String string0 = scopeCode0.EMPTY.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TemplateClassCode templateClassCode0 = new TemplateClassCode();
      MethodCode methodCode0 = templateClassCode0.getMethodCode();
      methodCode0.bodyCode = (Code) templateClassCode0;
      // Undeclared exception!
      try { 
        templateClassCode0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TemplateClassCode templateClassCode0 = new TemplateClassCode();
      // Undeclared exception!
      try { 
        templateClassCode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jetbrick.template.parser.code.ScopeCode", e);
      }
  }
}
