/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 18:05:04 GMT 2022
 */

package io.github.jakaarl.iban.spi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.jakaarl.iban.Iban;
import io.github.jakaarl.iban.spi.CountryPatternValidation;
import java.util.HashMap;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CountryPatternValidation_ESTest extends CountryPatternValidation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, Pattern> hashMap0 = new HashMap<String, Pattern>();
      CountryPatternValidation countryPatternValidation0 = new CountryPatternValidation(hashMap0);
      // Undeclared exception!
      try { 
        countryPatternValidation0.canValidate((Iban) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.jakaarl.iban.spi.CountryPatternValidation", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<String, Pattern> hashMap0 = new HashMap<String, Pattern>();
      CountryPatternValidation countryPatternValidation0 = new CountryPatternValidation(hashMap0);
      // Undeclared exception!
      try { 
        countryPatternValidation0.isValid((Iban) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.jakaarl.iban.spi.CountryPatternValidation", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CountryPatternValidation countryPatternValidation0 = null;
      try {
        countryPatternValidation0 = new CountryPatternValidation();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Resource not found: /CountryPatternValidation.properties
         //
         verifyException("io.github.jakaarl.iban.spi.CountryPatternValidation", e);
      }
  }
}
