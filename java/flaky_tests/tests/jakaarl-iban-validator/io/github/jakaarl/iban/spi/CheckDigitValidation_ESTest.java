/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 18:06:36 GMT 2022
 */

package io.github.jakaarl.iban.spi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.github.jakaarl.iban.Iban;
import io.github.jakaarl.iban.spi.CheckDigitValidation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CheckDigitValidation_ESTest extends CheckDigitValidation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CheckDigitValidation checkDigitValidation0 = new CheckDigitValidation();
      // Undeclared exception!
      try { 
        checkDigitValidation0.isValid((Iban) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.github.jakaarl.iban.spi.CheckDigitValidation", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CheckDigitValidation checkDigitValidation0 = new CheckDigitValidation();
      Iban iban0 = new Iban("lb23");
      boolean boolean0 = checkDigitValidation0.isValid(iban0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Iban iban0 = new Iban("xn23");
      CheckDigitValidation checkDigitValidation0 = new CheckDigitValidation();
      boolean boolean0 = checkDigitValidation0.isValid(iban0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CheckDigitValidation checkDigitValidation0 = new CheckDigitValidation();
      Iban iban0 = new Iban("lb23");
      boolean boolean0 = checkDigitValidation0.canValidate(iban0);
      assertTrue(boolean0);
  }
}
