/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 00:20:42 GMT 2022
 */

package com.tomgibara.bits;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tomgibara.bits.BitBoundary;
import com.tomgibara.bits.IntArrayBitReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntArrayBitReader_ESTest extends IntArrayBitReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[8];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, (-1846));
      intArrayBitReader0.read((-1846));
      long long0 = intArrayBitReader0.skipBits(9223372036854775807L);
      assertEquals((-1846L), intArrayBitReader0.getPosition());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-4544);
      intArray0[1] = 64;
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 64);
      int int0 = intArrayBitReader0.read(64);
      assertEquals(64L, intArrayBitReader0.getPosition());
      assertEquals((-4544), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[1] = (-151);
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 985L);
      intArrayBitReader0.skipBits(17L);
      int int0 = intArrayBitReader0.read(32);
      assertEquals(49L, intArrayBitReader0.getPosition());
      assertEquals(131071, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 812;
      intArray0[1] = 805;
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 9223372036854775807L);
      intArrayBitReader0.readUntil(true);
      long long0 = intArrayBitReader0.readLong(22);
      assertEquals(45L, intArrayBitReader0.getPosition());
      assertEquals(2457600L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[6];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      intArrayBitReader0.readBit();
      long long0 = intArrayBitReader0.readLong(1);
      assertEquals(2L, intArrayBitReader0.getPosition());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[1];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      intArrayBitReader0.read((-3088));
      // Undeclared exception!
      try { 
        intArrayBitReader0.read(5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -97 out of bounds for length 1
         //
         verifyException("com.tomgibara.bits.IntArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[8];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, (-1846));
      try { 
        intArrayBitReader0.readBoolean();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.IntArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[9];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      intArrayBitReader0.readUntil(false);
      assertEquals(1L, intArrayBitReader0.getPosition());
      
      long long0 = intArrayBitReader0.skipBits((-1L));
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      long long0 = intArrayBitReader0.setPosition(2146L);
      assertEquals(0L, intArrayBitReader0.getPosition());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[8];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, (-1L));
      long long0 = intArrayBitReader0.setPosition(0L);
      assertEquals((-1L), intArrayBitReader0.getPosition());
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = (-483);
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 4);
      int int0 = intArrayBitReader0.readBit();
      assertEquals(1L, intArrayBitReader0.getPosition());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-4);
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 985L);
      int int0 = intArrayBitReader0.read((-82));
      assertEquals((-82L), intArrayBitReader0.getPosition());
      assertEquals(16383, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-4);
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 985L);
      int int0 = intArrayBitReader0.read(32);
      assertEquals(32L, intArrayBitReader0.getPosition());
      assertEquals((-4), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[1];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 0L);
      intArrayBitReader0.getSize();
      assertEquals(0L, intArrayBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[1];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, (-1L));
      long long0 = intArrayBitReader0.getSize();
      assertEquals((-1L), long0);
      assertEquals(0L, intArrayBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[3];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      long long0 = intArrayBitReader0.getPosition();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[3];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 1);
      long long0 = intArrayBitReader0.skipBits(1);
      assertEquals(1L, long0);
      
      long long1 = intArrayBitReader0.getPosition();
      assertEquals(1L, long1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[4];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 9223372036854775807L);
      intArrayBitReader0.read((-93));
      long long0 = intArrayBitReader0.getPosition();
      assertEquals((-93L), long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader((int[]) null, (-3162L));
      intArrayBitReader0.getInts();
      assertEquals(0L, intArrayBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      intArrayBitReader0.getInts();
      assertEquals(0L, intArrayBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader((int[]) null, 96L);
      // Undeclared exception!
      try { 
        intArrayBitReader0.readBit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[1];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      intArrayBitReader0.read((-3088));
      // Undeclared exception!
      try { 
        intArrayBitReader0.readBit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      // Undeclared exception!
      try { 
        intArrayBitReader0.readBit();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.IntArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader((int[]) null, 5);
      // Undeclared exception!
      try { 
        intArrayBitReader0.read(5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.IntArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[6];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 9223372036854775807L);
      intArrayBitReader0.read(805);
      // Undeclared exception!
      try { 
        intArrayBitReader0.read((-4544));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 25 out of bounds for length 6
         //
         verifyException("com.tomgibara.bits.IntArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[3];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      intArrayBitReader0.setPosition(96L);
      // Undeclared exception!
      try { 
        intArrayBitReader0.read(31);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.IntArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int[] intArray0 = new int[6];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 9223372036854775807L);
      int int0 = intArrayBitReader0.read(0);
      assertEquals(0, int0);
      assertEquals(0L, intArrayBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IntArrayBitReader intArrayBitReader0 = null;
      try {
        intArrayBitReader0 = new IntArrayBitReader((int[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null ints
         //
         verifyException("com.tomgibara.bits.IntArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int[] intArray0 = new int[1];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 0L);
      intArrayBitReader0.getInts();
      assertEquals(0L, intArrayBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[4];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      // Undeclared exception!
      try { 
        intArrayBitReader0.setPosition((-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative position
         //
         verifyException("com.tomgibara.bits.BitStreams", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[1];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 0L);
      assertEquals(0L, intArrayBitReader0.getPosition());
      
      BitBoundary bitBoundary0 = BitBoundary.SHORT;
      int int0 = intArrayBitReader0.skipToBoundary(bitBoundary0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[2];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 985L);
      long long0 = intArrayBitReader0.getSize();
      assertEquals(0L, intArrayBitReader0.getPosition());
      assertEquals(985L, long0);
  }
}
