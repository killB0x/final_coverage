/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 00:12:39 GMT 2022
 */

package com.tomgibara.bits;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tomgibara.bits.BitBoundary;
import com.tomgibara.bits.ByteArrayBitWriter;
import com.tomgibara.bits.IntArrayBitWriter;
import com.tomgibara.bits.NullBitWriter;
import com.tomgibara.bits.OutputStreamBitWriter;
import com.tomgibara.bits.PrintStreamBitWriter;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BitWriter_ESTest extends BitWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NullBitWriter nullBitWriter0 = new NullBitWriter();
      nullBitWriter0.write((-1), (-6290));
      BitBoundary bitBoundary0 = BitBoundary.BIT;
      try { 
        nullBitWriter0.padToBoundary(bitBoundary0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no position
         //
         verifyException("com.tomgibara.bits.BitBoundary", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter(mockPrintStream0);
      BigInteger bigInteger0 = BigInteger.ZERO;
      int int0 = printStreamBitWriter0.write(bigInteger0, 32);
      assertEquals(32, byteArrayOutputStream0.size());
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "& M'd.E-|CRM6nv");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter(mockPrintStream0);
      BigInteger bigInteger0 = BigInteger.ZERO;
      int int0 = printStreamBitWriter0.write(bigInteger0, 64);
      assertEquals(64L, mockFile0.length());
      assertEquals(64, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("glFh#TJG>m$b");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter(mockPrintStream0);
      long long0 = printStreamBitWriter0.writeBooleans(true, 1485);
      assertEquals(1472L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NullBitWriter nullBitWriter0 = new NullBitWriter();
      long long0 = nullBitWriter0.writeBooleans(true, (-60L));
      assertEquals((-60L), long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      BigInteger bigInteger0 = BigInteger.ZERO;
      int int0 = printStreamBitWriter0.write(bigInteger0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NullBitWriter nullBitWriter0 = new NullBitWriter();
      BigInteger bigInteger0 = BigInteger.ZERO;
      int int0 = nullBitWriter0.write(bigInteger0, (-743));
      assertEquals((-743), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NullBitWriter nullBitWriter0 = new NullBitWriter();
      int int0 = nullBitWriter0.write(128L, (-971));
      assertEquals((-971), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NullBitWriter nullBitWriter0 = new NullBitWriter();
      int int0 = nullBitWriter0.write(0, (-2058005161));
      assertEquals((-2058005161), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter(bufferedOutputStream0);
      outputStreamBitWriter0.writeBooleans(false, 2556L);
      int int0 = outputStreamBitWriter0.flush();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("88*l#][b");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter(mockPrintStream0);
      // Undeclared exception!
      printStreamBitWriter0.writeBooleans(true, 9223372036854775807L);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0, 964L);
      // Undeclared exception!
      try { 
        intArrayBitWriter0.writeBooleans(true, 747L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.tomgibara.bits.IntArrayBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0, 32L);
      byteArrayBitWriter0.writeBit(3);
      try { 
        byteArrayBitWriter0.writeBooleans(false, 32L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0, 0L);
      try { 
        intArrayBitWriter0.writeBoolean(true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array full
         //
         verifyException("com.tomgibara.bits.IntArrayBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      // Undeclared exception!
      try { 
        printStreamBitWriter0.writeBoolean(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter((byte[]) null, (-5055L));
      try { 
        byteArrayBitWriter0.writeBoolean(true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0);
      BigInteger bigInteger0 = BigInteger.ZERO;
      try { 
        intArrayBitWriter0.write(bigInteger0, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array full
         //
         verifyException("com.tomgibara.bits.IntArrayBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("%");
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter(mockPrintStream0);
      BigInteger bigInteger0 = BigInteger.ZERO;
      // Undeclared exception!
      printStreamBitWriter0.write(bigInteger0, 1073741824);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      // Undeclared exception!
      try { 
        printStreamBitWriter0.write(bigInteger0, 38);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[1];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0, 4371L);
      BigInteger bigInteger0 = BigInteger.TEN;
      // Undeclared exception!
      try { 
        intArrayBitWriter0.write(bigInteger0, 2146400154);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("com.tomgibara.bits.IntArrayBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      try { 
        byteArrayBitWriter0.write(bigInteger0, 49);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteArrayBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[3];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0, (-180L));
      try { 
        intArrayBitWriter0.write((long) 32, 32);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array full
         //
         verifyException("com.tomgibara.bits.IntArrayBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[4];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0);
      try { 
        intArrayBitWriter0.write(0, 2145325372);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // array full
         //
         verifyException("com.tomgibara.bits.IntArrayBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      // Undeclared exception!
      try { 
        printStreamBitWriter0.write(16, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter((OutputStream) null);
      outputStreamBitWriter0.writeBoolean(true);
      BitBoundary bitBoundary0 = BitBoundary.BYTE;
      // Undeclared exception!
      try { 
        outputStreamBitWriter0.padToBoundary(bitBoundary0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.OutputStreamBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[3];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0, 833L);
      intArrayBitWriter0.writeBooleans(true, (-2139));
      intArrayBitWriter0.flush();
      intArrayBitWriter0.writeBoolean(true);
      BitBoundary bitBoundary0 = BitBoundary.LONG;
      // Undeclared exception!
      try { 
        intArrayBitWriter0.padToBoundary(bitBoundary0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -67 out of bounds for length 3
         //
         verifyException("com.tomgibara.bits.IntArrayBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0, 3L);
      byteArrayBitWriter0.write(3L, 3);
      BitBoundary bitBoundary0 = BitBoundary.BYTE;
      try { 
        byteArrayBitWriter0.padToBoundary(bitBoundary0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      // Undeclared exception!
      try { 
        printStreamBitWriter0.write((-4559L), 48);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      int int0 = printStreamBitWriter0.write(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0, false);
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter(mockPrintStream0);
      int int0 = printStreamBitWriter0.write(0, 4);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      // Undeclared exception!
      try { 
        printStreamBitWriter0.write((-837), (-837));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative count
         //
         verifyException("com.tomgibara.bits.BitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      NullBitWriter nullBitWriter0 = new NullBitWriter();
      nullBitWriter0.writeBit(48);
      BitBoundary bitBoundary0 = BitBoundary.SHORT;
      int int0 = nullBitWriter0.padToBoundary(bitBoundary0);
      assertEquals(16L, nullBitWriter0.getPosition());
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BitBoundary bitBoundary0 = BitBoundary.SHORT;
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      try { 
        printStreamBitWriter0.padToBoundary(bitBoundary0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // padding to boundary not supported
         //
         verifyException("com.tomgibara.bits.BitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NullBitWriter nullBitWriter0 = new NullBitWriter();
      // Undeclared exception!
      try { 
        nullBitWriter0.padToBoundary((BitBoundary) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null boundary
         //
         verifyException("com.tomgibara.bits.BitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter(bufferedOutputStream0);
      BitBoundary bitBoundary0 = BitBoundary.LONG;
      int int0 = outputStreamBitWriter0.padToBoundary(bitBoundary0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("%");
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter(mockPrintStream0);
      BigInteger bigInteger0 = BigInteger.ZERO;
      int int0 = printStreamBitWriter0.write(bigInteger0, 2585);
      assertEquals(2585, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      BigInteger bigInteger0 = BigInteger.TEN;
      // Undeclared exception!
      try { 
        printStreamBitWriter0.write(bigInteger0, (-2058005161));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative count
         //
         verifyException("com.tomgibara.bits.BitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      // Undeclared exception!
      try { 
        printStreamBitWriter0.write(0L, 1164);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // count too great
         //
         verifyException("com.tomgibara.bits.BitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      // Undeclared exception!
      try { 
        printStreamBitWriter0.write((long) (-34), (-34));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative count
         //
         verifyException("com.tomgibara.bits.BitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      int int0 = printStreamBitWriter0.write((long) 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      // Undeclared exception!
      try { 
        printStreamBitWriter0.write(53, 53);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // count too great
         //
         verifyException("com.tomgibara.bits.BitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      // Undeclared exception!
      try { 
        printStreamBitWriter0.writeBooleans(false, (-1135L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative count
         //
         verifyException("com.tomgibara.bits.BitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "if6t$C:");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter(mockPrintStream0);
      long long0 = printStreamBitWriter0.writeBooleans(false, 2432L);
      assertEquals(2400L, mockFile0.length());
      assertEquals(2400L, long0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("?<plfN(b/'i>x>");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter(mockPrintStream0);
      long long0 = printStreamBitWriter0.writeBooleans(true, 32L);
      assertEquals(32L, long0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      // Undeclared exception!
      try { 
        printStreamBitWriter0.writeBooleans(false, 9223372036854766879L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      long long0 = printStreamBitWriter0.writeBooleans(true, 0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int[] intArray0 = new int[3];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0, 403L);
      int int0 = intArrayBitWriter0.writeBoolean(false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0, false);
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter(mockPrintStream0);
      int int0 = printStreamBitWriter0.flush();
      assertEquals(0, int0);
  }
}
