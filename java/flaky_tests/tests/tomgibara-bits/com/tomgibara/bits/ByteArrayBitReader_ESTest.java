/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 00:26:56 GMT 2022
 */

package com.tomgibara.bits;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tomgibara.bits.ByteArrayBitReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteArrayBitReader_ESTest extends ByteArrayBitReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 0L);
      long long0 = byteArrayBitReader0.seekByte(0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 1L);
      long long0 = byteArrayBitReader0.skipBytes(1L);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 1L);
      byteArrayBitReader0.skipBits(2911L);
      long long0 = byteArrayBitReader0.skipBytes(0);
      assertEquals(1L, byteArrayBitReader0.getPosition());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 1L);
      long long0 = byteArrayBitReader0.skipBytes(1489L);
      assertEquals(8L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      long long0 = byteArrayBitReader0.seekByte((-642L));
      assertEquals((-642L), long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)113;
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      int int0 = byteArrayBitReader0.readByte();
      assertEquals(113, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader((byte[]) null, 0L);
      byte[] byteArray0 = byteArrayBitReader0.getBytes();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      byte[] byteArray1 = byteArrayBitReader0.getBytes();
      assertEquals(5, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader((byte[]) null);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.skipBytes(2147483647L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader((byte[]) null);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.seekByte((-1217L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader((byte[]) null);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.readByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      byteArrayBitReader0.skipBytes((-1011L));
      // Undeclared exception!
      try { 
        byteArrayBitReader0.readByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1011 out of bounds for length 0
         //
         verifyException("com.tomgibara.bits.ByteArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 1L);
      long long0 = byteArrayBitReader0.seekByte(1489L);
      assertEquals(8L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      int int0 = byteArrayBitReader0.readByte();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      int int0 = byteArrayBitReader0.readByte();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      byte[] byteArray1 = byteArrayBitReader0.getBytes();
      assertArrayEquals(new byte[] {}, byteArray1);
  }
}
