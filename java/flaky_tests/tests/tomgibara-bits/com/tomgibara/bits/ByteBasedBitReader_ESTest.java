/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 00:04:07 GMT 2022
 */

package com.tomgibara.bits;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tomgibara.bits.BitBoundary;
import com.tomgibara.bits.ByteArrayBitReader;
import com.tomgibara.bits.InputStreamBitReader;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteBasedBitReader_ESTest extends ByteBasedBitReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 8L);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.readUntil(true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      byteArrayBitReader0.readBoolean();
      byteArrayBitReader0.read(4);
      assertEquals(5L, byteArrayBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, (byte)11);
      int int0 = byteArrayBitReader0.read((byte)11);
      assertEquals(11L, byteArrayBitReader0.getPosition());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, (-800L));
      try { 
        byteArrayBitReader0.readBoolean();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 2L);
      byteArrayBitReader0.readUntil(false);
      assertEquals(1L, byteArrayBitReader0.getPosition());
      
      long long0 = byteArrayBitReader0.setPosition((byte)0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-3056), (-3056));
      InputStreamBitReader inputStreamBitReader0 = new InputStreamBitReader(byteArrayInputStream0);
      long long0 = inputStreamBitReader0.setPosition(339L);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-24448L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      byteArray0[5] = (byte)119;
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      byteArrayBitReader0.readLong((byte)39);
      BitBoundary bitBoundary0 = BitBoundary.BYTE;
      byteArrayBitReader0.skipToBoundary(bitBoundary0);
      byteArrayBitReader0.readBoolean();
      int int0 = byteArrayBitReader0.readUntil(false);
      assertEquals(45L, byteArrayBitReader0.getPosition());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-89);
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      int int0 = byteArrayBitReader0.readBit();
      assertEquals(1L, byteArrayBitReader0.getPosition());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-89);
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      int int0 = byteArrayBitReader0.read((byte)10);
      assertEquals(10L, byteArrayBitReader0.getPosition());
      assertEquals(668, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      long long0 = byteArrayBitReader0.getPosition();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      byteArrayBitReader0.skipBits(8L);
      long long0 = byteArrayBitReader0.getPosition();
      assertEquals(8L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      InputStreamBitReader inputStreamBitReader0 = new InputStreamBitReader(pipedInputStream0);
      // Undeclared exception!
      try { 
        inputStreamBitReader0.skipBits(1L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("com.tomgibara.bits.InputStreamBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, (-224L));
      byteArrayBitReader0.skipBits((byte)3);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.skipBits(1444L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no position
         //
         verifyException("com.tomgibara.bits.BitBoundary", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader((byte[]) null);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.skipBits(1L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      byteArrayBitReader0.seekByte((-2851L));
      // Undeclared exception!
      try { 
        byteArrayBitReader0.skipBits(3791L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2378 out of bounds for length 3
         //
         verifyException("com.tomgibara.bits.ByteArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      InputStreamBitReader inputStreamBitReader0 = new InputStreamBitReader(pipedInputStream0);
      // Undeclared exception!
      try { 
        inputStreamBitReader0.setPosition(8L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("com.tomgibara.bits.InputStreamBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InputStreamBitReader inputStreamBitReader0 = new InputStreamBitReader((InputStream) null);
      // Undeclared exception!
      try { 
        inputStreamBitReader0.setPosition(1930L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.InputStreamBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.setPosition((-647L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative position
         //
         verifyException("com.tomgibara.bits.BitStreams", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      InputStreamBitReader inputStreamBitReader0 = new InputStreamBitReader(pipedInputStream0);
      // Undeclared exception!
      try { 
        inputStreamBitReader0.readUntil(true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("com.tomgibara.bits.InputStreamBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader((byte[]) null);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.readUntil(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      byteArrayBitReader0.skipBytes((-1708L));
      // Undeclared exception!
      try { 
        byteArrayBitReader0.readUntil(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1708 out of bounds for length 1
         //
         verifyException("com.tomgibara.bits.ByteArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 3132);
      InputStreamBitReader inputStreamBitReader0 = new InputStreamBitReader(bufferedInputStream0);
      // Undeclared exception!
      try { 
        inputStreamBitReader0.readBit();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("com.tomgibara.bits.InputStreamBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader((byte[]) null);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.readBit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      byteArrayBitReader0.seekByte((-725L));
      // Undeclared exception!
      try { 
        byteArrayBitReader0.readBit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -725 out of bounds for length 2
         //
         verifyException("com.tomgibara.bits.ByteArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      InputStreamBitReader inputStreamBitReader0 = new InputStreamBitReader(sequenceInputStream0);
      // Undeclared exception!
      try { 
        inputStreamBitReader0.read(1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable
         //
         verifyException("com.tomgibara.bits.InputStreamBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader((byte[]) null);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.read(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      byteArrayBitReader0.seekByte((-2134L));
      // Undeclared exception!
      try { 
        byteArrayBitReader0.read(20);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2134 out of bounds for length 1
         //
         verifyException("com.tomgibara.bits.ByteArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      long long0 = byteArrayBitReader0.skipBits(1152921504606846903L);
      assertEquals(72L, byteArrayBitReader0.getPosition());
      assertEquals(72L, long0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      byteArrayBitReader0.readByte();
      // Undeclared exception!
      try { 
        byteArrayBitReader0.readBit();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      byteArrayBitReader0.readBoolean();
      int int0 = byteArrayBitReader0.readBit();
      assertEquals(2L, byteArrayBitReader0.getPosition());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader((byte[]) null);
      long long0 = byteArrayBitReader0.skipBits((-1L));
      assertEquals(0L, byteArrayBitReader0.getPosition());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 0L);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.readUntil(false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 11L);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.readUntil(true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.readUntil(true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      int int0 = byteArrayBitReader0.read((byte)8);
      assertEquals(8L, byteArrayBitReader0.getPosition());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.read(32);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      byteArrayBitReader0.readBoolean();
      byteArrayBitReader0.read(7);
      assertEquals(8L, byteArrayBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, (-974L));
      // Undeclared exception!
      try { 
        byteArrayBitReader0.read(16);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      int int0 = byteArrayBitReader0.read(0);
      assertEquals(0L, byteArrayBitReader0.getPosition());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.read((byte)39);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // count too great
         //
         verifyException("com.tomgibara.bits.ByteBasedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      // Undeclared exception!
      try { 
        byteArrayBitReader0.read((-1402));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative count
         //
         verifyException("com.tomgibara.bits.ByteBasedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      byteArrayBitReader0.readBoolean();
      long long0 = byteArrayBitReader0.skipBits((byte)8);
      assertEquals(8L, byteArrayBitReader0.getPosition());
      assertEquals(7L, long0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, (byte)8);
      byteArrayBitReader0.setPosition((byte)8);
      try { 
        byteArrayBitReader0.readBoolean();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      InputStreamBitReader inputStreamBitReader0 = new InputStreamBitReader(sequenceInputStream0);
      long long0 = inputStreamBitReader0.setPosition(0);
      assertEquals(0L, inputStreamBitReader0.getPosition());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-239), 4);
      InputStreamBitReader inputStreamBitReader0 = new InputStreamBitReader(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        inputStreamBitReader0.setPosition((byte)1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -239 out of bounds for length 5
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 11L);
      long long0 = byteArrayBitReader0.skipBits(11L);
      assertEquals(11L, byteArrayBitReader0.getPosition());
      assertEquals(11L, long0);
  }
}
