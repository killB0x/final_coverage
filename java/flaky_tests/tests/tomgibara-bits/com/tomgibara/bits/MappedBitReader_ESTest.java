/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 00:23:15 GMT 2022
 */

package com.tomgibara.bits;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tomgibara.bits.MappedBitReader;
import java.nio.MappedByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MappedBitReader_ESTest extends MappedBitReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, 0L, 0L);
      // Undeclared exception!
      try { 
        mappedBitReader0.read(837);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.MappedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, 9223372036854775807L, 1L);
      long long0 = mappedBitReader0.setPosition(1L);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, 9223372036854775807L, 7L);
      long long0 = mappedBitReader0.getSize();
      assertEquals(9223372036854775807L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, 9223372036854775807L, 7L);
      long long0 = mappedBitReader0.getPosition();
      assertEquals(7L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, 9223372036854775807L, 0L);
      // Undeclared exception!
      try { 
        mappedBitReader0.setPosition(9223372036854775807L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newPosition < 0: (-1 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, 0L, 0L);
      // Undeclared exception!
      try { 
        mappedBitReader0.setPosition((-1732L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative position
         //
         verifyException("com.tomgibara.bits.BitStreams", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MappedBitReader mappedBitReader0 = null;
      try {
        mappedBitReader0 = new MappedBitReader((MappedByteBuffer) null, 0L, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.MappedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = null;
      try {
        mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, 9223372036854775807L, 9223372036854775807L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newPosition < 0: (-1 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = null;
      try {
        mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, (-1141L), (-1141L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative position
         //
         verifyException("com.tomgibara.bits.BitStreams", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, 0L, 0L);
      long long0 = mappedBitReader0.setPosition(4294967295L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, 0L, 0L);
      long long0 = mappedBitReader0.getPosition();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, 0L, 9223372036854775807L);
      mappedBitReader0.setSize(9223372036854775807L);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, 0, 0);
      int int0 = mappedBitReader0.read(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, 0L, 0L);
      // Undeclared exception!
      try { 
        mappedBitReader0.read((-64));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.MappedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, 0L, 0L);
      // Undeclared exception!
      try { 
        mappedBitReader0.setSize((-2435L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative position
         //
         verifyException("com.tomgibara.bits.BitStreams", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, 0L, 0L);
      // Undeclared exception!
      try { 
        mappedBitReader0.setSize(3159L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.MappedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MappedByteBuffer mappedByteBuffer0 = mock(MappedByteBuffer.class, new ViolatedAssumptionAnswer());
      MappedBitReader mappedBitReader0 = new MappedBitReader(mappedByteBuffer0, 0L, 0L);
      // Undeclared exception!
      try { 
        mappedBitReader0.readBit();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.MappedBitReader", e);
      }
  }
}
