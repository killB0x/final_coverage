/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 00:17:51 GMT 2022
 */

package com.tomgibara.bits;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tomgibara.bits.BitReader;
import com.tomgibara.bits.ConstantReader;
import com.tomgibara.bits.FileBitReaderFactory;
import com.tomgibara.bits.InputStreamBitReader;
import java.io.File;
import java.io.InputStream;
import java.nio.file.Path;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileBitReaderFactory_ESTest extends FileBitReaderFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("o4b9dL36sR]z");
      File file0 = MockFile.createTempFile("o4b9dL36sR]z", "o4b9dL36sR]z", (File) mockFile0);
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.MEMORY;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("o4b9dL36sR]z/o4b9dL36sR]z0o4b9dL36sR]z");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(file0, fileBitReaderFactory_Mode0);
      fileBitReaderFactory0.openReader();
      assertEquals(8192, fileBitReaderFactory0.getBufferSize());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.CHANNEL;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(mockFile0, fileBitReaderFactory_Mode0, 4);
      fileBitReaderFactory0.openReader();
      assertEquals(4, fileBitReaderFactory0.getBufferSize());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("o4b9dL36sR]z");
      File file0 = MockFile.createTempFile("o4b9dL36sR]z", "o4b9dL36sR]z", (File) mockFile0);
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.STREAM;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(file0, fileBitReaderFactory_Mode0);
      File file1 = fileBitReaderFactory0.getFile();
      FileBitReaderFactory fileBitReaderFactory1 = new FileBitReaderFactory(file1, fileBitReaderFactory_Mode0, 1);
      fileBitReaderFactory1.openReader();
      assertEquals(1, fileBitReaderFactory1.getBufferSize());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.CHANNEL;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(mockFile0, fileBitReaderFactory_Mode0, 4);
      int int0 = fileBitReaderFactory0.getBufferSize();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("r/r");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("r", "r");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "r");
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.MEMORY;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(mockFile0, fileBitReaderFactory_Mode0);
      try { 
        fileBitReaderFactory0.openReader();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Simulated IOException
         //
         verifyException("com.tomgibara.bits.FileBitReaderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("o4b9dL36sR]z");
      File file0 = MockFile.createTempFile("o4b9dL36sR]z", "o4b9dL36sR]z", (File) mockFile0);
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.STREAM;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(file0, fileBitReaderFactory_Mode0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      BitReader bitReader0 = fileBitReaderFactory0.openReader();
      try { 
        fileBitReaderFactory0.closeReader(bitReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Simulated IOException
         //
         verifyException("com.tomgibara.bits.FileBitReaderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      File file0 = MockFile.createTempFile(".mVvy+sl0", "");
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.STREAM;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(file0, fileBitReaderFactory_Mode0, 1026);
      fileBitReaderFactory0.getFile();
      assertEquals(1026, fileBitReaderFactory0.getBufferSize());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.MEMORY;
      MockFile mockFile0 = new MockFile("");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      Path path0 = mockFile1.toPath();
      File file0 = path0.toFile();
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(file0, fileBitReaderFactory_Mode0, 1);
      File file1 = fileBitReaderFactory0.getFile();
      //  // Unstable assertion: assertEquals(91906568192L, file1.getFreeSpace());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("\"~0IG(?{56PVpMJ", "\"~0IG(?{56PVpMJ");
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.MEMORY;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(mockFile0, fileBitReaderFactory_Mode0);
      fileBitReaderFactory0.getFile();
      assertEquals(8192, fileBitReaderFactory0.getBufferSize());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/user");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("");
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.CHANNEL;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(mockFile0, fileBitReaderFactory_Mode0);
      BitReader bitReader0 = fileBitReaderFactory0.openReader();
      try { 
        fileBitReaderFactory0.closeReader(bitReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Simulated IOException
         //
         verifyException("com.tomgibara.bits.FileBitReaderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("w)lgsTR47[");
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.MEMORY;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(mockFile0, fileBitReaderFactory_Mode0);
      InputStreamBitReader inputStreamBitReader0 = new InputStreamBitReader((InputStream) null);
      // Undeclared exception!
      try { 
        fileBitReaderFactory0.closeReader(inputStreamBitReader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.FileBitReaderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      File file0 = MockFile.createTempFile("u; In,k?kLPzvp#g|}", "u; In,k?kLPzvp#g|}");
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.MEMORY;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(file0, fileBitReaderFactory_Mode0);
      fileBitReaderFactory0.openReader();
      fileBitReaderFactory0.openReader();
      assertEquals(8192, fileBitReaderFactory0.getBufferSize());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      File file0 = MockFile.createTempFile("STREAM", "STREAM");
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.MEMORY;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(file0, fileBitReaderFactory_Mode0);
      ConstantReader.OnesReader constantReader_OnesReader0 = new ConstantReader.OnesReader(8192, 8192);
      fileBitReaderFactory0.closeReader(constantReader_OnesReader0);
      assertEquals(8192, fileBitReaderFactory0.getBufferSize());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFile mockFile0 = new MockFile("o4b9dL36sR]z");
      File file0 = MockFile.createTempFile("o4b9dL36sR]z", "o4b9dL36sR]z", (File) mockFile0);
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.STREAM;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(file0, fileBitReaderFactory_Mode0);
      BitReader bitReader0 = fileBitReaderFactory0.openReader();
      fileBitReaderFactory0.closeReader(bitReader0);
      assertEquals(8192, fileBitReaderFactory0.getBufferSize());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("w)lgsTR47[", "w)lgsTR47[");
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.MEMORY;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(mockFile0, fileBitReaderFactory_Mode0);
      try { 
        fileBitReaderFactory0.closeReader((BitReader) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null reader
         //
         verifyException("com.tomgibara.bits.FileBitReaderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.CHANNEL;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(mockFile0, fileBitReaderFactory_Mode0);
      BitReader bitReader0 = fileBitReaderFactory0.openReader();
      fileBitReaderFactory0.closeReader(bitReader0);
      assertEquals(8192, fileBitReaderFactory0.getBufferSize());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockFile mockFile0 = new MockFile("r", "r");
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.MEMORY;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(mockFile0, fileBitReaderFactory_Mode0);
      // Undeclared exception!
      try { 
        fileBitReaderFactory0.openReader();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.FileBitReaderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.MEMORY;
      FileBitReaderFactory fileBitReaderFactory0 = null;
      try {
        fileBitReaderFactory0 = new FileBitReaderFactory(mockFile0, fileBitReaderFactory_Mode0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // non-positive bufferSize
         //
         verifyException("com.tomgibara.bits.FileBitReaderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockFile mockFile0 = new MockFile("w)lgsTR47[");
      FileBitReaderFactory fileBitReaderFactory0 = null;
      try {
        fileBitReaderFactory0 = new FileBitReaderFactory(mockFile0, (FileBitReaderFactory.Mode) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null mode
         //
         verifyException("com.tomgibara.bits.FileBitReaderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.STREAM;
      FileBitReaderFactory fileBitReaderFactory0 = null;
      try {
        fileBitReaderFactory0 = new FileBitReaderFactory((File) null, fileBitReaderFactory_Mode0, 1440);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null file
         //
         verifyException("com.tomgibara.bits.FileBitReaderFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      File file0 = MockFile.createTempFile(".mVvy+sl0", "");
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.STREAM;
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(file0, fileBitReaderFactory_Mode0, 1026);
      fileBitReaderFactory0.getMode();
      assertEquals(1026, fileBitReaderFactory0.getBufferSize());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileBitReaderFactory.Mode fileBitReaderFactory_Mode0 = FileBitReaderFactory.Mode.MEMORY;
      MockFile mockFile0 = new MockFile("");
      FileBitReaderFactory fileBitReaderFactory0 = new FileBitReaderFactory(mockFile0, fileBitReaderFactory_Mode0, 1);
      fileBitReaderFactory0.getFile();
      assertEquals(1, fileBitReaderFactory0.getBufferSize());
  }
}
