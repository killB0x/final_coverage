/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 00:07:22 GMT 2022
 */

package com.tomgibara.bits;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tomgibara.bits.ByteArrayBitWriter;
import com.tomgibara.bits.OutputStreamBitWriter;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteBasedBitWriter_ESTest extends ByteBasedBitWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0, 296L);
      byteArrayBitWriter0.writeBit(1);
      int int0 = byteArrayBitWriter0.write((-2321L), (int) (byte)8);
      assertEquals(9L, byteArrayBitWriter0.getPosition());
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0, (byte)32);
      int int0 = byteArrayBitWriter0.write((int) (byte)32, (int) (byte)32);
      assertEquals(32L, byteArrayBitWriter0.getPosition());
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0, (byte)0);
      try { 
        byteArrayBitWriter0.writeBoolean(false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0);
      byteArrayBitWriter0.writeBooleans(true, 3L);
      long long0 = byteArrayBitWriter0.writeBooleans(false, 3L);
      assertEquals(6L, byteArrayBitWriter0.getPosition());
      assertEquals(3L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("'dU*5.7IKmZQCzrJ");
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter(mockPrintStream0);
      outputStreamBitWriter0.fillBytes(1644, (byte)1);
      assertEquals(0L, outputStreamBitWriter0.getPosition());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter((OutputStream) null);
      outputStreamBitWriter0.fillBytes((-2273), (-2273));
      assertEquals(0L, outputStreamBitWriter0.getPosition());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter((OutputStream) null);
      // Undeclared exception!
      try { 
        outputStreamBitWriter0.fillBytes((byte)3, (byte)3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0, 422L);
      byteArrayBitWriter0.writeBytes(byteArray0, 1223, 0);
      assertEquals(0L, byteArrayBitWriter0.getPosition());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter((OutputStream) null);
      long long0 = outputStreamBitWriter0.getPosition();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0, (byte)19);
      byteArrayBitWriter0.write((int) (byte)19, 1);
      long long0 = byteArrayBitWriter0.getPosition();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0);
      byteArrayBitWriter0.writeBit(3);
      int int0 = byteArrayBitWriter0.flush();
      assertArrayEquals(new byte[] {(byte) (-128), (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter((byte[]) null);
      // Undeclared exception!
      try { 
        byteArrayBitWriter0.writeBytes((byte[]) null, 7, 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter(pipedOutputStream0);
      // Undeclared exception!
      try { 
        outputStreamBitWriter0.writeBooleans(false, 157L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("com.tomgibara.bits.OutputStreamBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter(byteArrayOutputStream0);
      // Undeclared exception!
      outputStreamBitWriter0.writeBooleans(true, 9223372036854775807L);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter((OutputStream) null);
      // Undeclared exception!
      try { 
        outputStreamBitWriter0.writeBooleans(false, 9223372036854775807L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter((OutputStream) null);
      outputStreamBitWriter0.write(0, 7);
      // Undeclared exception!
      try { 
        outputStreamBitWriter0.writeBit(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter(pipedOutputStream0);
      // Undeclared exception!
      try { 
        outputStreamBitWriter0.write(128, 31);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("com.tomgibara.bits.OutputStreamBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter((OutputStream) null);
      // Undeclared exception!
      try { 
        outputStreamBitWriter0.write(16, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter(pipedOutputStream0);
      try { 
        outputStreamBitWriter0.fillBytes(3, 1305L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("com.tomgibara.bits.OutputStreamBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter(byteArrayOutputStream0);
      // Undeclared exception!
      outputStreamBitWriter0.fillBytes(2013265920, 2013265920);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0);
      // Undeclared exception!
      try { 
        byteArrayBitWriter0.fillBytes((-2116805309), (-2116805309));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-2116805309)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter((OutputStream) null);
      int int0 = outputStreamBitWriter0.write(0, 0);
      assertEquals(0, int0);
      assertEquals(0L, outputStreamBitWriter0.getPosition());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter((OutputStream) null);
      int int0 = outputStreamBitWriter0.flush();
      assertEquals(0, int0);
      assertEquals(0L, outputStreamBitWriter0.getPosition());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0);
      byteArrayBitWriter0.writeBooleans(false, (byte)90);
      // Undeclared exception!
      try { 
        byteArrayBitWriter0.flush();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteArrayBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      File file0 = MockFile.createTempFile("npS6swX|/C>>KF]Z:w", "$");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter(mockFileOutputStream0);
      outputStreamBitWriter0.writeBooleans(true, (byte)1);
      int int0 = outputStreamBitWriter0.write(2, 2);
      assertEquals(3L, outputStreamBitWriter0.getPosition());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter((byte[]) null, 0L);
      // Undeclared exception!
      try { 
        byteArrayBitWriter0.write(1, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0);
      // Undeclared exception!
      try { 
        byteArrayBitWriter0.write((int) (byte) (-36), 34);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // count too great
         //
         verifyException("com.tomgibara.bits.ByteBasedBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter((OutputStream) null);
      // Undeclared exception!
      try { 
        outputStreamBitWriter0.write((-872), (-872));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative count
         //
         verifyException("com.tomgibara.bits.ByteBasedBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter((byte[]) null, (-1298L));
      // Undeclared exception!
      try { 
        byteArrayBitWriter0.writeBit(32);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream(")");
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter(mockPrintStream0);
      BigInteger bigInteger0 = BigInteger.TEN;
      outputStreamBitWriter0.write(bigInteger0, 1563);
      long long0 = outputStreamBitWriter0.writeBooleans(true, 82L);
      assertEquals(1645L, outputStreamBitWriter0.getPosition());
      assertEquals(82L, long0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0);
      long long0 = byteArrayBitWriter0.writeBooleans(false, (byte)0);
      assertEquals(0L, byteArrayBitWriter0.getPosition());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0, (-103L));
      // Undeclared exception!
      try { 
        byteArrayBitWriter0.writeBooleans(true, (byte)1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("!'B*#}");
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter(mockPrintStream0);
      // Undeclared exception!
      try { 
        outputStreamBitWriter0.writeBooleans(true, (-2925L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative count
         //
         verifyException("com.tomgibara.bits.ByteBasedBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter(byteArrayOutputStream0);
      outputStreamBitWriter0.writeBooleans(false, 2641L);
      long long0 = outputStreamBitWriter0.writeBooleans(false, 2641L);
      assertEquals(5282L, outputStreamBitWriter0.getPosition());
      assertEquals(2641L, long0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("!'B*#}");
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter(mockPrintStream0);
      outputStreamBitWriter0.fillBytes(128, 128);
      assertEquals(0L, outputStreamBitWriter0.getPosition());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream(")");
      OutputStreamBitWriter outputStreamBitWriter0 = new OutputStreamBitWriter(mockPrintStream0);
      outputStreamBitWriter0.fillBytes(426, 1536L);
      assertEquals(0L, outputStreamBitWriter0.getPosition());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0);
      // Undeclared exception!
      try { 
        byteArrayBitWriter0.writeBytes(byteArray0, (byte)0, 1472);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("com.tomgibara.bits.ByteBasedBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter(byteArray0, (byte)19);
      byteArrayBitWriter0.writeBytes(byteArray0, (byte)19, (-1176));
      assertEquals(0L, byteArrayBitWriter0.getPosition());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteArrayBitWriter byteArrayBitWriter0 = new ByteArrayBitWriter((byte[]) null, (byte)3);
      byteArrayBitWriter0.write(1073741824, (int) (byte)3);
      // Undeclared exception!
      try { 
        byteArrayBitWriter0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteArrayBitWriter", e);
      }
  }
}
