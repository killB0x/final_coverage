/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 00:24:31 GMT 2022
 */

package com.tomgibara.bits;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tomgibara.bits.BitBoundary;
import com.tomgibara.bits.BitReader;
import com.tomgibara.bits.ByteArrayBitReader;
import com.tomgibara.bits.CharBitReader;
import com.tomgibara.bits.ConstantReader;
import com.tomgibara.bits.InputStreamBitReader;
import com.tomgibara.bits.IntArrayBitReader;
import com.tomgibara.bits.OpBitReader;
import java.io.BufferedInputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.math.BigInteger;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OpBitReader_ESTest extends OpBitReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      ConstantReader.ZerosReader constantReader_ZerosReader0 = new ConstantReader.ZerosReader(0L, 0L);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(constantReader_ZerosReader0, intArrayBitReader0);
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigInteger bigInteger1 = opBitReader_And0.combine(bigInteger0, bigInteger0);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(intArrayBitReader0, constantReader_ZerosReader0);
      BigInteger bigInteger2 = opBitReader_Xor0.combine(bigInteger1, bigInteger0);
      assertEquals((short)0, bigInteger2.shortValue());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[9];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 2882L);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(intArrayBitReader0, intArrayBitReader0);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(intArrayBitReader0, opBitReader_Xor0);
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = BigInteger.TEN;
      BigInteger bigInteger2 = opBitReader_Or0.combine(bigInteger1, bigInteger0);
      assertEquals((short)11, bigInteger2.shortValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      ConstantReader.ZerosReader constantReader_ZerosReader0 = new ConstantReader.ZerosReader(0L, 0L);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(constantReader_ZerosReader0, intArrayBitReader0);
      long long0 = opBitReader_And0.combine((byte)82, 9223372036854775807L);
      assertEquals(82L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConstantReader.ZerosReader constantReader_ZerosReader0 = new ConstantReader.ZerosReader((-1090L), (-1090L));
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(constantReader_ZerosReader0, constantReader_ZerosReader0);
      byte[] byteArray0 = new byte[2];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = opBitReader_Or0.combine(bigInteger0, bigInteger0);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(opBitReader_Or0, constantReader_ZerosReader0);
      OpBitReader.Set opBitReader_Set0 = new OpBitReader.Set(opBitReader_And0, opBitReader_And0);
      BigInteger bigInteger2 = opBitReader_Set0.combine(bigInteger0, bigInteger1);
      assertNotSame(bigInteger2, bigInteger0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OpBitReader.And opBitReader_And0 = new OpBitReader.And((BitReader) null, (BitReader) null);
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or((BitReader) null, opBitReader_And0);
      BigInteger bigInteger1 = opBitReader_Or0.combine(bigInteger0, bigInteger0);
      BigInteger bigInteger2 = opBitReader_And0.combine(bigInteger1, bigInteger0);
      assertNotSame(bigInteger2, bigInteger1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[8];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 1321L);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(intArrayBitReader0, intArrayBitReader0);
      long long0 = opBitReader_Xor0.combine((-1570L), 958L);
      assertEquals((-1440L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[9];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 2882L);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(intArrayBitReader0, intArrayBitReader0);
      int int0 = opBitReader_Xor0.combine(8, (byte)8);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      OpBitReader.Set opBitReader_Set0 = new OpBitReader.Set(intArrayBitReader0, intArrayBitReader0);
      boolean boolean0 = opBitReader_Set0.combine(true, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[9];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 2882L);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(intArrayBitReader0, intArrayBitReader0);
      OpBitReader.Set opBitReader_Set0 = new OpBitReader.Set(opBitReader_Xor0, opBitReader_Xor0);
      long long0 = opBitReader_Set0.combine((-1L), 5458L);
      assertEquals(5458L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      OpBitReader.Set opBitReader_Set0 = new OpBitReader.Set(charBitReader0, charBitReader0);
      int int0 = opBitReader_Set0.combine((-1491), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[8];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(intArrayBitReader0, intArrayBitReader0);
      int int0 = opBitReader_Or0.combine((-1309), 1);
      assertEquals((-1309), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor((BitReader) null, (BitReader) null);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And((BitReader) null, opBitReader_Xor0);
      boolean boolean0 = opBitReader_And0.combine(false, false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OpBitReader.And opBitReader_And0 = new OpBitReader.And((BitReader) null, (BitReader) null);
      int int0 = opBitReader_And0.combine(7, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, (byte)77);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(byteArrayBitReader0, byteArrayBitReader0);
      OpBitReader.Set opBitReader_Set0 = new OpBitReader.Set(byteArrayBitReader0, opBitReader_And0);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(byteArrayBitReader0, opBitReader_Set0);
      // Undeclared exception!
      try { 
        opBitReader_Or0.readLong((byte)55);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConstantReader.ZerosReader constantReader_ZerosReader0 = new ConstantReader.ZerosReader(8L, 8L);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(constantReader_ZerosReader0, constantReader_ZerosReader0);
      // Undeclared exception!
      try { 
        opBitReader_And0.readBit();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ConstantReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, (byte)8);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(byteArrayBitReader0, byteArrayBitReader0);
      opBitReader_Xor0.skipBits(64L);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(opBitReader_Xor0, byteArrayBitReader0);
      try { 
        opBitReader_And0.readBigInt((byte)8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.OpBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[7];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, (-3103L));
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(intArrayBitReader0, intArrayBitReader0);
      long long0 = opBitReader_Xor0.skipBits(882L);
      assertEquals((-3103L), intArrayBitReader0.getPosition());
      assertEquals((-3103L), long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)8;
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 960L);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(byteArrayBitReader0, byteArrayBitReader0);
      long long0 = opBitReader_Or0.readLong((byte)8);
      assertEquals(8L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)21;
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 960L);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(byteArrayBitReader0, byteArrayBitReader0);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(opBitReader_Xor0, opBitReader_Xor0);
      int int0 = opBitReader_Or0.readBit();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[2] = (-1567);
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      OpBitReader.Set opBitReader_Set0 = new OpBitReader.Set(intArrayBitReader0, intArrayBitReader0);
      intArrayBitReader0.readBit();
      BitBoundary bitBoundary0 = BitBoundary.INT;
      intArrayBitReader0.skipToBoundary(bitBoundary0);
      int int0 = opBitReader_Set0.read(32);
      assertEquals(96L, intArrayBitReader0.getPosition());
      assertEquals((-1567), int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      InputStreamBitReader inputStreamBitReader0 = new InputStreamBitReader(mockFileInputStream0);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(inputStreamBitReader0, inputStreamBitReader0);
      // Undeclared exception!
      try { 
        opBitReader_And0.skipBits(9223372036854775807L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable
         //
         verifyException("com.tomgibara.bits.InputStreamBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor((BitReader) null, (BitReader) null);
      // Undeclared exception!
      try { 
        opBitReader_Xor0.skipBits(503L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.OpBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ConstantReader.ZerosReader constantReader_ZerosReader0 = new ConstantReader.ZerosReader(56L, 56L);
      OpBitReader.Set opBitReader_Set0 = new OpBitReader.Set(constantReader_ZerosReader0, constantReader_ZerosReader0);
      // Undeclared exception!
      try { 
        opBitReader_Set0.skipBits(56L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ConstantReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, 1);
      InputStreamBitReader inputStreamBitReader0 = new InputStreamBitReader(pushbackInputStream0);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(inputStreamBitReader0, inputStreamBitReader0);
      // Undeclared exception!
      try { 
        opBitReader_Or0.readLong(1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable
         //
         verifyException("com.tomgibara.bits.InputStreamBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OpBitReader.And opBitReader_And0 = new OpBitReader.And((BitReader) null, (BitReader) null);
      // Undeclared exception!
      try { 
        opBitReader_And0.readLong((-2146657691));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.OpBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader((int[]) null, 2917L);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(intArrayBitReader0, intArrayBitReader0);
      opBitReader_Or0.skipBits(2917L);
      // Undeclared exception!
      try { 
        opBitReader_Or0.readLong(1016);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.OpBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      InputStreamBitReader inputStreamBitReader0 = new InputStreamBitReader(bufferedInputStream0);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(inputStreamBitReader0, inputStreamBitReader0);
      // Undeclared exception!
      try { 
        opBitReader_And0.readBoolean();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("com.tomgibara.bits.InputStreamBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OpBitReader.And opBitReader_And0 = new OpBitReader.And((BitReader) null, (BitReader) null);
      // Undeclared exception!
      try { 
        opBitReader_And0.readBoolean();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.OpBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0, 893, 3039496);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(charBitReader0, charBitReader0);
      // Undeclared exception!
      try { 
        opBitReader_Xor0.readBoolean();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      byteArrayBitReader0.skipBytes((-1041L));
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(byteArrayBitReader0, byteArrayBitReader0);
      // Undeclared exception!
      try { 
        opBitReader_And0.readBoolean();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1041 out of bounds for length 6
         //
         verifyException("com.tomgibara.bits.ByteArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 960L);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(byteArrayBitReader0, byteArrayBitReader0);
      opBitReader_Xor0.skipBits((byte)8);
      // Undeclared exception!
      try { 
        opBitReader_Xor0.readBoolean();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ByteBasedBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      InputStreamBitReader inputStreamBitReader0 = new InputStreamBitReader(mockFileInputStream0);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(inputStreamBitReader0, inputStreamBitReader0);
      // Undeclared exception!
      try { 
        opBitReader_And0.readBit();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable
         //
         verifyException("com.tomgibara.bits.InputStreamBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or((BitReader) null, (BitReader) null);
      // Undeclared exception!
      try { 
        opBitReader_Or0.readBit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.OpBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 2926L);
      OpBitReader.Set opBitReader_Set0 = new OpBitReader.Set(intArrayBitReader0, intArrayBitReader0);
      // Undeclared exception!
      try { 
        opBitReader_Set0.readBit();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.tomgibara.bits.IntArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or((BitReader) null, (BitReader) null);
      // Undeclared exception!
      try { 
        opBitReader_Or0.readBigInt((-2083));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.OpBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or((BitReader) null, (BitReader) null);
      // Undeclared exception!
      try { 
        opBitReader_Or0.read((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.OpBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ConstantReader.OnesReader constantReader_OnesReader0 = new ConstantReader.OnesReader(1496L, 1496L);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(constantReader_OnesReader0, constantReader_OnesReader0);
      // Undeclared exception!
      try { 
        opBitReader_And0.read(296);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // count too great
         //
         verifyException("com.tomgibara.bits.ConstantReader$OnesReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      OpBitReader.Set opBitReader_Set0 = new OpBitReader.Set(intArrayBitReader0, intArrayBitReader0);
      // Undeclared exception!
      try { 
        opBitReader_Set0.read((-2294));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.tomgibara.bits.IntArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader((int[]) null, 2917L);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(intArrayBitReader0, intArrayBitReader0);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(opBitReader_Xor0, opBitReader_Xor0);
      // Undeclared exception!
      try { 
        opBitReader_Or0.read(2134061875);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.IntArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-21);
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 960L);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(byteArrayBitReader0, byteArrayBitReader0);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(byteArrayBitReader0, opBitReader_Xor0);
      OpBitReader.Set opBitReader_Set0 = new OpBitReader.Set(opBitReader_And0, opBitReader_Xor0);
      int int0 = opBitReader_Set0.readUntil(true);
      assertEquals(15L, byteArrayBitReader0.getPosition());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or((BitReader) null, (BitReader) null);
      boolean boolean0 = opBitReader_Or0.combine(false, true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 960L);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(byteArrayBitReader0, byteArrayBitReader0);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(byteArrayBitReader0, opBitReader_Xor0);
      OpBitReader.Set opBitReader_Set0 = new OpBitReader.Set(opBitReader_And0, opBitReader_Xor0);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(opBitReader_Set0, opBitReader_And0);
      boolean boolean0 = opBitReader_Or0.readBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-55);
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 4294967295L);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(byteArrayBitReader0, byteArrayBitReader0);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(opBitReader_Or0, byteArrayBitReader0);
      boolean boolean0 = opBitReader_And0.readBoolean();
      assertEquals(3L, byteArrayBitReader0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ConstantReader.OnesReader constantReader_OnesReader0 = new ConstantReader.OnesReader(1439L, 1L);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(constantReader_OnesReader0, constantReader_OnesReader0);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(opBitReader_Or0, opBitReader_Or0);
      boolean boolean0 = opBitReader_And0.readBoolean();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(byteArrayBitReader0, byteArrayBitReader0);
      long long0 = opBitReader_Xor0.skipBits((byte)0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 2917L);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(byteArrayBitReader0, byteArrayBitReader0);
      OpBitReader.Or opBitReader_Or1 = new OpBitReader.Or(opBitReader_Or0, opBitReader_Or0);
      long long0 = opBitReader_Or1.skipBits(2917L);
      assertEquals(16L, byteArrayBitReader0.getPosition());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor((BitReader) null, (BitReader) null);
      // Undeclared exception!
      try { 
        opBitReader_Xor0.skipBits((-2851L));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // negative count not supported
         //
         verifyException("com.tomgibara.bits.OpBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 960L);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(byteArrayBitReader0, byteArrayBitReader0);
      OpBitReader.And opBitReader_And0 = new OpBitReader.And(byteArrayBitReader0, opBitReader_Xor0);
      OpBitReader.Set opBitReader_Set0 = new OpBitReader.Set(opBitReader_And0, opBitReader_Xor0);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(opBitReader_Set0, opBitReader_And0);
      opBitReader_Or0.readLong((byte)0);
      assertEquals(0L, byteArrayBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 960L);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(byteArrayBitReader0, byteArrayBitReader0);
      opBitReader_Xor0.readLong(1);
      opBitReader_Xor0.skipBits((byte)8);
      long long0 = opBitReader_Xor0.skipBits(0L);
      assertEquals(16L, byteArrayBitReader0.getPosition());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(byteArrayBitReader0, byteArrayBitReader0);
      int int0 = opBitReader_Xor0.readBit();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader((int[]) null, 2917L);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(intArrayBitReader0, intArrayBitReader0);
      long long0 = opBitReader_Or0.combine(2917L, 2917L);
      assertEquals(2917L, long0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ConstantReader.ZerosReader constantReader_ZerosReader0 = new ConstantReader.ZerosReader(298L, (-1L));
      ConstantReader.OnesReader constantReader_OnesReader0 = new ConstantReader.OnesReader(1987L, (-3103L));
      OpBitReader.Set opBitReader_Set0 = new OpBitReader.Set(constantReader_ZerosReader0, constantReader_OnesReader0);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(opBitReader_Set0, constantReader_ZerosReader0);
      int int0 = opBitReader_Or0.read(4);
      assertEquals((-3099L), constantReader_OnesReader0.getPosition());
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader((int[]) null, 2917L);
      OpBitReader.Xor opBitReader_Xor0 = new OpBitReader.Xor(intArrayBitReader0, intArrayBitReader0);
      // Undeclared exception!
      try { 
        opBitReader_Xor0.readBigInt(1318);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/tomgibara/bits/BitStore
         //
         verifyException("com.tomgibara.bits.BitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader((int[]) null, 2917L);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(intArrayBitReader0, intArrayBitReader0);
      // Undeclared exception!
      try { 
        opBitReader_Or0.readLong(1016);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // count too great
         //
         verifyException("com.tomgibara.bits.BitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int[] intArray0 = new int[5];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      OpBitReader.Set opBitReader_Set0 = new OpBitReader.Set(intArrayBitReader0, intArrayBitReader0);
      int int0 = opBitReader_Set0.read(32);
      assertEquals(64L, intArrayBitReader0.getPosition());
      assertEquals(0, int0);
  }
}
