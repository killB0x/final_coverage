/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 00:14:28 GMT 2022
 */

package com.tomgibara.bits;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tomgibara.bits.CharBitReader;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharBitReader_ESTest extends CharBitReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(48);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      long long0 = charBitReader0.skipBits(2147483647L);
      assertEquals(48L, charBitReader0.getPosition());
      assertEquals(48L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      long long0 = charBitReader0.skipBits((-2147483648L));
      assertEquals(0L, long0);
      assertEquals(0L, charBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(49);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0, 49, 2);
      long long0 = charBitReader0.setPosition(49);
      assertEquals((-47L), long0);
      assertEquals(0L, charBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      long long0 = charBitReader0.setPosition(0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      long long0 = charBitReader0.setPosition(2147483647L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0, 1, 0);
      // Undeclared exception!
      try { 
        charBitReader0.readBoolean();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.CharBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0, 3039496, 48);
      long long0 = charBitReader0.setPosition(4294967295L);
      assertEquals((-3039448L), charBitReader0.getPosition());
      assertEquals((-3039448L), long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      charBitReader0.skipBits(2374L);
      long long0 = charBitReader0.getPosition();
      assertEquals(9L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3327612);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0, 1031, 30);
      charBitReader0.skipBits(3327612);
      long long0 = charBitReader0.getPosition();
      assertEquals((-1001L), long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharBitReader charBitReader0 = new CharBitReader((CharSequence) null, 123, 339);
      // Undeclared exception!
      try { 
        charBitReader0.readBoolean();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.CharBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0, (-3521), 1703);
      // Undeclared exception!
      try { 
        charBitReader0.readBoolean();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharBitReader charBitReader0 = new CharBitReader((CharSequence) null, (-1980), (-872));
      // Undeclared exception!
      try { 
        charBitReader0.readBit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.CharBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(36);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0, (-26), 36);
      // Undeclared exception!
      try { 
        charBitReader0.readBit();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharBitReader charBitReader0 = null;
      try {
        charBitReader0 = new CharBitReader((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.CharBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '1';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      boolean boolean0 = charBitReader0.readBoolean();
      assertEquals(1L, charBitReader0.getPosition());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '0';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      boolean boolean0 = charBitReader0.readBoolean();
      assertEquals(1L, charBitReader0.getPosition());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      // Undeclared exception!
      try { 
        charBitReader0.readBoolean();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.CharBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      // Undeclared exception!
      try { 
        charBitReader0.readBoolean();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Non binary character '\u0000' found at index 0
         //
         verifyException("com.tomgibara.bits.CharBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0, 2145798025, 2145798025);
      long long0 = charBitReader0.skipBits(2145798025);
      assertEquals(0L, long0);
      assertEquals(0L, charBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(48);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      long long0 = charBitReader0.skipBits(2147483661L);
      assertEquals(48L, charBitReader0.getPosition());
      assertEquals(48L, long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      long long0 = charBitReader0.skipBits((-2147483678L));
      assertEquals(0L, long0);
      assertEquals(0L, charBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      long long0 = charBitReader0.skipBits(0);
      assertEquals(0L, charBitReader0.getPosition());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      long long0 = charBitReader0.skipBits((-2272L));
      assertEquals(0L, long0);
      assertEquals(0L, charBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      long long0 = charBitReader0.setPosition(816L);
      assertEquals(0L, charBitReader0.getPosition());
      assertEquals(4L, long0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      long long0 = charBitReader0.setPosition(0L);
      assertEquals(0L, charBitReader0.getPosition());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      long long0 = charBitReader0.setPosition((-2272L));
      assertEquals(0L, long0);
      assertEquals(0L, charBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharBitReader charBitReader0 = new CharBitReader((CharSequence) null, 5, 5);
      long long0 = charBitReader0.setPosition(1L);
      assertEquals(0L, long0);
      assertEquals(0L, charBitReader0.getPosition());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharBitReader charBitReader0 = new CharBitReader((CharSequence) null, 5, 5);
      // Undeclared exception!
      try { 
        charBitReader0.readBit();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.CharBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '1';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      int int0 = charBitReader0.readBit();
      assertEquals(1L, charBitReader0.getPosition());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '0';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      assertEquals(0L, charBitReader0.getPosition());
      
      int int0 = charBitReader0.readBit();
      assertEquals(1L, charBitReader0.getPosition());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      long long0 = charBitReader0.getPosition();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      // Undeclared exception!
      try { 
        charBitReader0.readBit();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Non binary character '\u0000' found at index 0
         //
         verifyException("com.tomgibara.bits.CharBitReader", e);
      }
  }
}
