/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 00:22:02 GMT 2022
 */

package com.tomgibara.bits;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tomgibara.bits.BitBoundary;
import com.tomgibara.bits.ConstantReader;
import com.tomgibara.bits.IntArrayBitWriter;
import com.tomgibara.bits.PrintStreamBitWriter;
import java.io.PrintStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BitStream_ESTest extends BitStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[7];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0);
      intArrayBitWriter0.writeBooleans(false, (-119L));
      BitBoundary bitBoundary0 = BitBoundary.LONG;
      try { 
        intArrayBitWriter0.skipToBoundary(bitBoundary0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no position
         //
         verifyException("com.tomgibara.bits.BitBoundary", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[4];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0);
      BitBoundary bitBoundary0 = BitBoundary.LONG;
      intArrayBitWriter0.writeBit(536);
      int int0 = intArrayBitWriter0.skipToBoundary(bitBoundary0);
      assertEquals(63, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[1];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0);
      intArrayBitWriter0.writeBoolean(true);
      long long0 = intArrayBitWriter0.skipBits((-1L));
      assertArrayEquals(new int[] {Integer.MIN_VALUE}, intArray0);
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0);
      long long0 = intArrayBitWriter0.setPosition(0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[10];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0);
      long long0 = intArrayBitWriter0.setPosition(1459L);
      assertEquals(320L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0);
      long long0 = intArrayBitWriter0.getPosition();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[2];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0);
      long long0 = intArrayBitWriter0.skipBits(4294967295L);
      assertEquals(64L, long0);
      
      long long1 = intArrayBitWriter0.getPosition();
      assertEquals(64L, long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      long long0 = printStreamBitWriter0.getPosition();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0);
      intArrayBitWriter0.write(Integer.MAX_VALUE, (-2146992344));
      BitBoundary bitBoundary0 = BitBoundary.INT;
      // Undeclared exception!
      try { 
        intArrayBitWriter0.skipToBoundary(bitBoundary0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.tomgibara.bits.IntArrayBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter((int[]) null, (-2158));
      intArrayBitWriter0.write((-2158), (-2158));
      // Undeclared exception!
      try { 
        intArrayBitWriter0.skipBits(5089);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.IntArrayBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0);
      intArrayBitWriter0.write((-2789), (-2789));
      // Undeclared exception!
      try { 
        intArrayBitWriter0.skipBits((-1L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.tomgibara.bits.IntArrayBitWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[1];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0);
      try { 
        intArrayBitWriter0.setPosition((-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative position
         //
         verifyException("com.tomgibara.bits.BitStreams", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      long long0 = printStreamBitWriter0.skipBits(0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      // Undeclared exception!
      try { 
        printStreamBitWriter0.skipToBoundary((BitBoundary) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null boundary
         //
         verifyException("com.tomgibara.bits.BitStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConstantReader.ZerosReader constantReader_ZerosReader0 = new ConstantReader.ZerosReader((-1L), (-2145822793L));
      // Undeclared exception!
      try { 
        constantReader_ZerosReader0.skipBits(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ConstantReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      try { 
        printStreamBitWriter0.skipBits(1899L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // seeking unsupported
         //
         verifyException("com.tomgibara.bits.BitStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[0];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0);
      BitBoundary bitBoundary0 = BitBoundary.BIT;
      int int0 = intArrayBitWriter0.skipToBoundary(bitBoundary0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[10];
      IntArrayBitWriter intArrayBitWriter0 = new IntArrayBitWriter(intArray0);
      long long0 = intArrayBitWriter0.skipBits((-1L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      BitBoundary bitBoundary0 = BitBoundary.SHORT;
      try { 
        printStreamBitWriter0.skipToBoundary(bitBoundary0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.BitStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PrintStreamBitWriter printStreamBitWriter0 = new PrintStreamBitWriter((PrintStream) null);
      long long0 = printStreamBitWriter0.setPosition(0L);
      assertEquals((-1L), long0);
  }
}
