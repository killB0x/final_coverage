/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 00:29:41 GMT 2022
 */

package com.tomgibara.bits;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.tomgibara.bits.BitBoundary;
import com.tomgibara.bits.BitReader;
import com.tomgibara.bits.ByteArrayBitReader;
import com.tomgibara.bits.CharBitReader;
import com.tomgibara.bits.ConstantReader;
import com.tomgibara.bits.IntArrayBitReader;
import com.tomgibara.bits.OpBitReader;
import com.tomgibara.bits.ProfiledBitReader;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProfiledBitReader_ESTest extends ProfiledBitReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(charBitReader0);
      BitBoundary bitBoundary0 = BitBoundary.SHORT;
      int int0 = profiledBitReader0.skipToBoundary(bitBoundary0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, (-2147483648L));
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(byteArrayBitReader0, byteArrayBitReader0);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(opBitReader_Or0);
      long long0 = profiledBitReader0.setPosition((byte) (-124));
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 8;
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(intArrayBitReader0);
      int int0 = profiledBitReader0.readUntil(true);
      assertEquals(29L, intArrayBitReader0.getPosition());
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConstantReader.ZerosReader constantReader_ZerosReader0 = new ConstantReader.ZerosReader(2439L, 2439L);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(constantReader_ZerosReader0);
      long long0 = profiledBitReader0.readLong(0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      CharBitReader charBitReader0 = new CharBitReader(charBuffer0);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(charBitReader0);
      long long0 = profiledBitReader0.getPosition();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[9];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 1179);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(intArrayBitReader0);
      profiledBitReader0.read((-3132));
      long long0 = profiledBitReader0.getPosition();
      assertEquals((-3132L), intArrayBitReader0.getPosition());
      assertEquals((-3132L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConstantReader.ZerosReader constantReader_ZerosReader0 = new ConstantReader.ZerosReader(2439L, 2439L);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(constantReader_ZerosReader0);
      // Undeclared exception!
      try { 
        profiledBitReader0.skipBits(2439L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ConstantReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConstantReader.ZerosReader constantReader_ZerosReader0 = new ConstantReader.ZerosReader(1L, 0L);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(constantReader_ZerosReader0);
      // Undeclared exception!
      try { 
        profiledBitReader0.readLong((-715));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative count
         //
         verifyException("com.tomgibara.bits.ConstantReader$ZerosReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[5];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(intArrayBitReader0);
      try { 
        profiledBitReader0.read(253);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.IntArrayBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProfiledBitReader profiledBitReader0 = null;
      try {
        profiledBitReader0 = new ProfiledBitReader((BitReader) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null reader
         //
         verifyException("com.tomgibara.bits.ProfiledBitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConstantReader.OnesReader constantReader_OnesReader0 = new ConstantReader.OnesReader(0L, 0L);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(constantReader_OnesReader0);
      // Undeclared exception!
      try { 
        profiledBitReader0.readUntil(false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ConstantReader$OnesReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConstantReader.ZerosReader constantReader_ZerosReader0 = new ConstantReader.ZerosReader(2439L, 2439L);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(constantReader_ZerosReader0);
      long long0 = profiledBitReader0.setPosition(2439L);
      assertEquals(2439L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, 1L);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(byteArrayBitReader0);
      // Undeclared exception!
      try { 
        profiledBitReader0.readBigInt((byte)66);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/tomgibara/bits/BitStore
         //
         verifyException("com.tomgibara.bits.BitReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[9];
      IntArrayBitReader intArrayBitReader0 = new IntArrayBitReader(intArray0, 1179);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(intArrayBitReader0);
      boolean boolean0 = profiledBitReader0.readBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConstantReader.ZerosReader constantReader_ZerosReader0 = new ConstantReader.ZerosReader(1707L, 1707L);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(constantReader_ZerosReader0);
      long long0 = profiledBitReader0.skipBits(0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayBitReader byteArrayBitReader0 = new ByteArrayBitReader(byteArray0, (byte)86);
      OpBitReader.Or opBitReader_Or0 = new OpBitReader.Or(byteArrayBitReader0, byteArrayBitReader0);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(opBitReader_Or0);
      BitBoundary bitBoundary0 = BitBoundary.BYTE;
      // Undeclared exception!
      try { 
        profiledBitReader0.skipToBoundary(bitBoundary0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.BitStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConstantReader.ZerosReader constantReader_ZerosReader0 = new ConstantReader.ZerosReader(1707L, 1707L);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(constantReader_ZerosReader0);
      long long0 = profiledBitReader0.getPosition();
      assertEquals(1707L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConstantReader.OnesReader constantReader_OnesReader0 = new ConstantReader.OnesReader((byte)111, (-1L));
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(constantReader_OnesReader0);
      // Undeclared exception!
      try { 
        profiledBitReader0.read((byte) (-124));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // negative count
         //
         verifyException("com.tomgibara.bits.ConstantReader$OnesReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConstantReader.ZerosReader constantReader_ZerosReader0 = new ConstantReader.ZerosReader(1707L, 1707L);
      ProfiledBitReader profiledBitReader0 = new ProfiledBitReader(constantReader_ZerosReader0);
      try { 
        profiledBitReader0.readLong(8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.tomgibara.bits.ConstantReader", e);
      }
  }
}
