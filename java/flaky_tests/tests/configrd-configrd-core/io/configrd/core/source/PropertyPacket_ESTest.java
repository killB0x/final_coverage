/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 03:26:16 GMT 2022
 */

package io.configrd.core.source;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.configrd.core.source.PropertyPacket;
import java.net.URI;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PropertyPacket_ESTest extends PropertyPacket_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PropertyPacket propertyPacket0 = new PropertyPacket((URI) null);
      URI uRI0 = propertyPacket0.getUri();
      assertNull(uRI0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      URI uRI0 = MockURI.URI((String) null, (String) null, (String) null, "z6J");
      PropertyPacket propertyPacket0 = new PropertyPacket(uRI0);
      URI uRI1 = propertyPacket0.getUri();
      assertFalse(uRI1.isOpaque());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URI uRI0 = MockURI.URI("dB", "@31'gdpZl", "@31'gdpZl");
      PropertyPacket propertyPacket0 = new PropertyPacket(uRI0);
      URI uRI1 = propertyPacket0.getUri();
      assertEquals("dB:@31'gdpZl#@31'gdpZl", uRI1.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URI uRI0 = MockURI.aHttpURI;
      PropertyPacket propertyPacket0 = new PropertyPacket(uRI0);
      propertyPacket0.setETag("");
      String string0 = propertyPacket0.getETag();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PropertyPacket propertyPacket0 = new PropertyPacket((URI) null);
      propertyPacket0.putIfAbsent("", (Object) null);
      // Undeclared exception!
      try { 
        propertyPacket0.getProperties();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      PropertyPacket propertyPacket0 = new PropertyPacket(uRI0);
      Properties properties0 = propertyPacket0.getProperties();
      assertNotNull(properties0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      PropertyPacket propertyPacket0 = new PropertyPacket(uRI0);
      propertyPacket0.setETag("*");
      String string0 = propertyPacket0.getETag();
      assertEquals("*", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      URI uRI0 = MockURI.URI("Dtdl5", "Dtdl5", "Dtdl5", 0, "", "", "");
      PropertyPacket propertyPacket0 = new PropertyPacket(uRI0);
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        propertyPacket0.getProperty("", class0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/beanutils/ConvertUtils
         //
         verifyException("io.configrd.core.source.PropertyPacket", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      PropertyPacket propertyPacket0 = new PropertyPacket(uRI0);
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        propertyPacket0.getProperty("", class0, (Object) "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/beanutils/ConvertUtils
         //
         verifyException("io.configrd.core.source.PropertyPacket", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URI uRI0 = MockURI.URI("Dtdl5", "Dtdl5", "Dtdl5", 0, "", "", "");
      PropertyPacket propertyPacket0 = new PropertyPacket(uRI0);
      URI uRI1 = propertyPacket0.getUri();
      assertEquals("Dtdl5://Dtdl5@Dtdl5:0?#", uRI1.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      PropertyPacket propertyPacket0 = new PropertyPacket(uRI0);
      String string0 = propertyPacket0.getETag();
      assertNull(string0);
  }
}
