/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 03:15:26 GMT 2022
 */

package io.configrd.core.http;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.configrd.core.http.HttpRepoDef;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HttpRepoDef_ESTest extends HttpRepoDef_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("vzoAAXGYPF");
      httpRepoDef0.setUri("vzoAAXGYPF");
      httpRepoDef0.fileName = "vzoAAXGYPF";
      httpRepoDef0.setSourceName("HttpBasicAuth");
      String[] stringArray0 = httpRepoDef0.valid();
      assertEquals("vzoAAXGYPF", httpRepoDef0.getUri());
      assertEquals("vzoAAXGYPF", httpRepoDef0.getFileName());
      assertEquals(0, stringArray0.length);
      assertEquals("vzoAAXGYPF", httpRepoDef0.getName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HttpRepoDef httpRepoDef0 = new HttpRepoDef();
      httpRepoDef0.username = "";
      String string0 = httpRepoDef0.getUsername();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("", hashMap0);
      httpRepoDef0.setUri("<.<(;");
      String string0 = httpRepoDef0.getUri();
      assertEquals("<.<(;", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HttpRepoDef httpRepoDef0 = new HttpRepoDef();
      httpRepoDef0.setUri("");
      String string0 = httpRepoDef0.getUri();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("Qg)9");
      httpRepoDef0.password = "Qg)9";
      String string0 = httpRepoDef0.getPassword();
      assertNotNull(string0);
      assertEquals("Qg)9", httpRepoDef0.getName());
      assertEquals("Qg)9", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("N");
      httpRepoDef0.password = "";
      String string0 = httpRepoDef0.getPassword();
      assertEquals("N", httpRepoDef0.getName());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("1Lz\"9@>*", hashMap0);
      httpRepoDef0.hostsName = "#61;Z&dx JSiSKebh*";
      String string0 = httpRepoDef0.getHostsName();
      assertEquals("#61;Z&dx JSiSKebh*", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("", hashMap0);
      httpRepoDef0.fileName = "authMethod";
      String string0 = httpRepoDef0.getFileName();
      assertNotNull(string0);
      assertEquals("authMethod", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("", hashMap0);
      httpRepoDef0.fileName = "authMethod";
      httpRepoDef0.setUri("<.<(;");
      String[] stringArray0 = httpRepoDef0.valid();
      assertEquals("authMethod", httpRepoDef0.getFileName());
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("", hashMap0);
      httpRepoDef0.setUri("<.<(;");
      String[] stringArray0 = httpRepoDef0.valid();
      assertEquals(2, stringArray0.length);
      assertEquals("<.<(;", httpRepoDef0.getUri());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("", hashMap0);
      String[] stringArray0 = httpRepoDef0.valid();
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("", "");
      HttpRepoDef httpRepoDef0 = null;
      try {
        httpRepoDef0 = new HttpRepoDef("", hashMap0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/beanutils/BeanUtils
         //
         verifyException("io.configrd.core.http.HttpRepoDef", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("heB\"y]\"RkJp", (Map<String, Object>) null);
      assertEquals("HttpBasicAuth", httpRepoDef0.getAuthMethod());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("", hashMap0);
      String string0 = httpRepoDef0.getFileName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("", hashMap0);
      httpRepoDef0.setUsername("$%m,D7u%uBvC");
      String string0 = httpRepoDef0.getUsername();
      assertEquals("$%m,D7u%uBvC", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("J", hashMap0);
      httpRepoDef0.setFileName("FC8DE*IH Ej?q");
      assertEquals("FC8DE*IH Ej?q", httpRepoDef0.getFileName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("", hashMap0);
      String string0 = httpRepoDef0.getUri();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("1Lz\"9@>*", hashMap0);
      String string0 = httpRepoDef0.getAuthMethod();
      assertEquals("HttpBasicAuth", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("1Lz\"9@>*", hashMap0);
      httpRepoDef0.setHostsName("io.configrd.core.source.DefaultRepoDef");
      assertEquals("io.configrd.core.source.DefaultRepoDef", httpRepoDef0.getHostsName());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HttpRepoDef httpRepoDef0 = new HttpRepoDef((String) null);
      httpRepoDef0.setHostsName("");
      String string0 = httpRepoDef0.getHostsName();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HttpRepoDef httpRepoDef0 = new HttpRepoDef();
      httpRepoDef0.setFileName("");
      String string0 = httpRepoDef0.getFileName();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("", hashMap0);
      String string0 = httpRepoDef0.getHostsName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("", hashMap0);
      String string0 = httpRepoDef0.getUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("", hashMap0);
      httpRepoDef0.setPassword("\"q9r`e/l @Z&>sY#ZJ'");
      assertEquals("\"q9r`e/l @Z&>sY#ZJ'", httpRepoDef0.getPassword());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpRepoDef httpRepoDef0 = new HttpRepoDef("", hashMap0);
      String string0 = httpRepoDef0.getPassword();
      assertNull(string0);
  }
}
