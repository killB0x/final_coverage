/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 13:06:46 GMT 2022
 */

package br.eti.clairton.security;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.eti.clairton.security.Lock;
import br.eti.clairton.security.LockInMemory;
import br.eti.clairton.security.ServiceInMemory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ServiceInMemory_ESTest extends ServiceInMemory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LockInMemory lockInMemory0 = new LockInMemory();
      ServiceInMemory serviceInMemory0 = new ServiceInMemory(lockInMemory0);
      String string0 = "";
      Boolean boolean0 = serviceInMemory0.update(string0, string0, string0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ServiceInMemory serviceInMemory0 = new ServiceInMemory((Lock) null);
      // Undeclared exception!
      try { 
        serviceInMemory0.reset("Atualizando senha usu\u00E1rio {}", "Atualizando senha usu\u00E1rio {}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.eti.clairton.security.ServiceInMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LockInMemory lockInMemory0 = new LockInMemory();
      ServiceInMemory serviceInMemory0 = new ServiceInMemory(lockInMemory0);
      // Undeclared exception!
      try { 
        serviceInMemory0.create((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.eti.clairton.security.LockInMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LockInMemory lockInMemory0 = new LockInMemory();
      ServiceInMemory serviceInMemory0 = new ServiceInMemory(lockInMemory0);
      String string0 = "";
      String string1 = "";
      serviceInMemory0.update("", "", "");
      lockInMemory0.isValid(string0, string1);
      String string2 = ".z69 sz6yy/{t^WX";
      serviceInMemory0.create(string2, string2);
      serviceInMemory0.disable(string2);
      serviceInMemory0.reset(string2, string2);
      Boolean boolean0 = serviceInMemory0.update(string2, string2, string2);
      assertTrue(boolean0);
      
      String string3 = "^M";
      serviceInMemory0.enable(string3);
      String string4 = "";
      String string5 = "br.eti.clairton.security.InvalidUserException";
      String string6 = "Sob*.AJortV{";
      lockInMemory0.isValid(string4, string6);
      String string7 = "#Bh025[qG";
      String string8 = "";
      serviceInMemory0.reset(string8, string4);
      lockInMemory0.isValid(string1, string7);
      String string9 = "";
      String string10 = "br.eti.clairton.security.Repository";
      Boolean boolean1 = serviceInMemory0.create(string9, string10);
      assertTrue(boolean1);
      
      lockInMemory0.isValid(string4, string5);
      serviceInMemory0.found(string2);
      Boolean boolean2 = serviceInMemory0.remove(string8);
      assertTrue(boolean2);
      
      String string11 = "uv?,Fa";
      serviceInMemory0.disable(string11);
      String string12 = "H{=\"9chu4t<)J";
      Boolean boolean3 = serviceInMemory0.reset(string12, string4);
      assertTrue(boolean3);
      
      String string13 = "123456";
      serviceInMemory0.reset(string13, string2);
      String string14 = "";
      Boolean boolean4 = serviceInMemory0.found(string14);
      assertFalse(boolean4);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LockInMemory lockInMemory0 = new LockInMemory();
      ServiceInMemory serviceInMemory0 = new ServiceInMemory(lockInMemory0);
      Boolean boolean0 = serviceInMemory0.remove((String) null);
      assertFalse(boolean0);
      
      String string0 = "";
      String string1 = "";
      String string2 = "";
      Boolean boolean1 = serviceInMemory0.found(string2);
      assertFalse(boolean1);
      
      String string3 = "Criado usu\u00E1rio {}";
      Boolean boolean2 = serviceInMemory0.update(string1, string1, string3);
      assertFalse(boolean2);
  }
}
