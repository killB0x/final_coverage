/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 13:08:36 GMT 2022
 */

package br.eti.clairton.security;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.eti.clairton.security.Lock;
import br.eti.clairton.security.LockInMemory;
import br.eti.clairton.security.LocksmithInMemory;
import javax.security.auth.login.CredentialNotFoundException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LocksmithInMemory_ESTest extends LocksmithInMemory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LockInMemory lockInMemory0 = new LockInMemory();
      LocksmithInMemory locksmithInMemory0 = new LocksmithInMemory(lockInMemory0);
      String string0 = locksmithInMemory0.getUserByToken("1392409281320abc");
      //  // Unstable assertion: assertEquals("123456", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LocksmithInMemory locksmithInMemory0 = new LocksmithInMemory((Lock) null);
      // Undeclared exception!
      try { 
        locksmithInMemory0.create("br.eti.clairton.security.Repository", "br.eti.clairton.security.Repository");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.eti.clairton.security.LocksmithInMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LockInMemory lockInMemory0 = new LockInMemory();
      LocksmithInMemory locksmithInMemory0 = new LocksmithInMemory(lockInMemory0);
      Boolean boolean0 = locksmithInMemory0.isValid("1392409281320abc");
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LockInMemory lockInMemory0 = new LockInMemory();
      LocksmithInMemory locksmithInMemory0 = new LocksmithInMemory(lockInMemory0);
      Boolean boolean0 = locksmithInMemory0.isValid("123456");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LockInMemory lockInMemory0 = new LockInMemory();
      LocksmithInMemory locksmithInMemory0 = new LocksmithInMemory(lockInMemory0);
      String string0 = locksmithInMemory0.create("maria", "123456");
      assertEquals("1392409281320abc", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LockInMemory lockInMemory0 = new LockInMemory();
      LocksmithInMemory locksmithInMemory0 = new LocksmithInMemory(lockInMemory0);
      try { 
        locksmithInMemory0.create("", "123456");
        fail("Expecting exception: CredentialNotFoundException");
      
      } catch(CredentialNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.eti.clairton.security.LocksmithInMemory", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LockInMemory lockInMemory0 = new LockInMemory();
      LocksmithInMemory locksmithInMemory0 = new LocksmithInMemory(lockInMemory0);
      String string0 = locksmithInMemory0.getUserByToken("admin");
      assertEquals("123", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LockInMemory lockInMemory0 = new LockInMemory();
      LocksmithInMemory locksmithInMemory0 = new LocksmithInMemory(lockInMemory0);
      locksmithInMemory0.invalidate("rm^3c");
  }
}
