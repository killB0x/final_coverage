/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 08:48:39 GMT 2022
 */

package org.jeesy.classinfo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jeesy.classinfo.AnnotationMergeCache;
import org.jeesy.classinfo.converter.annotations.Format;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AnnotationMergeCache_ESTest extends AnnotationMergeCache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AnnotationMergeCache annotationMergeCache0 = AnnotationMergeCache.INSTANCE;
      // Undeclared exception!
      try { 
        annotationMergeCache0.computeValue((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AnnotationMergeCache annotationMergeCache0 = AnnotationMergeCache.INSTANCE;
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        annotationMergeCache0.computeValue(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only annotation classes can be processed
         //
         verifyException("org.jeesy.classinfo.AnnotationMergeCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AnnotationMergeCache annotationMergeCache0 = new AnnotationMergeCache();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        annotationMergeCache0.get(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Only annotation classes can be processed
         //
         verifyException("org.jeesy.classinfo.AnnotationMergeCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AnnotationMergeCache annotationMergeCache0 = new AnnotationMergeCache();
      Class<Format.Instance> class0 = Format.Instance.class;
      Set<Annotation> set0 = annotationMergeCache0.INSTANCE.computeValue(class0);
      assertTrue(set0.isEmpty());
  }
}
