/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 08:58:08 GMT 2022
 */

package org.jeesy.classinfo.indexes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jeesy.classinfo.ClassInfo;
import org.jeesy.classinfo.PropertyInfo;
import org.jeesy.classinfo.indexes.PropertyByTypeIndex;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PropertyByTypeIndex_ESTest extends PropertyByTypeIndex_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PropertyByTypeIndex propertyByTypeIndex0 = new PropertyByTypeIndex();
      ClassInfo<Object> classInfo0 = (ClassInfo<Object>) mock(ClassInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        propertyByTypeIndex0.index(classInfo0, (PropertyInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeesy.classinfo.indexes.PropertyByTypeIndex", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PropertyByTypeIndex propertyByTypeIndex0 = new PropertyByTypeIndex();
      Class<Object> class0 = Object.class;
      List<PropertyInfo<Object>> list0 = propertyByTypeIndex0.getByType(class0);
      assertNull(list0);
  }
}
