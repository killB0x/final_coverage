/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 08:47:25 GMT 2022
 */

package org.jeesy.classinfo.converter.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jeesy.classinfo.AnnotatedNode;
import org.jeesy.classinfo.MethodInfo;
import org.jeesy.classinfo.TypeInfo;
import org.jeesy.classinfo.converter.ConverterManager;
import org.jeesy.classinfo.converter.DefaultConverter;
import org.jeesy.classinfo.converter.api.ConversionService;
import org.jeesy.classinfo.converter.impl.DefaultFallback;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultFallback_ESTest extends DefaultFallback_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultFallback defaultFallback0 = DefaultFallback.newInstance((ConversionService) null);
      Class<Annotation> class0 = Annotation.class;
      TypeInfo<Annotation> typeInfo0 = TypeInfo.forClass(class0);
      Annotation annotation0 = defaultFallback0.convertType((Annotation) null, typeInfo0, typeInfo0);
      assertNull(annotation0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      DefaultFallback defaultFallback0 = DefaultFallback.newInstance(converterManager0);
      Class<ConverterManager> class0 = ConverterManager.class;
      TypeInfo<ConverterManager> typeInfo0 = TypeInfo.forClass(class0);
      ConverterManager converterManager1 = defaultFallback0.convertType(converterManager0, typeInfo0, typeInfo0);
      assertSame(converterManager0, converterManager1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      DefaultFallback defaultFallback0 = DefaultFallback.newInstance(converterManager0);
      Class<ConverterManager> class0 = ConverterManager.class;
      TypeInfo<ConverterManager> typeInfo0 = TypeInfo.forClass(class0);
      // Undeclared exception!
      try { 
        defaultFallback0.convertType(converterManager0, (TypeInfo<ConverterManager>) null, typeInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeesy.classinfo.converter.impl.DefaultFallback", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultConverter defaultConverter0 = DefaultConverter.defaultConverter();
      DefaultFallback defaultFallback0 = DefaultFallback.newInstance(defaultConverter0);
      // Undeclared exception!
      try { 
        defaultFallback0.convert(defaultConverter0, (TypeInfo<Object>) null, (TypeInfo<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeesy.classinfo.converter.impl.DefaultFallback", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      Class<ConverterManager> class0 = ConverterManager.class;
      TypeInfo<ConverterManager> typeInfo0 = TypeInfo.forClass(class0);
      try { 
        converterManager0.fromString(typeInfo0, "Cannot create target with converting constructor");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to convert  value 'Cannot create target with converting constructor' of type java.lang.String to type org.jeesy.classinfo.converter.ConverterManager : Cannot create target with converting constructor
         //
         verifyException("org.jeesy.classinfo.converter.impl.DefaultFallback", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultFallback defaultFallback0 = DefaultFallback.newInstance((ConversionService) null);
      Object object0 = new Object();
      Class<Object> class0 = Object.class;
      TypeInfo<Object> typeInfo0 = TypeInfo.forClass(class0);
      Object object1 = defaultFallback0.convert(object0, typeInfo0, typeInfo0);
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DefaultFallback defaultFallback0 = DefaultFallback.newInstance((ConversionService) null);
      MethodInfo.ParameterInfo<Annotation> methodInfo_ParameterInfo0 = new MethodInfo.ParameterInfo<Annotation>();
      Class<Object> class0 = Object.class;
      TypeInfo<Object> typeInfo0 = TypeInfo.forClass(class0, (AnnotatedNode) methodInfo_ParameterInfo0);
      Object object0 = defaultFallback0.convert((Object) null, typeInfo0, typeInfo0);
      assertNull(object0);
  }
}
