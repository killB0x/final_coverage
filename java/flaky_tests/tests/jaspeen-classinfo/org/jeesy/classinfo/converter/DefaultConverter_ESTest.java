/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 08:57:21 GMT 2022
 */

package org.jeesy.classinfo.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jeesy.classinfo.converter.ConverterManager;
import org.jeesy.classinfo.converter.DefaultConverter;
import org.jeesy.classinfo.converter.api.ConversionService;
import org.jeesy.classinfo.converter.api.Converter;
import org.jeesy.classinfo.converter.api.TwoWayConverter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultConverter_ESTest extends DefaultConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      DefaultConverter defaultConverter0 = new DefaultConverter(converterManager0);
      DefaultConverter.registerDefaultCollectionsConverters(defaultConverter0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      DefaultConverter defaultConverter0 = new DefaultConverter(converterManager0);
      DefaultConverter.registerBasicConverters(defaultConverter0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        DefaultConverter.registerDefaultCollectionsConverters((DefaultConverter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeesy.classinfo.converter.DefaultConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultConverter defaultConverter0 = DefaultConverter.defaultConverter();
      // Undeclared exception!
      try { 
        DefaultConverter.registerBasicConverters((ConverterManager) defaultConverter0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Converter manager is readonly
         //
         verifyException("org.jeesy.classinfo.converter.DefaultConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultConverter defaultConverter0 = null;
      try {
        defaultConverter0 = new DefaultConverter((ConversionService) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultConverter defaultConverter0 = DefaultConverter.defaultConverter();
      Class<DefaultConverter> class0 = DefaultConverter.class;
      Class<Date> class1 = Date.class;
      // Undeclared exception!
      try { 
        defaultConverter0.register(class0, class1, (Converter<DefaultConverter, Date>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Converter manager is readonly
         //
         verifyException("org.jeesy.classinfo.converter.DefaultConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DefaultConverter defaultConverter0 = DefaultConverter.defaultConverter();
      // Undeclared exception!
      try { 
        DefaultConverter.registerDefaultCollectionsConverters((ConverterManager) defaultConverter0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Converter manager is readonly
         //
         verifyException("org.jeesy.classinfo.converter.DefaultConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DefaultConverter defaultConverter0 = DefaultConverter.defaultConverter();
      Class<Annotation> class0 = Annotation.class;
      // Undeclared exception!
      try { 
        defaultConverter0.register(class0, class0, (TwoWayConverter<Annotation, Annotation>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Converter manager is readonly
         //
         verifyException("org.jeesy.classinfo.converter.DefaultConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      DefaultConverter defaultConverter0 = new DefaultConverter(converterManager0);
      Class<DefaultConverter> class0 = DefaultConverter.class;
      TwoWayConverter<DefaultConverter, DefaultConverter> twoWayConverter0 = (TwoWayConverter<DefaultConverter, DefaultConverter>) mock(TwoWayConverter.class, new ViolatedAssumptionAnswer());
      doReturn((Converter) null).when(twoWayConverter0).getDirect();
      // Undeclared exception!
      try { 
        defaultConverter0.register(class0, class0, twoWayConverter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try { 
        DefaultConverter.registerBasicConverters((ConverterManager) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeesy.classinfo.converter.DefaultConverter", e);
      }
  }
}
