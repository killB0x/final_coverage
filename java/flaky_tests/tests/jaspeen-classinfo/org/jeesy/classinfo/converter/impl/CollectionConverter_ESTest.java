/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 08:53:55 GMT 2022
 */

package org.jeesy.classinfo.converter.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jeesy.classinfo.converter.ConverterManager;
import org.jeesy.classinfo.converter.DefaultConverter;
import org.jeesy.classinfo.converter.api.ConversionService;
import org.jeesy.classinfo.converter.api.Converter;
import org.jeesy.classinfo.converter.impl.CollectionConverter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CollectionConverter_ESTest extends CollectionConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        CollectionConverter.parseCollection((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeesy.classinfo.converter.impl.CollectionConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CollectionConverter collectionConverter0 = new CollectionConverter((ConversionService) null, (Class<? extends Collection>) null);
      try { 
        collectionConverter0.newInstance();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeesy.classinfo.converter.impl.CollectionConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultConverter defaultConverter0 = DefaultConverter.defaultConverter();
      Class<Collection> class0 = Collection.class;
      CollectionConverter collectionConverter0 = new CollectionConverter(defaultConverter0, class0);
      try { 
        collectionConverter0.newInstance();
        fail("Expecting exception: InstantiationException");
      
      } catch(InstantiationException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = CollectionConverter.parseCollection("QcM");
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultConverter defaultConverter0 = DefaultConverter.defaultConverter();
      Class<Collection> class0 = Collection.class;
      CollectionConverter collectionConverter0 = new CollectionConverter(defaultConverter0, class0);
      collectionConverter0.setConversionService(defaultConverter0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultConverter defaultConverter0 = DefaultConverter.defaultConverter();
      Class<Collection> class0 = Collection.class;
      CollectionConverter collectionConverter0 = new CollectionConverter(defaultConverter0, class0);
      Converter<String, Collection> converter0 = (Converter<String, Collection>)collectionConverter0.getDirect();
      assertNotNull(converter0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ConverterManager converterManager0 = new ConverterManager();
      Class<Collection> class0 = Collection.class;
      CollectionConverter collectionConverter0 = new CollectionConverter(converterManager0, class0);
      Converter<Collection, String> converter0 = (Converter<Collection, String>)collectionConverter0.getReverse();
      assertNotNull(converter0);
  }
}
