/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 09:01:12 GMT 2022
 */

package org.jeesy.classinfo;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jeesy.classinfo.MethodInfo;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MethodInfo_ESTest extends MethodInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MethodInfo methodInfo0 = null;
      try {
        methodInfo0 = new MethodInfo((Method) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jeesy.classinfo.MethodInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MethodInfo.ParameterInfo<Integer> methodInfo_ParameterInfo0 = new MethodInfo.ParameterInfo<Integer>();
      int int0 = methodInfo_ParameterInfo0.getPostion();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MethodInfo.ParameterInfo<Object> methodInfo_ParameterInfo0 = new MethodInfo.ParameterInfo<Object>();
      Class<Object> class0 = methodInfo_ParameterInfo0.getType();
      assertNull(class0);
  }
}
