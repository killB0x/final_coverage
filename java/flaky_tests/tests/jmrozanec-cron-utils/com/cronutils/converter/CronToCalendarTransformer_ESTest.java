/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 00:40:47 GMT 2022
 */

package com.cronutils.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.cronutils.converter.CronToCalendarTransformer;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.Calendar;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CronToCalendarTransformer_ESTest extends CronToCalendarTransformer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CronToCalendarTransformer cronToCalendarTransformer0 = new CronToCalendarTransformer();
      // Undeclared exception!
      try { 
        cronToCalendarTransformer0.transform();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cronutils.converter.CronToCalendarTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CronToCalendarTransformer cronToCalendarTransformer0 = new CronToCalendarTransformer();
      String[] stringArray0 = new String[6];
      stringArray0[2] = "9";
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds(1751);
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Locale locale0 = Locale.KOREA;
      Calendar calendar0 = MockCalendar.getInstance(timeZone0, locale0);
      cronToCalendarTransformer0.apply(stringArray0, calendar0);
      cronToCalendarTransformer0.transform();
  }
}
