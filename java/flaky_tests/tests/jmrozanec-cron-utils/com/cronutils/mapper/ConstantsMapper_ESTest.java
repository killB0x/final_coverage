/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 00:44:55 GMT 2022
 */

package com.cronutils.mapper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.cronutils.mapper.ConstantsMapper;
import com.cronutils.mapper.WeekDay;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConstantsMapper_ESTest extends ConstantsMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      WeekDay weekDay0 = ConstantsMapper.CRONTAB_WEEK_DAY;
      int int0 = ConstantsMapper.weekDayMapping(weekDay0, weekDay0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      WeekDay weekDay0 = new WeekDay(1095, false);
      int int0 = ConstantsMapper.weekDayMapping(weekDay0, weekDay0, 1095);
      assertEquals(1095, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      WeekDay weekDay0 = new WeekDay(1095, false);
      int int0 = ConstantsMapper.weekDayMapping(weekDay0, weekDay0, (-2845));
      assertEquals((-2845), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WeekDay weekDay0 = ConstantsMapper.CRONTAB_WEEK_DAY;
      WeekDay weekDay1 = new WeekDay(0, false);
      // Undeclared exception!
      try { 
        ConstantsMapper.weekDayMapping(weekDay0, weekDay1, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Monday Day of Week value must be greater or equal to zero
         //
         verifyException("com.cronutils.utils.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        ConstantsMapper.weekDayMapping((WeekDay) null, (WeekDay) null, 2368);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cronutils.mapper.ConstantsMapper", e);
      }
  }
}
