/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Nov 10 00:09:49 GMT 2022
 */

package com.cronutils.model.definition;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class CronDefinitionBuilder_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.cronutils.model.definition.CronDefinitionBuilder"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CronDefinitionBuilder_ESTest_scaffolding.class.getClassLoader() ,
      "com.cronutils.mapper.WeekDay",
      "com.cronutils.model.field.definition.FieldDefinition",
      "com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder",
      "com.cronutils.model.definition.CronDefinitionBuilder",
      "com.cronutils.model.definition.CronDefinition",
      "com.cronutils.model.field.constraint.FieldConstraints",
      "com.cronutils.model.field.constraint.FieldConstraintsBuilder",
      "com.cronutils.model.Cron",
      "com.cronutils.model.definition.CronDefinitionBuilder$1",
      "com.cronutils.model.definition.CronConstraintsFactory",
      "com.cronutils.model.field.CronFieldName",
      "com.cronutils.model.field.definition.FieldQuestionMarkDefinitionBuilder",
      "com.cronutils.model.CronType",
      "com.cronutils.model.field.definition.FieldDefinitionBuilder",
      "com.cronutils.model.field.definition.DayOfWeekFieldDefinition",
      "com.cronutils.model.field.constraint.FieldConstraintsBuilder$1",
      "com.cronutils.model.field.value.SpecialChar",
      "com.cronutils.model.definition.CronNicknames",
      "com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder",
      "com.cronutils.model.definition.CronConstraintsFactory$1",
      "com.cronutils.model.definition.CronConstraint",
      "com.cronutils.utils.Preconditions",
      "com.cronutils.model.definition.CronConstraintsFactory$2"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("com.cronutils.model.definition.CronConstraint", false, CronDefinitionBuilder_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CronDefinitionBuilder_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.cronutils.model.definition.CronDefinitionBuilder",
      "com.cronutils.model.field.CronFieldName",
      "com.cronutils.model.definition.CronNicknames",
      "com.cronutils.model.CronType",
      "com.cronutils.model.definition.CronDefinitionBuilder$1",
      "com.cronutils.model.field.definition.FieldDefinitionBuilder",
      "com.cronutils.model.field.definition.FieldQuestionMarkDefinitionBuilder",
      "com.cronutils.model.field.definition.FieldSpecialCharsDefinitionBuilder",
      "com.cronutils.model.field.definition.FieldDayOfWeekDefinitionBuilder",
      "com.cronutils.utils.Preconditions",
      "com.cronutils.model.field.constraint.FieldConstraintsBuilder",
      "com.cronutils.model.field.constraint.FieldConstraintsBuilder$1",
      "com.cronutils.model.field.definition.FieldDefinition",
      "com.cronutils.model.definition.CronDefinition",
      "com.cronutils.model.field.constraint.FieldConstraints",
      "com.cronutils.model.field.definition.DayOfWeekFieldDefinition",
      "com.cronutils.mapper.WeekDay",
      "com.cronutils.model.definition.CronConstraintsFactory",
      "com.cronutils.model.definition.CronConstraint",
      "com.cronutils.model.definition.CronConstraintsFactory$2",
      "com.cronutils.model.field.value.SpecialChar"
    );
  }
}
