/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 00:00:55 GMT 2022
 */

package com.cronutils.model.field.constraint;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.cronutils.model.field.CronFieldName;
import com.cronutils.model.field.constraint.FieldConstraints;
import com.cronutils.model.field.constraint.FieldConstraintsBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FieldConstraintsBuilder_ESTest extends FieldConstraintsBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      CronFieldName cronFieldName0 = CronFieldName.MONTH;
      fieldConstraintsBuilder0.forField(cronFieldName0);
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.withValidRange((-2387), 1);
      FieldConstraintsBuilder fieldConstraintsBuilder2 = fieldConstraintsBuilder1.withShiftedStringMapping(2);
      assertSame(fieldConstraintsBuilder2, fieldConstraintsBuilder0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.withValidRange(0, 0);
      FieldConstraintsBuilder fieldConstraintsBuilder2 = fieldConstraintsBuilder1.withShiftedStringMapping(0);
      assertSame(fieldConstraintsBuilder1, fieldConstraintsBuilder2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      fieldConstraintsBuilder0.withValidRange(1684, 0);
      FieldConstraints fieldConstraints0 = fieldConstraintsBuilder0.createConstraintsInstance();
      assertEquals(1684, fieldConstraints0.getStartRange());
      assertEquals(0, fieldConstraints0.getEndRange());
      assertFalse(fieldConstraints0.isStrictRange());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      fieldConstraintsBuilder0.withValidRange(0, 0);
      FieldConstraints fieldConstraints0 = fieldConstraintsBuilder0.createConstraintsInstance();
      assertEquals(0, fieldConstraints0.getEndRange());
      assertEquals(0, fieldConstraints0.getStartRange());
      assertFalse(fieldConstraints0.isStrictRange());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.withValidRange((-499), (-499));
      FieldConstraints fieldConstraints0 = fieldConstraintsBuilder1.createConstraintsInstance();
      assertFalse(fieldConstraints0.isStrictRange());
      assertEquals((-499), fieldConstraints0.getStartRange());
      assertEquals((-499), fieldConstraints0.getEndRange());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      // Undeclared exception!
      try { 
        fieldConstraintsBuilder0.forField((CronFieldName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cronutils.model.field.constraint.FieldConstraintsBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.withShiftedStringMapping((-1652));
      assertSame(fieldConstraintsBuilder0, fieldConstraintsBuilder1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      CronFieldName cronFieldName0 = CronFieldName.YEAR;
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.forField(cronFieldName0);
      assertSame(fieldConstraintsBuilder1, fieldConstraintsBuilder0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      CronFieldName cronFieldName0 = CronFieldName.DAY_OF_YEAR;
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.forField(cronFieldName0);
      assertSame(fieldConstraintsBuilder0, fieldConstraintsBuilder1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      CronFieldName cronFieldName0 = CronFieldName.DAY_OF_MONTH;
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.forField(cronFieldName0);
      assertSame(fieldConstraintsBuilder1, fieldConstraintsBuilder0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      CronFieldName cronFieldName0 = CronFieldName.HOUR;
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.forField(cronFieldName0);
      assertSame(fieldConstraintsBuilder0, fieldConstraintsBuilder1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      CronFieldName cronFieldName0 = CronFieldName.MINUTE;
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.forField(cronFieldName0);
      assertSame(fieldConstraintsBuilder0, fieldConstraintsBuilder1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      CronFieldName cronFieldName0 = CronFieldName.SECOND;
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.forField(cronFieldName0);
      assertSame(fieldConstraintsBuilder0, fieldConstraintsBuilder1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      CronFieldName cronFieldName0 = CronFieldName.MONTH;
      fieldConstraintsBuilder0.forField(cronFieldName0);
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.withShiftedStringMapping(10);
      assertSame(fieldConstraintsBuilder0, fieldConstraintsBuilder1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      FieldConstraints fieldConstraints0 = fieldConstraintsBuilder0.createConstraintsInstance();
      assertEquals(Integer.MAX_VALUE, fieldConstraints0.getEndRange());
      assertEquals(0, fieldConstraints0.getStartRange());
      assertFalse(fieldConstraints0.isStrictRange());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.addHashSupport();
      assertSame(fieldConstraintsBuilder0, fieldConstraintsBuilder1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.addQuestionMarkSupport();
      assertSame(fieldConstraintsBuilder0, fieldConstraintsBuilder1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.addLWSupport();
      assertSame(fieldConstraintsBuilder1, fieldConstraintsBuilder0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      CronFieldName cronFieldName0 = CronFieldName.DAY_OF_WEEK;
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.forField(cronFieldName0);
      FieldConstraintsBuilder fieldConstraintsBuilder2 = fieldConstraintsBuilder1.withShiftedStringMapping(0);
      assertSame(fieldConstraintsBuilder1, fieldConstraintsBuilder2);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.withStrictRange();
      FieldConstraints fieldConstraints0 = fieldConstraintsBuilder1.createConstraintsInstance();
      assertTrue(fieldConstraints0.isStrictRange());
      assertEquals(Integer.MAX_VALUE, fieldConstraints0.getEndRange());
      assertEquals(0, fieldConstraints0.getStartRange());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.withIntValueMapping(0, 4);
      assertSame(fieldConstraintsBuilder1, fieldConstraintsBuilder0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.addWSupport();
      assertSame(fieldConstraintsBuilder1, fieldConstraintsBuilder0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.withValidRange(4, 4);
      CronFieldName cronFieldName0 = CronFieldName.DAY_OF_WEEK;
      FieldConstraintsBuilder fieldConstraintsBuilder2 = fieldConstraintsBuilder1.forField(cronFieldName0);
      FieldConstraintsBuilder fieldConstraintsBuilder3 = fieldConstraintsBuilder2.withShiftedStringMapping(0);
      assertSame(fieldConstraintsBuilder3, fieldConstraintsBuilder2);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldConstraintsBuilder fieldConstraintsBuilder0 = FieldConstraintsBuilder.instance();
      FieldConstraintsBuilder fieldConstraintsBuilder1 = fieldConstraintsBuilder0.addLSupport();
      assertSame(fieldConstraintsBuilder0, fieldConstraintsBuilder1);
  }
}
