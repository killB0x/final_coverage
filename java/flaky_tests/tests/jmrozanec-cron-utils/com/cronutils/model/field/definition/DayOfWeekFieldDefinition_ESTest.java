/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 00:47:47 GMT 2022
 */

package com.cronutils.model.field.definition;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.cronutils.mapper.WeekDay;
import com.cronutils.model.field.CronFieldName;
import com.cronutils.model.field.constraint.FieldConstraints;
import com.cronutils.model.field.definition.DayOfWeekFieldDefinition;
import com.cronutils.model.field.value.SpecialChar;
import java.util.HashMap;
import java.util.LinkedHashSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DayOfWeekFieldDefinition_ESTest extends DayOfWeekFieldDefinition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CronFieldName cronFieldName0 = CronFieldName.MINUTE;
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      HashMap<Integer, Integer> hashMap1 = new HashMap<Integer, Integer>();
      LinkedHashSet<SpecialChar> linkedHashSet0 = new LinkedHashSet<SpecialChar>();
      FieldConstraints fieldConstraints0 = new FieldConstraints(hashMap0, hashMap1, linkedHashSet0, 924, 4928, false);
      DayOfWeekFieldDefinition dayOfWeekFieldDefinition0 = new DayOfWeekFieldDefinition(cronFieldName0, fieldConstraints0, false, (WeekDay) null);
      WeekDay weekDay0 = dayOfWeekFieldDefinition0.getMondayDoWValue();
      assertNull(weekDay0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CronFieldName cronFieldName0 = CronFieldName.DAY_OF_YEAR;
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      HashMap<Integer, Integer> hashMap1 = new HashMap<Integer, Integer>();
      LinkedHashSet<SpecialChar> linkedHashSet0 = new LinkedHashSet<SpecialChar>();
      FieldConstraints fieldConstraints0 = new FieldConstraints(hashMap0, hashMap1, linkedHashSet0, (-1947), 0, false);
      WeekDay weekDay0 = new WeekDay(473, false);
      DayOfWeekFieldDefinition dayOfWeekFieldDefinition0 = new DayOfWeekFieldDefinition(cronFieldName0, fieldConstraints0, false, weekDay0);
      WeekDay weekDay1 = dayOfWeekFieldDefinition0.getMondayDoWValue();
      assertEquals(473, weekDay1.getMondayDoWValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CronFieldName cronFieldName0 = CronFieldName.HOUR;
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      HashMap<Integer, Integer> hashMap1 = new HashMap<Integer, Integer>();
      LinkedHashSet<SpecialChar> linkedHashSet0 = new LinkedHashSet<SpecialChar>();
      FieldConstraints fieldConstraints0 = new FieldConstraints(hashMap0, hashMap1, linkedHashSet0, 1917, 1946, true);
      WeekDay weekDay0 = new WeekDay(1946, true);
      DayOfWeekFieldDefinition dayOfWeekFieldDefinition0 = new DayOfWeekFieldDefinition(cronFieldName0, fieldConstraints0, true, weekDay0);
      WeekDay weekDay1 = dayOfWeekFieldDefinition0.getMondayDoWValue();
      assertEquals(1946, weekDay1.getMondayDoWValue());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      WeekDay weekDay0 = new WeekDay(8, false);
      CronFieldName cronFieldName0 = CronFieldName.MONTH;
      DayOfWeekFieldDefinition dayOfWeekFieldDefinition0 = null;
      try {
        dayOfWeekFieldDefinition0 = new DayOfWeekFieldDefinition(cronFieldName0, (FieldConstraints) null, false, weekDay0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // FieldConstraints must not be null
         //
         verifyException("com.cronutils.utils.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CronFieldName cronFieldName0 = CronFieldName.HOUR;
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      HashMap<Integer, Integer> hashMap1 = new HashMap<Integer, Integer>();
      LinkedHashSet<SpecialChar> linkedHashSet0 = new LinkedHashSet<SpecialChar>();
      FieldConstraints fieldConstraints0 = new FieldConstraints(hashMap0, hashMap1, linkedHashSet0, 0, 0, true);
      WeekDay weekDay0 = new WeekDay(0, true);
      DayOfWeekFieldDefinition dayOfWeekFieldDefinition0 = new DayOfWeekFieldDefinition(cronFieldName0, fieldConstraints0, true, weekDay0);
      WeekDay weekDay1 = dayOfWeekFieldDefinition0.getMondayDoWValue();
      assertTrue(weekDay1.isFirstDayZero());
  }
}
