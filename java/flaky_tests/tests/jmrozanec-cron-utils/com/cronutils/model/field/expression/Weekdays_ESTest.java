/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 00:33:37 GMT 2022
 */

package com.cronutils.model.field.expression;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.cronutils.mapper.WeekDay;
import com.cronutils.model.definition.CronDefinition;
import com.cronutils.model.field.expression.Weekdays;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Weekdays_ESTest extends Weekdays_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Weekdays[] weekdaysArray0 = Weekdays.values();
      assertEquals(7, weekdaysArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Weekdays weekdays0 = Weekdays.FRIDAY;
      WeekDay weekDay0 = new WeekDay(3768, false);
      int int0 = weekdays0.getWeekday(weekDay0);
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Weekdays weekdays0 = Weekdays.THURSDAY;
      // Undeclared exception!
      try { 
        weekdays0.getWeekday((WeekDay) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cronutils.mapper.WeekDay", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Weekdays weekdays0 = Weekdays.FRIDAY;
      WeekDay weekDay0 = new WeekDay(0, false);
      // Undeclared exception!
      try { 
        weekdays0.getWeekday(weekDay0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Monday Day of Week value must be greater or equal to zero
         //
         verifyException("com.cronutils.utils.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Weekdays weekdays0 = Weekdays.MONDAY;
      WeekDay weekDay0 = new WeekDay(0, true);
      int int0 = weekdays0.getWeekday(weekDay0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Weekdays weekdays0 = Weekdays.valueOf("SATURDAY");
      int int0 = weekdays0.getWeekday();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Weekdays weekdays0 = Weekdays.MONDAY;
      // Undeclared exception!
      try { 
        weekdays0.getWeekday((CronDefinition) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cronutils.model.field.expression.Weekdays", e);
      }
  }
}
