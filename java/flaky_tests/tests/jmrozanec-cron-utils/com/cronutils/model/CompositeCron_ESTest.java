/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 00:17:51 GMT 2022
 */

package com.cronutils.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.cronutils.model.CompositeCron;
import com.cronutils.model.Cron;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CompositeCron_ESTest extends CompositeCron_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Cron> linkedList0 = new LinkedList<Cron>();
      linkedList0.add((Cron) null);
      CompositeCron compositeCron0 = null;
      try {
        compositeCron0 = new CompositeCron(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cronutils.model.CompositeCron", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<Cron> linkedList0 = new LinkedList<Cron>();
      CompositeCron compositeCron0 = null;
      try {
        compositeCron0 = new CompositeCron(linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // List of Cron cannot be null or empty
         //
         verifyException("com.cronutils.utils.Preconditions", e);
      }
  }
}
