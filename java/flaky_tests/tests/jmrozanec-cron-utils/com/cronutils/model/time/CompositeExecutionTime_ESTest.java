/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 00:20:26 GMT 2022
 */

package com.cronutils.model.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.cronutils.model.time.CompositeExecutionTime;
import com.cronutils.model.time.ExecutionTime;
import java.time.Clock;
import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.ZonedDateTime;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.evosuite.runtime.mock.java.time.MockLocalTime;
import org.evosuite.runtime.mock.java.time.MockZonedDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CompositeExecutionTime_ESTest extends CompositeExecutionTime_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<ExecutionTime> linkedList0 = new LinkedList<ExecutionTime>();
      linkedList0.add((ExecutionTime) null);
      linkedList0.add((ExecutionTime) null);
      LinkedList<ExecutionTime> linkedList1 = new LinkedList<ExecutionTime>();
      linkedList1.add((ExecutionTime) null);
      CompositeExecutionTime compositeExecutionTime0 = new CompositeExecutionTime(linkedList1);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      linkedList1.pollFirst();
      compositeExecutionTime0.timeFromLastExecution(zonedDateTime0);
      CompositeExecutionTime compositeExecutionTime1 = null;
      try {
        compositeExecutionTime1 = new CompositeExecutionTime(linkedList1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // ExecutionTime list cannot be null or empty
         //
         verifyException("com.cronutils.utils.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<ExecutionTime> linkedList0 = new LinkedList<ExecutionTime>();
      linkedList0.add((ExecutionTime) null);
      CompositeExecutionTime compositeExecutionTime0 = new CompositeExecutionTime(linkedList0);
      linkedList0.add((ExecutionTime) compositeExecutionTime0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      // Undeclared exception!
      try { 
        compositeExecutionTime0.timeToNextExecution(zonedDateTime0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<ExecutionTime> linkedList0 = new LinkedList<ExecutionTime>();
      linkedList0.add((ExecutionTime) null);
      CompositeExecutionTime compositeExecutionTime0 = new CompositeExecutionTime(linkedList0);
      // Undeclared exception!
      try { 
        compositeExecutionTime0.isMatch((ZonedDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cronutils.model.time.CompositeExecutionTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<ExecutionTime> linkedList0 = new LinkedList<ExecutionTime>();
      linkedList0.add((ExecutionTime) null);
      CompositeExecutionTime compositeExecutionTime0 = new CompositeExecutionTime(linkedList0);
      // Undeclared exception!
      try { 
        compositeExecutionTime0.isMatch((ZonedDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cronutils.model.time.CompositeExecutionTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<ExecutionTime> linkedList0 = new LinkedList<ExecutionTime>();
      linkedList0.add((ExecutionTime) null);
      CompositeExecutionTime compositeExecutionTime0 = new CompositeExecutionTime(linkedList0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      LocalDate localDate0 = null;
      // Undeclared exception!
      try { 
        compositeExecutionTime0.timeFromLastExecution(zonedDateTime0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cronutils.model.time.CompositeExecutionTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<ExecutionTime> linkedList0 = new LinkedList<ExecutionTime>();
      linkedList0.add((ExecutionTime) null);
      CompositeExecutionTime compositeExecutionTime0 = new CompositeExecutionTime(linkedList0);
      linkedList0.offerLast(compositeExecutionTime0);
      CompositeExecutionTime compositeExecutionTime1 = new CompositeExecutionTime(linkedList0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      // Undeclared exception!
      try { 
        compositeExecutionTime1.lastExecution(zonedDateTime0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<ExecutionTime> linkedList0 = new LinkedList<ExecutionTime>();
      linkedList0.add((ExecutionTime) null);
      CompositeExecutionTime compositeExecutionTime0 = new CompositeExecutionTime(linkedList0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      // Undeclared exception!
      try { 
        compositeExecutionTime0.nextExecution(zonedDateTime0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cronutils.model.time.CompositeExecutionTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<ExecutionTime> linkedList0 = new LinkedList<ExecutionTime>();
      linkedList0.add((ExecutionTime) null);
      CompositeExecutionTime compositeExecutionTime0 = new CompositeExecutionTime(linkedList0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      // Undeclared exception!
      try { 
        compositeExecutionTime0.timeToNextExecution(zonedDateTime0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cronutils.model.time.CompositeExecutionTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<ExecutionTime> linkedList0 = new LinkedList<ExecutionTime>();
      linkedList0.add((ExecutionTime) null);
      CompositeExecutionTime compositeExecutionTime0 = new CompositeExecutionTime(linkedList0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      // Undeclared exception!
      try { 
        compositeExecutionTime0.timeToNextExecution(zonedDateTime0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cronutils.model.time.CompositeExecutionTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<ExecutionTime> linkedList0 = new LinkedList<ExecutionTime>();
      linkedList0.add((ExecutionTime) null);
      CompositeExecutionTime compositeExecutionTime0 = new CompositeExecutionTime(linkedList0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      // Undeclared exception!
      try { 
        compositeExecutionTime0.nextExecution(zonedDateTime0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cronutils.model.time.CompositeExecutionTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<ExecutionTime> linkedList0 = new LinkedList<ExecutionTime>();
      linkedList0.add((ExecutionTime) null);
      CompositeExecutionTime compositeExecutionTime0 = new CompositeExecutionTime(linkedList0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      // Undeclared exception!
      try { 
        compositeExecutionTime0.lastExecution(zonedDateTime0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cronutils.model.time.CompositeExecutionTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<ExecutionTime> linkedList0 = new LinkedList<ExecutionTime>();
      linkedList0.add((ExecutionTime) null);
      CompositeExecutionTime compositeExecutionTime0 = new CompositeExecutionTime(linkedList0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      // Undeclared exception!
      try { 
        compositeExecutionTime0.timeFromLastExecution(zonedDateTime0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.cronutils.model.time.CompositeExecutionTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompositeExecutionTime compositeExecutionTime0 = null;
      try {
        compositeExecutionTime0 = new CompositeExecutionTime((List<ExecutionTime>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // ExecutionTime list cannot be null or empty
         //
         verifyException("com.cronutils.utils.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<ExecutionTime> linkedList0 = new LinkedList<ExecutionTime>();
      CompositeExecutionTime compositeExecutionTime0 = null;
      try {
        compositeExecutionTime0 = new CompositeExecutionTime(linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // ExecutionTime list cannot be null or empty
         //
         verifyException("com.cronutils.utils.Preconditions", e);
      }
  }
}
