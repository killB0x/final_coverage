/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 13 20:47:13 GMT 2022
 */

package org.iban4j;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.iban4j.IbanFormatException;
import org.iban4j.bban.BbanEntryType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IbanFormatException_ESTest extends IbanFormatException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IbanFormatException.IbanFormatViolation ibanFormatException_IbanFormatViolation0 = IbanFormatException.IbanFormatViolation.UNKNOWN;
      BbanEntryType bbanEntryType0 = BbanEntryType.national_check_digit;
      IbanFormatException ibanFormatException0 = new IbanFormatException(ibanFormatException_IbanFormatViolation0, bbanEntryType0, ibanFormatException_IbanFormatViolation0, 'h', "");
      char char0 = ibanFormatException0.getInvalidCharacter();
      assertEquals('h', char0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IbanFormatException.IbanFormatViolation ibanFormatException_IbanFormatViolation0 = IbanFormatException.IbanFormatViolation.BBAN_ONLY_DIGITS_OR_LETTERS;
      Object object0 = new Object();
      IbanFormatException ibanFormatException0 = new IbanFormatException(ibanFormatException_IbanFormatViolation0, ibanFormatException_IbanFormatViolation0, object0, "UNKNOWN");
      IbanFormatException.IbanFormatViolation ibanFormatException_IbanFormatViolation1 = ibanFormatException0.getFormatViolation();
      assertSame(ibanFormatException_IbanFormatViolation1, ibanFormatException_IbanFormatViolation0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IbanFormatException.IbanFormatViolation ibanFormatException_IbanFormatViolation0 = IbanFormatException.IbanFormatViolation.BBAN_ONLY_DIGITS_OR_LETTERS;
      Object object0 = new Object();
      IbanFormatException ibanFormatException0 = new IbanFormatException(ibanFormatException_IbanFormatViolation0, ibanFormatException_IbanFormatViolation0, object0, "UNKNOWN");
      Object object1 = ibanFormatException0.getExpected();
      assertSame(object0, object1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IbanFormatException.IbanFormatViolation ibanFormatException_IbanFormatViolation0 = IbanFormatException.IbanFormatViolation.BBAN_ONLY_DIGITS;
      BbanEntryType bbanEntryType0 = BbanEntryType.identification_number;
      IbanFormatException ibanFormatException0 = new IbanFormatException(ibanFormatException_IbanFormatViolation0, bbanEntryType0, bbanEntryType0, ':', "national_check_digit");
      ibanFormatException0.getBbanEntryType();
      assertEquals(':', ibanFormatException0.getInvalidCharacter());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IbanFormatException.IbanFormatViolation ibanFormatException_IbanFormatViolation0 = IbanFormatException.IbanFormatViolation.BBAN_ONLY_DIGITS;
      BbanEntryType bbanEntryType0 = BbanEntryType.owner_account_number;
      IbanFormatException ibanFormatException0 = new IbanFormatException(ibanFormatException_IbanFormatViolation0, bbanEntryType0, ibanFormatException_IbanFormatViolation0, '3', "$VALUES");
      ibanFormatException0.getActual();
      assertEquals('3', ibanFormatException0.getInvalidCharacter());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IbanFormatException ibanFormatException0 = new IbanFormatException("");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IbanFormatException.IbanFormatViolation ibanFormatException_IbanFormatViolation0 = IbanFormatException.IbanFormatViolation.ACCOUNT_NUMBER_NOT_NULL;
      IbanFormatException ibanFormatException0 = new IbanFormatException(ibanFormatException_IbanFormatViolation0, "5$");
      IbanFormatException ibanFormatException1 = new IbanFormatException("5$", ibanFormatException0);
      assertFalse(ibanFormatException1.equals((Object)ibanFormatException0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IbanFormatException ibanFormatException0 = new IbanFormatException();
      ibanFormatException0.getFormatViolation();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IbanFormatException ibanFormatException0 = new IbanFormatException();
      ibanFormatException0.getBbanEntryType();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IbanFormatException.IbanFormatViolation ibanFormatException_IbanFormatViolation0 = IbanFormatException.IbanFormatViolation.BANK_CODE_NOT_NULL;
      BbanEntryType bbanEntryType0 = BbanEntryType.branch_code;
      IbanFormatException ibanFormatException0 = new IbanFormatException(ibanFormatException_IbanFormatViolation0, bbanEntryType0, ibanFormatException_IbanFormatViolation0, '0', ".g;ceu6!0\"^^%0");
      char char0 = ibanFormatException0.getInvalidCharacter();
      assertEquals('0', char0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IbanFormatException.IbanFormatViolation ibanFormatException_IbanFormatViolation0 = IbanFormatException.IbanFormatViolation.BBAN_ONLY_DIGITS_OR_LETTERS;
      IbanFormatException ibanFormatException0 = new IbanFormatException(ibanFormatException_IbanFormatViolation0, ibanFormatException_IbanFormatViolation0, "/xisi*}+XAUu<FYy");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IbanFormatException ibanFormatException0 = new IbanFormatException();
      char char0 = ibanFormatException0.getInvalidCharacter();
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IbanFormatException.IbanFormatViolation ibanFormatException_IbanFormatViolation0 = IbanFormatException.IbanFormatViolation.CHECK_DIGIT_ONLY_DIGITS;
      IbanFormatException ibanFormatException0 = new IbanFormatException(ibanFormatException_IbanFormatViolation0, "UNKNOWN");
      Object object0 = ibanFormatException0.getActual();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IbanFormatException ibanFormatException0 = new IbanFormatException();
      IbanFormatException ibanFormatException1 = new IbanFormatException(ibanFormatException0);
      assertFalse(ibanFormatException1.equals((Object)ibanFormatException0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IbanFormatException ibanFormatException0 = new IbanFormatException();
      Object object0 = ibanFormatException0.getExpected();
      assertNull(object0);
  }
}
