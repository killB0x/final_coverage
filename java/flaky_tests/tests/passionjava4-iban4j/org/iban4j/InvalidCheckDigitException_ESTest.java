/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 13 20:46:58 GMT 2022
 */

package org.iban4j;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.iban4j.InvalidCheckDigitException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InvalidCheckDigitException_ESTest extends InvalidCheckDigitException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InvalidCheckDigitException invalidCheckDigitException0 = new InvalidCheckDigitException("", "O}Kt3M,9'4>~", "");
      String string0 = invalidCheckDigitException0.getExpected();
      assertEquals("O}Kt3M,9'4>~", string0);
      assertEquals("", invalidCheckDigitException0.getActual());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InvalidCheckDigitException invalidCheckDigitException0 = new InvalidCheckDigitException("", "", "");
      String string0 = invalidCheckDigitException0.getExpected();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InvalidCheckDigitException invalidCheckDigitException0 = new InvalidCheckDigitException("+J_=(Dfzy#K-fS", "", "Fi)YDGNLwGf+d|{<aV[");
      String string0 = invalidCheckDigitException0.getActual();
      assertEquals("+J_=(Dfzy#K-fS", string0);
      assertEquals("", invalidCheckDigitException0.getExpected());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InvalidCheckDigitException invalidCheckDigitException0 = new InvalidCheckDigitException("", "O}Kt3M,9'4>~", "");
      String string0 = invalidCheckDigitException0.getActual();
      assertEquals("O}Kt3M,9'4>~", invalidCheckDigitException0.getExpected());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InvalidCheckDigitException invalidCheckDigitException0 = new InvalidCheckDigitException("VZ}0");
      String string0 = invalidCheckDigitException0.getActual();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      InvalidCheckDigitException invalidCheckDigitException0 = new InvalidCheckDigitException("VZ}0");
      String string0 = invalidCheckDigitException0.getExpected();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      InvalidCheckDigitException invalidCheckDigitException0 = new InvalidCheckDigitException();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      InvalidCheckDigitException invalidCheckDigitException0 = new InvalidCheckDigitException("", "", "");
      InvalidCheckDigitException invalidCheckDigitException1 = new InvalidCheckDigitException(invalidCheckDigitException0);
      assertFalse(invalidCheckDigitException1.equals((Object)invalidCheckDigitException0));
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      InvalidCheckDigitException invalidCheckDigitException0 = new InvalidCheckDigitException((String) null, "", "");
      InvalidCheckDigitException invalidCheckDigitException1 = new InvalidCheckDigitException((String) null, invalidCheckDigitException0);
      assertFalse(invalidCheckDigitException1.equals((Object)invalidCheckDigitException0));
  }
}
