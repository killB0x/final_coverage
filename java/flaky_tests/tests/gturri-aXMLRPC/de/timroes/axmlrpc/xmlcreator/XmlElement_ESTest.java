/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 09:23:50 GMT 2022
 */

package de.timroes.axmlrpc.xmlcreator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.timroes.axmlrpc.xmlcreator.XmlElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XmlElement_ESTest extends XmlElement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XmlElement xmlElement0 = new XmlElement("");
      xmlElement0.addChildren((XmlElement) null);
      xmlElement0.setContent("");
      // Undeclared exception!
      try { 
        xmlElement0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.timroes.axmlrpc.xmlcreator.XmlElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XmlElement xmlElement0 = new XmlElement("");
      xmlElement0.toString();
      xmlElement0.toString();
      XmlElement xmlElement1 = new XmlElement("");
      xmlElement0.addChildren(xmlElement1);
      xmlElement1.toString();
      XmlElement xmlElement2 = new XmlElement("uoln]=)gfMu?");
      xmlElement2.toString();
      xmlElement2.addChildren(xmlElement0);
      xmlElement2.toString();
      xmlElement0.addChildren(xmlElement2);
      xmlElement0.addChildren(xmlElement1);
      xmlElement0.addChildren(xmlElement2);
      xmlElement0.toString();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XmlElement xmlElement0 = new XmlElement("");
      xmlElement0.toString();
      XmlElement xmlElement1 = new XmlElement("$P P");
      xmlElement1.setContent("\n</>\n");
      xmlElement1.setContent("");
      xmlElement1.setContent("$OjG9h");
      xmlElement0.addChildren(xmlElement1);
      xmlElement0.addChildren(xmlElement1);
      xmlElement0.toString();
      xmlElement1.toString();
      xmlElement1.setContent("aPT/(Lf/");
      xmlElement0.setContent("/>\n");
      xmlElement0.addChildren(xmlElement1);
      xmlElement0.toString();
      xmlElement0.addChildren(xmlElement1);
      xmlElement1.setContent("{gEM/=p9::d");
      xmlElement0.toString();
      xmlElement1.addChildren(xmlElement0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XmlElement xmlElement0 = new XmlElement("W-7R;J^RCWO");
      XmlElement xmlElement1 = new XmlElement("");
      xmlElement0.addChildren(xmlElement1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XmlElement xmlElement0 = new XmlElement("jH7\r");
      XmlElement xmlElement1 = new XmlElement("jH7\r");
      xmlElement0.addChildren(xmlElement1);
      xmlElement0.toString();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XmlElement xmlElement0 = new XmlElement("`bq4}if+P&R5\"");
      xmlElement0.setContent("");
      xmlElement0.toString();
      xmlElement0.toString();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XmlElement xmlElement0 = new XmlElement("`bq4}if+P&R5\"");
      xmlElement0.setContent("`bq4}if+P&R5\"");
      xmlElement0.toString();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XmlElement xmlElement0 = new XmlElement("");
      xmlElement0.setContent("");
      xmlElement0.setContent("");
      xmlElement0.toString();
      xmlElement0.toString();
      xmlElement0.setContent("Y{DnH");
      xmlElement0.toString();
      String string0 = "7*Wtw[9";
      XmlElement xmlElement1 = new XmlElement("7*Wtw[9");
      xmlElement0.addChildren(xmlElement1);
      xmlElement0.setContent(">.dQ=JlFN+%xK@&");
      xmlElement0.toString();
      xmlElement0.addChildren(xmlElement1);
      xmlElement1.toString();
      xmlElement1.toString();
      xmlElement0.setContent("");
      xmlElement1.toString();
      xmlElement1.addChildren(xmlElement0);
      xmlElement1.addChildren(xmlElement0);
      String string1 = "";
      xmlElement1.toString();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XmlElement xmlElement0 = new XmlElement("!b+E}pCi<LR");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XmlElement xmlElement0 = new XmlElement("`bq4}if+P&R5\"");
      String string0 = xmlElement0.toString();
      assertEquals("\n<`bq4}if+P&R5\"/>\n", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XmlElement xmlElement0 = new XmlElement("");
      xmlElement0.toString();
      xmlElement0.toString();
      xmlElement0.setContent("");
  }
}
