/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 20:49:24 GMT 2022
 */

package info.michaelwittig.javaq.query;

import org.junit.Test;
import static org.junit.Assert.*;
import info.michaelwittig.javaq.query.PrimitiveResult;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PrimitiveResult_ESTest extends PrimitiveResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PrimitiveResult<Integer> primitiveResult0 = new PrimitiveResult<Integer>((Integer) null);
      Integer integer0 = primitiveResult0.getPrimitive();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      PrimitiveResult<Object> primitiveResult0 = new PrimitiveResult<Object>(object0);
      Object object1 = primitiveResult0.getPrimitive();
      assertSame(object0, object1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      PrimitiveResult<Object> primitiveResult0 = new PrimitiveResult<Object>(object0);
      String string0 = primitiveResult0.toString();
      assertNotNull(string0);
  }
}
