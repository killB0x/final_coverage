/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 20:26:36 GMT 2022
 */

package info.michaelwittig.javaq.connector.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import info.michaelwittig.javaq.connector.QConnectorDataListener;
import info.michaelwittig.javaq.connector.QConnectorListener;
import info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QConnectorAsyncImpl_ESTest extends QConnectorAsyncImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QConnectorListener qConnectorListener0 = mock(QConnectorListener.class, new ViolatedAssumptionAnswer());
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl(qConnectorListener0, "kx.c$Month", 269, true);
      String[] stringArray0 = new String[1];
      String[] stringArray1 = new String[9];
      qConnectorAsyncImpl0.subscribe("<Gq!%:/H.RG._U", stringArray0, stringArray1);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "x^YaAb\"i~f", (-132), false);
      String[] stringArray0 = new String[6];
      // Undeclared exception!
      try { 
        qConnectorAsyncImpl0.subscribe("]/", (String[]) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QConnectorListener qConnectorListener0 = mock(QConnectorListener.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(qConnectorListener0).toString();
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl(qConnectorListener0, "Nj/JmbJx", 60, true);
      QConnectorListener qConnectorListener1 = qConnectorAsyncImpl0.getConnectorListener();
      assertSame(qConnectorListener1, qConnectorListener0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "`", (-1373), true);
      // Undeclared exception!
      try { 
        qConnectorAsyncImpl0.connect();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class kx.c
         //
         verifyException("info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "T}l", (-976), false);
      boolean boolean0 = qConnectorAsyncImpl0.isConnected();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "l8", (-4002), true);
      String[] stringArray0 = new String[0];
      qConnectorAsyncImpl0.subscribe("l8", stringArray0, stringArray0);
      assertFalse(qConnectorAsyncImpl0.isConnected());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "T}l", (-1), true);
      // Undeclared exception!
      try { 
        qConnectorAsyncImpl0.unsubscribe("T}l");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "',#iL2L aw1D.=KEb(c", (-332), false);
      // Undeclared exception!
      try { 
        qConnectorAsyncImpl0.unsubscribe((QConnectorDataListener) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "Wz}:.", 1977, true);
      QConnectorListener qConnectorListener0 = qConnectorAsyncImpl0.getConnectorListener();
      assertNull(qConnectorListener0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "", (-624), false);
      try { 
        qConnectorAsyncImpl0.disconnect();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Not connected
         //
         verifyException("info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QConnectorAsyncImpl qConnectorAsyncImpl0 = new QConnectorAsyncImpl((QConnectorListener) null, "Already connected", 20, true);
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        qConnectorAsyncImpl0.subscribe((QConnectorDataListener) null, stringArray0, stringArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.michaelwittig.javaq.connector.impl.QConnectorAsyncImpl", e);
      }
  }
}
