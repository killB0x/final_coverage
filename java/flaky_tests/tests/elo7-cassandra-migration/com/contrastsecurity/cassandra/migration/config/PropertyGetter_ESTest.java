/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 20:41:33 GMT 2022
 */

package com.contrastsecurity.cassandra.migration.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contrastsecurity.cassandra.migration.config.PropertyGetter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PropertyGetter_ESTest extends PropertyGetter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = PropertyGetter.getProperty("1CV%6QfES7I-awBZ", "1CV%6QfES7I-awBZ");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        PropertyGetter.getProperty((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        PropertyGetter.getProperty("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = PropertyGetter.getProperty("E}9[X)Sy  +k3", "_");
      assertEquals("/usr/bin/java", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PropertyGetter propertyGetter0 = new PropertyGetter();
  }
}
