/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 20:43:32 GMT 2022
 */

package com.contrastsecurity.cassandra.migration.logging.javautil;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contrastsecurity.cassandra.migration.logging.javautil.JavaUtilLog;
import java.util.logging.Logger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JavaUtilLog_ESTest extends JavaUtilLog_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Logger logger0 = Logger.getAnonymousLogger();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      // Undeclared exception!
      try { 
        javaUtilLog0.warn("s@&'$J<E1tJ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Logger logger0 = Logger.getAnonymousLogger();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      // Undeclared exception!
      try { 
        javaUtilLog0.info("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Logger logger0 = Logger.getAnonymousLogger();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      MockException mockException0 = new MockException();
      // Undeclared exception!
      try { 
        javaUtilLog0.error("RZ", (Exception) mockException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Logger logger0 = Logger.getAnonymousLogger();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      // Undeclared exception!
      try { 
        javaUtilLog0.error("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Logger logger0 = Logger.getAnonymousLogger();
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      // Undeclared exception!
      try { 
        javaUtilLog0.debug("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Logger logger0 = Logger.getLogger("");
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      javaUtilLog0.debug("");
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Logger logger0 = Logger.getLogger("");
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      javaUtilLog0.info("2tw~ XOuP");
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Logger logger0 = Logger.getLogger("");
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      MockThrowable mockThrowable0 = new MockThrowable();
      MockException mockException0 = new MockException(mockThrowable0);
      javaUtilLog0.error("", (Exception) mockException0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Logger logger0 = Logger.getLogger("");
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      javaUtilLog0.error("");
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Logger logger0 = Logger.getLogger("com.contrastsecurity.cassandra.migration.logging.javautil.JavaUtilLog");
      JavaUtilLog javaUtilLog0 = new JavaUtilLog(logger0);
      javaUtilLog0.warn("com.contrastsecurity.cassandra.migration.logging.javautil.JavaUtilLog");
  }
}
