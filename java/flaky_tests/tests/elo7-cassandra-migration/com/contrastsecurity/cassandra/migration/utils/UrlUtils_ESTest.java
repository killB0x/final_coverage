/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 20:45:11 GMT 2022
 */

package com.contrastsecurity.cassandra.migration.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.contrastsecurity.cassandra.migration.utils.UrlUtils;
import java.net.URL;
import java.net.URLStreamHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UrlUtils_ESTest extends UrlUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        UrlUtils.toFilePath((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URL uRL1 = MockURL.URL(uRL0, "c2w}.~y%q");
      // Undeclared exception!
      try { 
        UrlUtils.toFilePath(uRL1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URLDecoder: Incomplete trailing escape (%) pattern
         //
         verifyException("java.net.URLDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "/");
      String string0 = UrlUtils.toFilePath(uRL1);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("vJ=#i[pA`", "'?dss%~:QUU[.n", 0, "'?dss%~:QUU[.n", uRLStreamHandler0);
      String string0 = UrlUtils.toFilePath(uRL0);
      assertEquals("/home/user/'", string0);
  }
}
