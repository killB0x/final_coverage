/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:47:33 GMT 2022
 */

package casmi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import casmi.Menu;
import casmi.MenuItem;
import javax.swing.JMenu;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Menu_ESTest extends Menu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.inserSeparator((-419));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // index less than zero.
         //
         verifyException("javax.swing.JMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Menu menu0 = new Menu();
      // Undeclared exception!
      try { 
        menu0.addMenuItem((MenuItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.Menu", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Menu menu0 = new Menu();
      MenuItem menuItem0 = menu0.addMenuItem("9=H/Jd|QQT");
      MenuItem menuItem1 = menu0.addMenuItem(menuItem0);
      assertSame(menuItem0, menuItem1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Menu menu0 = new Menu();
      menu0.inserSeparator(1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Menu menu0 = new Menu();
      menu0.addSeparator();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Menu menu0 = new Menu();
      JMenu jMenu0 = menu0.getJMenu();
      assertFalse(jMenu0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Menu menu0 = new Menu((String) null);
  }
}
