/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:40:27 GMT 2022
 */

package casmi.graphics.object;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import casmi.graphics.Graphics;
import casmi.graphics.object.Camera;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Camera_ESTest extends Camera_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Camera.getViewMatrix(0.0, (-252.99), 3461.0928, (-277.47832), 754.6475467396441, 0.0, 3654.402513, 1182.777489, 0.0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Camera camera0 = new Camera(0.0, (-2193.391), (-2193.391), (-2193.391), 1.0, (-582.2), (-582.2), 0.0, (-1443.2869427807));
      camera0.getCameraDirection();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Camera camera0 = new Camera();
      camera0.setEyeX((-297.693));
      camera0.getCameraDirection();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Camera camera0 = new Camera();
      camera0.setCenter((-252.99), 0.0, 329.701609113404);
      camera0.getCameraDirection();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Camera camera0 = new Camera();
      camera0.set(0.0, 0.0, 4117.8, 0.5235987755982988, (-1.0), 1.0, 1.0, 3447.92976, 1.0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Camera camera0 = new Camera();
      camera0.setOrientation(0.0, 0.0, 2.0);
      camera0.getUpZ();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Camera camera0 = new Camera(10.0, 10.0, (-2315.0), 0.0, 0.0, (-253.0), 0.0, 0.0, (-253.0));
      camera0.getUpZ();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Camera camera0 = new Camera();
      camera0.setOrientation(1614.6, 1614.6, 1614.6);
      camera0.getUpY();
      assertEquals(1614.6, camera0.getUpX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Camera camera0 = new Camera();
      double double0 = camera0.getUpX();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Camera camera0 = new Camera(793.11896564, 793.11896564, 793.11896564, 187.2079594, 3550.6, 187.2079594, 3550.6, 0.0, 793.11896564);
      double double0 = camera0.getUpX();
      assertEquals(793.11896564, camera0.getEyeZ(), 0.01);
      assertEquals(793.11896564, camera0.getEyeY(), 0.01);
      assertEquals(187.2079594, camera0.getCenterX(), 0.01);
      assertEquals(0.0, camera0.getUpY(), 0.01);
      assertEquals(187.2079594, camera0.getCenterZ(), 0.01);
      assertEquals(793.11896564, camera0.getUpZ(), 0.01);
      assertEquals(793.11896564, camera0.getEyeX(), 0.01);
      assertEquals(3550.6, camera0.getCenterY(), 0.01);
      assertEquals(3550.6, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Camera camera0 = new Camera();
      double double0 = camera0.getEyeZ();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Camera camera0 = new Camera(1.0, (-415.621), (-1990.637444), (-1990.637444), 1531.573395, (-415.621), (-1.0), (-1.0), (-275.575340766));
      camera0.set(1.0, 1.0, 1.0, (-2957.4007), 2.0, 1991.70875, (-275.575340766), (-2519.738), (-221.305));
      double double0 = camera0.getEyeZ();
      assertEquals((-2957.4007), camera0.getCenterX(), 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Camera camera0 = new Camera();
      double double0 = camera0.getEyeY();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Camera camera0 = new Camera(1.0, (-415.621), (-1990.637444), (-1990.637444), 1531.573395, (-415.621), (-1.0), (-1.0), (-275.575340766));
      camera0.setEyeY(1118.718798887);
      double double0 = camera0.getEyeY();
      assertEquals(1118.718798887, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Camera camera0 = new Camera(1330.3597, (-1.0E10), 751.0, (-1.0E10), (-1.0), (-1.0), (-2241.5024), 1.0, (-1.0));
      double double0 = camera0.getEyeX();
      assertEquals(1330.3597, double0, 0.01);
      assertEquals(751.0, camera0.getEyeZ(), 0.01);
      assertEquals((-1.0E10), camera0.getCenterX(), 0.01);
      assertEquals((-2241.5024), camera0.getUpX(), 0.01);
      assertEquals((-1.0), camera0.getCenterY(), 0.01);
      assertEquals((-1.0), camera0.getCenterZ(), 0.01);
      assertEquals((-1.0), camera0.getUpZ(), 0.01);
      assertEquals(1.0, camera0.getUpY(), 0.01);
      assertEquals((-1.0E10), camera0.getEyeY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Camera camera0 = new Camera((-1378.74), (-1378.74), (-1378.74), (-1378.74), (-1.0), 2952.560649877144, 0.0, (-2229.17755416215), (-1378.74));
      double double0 = camera0.getEyeX();
      assertEquals((-1378.74), camera0.getEyeY(), 0.01);
      assertEquals((-1378.74), camera0.getCenterX(), 0.01);
      assertEquals((-1378.74), camera0.getUpZ(), 0.01);
      assertEquals((-1378.74), camera0.getEyeZ(), 0.01);
      assertEquals(0.0, camera0.getUpX(), 0.01);
      assertEquals((-1.0), camera0.getCenterY(), 0.01);
      assertEquals(2952.560649877144, camera0.getCenterZ(), 0.01);
      assertEquals((-1378.74), double0, 0.01);
      assertEquals((-2229.17755416215), camera0.getUpY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Camera camera0 = new Camera((-92.73929599746107), (-1.0E10), (-1.0E10), (-107.44), (-1.0E10), (-1.0E10), (-3459.5809052071513), (-3459.5809052071513), (-3459.5809052071513));
      double double0 = camera0.getCenterZ();
      assertEquals((-1.0E10), camera0.getCenterY(), 0.01);
      assertEquals((-1.0E10), camera0.getEyeY(), 0.01);
      assertEquals((-92.73929599746107), camera0.getEyeX(), 0.01);
      assertEquals((-1.0E10), camera0.getEyeZ(), 0.01);
      assertEquals((-107.44), camera0.getCenterX(), 0.01);
      assertEquals((-3459.5809052071513), camera0.getUpY(), 0.01);
      assertEquals((-3459.5809052071513), camera0.getUpZ(), 0.01);
      assertEquals((-1.0E10), double0, 0.01);
      assertEquals((-3459.5809052071513), camera0.getUpX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Camera camera0 = new Camera();
      double double0 = camera0.getCenterY();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Camera camera0 = new Camera(1.0, (-415.621), (-1990.637444), (-1990.637444), 1531.573395, (-415.621), (-1.0), (-1.0), (-275.575340766));
      double double0 = camera0.getCenterY();
      assertEquals(1.0, camera0.getEyeX(), 0.01);
      assertEquals((-1.0), camera0.getUpY(), 0.01);
      assertEquals((-415.621), camera0.getCenterZ(), 0.01);
      assertEquals((-1990.637444), camera0.getCenterX(), 0.01);
      assertEquals((-1.0), camera0.getUpX(), 0.01);
      assertEquals((-415.621), camera0.getEyeY(), 0.01);
      assertEquals(1531.573395, double0, 0.01);
      assertEquals((-1990.637444), camera0.getEyeZ(), 0.01);
      assertEquals((-275.575340766), camera0.getUpZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Camera camera0 = new Camera();
      double double0 = camera0.getCenterX();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Camera camera0 = new Camera();
      camera0.set(2.0, 0.0, 0.0, 10.0, 2.0, (-1870.334397), 2.0, 0.0, 10.0);
      double double0 = camera0.getCenterX();
      assertEquals(10.0, camera0.getUpZ(), 0.01);
      assertEquals(10.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = Camera.getViewMatrix((-1.0E10), (-1.0E10), (-1577.6347573), 0.0, (-2913.8374759035432), (-1.0E10), 0.0, (-2913.8374759035432), (-3459.5809052071513));
      assertEquals(16, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Camera camera0 = new Camera();
      // Undeclared exception!
      try { 
        camera0.render((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.object.Camera", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Camera camera0 = new Camera((-92.73929599746107), (-1.0E10), (-1.0E10), (-107.44), (-1.0E10), (-1.0E10), (-3459.5809052071513), (-3459.5809052071513), (-3459.5809052071513));
      assertEquals((-1.0E10), camera0.getCenterY(), 0.01);
      
      camera0.setCenterY((-107.44));
      assertEquals((-92.73929599746107), camera0.getEyeX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Camera camera0 = new Camera();
      double double0 = camera0.getUpZ();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Camera camera0 = new Camera();
      double double0 = camera0.getUpY();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Camera camera0 = new Camera(1.0, (-415.621), (-1990.637444), (-1990.637444), 1531.573395, (-415.621), (-1.0), (-1.0), (-275.575340766));
      double double0 = camera0.getEyeZ();
      assertEquals((-275.575340766), camera0.getUpZ(), 0.01);
      assertEquals(1531.573395, camera0.getCenterY(), 0.01);
      assertEquals((-415.621), camera0.getCenterZ(), 0.01);
      assertEquals((-1990.637444), camera0.getCenterX(), 0.01);
      assertEquals((-415.621), camera0.getEyeY(), 0.01);
      assertEquals((-1.0), camera0.getUpX(), 0.01);
      assertEquals((-1.0), camera0.getUpY(), 0.01);
      assertEquals(1.0, camera0.getEyeX(), 0.01);
      assertEquals((-1990.637444), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Camera camera0 = new Camera((-92.73929599746107), (-1.0E10), (-1.0E10), (-107.44), (-1.0E10), (-1.0E10), (-3459.5809052071513), (-3459.5809052071513), (-3459.5809052071513));
      double double0 = camera0.getUpX();
      assertEquals((-1.0E10), camera0.getEyeZ(), 0.01);
      assertEquals((-3459.5809052071513), double0, 0.01);
      assertEquals((-1.0E10), camera0.getEyeY(), 0.01);
      assertEquals((-3459.5809052071513), camera0.getUpZ(), 0.01);
      assertEquals((-92.73929599746107), camera0.getEyeX(), 0.01);
      assertEquals((-3459.5809052071513), camera0.getUpY(), 0.01);
      assertEquals((-1.0E10), camera0.getCenterY(), 0.01);
      assertEquals((-1.0E10), camera0.getCenterZ(), 0.01);
      assertEquals((-107.44), camera0.getCenterX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Camera camera0 = new Camera((-92.73929599746107), (-1.0E10), (-1.0E10), (-107.44), (-1.0E10), (-1.0E10), (-3459.5809052071513), (-3459.5809052071513), (-3459.5809052071513));
      camera0.setEye((-1.0E10), (-107.44), (-2777.636852591252));
      assertEquals((-2777.636852591252), camera0.getEyeZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Camera camera0 = new Camera((-92.73929599746107), (-1.0E10), (-1.0E10), (-107.44), (-1.0E10), (-1.0E10), (-3459.5809052071513), (-3459.5809052071513), (-3459.5809052071513));
      camera0.setEyeZ(317.437248);
      assertEquals(317.437248, camera0.getEyeZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Camera camera0 = new Camera((-92.73929599746107), (-1.0E10), (-1.0E10), (-107.44), (-1.0E10), (-1.0E10), (-3459.5809052071513), (-3459.5809052071513), (-3459.5809052071513));
      double double0 = camera0.getCenterY();
      assertEquals((-92.73929599746107), camera0.getEyeX(), 0.01);
      assertEquals((-1.0E10), camera0.getEyeZ(), 0.01);
      assertEquals((-107.44), camera0.getCenterX(), 0.01);
      assertEquals((-1.0E10), double0, 0.01);
      assertEquals((-1.0E10), camera0.getEyeY(), 0.01);
      assertEquals((-3459.5809052071513), camera0.getUpZ(), 0.01);
      assertEquals((-3459.5809052071513), camera0.getUpY(), 0.01);
      assertEquals((-1.0E10), camera0.getCenterZ(), 0.01);
      assertEquals((-3459.5809052071513), camera0.getUpX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Camera camera0 = new Camera((-92.73929599746107), (-1.0E10), (-1.0E10), (-107.44), (-1.0E10), (-1.0E10), (-3459.5809052071513), (-3459.5809052071513), (-3459.5809052071513));
      double double0 = camera0.getCenterX();
      assertEquals((-3459.5809052071513), camera0.getUpX(), 0.01);
      assertEquals((-107.44), double0, 0.01);
      assertEquals((-3459.5809052071513), camera0.getUpZ(), 0.01);
      assertEquals((-3459.5809052071513), camera0.getUpY(), 0.01);
      assertEquals((-1.0E10), camera0.getCenterZ(), 0.01);
      assertEquals((-1.0E10), camera0.getCenterY(), 0.01);
      assertEquals((-1.0E10), camera0.getEyeY(), 0.01);
      assertEquals((-1.0E10), camera0.getEyeZ(), 0.01);
      assertEquals((-92.73929599746107), camera0.getEyeX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Camera camera0 = new Camera();
      camera0.setCenter((-252.99), 0.0, 329.701609113404);
      double double0 = camera0.getCenterZ();
      assertEquals(329.701609113404, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Camera camera0 = new Camera((-92.73929599746107), (-1.0E10), (-1.0E10), (-107.44), (-1.0E10), (-1.0E10), (-3459.5809052071513), (-3459.5809052071513), (-3459.5809052071513));
      camera0.getViewMatrix();
      assertEquals((-3459.5809052071513), camera0.getUpY(), 0.01);
      assertEquals((-107.44), camera0.getCenterX(), 0.01);
      assertEquals((-1.0E10), camera0.getEyeY(), 0.01);
      assertEquals((-3459.5809052071513), camera0.getUpX(), 0.01);
      assertEquals((-3459.5809052071513), camera0.getUpZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Camera camera0 = new Camera(1.0, (-415.621), (-1990.637444), (-1990.637444), 1531.573395, (-415.621), (-1.0), (-1.0), (-275.575340766));
      double double0 = camera0.getEyeY();
      assertEquals((-1990.637444), camera0.getCenterX(), 0.01);
      assertEquals((-1.0), camera0.getUpY(), 0.01);
      assertEquals(1.0, camera0.getEyeX(), 0.01);
      assertEquals(1531.573395, camera0.getCenterY(), 0.01);
      assertEquals((-1.0), camera0.getUpX(), 0.01);
      assertEquals((-415.621), camera0.getCenterZ(), 0.01);
      assertEquals((-415.621), double0, 0.01);
      assertEquals((-275.575340766), camera0.getUpZ(), 0.01);
      assertEquals((-1990.637444), camera0.getEyeZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Camera camera0 = new Camera();
      double double0 = camera0.getEyeX();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Camera camera0 = new Camera();
      double double0 = camera0.getCenterZ();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Camera camera0 = new Camera(1.0, (-415.621), (-1990.637444), (-1990.637444), 1531.573395, (-415.621), (-1.0), (-1.0), (-275.575340766));
      camera0.setCenterZ(0.0);
      assertEquals(0.0, camera0.getCenterZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Camera camera0 = new Camera();
      camera0.setOrientation(255.0, (-3761.352), 1.0);
      double double0 = camera0.getUpY();
      assertEquals(1.0, camera0.getUpZ(), 0.01);
      assertEquals((-3761.352), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Camera camera0 = new Camera();
      camera0.setCenterX(0.0);
      assertEquals(0.0, camera0.getCenterX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Camera camera0 = new Camera(0.0, 1.0, 0.0, (-3015.6167323041), 0.0, (-3015.6167323041), (-3015.6167323041), 1.0, 0.0);
      // Undeclared exception!
      try { 
        camera0.render((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.object.Camera", e);
      }
  }
}
