/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:22:54 GMT 2022
 */

package casmi.graphics.font;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import casmi.graphics.font.Font;
import casmi.graphics.font.FontStyle;
import java.awt.geom.AffineTransform;
import java.io.File;
import java.io.IOException;
import java.text.AttributedCharacterIterator;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Font_ESTest extends Font_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FontStyle fontStyle0 = FontStyle.ITALIC;
      Font font0 = new Font("I031", fontStyle0, 0.0);
      // Undeclared exception!
      try { 
        font0.setStyle("SO'w-II,m[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FontStyle fontStyle0 = FontStyle.BOLD_ITALIC;
      Font font0 = new Font("bold", fontStyle0, 2363.9973271859);
      font0.setSize(2363.9973271859);
      assertEquals("java.awt.Font[family=Dialog,name=bold,style=plain,size=2364]", font0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Font font0 = new Font("ITALIC", "ITALIC", 1733.16708457835);
      font0.setStyle("ITALIC");
      assertEquals(1733.0, font0.getSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Font font0 = new Font();
      String string0 = font0.toString();
      assertEquals("java.awt.Font[family=Dialog,name=Default,style=plain,size=18]", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FontStyle fontStyle0 = FontStyle.BOLD;
      Font font0 = new Font("bold", fontStyle0, 0.0);
      double double0 = font0.getSize();
      assertEquals(0.0, double0, 0.01);
      assertEquals("java.awt.Font[family=Dialog,name=bold,style=bold,size=0]", font0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Font font0 = new Font();
      double double0 = font0.getSize();
      assertEquals("java.awt.Font[family=Dialog,name=Default,style=plain,size=18]", font0.toString());
      assertEquals(18.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FontStyle fontStyle0 = FontStyle.ITALIC;
      Font font0 = new Font("bold", fontStyle0, (-697.0));
      double double0 = font0.getSize();
      assertEquals("java.awt.Font[family=Dialog,name=bold,style=italic,size=-696]", font0.toString());
      assertEquals((-697.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Font font0 = new Font();
      font0.getPSName();
      assertEquals("java.awt.Font[family=Dialog,name=Default,style=plain,size=18]", font0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Font font0 = new Font();
      font0.getFontName();
      assertEquals("java.awt.Font[family=Dialog,name=Default,style=plain,size=18]", font0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Font font0 = new Font((java.awt.Font) null);
      java.awt.Font font1 = font0.getAWTFont();
      assertNull(font1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<AttributedCharacterIterator.Attribute, Object> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, Object>();
      java.awt.Font font0 = java.awt.Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashMap0);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(18.0);
      java.awt.Font font1 = font0.deriveFont(affineTransform0);
      Font font2 = new Font(font1);
      java.awt.Font font3 = font2.getAWTFont();
      assertEquals("Default", font3.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FontStyle fontStyle0 = FontStyle.ITALIC;
      Font font0 = new Font("otf", fontStyle0, 0.0);
      java.awt.Font font1 = font0.getAWTFont();
      assertEquals(0.0F, font1.getSize2D(), 0.01F);
      assertEquals(2, font1.getStyle());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FontStyle fontStyle0 = FontStyle.BOLD;
      Font font0 = new Font("' is already exists", fontStyle0, (-2355.0598));
      font0.getAWTFont();
      assertEquals("java.awt.Font[family=Dialog,name=' is already exists,style=bold,size=-2354]", font0.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Font font0 = new Font();
      // Undeclared exception!
      try { 
        font0.setStyle((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Font font0 = new Font((java.awt.Font) null);
      FontStyle fontStyle0 = FontStyle.BOLD_ITALIC;
      // Undeclared exception!
      try { 
        font0.setStyle(fontStyle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Font font0 = new Font((java.awt.Font) null);
      // Undeclared exception!
      try { 
        font0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Font font0 = new Font((java.awt.Font) null);
      // Undeclared exception!
      try { 
        font0.getFamily();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Font font0 = null;
      try {
        font0 = new Font((String) null, (String) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Font font0 = null;
      try {
        font0 = new Font("", "", (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Font font0 = null;
      try {
        font0 = new Font("oaatf", (FontStyle) null, 2.4901010889147694);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FontStyle fontStyle0 = FontStyle.PLAIN;
      Font font0 = null;
      try {
        font0 = new Font((File) null, fontStyle0, (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Ih(0`&xw");
      FontStyle fontStyle0 = FontStyle.PLAIN;
      Font font0 = null;
      try {
        font0 = new Font(mockFile0, fontStyle0, (-3652.0));
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // The file is invalid. An OTF or TTF file can be used.
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Font font0 = new Font((java.awt.Font) null);
      // Undeclared exception!
      try { 
        font0.setSize((-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MockFile mockFile0 = new MockFile("ITALIC");
      Font font0 = null;
      try {
        font0 = new Font(mockFile0, "ITALIC", 1733.16708457835);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // The file is invalid. An OTF or TTF file can be used.
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Font font0 = null;
      try {
        font0 = new Font((File) null, "bold", (-2545.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HashMap<AttributedCharacterIterator.Attribute, Integer> hashMap0 = new HashMap<AttributedCharacterIterator.Attribute, Integer>();
      java.awt.Font font0 = java.awt.Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashMap0);
      java.awt.Font font1 = font0.deriveFont((-9), 0.0F);
      Font font2 = new Font(font1);
      FontStyle fontStyle0 = font2.getStyle();
      assertEquals(FontStyle.BOLD_ITALIC, fontStyle0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Font font0 = new Font();
      FontStyle fontStyle0 = font0.getStyle();
      assertEquals(FontStyle.PLAIN, fontStyle0);
      assertEquals("java.awt.Font[family=Dialog,name=Default,style=plain,size=18]", font0.toString());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Font font0 = new Font();
      FontStyle fontStyle0 = FontStyle.ITALIC;
      font0.setStyle(fontStyle0);
      font0.getStyle();
      assertEquals("java.awt.Font[family=Dialog,name=Default,style=italic,size=18]", font0.toString());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockFile mockFile0 = new MockFile("otf");
      Font font0 = null;
      try {
        font0 = new Font(mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Can't read otf
         //
         verifyException("java.awt.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Font font0 = null;
      try {
        font0 = new Font((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String[] stringArray0 = Font.getAvailableFontFamilyNames();
      assertEquals(12, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Font font0 = null;
      try {
        font0 = new Font((File) null, "", 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Font font0 = new Font((java.awt.Font) null);
      // Undeclared exception!
      try { 
        font0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Font font0 = new Font();
      assertEquals("java.awt.Font[family=Dialog,name=Default,style=plain,size=18]", font0.toString());
      
      FontStyle fontStyle0 = FontStyle.BOLD;
      font0.setStyle(fontStyle0);
      font0.getStyle();
      assertEquals("java.awt.Font[family=Dialog,name=Default,style=bold,size=18]", font0.toString());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Font font0 = new Font((java.awt.Font) null);
      // Undeclared exception!
      try { 
        font0.getPSName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Font font0 = new Font();
      font0.getName();
      assertEquals("java.awt.Font[family=Dialog,name=Default,style=plain,size=18]", font0.toString());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Font font0 = new Font((java.awt.Font) null);
      // Undeclared exception!
      try { 
        font0.getFontName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Font font0 = new Font("PLAIN", "PLAIN", 18.0);
      font0.getFamily();
      assertEquals("java.awt.Font[family=Dialog,name=PLAIN,style=plain,size=18]", font0.toString());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Font font0 = new Font((java.awt.Font) null);
      // Undeclared exception!
      try { 
        font0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Font font0 = new Font("");
      font0.getName();
      assertEquals("java.awt.Font[family=Dialog,name=,style=plain,size=18]", font0.toString());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Font font0 = new Font((java.awt.Font) null);
      // Undeclared exception!
      try { 
        font0.getStyle();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.font.Font", e);
      }
  }
}
