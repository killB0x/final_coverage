/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:10:32 GMT 2022
 */

package casmi.graphics.color;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import casmi.graphics.color.ColorSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ColorSet_ESTest extends ColorSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ColorSet[] colorSetArray0 = ColorSet.values();
      assertEquals(147, colorSetArray0.length);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      // Undeclared exception!
      try { 
        ColorSet.getRGB((ColorSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.graphics.color.ColorSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_SLATE_GREY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.YELLOW_GREEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {154, 205, 50}, intArray0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.YELLOW;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 255, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.WHITE_SMOKE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {245, 245, 245}, intArray0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.WHITE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 255, 255}, intArray0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.WHEAT;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {245, 222, 179}, intArray0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.VIOLET;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {238, 130, 238}, intArray0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.TURQUOISE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {64, 224, 208}, intArray0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.TOMATO;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 99, 71}, intArray0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.THISTLE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {216, 191, 216}, intArray0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.TEAL;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 128, 128}, intArray0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.TAN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {210, 180, 140}, intArray0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.STEEL_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {70, 130, 180}, intArray0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.SPRING_GREEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 255, 127}, intArray0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.SNOW;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 250, 250}, intArray0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.SLATE_GREY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {112, 128, 144}, intArray0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.SLATE_GRAY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {112, 128, 144}, intArray0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.SLATE_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {106, 90, 205}, intArray0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.SKY_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {135, 206, 235}, intArray0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.SILVER;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {192, 192, 192}, intArray0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.SIENNA;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {160, 82, 45}, intArray0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.SEA_SHELL;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 245, 238}, intArray0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.SEA_GREEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {46, 139, 87}, intArray0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.SANDY_BROWN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {244, 164, 96}, intArray0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.SALMON;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {250, 128, 114}, intArray0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.SADDLE_BROWN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {139, 69, 19}, intArray0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.ROYAL_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {65, 105, 255}, intArray0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.ROSY_BROWN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {188, 136, 153}, intArray0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.RED;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.PURPLE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {128, 0, 128}, intArray0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.POWDER_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {176, 224, 230}, intArray0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.PLUM;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {221, 160, 221}, intArray0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.PINK;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 192, 203}, intArray0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.PERU;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {205, 133, 63}, intArray0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.PEACH_PUFF;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 218, 185}, intArray0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.PAPAYA_WHIP;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 239, 213}, intArray0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.PALE_VIOLET_RED;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {219, 112, 147}, intArray0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.valueOf("PALE_TURQUOISE");
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {175, 238, 238}, intArray0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.PALE_GREEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {152, 251, 152}, intArray0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.PALE_GOLDENROD;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {238, 232, 170}, intArray0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.ORCHID;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {218, 112, 214}, intArray0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.ORANGE_RED;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 69, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.ORANGE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 165, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.OLIVE_DRAB;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {107, 142, 35}, intArray0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.OLIVE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {128, 128, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.OLD_LACE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {253, 245, 230}, intArray0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.NAVY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 0, 128}, intArray0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.NAVAJO_WHITE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 222, 173}, intArray0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.MOCCASIN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 228, 181}, intArray0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.MISTY_ROSE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 228, 225}, intArray0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.MINT_CREAM;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {245, 255, 250}, intArray0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.MIDNIGHT_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {25, 25, 112}, intArray0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.MEDIUM_VIOLET_RED;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {199, 21, 133}, intArray0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.MEDIUM_TURQUOISE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {72, 209, 204}, intArray0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.MEDIUM_SPRING_GREEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 250, 154}, intArray0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.MEDIUM_SLATE_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {123, 104, 238}, intArray0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.MEDIUM_SEA_GREEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {60, 179, 113}, intArray0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.MEDIUM_PURPLE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {147, 112, 219}, intArray0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.MEDIUM_ORCHID;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {186, 85, 211}, intArray0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.MEDIUM_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 0, 205}, intArray0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.MEDIUM_AQUAMARINE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {102, 205, 170}, intArray0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.MAROON;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {128, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.MAGENTA;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 0, 255}, intArray0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LINEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {250, 240, 230}, intArray0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIME_GREEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {50, 205, 50}, intArray0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIME;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 255, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIGHT_YELLOW;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 255, 224}, intArray0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIGHT_STEEL_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {176, 196, 222}, intArray0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIGHT_SLATE_GREY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {119, 136, 153}, intArray0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIGHT_SLATE_GRAY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {119, 136, 153}, intArray0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIGHT_SKY_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {135, 206, 250}, intArray0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIGHT_SEA_GREEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {32, 178, 170}, intArray0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIGHT_SALMON;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 160, 122}, intArray0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIGHT_PINK;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 182, 193}, intArray0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIGHT_GREY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {211, 211, 211}, intArray0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIGHT_GREEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {144, 238, 144}, intArray0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIGHT_GRAY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {211, 211, 211}, intArray0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIGHT_GOLDENROD_YELLOW;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {250, 250, 210}, intArray0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIGHT_CYAN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {224, 255, 255}, intArray0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIGHT_CORAL;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {240, 128, 128}, intArray0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LIGHT_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {173, 216, 230}, intArray0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LEMON_CHIFFON;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 250, 205}, intArray0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LAWN_GREEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {124, 252, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LAVENDER_BLUSH;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 240, 245}, intArray0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.LAVENDER;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {230, 230, 250}, intArray0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.KHAKI;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {240, 230, 140}, intArray0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.IVORY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 255, 240}, intArray0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.INDIGO;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {75, 0, 130}, intArray0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.INDIAN_RED;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {205, 92, 92}, intArray0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.HOT_PINK;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 105, 180}, intArray0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.HONEYDEW;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {240, 255, 240}, intArray0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.GREY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {128, 128, 128}, intArray0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.GREEN_YELLOW;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {173, 255, 47}, intArray0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.GREEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 128, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.GRAY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {128, 128, 128}, intArray0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.GOLDENROD;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {218, 165, 32}, intArray0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.GOLD;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 215, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.GHOST_WHITE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {248, 248, 255}, intArray0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.GAINSBORO;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {220, 220, 220}, intArray0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.FUCHSIA;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 0, 255}, intArray0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.FOREST_GREEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {34, 139, 34}, intArray0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.FLORAL_WHITE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 250, 240}, intArray0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.FIREBRICK;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {178, 34, 34}, intArray0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DODGER_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {30, 144, 255}, intArray0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DIM_GREY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {105, 105, 105}, intArray0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DIM_GRAY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {105, 105, 105}, intArray0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DEEP_SKY_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 191, 255}, intArray0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DEEP_PINK;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 20, 147}, intArray0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_VIOLET;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {148, 0, 211}, intArray0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_TURQUOISE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 206, 209}, intArray0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_SLATE_GRAY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {47, 79, 79}, intArray0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_SLATE_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {72, 61, 139}, intArray0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_SEA_GREEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {143, 188, 143}, intArray0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_SALMON;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {233, 150, 122}, intArray0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_RED;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {139, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_ORCHID;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {153, 50, 204}, intArray0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_ORANGE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 140, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_OLIVE_GREEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {85, 107, 47}, intArray0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_MAGENTA;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {139, 0, 139}, intArray0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_KHAKI;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {189, 183, 107}, intArray0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_GREY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {169, 169, 169}, intArray0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_GREEN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 100, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_GRAY;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {169, 169, 169}, intArray0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_GOLDENROD;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {184, 134, 11}, intArray0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_CYAN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 139, 139}, intArray0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.DARK_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 0, 139}, intArray0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.CYAN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 255, 255}, intArray0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.CRIMSON;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {220, 20, 60}, intArray0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.CORNSILK;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 248, 220}, intArray0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.CORNFLOWER_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {100, 149, 237}, intArray0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.CORAL;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 127, 80}, intArray0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.CHOCOLATE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {210, 105, 30}, intArray0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.CHARTREUSE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {127, 255, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.CADET_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {95, 158, 160}, intArray0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.BURLY_WOOD;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {222, 184, 135}, intArray0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.BROWN;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {165, 42, 42}, intArray0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.BLUE_VIOLET;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {138, 43, 226}, intArray0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 0, 255}, intArray0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.BLANCHED_ALMOND;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 235, 205}, intArray0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.BLACK;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.BISQUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {255, 228, 196}, intArray0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.BEIGE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {245, 245, 220}, intArray0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.AZURE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {240, 255, 255}, intArray0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.AQUAMARINE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {127, 255, 212}, intArray0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.AQUA;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {0, 255, 255}, intArray0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.ANTIQUE_WHITE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {250, 235, 215}, intArray0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ColorSet colorSet0 = ColorSet.ALICE_BLUE;
      int[] intArray0 = ColorSet.getRGB(colorSet0);
      assertArrayEquals(new int[] {240, 248, 255}, intArray0);
  }
}
