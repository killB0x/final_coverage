/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:42:59 GMT 2022
 */

package casmi.tween.equations;

import org.junit.Test;
import static org.junit.Assert.*;
import casmi.tween.equations.ExponentialIn;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExponentialIn_ESTest extends ExponentialIn_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ExponentialIn exponentialIn0 = new ExponentialIn();
      double double0 = exponentialIn0.compute(0.0, (-1534.1318989022955), 1.0, (-2170.045500871));
      assertEquals((-1534.1318989022955), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExponentialIn exponentialIn0 = new ExponentialIn();
      double double0 = exponentialIn0.compute(0.0, 0.0, (-438.69329609183), 246.55119583547);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExponentialIn exponentialIn0 = new ExponentialIn();
      double double0 = exponentialIn0.compute(1.0, 1.0, (-439.69329609183), 1855.88941865);
      assertEquals(0.5690053165552171, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ExponentialIn exponentialIn0 = new ExponentialIn();
      double double0 = exponentialIn0.compute((-439.69329609183), 0.0, 1.0, (-439.69329609183));
      assertEquals(1.0, double0, 0.01);
  }
}
