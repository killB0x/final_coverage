/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:42:21 GMT 2022
 */

package casmi.tween.equations;

import org.junit.Test;
import static org.junit.Assert.*;
import casmi.tween.equations.QuarticInOut;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuarticInOut_ESTest extends QuarticInOut_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QuarticInOut quarticInOut0 = new QuarticInOut();
      double double0 = quarticInOut0.compute((-1.0), 2.0, 1.0, 2.0);
      assertEquals(2.5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QuarticInOut quarticInOut0 = new QuarticInOut();
      double double0 = quarticInOut0.compute(1.0, (-1.0), (-1.0), 2.0);
      assertEquals((-1.5), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QuarticInOut quarticInOut0 = new QuarticInOut();
      double double0 = quarticInOut0.compute((-993.8700609137), 0.0, 0.0, (-993.8700609137));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QuarticInOut quarticInOut0 = new QuarticInOut();
      double double0 = quarticInOut0.compute(1.0, (-2844.11094095), (-1.0), 0.0);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QuarticInOut quarticInOut0 = new QuarticInOut();
      double double0 = quarticInOut0.compute((-1.5), (-993.8700609137), (-2239.175118717), 0.0);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }
}
