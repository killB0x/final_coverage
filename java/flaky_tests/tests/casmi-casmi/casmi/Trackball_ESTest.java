/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:21:18 GMT 2022
 */

package casmi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import casmi.Applet;
import casmi.Trackball;
import casmi.graphics.canvas.Canvas;
import casmi.graphics.object.Camera;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Trackball_ESTest extends Trackball_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Trackball trackball0 = new Trackball(67, 61);
      Canvas canvas0 = new Canvas();
      trackball0.rotate(canvas0, (-2016.6721), Double.POSITIVE_INFINITY, 161.57452314833625);
      assertEquals(0.0, canvas0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Trackball trackball0 = new Trackball(2249, 2249);
      Canvas canvas0 = new Canvas();
      trackball0.setSize(6913, 0);
      trackball0.update(851, 87, 14, 1299);
      trackball0.rotate(canvas0);
      assertEquals(0, canvas0.getSize());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Applet applet0 = mock(Applet.class, new ViolatedAssumptionAnswer());
      doReturn(150).when(applet0).getHeight();
      doReturn(150).when(applet0).getWidth();
      Trackball trackball0 = new Trackball(applet0);
      trackball0.update(16, 16, 16, 182);
      trackball0.update(95, 2495, 4, 14);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Trackball trackball0 = new Trackball(190, 190);
      Canvas canvas0 = new Canvas();
      trackball0.update(0, 121, 2363, (-291));
      trackball0.rotate(canvas0, (double) 2363, (double) 121, (double) (-291));
      assertEquals(0, canvas0.getSize());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Trackball trackball0 = new Trackball(195, 195);
      trackball0.update(195, 195, 195, (-2147481298));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Trackball trackball0 = null;
      try {
        trackball0 = new Trackball(629, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width and height must be more than zero.
         //
         verifyException("casmi.Trackball", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Trackball trackball0 = null;
      try {
        trackball0 = new Trackball((-271), (-271));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width and height must be more than zero.
         //
         verifyException("casmi.Trackball", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Trackball trackball0 = new Trackball(31, 31);
      // Undeclared exception!
      try { 
        trackball0.rotate((Canvas) null, (double) 31, (-780.115720625), (double) 31);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.Trackball", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Trackball trackball0 = new Trackball(165, 165);
      // Undeclared exception!
      try { 
        trackball0.rotate((Canvas) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.Trackball", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Trackball trackball0 = null;
      try {
        trackball0 = new Trackball((Applet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.Trackball", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Trackball trackball0 = new Trackball(937, 937);
      Trackball.Quaternion trackball_Quaternion0 = trackball0.new Quaternion(937, 937, 3.0, 0.0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Trackball trackball0 = new Trackball(165, 165);
      Trackball.Quaternion trackball_Quaternion0 = trackball0.new Quaternion();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Trackball trackball0 = new Trackball(906, 498);
      trackball0.update(498, 122, 122, 906);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Trackball trackball0 = new Trackball(165, 165);
      trackball0.update(165, 165, 165, 165);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Trackball trackball0 = null;
      try {
        trackball0 = new Trackball(102, (-310));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width and height must be more than zero.
         //
         verifyException("casmi.Trackball", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Applet applet0 = mock(Applet.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(applet0).getHeight();
      doReturn(0).when(applet0).getWidth();
      Trackball trackball0 = null;
      try {
        trackball0 = new Trackball(applet0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Width and height must be more than zero.
         //
         verifyException("casmi.Trackball", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Applet applet0 = mock(Applet.class, new ViolatedAssumptionAnswer());
      doReturn(150).when(applet0).getHeight();
      doReturn(150).when(applet0).getWidth();
      Trackball trackball0 = new Trackball(applet0);
      Camera camera0 = new Camera();
      trackball0.setCamera(camera0);
      trackball0.update(16, 16, 16, 182);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Trackball trackball0 = new Trackball(2249, 2249);
      double[] doubleArray0 = trackball0.getRotationMatrix();
      assertEquals(16, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Trackball trackball0 = new Trackball(2249, 2249);
      trackball0.reset();
  }
}
