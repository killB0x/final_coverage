/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:14:39 GMT 2022
 */

package casmi.matrix;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import casmi.matrix.Matrix;
import casmi.matrix.Matrix2D;
import casmi.matrix.Matrix3D;
import casmi.matrix.Vector3D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Matrix2D_ESTest extends Matrix2D_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      Matrix2D matrix2D1 = new Matrix2D((-159.951308658), 1917.0, 1917.0, 2188.81418409062, 0.0, 488.6938086);
      matrix2D1.print();
      assertEquals((-159.951308658), matrix2D1.m00, 0.01);
      assertEquals((-4195956.790901719), matrix2D1.determinant(), 0.01);
      assertEquals(488.6938086, matrix2D1.m12, 0.01);
      assertEquals(1917.0, matrix2D1.m02, 0.01);
      
      matrix2D0.print();
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertEquals(1.0, matrix2D0.determinant(), 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D((-404.387), (-1804.0095237), 0.0, (-1259.084720657851), 3.141592653589793, 3353.6);
      matrix2D0.print();
      assertEquals((-2272671.2464403245), matrix2D0.determinant(), 0.01);
      assertEquals(3353.6, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m02, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(1.0, 338.7283990867477, 1.0, (-1484.26465), (-832.7), 1.0);
      boolean boolean0 = matrix2D0.isWarped();
      assertTrue(boolean0);
      assertEquals(501929.8887155519, matrix2D0.determinant(), 0.01);
      assertEquals(1.0, matrix2D0.m02, 0.01);
      assertEquals(1.0, matrix2D0.m12, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      assertEquals(0.0, matrix2D0.m01, 0.01);
      
      matrix2D0.m01 = (-2627.0405494025254);
      boolean boolean0 = matrix2D0.isWarped();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(0.0, (-1.0), 180.0, 0.0, (-287.1982360973284), (-1.0));
      matrix2D0.set(1145.65322, 2547.0, 1743.788596, (-287.1982360973284), 2246.5488, 0.0, 2732.9, 2246.5488, 0.0, 180.0, 0.0, 0.0, 0.0, (-1492.015634762), 1145.65322, 0.0);
      matrix2D0.isWarped();
      assertEquals(2732.9, matrix2D0.m12, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      assertEquals(0.0, matrix2D0.m12, 0.01);
      
      matrix2D0.m12 = 0.9954806279797821;
      boolean boolean0 = matrix2D0.isIdentity();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.scale(1.0, 566.0);
      boolean boolean0 = matrix2D0.isIdentity();
      assertEquals(566.0, matrix2D0.m11, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      assertEquals(0.0, matrix2D0.m10, 0.01);
      
      matrix2D0.m10 = (-1.0);
      boolean boolean0 = matrix2D0.isIdentity();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(1.0, 3.141592653589793, 0.0, 1.0, 0.0, 0.0);
      boolean boolean0 = matrix2D0.isIdentity();
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(1.0, matrix2D0.m00, 0.01);
      assertEquals(0.0, matrix2D0.m11, 0.01);
      assertEquals((-3.141592653589793), matrix2D0.determinant(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, matrix2D0.m02, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.apply((-3024.0), (-3024.0), (-3024.0), (-3024.0), (-3024.0), (-3024.0));
      matrix2D0.rotate(2246.5488);
      matrix2D0.isIdentity();
      assertEquals((-3024.0), matrix2D0.m12, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.shearY((-736.4394));
      matrix2D0.preApply(3.141592653589793, 488.6938086, (-3518.8), 4761.19225956, (-1.0), 0.0);
      boolean boolean0 = matrix2D0.invert();
      assertEquals((-0.9984876878505013), matrix2D0.m02, 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = matrix2D0.invert();
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.determinant(), 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-3024.0);
      double[] doubleArray1 = matrix2D0.get(doubleArray0);
      double[] doubleArray2 = matrix2D0.mult(doubleArray0, doubleArray1);
      assertArrayEquals(new double[] {(-3024.0), 0.0}, doubleArray2, 0.01);
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0, 1.0, 0.0}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.apply((-3024.0), (-3024.0), (-3024.0), (-3024.0), (-3024.0), (-3024.0));
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (-3024.0);
      double[] doubleArray1 = matrix2D0.get(doubleArray0);
      matrix2D0.mult(doubleArray0, doubleArray1);
      assertEquals((-3024.0), matrix2D0.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 256.20484654;
      // Undeclared exception!
      try { 
        matrix2D0.mult(doubleArray0, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(0.0, 0.0, 1577.7, (-1.0), 0.0, (-1.0));
      matrix2D0.set(1.0, 620.95868134, 1577.7, (-164.69451816937047), 4023.693377610055, (-1008.5025843961499), (-1894.782280803), 25.83523, (-164.69451816937047), 851.716034, (-221.1473), (-1894.782280803), 1.0, 180.0, 0.0, (-1975.81));
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (-1894.782280803);
      matrix2D0.mult(doubleArray0, doubleArray0);
      assertEquals((-1894.782280803), matrix2D0.m12, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(0.0, 0.0, 1577.7, (-1.0), 0.0, (-1.0));
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1577.7;
      matrix2D0.mult(doubleArray0, doubleArray0);
      assertEquals(0.0, matrix2D0.m11, 0.01);
      assertEquals(0.0, matrix2D0.m00, 0.01);
      assertArrayEquals(new double[] {1577.7, (-1578.7)}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.apply((-3024.0), (-3024.0), (-3024.0), (-3024.0), (-3024.0), (-3024.0));
      matrix2D0.preApply(502.89, 489.376077, 4441.297789900887, 4441.297789900887, 502.89, (-2.9908495753320567E7));
      assertEquals((-1.4951223876660284E7), matrix2D0.m11, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.preApply(3.141592653589793, 488.6938086, (-3518.8), 4761.19225956, (-1.0), 0.0);
      matrix2D0.apply(180.0, 180.0, 394.31873, 1444.6619784287493, 0.0, 1887.449234689);
      assertEquals(1875539.8358408408, matrix2D0.m12, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(0.0, (-1.0), 180.0, 0.0, 0.0, (-1.0));
      matrix2D0.apply((-6338.915816014251), (-3504267.30005), -0.0, (-2221.9), 171.9510707, 0.0);
      assertEquals(-0.0, matrix2D0.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(0.0, 2223.107, 2223.107, 1.0, (-1502.6938), (-829.00106657));
      matrix2D0.translate(0.0, 0.0);
      assertEquals(2223.107, matrix2D0.m02, 0.01);
      assertEquals((-2223.107), matrix2D0.determinant(), 0.01);
      assertEquals((-1502.6938), matrix2D0.m11, 0.01);
      assertEquals((-829.00106657), matrix2D0.m12, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(0.0, (-1.0), 180.0, 0.0, 0.0, (-1.0));
      matrix2D0.translate(0.0, (-1376.39415));
      assertEquals(1556.39415, matrix2D0.m02, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      double[] doubleArray0 = new double[7];
      double[] doubleArray1 = matrix2D0.get(doubleArray0);
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0, 1.0, 0.0}, doubleArray1, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.apply(matrix2D0);
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(1.0, matrix2D0.determinant(), 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      double[] doubleArray0 = new double[8];
      matrix2D0.set(doubleArray0);
      assertEquals(0.0, matrix2D0.m01, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      double double0 = matrix2D0.multY((-325.1636395), 0.0);
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(1.0, matrix2D0.determinant(), 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      double double0 = matrix2D0.multY((-3090.8), (-14.742));
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(1.0, matrix2D0.m00, 0.01);
      assertEquals((-14.742), double0, 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      double double0 = matrix2D0.multX(0.0, 0.0);
      assertEquals(1.0, matrix2D0.determinant(), 0.01);
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(3353.6, 180.0, 3353.6, 0.0, 2543.6228224209235, 3353.6);
      double double0 = matrix2D0.multX(1.0, 1.0);
      assertEquals(6887.2, double0, 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertEquals(8530293.49727081, matrix2D0.determinant(), 0.01);
      assertEquals(3353.6, matrix2D0.m12, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      Vector3D vector3D0 = new Vector3D(0.0, 186.0, 0.0);
      Vector3D vector3D1 = matrix2D0.mult(vector3D0);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(186.0, vector3D1.getY(), 0.01);
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertEquals(1.0, matrix2D0.determinant(), 0.01);
      assertEquals(34596.0, vector3D1.lengthSquared(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(1.0, 1.0, 1420604.420804046, 1.0, 2258.107972996035, 0.0);
      Vector3D vector3D0 = new Vector3D();
      Vector3D vector3D1 = matrix2D0.mult(vector3D0);
      assertEquals(2.0181169204079993E12, vector3D1.lengthSquared(), 0.01);
      assertEquals(1420604.420804046, vector3D1.getX(), 0.01);
      assertEquals(2257.107972996035, matrix2D0.determinant(), 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D((-404.387), (-1804.0095237), 0.0, (-1259.084720657851), 3.141592653589793, 3353.6);
      Vector3D vector3D0 = new Vector3D(3353.6, 3353.6, 3.141592653589793);
      Vector3D vector3D1 = matrix2D0.mult(vector3D0);
      assertEquals(7.256212263284773E13, vector3D1.lengthSquared(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.set(203.20767646, 203.20767646, 203.20767646, 203.20767646, 203.20767646, 203.20767646, 203.20767646, 203.20767646, 1.0, 203.20767646, 203.20767646, 203.20767646, 203.20767646, (-951749.4599431837), 203.20767646, 203.20767646);
      matrix2D0.get();
      assertEquals(203.20767646, matrix2D0.m11, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.shearY((-736.4394));
      matrix2D0.get();
      assertEquals((-3.6983327510939654), matrix2D0.m11, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(2.0, 180.0, 0.0, (-1998.1), 1577.7, 3078.82716);
      double double0 = matrix2D0.determinant();
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(362813.4, double0, 0.01);
      assertEquals(3078.82716, matrix2D0.m12, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(0.0, 3406.7, 1.0, 488.6938086, (-3745.6892367467676), 1.0);
      double double0 = matrix2D0.determinant();
      assertEquals(0.0, matrix2D0.m00, 0.01);
      assertEquals(1.0, matrix2D0.m12, 0.01);
      assertEquals(1.0, matrix2D0.m02, 0.01);
      assertEquals((-1664833.19775762), double0, 0.01);
      assertEquals((-3745.6892367467676), matrix2D0.m11, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        matrix2D0.set(doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      // Undeclared exception!
      try { 
        matrix2D0.preApply((Matrix2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      // Undeclared exception!
      try { 
        matrix2D0.mult((Vector3D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Matrix3D matrix3D0 = new Matrix3D();
      Matrix2D matrix2D0 = null;
      try {
        matrix2D0 = new Matrix2D(matrix3D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Matrix2D.set() only accepts Matrix2D objects.
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
      matrix2D0.set((Matrix) matrix2D0);
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertEquals(0.0, matrix2D0.determinant(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
      matrix2D0.scale(0.0, 0.0);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertEquals(0.0, matrix2D0.determinant(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(0.0, 0.0, 0.0, 0.0, 3353.6, 180.0);
      double double0 = matrix2D0.determinant();
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertEquals(180.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(3353.6, matrix2D0.m11, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m02, 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(0.0, 2223.107, 2223.107, 1.0, (-1502.6938), (-829.00106657));
      matrix2D0.set((-156.36758322259), 1515.1063, 0.0, (-156.36758322259), (-1376.39415), 0.0);
      assertEquals(1515.1063, matrix2D0.m01, 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      Matrix3D matrix3D0 = Matrix3D.getRotateZMatrix(0.0);
      // Undeclared exception!
      try { 
        matrix2D0.apply(matrix3D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot use apply(Matrix3D) on a Matrix2D.
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.reset();
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(1.0, matrix2D0.determinant(), 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      // Undeclared exception!
      try { 
        matrix2D0.apply((Matrix2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(1.0, 0.0, 1.0, 0.0, 0.0, 1.0);
      matrix2D0.print();
      assertEquals(1.0, matrix2D0.m02, 0.01);
      assertEquals(1.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(1.0, matrix2D0.m00, 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(1.0, 1.0, 1420604.420804046, 1.0, 2258.107972996035, 0.0);
      boolean boolean0 = matrix2D0.isWarped();
      assertEquals(2257.107972996035, matrix2D0.determinant(), 0.01);
      assertEquals(1420604.420804046, matrix2D0.m02, 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, matrix2D0.m12, 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(1.0, 1.0, 1420604.420804046, 0.0, 2258.107972996035, 0.0);
      boolean boolean0 = matrix2D0.isWarped();
      assertEquals(1.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(1420604.420804046, matrix2D0.m02, 0.01);
      assertTrue(boolean0);
      assertEquals(2258.107972996035, matrix2D0.determinant(), 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      boolean boolean0 = matrix2D0.isWarped();
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = matrix2D0.isWarped();
      assertEquals(0.0, matrix2D0.determinant(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      assertEquals(0.0, matrix2D0.m12, 0.01);
      
      matrix2D0.m12 = (-1754.07235);
      boolean boolean0 = matrix2D0.isIdentity();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      assertEquals(1.0, matrix2D0.m11, 0.01);
      
      matrix2D0.m11 = 0.0;
      boolean boolean0 = matrix2D0.isIdentity();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      assertEquals(0.0, matrix2D0.m10, 0.01);
      
      matrix2D0.m10 = 1.0;
      boolean boolean0 = matrix2D0.isIdentity();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      assertEquals(0.0, matrix2D0.m02, 0.01);
      
      matrix2D0.m02 = (-3103.066595698);
      boolean boolean0 = matrix2D0.isIdentity();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      assertEquals(0.0, matrix2D0.m01, 0.01);
      
      matrix2D0.m01 = (-876.52708302);
      boolean boolean0 = matrix2D0.isIdentity();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      boolean boolean0 = matrix2D0.isIdentity();
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertTrue(boolean0);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.apply((-3024.0), (-3024.0), (-3024.0), (-3024.0), (-3024.0), (-3024.0));
      matrix2D0.isIdentity();
      assertEquals((-3024.0), matrix2D0.m12, 0.01);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.print();
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(1.0, matrix2D0.m11, 0.01);
      
      Matrix2D matrix2D1 = new Matrix2D(1.0, 3023.0796548, 1.0, 0.0, 1.0, 1.0);
      matrix2D1.print();
      assertEquals(3023.0796548, matrix2D1.m01, 0.01);
      assertEquals(0.0, matrix2D1.m10, 0.01);
      assertEquals(1.0, matrix2D1.determinant(), 0.01);
      assertEquals(1.0, matrix2D1.m02, 0.01);
      assertEquals(1.0, matrix2D1.m12, 0.01);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.apply(1.0, 4.9E-324, 1.0, 4.9E-324, 4.9E-324, 1.0);
      boolean boolean0 = matrix2D0.invert();
      assertEquals(4.9E-324, matrix2D0.m10, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      // Undeclared exception!
      try { 
        matrix2D0.mult((double[]) null, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.apply((Matrix) null);
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(1.0, matrix2D0.determinant(), 0.01);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      // Undeclared exception!
      try { 
        matrix2D0.set((Matrix) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Matrix2D.set() only accepts Matrix2D objects.
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      double[] doubleArray0 = new double[2];
      double[] doubleArray1 = matrix2D0.get(doubleArray0);
      double[] doubleArray2 = matrix2D0.get(doubleArray1);
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0, 1.0, 0.0}, doubleArray2, 0.01);
      assertSame(doubleArray2, doubleArray1);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      double[] doubleArray0 = matrix2D0.get((double[]) null);
      assertArrayEquals(new double[] {1.0, 0.0, 0.0, 0.0, 1.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      // Undeclared exception!
      try { 
        matrix2D0.rotateX(1.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot use rotateX() on a Matrix2D.
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      Matrix2D matrix2D1 = new Matrix2D(matrix2D0);
      matrix2D1.m11 = (-492.2646);
      boolean boolean0 = matrix2D1.isWarped();
      assertEquals((-492.2646), matrix2D1.determinant(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(1.0, 2223.107, (-5.600423653171199E10), 1.0, (-1502.6938), (-829.00106657));
      double double0 = matrix2D0.multY(1173.483388, (-1376.39415));
      assertEquals((-3725.8008), matrix2D0.determinant(), 0.01);
      assertEquals((-5.600423653171199E10), matrix2D0.m02, 0.01);
      assertEquals(2068643.4378827002, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      Vector3D vector3D0 = new Vector3D();
      Vector3D vector3D1 = matrix2D0.mult(vector3D0);
      assertEquals(0.0, vector3D1.lengthSquared(), 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(1.0, matrix2D0.determinant(), 0.01);
      assertNotSame(vector3D1, vector3D0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.apply((Matrix) matrix2D0);
      assertEquals(1.0, matrix2D0.determinant(), 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m02, 0.01);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      Matrix2D matrix2D1 = matrix2D0.get();
      assertEquals(0.0, matrix2D1.m10, 0.01);
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertNotSame(matrix2D1, matrix2D0);
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertEquals(1.0, matrix2D0.determinant(), 0.01);
      assertEquals(0.0, matrix2D1.m02, 0.01);
      assertEquals(0.0, matrix2D1.m01, 0.01);
      assertEquals(0.0, matrix2D1.m12, 0.01);
      assertEquals(1.0, matrix2D1.determinant(), 0.01);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(1.0, 2223.107, (-5.600423653171199E10), 1.0, (-1502.6938), (-829.00106657));
      matrix2D0.transpose();
      assertEquals((-3725.8008), matrix2D0.determinant(), 0.01);
      assertEquals((-5.600423653171199E10), matrix2D0.m02, 0.01);
      assertEquals((-829.00106657), matrix2D0.m12, 0.01);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      // Undeclared exception!
      try { 
        matrix2D0.rotateY(0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot use rotateY() on a Matrix2D.
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      // Undeclared exception!
      try { 
        matrix2D0.translate((-1.0), (-1.0), -0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot use translate(x, y, z) on a Matrix2D.
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.preApply(matrix2D0);
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(1.0, matrix2D0.determinant(), 0.01);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      Matrix3D matrix3D0 = Matrix3D.getRotateYMatrix(898.4816188);
      // Undeclared exception!
      try { 
        matrix2D0.preApply(matrix3D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot use preApply(Matrix3D) on a Matrix2D.
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.shearY(1.5574077246549023);
      matrix2D0.isIdentity();
      assertEquals(1.0, matrix2D0.m02, 0.01);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      double double0 = matrix2D0.multX((-2514.373905054), 0.0);
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertEquals(1.0, matrix2D0.m11, 0.01);
      assertEquals((-2514.373905054), double0, 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m02, 0.01);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      // Undeclared exception!
      try { 
        matrix2D0.preApply((-1200.3086641), (-1200.3086641), (-1200.3086641), (-1200.3086641), (-1200.3086641), (-1200.3086641), (-1200.3086641), (-1200.3086641), (-1200.3086641), 0.0, 0.0, (-1200.3086641), (-1200.3086641), 4.9E-324, 0.0, (-1200.3086641));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot use this version of preApply() on a Matrix2D.
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.scale((-453.45239182534806));
      boolean boolean0 = matrix2D0.invert();
      assertEquals((-0.002205303176314837), matrix2D0.m11, 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.translate(1.0, 1.0);
      assertEquals(1.0, matrix2D0.m02, 0.01);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      // Undeclared exception!
      try { 
        matrix2D0.set((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.shearX(0.0);
      assertEquals(1.0, matrix2D0.m02, 0.01);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      matrix2D0.rotateZ((-1081.0));
      assertEquals(0.28798991956502257, matrix2D0.m01, 0.01);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      Matrix3D matrix3D0 = Matrix3D.getRotateXMatrix(0.0);
      // Undeclared exception!
      try { 
        matrix2D0.apply((Matrix) matrix3D0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot use apply(Matrix3D) on a Matrix2D.
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      // Undeclared exception!
      try { 
        matrix2D0.rotate(351229.8125, 351229.8125, 351229.8125, 351229.8125);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot use this version of rotate() on a Matrix2D.
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      // Undeclared exception!
      try { 
        matrix2D0.apply((-1.0), (-1.0), (-1.0), (-1.0), (-1.0), (-1.0), 0.0, (-1.0), 0.0, (-1.0), 0.0, (-1.0), (-1.0), (-1.0), 0.0, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot use this version of apply() on a Matrix2D.
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
      matrix2D0.set((Matrix3D) null);
      assertEquals(0.0, matrix2D0.m02, 0.01);
      assertEquals(0.0, matrix2D0.m01, 0.01);
      assertEquals(0.0, matrix2D0.m12, 0.01);
      assertEquals(0.0, matrix2D0.m10, 0.01);
      assertEquals(0.0, matrix2D0.determinant(), 0.01);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Matrix2D matrix2D0 = new Matrix2D();
      // Undeclared exception!
      try { 
        matrix2D0.scale(0.0, 0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot use this version of scale() on a Matrix2D.
         //
         verifyException("casmi.matrix.Matrix2D", e);
      }
  }
}
