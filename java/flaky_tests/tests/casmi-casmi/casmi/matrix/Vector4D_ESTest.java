/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:32:05 GMT 2022
 */

package casmi.matrix;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import casmi.matrix.Vector2D;
import casmi.matrix.Vector3D;
import casmi.matrix.Vector4D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Vector4D_ESTest extends Vector4D_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(258.5659411193086, 258.5659411193086, 258.5659411193086, 0.0);
      Vector2D vector2D0 = new Vector2D();
      Vector4D vector4D1 = new Vector4D(vector2D0, 258.5659411193086, 0.0);
      vector4D0.add(vector4D1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      Vector4D vector4D0 = new Vector4D(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      Vector4D vector4D0 = new Vector4D(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      Vector4D vector4D0 = new Vector4D(0.0, (-1176.37502), (-1176.37502), 1.0);
      vector4D0.set(doubleArray0);
      vector4D0.sum();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      Vector4D vector4D0 = new Vector4D(doubleArray0);
      Vector4D vector4D1 = new Vector4D(0.0, (-3581.283418), (-2226.4241093141604), 3521.8703249119);
      vector4D0.set(vector4D1);
      vector4D0.sum();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(846.461084953697);
      Vector2D vector2D0 = new Vector2D(846.461084953697, 2926.343854568);
      Vector4D vector4D1 = new Vector4D(vector2D0, (-6452.68766638171), 0.0);
      vector4D0.sub(vector4D1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Vector2D vector2D0 = new Vector2D(365.696020019834, (-249.049051));
      Vector4D vector4D0 = new Vector4D(vector2D0, (-1521.8), (-249.049051));
      Vector4D vector4D1 = new Vector4D((-249.049051), (-1521.8), (-1.0), (-1.0));
      vector4D0.sub(vector4D1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(846.461084953697);
      vector4D0.sub(vector4D0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      Vector4D vector4D1 = new Vector4D((-2499.4));
      vector4D0.par(vector4D1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Vector2D vector2D0 = new Vector2D();
      Vector4D vector4D0 = new Vector4D(vector2D0, (-563.89), (-563.89));
      Vector4D vector4D1 = new Vector4D();
      vector4D1.par(vector4D0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector2D vector2D0 = new Vector2D(365.696020019834, (-249.049051));
      Vector4D vector4D0 = new Vector4D(vector2D0, (-1521.8), (-249.049051));
      Vector4D vector4D1 = vector4D0.par(0.0);
      Vector4D vector4D2 = vector4D0.sub(vector4D1);
      vector4D2.par(vector4D0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector2D vector2D0 = new Vector2D(365.696020019834, (-249.049051));
      vector2D0.set((-249.049051), (-249.049051));
      Vector4D vector4D0 = new Vector4D(vector2D0, (-1521.8), (-249.049051));
      vector4D0.par(0.0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      vector4D0.par((-2330.054895558));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      vector4D0.set((-2506.7343529409), 6939692.762298033, -0.0, 6939692.762298033);
      vector4D0.par((-1.0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Vector3D vector3D0 = new Vector3D();
      Vector4D vector4D0 = new Vector4D(vector3D0, (-1.0));
      vector4D0.set(0.0, 0.0, 1.0, (-1.0));
      vector4D0.normalized();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Vector2D vector2D0 = new Vector2D(365.696020019834, (-249.049051));
      Vector4D vector4D0 = new Vector4D(vector2D0, (-1521.8), (-249.049051));
      vector4D0.normalized();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      vector4D0.normalized();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      vector4D0.norm();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      Vector4D vector4D1 = vector4D0.add((-1.0));
      double[] doubleArray0 = new double[9];
      doubleArray0[1] = 3988.557;
      vector4D0.set(doubleArray0);
      vector4D0.mult(vector4D1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      Vector4D vector4D1 = vector4D0.add((-1.0));
      vector4D1.set(3988.557, (-1914.308271), 0.0, (-3023.78125));
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-949.5325210000001);
      vector4D0.set(doubleArray0);
      vector4D0.mult(vector4D1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      Vector4D vector4D0 = new Vector4D(doubleArray0);
      Vector4D vector4D1 = vector4D0.par(vector4D0);
      vector4D1.mult(vector4D1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      Vector4D vector4D0 = new Vector4D(doubleArray0);
      Vector4D vector4D1 = vector4D0.add((-1512.9795071095));
      Vector2D vector2D0 = new Vector2D((-1.0), 0.0);
      Vector4D vector4D2 = new Vector4D(vector2D0, 322.0, 322.0);
      vector4D2.mult(vector4D1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Vector3D vector3D0 = new Vector3D(0.0, (-692.912340884614));
      Vector4D vector4D0 = new Vector4D(vector3D0, (-80.836077668));
      vector4D0.mult((-303.81643445));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(1431.64);
      Vector4D vector4D1 = vector4D0.mult((-4416.2512004478));
      vector4D1.mult((-4416.2512004478));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Vector3D vector3D0 = new Vector3D(0.0, (-692.912340884614));
      Vector4D vector4D0 = new Vector4D(vector3D0, (-80.836077668));
      double double0 = vector4D0.lengthSquared();
      assertEquals(0.0, vector4D0.getZ(), 0.01);
      assertEquals((-773.748418552614), vector4D0.sum(), 0.01);
      assertEquals(0.0, vector4D0.getX(), 0.01);
      assertEquals(486661.98360294243, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      double double0 = vector4D0.getZ();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, vector4D0.getW(), 0.01);
      assertEquals(0.0, vector4D0.getY(), 0.01);
      assertEquals(0.0, vector4D0.getX(), 0.01);
      assertEquals(0.0, vector4D0.lengthSquared(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D((-472.0));
      double double0 = vector4D0.getZ();
      assertEquals((-472.0), double0, 0.01);
      assertEquals((-1888.0), vector4D0.sum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(0.0);
      double double0 = vector4D0.getY();
      assertEquals(0.0, vector4D0.getX(), 0.01);
      assertEquals(0.0, vector4D0.getW(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Vector2D vector2D0 = new Vector2D();
      Vector4D vector4D0 = new Vector4D(vector2D0, (-563.89), (-563.89));
      vector4D0.set(1040.0, (-563.89));
      double double0 = vector4D0.getY();
      assertEquals(1040.0, vector4D0.getX(), 0.01);
      assertEquals((-563.89), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(1236.046, 1236.046, 0.0, 1.0);
      double double0 = vector4D0.getX();
      assertEquals(1236.046, double0, 0.01);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
      assertEquals(2473.092, vector4D0.sum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D((-725.4249752997), (-183.41096), (-183.41096), 0.0);
      double double0 = vector4D0.getX();
      assertEquals((-1092.2468952996999), vector4D0.sum(), 0.01);
      assertEquals(0.0, vector4D0.getW(), 0.01);
      assertEquals((-725.4249752997), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      Vector4D vector4D0 = new Vector4D(doubleArray0);
      Vector4D vector4D1 = vector4D0.add(1210.3762219566315);
      double double0 = vector4D1.getW();
      assertEquals(4841.504887826526, vector4D1.sum(), 0.01);
      assertEquals(1210.3762219566315, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(980.2543210764891);
      vector4D0.set((-2232.876), 0.0, 0.0, 0.0);
      Vector4D vector4D1 = vector4D0.normalized();
      vector4D1.set(989.0706, 0.0, 980.2543210764891, 1.0);
      Vector4D vector4D2 = vector4D0.sub(vector4D1);
      double double0 = vector4D2.getW();
      assertEquals(980.2543210764891, vector4D1.getZ(), 0.01);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      double[] doubleArray0 = new double[6];
      doubleArray0[1] = (-2374.9707541182725);
      Vector4D vector4D1 = new Vector4D(doubleArray0);
      double double0 = Vector4D.getDistance(vector4D0, vector4D1);
      assertEquals(0.0, vector4D0.getW(), 0.01);
      assertEquals(2374.9707541182725, double0, 0.01);
      assertEquals(0.0, vector4D0.getX(), 0.01);
      assertEquals(0.0, vector4D0.getY(), 0.01);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Vector2D vector2D0 = new Vector2D();
      Vector4D vector4D0 = new Vector4D(vector2D0, 0.0, 1.0);
      double double0 = Vector4D.dotProduct(vector4D0, vector4D0);
      assertEquals(1.0, double0, 0.01);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
      assertEquals(0.0, vector4D0.getY(), 0.01);
      assertEquals(1.0, vector4D0.getW(), 0.01);
      assertEquals(0.0, vector4D0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(0.0);
      Vector4D vector4D1 = new Vector4D((-470.525818198));
      vector4D0.set((-1.0), 0.0, 3072.0298);
      double double0 = Vector4D.dotProduct(vector4D1, vector4D0);
      assertEquals(9437368.092088038, vector4D0.lengthSquared(), 0.01);
      assertEquals((-1444998.8093554403), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(258.5659411193086, 258.5659411193086, 258.5659411193086, 0.0);
      Vector4D vector4D1 = vector4D0.add(vector4D0);
      assertEquals(775.6978233579258, vector4D0.sum(), 0.01);
      assertEquals(802276.1508829652, vector4D1.lengthSquared(), 0.01);
      assertEquals(0.0, vector4D0.getW(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D((-1.0));
      Vector4D vector4D1 = vector4D0.add(vector4D0);
      assertEquals((-4.0), vector4D0.sum(), 0.01);
      assertEquals((-8.0), vector4D1.sum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      Vector4D vector4D1 = vector4D0.add(vector4D0);
      assertNotSame(vector4D1, vector4D0);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
      assertEquals(0.0, vector4D1.getY(), 0.01);
      assertEquals(0.0, vector4D1.getX(), 0.01);
      assertEquals(0.0, vector4D1.getW(), 0.01);
      assertEquals(0.0, vector4D1.sum(), 0.01);
      assertEquals(0.0, vector4D0.getY(), 0.01);
      assertEquals(0.0, vector4D1.getZ(), 0.01);
      assertEquals(0.0, vector4D0.getX(), 0.01);
      assertEquals(0.0, vector4D0.getW(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(0.0, 0.0, 0.0, 0.0);
      vector4D0.setW(1736.506);
      vector4D0.add(vector4D0);
      assertEquals(1736.506, vector4D0.getW(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      Vector4D vector4D0 = new Vector4D(doubleArray0);
      Vector4D vector4D1 = vector4D0.add(0.0);
      assertEquals(0.0, vector4D1.getZ(), 0.01);
      assertEquals(0.0, vector4D1.getW(), 0.01);
      assertNotSame(vector4D1, vector4D0);
      assertEquals(0.0, vector4D1.getX(), 0.01);
      assertEquals(0.0, vector4D1.norm(), 0.01);
      assertEquals(0.0, vector4D1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      // Undeclared exception!
      try { 
        vector4D0.set((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Vector4D", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      // Undeclared exception!
      try { 
        vector4D0.par((Vector4D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Vector4D", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      // Undeclared exception!
      try { 
        vector4D0.mult((Vector4D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Vector4D", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        Vector4D.getDistance((Vector4D) null, (Vector4D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Vector4D", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      // Undeclared exception!
      try { 
        Vector4D.dotProduct((Vector4D) null, (Vector4D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Vector4D", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      // Undeclared exception!
      try { 
        vector4D0.add((Vector4D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Vector4D", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Vector4D vector4D0 = null;
      try {
        vector4D0 = new Vector4D((Vector4D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Vector4D", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Vector4D vector4D0 = null;
      try {
        vector4D0 = new Vector4D((Vector3D) null, (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Vector4D", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Vector4D vector4D0 = null;
      try {
        vector4D0 = new Vector4D((Vector2D) null, 1926.33767, 1926.33767);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Vector4D", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      double[] doubleArray0 = new double[0];
      vector4D0.set(doubleArray0);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
      assertEquals(0.0, vector4D0.getW(), 0.01);
      assertEquals(0.0, vector4D0.getX(), 0.01);
      assertEquals(0.0, vector4D0.getY(), 0.01);
      assertEquals(0.0, vector4D0.lengthSquared(), 0.01);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(0.0, 0.0, 0.0, 0.0);
      vector4D0.setZ(0.0);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
      assertEquals(0.0, vector4D0.getW(), 0.01);
      assertEquals(0.0, vector4D0.getX(), 0.01);
      assertEquals(0.0, vector4D0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      double double0 = vector4D0.lengthSquared();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, vector4D0.getY(), 0.01);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
      assertEquals(0.0, vector4D0.getX(), 0.01);
      assertEquals(0.0, vector4D0.getW(), 0.01);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      // Undeclared exception!
      try { 
        vector4D0.set((Vector4D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Vector4D", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Vector2D vector2D0 = new Vector2D();
      Vector4D vector4D0 = new Vector4D(vector2D0, 0.0, 1.0);
      vector4D0.set((-165.0073));
      assertEquals((-165.0073), vector4D0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(0.0, 0.0, 0.0, 0.0);
      vector4D0.setX(0.0);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
      assertEquals(0.0, vector4D0.getW(), 0.01);
      assertEquals(0.0, vector4D0.getX(), 0.01);
      assertEquals(0.0, vector4D0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      // Undeclared exception!
      try { 
        vector4D0.sub((Vector4D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Vector4D", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(3627.40811115, 3627.40811115, 0.0, 0.0);
      Vector4D vector4D1 = vector4D0.par(0.0);
      assertEquals(Double.NaN, vector4D1.getW(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, vector4D1.getY(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, vector4D1.getX(), 0.01);
      assertEquals(Double.NaN, vector4D1.getZ(), 0.01);
      assertEquals(0.0, vector4D0.getW(), 0.01);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
      assertEquals(7254.8162223, vector4D0.sum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(1236.046, 1236.046, 0.0, 1.0);
      double double0 = vector4D0.norm();
      assertEquals(2473.092, vector4D0.sum(), 0.01);
      assertEquals(1748.0333029527785, double0, 0.01);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(3627.40811115, 3627.40811115, 0.0, 0.0);
      double double0 = vector4D0.sum();
      assertEquals(0.0, vector4D0.getZ(), 0.01);
      assertEquals(0.0, vector4D0.getW(), 0.01);
      assertEquals(7254.8162223, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      Vector4D vector4D0 = new Vector4D(doubleArray0);
      vector4D0.setY(0.0);
      assertEquals(0.0, vector4D0.norm(), 0.01);
      assertEquals(0.0, vector4D0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      Vector4D vector4D0 = new Vector4D(doubleArray0);
      Vector4D vector4D1 = vector4D0.mult(vector4D0);
      assertNotSame(vector4D1, vector4D0);
      assertEquals(0.0, vector4D1.getZ(), 0.01);
      assertEquals(0.0, vector4D1.getW(), 0.01);
      assertEquals(0.0, vector4D1.getX(), 0.01);
      assertEquals(0.0, vector4D1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      double double0 = vector4D0.getX();
      assertEquals(0.0, vector4D0.getY(), 0.01);
      assertEquals(0.0, vector4D0.getW(), 0.01);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, vector4D0.norm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(846.461084953697);
      double double0 = vector4D0.getZ();
      assertEquals(846.461084953697, double0, 0.01);
      assertEquals(3385.844339814788, vector4D0.sum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Vector4D vector4D0 = null;
      try {
        vector4D0 = new Vector4D((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.matrix.Vector4D", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Vector3D vector3D0 = new Vector3D();
      Vector4D vector4D0 = new Vector4D(vector3D0, (-1.0));
      Vector4D vector4D1 = new Vector4D(vector4D0);
      assertEquals(0.0, vector4D1.getY(), 0.01);
      assertEquals(0.0, vector4D1.getX(), 0.01);
      assertEquals(0.0, vector4D0.getX(), 0.01);
      assertEquals(0.0, vector4D0.getY(), 0.01);
      assertEquals((-1.0), vector4D1.sum(), 0.01);
      assertEquals(0.0, vector4D1.getZ(), 0.01);
      assertEquals((-1.0), vector4D0.sum(), 0.01);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      double[] doubleArray0 = vector4D0.getArray();
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      double double0 = vector4D0.getW();
      assertEquals(0.0, vector4D0.getY(), 0.01);
      assertEquals(0.0, vector4D0.getX(), 0.01);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, vector4D0.sum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D(846.461084953697);
      double double0 = vector4D0.getY();
      assertEquals(3385.844339814788, vector4D0.sum(), 0.01);
      assertEquals(846.461084953697, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Vector3D vector3D0 = new Vector3D();
      Vector4D vector4D0 = new Vector4D(vector3D0, (-1.0));
      String string0 = vector4D0.toString();
      assertEquals("(0.0, 0.0, 0.0, -1.0)", string0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Vector3D vector3D0 = new Vector3D();
      Vector4D vector4D0 = new Vector4D(vector3D0, (-1.0));
      double double0 = Vector4D.getDistance(vector4D0, vector4D0);
      assertEquals((-1.0), vector4D0.getW(), 0.01);
      assertEquals(0.0, vector4D0.getY(), 0.01);
      assertEquals(0.0, vector4D0.getX(), 0.01);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
      assertEquals(1.0, vector4D0.norm(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      Vector4D vector4D1 = vector4D0.mult(0.0);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
      assertNotSame(vector4D1, vector4D0);
      assertEquals(0.0, vector4D0.getX(), 0.01);
      assertEquals(0.0, vector4D1.getY(), 0.01);
      assertEquals(0.0, vector4D1.getX(), 0.01);
      assertEquals(0.0, vector4D0.getW(), 0.01);
      assertEquals(0.0, vector4D1.getW(), 0.01);
      assertEquals(0.0, vector4D0.getY(), 0.01);
      assertEquals(0.0, vector4D1.sum(), 0.01);
      assertEquals(0.0, vector4D0.lengthSquared(), 0.01);
      assertEquals(0.0, vector4D1.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      vector4D0.normalize();
      assertEquals(Double.NaN, vector4D0.sum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Vector4D vector4D0 = new Vector4D();
      double double0 = Vector4D.dotProduct(vector4D0, vector4D0);
      assertEquals(0.0, vector4D0.getZ(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, vector4D0.getW(), 0.01);
      assertEquals(0.0, vector4D0.getX(), 0.01);
      assertEquals(0.0, vector4D0.getY(), 0.01);
  }
}
