/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:54:11 GMT 2022
 */

package casmi.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import casmi.Applet;
import casmi.Mouse;
import casmi.ui.PopupMenu;
import casmi.ui.PopupMenuActionListener;
import java.awt.Point;
import javax.swing.JFrame;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PopupMenu_ESTest extends PopupMenu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PopupMenu popupMenu0 = new PopupMenu();
      Mouse mouse0 = mock(Mouse.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(mouse0).getX();
      doReturn(0).when(mouse0).getY();
      Applet applet0 = mock(Applet.class, new ViolatedAssumptionAnswer());
      doReturn(mouse0).when(applet0).getMouse();
      doReturn((JFrame) null).when(applet0).getWindowFrame();
      doReturn(0).when(applet0).getHeight();
      popupMenu0.show(applet0);
      assertFalse(popupMenu0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PopupMenu popupMenu0 = new PopupMenu();
      Mouse mouse0 = mock(Mouse.class, new ViolatedAssumptionAnswer());
      doReturn(896).when(mouse0).getX();
      doReturn(1332).when(mouse0).getY();
      JFrame jFrame0 = mock(JFrame.class, new ViolatedAssumptionAnswer());
      doReturn((Point) null).when(jFrame0).getLocationOnScreen();
      Applet applet0 = mock(Applet.class, new ViolatedAssumptionAnswer());
      doReturn(mouse0).when(applet0).getMouse();
      doReturn(jFrame0).when(applet0).getWindowFrame();
      doReturn(896).when(applet0).getHeight();
      // Undeclared exception!
      try { 
        popupMenu0.show(applet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.JPopupMenu", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PopupMenu popupMenu0 = new PopupMenu();
      PopupMenuActionListener popupMenuActionListener0 = mock(PopupMenuActionListener.class, new ViolatedAssumptionAnswer());
      popupMenu0.addMenuItem("", popupMenuActionListener0);
      assertFalse(popupMenu0.isFocusCycleRoot());
  }
}
