/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:46:52 GMT 2022
 */

package casmi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import casmi.Menu;
import casmi.MenuBar;
import javax.swing.JMenuBar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MenuBar_ESTest extends MenuBar_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MenuBar menuBar0 = new MenuBar();
      Menu menu0 = new Menu("Z'#< =nek*@#w,v|~");
      menuBar0.addMenu(menu0);
      Menu menu1 = menuBar0.getMenu(0);
      assertSame(menu1, menu0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MenuBar menuBar0 = new MenuBar();
      // Undeclared exception!
      try { 
        menuBar0.addMenu((Menu) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.MenuBar", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MenuBar menuBar0 = new MenuBar();
      boolean boolean0 = menuBar0.isSelected();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MenuBar menuBar0 = new MenuBar();
      Menu menu0 = new Menu();
      menuBar0.addMenu(menu0);
      int int0 = menuBar0.getMenuCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MenuBar menuBar0 = new MenuBar();
      // Undeclared exception!
      try { 
        menuBar0.getMenu(1501);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MenuBar menuBar0 = new MenuBar();
      JMenuBar jMenuBar0 = menuBar0.getJMenuBar();
      assertFalse(jMenuBar0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MenuBar menuBar0 = new MenuBar();
      int int0 = menuBar0.getMenuCount();
      assertEquals(0, int0);
  }
}
