/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:28:23 GMT 2022
 */

package casmi;

import org.junit.Test;
import static org.junit.Assert.*;
import casmi.Mouse;
import casmi.MouseButton;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Mouse_ESTest extends Mouse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setMoved(true);
      boolean boolean0 = mouse0.isMoved();
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(mouse0.isReleased());
      assertEquals(0, mouse0.getPrevY());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertEquals(0, mouse0.getY());
      assertFalse(mouse0.isEntered());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getX());
      assertFalse(mouse0.isClicked());
      assertFalse(mouse0.isPressed());
      assertEquals(0, mouse0.getPrvX());
      assertFalse(mouse0.isExited());
      assertEquals(0, mouse0.getWheelRotation());
      assertTrue(boolean0);
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      assertFalse(mouse0.isExited());
      
      mouse0.setExited(true);
      boolean boolean0 = mouse0.isExited();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      assertFalse(mouse0.isClicked());
      
      mouse0.setClicked(true);
      boolean boolean0 = mouse0.isClicked();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setY(4002);
      int int0 = mouse0.getY();
      assertEquals(4002, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setX(2);
      int int0 = mouse0.getX();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setX((-1));
      int int0 = mouse0.getX();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setWheelRotation(2);
      int int0 = mouse0.getWheelRotation();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setWheelRotation((-2618));
      int int0 = mouse0.getWheelRotation();
      assertEquals((-2618), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      assertEquals(0, mouse0.getPrevY());
      
      mouse0.setPrevY(1);
      int int0 = mouse0.getPrvY();
      assertEquals(1, mouse0.getPrevY());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setPrevY((-1));
      int int0 = mouse0.getPrvY();
      assertEquals((-1), mouse0.getPrevY());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setPrevX(4369);
      int int0 = mouse0.getPrvX();
      assertEquals(4369, mouse0.getPrevX());
      assertEquals(4369, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setPrevX((-1804));
      int int0 = mouse0.getPrvX();
      assertEquals((-1804), mouse0.getPrevX());
      assertEquals((-1804), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      assertEquals(0, mouse0.getPrvY());
      
      mouse0.setPrevY(1);
      int int0 = mouse0.getPrevY();
      assertEquals(1, mouse0.getPrvY());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setPrevY((-251));
      int int0 = mouse0.getPrevY();
      assertEquals((-251), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setPrevX(3);
      int int0 = mouse0.getPrevX();
      assertEquals(3, mouse0.getPrvX());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setMouseClickRightTime(294L);
      long long0 = mouse0.getMouseClickRightTime();
      assertEquals(294L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setMouseClickRightTime((-2109L));
      long long0 = mouse0.getMouseClickRightTime();
      assertEquals((-2109L), long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      
      mouse0.setMouseClickMiddleTime(1);
      long long0 = mouse0.getMouseClickMiddleTime();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setMouseClickLeftTime((-529));
      long long0 = mouse0.getMouseClickLeftTime();
      assertEquals((-529L), long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      MouseButton mouseButton0 = MouseButton.RIGHT;
      mouse0.setButtonPressed(mouseButton0, false);
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(mouse0.isEntered());
      assertEquals(0, mouse0.getX());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertEquals(0, mouse0.getY());
      assertFalse(mouse0.isClicked());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertFalse(mouse0.isReleased());
      assertFalse(mouse0.isPressed());
      assertEquals(0, mouse0.getPrevX());
      assertEquals(0, mouse0.getPrvY());
      assertFalse(mouse0.isExited());
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      MouseButton mouseButton0 = MouseButton.MIDDLE;
      mouse0.setButtonPressed(mouseButton0, true);
      boolean boolean0 = mouse0.isButtonPressed(mouseButton0);
      assertFalse(mouse0.isClicked());
      assertTrue(boolean0);
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isExited());
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(mouse0.isEntered());
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getX());
      assertEquals(0, mouse0.getY());
      assertFalse(mouse0.isReleased());
      assertEquals(0, mouse0.getPrevY());
      assertFalse(mouse0.isPressed());
      assertEquals(0, mouse0.getPrvX());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      MouseButton mouseButton0 = MouseButton.NONE;
      mouse0.setButtonPressed(mouseButton0, false);
      assertFalse(mouse0.isPressed());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertFalse(mouse0.isEntered());
      assertEquals(0, mouse0.getPrevY());
      assertFalse(mouse0.isReleased());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isExited());
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getX());
      assertEquals(0, mouse0.getY());
      assertEquals(0, mouse0.getPrevX());
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(mouse0.isClicked());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      MouseButton mouseButton0 = MouseButton.LEFT;
      mouse0.setButtonPressed(mouseButton0, true);
      assertEquals(0, mouse0.getY());
      assertEquals(0, mouse0.getX());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertFalse(mouse0.isReleased());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertFalse(mouse0.isClicked());
      assertEquals(0, mouse0.getWheelRotation());
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(mouse0.isEntered());
      assertEquals(0, mouse0.getPrvY());
      assertEquals(0, mouse0.getPrvX());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isPressed());
      assertFalse(mouse0.isExited());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      MouseButton mouseButton0 = MouseButton.RIGHT;
      boolean boolean0 = mouse0.isButtonPressed(mouseButton0);
      assertEquals(0, mouse0.getX());
      assertEquals(0, mouse0.getPrevX());
      assertEquals(0, mouse0.getY());
      assertFalse(boolean0);
      assertEquals(0, mouse0.getWheelRotation());
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(mouse0.isEntered());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isReleased());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertFalse(mouse0.isPressed());
      assertFalse(mouse0.isClicked());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getPrevY());
      assertFalse(mouse0.isExited());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      MouseButton mouseButton0 = MouseButton.NONE;
      boolean boolean0 = mouse0.isButtonPressed(mouseButton0);
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getPrvX());
      assertFalse(mouse0.isDoubleClicked());
      assertEquals(0, mouse0.getPrvY());
      assertFalse(mouse0.isEntered());
      assertEquals(0, mouse0.getX());
      assertEquals(0, mouse0.getY());
      assertFalse(mouse0.isClicked());
      assertFalse(mouse0.isExited());
      assertFalse(mouse0.isPressed());
      assertFalse(boolean0);
      assertFalse(mouse0.isReleased());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertEquals(0L, mouse0.getMouseClickRightTime());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      MouseButton mouseButton0 = MouseButton.LEFT;
      boolean boolean0 = mouse0.isButtonPressed(mouseButton0);
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getWheelRotation());
      assertFalse(mouse0.isClicked());
      assertEquals(0, mouse0.getPrvX());
      assertEquals(0, mouse0.getPrvY());
      assertEquals(0, mouse0.getY());
      assertEquals(0, mouse0.getX());
      assertFalse(mouse0.isEntered());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertFalse(mouse0.isPressed());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isReleased());
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(boolean0);
      assertFalse(mouse0.isExited());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setMouseClickMiddleTime((-335L));
      long long0 = mouse0.getMouseClickMiddleTime();
      assertEquals((-335L), long0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      int int0 = mouse0.getPrvY();
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getPrevX());
      assertEquals(0, mouse0.getX());
      assertEquals(0, mouse0.getY());
      assertFalse(mouse0.isEntered());
      assertFalse(mouse0.isDoubleClicked());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isClicked());
      assertFalse(mouse0.isPressed());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertFalse(mouse0.isReleased());
      assertEquals(0, int0);
      assertFalse(mouse0.isExited());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      boolean boolean0 = mouse0.isExited();
      assertEquals(0, mouse0.getX());
      assertEquals(0, mouse0.getY());
      assertFalse(mouse0.isEntered());
      assertFalse(mouse0.isDoubleClicked());
      assertEquals(0, mouse0.getPrevX());
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertFalse(boolean0);
      assertFalse(mouse0.isClicked());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertEquals(0, mouse0.getPrevY());
      assertFalse(mouse0.isReleased());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertFalse(mouse0.isPressed());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      boolean boolean0 = mouse0.isReleased();
      assertFalse(boolean0);
      assertEquals(0, mouse0.getPrevX());
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertFalse(mouse0.isClicked());
      assertEquals(0, mouse0.getX());
      assertEquals(0, mouse0.getY());
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(mouse0.isEntered());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertFalse(mouse0.isPressed());
      assertEquals(0, mouse0.getPrevY());
      assertFalse(mouse0.isExited());
      assertEquals(0L, mouse0.getMouseClickRightTime());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      boolean boolean0 = mouse0.isDragged();
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(mouse0.isPressed());
      assertFalse(mouse0.isReleased());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertFalse(boolean0);
      assertEquals(0, mouse0.getPrevY());
      assertFalse(mouse0.isClicked());
      assertEquals(0, mouse0.getWheelRotation());
      assertFalse(mouse0.isEntered());
      assertEquals(0, mouse0.getX());
      assertEquals(0, mouse0.getY());
      assertEquals(0, mouse0.getPrevX());
      assertFalse(mouse0.isExited());
      assertEquals(0L, mouse0.getMouseClickRightTime());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      int int0 = mouse0.getWheelRotation();
      assertFalse(mouse0.isDoubleClicked());
      assertEquals(0, mouse0.getY());
      assertEquals(0, mouse0.getX());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isExited());
      assertFalse(mouse0.isReleased());
      assertFalse(mouse0.isPressed());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getPrvY());
      assertFalse(mouse0.isClicked());
      assertFalse(mouse0.isEntered());
      assertEquals(0, int0);
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertEquals(0, mouse0.getPrevX());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      assertFalse(mouse0.isReleased());
      
      mouse0.setReleased(true);
      boolean boolean0 = mouse0.isReleased();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      boolean boolean0 = mouse0.isClicked();
      assertEquals(0, mouse0.getX());
      assertEquals(0, mouse0.getY());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getPrevY());
      assertFalse(mouse0.isReleased());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertFalse(mouse0.isEntered());
      assertEquals(0, mouse0.getWheelRotation());
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(boolean0);
      assertEquals(0, mouse0.getPrvX());
      assertFalse(mouse0.isPressed());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isExited());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      boolean boolean0 = mouse0.isPressed();
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isEntered());
      assertFalse(mouse0.isReleased());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertFalse(mouse0.isDoubleClicked());
      assertEquals(0, mouse0.getPrvX());
      assertFalse(boolean0);
      assertEquals(0, mouse0.getPrvY());
      assertEquals(0, mouse0.getX());
      assertFalse(mouse0.isClicked());
      assertEquals(0, mouse0.getY());
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertFalse(mouse0.isExited());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setPrevX((-2309));
      int int0 = mouse0.getPrevX();
      assertEquals((-2309), mouse0.getPrvX());
      assertEquals((-2309), int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setDragged(true);
      boolean boolean0 = mouse0.isDragged();
      assertTrue(boolean0);
      assertFalse(mouse0.isClicked());
      assertEquals(0, mouse0.getPrvX());
      assertEquals(0, mouse0.getPrvY());
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(mouse0.isEntered());
      assertEquals(0, mouse0.getX());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getY());
      assertFalse(mouse0.isPressed());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isReleased());
      assertFalse(mouse0.isExited());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      long long0 = mouse0.getMouseClickMiddleTime();
      assertEquals(0, mouse0.getPrevY());
      assertFalse(mouse0.isPressed());
      assertFalse(mouse0.isReleased());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isEntered());
      assertFalse(mouse0.isDoubleClicked());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertFalse(mouse0.isClicked());
      assertEquals(0L, long0);
      assertEquals(0, mouse0.getY());
      assertEquals(0, mouse0.getX());
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0, mouse0.getPrevX());
      assertFalse(mouse0.isExited());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      mouse0.setY((-1));
      int int0 = mouse0.getY();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      int int0 = mouse0.getPrevY();
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getY());
      assertEquals(0, mouse0.getX());
      assertFalse(mouse0.isReleased());
      assertFalse(mouse0.isPressed());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isExited());
      assertFalse(mouse0.isClicked());
      assertFalse(mouse0.isEntered());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertEquals(0, mouse0.getPrevX());
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0, int0);
      assertFalse(mouse0.isDoubleClicked());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      boolean boolean0 = mouse0.isMoved();
      assertFalse(boolean0);
      assertFalse(mouse0.isClicked());
      assertEquals(0, mouse0.getPrvY());
      assertEquals(0, mouse0.getPrvX());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertEquals(0, mouse0.getWheelRotation());
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(mouse0.isEntered());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getY());
      assertEquals(0, mouse0.getX());
      assertFalse(mouse0.isReleased());
      assertFalse(mouse0.isPressed());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isExited());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      int int0 = mouse0.getX();
      assertFalse(mouse0.isClicked());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isExited());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertFalse(mouse0.isPressed());
      assertFalse(mouse0.isEntered());
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(mouse0.isReleased());
      assertEquals(0, mouse0.getY());
      assertEquals(0, int0);
      assertEquals(0, mouse0.getPrvY());
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getPrevX());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      int int0 = mouse0.getPrvX();
      assertEquals(0, int0);
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isExited());
      assertEquals(0, mouse0.getY());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(mouse0.isReleased());
      assertEquals(0, mouse0.getWheelRotation());
      assertFalse(mouse0.isPressed());
      assertFalse(mouse0.isEntered());
      assertEquals(0, mouse0.getPrvY());
      assertEquals(0, mouse0.getX());
      assertFalse(mouse0.isClicked());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      long long0 = mouse0.getMouseClickLeftTime();
      assertEquals(0, mouse0.getY());
      assertEquals(0, mouse0.getX());
      assertFalse(mouse0.isEntered());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertEquals(0, mouse0.getWheelRotation());
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(mouse0.isClicked());
      assertEquals(0L, long0);
      assertEquals(0, mouse0.getPrvY());
      assertEquals(0, mouse0.getPrvX());
      assertFalse(mouse0.isPressed());
      assertFalse(mouse0.isReleased());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isExited());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      assertFalse(mouse0.isDoubleClicked());
      
      mouse0.setDoubleClicked(true);
      boolean boolean0 = mouse0.isDoubleClicked();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      
      mouse0.setMouseClickLeftTime(1L);
      long long0 = mouse0.getMouseClickLeftTime();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      assertFalse(mouse0.isEntered());
      
      mouse0.setEntered(true);
      boolean boolean0 = mouse0.isEntered();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      long long0 = mouse0.getMouseClickRightTime();
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertFalse(mouse0.isPressed());
      assertFalse(mouse0.isEntered());
      assertFalse(mouse0.isClicked());
      assertFalse(mouse0.isExited());
      assertEquals(0, mouse0.getY());
      assertFalse(mouse0.isDoubleClicked());
      assertEquals(0, mouse0.getPrevX());
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0, mouse0.getX());
      assertEquals(0L, long0);
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertFalse(mouse0.isReleased());
      assertEquals(0, mouse0.getPrevY());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      boolean boolean0 = mouse0.isDoubleClicked();
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getPrvY());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isExited());
      assertFalse(mouse0.isEntered());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertFalse(mouse0.isPressed());
      assertFalse(mouse0.isReleased());
      assertFalse(boolean0);
      assertEquals(0, mouse0.getY());
      assertEquals(0, mouse0.getX());
      assertFalse(mouse0.isClicked());
      assertEquals(0, mouse0.getPrevX());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      assertFalse(mouse0.isPressed());
      
      mouse0.setPressed(true);
      boolean boolean0 = mouse0.isPressed();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      boolean boolean0 = mouse0.isEntered();
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getX());
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0, mouse0.getY());
      assertFalse(mouse0.isReleased());
      assertEquals(0, mouse0.getPrevY());
      assertFalse(mouse0.isPressed());
      assertEquals(0, mouse0.getPrvX());
      assertFalse(mouse0.isExited());
      assertFalse(mouse0.isClicked());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isDoubleClicked());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      int int0 = mouse0.getY();
      assertEquals(0, mouse0.getX());
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertFalse(mouse0.isReleased());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isExited());
      assertEquals(0, int0);
      assertEquals(0, mouse0.getPrevX());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertFalse(mouse0.isPressed());
      assertFalse(mouse0.isEntered());
      assertEquals(0, mouse0.getPrvY());
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(mouse0.isClicked());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Mouse mouse0 = new Mouse();
      int int0 = mouse0.getPrevX();
      assertFalse(mouse0.isReleased());
      assertFalse(mouse0.isPressed());
      assertEquals(0L, mouse0.getMouseClickMiddleTime());
      assertEquals(0L, mouse0.getMouseClickRightTime());
      assertFalse(mouse0.isEntered());
      assertFalse(mouse0.isDoubleClicked());
      assertFalse(mouse0.isExited());
      assertEquals(0, int0);
      assertEquals(0, mouse0.getWheelRotation());
      assertEquals(0, mouse0.getX());
      assertFalse(mouse0.isClicked());
      assertEquals(0L, mouse0.getMouseClickLeftTime());
      assertEquals(0, mouse0.getY());
      assertEquals(0, mouse0.getPrvY());
  }
}
