/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:52:11 GMT 2022
 */

package casmi;

import org.junit.Test;
import static org.junit.Assert.*;
import casmi.Keyboard;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Keyboard_ESTest extends Keyboard_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Keyboard keyboard0 = new Keyboard();
      assertFalse(keyboard0.isPressed());
      
      keyboard0.setPressed(true);
      boolean boolean0 = keyboard0.isPressed();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Keyboard keyboard0 = new Keyboard();
      keyboard0.setKeyCode((-850));
      int int0 = keyboard0.getKeyCode();
      assertEquals((-850), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Keyboard keyboard0 = new Keyboard();
      keyboard0.setCharacter('h');
      char char0 = keyboard0.getCharacter();
      assertEquals('h', char0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Keyboard keyboard0 = new Keyboard();
      keyboard0.setKeyCode(1);
      int int0 = keyboard0.getKeyCode();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Keyboard keyboard0 = new Keyboard();
      boolean boolean0 = keyboard0.isTyped();
      assertFalse(boolean0);
      assertFalse(keyboard0.isPressed());
      assertFalse(keyboard0.isReleased());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Keyboard keyboard0 = new Keyboard();
      keyboard0.getCharacter();
      assertFalse(keyboard0.isTyped());
      assertFalse(keyboard0.isReleased());
      assertFalse(keyboard0.isPressed());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Keyboard keyboard0 = new Keyboard();
      assertFalse(keyboard0.isReleased());
      
      keyboard0.setReleased(true);
      boolean boolean0 = keyboard0.isReleased();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Keyboard keyboard0 = new Keyboard();
      keyboard0.setCharacter('9');
      char char0 = keyboard0.getCharacter();
      assertEquals('9', char0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Keyboard keyboard0 = new Keyboard();
      boolean boolean0 = keyboard0.isReleased();
      assertFalse(boolean0);
      assertFalse(keyboard0.isPressed());
      assertFalse(keyboard0.isTyped());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Keyboard keyboard0 = new Keyboard();
      assertFalse(keyboard0.isTyped());
      
      keyboard0.setTyped(true);
      boolean boolean0 = keyboard0.isTyped();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Keyboard keyboard0 = new Keyboard();
      boolean boolean0 = keyboard0.isPressed();
      assertFalse(boolean0);
      assertFalse(keyboard0.isReleased());
      assertFalse(keyboard0.isTyped());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Keyboard keyboard0 = new Keyboard();
      int int0 = keyboard0.getKeyCode();
      assertFalse(keyboard0.isPressed());
      assertEquals(0, int0);
      assertFalse(keyboard0.isTyped());
      assertFalse(keyboard0.isReleased());
  }
}
