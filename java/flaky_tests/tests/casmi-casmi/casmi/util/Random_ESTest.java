/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:30:43 GMT 2022
 */

package casmi.util;

import org.junit.Test;
import static org.junit.Assert.*;
import casmi.matrix.Vector3D;
import casmi.util.Random;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Random_ESTest extends Random_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      float float0 = Random.random((-916.106F), (float) 44);
      assertEquals((-916.106F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      float float0 = Random.random((-1.0F), (-1.0F));
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = Random.random((-833), (-2132));
      assertEquals((-833), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = Random.random(1121, 1121);
      assertEquals(1121, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Vector3D vector3D0 = Random.randVertex2d();
      assertEquals(0.0, vector3D0.getY(), 0.01);
      
      int int0 = Random.random((-2143));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      float float0 = Random.random(1096.063F, 0.0F);
      assertEquals(1096.063F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Vector3D vector3D0 = Random.randVertex2d();
      assertEquals(0.0, vector3D0.getY(), 0.01);
      
      float float0 = Random.random((float) 1121);
      assertEquals(112.1F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Random.randVertex2d();
      Random.random((-1442.1497F));
      Random.randVertex2d();
      Random.random((float) (-833));
      Random.randVertex2d();
      Vector3D vector3D0 = Random.randVertex2d();
      assertEquals((-8.742278000372475E-8), vector3D0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Random.random((-833));
      float float0 = Random.random((-1442.1497F));
      assertEquals(-0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      float float0 = Random.random((-1442.1497F));
      assertEquals(-0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Random.random((-833));
      Random.setSeed((-833));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      float float0 = Random.random(0.0F, (-126.0F));
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Random.setSeed(0L);
      float float0 = Random.random((float) 0L, 2089.4731F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      float float0 = Random.random(0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = Random.random(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = Random.random((-2132), (-833));
      assertEquals((-2132), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = Random.random(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Random random0 = new Random();
  }
}
