/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:19:22 GMT 2022
 */

package casmi.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import casmi.util.FileUtil;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileUtil_ESTest extends FileUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Destination must not be null", "Destination must not be null");
      FileUtil.touch(mockFile0);
      String string0 = FileUtil.searchFilePath("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("2]uaQ,jt/}LJN~UFr");
      File file0 = MockFile.createTempFile("0Ab214JK7hunb{T?jK", "Failed to delete the src file '", (File) mockFile0);
      try { 
        FileUtil.copyFile(file0, mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Destination '2]uaQ,jt/}LJN~UFr' is already exists
         //
         verifyException("casmi.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "/");
      MockFile mockFile1 = new MockFile("/");
      try { 
        FileUtil.copyFile(mockFile0, mockFile1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Source '/' is not a file
         //
         verifyException("casmi.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile(":");
      MockFile mockFile1 = new MockFile(":");
      try { 
        FileUtil.copyFile(mockFile0, mockFile1);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // Source ':' does not exist
         //
         verifyException("casmi.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("3Zp0clS_)|+v(BCov");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileUtil.touch(mockFile0);
      assertTrue(mockFile0.canExecute());
      assertTrue(mockFile0.canWrite());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Destination must not be null");
      File file0 = MockFile.createTempFile("Destination must not be null", "Destination must not be null");
      try { 
        FileUtil.moveFile(file0, mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // transferTo is not supported yet
         //
         verifyException("org.evosuite.runtime.mock.java.io.EvoFileChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      String string0 = FileUtil.getSuffix(mockFile0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      File file0 = MockFile.createTempFile("W2&vP;IWpy8QmV60Kj", "");
      boolean boolean0 = FileUtil.delete(file0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.touch((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      System.setCurrentTimeMillis((-1716L));
      // Undeclared exception!
      try { 
        FileUtil.touch(mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative time
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      File file0 = MockFile.createTempFile("V=WaY,vr>;KoP=Nzp8~", "V=WaY,vr>;KoP=Nzp8~");
      MockFile mockFile0 = new MockFile(file0, "V=WaY,vr>;KoP=Nzp8~");
      try { 
        FileUtil.touch(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile("5_zZDa60tYeZwB!1");
      FileUtil.touch(mockFile0);
      // Undeclared exception!
      try { 
        FileUtil.searchFilePath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.getSuffix((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.exist((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      File file0 = MockFile.createTempFile("Source '", "Source '");
      MockFile mockFile0 = new MockFile(file0, "Source '");
      // Undeclared exception!
      try { 
        FileUtil.copyFile(file0, mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.copyFile((File) null, (File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Source must not be null
         //
         verifyException("casmi.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      MockFile mockFile1 = new MockFile(mockFile0, ";_:?E\"l6:.=/2]O&.d");
      FileUtil.touch(mockFile1);
      String string0 = FileUtil.searchFilePath("<");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Destination must not be null", "XO?*8FLXQ[haM&GZ");
      FileUtil.touch(mockFile0);
      String string0 = FileUtil.searchFilePath("XO?*8FLXQ[haM&GZ");
      assertEquals("/home/user/Destination must not be null/XO?*8FLXQ[haM&GZ", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      File file0 = MockFile.createTempFile("}],LB.*MU`J3x(z5P", "}],LB.*MU`J3x(z5P");
      String string0 = FileUtil.getSuffix(file0);
      assertEquals("*MU`J3x(z5P", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = FileUtil.exist("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      boolean boolean0 = FileUtil.exist(":");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockFile mockFile0 = new MockFile("BIJ%8p", "BIJ%8p");
      mockFile0.mkdirs();
      boolean boolean0 = FileUtil.delete(mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      boolean boolean0 = FileUtil.delete((File) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      File file0 = MockFile.createTempFile("OQ`L", "OQ`L");
      MockFile mockFile0 = new MockFile(file0, "OQ`L");
      // Undeclared exception!
      try { 
        FileUtil.moveFile(file0, mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("casmi.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockFile mockFile0 = new MockFile("/", ":");
      // Undeclared exception!
      try { 
        FileUtil.copyFile(mockFile0, (File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Destination must not be null
         //
         verifyException("casmi.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        FileUtil.moveFile((File) null, (File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Source must not be null
         //
         verifyException("casmi.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Destination must not be null", "XO?*8FLXQ[haM&GZ");
      try { 
        FileUtil.moveFile(mockFile0, mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // Source '/home/user/Destination must not be null/XO?*8FLXQ[haM&GZ' does not exist
         //
         verifyException("casmi.util.FileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
  }
}
