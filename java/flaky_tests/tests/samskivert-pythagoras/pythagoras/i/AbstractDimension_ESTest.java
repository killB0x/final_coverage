/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 05:11:24 GMT 2022
 */

package pythagoras.i;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.i.Dimension;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractDimension_ESTest extends AbstractDimension_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Dimension dimension0 = new Dimension((-506), (-506));
      Dimension dimension1 = new Dimension();
      boolean boolean0 = dimension0.equals(dimension1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Dimension dimension0 = new Dimension(2169, 2169);
      dimension0.hashCode();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Dimension dimension0 = new Dimension(2169, 2169);
      Dimension dimension1 = dimension0.clone();
      assertTrue(dimension1.equals((Object)dimension0));
      
      dimension1.height = 1160;
      boolean boolean0 = dimension1.equals(dimension0);
      assertFalse(dimension1.equals((Object)dimension0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Dimension dimension0 = new Dimension(652, 0);
      dimension0.setSize((-1318), (-1318));
      Dimension dimension1 = dimension0.clone();
      assertTrue(dimension1.equals((Object)dimension0));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Dimension dimension0 = new Dimension((-1), (-923));
      Dimension dimension1 = new Dimension();
      dimension0.setSize(0, 1037);
      boolean boolean0 = dimension0.equals(dimension1);
      assertFalse(boolean0);
      assertFalse(dimension1.equals((Object)dimension0));
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Dimension dimension0 = new Dimension((-1), (-923));
      Dimension dimension1 = new Dimension();
      boolean boolean0 = dimension1.equals(dimension0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Dimension dimension0 = new Dimension((-1), (-923));
      boolean boolean0 = dimension0.equals("0x-1803");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Dimension dimension0 = new Dimension();
      boolean boolean0 = dimension0.equals(dimension0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Dimension dimension0 = new Dimension();
      String string0 = dimension0.toString();
      assertEquals("0x0", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Dimension dimension0 = new Dimension();
      Dimension dimension1 = dimension0.clone();
      boolean boolean0 = dimension1.equals(dimension0);
      assertTrue(boolean0);
  }
}
