/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 05:23:38 GMT 2022
 */

package pythagoras.i;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.i.Dimension;
import pythagoras.i.IDimension;
import pythagoras.i.IPoint;
import pythagoras.i.IRectangle;
import pythagoras.i.Point;
import pythagoras.i.Rectangle;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Rectangle_ESTest extends Rectangle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(dimension0);
      Point point0 = new Point(5, 0);
      Rectangle rectangle1 = new Rectangle(point0, dimension0);
      rectangle1.translate(0, 4041);
      rectangle1.add((IRectangle) rectangle0);
      assertEquals(5, rectangle1.width);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Rectangle rectangle1 = new Rectangle(rectangle0);
      rectangle0.setBounds((-3398), 1681, 3575, 3575);
      rectangle1.add((IRectangle) rectangle0);
      assertEquals((-3398), rectangle0.x);
      assertEquals((-3398), rectangle1.x());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle((-2248), (-2248), (-2248), (-2248));
      rectangle0.add((IRectangle) rectangle0);
      assertEquals((-2248), rectangle0.width());
      assertEquals((-2248), rectangle0.x);
      assertEquals((-2248), rectangle0.y);
      assertEquals((-2248), rectangle0.height);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Point point0 = new Point(46, 46);
      Rectangle rectangle0 = new Rectangle(point0);
      Dimension dimension0 = new Dimension(46, (-1));
      Rectangle rectangle1 = new Rectangle(point0, dimension0);
      assertEquals((-1), rectangle1.height);
      
      rectangle1.add((IRectangle) rectangle0);
      assertEquals(0, rectangle1.height);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(dimension0);
      rectangle0.translate(0, 4041);
      rectangle0.add((IRectangle) rectangle0);
      assertEquals(4041, rectangle0.y);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Point point0 = new Point(0, 0);
      Rectangle rectangle0 = new Rectangle(point0);
      rectangle0.setLocation((-39), 2);
      rectangle0.add(0, 0);
      assertEquals(39, rectangle0.width);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(1125, 1125, 1125, (-732));
      rectangle0.add(0, 4199);
      assertEquals(2250, rectangle0.width);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Point point0 = new Point(0, 0);
      Rectangle rectangle0 = new Rectangle(point0);
      rectangle0.grow(1, (-2838));
      rectangle0.add(0, 0);
      assertEquals(0, rectangle0.y);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Point point0 = new Point((-1084), 5);
      Rectangle rectangle0 = new Rectangle(point0);
      rectangle0.translate((-192), (-796));
      assertEquals((-791), rectangle0.y);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Point point0 = new Point(0, 0);
      Dimension dimension0 = new Dimension((-1193), (-2631));
      point0.add(0, (-2838), point0);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      rectangle0.grow(1, (-2838));
      assertEquals((-1191), rectangle0.width);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Dimension dimension0 = new Dimension(5, (-1));
      Rectangle rectangle0 = new Rectangle(dimension0);
      int int0 = rectangle0.y();
      assertEquals((-1), rectangle0.height);
      assertEquals(0, rectangle0.x);
      assertEquals(0, int0);
      assertEquals(5, rectangle0.width);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Point point0 = new Point(377, 377);
      Rectangle rectangle0 = new Rectangle(point0);
      int int0 = rectangle0.y();
      assertEquals(0, rectangle0.height);
      assertEquals(377, int0);
      assertEquals(377, rectangle0.x);
      assertEquals(0, rectangle0.width);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Point point0 = new Point(0, 0);
      Dimension dimension0 = new Dimension((-1193), (-2631));
      point0.add(0, (-2838), point0);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      int int0 = rectangle0.y();
      assertEquals((-2838), int0);
      assertEquals(0, rectangle0.x);
      assertEquals((-1193), rectangle0.width);
      assertEquals((-2631), rectangle0.height);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      int int0 = rectangle0.x();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(4591, 4591, 4591, 4591);
      int int0 = rectangle0.x();
      assertEquals(4591, rectangle0.height);
      assertEquals(4591, int0);
      assertEquals(4591, rectangle0.width);
      assertEquals(4591, rectangle0.y);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Point point0 = new Point((-1084), 5);
      Rectangle rectangle0 = new Rectangle(point0);
      int int0 = rectangle0.x();
      assertEquals(0, rectangle0.width);
      assertEquals((-1084), int0);
      assertEquals(5, rectangle0.y);
      assertEquals(0, rectangle0.height);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      int int0 = rectangle0.width();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Point point0 = new Point(0, 0);
      Rectangle rectangle0 = new Rectangle(point0);
      rectangle0.grow(1, (-2838));
      int int0 = rectangle0.width();
      assertEquals(2, rectangle0.width);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Point point0 = new Point(377, 377);
      Rectangle rectangle0 = new Rectangle(point0);
      rectangle0.setSize((-3883), (-365));
      int int0 = rectangle0.width();
      assertEquals((-365), rectangle0.height);
      assertEquals((-3883), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Point point0 = new Point(0, 0);
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      int int0 = rectangle0.height();
      assertEquals(0, int0);
      assertEquals(0, rectangle0.width);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.y);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(4591, 4591, 4591, 4591);
      int int0 = rectangle0.height();
      assertEquals(4591, rectangle0.y);
      assertEquals(4591, rectangle0.x);
      assertEquals(4591, int0);
      assertEquals(4591, rectangle0.width);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Rectangle rectangle0 = null;
      try {
        rectangle0 = new Rectangle((IRectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.i.Rectangle", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Point point0 = new Point();
      Rectangle rectangle0 = null;
      try {
        rectangle0 = new Rectangle(point0, (IDimension) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.i.Rectangle", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Rectangle rectangle0 = null;
      try {
        rectangle0 = new Rectangle((IPoint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.i.Rectangle", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Rectangle rectangle0 = null;
      try {
        rectangle0 = new Rectangle((IDimension) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.i.Rectangle", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      rectangle0.setLocation(3575, (-1));
      assertEquals(3575, rectangle0.x);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Point point0 = new Point(377, 377);
      Rectangle rectangle0 = new Rectangle(point0);
      rectangle0.setSize((-3883), (-365));
      int int0 = rectangle0.height();
      assertEquals((-365), rectangle0.height);
      assertEquals((-365), int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Point point0 = new Point(377, 377);
      Rectangle rectangle0 = new Rectangle(point0);
      rectangle0.grow(377, 754);
      assertEquals((-377), rectangle0.y);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      rectangle0.setBounds((IRectangle) rectangle0);
      assertEquals(0, rectangle0.x);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.y);
      assertEquals(0, rectangle0.width);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Point point0 = new Point(377, 377);
      Rectangle rectangle0 = new Rectangle(point0);
      Dimension dimension0 = new Dimension(377, 754);
      rectangle0.setSize((IDimension) dimension0);
      assertEquals(754, rectangle0.height);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Point point0 = new Point(0, 99);
      rectangle0.setLocation((IPoint) point0);
      assertEquals(99, rectangle0.y);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Point point0 = new Point(377, 377);
      Rectangle rectangle0 = new Rectangle(point0);
      rectangle0.add((IPoint) point0);
      assertEquals(377, rectangle0.y);
      assertEquals(377, rectangle0.x);
      assertEquals(0, rectangle0.height);
      assertEquals(0, rectangle0.width);
  }
}
