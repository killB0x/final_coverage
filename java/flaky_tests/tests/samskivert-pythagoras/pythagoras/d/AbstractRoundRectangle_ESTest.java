/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 04:23:11 GMT 2022
 */

package pythagoras.d;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.d.AbstractRoundRectangle;
import pythagoras.d.AffineTransform;
import pythagoras.d.Dimension;
import pythagoras.d.IRectangle;
import pythagoras.d.IdentityTransform;
import pythagoras.d.PathIterator;
import pythagoras.d.Point;
import pythagoras.d.Rectangle;
import pythagoras.d.RoundRectangle;
import pythagoras.d.Transform;
import pythagoras.d.Vector;
import pythagoras.d.XY;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractRoundRectangle_ESTest extends AbstractRoundRectangle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(1736.427, 1736.427, 1736.427, 1736.427, 1736.427, 1736.427);
      IdentityTransform identityTransform0 = new IdentityTransform();
      double[] doubleArray0 = new double[4];
      AbstractRoundRectangle.Iterator abstractRoundRectangle_Iterator0 = new AbstractRoundRectangle.Iterator(roundRectangle0, identityTransform0);
      abstractRoundRectangle_Iterator0.next();
      abstractRoundRectangle_Iterator0.next();
      abstractRoundRectangle_Iterator0.next();
      assertFalse(abstractRoundRectangle_Iterator0.isDone());
      
      int int0 = abstractRoundRectangle_Iterator0.currentSegment(doubleArray0);
      assertArrayEquals(new double[] {3472.854, 2604.6405, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(1736.427, 1736.427, 1736.427, 1736.427, 1736.427, 1736.427);
      IdentityTransform identityTransform0 = new IdentityTransform();
      PathIterator pathIterator0 = roundRectangle0.pathIterator((Transform) identityTransform0);
      pathIterator0.next();
      // Undeclared exception!
      try { 
        pathIterator0.currentSegment((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractRoundRectangle$Iterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(1736.427, 1736.427, 1736.427, 1736.427, 1736.427, 1736.427);
      boolean boolean0 = roundRectangle0.intersects(1736.427, 2604.6405, 1736.427, 1736.427);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.setFrame(782.3995420512267, 782.3995420512267, 782.3995420512267, 782.3995420512267);
      boolean boolean0 = roundRectangle0.intersects(782.3995420512267, 782.3995420512267, 6.283185307179586, 1818.750884662397);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(1735.7232046249558, 1735.7232046249558, 1735.7232046249558, 1735.7232046249558, 1735.7232046249558, 1735.7232046249558);
      Dimension dimension0 = new Dimension(1735.7232046249558, 1735.7232046249558);
      Rectangle rectangle0 = new Rectangle(dimension0);
      boolean boolean0 = roundRectangle0.intersects((IRectangle) rectangle0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(2.0, 2.0, (-2540.86840575), (-2540.86840575), 4470.692463341326, 4470.692463341326);
      roundRectangle0.setFrameFromCenter(4470.692463341326, 4470.692463341326, 1112.34, (-2540.86840575));
      boolean boolean0 = roundRectangle0.intersects((-12.297565575032078), (-2540.86840575), 403.41081, (-12.297565575032078));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(1016.9942, 1016.9942, 1016.9942, 1016.9942, 1016.9942, (-2467.554191977451));
      boolean boolean0 = roundRectangle0.intersects(1016.9942, (-2467.554191977451), (-2467.554191977451), (-2467.554191977451));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(1016.9942, 1016.9942, 1016.9942, (-730.8992764101204), (-2869.1162792), 0.5);
      roundRectangle0.setFrame((-2869.1162792), 1.0, 1.0, 1016.9942);
      boolean boolean0 = roundRectangle0.contains(71.2683864, (-358.8111855), 71.2683864, (-1556.7331158309));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(4.9525554997875325, 4.9525554997875325, 4.9525554997875325, 4.9525554997875325, (-2039.20429418716), (-3049.9786109070537));
      boolean boolean0 = roundRectangle0.contains(5244.93873139403, 0.0, 0.0, (-3049.9786109070537));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.setFrameFromDiagonal((-3078.753450018), (-3078.753450018), 1764.548692738495, 1764.548692738495);
      boolean boolean0 = roundRectangle0.contains(1764.548692738495, 1764.548692738495, 1764.548692738495, 12.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle((-1447.937225297653), 2888.27460377, (-1256.182), 2162.8784, (-1447.937225297653), 2162.8784);
      AffineTransform affineTransform0 = new AffineTransform(0.0, 2162.8784, (-1447.937225297653), 791.727097212091);
      AbstractRoundRectangle.Iterator abstractRoundRectangle_Iterator0 = new AbstractRoundRectangle.Iterator(roundRectangle0, affineTransform0);
      boolean boolean0 = abstractRoundRectangle_Iterator0.isDone();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle((-730.9), (-730.9), (-730.9), (-730.9), (-730.9), (-730.9));
      RoundRectangle roundRectangle1 = roundRectangle0.clone();
      assertFalse(roundRectangle1.equals((Object)roundRectangle0));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      RoundRectangle roundRectangle1 = roundRectangle0.clone();
      assertEquals(0.0, roundRectangle1.arcHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(2.0, 2.0, 2.0, 2.0, 2.0, 2.0);
      RoundRectangle roundRectangle1 = roundRectangle0.clone();
      assertEquals(2.0, roundRectangle1.arcwidth, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(1016.9942, 1016.9942, 1016.9942, (-730.8992764101204), (-2869.1162792), 0.5);
      roundRectangle0.setFrame((-2869.1162792), 1.0, 1.0, 1016.9942);
      Rectangle rectangle0 = roundRectangle0.frame();
      boolean boolean0 = roundRectangle0.contains((IRectangle) rectangle0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(1736.427, 1736.427, 1736.427, 1736.427, 1736.427, 1736.427);
      boolean boolean0 = roundRectangle0.contains(3227.9, 2604.6405);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(4.9525554997875325, 4.9525554997875325, 4.9525554997875325, 4.9525554997875325, (-2039.20429418716), (-3049.9786109070537));
      boolean boolean0 = roundRectangle0.contains(4.9525554997875325, 4.9525554997875325);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(2.0, 2.0, 2.0, 2.0, (-2039.20429418716), (-3047.71090252168));
      boolean boolean0 = roundRectangle0.contains(2.0, (-2039.20429418716));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(1016.9942, 5244.93873139403, 5244.93873139403, (-730.8992764101204), (-2869.1162792), 0.5);
      roundRectangle0.setFrame((-2869.1162792), (-1267.267), 1.0, 1016.9942);
      boolean boolean0 = roundRectangle0.contains((-2868.6162792), 2509.2961865534);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(4.9525554997875325, 4.9525554997875325, 4.9525554997875325, 4.9525554997875325, (-2039.20429418716), (-3049.9786109070537));
      Point point0 = roundRectangle0.max();
      boolean boolean0 = roundRectangle0.contains((XY) point0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-730.9), (-730.9), (-730.9), (-730.9), (-730.9), (-730.9));
      RoundRectangle roundRectangle0 = new RoundRectangle();
      AbstractRoundRectangle.Iterator abstractRoundRectangle_Iterator0 = new AbstractRoundRectangle.Iterator(roundRectangle0, affineTransform0);
      assertFalse(abstractRoundRectangle_Iterator0.isDone());
      
      double[] doubleArray0 = new double[4];
      int int0 = abstractRoundRectangle_Iterator0.currentSegment(doubleArray0);
      assertArrayEquals(new double[] {(-730.9), (-730.9), 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(1736.427, 1736.427, 1736.427, 1736.427, 1736.427, 1736.427);
      AbstractRoundRectangle.Iterator abstractRoundRectangle_Iterator0 = new AbstractRoundRectangle.Iterator(roundRectangle0, (Transform) null);
      double[] doubleArray0 = new double[2];
      int int0 = abstractRoundRectangle_Iterator0.currentSegment(doubleArray0);
      assertArrayEquals(new double[] {2604.6405, 1736.427}, doubleArray0, 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(4516.6, 4516.6, 4516.6, 4516.6, 1182.7, (-0.5));
      IdentityTransform identityTransform0 = new IdentityTransform();
      AbstractRoundRectangle.Iterator abstractRoundRectangle_Iterator0 = new AbstractRoundRectangle.Iterator(roundRectangle0, identityTransform0);
      abstractRoundRectangle_Iterator0.next();
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        abstractRoundRectangle_Iterator0.currentSegment(doubleArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // Iterator out of bounds
         //
         verifyException("pythagoras.d.AbstractRoundRectangle$Iterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(2.0, 2.0, 2.0, 2.0, (-2039.20429418716), (-3047.71090252168));
      IdentityTransform identityTransform0 = new IdentityTransform();
      AbstractRoundRectangle.Iterator abstractRoundRectangle_Iterator0 = new AbstractRoundRectangle.Iterator(roundRectangle0, identityTransform0);
      assertFalse(abstractRoundRectangle_Iterator0.isDone());
      
      double[] doubleArray0 = new double[3];
      int int0 = abstractRoundRectangle_Iterator0.currentSegment(doubleArray0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle((-1256.182), 0.0, 1736.427, (-3363.56721), 1736.427, (-1240.73443377));
      PathIterator pathIterator0 = roundRectangle0.pathIterator((Transform) null);
      assertFalse(pathIterator0.isDone());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.setFrameFromCenter((-1.0), (-2513.9247), 38.01688696076981, 4556.59102624135);
      boolean boolean0 = roundRectangle0.intersects((-1.0), 0.0, 9.999999747378752E-6, 277.4138368);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(4.9525554997875325, 4.9525554997875325, 4.9525554997875325, 4.9525554997875325, (-2039.20429418716), (-3049.9786109070537));
      boolean boolean0 = roundRectangle0.intersects(4.9525554997875325, 838.4619021188, 1.2637021399699897, 4.9525554997875325);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(2.0, 2.0, 2.0, 2.0, (-2039.20429418716), (-3047.71090252168));
      boolean boolean0 = roundRectangle0.intersects((double) 4, (-3177.83404026), 2.0, 2.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(1736.427, 1736.427, 1736.427, 1736.427, 1736.427, 1736.427);
      boolean boolean0 = roundRectangle0.intersects(3.4028234663852886E38, 9.999999747378752E-6, 1016.9942, 2604.6405);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.setFrame(782.3995420512267, 0.0, 782.3995420512267, 782.3995420512267);
      boolean boolean0 = roundRectangle0.intersects(0.0, 782.3995420512267, 6.283185307179586, 6.283185307179586);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Vector vector0 = new Vector(0.0, 0.0);
      Vector vector1 = vector0.normalize(vector0);
      roundRectangle0.setFrameFromDiagonal((XY) vector0, (XY) vector1);
      boolean boolean0 = roundRectangle0.intersects(Double.NaN, Double.NaN, Double.NaN, 0.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.setFrameFromDiagonal(0.0, 0.5, (-3047.71090252168), 912.8);
      boolean boolean0 = roundRectangle0.intersects((-0.5), (-3047.71090252168), 0.0, 2.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      boolean boolean0 = roundRectangle0.intersects(3714.08, 1736.427, (-792.8), (-1489.412));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Vector vector0 = new Vector(0.0, 0.0);
      Vector vector1 = vector0.normalize(vector0);
      roundRectangle0.setFrameFromDiagonal((XY) vector0, (XY) vector1);
      boolean boolean0 = roundRectangle0.contains(0.0, Double.NaN, Double.NaN, 0.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(2.0, 2.0, 2.0, 2.0, (-2039.20429418716), (-3047.71090252168));
      boolean boolean0 = roundRectangle0.contains((-2820.2849413716153), (-2039.20429418716), (-349.4305443769242), 9.999999747378752E-6);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      boolean boolean0 = roundRectangle0.contains(0.0, (-1.0), (-0.5), 9.999999747378752E-6);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(1735.7232046249558, 1735.7232046249558, 1735.7232046249558, 1735.7232046249558, 1735.7232046249558, 1735.7232046249558);
      Point point0 = new Point(2034.8599648939824, 4680.65336220838);
      AffineTransform affineTransform0 = new AffineTransform(1735.7232046249558, 1735.7232046249558, 6.283185307179586, 9.999999747378752E-6);
      Vector vector0 = affineTransform0.translation();
      roundRectangle0.setFrameFromDiagonal((XY) vector0, (XY) point0);
      boolean boolean0 = roundRectangle0.contains(754.535998777167, 16.656909999999748);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(1736.427, 1736.427, 1736.427, 1736.427, 1736.427, 1736.427);
      roundRectangle0.setFrame(1736.427, 1736.427, 1736.427, 2006.4109);
      boolean boolean0 = roundRectangle0.contains(1736.427, 3472.854);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(4, 4, 2403.362092347071, 1766.548692738495, 1534.894416453102, 4);
      boolean boolean0 = roundRectangle0.intersects(1764.548692738495, 0.0, Double.NaN, 1766.548692738495);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(2.0, 2.0, 2.0, 2.0, (-2039.20429418716), (-3047.71090252168));
      boolean boolean0 = roundRectangle0.contains(2.0, 2.0, 1.0, 2.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.setFrameFromCenter(5519.1, 5519.1, (-441.279), (-2759.55));
      boolean boolean0 = roundRectangle0.contains((-441.279), (-441.279), 1929.269039, 3472.854);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(1736.427, 1736.427, 1736.427, 1736.427, 1736.427, 1736.427);
      boolean boolean0 = roundRectangle0.contains(9.999999747378752E-6, (-278.6));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      boolean boolean0 = roundRectangle0.contains(0.0, (double) 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      AffineTransform affineTransform0 = new AffineTransform();
      AbstractRoundRectangle.Iterator abstractRoundRectangle_Iterator0 = new AbstractRoundRectangle.Iterator(roundRectangle0, affineTransform0);
      int int0 = abstractRoundRectangle_Iterator0.windingRule();
      assertEquals(1, int0);
  }
}
