/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 03:23:53 GMT 2022
 */

package pythagoras.d;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.DoubleBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.d.Box;
import pythagoras.d.IBox;
import pythagoras.d.IMatrix4;
import pythagoras.d.IRay3;
import pythagoras.d.IVector3;
import pythagoras.d.Matrix3;
import pythagoras.d.Matrix4;
import pythagoras.d.Plane;
import pythagoras.d.Ray3;
import pythagoras.d.Vector3;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Box_ESTest extends Box_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Plane plane0 = Plane.XZ_PLANE;
      Vector3 vector3_0 = plane0._normal;
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      Box box0 = Box.MAX_VALUE;
      box0.intersection(ray3_0, ray3_0.direction);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      Plane plane0 = Plane.XZ_PLANE;
      Vector3 vector3_0 = plane0._normal;
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      box0.intersection(ray3_0, ray3_0.origin);
      Vector3 vector3_1 = box0.vertex((-526), vector3_0);
      box0.center();
      Matrix3 matrix3_0 = Matrix3.IDENTITY;
      Vector3 vector3_2 = matrix3_0.transformLocal(ray3_0.origin);
      box0.intersection(ray3_0, vector3_2);
      Matrix4 matrix4_0 = new Matrix4();
      box0.toString();
      Box box1 = new Box(vector3_1, vector3_2);
      box0.hashCode();
      Ray3 ray3_1 = new Ray3(vector3_1, vector3_2);
      Box box2 = Box.UNIT;
      Ray3 ray3_2 = new Ray3(ray3_1);
      Ray3 ray3_3 = new Ray3(ray3_1.direction, ray3_1.origin);
      Ray3 ray3_4 = new Ray3();
      Box box3 = Box.UNIT;
      box2.intersectionY(ray3_0, 901.499834);
      Box box4 = Box.MAX_VALUE;
      box1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      Plane plane0 = Plane.XZ_PLANE;
      Vector3 vector3_0 = plane0._normal;
      Ray3 ray3_0 = new Ray3();
      box0.intersection(ray3_0, ray3_0.origin);
      box0.vertex((-2146912508), ray3_0.direction);
      plane0.fromPointNormal(ray3_0.direction, vector3_0);
      Box box1 = new Box(box0);
      box1.contains(843.231966, (-3.4737622630147174E77), (double) (-2146912508));
      box0.diagonalLength();
      box0.vertex((-396), vector3_0);
      Box box2 = box1.expandLocal(3.1415826535900457, 0.0, 2880.228);
      Box box3 = box2.addLocal((IVector3) ray3_0.origin);
      box3.center(ray3_0.direction);
      box0.intersectsY(ray3_0, 1.7014117331926443E38);
      Matrix4 matrix4_0 = new Matrix4();
      box2.project((IMatrix4) matrix4_0, box0);
      box2.intersectionX(ray3_0, 1.7014117331926443E38);
      // Undeclared exception!
      try { 
        box1.project((IMatrix4) null, box2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Ray3 ray3_0 = new Ray3();
      Plane plane0 = Plane.XZ_PLANE;
      Vector3 vector3_0 = plane0._normal;
      Ray3 ray3_1 = new Ray3(ray3_0.direction, vector3_0);
      Box box0 = Box.ZERO;
      IVector3[] iVector3Array0 = new IVector3[3];
      iVector3Array0[0] = (IVector3) ray3_0.origin;
      iVector3Array0[1] = (IVector3) vector3_0;
      iVector3Array0[2] = (IVector3) ray3_1.origin;
      Box box1 = box0.EMPTY.fromPoints(iVector3Array0);
      box1.intersectsY(ray3_1, 0.0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Box box0 = Box.ZERO;
      Matrix3 matrix3_0 = new Matrix3(0.5, 1162.2127518, 1162.2127518, 0.0, 0.0, 1036.90772, 1036.90772, 9.999999747378752E-6, (-1.5322147821894843E36));
      Vector3 vector3_0 = (Vector3)Vector3.UNIT_Y;
      Vector3 vector3_1 = matrix3_0.transform((IVector3) vector3_0);
      Ray3 ray3_0 = new Ray3(vector3_1, vector3_1);
      box0.intersection(ray3_0, vector3_1);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Box box0 = new Box();
      double[] doubleArray0 = new double[8];
      doubleArray0[1] = 9.999999747378752E-6;
      Vector3 vector3_0 = new Vector3(doubleArray0);
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      box0.ZERO.intersection(ray3_0, ray3_0.origin);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Box box0 = Box.EMPTY;
      Vector3 vector3_0 = new Vector3(0.0, 0.0, 0.0);
      Vector3 vector3_1 = new Vector3(9.999999747378752E-6, 0.9999900000002526, 263.965776187);
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_1);
      box0.intersection(ray3_0, vector3_0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      Plane plane0 = new Plane(9.999999747378752E-6, 9.999999747378752E-6, (-573.06), 9.999999747378752E-6);
      Vector3 vector3_0 = plane0._normal;
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      box0.intersects((IRay3) ray3_0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Box box0 = new Box();
      DoubleBuffer doubleBuffer0 = DoubleBuffer.allocate(68);
      Matrix4 matrix4_0 = new Matrix4(doubleBuffer0);
      Vector3 vector3_0 = new Vector3(1.0672475481154984E38, 1134.251880629, (-4070.25513003));
      Box box1 = new Box(vector3_0, vector3_0);
      box0.intersects((IBox) box1);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Box box0 = new Box();
      Ray3 ray3_0 = new Ray3();
      Matrix4 matrix4_0 = new Matrix4();
      Box box1 = box0.EMPTY.projectLocal(matrix4_0);
      Box box2 = new Box(ray3_0.origin, ray3_0.origin);
      box1.intersects((IBox) box2);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      Ray3 ray3_0 = new Ray3();
      box0.MAX_VALUE.toString();
      box0.intersects((IRay3) ray3_0);
      Box box1 = box0.add((IBox) box0, box0);
      box0.intersectsX(ray3_0, 1040.6374698318727);
      Box box2 = new Box(ray3_0.direction, ray3_0.direction);
      box0.ZERO.intersection(ray3_0, ray3_0.origin);
      box1.extentDistance(box2);
      ray3_0.toString();
      box1.intersects((IBox) box0);
      box1.set((IBox) box0);
      box1.setToEmpty();
      box2.EMPTY.expand(0.0, (-3331.4877878015), (-2568.1));
      Box box3 = box0.set((IVector3) ray3_0.origin, (IVector3) ray3_0.direction);
      box3.MAX_VALUE.expandLocal(0.0, 0.0, 526.8164805705135);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-3331.4877878015);
      doubleArray0[1] = (-3331.4877878015);
      doubleArray0[6] = (-966.4958911537);
      doubleArray0[5] = (-3331.4877878015);
      Matrix4 matrix4_0 = null;
      try {
        matrix4_0 = new Matrix4(doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 8 out of bounds for length 8
         //
         verifyException("pythagoras.d.Matrix4", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      Matrix4 matrix4_0 = new Matrix4((-3210.314578176316), 1530.421, 2559.78192, 2559.78192, 0.0, 474.0302999954985, (-3210.314578176316), 1530.421, 474.0302999954985, 0.0, 9.999999747378752E-5, 0.0, 1948.54, (-3210.314578176316), (-215.0), 0.5685925697121761);
      box0.project((IMatrix4) matrix4_0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Box box0 = Box.EMPTY;
      Vector3 vector3_0 = (Vector3)Vector3.MAX_VALUE;
      box0.vertex(0, vector3_0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      Ray3 ray3_0 = new Ray3();
      Vector3 vector3_0 = box0.MAX_VALUE.center();
      box0.set((IVector3) ray3_0.origin, (IVector3) vector3_0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      Ray3 ray3_0 = new Ray3();
      Vector3 vector3_0 = box0.center();
      Vector3 vector3_1 = new Vector3(ray3_0.direction);
      Box box1 = box0.addLocal((IVector3) vector3_0);
      Vector3 vector3_2 = box0.vertex((-526), ray3_0.direction);
      Vector3 vector3_3 = box0.center();
      Vector3 vector3_4 = new Vector3(2451.3, (-1173.542276769139), Double.POSITIVE_INFINITY);
      box0.intersection(ray3_0, vector3_4);
      Matrix4 matrix4_0 = new Matrix4();
      box1.vertex((-526), ray3_0.direction);
      Box box2 = box1.expandLocal(1.0, 8.626220139631296E79, 0.0);
      Vector3 vector3_5 = matrix4_0.extractScale(vector3_2);
      Box box3 = box2.addLocal((IVector3) vector3_5);
      box0.center(vector3_2);
      Box box4 = Box.ZERO;
      Box box5 = Box.ZERO;
      Box box6 = box1.add((IBox) box5, box4);
      box6.EMPTY.set((IVector3) vector3_3, (IVector3) vector3_1);
      Box box7 = new Box(box3);
      box5.intersects((IRay3) ray3_0);
      box7.expand(1.0, (-1173.542276769139), 1.7014117331926443E38, box6);
      box2.center();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Matrix4 matrix4_0 = new Matrix4();
      Vector3 vector3_0 = (Vector3)Vector3.UNIT_X;
      Box box0 = new Box(vector3_0, vector3_0);
      Box box1 = box0.EMPTY.expand(1.0, 0.0, 1.0);
      box1.project((IMatrix4) matrix4_0, box0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Box box0 = Box.UNIT;
      box0.minimumExtent();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Box box0 = Box.ZERO;
      box0.minimumExtent();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      Box box1 = box0.ZERO.expandLocal((-0.9999900000002526), (-0.9999900000002526), 4029.6086);
      box1.maximumExtent();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Box box0 = Box.ZERO;
      box0.maximumExtent();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Box box0 = Box.ZERO;
      box0.longestEdge();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Ray3 ray3_0 = new Ray3();
      Plane plane0 = Plane.XZ_PLANE;
      Vector3 vector3_0 = plane0._normal;
      Ray3 ray3_1 = new Ray3(ray3_0.direction, vector3_0);
      Box box0 = Box.ZERO;
      box0.intersectsY(ray3_1, 0.0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      Ray3 ray3_0 = new Ray3();
      Vector3 vector3_0 = box0.center();
      Vector3 vector3_1 = new Vector3(ray3_0.direction);
      Box box1 = box0.addLocal((IVector3) vector3_0);
      box0.vertex((-526), ray3_0.direction);
      box0.center();
      Box box2 = box1.MAX_VALUE.add((IBox) box0, box0);
      box2.add((IVector3) vector3_1, box1);
      Vector3 vector3_2 = new Vector3(2451.3, (-1173.542276769139), Double.POSITIVE_INFINITY);
      box0.intersection(ray3_0, vector3_2);
      Matrix4 matrix4_0 = new Matrix4();
      Box box3 = new Box(vector3_2, ray3_0.direction);
      box0.vertex(312, vector3_1);
      assertEquals((-3.4028234663852886E38), vector3_1.y, 0.01);
      
      Vector3 vector3_3 = box1.center(ray3_0.origin);
      Box box4 = Box.ZERO;
      box1.center();
      box3.intersectsZ(ray3_0, 1.7014117331926443E38);
      box1.intersectsX(ray3_0, 1.7014117331926443E38);
      assertNotSame(vector3_0, vector3_3);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Box box0 = Box.UNIT;
      Vector3 vector3_0 = box0._minExtent;
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      double double0 = box0.intersectionZ(ray3_0, (-1.0));
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Box box0 = new Box();
      Vector3 vector3_0 = box0._minExtent;
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      double double0 = box0.intersectionY(ray3_0, 3.4028234663852886E38);
      assertTrue(box0.isEmpty());
      assertEquals(3.4028234663852886E38, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      Plane plane0 = Plane.XZ_PLANE;
      Vector3 vector3_0 = box0._maxExtent;
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      box0.intersection(ray3_0, ray3_0.origin);
      Vector3 vector3_1 = box0.vertex((-2146912508), ray3_0.direction);
      plane0.fromPointNormal(ray3_0.direction, vector3_0);
      Box box1 = new Box(box0);
      box1.contains(843.231966, (-3.4737622630147174E77), (double) (-2146912508));
      box0.diagonalLength();
      Box box2 = new Box(ray3_0.direction, vector3_1);
      String string0 = box1.toString();
      assertEquals("[min=[0.0, 0.0, -1.0], max=[0.0, 0.0, 0.0]]", string0);
      
      box1.hashCode();
      Ray3 ray3_1 = new Ray3(vector3_0, ray3_0.origin);
      Box box3 = Box.UNIT;
      Ray3 ray3_2 = new Ray3(ray3_0);
      box2.intersectionX(ray3_2, 3.4028234663852886E38);
      Object object0 = new Object();
      Object object1 = new Object();
      Box box4 = new Box(box2);
      Object object2 = new Object();
      box3.equals(object2);
      Box box5 = Box.EMPTY;
      box5.vertex((-2146912508), vector3_1);
      box5.intersects((IBox) box4);
      Box box6 = Box.MAX_VALUE;
      assertEquals(1.0, box6.diagonalLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Matrix4 matrix4_0 = new Matrix4();
      Matrix3 matrix3_0 = new Matrix3();
      Box box0 = new Box();
      Box box1 = box0.EMPTY.expand(1.0, 0.0, 1.0);
      Box box2 = Box.UNIT;
      box1.EMPTY.intersectLocal(box2);
      assertFalse(box2.isEmpty());
      
      Ray3 ray3_0 = new Ray3();
      Ray3 ray3_1 = new Ray3(ray3_0);
      Box box3 = box0.project((IMatrix4) matrix4_0);
      box3.UNIT.intersectLocal(box1);
      double double0 = box1.longestEdge();
      assertEquals((-3.4028234663852886E38), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Box box0 = Box.ZERO;
      box0.isEmpty();
      Box box1 = Box.EMPTY;
      Box box2 = Box.UNIT;
      Box box3 = box0.intersect((IBox) box1, box2);
      Vector3 vector3_0 = new Vector3(9.999999747378752E-6, 3628.29, 9.999999747378752E-6);
      Vector3 vector3_1 = new Vector3(vector3_0);
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_1);
      Ray3 ray3_1 = new Ray3(ray3_0);
      box3.intersects((IRay3) ray3_1);
      double double0 = box1.intersectionX(ray3_0, 9.999999747378752E-6);
      assertEquals(4.812319096523503E38, box1.diagonalLength(), 0.01);
      assertEquals(3.4028234663852886E38, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Box box0 = Box.EMPTY;
      Box box1 = Box.UNIT;
      assertEquals(1.0208470399155866E39, box1.diagonalLength(), 0.01);
      
      Box box2 = box0.ZERO.intersect((IBox) box1, box1);
      assertSame(box1, box2);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Box box0 = Box.EMPTY;
      Box box1 = box0.UNIT.intersect((IBox) box0, box0);
      assertSame(box1, box0);
      assertEquals(5.8938631329669654E38, box0.diagonalLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Box box0 = Box.EMPTY;
      Vector3 vector3_0 = box0.center();
      Box box1 = Box.ZERO;
      Box box2 = box0.ZERO.add((IVector3) vector3_0, box1);
      IVector3[] iVector3Array0 = new IVector3[3];
      iVector3Array0[0] = (IVector3) vector3_0;
      iVector3Array0[1] = (IVector3) vector3_0;
      iVector3Array0[2] = (IVector3) vector3_0;
      box2.MAX_VALUE.fromPoints(iVector3Array0);
      Ray3 ray3_0 = new Ray3();
      Vector3 vector3_1 = box0.ZERO.vertex(31, vector3_0);
      box0.intersectionZ(ray3_0, 0.0);
      box0.intersectsZ(ray3_0, Double.NaN);
      Box box3 = new Box(ray3_0.origin, ray3_0.origin);
      Vector3 vector3_2 = box3.UNIT.vertex(31, ray3_0.origin);
      Box box4 = box3.UNIT.intersect((IBox) box0);
      Box box5 = Box.EMPTY;
      Box box6 = box0.add((IBox) box3, box5);
      box4.center();
      box6.intersection(ray3_0, vector3_2);
      Plane plane0 = new Plane();
      Vector3 vector3_3 = plane0._v2;
      box4.vertex((-3596), vector3_3);
      assertFalse(box0.isEmpty());
      assertFalse(vector3_3.equals((Object)vector3_1));
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Box box0 = Box.EMPTY;
      IVector3[] iVector3Array0 = new IVector3[0];
      Box box1 = box0.fromPoints(iVector3Array0);
      assertTrue(box1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Box box0 = new Box();
      double double0 = box0.extentDistance(box0);
      assertEquals(0.0, double0, 0.01);
      assertTrue(box0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Box box0 = new Box();
      Plane plane0 = Plane.XZ_PLANE;
      Vector3 vector3_0 = plane0._normal;
      Vector3 vector3_1 = new Vector3(2.0, 273.472938107, (-2451.3));
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_1);
      box0.intersection(ray3_0, vector3_1);
      box0.vertex((-1149), ray3_0.direction);
      plane0.fromPointNormal(ray3_0.direction, vector3_1);
      box0.contains((-1.5707963267948966), 2.0, 1.323452546941563);
      box0.diagonalLength();
      Box box1 = box0.setToEmpty();
      Box box2 = box1.add((IVector3) vector3_0);
      Vector3 vector3_2 = new Vector3(ray3_0.origin);
      Ray3 ray3_1 = new Ray3(ray3_0.direction, vector3_2);
      box2.intersectsZ(ray3_0, 1.0);
      box0.expand((-1.0), (-3086.5387835528), (-2451.3), box1);
      boolean boolean0 = box2.isEmpty();
      assertEquals((-2451.3), vector3_0.z, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Box box0 = Box.ZERO;
      Box box1 = box0.expand(9.999999747378752E-5, (-795.0), (-2059.8351256651), box0);
      box1.maximumExtent();
      assertTrue(box0.isEmpty());
      assertEquals(4415.855860384833, box0.diagonalLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Ray3 ray3_0 = new Ray3();
      Box box0 = Box.ZERO;
      boolean boolean0 = box0.contains((IVector3) ray3_0.origin);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Box box0 = Box.UNIT;
      Vector3 vector3_0 = (Vector3)Vector3.MAX_VALUE;
      box0.center(vector3_0);
      assertEquals(0.0, box0.diagonalLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Vector3 vector3_0 = new Vector3((-0.010268188918483452), (-1401.5408743965), (-0.010268188918483452));
      Ray3 ray3_0 = new Ray3();
      Box box0 = new Box(ray3_0.origin, vector3_0);
      Vector3 vector3_1 = box0.center();
      assertEquals((-0.010268188918483452), box0.longestEdge(), 0.01);
      assertEquals((-0.005134094459241726), vector3_1.z, 0.01);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Box box0 = Box.EMPTY;
      Vector3 vector3_0 = box0.ZERO.center();
      Box box1 = box0.ZERO.addLocal((IVector3) vector3_0);
      assertEquals(1.1787726265933931E39, box0.diagonalLength(), 0.01);
      assertEquals(0.0, vector3_0.z, 0.01);
      assertEquals(0.0, box1.diagonalLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Box box0 = Box.EMPTY;
      Box box1 = new Box();
      Box box2 = box0.addLocal((IBox) box1);
      assertEquals((-6.805646932770577E38), box2.longestEdge(), 0.01);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      DoubleBuffer doubleBuffer0 = DoubleBuffer.allocate(32);
      Matrix4 matrix4_0 = new Matrix4(doubleBuffer0);
      Vector3 vector3_0 = box0._maxExtent;
      Vector3 vector3_1 = box0._minExtent;
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_1);
      boolean boolean0 = box0.intersection(ray3_0, ray3_0.origin);
      assertTrue(boolean0);
      
      Box box1 = new Box(box0);
      Box box2 = box1.add((IBox) box0);
      assertTrue(box2.equals((Object)box1));
      
      Box box3 = box0.add((IVector3) vector3_1, box1);
      assertNotSame(box3, box2);
      assertNotSame(box0, box2);
      assertSame(box3, box1);
      assertEquals((-3.4028234663852886E38), vector3_1.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Box box0 = Box.EMPTY;
      Vector3 vector3_0 = box0._maxExtent;
      Box box1 = box0.add((IVector3) vector3_0);
      assertEquals((-6.805646932770577E38), box0.longestEdge(), 0.01);
      assertEquals(0.0, box1.diagonalLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      // Undeclared exception!
      try { 
        box0.vertex(1849670791, (Vector3) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Box box0 = new Box();
      // Undeclared exception!
      try { 
        box0.set((IBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Box box0 = Box.ZERO;
      // Undeclared exception!
      try { 
        box0.projectLocal((IMatrix4) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Box box0 = new Box();
      // Undeclared exception!
      try { 
        box0.project((IMatrix4) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Box box0 = Box.EMPTY;
      // Undeclared exception!
      try { 
        box0.intersectsZ((IRay3) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Box box0 = Box.EMPTY;
      // Undeclared exception!
      try { 
        box0.intersectsY((IRay3) null, 1.6990165933092861E38);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Box box0 = Box.ZERO;
      // Undeclared exception!
      try { 
        box0.intersects((IRay3) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Box box0 = Box.EMPTY;
      // Undeclared exception!
      try { 
        box0.intersects((IBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Box box0 = new Box();
      // Undeclared exception!
      try { 
        box0.intersectionZ((IRay3) null, (-484.15961552021105));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Box box0 = Box.EMPTY;
      // Undeclared exception!
      try { 
        box0.intersectionY((IRay3) null, (-588.096695));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Box box0 = new Box();
      // Undeclared exception!
      try { 
        box0.intersectionX((IRay3) null, (-3583.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      Vector3 vector3_0 = box0._minExtent;
      // Undeclared exception!
      try { 
        box0.intersection((IRay3) null, vector3_0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Box box0 = new Box();
      // Undeclared exception!
      try { 
        box0.intersectLocal((IBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Box box0 = new Box();
      // Undeclared exception!
      try { 
        box0.intersect((IBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      // Undeclared exception!
      try { 
        box0.contains((IBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Box box0 = new Box();
      // Undeclared exception!
      try { 
        box0.center((Vector3) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Vector3", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Box box0 = new Box();
      // Undeclared exception!
      try { 
        box0.add((IBox) null, box0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      // Undeclared exception!
      try { 
        box0.add((IBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Box box0 = null;
      try {
        box0 = new Box((IVector3) null, (IVector3) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Vector3", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Box box0 = null;
      try {
        box0 = new Box((IBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Box box0 = new Box();
      Plane plane0 = Plane.XZ_PLANE;
      Vector3 vector3_0 = plane0._normal;
      Vector3 vector3_1 = new Vector3(2.0, 273.472938107, (-2451.3));
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_1);
      box0.addLocal((IVector3) ray3_0.direction);
      boolean boolean0 = box0.intersection(ray3_0, vector3_1);
      assertFalse(box0.isEmpty());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Box box0 = Box.EMPTY;
      Box box1 = Box.ZERO;
      boolean boolean0 = box0.intersects((IBox) box1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Box box0 = Box.UNIT;
      double[] doubleArray0 = new double[7];
      Vector3 vector3_0 = (Vector3)Vector3.MIN_VALUE;
      Matrix4 matrix4_0 = new Matrix4((-544.99605748), (-544.99605748), (-544.99605748), (-544.99605748), (-1416.888827955456), 2134.7826367748, (-1416.888827955456), (-1416.888827955456), 925.7203728, 0.5, 925.7203728, 3252.98, (-1446.00052146), 925.7203728, (-2968.0), (-1716.488));
      Vector3 vector3_1 = new Vector3(3252.98, 925.7203728, (-544.99605748));
      Vector3 vector3_2 = matrix4_0.transformVectorLocal(vector3_1);
      Box box1 = new Box(vector3_0, vector3_2);
      boolean boolean0 = box0.contains((IBox) box1);
      assertFalse(boolean0);
      assertEquals(5.8938631329669654E38, box1.diagonalLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Ray3 ray3_0 = new Ray3();
      Plane plane0 = Plane.XZ_PLANE;
      Vector3 vector3_0 = plane0._normal;
      Box box0 = Box.ZERO;
      Box box1 = new Box(ray3_0.direction, vector3_0);
      boolean boolean0 = box0.contains((IBox) box1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Matrix4 matrix4_0 = new Matrix4();
      Vector3 vector3_0 = (Vector3)Vector3.UNIT_Z;
      Box box0 = new Box(vector3_0, vector3_0);
      Box box1 = Box.ZERO;
      box1.EMPTY.set((IBox) box0);
      boolean boolean0 = box0.contains((IBox) box1);
      assertFalse(boolean0);
      
      String string0 = box0.toString();
      assertEquals("[min=[0.0, 0.0, 1.0], max=[0.0, 0.0, 1.0]]", string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Box box0 = Box.ZERO;
      boolean boolean0 = box0.contains(0.0, 0.0, 1.5707963267948966);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Box box0 = Box.ZERO;
      boolean boolean0 = box0.contains(0.0, 1.0, 0.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Box box0 = Box.EMPTY;
      boolean boolean0 = box0.contains(3.4028234663852886E38, 3.4028234663852886E38, (-2.0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Box box0 = Box.EMPTY;
      boolean boolean0 = box0.contains(3.4028234663852886E38, 3.4028234663852886E38, 3.4028234663852886E38);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      assertTrue(box0.isEmpty());
      
      Matrix4 matrix4_0 = new Matrix4();
      box0.MAX_VALUE.project((IMatrix4) matrix4_0, box0);
      assertEquals(6.947524526029435E77, box0.longestEdge(), 0.01);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Box box0 = Box.EMPTY;
      Box box1 = box0.ZERO.expandLocal((-3.4028234663852886E38), (-837.4658), (-3.4028234663852886E38));
      boolean boolean0 = box1.isEmpty();
      assertEquals(1.4832563612682247E39, box1.diagonalLength(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      // Undeclared exception!
      try { 
        box0.set((IVector3) null, (IVector3) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Vector3", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      IVector3 iVector3_0 = box0.maximumExtent();
      assertEquals(3.4028234663852886E38, iVector3_0.x(), 0.01);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Box box0 = new Box();
      // Undeclared exception!
      try { 
        box0.addLocal((IVector3) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Box box0 = Box.EMPTY;
      Plane plane0 = new Plane((-1.0), (-3.141592653589793), 145.31480774, (-1.0));
      Vector3 vector3_0 = plane0._v1;
      boolean boolean0 = box0.contains((IVector3) vector3_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Box box0 = new Box();
      // Undeclared exception!
      try { 
        box0.expand(3.1415826535900457, 3.1415826535900457, 3.1415826535900457, (Box) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Box box0 = new Box();
      // Undeclared exception!
      try { 
        box0.intersect((IBox) null, box0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Box box0 = new Box();
      // Undeclared exception!
      try { 
        box0.add((IVector3) null, box0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Box box0 = Box.EMPTY;
      Vector3 vector3_0 = (Vector3)box0.minimumExtent();
      assertEquals(3.4028234663852886E38, vector3_0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Ray3 ray3_0 = new Ray3();
      Plane plane0 = Plane.XZ_PLANE;
      Vector3 vector3_0 = plane0._normal;
      Ray3 ray3_1 = new Ray3(ray3_0.direction, vector3_0);
      Plane plane1 = new Plane(ray3_0.direction, 0.0);
      Box box0 = new Box(ray3_1.direction, vector3_0);
      Matrix4 matrix4_0 = new Matrix4(0.0, 0.0, 0.0, 676.982, 2019.7030422, (-1806.0), 0.0, -0.0, (-691.867018551426), 1550.49198, (-1100.8), 0.0, 1411.6293284132885, (-1190.6275882969965), (-691.867018551426), 0.0);
      Box box1 = box0.project((IMatrix4) matrix4_0);
      box1.center(ray3_1.origin);
      box1.vertex(10, ray3_0.direction);
      boolean boolean0 = box0.intersection(ray3_0, vector3_0);
      assertEquals(0.0034721633414153672, vector3_0.x, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      Ray3 ray3_0 = new Ray3();
      Box box1 = box0.expandLocal(1.7014117331926443E38, (-0.9999900000002526), 0.0);
      box1.center(ray3_0.direction);
      boolean boolean0 = box1.intersection(ray3_0, ray3_0.origin);
      //  // Unstable assertion: assertEquals(3.4028234663852886E38, box1.diagonalLength(), 0.01);
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Box box0 = Box.EMPTY;
      Vector3 vector3_0 = new Vector3(1011.545128815, 59.87311893032288, 1011.545128815);
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      boolean boolean0 = box0.intersects((IRay3) ray3_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Box box0 = Box.UNIT;
      Vector3 vector3_0 = new Vector3(0.0, 0.5773502691896258, 583.0592229116744);
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      boolean boolean0 = box0.intersectsY(ray3_0, 801.4313);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Plane plane0 = Plane.XZ_PLANE;
      Vector3 vector3_0 = plane0._normal;
      Matrix4 matrix4_0 = new Matrix4(1.0, 1138.39129, 0.0, 1.0124661185232064, (-1203.6590892305665), (-2197.7588), 0.0, 1412.3504, (-2197.7588), 3111819.5114515587, 9.999999747378752E-6, (-380.540442), 1.0124661185232064, (-1053.21255714796), (-7089.805584675194), 0.0);
      matrix4_0.m33 = 9.999999747378752E-6;
      Vector3 vector3_1 = matrix4_0.transformPointLocal(vector3_0);
      matrix4_0.projectPointLocal(vector3_1);
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      Box box0 = Box.UNIT;
      boolean boolean0 = box0.intersects((IRay3) ray3_0);
      //  // Unstable assertion: assertEquals(4.048121234852747E-5, vector3_0.x, 0.01);
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      Vector3 vector3_0 = new Vector3(1.7014117331926443E38, 1.7014117331926443E38, 1488.7252034085);
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      boolean boolean0 = box0.intersects((IRay3) ray3_0);
      //  // Unstable assertion: assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Box box0 = new Box();
      Box box1 = box0.EMPTY.expand(1.0, 0.0, 1.0);
      boolean boolean0 = box1.equals(box0);
      assertEquals((-6.805646932770577E38), box1.longestEdge(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Box box0 = Box.ZERO;
      boolean boolean0 = box0.equals(box0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      Plane plane0 = Plane.XY_PLANE;
      Vector3 vector3_0 = plane0._normal;
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      boolean boolean0 = box0.intersects((IRay3) ray3_0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Vector3 vector3_0 = new Vector3(0.0, 0.0, 2.0);
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      Box box0 = new Box(ray3_0.origin, vector3_0);
      boolean boolean0 = box0.intersects((IRay3) ray3_0);
      assertEquals(0.0, box0.diagonalLength(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Box box0 = Box.UNIT;
      Vector3 vector3_0 = box0._maxExtent;
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      boolean boolean0 = box0.intersects((IRay3) ray3_0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      Ray3 ray3_0 = new Ray3();
      Box box1 = box0.expandLocal(1.7014117331926443E38, (-0.9999900000002526), 0.0);
      box1.center(ray3_0.direction);
      boolean boolean0 = box0.intersects((IRay3) ray3_0);
      assertEquals(1.0208470399155866E39, box0.longestEdge(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Box box0 = Box.ZERO;
      Vector3 vector3_0 = box0._maxExtent;
      Box box1 = new Box(vector3_0, vector3_0);
      Matrix4 matrix4_0 = new Matrix4(205.51547936, 0.0, (-1775.0), 0.0, 0.0, 0.0, 0.0, (-1801.47), 205.51547936, (-1667.6), 7.489660035620016E-4, 7.489660035620016E-4, 0.0, 9.999999747378752E-5, 7.489660035620016E-4, (-1801.47));
      box1.ZERO.projectLocal(matrix4_0);
      boolean boolean0 = box0.intersects((IBox) box1);
      assertEquals((-4.1575269283529654E-7), vector3_0.z, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Box box0 = Box.MAX_VALUE;
      boolean boolean0 = box0.contains((IBox) box0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Box box0 = Box.EMPTY;
      Vector3 vector3_0 = (Vector3)Vector3.NORMAL_XYZ;
      Box box1 = new Box(vector3_0, vector3_0);
      boolean boolean0 = box1.contains((IBox) box0);
      assertEquals(0.0, box1.longestEdge(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Box box0 = new Box();
      // Undeclared exception!
      try { 
        box0.addLocal((IBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Box box0 = new Box();
      // Undeclared exception!
      try { 
        box0.add((IVector3) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Box box0 = Box.EMPTY;
      Box box1 = box0.intersect((IBox) box0);
      assertTrue(box1.isEmpty());
      assertNotSame(box1, box0);
      assertTrue(box0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Box box0 = new Box();
      // Undeclared exception!
      try { 
        box0.extentDistance((IBox) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Box box0 = new Box();
      IVector3[] iVector3Array0 = new IVector3[1];
      // Undeclared exception!
      try { 
        box0.fromPoints(iVector3Array0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Box", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Box box0 = new Box();
      Box box1 = box0.intersectLocal(box0);
      assertSame(box1, box0);
      assertEquals((-6.805646932770577E38), box1.longestEdge(), 0.01);
  }
}
