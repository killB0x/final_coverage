/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 05:00:02 GMT 2022
 */

package pythagoras.d;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.d.IntersectPoint;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntersectPoint_ESTest extends IntersectPoint_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint((-1236), (-1236), 1665, 0, 0, 1665, 0, 1, 0, 1627.08189585169, (-1.0), (-1236));
      double double0 = intersectPoint0.y();
      assertEquals(0.0, intersectPoint0.x(), 0.01);
      assertEquals(1627.08189585169, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint((-1), (-1), (-1), 745, (-1), (-1));
      double double0 = intersectPoint0.y();
      assertEquals((-1.0), intersectPoint0.x(), 0.01);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint(0, 3187, 3187, 0, 0, (-3928.4263853));
      double double0 = intersectPoint0.x();
      assertEquals(0.0, double0, 0.01);
      assertEquals((-3928.4263853), intersectPoint0.y(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint((-1), (-1), (-1), 745, (-1), (-1));
      double double0 = intersectPoint0.x();
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-1.0), intersectPoint0.y(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint(2560, 1, 1, 2560, 1, (-1986), 1160, 1978, 2763.9758, 1978, 1978, 0.0);
      int int0 = intersectPoint0.ruleIndex(false);
      assertEquals(1978.0, intersectPoint0.y(), 0.01);
      assertEquals(2763.9758, intersectPoint0.x(), 0.01);
      assertEquals(1978, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint((-4826), (-4826), (-4826), (-4826), 0, (-4826), (-4826), (-3784), 0.0, 0.0, 3090.0, (-4826));
      int int0 = intersectPoint0.ruleIndex(false);
      assertEquals((-3784), int0);
      assertEquals(0.0, intersectPoint0.x(), 0.01);
      assertEquals(0.0, intersectPoint0.y(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint((-1236), (-1236), 1665, 0, 0, 1665, 0, 1, 0, 1627.08189585169, (-1.0), (-1236));
      int int0 = intersectPoint0.rule(true);
      assertEquals(0.0, intersectPoint0.x(), 0.01);
      assertEquals(1627.08189585169, intersectPoint0.y(), 0.01);
      assertEquals(1665, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint(0, (-1), 0, (-1), 1, (-1), (-1655), (-2781), (-1), 628.09207, 4109.1, (-1));
      int int0 = intersectPoint0.rule(false);
      assertEquals((-1.0), intersectPoint0.x(), 0.01);
      assertEquals((-1655), int0);
      assertEquals(628.09207, intersectPoint0.y(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint(1, (-149), 1, 0, 2987, 20, 20, 0, 0, 20, 0, 2987);
      double double0 = intersectPoint0.param(false);
      assertEquals(0.0, intersectPoint0.x(), 0.01);
      assertEquals(20.0, intersectPoint0.y(), 0.01);
      assertEquals(2987.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint((-1236), (-1236), 1665, 0, 0, 1665, 0, 1, 0, 1627.08189585169, (-1.0), (-1236));
      double double0 = intersectPoint0.param(false);
      assertEquals(1627.08189585169, intersectPoint0.y(), 0.01);
      assertEquals((-1236.0), double0, 0.01);
      assertEquals(0.0, intersectPoint0.x(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint(52, 0, 52, 0, 0, 0);
      intersectPoint0.setEndIndex1(52);
      int int0 = intersectPoint0.endIndex(true);
      assertEquals(52, int0);
      assertEquals(0.0, intersectPoint0.y(), 0.01);
      assertEquals(0.0, intersectPoint0.x(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint(52, 0, 52, 0, 0, 0);
      intersectPoint0.setBegIndex1(0);
      int int0 = intersectPoint0.begIndex(true);
      assertEquals(0.0, intersectPoint0.x(), 0.01);
      assertEquals(0.0, intersectPoint0.y(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint((-1), (-1), (-1), 745, (-1), (-1));
      int int0 = intersectPoint0.begIndex(false);
      assertEquals((-1.0), intersectPoint0.x(), 0.01);
      assertEquals((-1.0), intersectPoint0.y(), 0.01);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint(516, 1398, (-714), (-2920), (-714), (-714));
      int int0 = intersectPoint0.rule(true);
      assertEquals((-714.0), intersectPoint0.y(), 0.01);
      assertEquals((-714.0), intersectPoint0.x(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint(52, 0, 52, 0, 0, 0);
      double double0 = intersectPoint0.param(true);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, intersectPoint0.y(), 0.01);
      assertEquals(0.0, intersectPoint0.x(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint(0, (-1767), 3805, 0, 72.0947, 2113.9);
      int int0 = intersectPoint0.ruleIndex(true);
      assertEquals(2113.9, intersectPoint0.y(), 0.01);
      assertEquals(0, int0);
      assertEquals(72.0947, intersectPoint0.x(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint(52, 0, 52, 0, 0, 0);
      int int0 = intersectPoint0.endIndex(true);
      assertEquals(0.0, intersectPoint0.x(), 0.01);
      assertEquals(0, int0);
      assertEquals(0.0, intersectPoint0.y(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint(516, 1398, (-714), (-2920), (-714), (-714));
      int int0 = intersectPoint0.endIndex(false);
      assertEquals((-714.0), intersectPoint0.y(), 0.01);
      assertEquals((-714.0), intersectPoint0.x(), 0.01);
      assertEquals((-2920), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint(516, 1398, (-714), (-2920), (-714), (-714));
      int int0 = intersectPoint0.begIndex(true);
      assertEquals((-714.0), intersectPoint0.x(), 0.01);
      assertEquals(516, int0);
      assertEquals((-714.0), intersectPoint0.y(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint((-4826), (-4826), (-4826), (-4826), 0, (-4826), (-4826), (-3784), 0.0, 0.0, 3090.0, (-4826));
      intersectPoint0.setEndIndex2((-3784));
      assertEquals(0.0, intersectPoint0.x(), 0.01);
      assertEquals(0.0, intersectPoint0.y(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint(0, 0, 0, 0, 0, 0);
      double double0 = intersectPoint0.y();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, intersectPoint0.x(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint(4288, 4288, (-816), 4288, 1807.6, (-202.0));
      double double0 = intersectPoint0.x();
      assertEquals(1807.6, double0, 0.01);
      assertEquals((-202.0), intersectPoint0.y(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IntersectPoint intersectPoint0 = new IntersectPoint(1, 1, 1, 1, 1, 0, 0, 0, 1, (-1727.4888074710586), 0, 0);
      intersectPoint0.setBegIndex2(655);
      assertEquals((-1727.4888074710586), intersectPoint0.y(), 0.01);
      assertEquals(1.0, intersectPoint0.x(), 0.01);
  }
}
