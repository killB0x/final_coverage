/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 05:38:52 GMT 2022
 */

package pythagoras.d;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.d.AffineTransform;
import pythagoras.d.Dimension;
import pythagoras.d.IDimension;
import pythagoras.d.IPoint;
import pythagoras.d.IRectangle;
import pythagoras.d.Line;
import pythagoras.d.Point;
import pythagoras.d.Rectangle;
import pythagoras.d.Vector;
import pythagoras.d.XY;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Rectangle_ESTest extends Rectangle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0, 0.0, 1588.5892439261477, 1588.5892439261477);
      Point point0 = rectangle0.center();
      Rectangle rectangle1 = new Rectangle(point0);
      Rectangle rectangle2 = rectangle1.union(rectangle0);
      assertEquals(0.0, rectangle1.height, 0.01);
      assertTrue(rectangle2.equals((Object)rectangle0));
      assertEquals(0.0, rectangle1.width, 0.01);
      assertEquals(794.2946219630738, rectangle1.y, 0.01);
      assertEquals(0.0, rectangle2.x, 0.01);
      assertEquals(794.2946219630738, rectangle1.x, 0.01);
      assertEquals(0.0, rectangle2.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, (-2976.29), (-2976.29));
      Vector vector0 = affineTransform0.translation();
      Rectangle rectangle0 = new Rectangle(0.0, 0.0, 0.0, 0.0);
      Dimension dimension0 = new Dimension();
      Rectangle rectangle1 = new Rectangle(vector0, dimension0);
      rectangle1.setFrame(1.0, (-2411.0295), 0.0, 0.0);
      rectangle1.add((IRectangle) rectangle0);
      assertEquals((-2411.0295), rectangle1.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Point point0 = new Point(1.0, 1.0);
      Dimension dimension0 = new Dimension(1.0, 1.0);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      rectangle0.add((IRectangle) rectangle0);
      assertEquals(1.0, rectangle0.width(), 0.01);
      assertEquals(1.0, rectangle0.y, 0.01);
      assertEquals(1.0, rectangle0.x, 0.01);
      assertEquals(1.0, rectangle0.height(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, (-2976.29), (-2976.29));
      Vector vector0 = affineTransform0.translation();
      Rectangle rectangle0 = new Rectangle(0.0, 0.0, 0.0, 0.0);
      Dimension dimension0 = new Dimension();
      Rectangle rectangle1 = new Rectangle(vector0, dimension0);
      rectangle1.add((IRectangle) rectangle0);
      assertEquals(2976.29, rectangle1.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      rectangle0.add(9.999999747378752E-6, (-402.5697));
      assertEquals(9.999999747378752E-6, rectangle0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Line line0 = new Line(0.0, 1.0, (-2911.817507548125), 9.999999747378752E-6);
      Point point0 = new Point();
      Point point1 = line0.p2(point0);
      rectangle0.add((XY) point1);
      assertEquals((-2911.817507548125), rectangle0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      rectangle0.setSize(0.0, (-2165.322));
      assertEquals((-2165.322), rectangle0.height, 0.01);
      
      Point point0 = new Point();
      rectangle0.add((XY) point0);
      assertEquals(0.0, rectangle0.height(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      AffineTransform affineTransform0 = new AffineTransform(0.0, (-514.8879), 1342.805, 0.0);
      Point point0 = new Point();
      Point point1 = affineTransform0.transform((IPoint) point0, point0);
      rectangle0.add((XY) point1);
      rectangle0.add((-1.0), 0.0);
      assertEquals(1343.805, rectangle0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Dimension dimension0 = new Dimension();
      dimension0.setSize(478.621523, (-1.0));
      Rectangle rectangle0 = new Rectangle(dimension0);
      rectangle0.translate(0.0, 0.5);
      assertEquals(0.5, rectangle0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0, 874.67616, 874.67616, 0.0);
      rectangle0.translate(113.7, 0.5);
      assertEquals(113.7, rectangle0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(dimension0);
      rectangle0.grow((-1.0), (-28.968244));
      assertEquals(1.0, rectangle0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Line line0 = new Line();
      Rectangle rectangle0 = line0.bounds();
      rectangle0.setSize(0.0, (-591.08));
      rectangle0.grow(0.0, 0.0);
      assertEquals((-591.08), rectangle0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0, 874.67616, 874.67616, 0.0);
      rectangle0.grow(0.0, 0.0);
      assertEquals(0.0, rectangle0.x, 0.01);
      assertEquals(874.67616, rectangle0.width, 0.01);
      assertEquals(874.67616, rectangle0.y, 0.01);
      assertEquals(0.0, rectangle0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0, 0.0, 0.0, 0.0);
      rectangle0.add((-2976.29), 0.0);
      rectangle0.grow(0.0, 1319.6312102077);
      assertEquals((-1319.6312102077), rectangle0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      rectangle0.setBounds((-1230.7811123011752), 669.8484, (-1.0), (-1.0));
      Point point0 = new Point(0.0, 81.80514);
      rectangle0.setLocation((XY) point0);
      assertEquals(81.80514, rectangle0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Line line0 = new Line();
      Rectangle rectangle0 = line0.bounds();
      double double0 = rectangle0.y();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, rectangle0.height, 0.01);
      assertEquals(0.0, rectangle0.width, 0.01);
      assertEquals(0.0, rectangle0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Dimension dimension0 = new Dimension(1.0, 0.0);
      Rectangle rectangle0 = new Rectangle(dimension0);
      rectangle0.translate(9.999999747378752E-6, 1.0);
      double double0 = rectangle0.y();
      assertEquals(1.0, rectangle0.y, 0.01);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(297.4, (-262.2969), (-262.2969), (-262.2969));
      double double0 = rectangle0.y();
      assertEquals((-262.2969), double0, 0.01);
      assertEquals(297.4, rectangle0.x, 0.01);
      assertEquals((-262.2969), rectangle0.width, 0.01);
      assertEquals((-262.2969), rectangle0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0, 0.0, 0.0, 0.0);
      double double0 = rectangle0.x();
      assertEquals(0.0, rectangle0.y, 0.01);
      assertEquals(0.0, rectangle0.width, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, rectangle0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Point point0 = new Point();
      Line line0 = new Line(point0, point0);
      Rectangle rectangle0 = line0.bounds();
      rectangle0.setFrame(1377.1808, (-638.607461332261), 971.1275411366, (-1.0));
      double double0 = rectangle0.x();
      assertEquals(971.1275411366, rectangle0.width, 0.01);
      assertEquals(1377.1808, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0, 0.0, 0.0, 0.0);
      double double0 = rectangle0.width();
      assertEquals(0.0, rectangle0.x, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, rectangle0.height, 0.01);
      assertEquals(0.0, rectangle0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Point point0 = new Point();
      Line line0 = new Line(point0, point0);
      Rectangle rectangle0 = line0.bounds();
      rectangle0.setFrame(1377.1808, (-638.607461332261), 971.1275411366, (-1.0));
      double double0 = rectangle0.width();
      assertEquals((-638.607461332261), rectangle0.y, 0.01);
      assertEquals(971.1275411366, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      rectangle0.setBounds((-1230.7811123011752), 669.8484, (-1.0), (-1.0));
      double double0 = rectangle0.width();
      assertEquals((-1.0), rectangle0.height, 0.01);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0, 874.67616, 874.67616, 0.0);
      double double0 = rectangle0.height();
      assertEquals(0.0, double0, 0.01);
      assertEquals(874.67616, rectangle0.y, 0.01);
      assertEquals(0.0, rectangle0.x, 0.01);
      assertEquals(874.67616, rectangle0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      rectangle0.setSize(106.38, 106.38);
      double double0 = rectangle0.height();
      assertEquals(106.38, rectangle0.width, 0.01);
      assertEquals(106.38, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(297.4, (-262.2969), (-262.2969), (-262.2969));
      double double0 = rectangle0.height();
      assertEquals(297.4, rectangle0.x, 0.01);
      assertEquals((-262.2969), double0, 0.01);
      assertEquals((-262.2969), rectangle0.y, 0.01);
      assertEquals((-262.2969), rectangle0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        rectangle0.setSize((IDimension) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Rectangle", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        rectangle0.setLocation((XY) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Rectangle", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Point point0 = new Point(0.0, 9.999999747378752E-6);
      Rectangle rectangle0 = null;
      try {
        rectangle0 = new Rectangle(point0, (IDimension) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Rectangle", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Rectangle rectangle0 = null;
      try {
        rectangle0 = new Rectangle((XY) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Rectangle", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Rectangle rectangle0 = null;
      try {
        rectangle0 = new Rectangle((IRectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Rectangle", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0, 0.0, 0.0, 0.0);
      rectangle0.add((-2976.29), 0.0);
      double double0 = rectangle0.x();
      assertEquals((-2976.29), rectangle0.x, 0.01);
      assertEquals((-2976.29), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0, 0.0, 0.0, 0.0);
      rectangle0.setBounds(0.0, (-2976.29), 0.0, 1284.002224);
      rectangle0.add((IRectangle) rectangle0);
      assertEquals(1284.002224, rectangle0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0, 0.0, 0.0, 0.0);
      rectangle0.setSize(2976.29, 0.0);
      rectangle0.setLocation(0.0, 0.0);
      assertEquals(2976.29, rectangle0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Vector vector0 = new Vector(0.0, (-0.2397127693021015));
      Point point0 = new Point(vector0);
      Rectangle rectangle0 = new Rectangle(point0);
      rectangle0.setBounds((IRectangle) rectangle0);
      assertEquals((-0.2397127693021015), rectangle0.y, 0.01);
      assertEquals(0.0, rectangle0.height, 0.01);
      assertEquals(0.0, rectangle0.x, 0.01);
      assertEquals(0.0, rectangle0.width(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0, 0.0, 0.0, 0.0);
      Dimension dimension0 = new Dimension();
      rectangle0.setSize((IDimension) dimension0);
      assertEquals(0.0, rectangle0.width, 0.01);
      assertEquals(0.0, rectangle0.x, 0.01);
      assertEquals(0.0, rectangle0.height, 0.01);
      assertEquals(0.0, rectangle0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Rectangle rectangle1 = new Rectangle(rectangle0);
      assertEquals(0.0, rectangle1.x, 0.01);
      assertEquals(0.0, rectangle1.y, 0.01);
      assertEquals(0.0, rectangle1.height, 0.01);
      assertEquals(0.0, rectangle1.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Vector vector0 = new Vector(0.0, (-0.2397127693021015));
      Point point0 = new Point(vector0);
      Rectangle rectangle0 = new Rectangle(point0);
      rectangle0.add((XY) point0);
      assertEquals(0.0, rectangle0.width, 0.01);
      assertEquals(0.0, rectangle0.x, 0.01);
      assertEquals((-0.2397127693021015), rectangle0.y, 0.01);
      assertEquals(0.0, rectangle0.height, 0.01);
  }
}
