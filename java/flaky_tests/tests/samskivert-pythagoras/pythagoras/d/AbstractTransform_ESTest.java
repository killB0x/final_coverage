/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 05:24:42 GMT 2022
 */

package pythagoras.d;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.d.AffineTransform;
import pythagoras.d.IdentityTransform;
import pythagoras.d.Transform;
import pythagoras.d.Vector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractTransform_ESTest extends AbstractTransform_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.shear((-653.41131), 0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.translate(1240.092072661562, (-2258.1085849));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.scale(1667.051724161, (-2083.36604005));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.setTranslation(5146.0, (-885.3894841667234));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-1.0), (-66.75597618447), (-66.75597618447), (-66.75597618447), (-1.0), (-66.75597618447));
      Transform transform0 = affineTransform0.uniformScale(10.0);
      assertSame(affineTransform0, transform0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1651.4, (-269.427807039838), (-880.2672), (-854.9), 1.0, 1651.4);
      Transform transform0 = affineTransform0.uniformScale(849.238725079731);
      assertEquals((-1090519.8508433218), transform0.uniformScale(), 0.01);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, (-973.61971), (-973.61971), 3.4028234663852886E38, 9.999999747378752E-6, 2465.129543);
      affineTransform0.setTransform((-973.61971), (-973.61971), 9.999999747378752E-6, (-520.9992169), 2465.129543, (-520.9992169));
      Vector vector0 = affineTransform0.translation();
      assertEquals(2465.129543, vector0.x(), 0.01);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-5310.70359615893), (-5310.70359615893), 0, (-5310.70359615893), 0.0);
      Vector vector0 = affineTransform0.translation();
      assertEquals((-5310.70359615893), vector0.x(), 0.01);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-223.6463187), 2544.3944, (-2594.739981664614), 2544.3944, (-2594.739981664614), 2544.3944);
      Transform transform0 = affineTransform0.translateY(2544.3944);
      assertEquals(2456.216081276778, transform0.uniformScale(), 0.01);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, 0.0, 0.0, 0.0);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.translateY(0.5);
      assertEquals(0.0, affineTransform1.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-870.80208), (-870.80208), 236.550042, 0.0);
      affineTransform0.scaleX(0.0);
      Transform transform0 = affineTransform0.translateY(3591.0);
      assertEquals(2614091.7020429, transform0.ty(), 0.01);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-692.464450009314), 3.4028234663852886E38, 3.4028234663852886E38, 3414.08371, (-692.464450009314));
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.translateY(0.0);
      assertEquals((-1.775853680155343E38), affineTransform1.m01, 0.01);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-1.0), (-66.75597618447), (-66.75597618447), (-66.75597618447), (-1.0), (-66.75597618447));
      Transform transform0 = affineTransform0.translateX(4);
      assertEquals((-5.0), transform0.tx(), 0.01);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1.0, 1.0, 1.0, 626.6726821512, 932.28581, 1.0);
      Transform transform0 = affineTransform0.translateX((-28.0563019228));
      assertEquals(1.4142135623730951, transform0.scaleX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1902.863840574718, 0.0, 0.0, 1902.863840574718);
      AffineTransform affineTransform1 = affineTransform0.setTx(1902.863840574718);
      Transform transform0 = affineTransform1.translateX(0.0);
      assertEquals(1902.863840574718, transform0.tx(), 0.01);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.translateX((-2219.8));
      assertEquals(1.0, affineTransform1.m11, 0.01);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.translateX((-496.911));
      assertEquals(0.0, affineTransform1.m01, 0.01);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(2539.128039721747, 2539.128039721747, (-2543.2261683), 0.0);
      affineTransform0.setTransform(0.0, (-2543.2261683), (-2543.2261683), 0.0, 0.0, 0.0);
      Transform transform0 = affineTransform0.translate((-5288.824377021237), 0.0);
      assertEquals(0.0, transform0.tx(), 0.01);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(758.1604607, 758.1604607, 758.1604607, 758.1604607, 0.0);
      AffineTransform affineTransform1 = affineTransform0.shearX(2857.6);
      affineTransform1.translateY((-5436.402281));
      AffineTransform affineTransform2 = (AffineTransform)affineTransform0.translate(0.0, 2857.6);
      assertEquals((-385.9966701797087), affineTransform2.m00, 0.01);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      affineTransform0.uniformScale(0.0);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.translate(0.0, 0.0);
      assertEquals(0.0, affineTransform1.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      Transform transform0 = affineTransform0.translate((-1781.1348), (-1456.8417));
      assertEquals(1.0, transform0.uniformScale(), 0.01);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-1.0), (-1.0), (-1.0), (-1.0), (-1.0));
      Transform transform0 = affineTransform0.shearY(0.0);
      assertSame(affineTransform0, transform0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(965.532882, 0.0, (-3276.0781674224168), (-3276.0781674224168), 0.0);
      AffineTransform affineTransform1 = affineTransform0.setScaleY(0.0);
      Transform transform0 = affineTransform0.shearY(1574.903);
      assertSame(transform0, affineTransform1);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1220.2758439199472, 0.0, 0.0, 0.0);
      AffineTransform affineTransform1 = affineTransform0.setScaleX(0.0);
      Transform transform0 = affineTransform1.shearY(0.0);
      assertEquals(1220.2758439199472, transform0.scaleY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, (-3276.0781674224168), (-3276.0781674224168), (-3276.0781674224168), 965.532882, 965.532882);
      Transform transform0 = affineTransform0.shearY(1574.903);
      assertEquals(7298959.323330066, transform0.scaleX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-1866.54), (-1866.54), 630.94065212833, 0.0, 0.0);
      affineTransform0.scale(3068.522, (-1668.22853));
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.shearX(0);
      assertEquals((-2843261.899670572), affineTransform1.m01, 0.01);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, (-440.0863229), 575.3405947919268, 575.3405947919268, (-440.0863229));
      Transform transform0 = affineTransform0.shearX(561.537730275);
      assertEquals(4, transform0.generality());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 2037.15880518577, 0.0, 1.0, 3426.075871847, 0.0);
      AffineTransform affineTransform1 = affineTransform0.setTranslation(0.0, 0.0);
      Transform transform0 = affineTransform1.shear(0.0, 0.0);
      assertEquals(0.0, transform0.ty(), 0.01);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-236.598116735688), (-236.598116735688), (-236.598116735688), (-236.598116735688), (-752.2564));
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.shear((-752.2564), (-236.598116735688));
      assertEquals((-46316.50143560382), affineTransform1.m00, 0.01);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1324.0614413951437, (-1096.68921905758), 1324.0614413951437, 1324.0614413951437);
      Transform transform0 = affineTransform0.shear((-1649.1029974), 571.13);
      assertEquals(2183514.0931954416, transform0.scaleY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, (-1309.2476080707102), 1948.0, 76.112095372);
      Transform transform0 = affineTransform0.shear(0.0, 0.0);
      assertEquals(0.0, transform0.uniformScale(), 0.01);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, 0.0, 0.0, 0.0);
      affineTransform0.setUniformScale(9.999999747378752E-6);
      Transform transform0 = affineTransform0.shearX(0.0);
      assertEquals(4, transform0.generality());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, (-440.0863229), 575.3405947919268, 575.3405947919268, (-440.0863229));
      affineTransform0.setTranslation(4679.395486031501, 6.283185307179586);
      affineTransform0.setUniformScale((-1423.969894));
      assertEquals(0.0, affineTransform0.m00, 0.01);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, (-440.0863229), 575.3405947919268, 575.3405947919268, (-440.0863229));
      affineTransform0.setUniformScale((-1423.969894));
      assertEquals(0.0, affineTransform0.m00, 0.01);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      AffineTransform affineTransform0 = new AffineTransform(identityTransform0);
      affineTransform0.setUniformScale(0.0);
      affineTransform0.shearX(891.576823094);
      assertEquals(0.0, affineTransform0.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-1.0), 3278.45747184, (-1.0), (-1.0), 0.0);
      affineTransform0.setUniformScale((-1.0));
      assertEquals(0.999999980820988, affineTransform0.m01, 0.01);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-1023.28082), (-1023.28082), (-1023.28082), (-1023.28082));
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setTy((-1023.28082));
      assertEquals(4, AffineTransform.GENERALITY);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 330.716114, 0.0, 330.716114, 330.716114, 3454.83142246043);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setTy(0.0);
      assertEquals(4, AffineTransform.GENERALITY);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0, (-1653.668846610384), (-1653.668846610384), 3044.9829701, (-1146.442286), 0.0);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setTy(991.574);
      assertEquals((-1653.668846610384), affineTransform1.m01, 0.01);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
      Transform transform0 = affineTransform0.setTy(0.0);
      assertEquals(4, transform0.generality());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-802.7892), 438.63429732, 575.3405947919268, 0.0);
      affineTransform0.m01 = (-390.9243271981841);
      Transform transform0 = affineTransform0.setTx(0.0);
      assertEquals((-448.9800986392681), transform0.uniformScale(), 0.01);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(575.3405947919268, (-440.0863229), (-802.7892), (-802.7892));
      Transform transform0 = affineTransform0.setTx(575.3405947919268);
      assertEquals(4, transform0.generality());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
      Transform transform0 = affineTransform0.setTx((-470.0));
      assertEquals(0.0, transform0.ty(), 0.01);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      affineTransform0.setScaleY((-3.141592653589793));
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setTranslation(1882.0, 1823.4);
      assertEquals(1823.4, affineTransform1.ty, 0.01);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setTranslation(0.0, 0.0);
      assertEquals(1.0, affineTransform1.m00, 0.01);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      affineTransform0.setTranslation(1882.0, 1823.4);
      Vector vector0 = affineTransform0.translation();
      assertEquals(1882.0, vector0.x(), 0.01);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, 0.0, 0.0, 0.0);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setTransform(2289.52857151, 0.0, 2289.52857151, 0.0, 0.0, Double.NaN);
      assertEquals(Double.NaN, affineTransform1.ty, 0.01);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1324.0614413951437, (-1096.68921905758), 1324.0614413951437, 1324.0614413951437);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setTransform((-399.40418), 1324.0614413951437, 0.0, 571.13, (-1096.68921905758), (-1096.68921905758));
      assertEquals(0.0, affineTransform1.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-3376.41375834), (-3376.41375834), (-3376.41375834), 0.0);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setTransform((-3376.41375834), 489.0, 0.0, 0.0, 1.0, (-1.0));
      assertEquals(4, AffineTransform.GENERALITY);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(860.91302204, 1664.5, (-1077.763039874897), 860.91302204);
      affineTransform0.setTy((-168.3021055732611));
      Transform transform0 = affineTransform0.setScaleY(2714.742430175491);
      assertEquals(4, transform0.generality());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-2865.6859469944), (-2865.6859469944), (-2571.565096697277), 0.0);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setScaleY((-2865.6859469944));
      assertEquals(4, AffineTransform.GENERALITY);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-1234.5), (-1234.5), (-292.58), 718.4, 0.0);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setScaleY(0.0);
      assertEquals(0.0, affineTransform1.ty, 0.01);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, 0.0, 0.0);
      Transform transform0 = affineTransform0.setScaleY(0.0);
      assertEquals(0.0, transform0.scaleX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(380.86515, 380.86515, 3.4028234663852886E38, 3.4028234663852886E38, 1415.7, 3874.304912271);
      affineTransform0.setScaleY(3.4028234663852886E38);
      AffineTransform affineTransform1 = affineTransform0.setTranslation(2.4061595482617518E38, 3874.304912271);
      affineTransform1.translateY((-1.0));
      Transform transform0 = affineTransform0.setScaleX(0.0);
      assertEquals(3.4028234663852894E38, transform0.scaleY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-1.0), (-1.0), (-1.0), 0.0);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setScaleX((-1.0));
      assertEquals((-0.5403023058681398), affineTransform1.m11, 0.01);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(380.86515, 380.86515, 3.4028234663852886E38, 3.4028234663852886E38, 1415.7, 3874.304912271);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setScaleX(0.0);
      assertEquals(0.0, affineTransform1.m01, 0.01);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 1368.93, 1660.17, 1368.93);
      affineTransform0.setScaleX(1660.17);
      Transform transform0 = affineTransform0.uniformScale(0.0);
      assertEquals(1660.17, transform0.tx(), 0.01);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
      affineTransform0.setScale((-1152.2442575184), (-1152.2442575184));
      affineTransform0.shear(0.0, 5265.63189178213);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setTx((-470.0));
      assertEquals(Double.NaN, affineTransform1.m11, 0.01);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, (-1.0), 0.0, 1.0, 1240.092072661562, 1142.5839658);
      affineTransform0.setScale((-1.0), 2131.8);
      assertEquals(2131.8, affineTransform0.scaleY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-39.0551389698339), (-39.0551389698339), 1373.11369289687, (-39.0551389698339), (-2158.17234352383));
      affineTransform0.setScale(0.0, 0.0);
      affineTransform0.setTranslation((-1172.2354048773311), (-1172.2354048773311));
      assertEquals(0.0, affineTransform0.m11, 0.01);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1.0, 1.0, (-2386.7558432482815), 0.0, (-3.4028234663852886E38));
      affineTransform0.setScale((-3.4028234663852886E38), 1.0);
      assertEquals((-2.2340907042686058E38), affineTransform0.m00, 0.01);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-870.80208), (-870.80208), 236.550042, 0.0);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setRotation(4);
      assertEquals(0.0, affineTransform1.ty, 0.01);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-265.47861), 0.0, (-381.03203329799425), (-719.4));
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setRotation((-381.03203329799425));
      assertEquals((-165.16506253020407), affineTransform1.m00, 0.01);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1942.087986893, 0.0, 0.0, 0.0, 1942.087986893, 1.5707963267948966);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setRotation(1942.087986893);
      assertEquals(4, AffineTransform.GENERALITY);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, (-1234.58), 0.0, 0.0, (-1.0));
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.setRotation(0.0);
      assertEquals((-1.0), affineTransform1.ty, 0.01);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1.0, 1.0, 1.0, 1.0);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.scaleY(1.0);
      assertEquals(0.5403023058681398, affineTransform1.m00, 0.01);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(6.283185307179586, (-1210.2749707117216), (-633.01831583), 3771.234567, 26.9279802746, (-633.01831583));
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.scaleY(26.9279802746);
      assertEquals(4, AffineTransform.GENERALITY);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, 0.0, 0.0, 0.0);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.scaleY(1.0);
      assertEquals(0.0, affineTransform1.m01, 0.01);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-3.141592653589793), 0.0, (-3.141592653589793), (-3.141592653589793));
      Transform transform0 = affineTransform0.scaleY(0.0);
      assertEquals(3.141592653589793, transform0.scaleX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(2004.6430208631, 2004.6430208631, (-656.22138033), 2004.6430208631, (-729.153), (-139.0825775));
      Transform transform0 = affineTransform0.scaleX(3399.8262991);
      assertSame(affineTransform0, transform0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-2985.7283678), 0.0, 0.0, 0.0, 1130.686001929179, 2582.06301);
      Transform transform0 = affineTransform0.scaleX(0.0);
      assertEquals(0.0, transform0.uniformScale(), 0.01);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      Transform transform0 = affineTransform0.scaleX((-0.12834681392319514));
      assertSame(affineTransform0, transform0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(246.53, 246.53, 246.53, 246.53);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.scale((-118.2070484368664), (-1563.566944));
      assertEquals(384073.7375794592, affineTransform1.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      Transform transform0 = affineTransform0.scale((double) 0, (double) 0);
      assertEquals(0.0, transform0.scaleX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-39.0551389698339), (-39.0551389698339), 1373.11369289687, (-39.0551389698339), (-2158.17234352383));
      Transform transform0 = affineTransform0.scale((-39.0551389698339), 3121.1917409976336);
      assertEquals((-39.0551389698339), transform0.tx(), 0.01);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, 0.0, 0.0);
      Vector vector0 = affineTransform0.scale();
      assertEquals(0.0, vector0.x(), 0.01);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-802.7892), 438.63429732, 575.3405947919268, 0.0);
      affineTransform0.setTy(2641.23910896042);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.rotate(0.0);
      assertEquals(744.8883487151222, affineTransform1.m01, 0.01);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-802.7892), 438.63429732, 575.3405947919268, 0.0);
      affineTransform0.setTx(0.0);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.rotate(0.0);
      assertEquals(0.0, affineTransform1.ty, 0.01);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      AffineTransform affineTransform1 = affineTransform0.shear(1868.397452862835, 1868.397452862835);
      affineTransform1.translateY((-1019.0));
      AffineTransform affineTransform2 = (AffineTransform)affineTransform1.rotate((-673.4));
      assertEquals((-1903897.004467229), affineTransform2.tx, 0.01);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0.0, 0.0, 438.63429732, 0.0);
      Transform transform0 = affineTransform0.rotate(0.0);
      assertEquals(0.0, transform0.ty(), 0.01);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1960.6858643, (-36.5618), 1960.6858643, (-3.4028234663852886E38));
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.copy();
      assertEquals(1779.3374307754034, affineTransform1.m01, 0.01);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-1330.13157183), (-772.0362557494482), 0.0, 0.0, (-772.0362557494482), 0.0);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.copy();
      assertEquals((-772.0362557494482), affineTransform1.m01, 0.01);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      affineTransform0.scaleX(0.0);
      Transform transform0 = affineTransform0.copy();
      assertEquals(4, transform0.generality());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      Transform transform0 = identityTransform0.copy();
      assertEquals(0.0, transform0.ty(), 0.01);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1.5707963267948966, (-870.65), 1.0, 1.0, 1.5707963267948966);
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.copy();
      assertEquals(1.5707963267948966, affineTransform1.ty, 0.01);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(380.86515, 380.86515, 3.4028234663852886E38, 3.4028234663852886E38, 1415.7, 3874.304912271);
      affineTransform0.m01 = 4602.495699427634;
      Transform transform0 = affineTransform0.clone();
      assertEquals(4.812319096523503E38, transform0.scaleY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-1.0), (-1.0), (-1.0), (-1.0), (-1.0));
      AffineTransform affineTransform1 = (AffineTransform)affineTransform0.clone();
      assertEquals((-0.8414709848078965), affineTransform1.m10, 0.01);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0.0, 0, 0.0, 0.0);
      Transform transform0 = affineTransform0.clone();
      assertEquals(0.0, transform0.tx(), 0.01);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.translateX(0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.setScaleX(85.2220987);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.shearX(4371.8145);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.setTx(0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      Transform transform0 = identityTransform0.clone();
      assertEquals(1.0, transform0.uniformScale(), 0.01);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.uniformScale(3499.83);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.setTransform(2238.2221106323, 2238.2221106323, 2238.2221106323, 2238.2221106323, 2238.2221106323, 2238.2221106323);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1.5707963267948966, (-1.0), 3.141592653589793, (-3.141592653589793));
      Vector vector0 = affineTransform0.scale();
      assertEquals(1.5707963267948966, vector0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.setScaleY(1.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.setUniformScale(6.283185307179586);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      Vector vector0 = identityTransform0.translation();
      assertEquals(0.0, vector0.x(), 0.01);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.setTy(Double.NaN);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.translateY((-1632.312269317038));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.rotate((-3725.4820126));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.scaleY((double) 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.scaleX(1.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.shearY(10.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.setRotation((-6.158268395155));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        identityTransform0.setScale(0, 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.AbstractTransform", e);
      }
  }
}
