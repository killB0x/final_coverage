/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 04:56:51 GMT 2022
 */

package pythagoras.d;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.d.Arc;
import pythagoras.d.Dimension;
import pythagoras.d.IArc;
import pythagoras.d.IDimension;
import pythagoras.d.IRectangle;
import pythagoras.d.Line;
import pythagoras.d.Point;
import pythagoras.d.Rectangle;
import pythagoras.d.Vector;
import pythagoras.d.XY;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Arc_ESTest extends Arc_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector vector0 = new Vector();
      Arc arc0 = new Arc(0);
      Vector vector1 = new Vector(vector0);
      arc0.setAngles((XY) vector0, (XY) vector1);
      assertEquals(360.0, arc0.extent, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Arc arc0 = new Arc(0);
      Vector vector0 = new Vector(0.0, (-2530.7620323));
      Point point0 = new Point(vector0);
      Line line0 = new Line(point0, point0);
      Rectangle rectangle0 = line0.bounds();
      arc0.setFrame((IRectangle) rectangle0);
      arc0.setAngles(146.499301, 0.0, 0.0, (-1885.64766066));
      assertEquals((-2530.7620323), arc0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Arc arc0 = new Arc(0.0, (-3.313008275320726), (-3.313008275320726), 90.0, 0.0, 1124.8081, 0);
      arc0.setAngles(0.0, 0.0, (-644.65395), 90.0);
      assertEquals(87.72445109823043, arc0.start, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Arc arc0 = new Arc(0);
      arc0.setAngles((double) 0, (-291.71568263922), (-522.9402518218), (double) 0);
      assertEquals(90.0, arc0.start, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Arc arc0 = new Arc();
      Vector vector0 = new Vector();
      arc0.setFrame((-2402.5063840298), 914.0, 0.0, (-3.313008275320726));
      arc0.setAngleStart((XY) vector0);
      assertEquals((-2402.5063840298), arc0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Arc arc0 = new Arc();
      Vector vector0 = new Vector();
      arc0.setArcByCenter(0.0, (-745.0786907188913), 2771.2000455907, 0.0, 0.0, 0);
      arc0.setAngleStart((XY) vector0);
      assertEquals(5542.4000911814, arc0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Arc arc0 = new Arc(0);
      Vector vector0 = new Vector(0.0, 0.0);
      arc0.setFrameFromDiagonal(1229.70874, (-1406.7054106589737), (-271.4697), 0.0);
      Point point0 = arc0.center();
      arc0.setArcByTangent(point0, vector0, vector0, 0.25);
      assertEquals(0.5, arc0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Arc arc0 = new Arc();
      Rectangle rectangle0 = arc0.bounds();
      // Undeclared exception!
      try { 
        arc0.setArc((IRectangle) rectangle0, 2.0, (-2268.898), (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid Arc type: -1
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Arc arc0 = new Arc();
      Rectangle rectangle0 = arc0.bounds();
      Point point0 = rectangle0.location();
      Dimension dimension0 = new Dimension();
      // Undeclared exception!
      try { 
        arc0.setArc((XY) point0, (IDimension) dimension0, 0.0, 0.0, (-138));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid Arc type: -138
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.setArc((double) 0, 0.0, 0.0, 2.0, 0.0, 2.0, 2);
      arc0.setFrame(0.0, 0.0, 90.0, 90.0);
      assertEquals(2.0, arc0.extent, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Arc arc0 = new Arc(0.0, 0.0, 0.0, 0.0, 90.0, 1658.94555, 0);
      assertEquals(1658.94555, arc0.extent, 0.01);
      assertEquals(0.0, arc0.height, 0.01);
      assertEquals(0.0, arc0.y, 0.01);
      assertEquals(0.0, arc0.x, 0.01);
      assertEquals(90.0, arc0.start, 0.01);
      assertEquals(0.0, arc0.width, 0.01);
      assertEquals(0, arc0.arcType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Arc arc0 = new Arc();
      Vector vector0 = new Vector();
      Rectangle rectangle0 = new Rectangle(vector0);
      arc0.setArc((IRectangle) rectangle0, 1795.5081, 0.0, 0);
      assertEquals(1795.5081, arc0.start, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Arc arc0 = new Arc(0);
      double double0 = arc0.y();
      assertEquals(0, arc0.arcType());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Vector vector0 = new Vector(0.0, 0.0);
      Point point0 = new Point(vector0);
      Dimension dimension0 = new Dimension();
      point0.y = 360.0;
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      Arc arc0 = new Arc(rectangle0, 0.0, 0.0, 0);
      double double0 = arc0.y();
      assertEquals(0.0, arc0.height, 0.01);
      assertEquals(360.0, double0, 0.01);
      assertEquals(0.0, arc0.start, 0.01);
      assertEquals(0.0, arc0.x, 0.01);
      assertEquals(0, arc0.arcType());
      assertEquals(0.0, arc0.extent, 0.01);
      assertEquals(0.0, arc0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.setArcByCenter(0.0, (-745.0786907188913), 2771.2000455907, 0.0, 0.0, 0);
      double double0 = arc0.y();
      assertEquals((-2771.2000455907), arc0.x, 0.01);
      assertEquals((-3516.2787363095913), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Arc arc0 = new Arc(0);
      double double0 = arc0.x();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, arc0.arcType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Arc arc0 = new Arc();
      Point point0 = arc0.startPoint();
      arc0.setArcByTangent(point0, point0, point0, 1.5707963267948966);
      double double0 = arc0.x();
      assertEquals(3.141592653589793, arc0.height, 0.01);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.setFrameFromDiagonal((-1518.00806381), 0.0, 270.0, 0.0);
      double double0 = arc0.x();
      assertEquals((-1518.00806381), arc0.x, 0.01);
      assertEquals((-1518.00806381), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Arc arc0 = new Arc(0);
      double double0 = arc0.width();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, arc0.arcType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Arc arc0 = new Arc(0);
      Vector vector0 = new Vector(0.0, (-2530.7620323));
      Point point0 = new Point(vector0);
      Rectangle rectangle0 = new Rectangle(0.0, (-1.0), 9.999999747378752E-6, 0.0);
      Dimension dimension0 = new Dimension();
      Dimension dimension1 = rectangle0.size(dimension0);
      arc0.setArc((XY) point0, (IDimension) dimension1, 0.0, 0.25, 0);
      double double0 = arc0.width();
      assertEquals(0.25, arc0.extent, 0.01);
      assertEquals(9.999999747378752E-6, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.setFrame(0.0, 4.71238898038469, (-396.338), (-1167.153309171602));
      double double0 = arc0.width();
      assertEquals(4.71238898038469, arc0.y, 0.01);
      assertEquals((-396.338), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Arc arc0 = new Arc(0);
      double double0 = arc0.height();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, arc0.arcType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Arc arc0 = new Arc(0);
      arc0.setArcByCenter(0.0, 90.0, 2612.42874, 0.0, 1250.24558520348, 0);
      double double0 = arc0.height();
      assertEquals((-2522.42874), arc0.y, 0.01);
      assertEquals(5224.85748, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Arc arc0 = new Arc();
      Vector vector0 = new Vector();
      Point point0 = new Point();
      arc0.setArcByTangent(point0, vector0, vector0, (-2186.6265557351926));
      double double0 = arc0.height();
      assertEquals((-4373.253111470385), arc0.height, 0.01);
      assertEquals((-4373.253111470385), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Arc arc0 = new Arc();
      int int0 = arc0.arcType();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Arc arc0 = new Arc(2);
      int int0 = arc0.arcType();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Arc arc0 = new Arc(0);
      double double0 = arc0.angleStart();
      assertEquals(0, arc0.arcType());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.setAngleStart((-516.8837037773666));
      double double0 = arc0.angleStart();
      assertEquals((-516.8837037773666), arc0.start, 0.01);
      assertEquals((-516.8837037773666), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Arc arc0 = new Arc();
      double double0 = arc0.angleExtent();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, arc0.arcType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Arc arc0 = new Arc();
      Point point0 = arc0.startPoint();
      arc0.setArcByTangent(point0, point0, point0, 1.5707963267948966);
      double double0 = arc0.angleExtent();
      assertEquals(3.141592653589793, arc0.height, 0.01);
      assertEquals(180.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Arc arc0 = new Arc(0);
      // Undeclared exception!
      try { 
        arc0.setArcByTangent((XY) null, (XY) null, (XY) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Arc arc0 = new Arc();
      Point point0 = new Point();
      Rectangle rectangle0 = new Rectangle(point0);
      Dimension dimension0 = rectangle0.size();
      // Undeclared exception!
      try { 
        arc0.setArc((XY) point0, (IDimension) dimension0, 1.0, 0.0, 207);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid Arc type: 207
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Arc arc0 = new Arc();
      // Undeclared exception!
      try { 
        arc0.setArc((IArc) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Arc arc0 = new Arc();
      // Undeclared exception!
      try { 
        arc0.setAngleStart((XY) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Arc arc0 = null;
      try {
        arc0 = new Arc((IRectangle) null, (-90.0), (-90.0), (-1608));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Arc arc0 = null;
      try {
        arc0 = new Arc(rectangle0, 0.0, 0.0, 4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid Arc type: 4
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Arc arc0 = null;
      try {
        arc0 = new Arc(19);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid Arc type: 19
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Arc arc0 = new Arc();
      // Undeclared exception!
      try { 
        arc0.setArcType(799501339);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid Arc type: 799501339
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Arc arc0 = new Arc(0);
      assertEquals(0, arc0.arcType());
      
      arc0.setArcType(1);
      assertEquals(1, arc0.arcType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Arc arc0 = new Arc(0);
      arc0.setArcType(0);
      assertEquals(0, arc0.arcType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.setAngleExtent(0.0);
      assertEquals(0, arc0.arcType());
      assertEquals(0.0, arc0.extent, 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Arc arc0 = new Arc();
      // Undeclared exception!
      try { 
        arc0.setArc((-1.5707963267948966), (-1.5707963267948966), (-1.5707963267948966), (-1.5707963267948966), (-1.5707963267948966), (-1.5707963267948966), 396);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid Arc type: 396
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Arc arc0 = new Arc(0);
      arc0.setAngleStart(986.48614);
      double double0 = arc0.angleStart();
      assertEquals(986.48614, arc0.start, 0.01);
      assertEquals(986.48614, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Arc arc0 = new Arc();
      Point point0 = arc0.min();
      Point point1 = new Point(0.0, 286.645536614);
      arc0.setArcByTangent(point0, point1, point0, 0.0);
      assertEquals(Double.NaN, arc0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Arc arc0 = new Arc();
      Point point0 = new Point(0.0, 0.0);
      arc0.setArcByTangent(point0, point0, point0, 0.0);
      Point point1 = arc0.startPoint();
      arc0.setArcByTangent(point1, point1, point1, 0.0);
      assertEquals(Double.NaN, arc0.extent, 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Arc arc0 = new Arc(0);
      assertEquals(0, arc0.arcType());
      
      arc0.setArcType(2);
      assertEquals(2, arc0.arcType());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle((-112.03463859189901), (-297.769467114702), 231.106007, 975.1660667531);
      Arc arc0 = new Arc(rectangle0, 3503.225101780941, (-1823.677769), 1);
      double double0 = arc0.angleExtent();
      assertEquals(975.1660667531, arc0.height, 0.01);
      assertEquals(231.106007, arc0.width, 0.01);
      assertEquals((-1823.677769), double0, 0.01);
      assertEquals(1, arc0.arcType());
      assertEquals(3503.225101780941, arc0.start, 0.01);
      assertEquals((-297.769467114702), arc0.y, 0.01);
      assertEquals((-112.03463859189901), arc0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Arc arc0 = new Arc();
      // Undeclared exception!
      try { 
        arc0.setArc((IRectangle) null, 0.0, 0.0, 670);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Arc arc0 = new Arc();
      // Undeclared exception!
      try { 
        arc0.setArcByCenter(0.0, 0.0, 0.0, 0.0, 0.0, 3507);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid Arc type: 3507
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Arc arc0 = null;
      try {
        arc0 = new Arc((-1096.20857), (-1096.20857), (-1096.20857), (-1096.20857), (-1096.20857), (-1096.20857), 49867460);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid Arc type: 49867460
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.setArc((IArc) arc0);
      assertEquals(0.0, arc0.x(), 0.01);
      assertEquals(0.0, arc0.y, 0.01);
      assertEquals(0.0, arc0.width(), 0.01);
      assertEquals(0.0, arc0.start, 0.01);
      assertEquals(0.0, arc0.height, 0.01);
      assertEquals(0, arc0.arcType());
      assertEquals(0.0, arc0.extent, 0.01);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Arc arc0 = new Arc();
      // Undeclared exception!
      try { 
        arc0.setAngles((XY) null, (XY) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Arc arc0 = new Arc();
      Vector vector0 = new Vector();
      // Undeclared exception!
      try { 
        arc0.setArc((XY) vector0, (IDimension) null, 0.0, (-72.26938617646), 1204);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Arc", e);
      }
  }
}
