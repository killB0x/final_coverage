/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 04:08:23 GMT 2022
 */

package pythagoras.d;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.d.Lines;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Lines_ESTest extends Lines_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = Lines.relativeCCW((-8.349150175560875E21), 259.7750880112, 0.0, 2668.843966307261, Double.NaN, (-1.0));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = Lines.relativeCCW((-1333.0), (-878.6342801), 0.0, (-878.6342801), (-878.6342801), (-878.6342801));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = Lines.relativeCCW(2329.74, 0.0, 2329.74, (-1.0), 2329.74, 1.0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = Lines.relativeCCW(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = Lines.relativeCCW(0.0, 5224.88032335597, 0.0, 0.0, 0.0, 5224.88032335597);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = Lines.relativeCCW((-301.2), (-301.2), 1.0, (-301.2), 1.0, 1.0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = Lines.relativeCCW(0.0, 0.0, 0.0, 2329.74, 2329.74, 2329.74);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = Lines.lineIntersectsRect((-78.54868), (-1788.478), 552.4894778601, 2542.74990555, 0.0, 0.0, 552.4894778601, 2542.74990555);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = Lines.lineIntersectsRect(0.0, (-1.0), 0.0, 0.0, (-1.0), 0.0, (-1.0), 0.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = Lines.lineIntersectsRect(489.9579140935991, 489.9579140935991, 489.9579140935991, 489.9579140935991, 489.9579140935991, 489.9579140935991, 489.9579140935991, 489.9579140935991);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect(641.621805165, 1.0, 1.0, 1.0, (-0.5641125939229641), 1.0, 489.9579140935991, 1.0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect((-2797.5809804661408), 0.0, 0.0, 0.0, 2.6E-7, 0.0, (-1126.481802658017), 0.0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect((-1982188.1073393086), 1.0, 280924.92019867786, 1.0, 585.0747813822, 1.0, 1.0, 1.0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect(2.322210082458118, 0.0, 0.0, 0.0, 912.1112598762501, 0.0, 0.0, 0.0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = Lines.pointSegDist((-1707.1654651717427), (-1707.1654651717427), (-1707.1654651717427), (-1707.1654651717427), (-1707.1654651717427), (-1707.1654651717427));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = Lines.pointLineDistSq((-78.54868), 1.0, (-78.54868), 1.0, (-381.712284), 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = Lines.pointLineDist(1.0, 0.0, 1.0, 2658.58719224, 1.0, 1.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = Lines.pointSegDistSq(5.623828910907961E9, 5.623828910907961E9, 5.623828910907961E9, (-1.0), (-1.0), 5.623828910907961E9);
      assertEquals(1.581372581520594E19, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = Lines.pointSegDistSq(437.04855, 0.0, 0.0, 437.04855, 437.04855, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect(1.0, (-1.0), (-1.0), 0.0, (-753.32034122), (-650.441), (-2927.243), 0.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect(2129.72914259048, (-1245.41928667928), 0.0, (-1.0), 1612.22271256758, 3094.39476, (-2107.0031), (-1241.097));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect((-1.0), (-1.1578777155134893E13), (-1.0), (-1.0), (-1.0), 1783.41426248785, (-1.0), 3416464.1731215017);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect(0.0, 0.0, 0.0, (-1.0), 0.0, 394.70489332597, 0.0, 394.70489332597);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect((-878.6342801), (-878.6342801), (-1707.742275), (-1707.742275), (-878.6342801), (-878.6342801), (-878.6342801), (-878.6342801));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect(912.21752, 1.0, 1.0, 1.0, 0.0, 1.0, (-1.0), 1.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect(5425113.625452788, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect(0.0, 1980.0000000000002, (-3839.0), (-1.3795297069332324E7), (-1.0), (-1.1578777155134893E13), (-242.366), 599.0251);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double double0 = Lines.pointLineDistSq(185.3055, (-1366.50914484), 38438.46706388589, 0.004, 1409.96676486892, (-1.0));
      assertEquals(1864524.5388049725, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = Lines.relativeCCW((-5279.510026853765), 0.0, (-983.882772813), 0.0, 0.0, 0.0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double double0 = Lines.pointSegDist(0.0, 57973.0192047828, 1.982589552061113E12, 1429.122348523683, 3122.5844527013464, (-1391.644951874128));
      assertEquals(59446.73148476325, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double double0 = Lines.pointSegDistSq((-1636.0922), 1.0, (-1.0), 1222.48021647, 1222.48021647, (-1.0));
      assertEquals(4165540.4217284378, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      boolean boolean0 = Lines.lineIntersectsRect((-0.008), 0.0, (-0.008), (-0.008), 0.0, (-0.008), (-0.008), (-0.008));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      boolean boolean0 = Lines.lineIntersectsRect((-0.10030438132591313), 10.029968894840886, 10.029968894840886, 10.029968894840886, 10.029968894840886, 10.029968894840886, 10.029968894840886, 10.029968894840886);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      boolean boolean0 = Lines.lineIntersectsRect(0.9853083921562276, 0.9853083921562276, (-0.86571215110143), (-0.86571215110143), (-0.86571215110143), 0.9853083921562276, 0.9853083921562276, 0.9853083921562276);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      boolean boolean0 = Lines.lineIntersectsRect(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      boolean boolean0 = Lines.lineIntersectsRect(0.0, (-1.0), (-1.0), (-1.0), 0.0, 0.0, 0.0, (-1.0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      boolean boolean0 = Lines.lineIntersectsRect((-1.1578777155111252E13), 5.623828912789714E9, 5.623828912789714E9, 5.623828912789714E9, 5.623828912789714E9, (-1.1578777155111252E13), 5.623828912789714E9, (-1.1578777155111252E13));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect(441.38232514014584, 973.7105641, 441.38232514014584, 441.38232514014584, 441.38232514014584, 21.060371840779197, 441.38232514014584, 21.060371840779197);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect(0.0, 0.0, 0.0, (-1.0), 0.0, (-1.0), 0.0, (-909.6230862601128));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect(485.2014414680927, (-1303.3581995134855), 485.2014414680927, 0.0, 485.2014414680927, 485.2014414680927, 485.2014414680927, 0.0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect(0.0, 0.0, 0.0, 5425113.625452788, 0.0, 5425113.625452788, 0.0, 5425113.625452788);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect((-0.0084661), 1.7753840503455404E7, (-0.0084661), (-0.0084661), (-0.0084661), (-942.002181864), (-0.0084661), (-0.0084661));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      boolean boolean0 = Lines.lineIntersectsRect(0.0, 0.0, 0.0, 0.0, 0.0, (-180.2626820797), 0.0, (-180.2626820797));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect(441.38232514014584, 21.060371840779197, 441.38232514014584, 441.38232514014584, 441.38232514014584, 21.060371840779197, 441.38232514014584, 21.060371840779197);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect((-955.1263609487637), (-955.1263609487637), (-955.1263609487637), (-955.1263609487637), (-955.1263609487637), (-955.1263609487637), 669.637344, (-2916.523925215317));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      boolean boolean0 = Lines.lineIntersectsRect((-1720.822727004495), 0.0, 0.0, 0.0, 0.08999999999999998, 0.0, 0.08999999999999998, 0.0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      boolean boolean0 = Lines.lineIntersectsRect((-1.0), (-1.0), (-1.0), (-1.0), (-0.9), (-0.9), (-0.9), (-0.9));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect((-1720.822727004495), 0.08999999999999998, (-1636.0922), 0.08999999999999998, 0.08999999999999998, 0.08999999999999998, 0.0, 0.08999999999999998);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect((-0.0084661), (-0.0084661), 0.0, (-0.0084661), 0.0, (-0.0084661), 0.0, (-0.0084661));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect(1.0, 1.0, (-0.7287472), 1.0, (-0.8110644693712575), 1.0, (-0.7287472), 1.0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect(4066.0, (-1.0), 45760.197909216295, (-1.0), (-1206.74), (-1.0), 2022.399866118, (-1.0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect((-1.5032932047287169), (-1.5032932047287169), 973.710564108, (-1.5032932047287169), (-1.5032932047287169), (-1.5032932047287169), 973.710564108, 973.710564108);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      boolean boolean0 = Lines.linesIntersect((-1366.50914484), (-1366.50914484), (-1115.2855757746), (-1366.50914484), 368.007, (-1366.50914484), (-1115.2855757746), (-1366.50914484));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      double double0 = Lines.pointLineDist((-1115.2855757746), 185.3055, (-1366.50914484), 368.007, 185.3055, 12580.30982095662);
      assertEquals(272.25023485505557, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Lines lines0 = new Lines();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      double double0 = Lines.pointSegDist((-123.48212066706), 356.1468146, 1864524.5388049725, (-1.0), (-2050.412486), 592.6623084990538);
      assertEquals(235.90262367970726, double0, 0.01);
  }
}
