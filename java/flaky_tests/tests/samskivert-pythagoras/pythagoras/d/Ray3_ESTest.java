/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 05:41:03 GMT 2022
 */

package pythagoras.d;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.d.Ray3;
import pythagoras.d.Vector3;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Ray3_ESTest extends Ray3_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector3 vector3_0 = new Vector3(1.0, 1.0, 1.0);
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      Vector3 vector3_1 = ray3_0.origin();
      assertEquals(1.0, vector3_1.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Ray3 ray3_0 = new Ray3();
      Vector3 vector3_0 = ray3_0.origin();
      assertEquals(0.0, vector3_0.x(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Vector3 vector3_0 = new Vector3(1.0, 1.0, 1.0);
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      Vector3 vector3_1 = ray3_0.direction();
      assertEquals(1.0, vector3_1.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Ray3 ray3_0 = new Ray3();
      Vector3 vector3_0 = ray3_0.direction();
      assertEquals(0.0, vector3_0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Ray3 ray3_0 = new Ray3();
      // Undeclared exception!
      try { 
        ray3_0.set((Vector3) null, (Vector3) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Vector3", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Ray3 ray3_0 = new Ray3();
      // Undeclared exception!
      try { 
        ray3_0.set((Ray3) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Ray3", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Ray3 ray3_0 = null;
      try {
        ray3_0 = new Ray3((Ray3) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Ray3", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Vector3 vector3_0 = new Vector3((-1962.056538843121), (-2612.0898261974658), (-2612.0898261974658));
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      Ray3 ray3_1 = ray3_0.set(ray3_0.origin, vector3_0);
      assertSame(ray3_1, ray3_0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Vector3 vector3_0 = new Vector3((-1962.056538843121), (-2612.0898261974658), (-2612.0898261974658));
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      Vector3 vector3_1 = ray3_0.origin();
      assertEquals((-2612.0898261974658), vector3_1.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Vector3 vector3_0 = new Vector3((-1962.056538843121), (-2612.0898261974658), (-2612.0898261974658));
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      Ray3 ray3_1 = ray3_0.set(ray3_0);
      assertSame(ray3_1, ray3_0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector3 vector3_0 = new Vector3((-1962.056538843121), (-2612.0898261974658), (-2612.0898261974658));
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      Vector3 vector3_1 = ray3_0.direction();
      assertEquals((-2612.0898261974658), vector3_1.z, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector3 vector3_0 = new Vector3((-1962.056538843121), (-2612.0898261974658), (-2612.0898261974658));
      Ray3 ray3_0 = new Ray3(vector3_0, vector3_0);
      String string0 = ray3_0.toString();
      assertEquals("[origin=[-1962.056538843121, -2612.0898261974658, -2612.0898261974658], direction=[-1962.056538843121, -2612.0898261974658, -2612.0898261974658]]", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Ray3 ray3_0 = null;
      try {
        ray3_0 = new Ray3((Vector3) null, (Vector3) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Vector3", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Ray3 ray3_0 = new Ray3();
      Ray3 ray3_1 = new Ray3(ray3_0);
      assertFalse(ray3_1.equals((Object)ray3_0));
  }
}
