/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 04:12:54 GMT 2022
 */

package pythagoras.d;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.d.AbstractQuadCurve;
import pythagoras.d.AbstractRoundRectangle;
import pythagoras.d.AffineTransform;
import pythagoras.d.Arc;
import pythagoras.d.Area;
import pythagoras.d.CubicCurve;
import pythagoras.d.Ellipse;
import pythagoras.d.FlatteningPathIterator;
import pythagoras.d.IRectangle;
import pythagoras.d.IShape;
import pythagoras.d.IVector;
import pythagoras.d.IdentityTransform;
import pythagoras.d.Line;
import pythagoras.d.Path;
import pythagoras.d.PathIterator;
import pythagoras.d.Point;
import pythagoras.d.QuadCurve;
import pythagoras.d.Rectangle;
import pythagoras.d.RoundRectangle;
import pythagoras.d.Transform;
import pythagoras.d.Vector;
import pythagoras.d.XY;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Path_ESTest extends Path_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle((-5957.94376491696), 4755.449225963001, (-5957.94376491696), 4755.449225963001);
      Path path0 = new Path(rectangle0);
      Path.Iterator path_Iterator0 = new Path.Iterator(path0);
      path_Iterator0.next();
      path_Iterator0.isDone();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Arc arc0 = new Arc();
      Path path0 = new Path(arc0);
      path0.pointSize = 19;
      path0.bounds();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Arc arc0 = new Arc();
      Path path0 = new Path(arc0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)78;
      path0.types = byteArray0;
      path0.currentPoint();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Arc arc0 = new Arc();
      Path path0 = new Path(arc0);
      path0.typeSize = (-739);
      // Undeclared exception!
      try { 
        path0.currentPoint();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -740 out of bounds for length 10
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Point point0 = new Point(1262.254005802509, (-127.678));
      Vector vector0 = new Vector(point0);
      Rectangle rectangle0 = new Rectangle(vector0);
      Path path0 = new Path(rectangle0);
      path0.lineTo(1.3333333730697632, (-1812.381159712567));
      Line line0 = new Line((-1.0), (-3757.198618), (-127.678), 21.41280232);
      IdentityTransform identityTransform0 = new IdentityTransform();
      PathIterator pathIterator0 = line0.pathIterator((Transform) identityTransform0);
      path0.append(pathIterator0, true);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      Path path0 = new Path(ellipse0);
      path0.typeSize = (-1601);
      Line line0 = new Line(0.0, 0.0, 0.0, 0.0);
      IdentityTransform identityTransform0 = new IdentityTransform();
      PathIterator pathIterator0 = line0.pathIterator((Transform) identityTransform0);
      // Undeclared exception!
      try { 
        path0.append(pathIterator0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1602 out of bounds for length 10
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(2870.036212689, 2870.036212689, 2870.036212689, 2870.036212689);
      Path path0 = new Path(rectangle0);
      byte[] byteArray0 = new byte[8];
      byteArray0[5] = (byte)49;
      path0.types = byteArray0;
      path0.closePath();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.typeSize = (-3205);
      // Undeclared exception!
      try { 
        path0.closePath();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -3206 out of bounds for length 10
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Arc arc0 = new Arc();
      Path path0 = new Path(arc0);
      path0.pointSize = 19;
      path0.moveTo(0.0, 0.0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Arc arc0 = new Arc();
      Path path0 = new Path(arc0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-93);
      path0.types = byteArray0;
      path0.moveTo(0.0, 0.0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.typeSize = (-1);
      // Undeclared exception!
      try { 
        path0.append((IShape) roundRectangle0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 10
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Path path0 = new Path(0, 20);
      Arc arc0 = new Arc();
      path0.append((IShape) arc0, false);
      path0.curveTo(0.0, 0.0, 1000.99835675, 0.0, 1000.99835675, 0.0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Path path0 = new Path();
      path0.typeSize = 13;
      path0.checkBuf((-2469), true);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1262.254005802509, 1262.254005802509, (-1.0), (-127.678), 1.3333333730697632, (-3309.3408489347));
      Point point0 = new Point(0.0, 2000.37203);
      Vector vector0 = new Vector(point0);
      Rectangle rectangle0 = new Rectangle(vector0);
      Path path0 = new Path(rectangle0);
      PathIterator pathIterator0 = path0.pathIterator((Transform) affineTransform0);
      pathIterator0.windingRule();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Path path0 = new Path(0);
      Path.Iterator path_Iterator0 = new Path.Iterator(path0);
      path_Iterator0.next();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Line line0 = new Line();
      Path path0 = new Path(line0);
      IdentityTransform identityTransform0 = new IdentityTransform();
      PathIterator pathIterator0 = path0.pathIterator((Transform) identityTransform0);
      pathIterator0.isDone();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Arc arc0 = new Arc();
      Area area0 = new Area(arc0);
      Path path0 = new Path(area0);
      path0.windingRule();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Path path0 = new Path();
      path0.rule = (-1781);
      path0.windingRule();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1262.254005802509, 1262.254005802509, (-1.0), (-127.678), 1.3333333730697632, 1262.254005802509);
      Area area0 = new Area();
      Path path0 = new Path(area0);
      path0.pathIterator((Transform) affineTransform0, (double) 4);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Path path0 = new Path();
      path0.rule = (-922);
      path0.pathIterator((Transform) null, 0.0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Line line0 = new Line();
      Path path0 = new Path(line0);
      IdentityTransform identityTransform0 = new IdentityTransform();
      path0.pathIterator((Transform) identityTransform0, 0.0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1262.254005802509, 1262.254005802509, (-1.0), (-127.678), 1.3333333730697632, (-3309.3408489347));
      Path path0 = new Path(0, 1);
      path0.pathIterator((Transform) affineTransform0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      QuadCurve quadCurve0 = new QuadCurve(681.8978033866101, 1240.942418914418, 681.8978033866101, 681.8978033866101, (-1856.66914), 1240.942418914418);
      Rectangle rectangle0 = quadCurve0.bounds();
      Path path0 = new Path(rectangle0);
      path0.rule = (-1649);
      IdentityTransform identityTransform0 = new IdentityTransform();
      path0.pathIterator((Transform) identityTransform0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Line line0 = new Line();
      Path path0 = new Path(line0);
      path0.isInside((-3575));
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Arc arc0 = new Arc();
      Area area0 = new Area(arc0);
      Path path0 = new Path(area0);
      path0.isInside((-1334));
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CubicCurve cubicCurve0 = new CubicCurve((-1.0), 1.3333333730697632, (-3105.55104), 2519.7259035145903, 2519.7259035145903, 270.0, 0.0, 0.6666666865348816);
      Path path0 = new Path(cubicCurve0);
      path0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Path path0 = new Path();
      Rectangle rectangle0 = new Rectangle();
      path0.intersects((IRectangle) rectangle0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Point point0 = new Point(0.0, 2000.37203);
      Vector vector0 = new Vector(point0);
      Rectangle rectangle0 = new Rectangle(vector0);
      Path path0 = new Path(rectangle0);
      path0.lineTo(3.141592653589793, 2441.62682);
      path0.currentPoint();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Point point0 = new Point(1262.254005802509, 1262.254005802509);
      Vector vector0 = new Vector(point0);
      Rectangle rectangle0 = new Rectangle(vector0);
      rectangle0.setFrameFromCenter((-3833.44), 862.7000273, 1262.254005802509, (-127.678));
      Path path0 = new Path(rectangle0);
      path0.contains((XY) point0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Point point0 = new Point((-3309.3408489347), (-127.678));
      Vector vector0 = new Vector(point0);
      Rectangle rectangle0 = new Rectangle(vector0);
      rectangle0.setFrameFromCenter((double) 4, (-1772.21406), 21.41280232, 1262.254005802509);
      Path path0 = new Path(rectangle0);
      path0.contains((-1.0), (double) 0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Path path0 = new Path(0);
      path0.clone();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.rule = (-209);
      path0.clone();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Vector vector0 = new Vector(1.3333333730697632, 996.1646);
      Rectangle rectangle0 = new Rectangle(vector0);
      Path path0 = new Path(rectangle0);
      path0.bounds(rectangle0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1262.254005802509, 1262.254005802509, (-1.0), (-127.678), 1.3333333730697632, (-3309.3408489347));
      Point point0 = new Point(0.0, 2000.37203);
      Vector vector0 = new Vector(point0);
      Vector vector1 = affineTransform0.inverseTransform((IVector) vector0, vector0);
      Rectangle rectangle0 = new Rectangle(vector1);
      Path path0 = new Path(rectangle0);
      path0.bounds(rectangle0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Point point0 = new Point(1262.254005802509, (-127.678));
      Vector vector0 = new Vector(point0);
      Rectangle rectangle0 = new Rectangle(vector0);
      Path path0 = new Path(rectangle0);
      path0.bounds();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CubicCurve cubicCurve0 = new CubicCurve((-1.0), 1.3333333730697632, (-3105.55104), 2519.7259035145903, 2519.7259035145903, 270.0, 0.0, 0.6666666865348816);
      Path path0 = new Path(cubicCurve0);
      path0.bounds();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.quadTo(1317.0, 1317.0, 1317.0, 1317.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.typeSize = (-1);
      // Undeclared exception!
      try { 
        path0.quadTo((-475.353530125277), 0.0, (-1.0), 1.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 10
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.pathIterator((Transform) null, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Flatness is less then zero
         //
         verifyException("pythagoras.d.FlatteningPathIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Path path0 = new Path();
      path0.points = null;
      // Undeclared exception!
      try { 
        path0.moveTo(1.0, 1.0000099999997474);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Path path0 = new Path();
      path0.pointSize = (-266);
      // Undeclared exception!
      try { 
        path0.moveTo(984.52092213, 984.52092213);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -266 out of bounds for length 20
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.lineTo(1303.4925185730585, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Path path0 = new Path();
      path0.typeSize = (-685);
      // Undeclared exception!
      try { 
        path0.lineTo(1532.186462353797, (-626.81614609276));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -685 out of bounds for length 10
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Path path0 = new Path();
      path0.pointSize = 1;
      // Undeclared exception!
      try { 
        path0.isEmpty();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 20
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.intersects((IRectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(2870.036212689, 2870.036212689, 2870.036212689, 2870.036212689);
      Path path0 = new Path(rectangle0);
      double[] doubleArray0 = new double[0];
      path0.points = doubleArray0;
      // Undeclared exception!
      try { 
        path0.intersects((IRectangle) rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 9 out of bounds for length 0
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Path path0 = new Path();
      path0.points = null;
      path0.pointSize = 5;
      // Undeclared exception!
      try { 
        path0.intersects((-1070.0), 826.543, (double) 5, 786.1213296532);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Path path0 = new Path();
      path0.pointSize = 783;
      // Undeclared exception!
      try { 
        path0.intersects((double) 1, (double) 0, (double) 0, (double) 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 782 out of bounds for length 20
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.pointSize = (-1702);
      // Undeclared exception!
      try { 
        path0.curveTo(0.0, 0.0, (-2094.24711), (-2094.24711), (-2181.1691469488), 833.194485490194);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.types = null;
      // Undeclared exception!
      try { 
        path0.currentPoint();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Path path0 = new Path();
      path0.points = null;
      // Undeclared exception!
      try { 
        path0.createTransformedShape((Transform) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.util.Platform", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      double[] doubleArray0 = new double[6];
      path0.points = doubleArray0;
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        path0.createTransformedShape(identityTransform0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 6 out of bounds for length 6
         //
         verifyException("pythagoras.d.IdentityTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.contains((XY) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.contains((IRectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(1262.2540058, 1262.2540058, 1262.2540058, 1262.2540058);
      Path path0 = new Path(rectangle0);
      path0.pointSize = (-1);
      // Undeclared exception!
      try { 
        path0.contains((IRectangle) rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2 out of bounds for length 20
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Point point0 = new Point(1262.254005802509, 1262.254005802509);
      Vector vector0 = new Vector(point0);
      Rectangle rectangle0 = new Rectangle(vector0);
      rectangle0.setFrameFromCenter((-3833.44), 1262.254005802509, 1262.254005802509, 641.7827963453);
      Path path0 = new Path(rectangle0);
      Path.pointShift = null;
      // Undeclared exception!
      try { 
        path0.contains(1262.254005802509, 1262.254005802509, 1262.254005802509, 1262.254005802509);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Path$Iterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(2848.77, 2848.77, 2848.77, 2848.77);
      Path path0 = new Path(rectangle0);
      path0.pointSize = 1630;
      // Undeclared exception!
      try { 
        path0.contains(2848.77, 2848.77, 2848.77, (double) 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1629 out of bounds for length 20
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.pointSize = 58;
      // Undeclared exception!
      try { 
        path0.contains((-23.922829549369176), (-23.922829549369176));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 57 out of bounds for length 40
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.checkBuf(1, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Path path0 = new Path();
      path0.points = null;
      // Undeclared exception!
      try { 
        path0.checkBuf(5, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Path path0 = new Path();
      path0.pointSize = 614;
      // Undeclared exception!
      try { 
        path0.checkBuf(614, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(821.85917987349, 821.85917987349, 821.85917987349, 6.283185307179586);
      Path path0 = new Path(ellipse0);
      path0.points = null;
      // Undeclared exception!
      try { 
        path0.bounds();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Path path0 = new Path();
      path0.pointSize = (-2161);
      // Undeclared exception!
      try { 
        path0.bounds();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2162 out of bounds for length 20
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.append((PathIterator) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      AffineTransform affineTransform0 = new AffineTransform(0.0, (-119.865), 10.0, 0.0, 0.0, 0.0);
      AbstractRoundRectangle.Iterator abstractRoundRectangle_Iterator0 = new AbstractRoundRectangle.Iterator(roundRectangle0, affineTransform0);
      FlatteningPathIterator flatteningPathIterator0 = new FlatteningPathIterator(abstractRoundRectangle_Iterator0, 992.8634, 4);
      // Undeclared exception!
      try { 
        path0.append((PathIterator) flatteningPathIterator0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -4 out of bounds for length 4
         //
         verifyException("pythagoras.d.FlatteningPathIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.archeight = (-2921.75978105);
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.append((IShape) roundRectangle0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.append((IShape) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path();
      path0.pointSize = (-1008);
      // Undeclared exception!
      try { 
        path0.append((IShape) roundRectangle0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1008 out of bounds for length 20
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.archeight = (-46.8);
      Path path0 = null;
      try {
        path0 = new Path(roundRectangle0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Path path0 = null;
      try {
        path0 = new Path((IShape) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Path path0 = null;
      try {
        path0 = new Path(1, (-715));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -715
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Path path0 = null;
      try {
        path0 = new Path(713, 713);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid winding rule value
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Path path0 = null;
      try {
        path0 = new Path(950);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid winding rule value
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Arc arc0 = new Arc();
      Area area0 = new Area(arc0);
      Path path0 = new Path(area0);
      Path path1 = new Path(arc0);
      path1.append((IShape) path0, false);
      RoundRectangle roundRectangle0 = new RoundRectangle(827.9931936494, (-3828.38353958512), 0.0, 0, 0.0, 1);
      IdentityTransform identityTransform0 = new IdentityTransform();
      AbstractRoundRectangle.Iterator abstractRoundRectangle_Iterator0 = new AbstractRoundRectangle.Iterator(roundRectangle0, identityTransform0);
      path1.append((PathIterator) abstractRoundRectangle_Iterator0, false);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Point point0 = new Point(1262.254005802509, (-127.678));
      Vector vector0 = new Vector(point0);
      Rectangle rectangle0 = new Rectangle(vector0);
      rectangle0.setFrameFromCenter((double) 4, (-1772.21406), 21.41280232, 1262.254005802509);
      Path path0 = new Path(rectangle0);
      path0.intersects(0.0, 0.0, 0.0, 2851.6417949);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Point point0 = new Point(1262.254005802509, 1262.254005802509);
      Vector vector0 = new Vector(point0);
      Rectangle rectangle0 = new Rectangle(vector0);
      rectangle0.setFrameFromCenter((-3833.44), 862.7000273, 1262.254005802509, 641.7827963453);
      Path path0 = new Path(rectangle0);
      path0.contains(1262.254005802509, (-1.0), 1262.254005802509, 1262.254005802509);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Point point0 = new Point(0.0, (-1158.245272));
      Vector vector0 = new Vector(point0);
      Rectangle rectangle0 = new Rectangle(vector0);
      rectangle0.setFrameFromCenter((-1158.245272), 54.0, 862.7000273, 0.011582452427402634);
      Path path0 = new Path(rectangle0);
      path0.contains(0.0, 1.0, 0.0, 2.333333373069763);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Arc arc0 = new Arc();
      Area area0 = new Area(arc0);
      Path path0 = new Path(area0);
      Rectangle rectangle0 = new Rectangle(0.0, 0.0, 0.0, 0.0);
      Line line0 = new Line(0.0, (-11.260465866), 0.0, 0.0);
      Rectangle rectangle1 = line0.bounds(rectangle0);
      path0.append((IShape) rectangle1, true);
      path0.bounds(rectangle1);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Arc arc0 = new Arc();
      Area area0 = new Area(arc0);
      Path path0 = new Path(area0);
      path0.quadTo(875.328908, 0.0, 0.0, 0.0);
      Rectangle rectangle0 = new Rectangle(0.0, 0.0, 0.0, 0.0);
      path0.bounds(rectangle0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Point point0 = new Point(0.0, 2000.37203);
      Vector vector0 = new Vector(point0);
      Rectangle rectangle0 = new Rectangle(vector0);
      Path path0 = new Path(rectangle0);
      path0.lineTo(3.141592653589793, 2441.62682);
      path0.bounds(rectangle0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.bounds((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Path path0 = new Path();
      path0.pointSize = 740;
      // Undeclared exception!
      try { 
        path0.bounds((Rectangle) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 739 out of bounds for length 20
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1262.254005802509, 1262.254005802509, (-1.0), (-127.678), 1.3333333730697632, (-3309.3408489347));
      Point point0 = new Point(0.0, 2000.37203);
      Vector vector0 = new Vector(point0);
      Rectangle rectangle0 = new Rectangle(vector0);
      Path path0 = new Path(rectangle0);
      Line line0 = new Line(vector0, vector0);
      PathIterator pathIterator0 = line0.pathIterator((Transform) affineTransform0);
      path0.append(pathIterator0, true);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CubicCurve cubicCurve0 = new CubicCurve();
      Path path0 = new Path(cubicCurve0);
      Point point0 = path0.currentPoint();
      path0.lineTo((-0.01251015866205178), 0.0);
      Line line0 = new Line(point0, point0);
      IdentityTransform identityTransform0 = new IdentityTransform();
      AffineTransform affineTransform0 = new AffineTransform(identityTransform0);
      PathIterator pathIterator0 = line0.pathIterator((Transform) affineTransform0);
      path0.append(pathIterator0, true);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CubicCurve cubicCurve0 = new CubicCurve((-283.0), (-2166.0919999999996), (-283.0), (-283.0), (-283.0), (-2166.0919999999996), (-3.141592653589793), (-283.0));
      Path path0 = new Path(cubicCurve0);
      Point point0 = path0.currentPoint();
      Line line0 = new Line(point0, point0);
      IdentityTransform identityTransform0 = new IdentityTransform();
      PathIterator pathIterator0 = line0.pathIterator((Transform) identityTransform0);
      path0.append(pathIterator0, true);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Path path0 = new Path();
      AffineTransform affineTransform0 = new AffineTransform((-1675.423), (-1309.258039561403), (-127.678), (-1309.258039561403), (-3309.3408489347), 996.1646);
      Point point0 = new Point((-14.0), (-280.3972186));
      Vector vector0 = new Vector(point0);
      Line line0 = new Line(point0, vector0);
      PathIterator pathIterator0 = line0.pathIterator((Transform) affineTransform0);
      path0.append(pathIterator0, true);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(1262.254005802509, 1262.254005802509, (-4782.312722153918), (-125.67914006249596), 1.3333333730697632, (-3309.630069561403));
      Path path0 = new Path();
      QuadCurve quadCurve0 = new QuadCurve();
      AbstractQuadCurve.Iterator abstractQuadCurve_Iterator0 = new AbstractQuadCurve.Iterator(quadCurve0, affineTransform0);
      path0.append((PathIterator) abstractQuadCurve_Iterator0, false);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Arc arc0 = new Arc();
      AffineTransform affineTransform0 = new AffineTransform(0.0, (-1158.245272), (-1158.245272), 3040.047336206, 0.0, (-518.8558));
      Path path0 = new Path(arc0);
      Line line0 = new Line();
      PathIterator pathIterator0 = line0.pathIterator((Transform) affineTransform0);
      path0.append(pathIterator0, true);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.closePath();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.setWindingRule(16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid winding rule value
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Path path0 = new Path();
      path0.setWindingRule(0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Point point0 = new Point((-4806.682125802509), (-127.678));
      Rectangle rectangle0 = new Rectangle(point0);
      Path path0 = new Path(rectangle0);
      path0.setWindingRule(1);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.curveTo((-281.1375), (-281.1375), (-281.1375), (-281.1375), (-281.1375), (-281.1375));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Line line0 = new Line();
      Path path0 = new Path(line0);
      IdentityTransform identityTransform0 = new IdentityTransform();
      path0.transform(identityTransform0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Path path0 = new Path();
      path0.windingRule();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      Path path0 = new Path(ellipse0);
      IdentityTransform identityTransform0 = new IdentityTransform();
      AffineTransform affineTransform0 = new AffineTransform(identityTransform0);
      Path.Iterator path_Iterator0 = new Path.Iterator(path0, affineTransform0);
      // Undeclared exception!
      path0.append((PathIterator) path_Iterator0, false);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Path path0 = new Path();
      Path.Iterator path_Iterator0 = new Path.Iterator(path0);
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
      try { 
        path_Iterator0.currentSegment(doubleArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // Iterator out of bounds
         //
         verifyException("pythagoras.d.Path$Iterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      QuadCurve quadCurve0 = new QuadCurve(681.8978033866101, 1240.942418914418, 681.8978033866101, 681.8978033866101, (-1856.66914), 1240.942418914418);
      Rectangle rectangle0 = quadCurve0.bounds();
      Path path0 = new Path(rectangle0);
      path0.rule = (-1649);
      path0.contains(681.8978033866101, 681.8978033866101, 681.8978033866101, 3.4028234663852886E38);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.intersects(0.0, 0.0, 1262.2540058025088, 653.9773708342582);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(1528.343411605018, 1528.343411605018, 1528.343411605018, 1528.343411605018);
      Rectangle rectangle1 = new Rectangle();
      rectangle0.add((IRectangle) rectangle1);
      Path path0 = new Path(rectangle0);
      path0.intersects(1528.343411605018, (double) 1, (double) 1, 1528.343411605018);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform();
      Vector vector0 = affineTransform0.scale();
      Rectangle rectangle0 = new Rectangle(vector0);
      rectangle0.setFrameFromCenter(6.283185307179586, 0.0, 739.4112774393425, 506.0);
      Path path0 = new Path(rectangle0);
      QuadCurve quadCurve0 = new QuadCurve();
      Rectangle rectangle1 = quadCurve0.bounds(rectangle0);
      path0.contains((IRectangle) rectangle1);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      QuadCurve quadCurve0 = new QuadCurve();
      quadCurve0.ctrlx = (-8929.134005802509);
      Path path0 = new Path(quadCurve0);
      path0.contains((double) 1, 0.0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Path path0 = new Path();
      path0.createTransformedShape((Transform) null);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.append((IShape) roundRectangle0, false);
      path0.currentPoint();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.currentPoint();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Path path0 = new Path();
      path0.currentPoint();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      QuadCurve quadCurve0 = new QuadCurve(681.8978033866101, 1240.942418914418, 681.8978033866101, 681.8978033866101, (-1856.66914), 1240.942418914418);
      Rectangle rectangle0 = quadCurve0.bounds();
      Path path0 = new Path(rectangle0);
      path0.closePath();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Path path0 = new Path();
      RoundRectangle roundRectangle0 = new RoundRectangle(1, (-997.3118200461236), 28.0, (-732.4967198082605), 1, (-732.4967198082605));
      IdentityTransform identityTransform0 = new IdentityTransform();
      AbstractRoundRectangle.Iterator abstractRoundRectangle_Iterator0 = new AbstractRoundRectangle.Iterator(roundRectangle0, identityTransform0);
      // Undeclared exception!
      try { 
        path0.append((PathIterator) abstractRoundRectangle_Iterator0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Path path0 = new Path();
      path0.typeSize = 20;
      Path path1 = null;
      try {
        path1 = new Path(path0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 10 out of bounds for length 10
         //
         verifyException("pythagoras.d.Path$Iterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.moveTo(0.0, (-355.7285084952));
      path0.append((IShape) roundRectangle0, true);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Path path0 = new Path();
      path0.rule = (-1217);
      Path path1 = null;
      try {
        path1 = new Path(path0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid winding rule value
         //
         verifyException("pythagoras.d.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.clone();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(1262.2540058, 1262.2540058, 1262.2540058, 1262.2540058);
      Path path0 = new Path(rectangle0);
      path0.contains((IRectangle) rectangle0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Path path0 = new Path();
      path0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(1262.2540058, 1262.2540058, 1262.2540058, 1262.2540058);
      Path path0 = new Path(rectangle0);
      path0.intersects((IRectangle) rectangle0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Path path0 = new Path();
      Vector vector0 = new Vector();
      path0.contains((XY) vector0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Path path0 = new Path(0);
      path0.reset();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      // Undeclared exception!
      path0.append((IShape) path0, true);
  }
}
