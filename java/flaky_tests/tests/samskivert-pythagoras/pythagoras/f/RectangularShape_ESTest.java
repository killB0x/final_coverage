/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 05:04:11 GMT 2022
 */

package pythagoras.f;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.f.AffineTransform;
import pythagoras.f.Arc;
import pythagoras.f.Dimension;
import pythagoras.f.Ellipse;
import pythagoras.f.FlatteningPathIterator;
import pythagoras.f.IDimension;
import pythagoras.f.IRectangle;
import pythagoras.f.IdentityTransform;
import pythagoras.f.Line;
import pythagoras.f.Point;
import pythagoras.f.Rectangle;
import pythagoras.f.RoundRectangle;
import pythagoras.f.Transform;
import pythagoras.f.Vector;
import pythagoras.f.XY;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RectangularShape_ESTest extends RectangularShape_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(1.0F, 0.0F, 2.0F, 1.0F);
      Arc arc0 = new Arc(rectangle0, 3181.753F, 0.0F, 0);
      Point point0 = arc0.endPoint();
      AffineTransform affineTransform0 = new AffineTransform(2.0F, (-1.0F), 0.0F, 2.0F);
      Vector vector0 = affineTransform0.translation();
      rectangle0.setFrameFromCenter((XY) vector0, (XY) point0);
      assertEquals((-2.5262556F), rectangle0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Line line0 = new Line();
      Rectangle rectangle0 = line0.bounds();
      AffineTransform affineTransform0 = new AffineTransform((-1.0F), 0.0F, 458.0F, 1354.7688F, 0.0F);
      Vector vector0 = affineTransform0.scale();
      Point point0 = new Point(vector0);
      rectangle0.setFrameFromDiagonal((XY) vector0, (XY) point0);
      assertEquals(0.62296504F, rectangle0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.setFrameFromDiagonal(Float.NaN, Float.NaN, Float.NaN, Float.NaN);
      assertEquals(Float.NaN, arc0.width(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      ellipse0.setFrame(4904.1F, 1.0F, 4904.1F, 4904.1F);
      assertEquals(4904.1F, ellipse0.width, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.width = (-317.01575F);
      IdentityTransform identityTransform0 = new IdentityTransform();
      FlatteningPathIterator flatteningPathIterator0 = (FlatteningPathIterator)arc0.pathIterator((Transform) identityTransform0, 3434.25F);
      assertEquals(16, flatteningPathIterator0.recursionLimit());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Arc arc0 = new Arc();
      AffineTransform affineTransform0 = new AffineTransform();
      FlatteningPathIterator flatteningPathIterator0 = (FlatteningPathIterator)arc0.pathIterator((Transform) affineTransform0, 0.0F);
      assertEquals(0.0F, flatteningPathIterator0.flatness(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.setFrameFromDiagonal((float) 38, (float) 38, (float) 38, (float) 38);
      float float0 = arc0.minY();
      assertEquals(38.0F, arc0.y, 0.01F);
      assertEquals(38.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.setFrameFromDiagonal(4.712389F, 346.1469F, 0.0F, (-2314.9824F));
      float float0 = arc0.minY();
      assertEquals((-2314.9824F), arc0.y, 0.01F);
      assertEquals((-2314.9824F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Arc arc0 = new Arc();
      Rectangle rectangle0 = arc0.frame();
      float float0 = rectangle0.minX();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      ellipse0.setFrameFromCenter(459.71683F, 2.0F, 459.71683F, 4904.1F);
      float float0 = ellipse0.minX();
      assertEquals(459.71683F, ellipse0.x, 0.01F);
      assertEquals(459.71683F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Arc arc0 = new Arc(1);
      arc0.setFrameFromDiagonal((float) 1, (-3773.0212F), (-3773.0212F), (float) 1);
      float float0 = arc0.minX();
      assertEquals(3774.0212F, arc0.width, 0.01F);
      assertEquals((-3773.0212F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(270.0F, 270.0F, 270.0F, 0.0F, 2035.6918F, 2035.6918F);
      Point point0 = roundRectangle0.min();
      assertEquals(270.0F, point0.y(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse((-4101.648F), (-538.9F), (-4563.903F), (-1.0F));
      Point point0 = ellipse0.min();
      assertEquals((-538.9F), point0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Arc arc0 = new Arc(1);
      arc0.setFrameFromDiagonal(0.6666667F, (-1839.44F), 0.0F, 2833.3F);
      float float0 = arc0.maxY();
      assertEquals((-1839.44F), arc0.y, 0.01F);
      assertEquals(2833.3003F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse((-970.671F), (-970.671F), 0.0F, (-970.671F));
      float float0 = ellipse0.maxY();
      assertEquals((-1941.342F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Vector vector0 = new Vector(1, 1177.2778F);
      Rectangle rectangle0 = new Rectangle(vector0);
      float float0 = rectangle0.maxX();
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.setFrameFromDiagonal((-7.0F), (float) (-7), (float) (-7), (-7.0F));
      float float0 = arc0.maxX();
      assertEquals((-7.0F), arc0.x, 0.01F);
      assertEquals((-7.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(328.0F, 807.0F, 3349.5198F, 0.0F, 0.0F, 0.0F);
      Point point0 = roundRectangle0.max();
      assertEquals(3677.5198F, point0.x, 0.01F);
      assertEquals(807.0F, point0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(0.25F, (-0.5F), (-0.5F), 0.25F, 0.25F, 0.25F);
      boolean boolean0 = roundRectangle0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Arc arc0 = new Arc(1);
      arc0.setFrameFromDiagonal((float) 1, 0.0F, 0.0F, (float) 1);
      boolean boolean0 = arc0.isEmpty();
      assertEquals(1.0F, arc0.width, 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      rectangle0.setSize(979.4409F, 2104.277F);
      boolean boolean0 = rectangle0.intersects((IRectangle) rectangle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(3691.375F, 4272.638F, 807.0F, 0.0F);
      boolean boolean0 = rectangle0.intersects((IRectangle) rectangle0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.setFrameFromDiagonal(43.88F, 43.88F, 43.88F, 43.88F);
      Rectangle rectangle0 = arc0.bounds();
      arc0.frame(rectangle0);
      assertEquals(43.88F, arc0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.setFrameFromDiagonal(0.0F, (float) 38, (float) 38, 0.0F);
      Dimension dimension0 = new Dimension(0.0F, 38);
      Rectangle rectangle0 = new Rectangle(dimension0);
      arc0.frame(rectangle0);
      assertEquals(38.0F, rectangle0.width, 0.01F);
      assertEquals(0.0F, arc0.y(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle((-1495.8094F), (-1495.8094F), (-1495.8094F), (-1495.8094F), (-2880.73F), (-1495.8094F));
      Arc arc0 = new Arc();
      Rectangle rectangle0 = arc0.bounds();
      Rectangle rectangle1 = roundRectangle0.frame(rectangle0);
      assertEquals((-1495.8094F), rectangle1.height, 0.01F);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Arc arc0 = new Arc(1);
      arc0.setFrameFromDiagonal((-1972.93F), (float) 1, (-1972.93F), (-4381.4F));
      arc0.frame();
      assertEquals((-1972.93F), arc0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(0.0F, 0.0F, (-2038.8F), (-870.62524F), 0.0F, 4.712389F);
      Rectangle rectangle0 = roundRectangle0.frame();
      Point point0 = rectangle0.max();
      assertEquals((-2038.8F), point0.x, 0.01F);
      assertEquals((-870.62524F), point0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Arc arc0 = new Arc();
      Rectangle rectangle0 = arc0.frame();
      Line line0 = new Line(2800.0F, 2507.906F, 2507.906F, 0.0F);
      Rectangle rectangle1 = line0.bounds(rectangle0);
      boolean boolean0 = rectangle0.contains((IRectangle) rectangle1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Arc arc0 = new Arc();
      Rectangle rectangle0 = arc0.bounds();
      boolean boolean0 = arc0.contains((IRectangle) rectangle0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      float float0 = roundRectangle0.centerY();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Arc arc0 = new Arc(1);
      arc0.setFrameFromDiagonal((float) 1, 1.0F, 2.0F, (float) 1);
      float float0 = arc0.centerY();
      assertEquals(1.0F, arc0.y, 0.01F);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.setFrameFromDiagonal((-7.0F), (float) (-7), (float) (-7), (-7.0F));
      float float0 = arc0.centerY();
      assertEquals((-7.0F), arc0.y, 0.01F);
      assertEquals((-7.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Arc arc0 = new Arc(1);
      float float0 = arc0.centerX();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Arc arc0 = new Arc(1);
      arc0.setFrameFromDiagonal((float) 1, 1449.0F, 1444.7905F, 1.0F);
      float float0 = arc0.centerX();
      assertEquals(1.0F, arc0.x, 0.01F);
      assertEquals(722.89526F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Arc arc0 = new Arc();
      arc0.setFrameFromDiagonal(76.87F, 2222.2578F, (-1794.8782F), 2114.155F);
      float float0 = arc0.centerX();
      assertEquals(108.10278F, arc0.height, 0.01F);
      assertEquals((-859.0041F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Arc arc0 = new Arc((-1903.79F), 751.47F, 751.47F, 751.47F, 704.162F, 751.47F, 1);
      Rectangle rectangle0 = arc0.frame();
      rectangle0.setSize(360.0F, (-1903.79F));
      Point point0 = rectangle0.center();
      assertEquals((-200.42505F), point0.y, 0.01F);
      assertEquals((-1723.79F), point0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Arc arc0 = new Arc((-1903.79F), 751.47F, 751.47F, 751.47F, 704.162F, 751.47F, 1);
      Rectangle rectangle0 = arc0.frame();
      Point point0 = rectangle0.center();
      assertEquals(1127.205F, point0.y, 0.01F);
      assertEquals((-1528.055F), point0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.setFrameFromDiagonal(0.0F, (-1123.1039F), (-1123.1039F), 0.0F);
      roundRectangle0.bounds(rectangle0);
      assertEquals((-1123.1039F), roundRectangle0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Line line0 = new Line(902.0F, 902.0F, 902.0F, 17);
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(dimension0);
      Rectangle rectangle1 = line0.bounds(rectangle0);
      Rectangle rectangle2 = rectangle1.bounds(rectangle1);
      assertEquals(17.0F, rectangle2.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse((-14.646244F), 1172.5571F, (-14.646244F), 1172.5571F);
      Arc arc0 = new Arc();
      Rectangle rectangle0 = arc0.bounds();
      Rectangle rectangle1 = ellipse0.bounds(rectangle0);
      assertEquals((-14.646244F), rectangle1.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle((-2957.513F), 1282.573F, 44.997402F, (-48.0F), 2968.0F, (-48.0F));
      Vector vector0 = new Vector(0.0F, (-3109.4175F));
      Rectangle rectangle0 = new Rectangle(vector0);
      Rectangle rectangle1 = roundRectangle0.bounds(rectangle0);
      assertEquals((-2957.513F), rectangle1.x(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      ellipse0.setFrame((-218.36F), (-520.0F), (-520.0F), 2.0F);
      Rectangle rectangle0 = ellipse0.bounds();
      assertEquals((-218.36F), rectangle0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Arc arc0 = new Arc();
      Rectangle rectangle0 = arc0.bounds();
      assertEquals(0.0F, rectangle0.width(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(292.094F, 1342.3608F, 3281.6694F, 3281.6694F, 3281.6694F, 1342.3608F);
      Rectangle rectangle0 = roundRectangle0.bounds();
      assertEquals(3281.6694F, rectangle0.width(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      ellipse0.setFrame(1622.1F, (-331.0F), (-331.0F), (-3.1415927F));
      Rectangle rectangle0 = ellipse0.bounds();
      assertEquals((-3.1415927F), rectangle0.height(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Arc arc0 = new Arc();
      // Undeclared exception!
      try { 
        arc0.setFrameFromDiagonal((XY) null, (XY) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.RectangularShape", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      // Undeclared exception!
      try { 
        roundRectangle0.setFrameFromCenter((XY) null, (XY) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.RectangularShape", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Arc arc0 = new Arc(1);
      // Undeclared exception!
      try { 
        arc0.setFrame((XY) null, (IDimension) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.RectangularShape", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Arc arc0 = new Arc();
      // Undeclared exception!
      try { 
        arc0.setFrame((IRectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.RectangularShape", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Arc arc0 = new Arc();
      // Undeclared exception!
      try { 
        arc0.pathIterator((Transform) null, (-1938.7358F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Flatness is less then zero
         //
         verifyException("pythagoras.f.FlatteningPathIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Arc arc0 = new Arc();
      // Undeclared exception!
      try { 
        arc0.frame((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.AbstractArc", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Arc arc0 = new Arc();
      // Undeclared exception!
      try { 
        arc0.contains((XY) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.RectangularShape", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Arc arc0 = new Arc();
      // Undeclared exception!
      try { 
        arc0.bounds((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.AbstractArc", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(328.0F, 807.0F, 3349.5198F, 0.0F, 0.0F, 0.0F);
      Rectangle rectangle0 = roundRectangle0.frame();
      boolean boolean0 = rectangle0.contains(328.0F, 3349.5198F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      ellipse0.setFrameFromCenter(459.71683F, 2.0F, 459.71683F, 4904.1F);
      ellipse0.center();
      assertEquals(459.71683F, ellipse0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Arc arc0 = new Arc();
      float float0 = arc0.maxY();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Arc arc0 = new Arc(1);
      Rectangle rectangle0 = arc0.bounds();
      rectangle0.setFrameFromDiagonal(0.0F, 1.0F, 0.5F, 0.5F);
      rectangle0.bounds(rectangle0);
      assertEquals(0.5F, rectangle0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Point point0 = rectangle0.max();
      Arc arc0 = new Arc(rectangle0, 0.0F, (-704.162F), 0);
      arc0.setAngleStart((XY) point0);
      assertEquals(0.0F, arc0.start, 0.01F);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      float float0 = rectangle0.maxX();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Point point0 = new Point(1.0F, 1072.9099F);
      Dimension dimension0 = new Dimension(1856.6107F, (-7));
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      rectangle0.setSize(7.0F, 2334.03F);
      boolean boolean0 = rectangle0.contains((XY) point0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Point point0 = new Point(1.0F, 1072.9099F);
      Dimension dimension0 = new Dimension(1856.6107F, (-7));
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      boolean boolean0 = rectangle0.contains((XY) point0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Arc arc0 = new Arc();
      Point point0 = arc0.center();
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      // Undeclared exception!
      try { 
        rectangle0.intersects((IRectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.RectangularShape", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Arc arc0 = new Arc();
      Point point0 = arc0.min();
      assertEquals(0.0F, point0.y(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Arc arc0 = new Arc();
      float float0 = arc0.minY();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Rectangle rectangle1 = roundRectangle0.bounds(rectangle0);
      assertEquals(0.0F, rectangle1.width(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Point point0 = rectangle0.max();
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Dimension dimension0 = new Dimension((-702.7336F), (-1123.1039F));
      roundRectangle0.setFrame((XY) point0, (IDimension) dimension0);
      assertEquals(0.0F, roundRectangle0.x, 0.01F);
      assertEquals(0.0F, roundRectangle0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Arc arc0 = new Arc();
      Rectangle rectangle0 = new Rectangle();
      arc0.setFrame((IRectangle) rectangle0);
      assertEquals(0.0F, arc0.angleExtent(), 0.01F);
  }
}
