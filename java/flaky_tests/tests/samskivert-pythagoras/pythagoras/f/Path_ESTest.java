/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 04:10:38 GMT 2022
 */

package pythagoras.f;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.f.AffineTransform;
import pythagoras.f.Arc;
import pythagoras.f.Area;
import pythagoras.f.CubicCurve;
import pythagoras.f.Ellipse;
import pythagoras.f.FlatteningPathIterator;
import pythagoras.f.IRectangle;
import pythagoras.f.IShape;
import pythagoras.f.IdentityTransform;
import pythagoras.f.Line;
import pythagoras.f.Path;
import pythagoras.f.PathIterator;
import pythagoras.f.Point;
import pythagoras.f.QuadCurve;
import pythagoras.f.Rectangle;
import pythagoras.f.RoundRectangle;
import pythagoras.f.Transform;
import pythagoras.f.XY;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Path_ESTest extends Path_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.typeSize = (-367);
      // Undeclared exception!
      try { 
        path0.quadTo(0.0F, 0.0F, 2151.196F, 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -367 out of bounds for length 10
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.pointSize = 5;
      path0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.typeSize = (-2146769867);
      // Undeclared exception!
      try { 
        path0.currentPoint();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2146769868 out of bounds for length 10
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Path path0 = new Path();
      IdentityTransform identityTransform0 = new IdentityTransform();
      path0.moveTo(0.0F, (-3.1415927F));
      Path path1 = path0.clone();
      CubicCurve cubicCurve0 = new CubicCurve();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)119;
      path1.types = byteArray0;
      PathIterator pathIterator0 = cubicCurve0.pathIterator((Transform) identityTransform0);
      path1.append(pathIterator0, true);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Path path0 = new Path();
      Line line0 = new Line();
      AffineTransform affineTransform0 = new AffineTransform(10.0F, (-5260.5F), (-811.0F), 0.5F);
      path0.typeSize = (-3436);
      PathIterator pathIterator0 = line0.pathIterator((Transform) affineTransform0, 17713.018F);
      // Undeclared exception!
      try { 
        path0.append(pathIterator0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -3437 out of bounds for length 10
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      QuadCurve quadCurve0 = new QuadCurve();
      Path path0 = new Path(quadCurve0);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)60;
      path0.types = byteArray0;
      path0.closePath();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Path path0 = new Path();
      path0.typeSize = (-1378);
      // Undeclared exception!
      try { 
        path0.closePath();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.typeSize = (-1035);
      // Undeclared exception!
      try { 
        path0.append((IShape) roundRectangle0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1035 out of bounds for length 10
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      PathIterator pathIterator0 = path0.pathIterator((Transform) null);
      float[] floatArray0 = new float[3];
      pathIterator0.currentSegment(floatArray0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Path path0 = new Path();
      path0.checkBuf(2, false);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Area area0 = new Area();
      Rectangle rectangle0 = area0.bounds();
      Path path0 = new Path(rectangle0);
      Path.Iterator path_Iterator0 = new Path.Iterator(path0);
      path_Iterator0.windingRule();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Path path0 = new Path();
      Path.Iterator path_Iterator0 = new Path.Iterator(path0);
      path_Iterator0.next();
      path_Iterator0.isDone();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Path path0 = new Path();
      Path.Iterator path_Iterator0 = new Path.Iterator(path0);
      path_Iterator0.isDone();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Path path0 = new Path(0, 0);
      path0.rule = (-761);
      path0.windingRule();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Arc arc0 = new Arc();
      Path path0 = new Path(arc0);
      IdentityTransform identityTransform0 = new IdentityTransform();
      path0.rule = (-3447);
      path0.pathIterator((Transform) identityTransform0, 0.0F);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Path path0 = new Path();
      IdentityTransform identityTransform0 = new IdentityTransform();
      path0.pathIterator((Transform) identityTransform0, (float) 0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Area area0 = new Area();
      Rectangle rectangle0 = area0.bounds((Rectangle) null);
      Path path0 = new Path(rectangle0);
      IdentityTransform identityTransform0 = new IdentityTransform();
      path0.setWindingRule(0);
      path0.pathIterator((Transform) identityTransform0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Path path0 = new Path();
      path0.rule = (-17);
      IdentityTransform identityTransform0 = new IdentityTransform();
      path0.pathIterator((Transform) identityTransform0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.isInside((-1209));
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Path path0 = new Path();
      path0.isInside(0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Path path0 = new Path();
      path0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.setFrame(0.0F, 2151.196F, 2151.196F, 0.0F);
      Path path0 = new Path(roundRectangle0);
      path0.lineTo((-3.1415927F), 2152.6284F);
      Rectangle rectangle0 = new Rectangle(0.0F, (-522.78F), (-1.0F), 3.4028235E38F);
      path0.intersects((IRectangle) rectangle0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Path path0 = new Path(0);
      path0.intersects((IRectangle) rectangle0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.setFrame(0.0F, 2151.196F, 2151.196F, 0.0F);
      Path path0 = new Path(roundRectangle0);
      path0.currentPoint();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      QuadCurve quadCurve0 = new QuadCurve(5.0F, (-461.5578F), (-461.5578F), 5.0F, 0.99999F, 57.295776F);
      Area area0 = new Area(quadCurve0);
      Path path0 = new Path(area0);
      path0.currentPoint();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Path path0 = new Path();
      QuadCurve quadCurve0 = new QuadCurve((-1.0F), 1.0F, 1, 0.0F, 3.2822466F, (-1231.9F));
      Rectangle rectangle0 = new Rectangle();
      Rectangle rectangle1 = quadCurve0.bounds(rectangle0);
      path0.append((IShape) rectangle1, false);
      path0.currentPoint();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      QuadCurve quadCurve0 = new QuadCurve(2059.2498F, (-3011.798F), 2101.729F, 1326.851F, (-4446.429F), 90.0F);
      Path path0 = new Path(quadCurve0);
      Point point0 = new Point();
      path0.contains((XY) point0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse((-1.0F), (-1.0F), 0.0F, 0.0F);
      Path path0 = new Path(ellipse0);
      Rectangle rectangle0 = new Rectangle();
      path0.lineTo((-1.0F), 0.0F);
      path0.lineTo(2388.88F, 4.0F);
      path0.contains((IRectangle) rectangle0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Path path0 = new Path();
      QuadCurve quadCurve0 = new QuadCurve((-1.0F), 1.0F, 1, 0.0F, 3.2822466F, (-1231.9F));
      Rectangle rectangle0 = new Rectangle();
      Rectangle rectangle1 = quadCurve0.bounds(rectangle0);
      path0.append((IShape) rectangle1, false);
      path0.contains(1.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Path path0 = new Path(0, 0);
      path0.clone();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Arc arc0 = new Arc();
      Path path0 = new Path(arc0);
      path0.rule = (-3447);
      path0.clone();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Area area0 = new Area();
      Rectangle rectangle0 = area0.bounds((Rectangle) null);
      Path path0 = new Path(rectangle0);
      path0.curveTo(2388.88F, 1.0F, 0.0F, 0.0F, 0.0F, (-1.0F));
      path0.bounds(rectangle0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Path path0 = new Path();
      CubicCurve cubicCurve0 = new CubicCurve(2835.0276F, 1, (-813.2401F), 2835.0276F, (-1.0F), 0.0F, (-605.6401F), 1355.4458F);
      Rectangle rectangle0 = cubicCurve0.bounds();
      path0.bounds(rectangle0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Path path0 = new Path(1, 1);
      path0.moveTo(2877.2356F, 3299.5146F);
      path0.bounds();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Path path0 = new Path();
      path0.bounds();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.quadTo(7.2560763E9F, 7.2560763E9F, 7.2560763E9F, 7.2560763E9F);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.types = null;
      // Undeclared exception!
      try { 
        path0.quadTo(0.0F, 0.0F, 3.2950597F, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Path path0 = new Path();
      path0.typeSize = 19;
      // Undeclared exception!
      try { 
        path0.quadTo(19, 19, 19, 19);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 19 out of bounds for length 10
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Path path0 = new Path();
      IdentityTransform identityTransform0 = new IdentityTransform();
      // Undeclared exception!
      try { 
        path0.pathIterator((Transform) identityTransform0, (-1562.8F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Flatness is less then zero
         //
         verifyException("pythagoras.f.FlatteningPathIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Path path0 = new Path(1, 1);
      IdentityTransform identityTransform0 = new IdentityTransform();
      Path path1 = (Path)path0.createTransformedShape(identityTransform0);
      path1.points = null;
      // Undeclared exception!
      try { 
        path1.moveTo(0.0F, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.lineTo(0, 0.0F);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Path path0 = new Path();
      path0.typeSize = 40;
      // Undeclared exception!
      try { 
        path0.lineTo(40, 930.62634F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Path path0 = new Path();
      path0.pointSize = (-2241);
      // Undeclared exception!
      try { 
        path0.isEmpty();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2242 out of bounds for length 20
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.setFrame(0.0F, 1026.1249F, 1026.1249F, 0.0F);
      Path path0 = new Path(roundRectangle0);
      path0.quadTo(0.0F, 0.0F, 1026.1249F, 0.0F);
      Path.pointShift = null;
      // Undeclared exception!
      try { 
        path0.intersects(0.0F, 0.0F, 1026.1249F, (float) 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Path$Iterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Path path0 = new Path();
      path0.pointSize = 1;
      // Undeclared exception!
      try { 
        path0.intersects((float) 1, (float) 1, (float) 1, 1150.454F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 20
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Path path0 = new Path();
      path0.typeSize = 1738;
      // Undeclared exception!
      try { 
        path0.curveTo(1.0E-10F, 1738, 1.0E-10F, 1084.7F, 0.017453292F, 1660.861F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1738 out of bounds for length 10
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.points = null;
      // Undeclared exception!
      try { 
        path0.currentPoint();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      float[] floatArray0 = new float[2];
      path0.points = floatArray0;
      AffineTransform affineTransform0 = new AffineTransform((-1231.9F), 0, 0.0F, 0.0F, 0.0F);
      // Undeclared exception!
      try { 
        path0.createTransformedShape(affineTransform0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2 out of bounds for length 2
         //
         verifyException("pythagoras.f.AffineTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.contains((XY) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.pointSize = 1975;
      CubicCurve cubicCurve0 = new CubicCurve();
      Point point0 = cubicCurve0.ctrlP2();
      // Undeclared exception!
      try { 
        path0.contains((XY) point0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1974 out of bounds for length 40
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.contains((IRectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      float[] floatArray0 = new float[6];
      path0.points = floatArray0;
      CubicCurve cubicCurve0 = new CubicCurve();
      Rectangle rectangle0 = cubicCurve0.bounds();
      // Undeclared exception!
      try { 
        path0.contains((IRectangle) rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 33 out of bounds for length 6
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.setFrame(0.0F, 4222.157F, 4222.157F, 0.0F);
      Path path0 = new Path(roundRectangle0);
      Path.pointShift = null;
      path0.quadTo(0.0F, 0.0F, 0, 0.0F);
      // Undeclared exception!
      try { 
        path0.contains(0.0F, 0.0F, 4222.157F, 4222.157F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Path$Iterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Path path0 = new Path();
      path0.pointSize = 896;
      // Undeclared exception!
      try { 
        path0.contains(0.0F, 1171.82F, (-139.22168F), 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 895 out of bounds for length 20
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Path path0 = new Path();
      path0.pointSize = 122;
      // Undeclared exception!
      try { 
        path0.contains((-586.841F), (-586.841F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 121 out of bounds for length 20
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.types = null;
      // Undeclared exception!
      try { 
        path0.closePath();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Path path0 = new Path();
      path0.points = null;
      // Undeclared exception!
      try { 
        path0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.util.Platform", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.checkBuf(0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Line line0 = new Line();
      Path path0 = new Path(line0);
      path0.types = null;
      // Undeclared exception!
      try { 
        path0.checkBuf((-762), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.pointSize = (-2106);
      // Undeclared exception!
      try { 
        path0.checkBuf(2167, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      float[] floatArray0 = new float[5];
      path0.points = floatArray0;
      // Undeclared exception!
      try { 
        path0.bounds();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 33 out of bounds for length 5
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Path path0 = new Path();
      RoundRectangle roundRectangle0 = new RoundRectangle((-669.549F), 382.8F, 0, (-669.549F), 1540.41F, 382.8F);
      PathIterator pathIterator0 = roundRectangle0.pathIterator((Transform) null);
      FlatteningPathIterator flatteningPathIterator0 = new FlatteningPathIterator(pathIterator0, 6.888974F);
      // Undeclared exception!
      try { 
        path0.append((PathIterator) flatteningPathIterator0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.append((PathIterator) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      // Undeclared exception!
      path0.append((IShape) path0, true);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.append((IShape) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Path path0 = new Path();
      path0.typeSize = 1;
      // Undeclared exception!
      try { 
        path0.append((IShape) path0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2 out of bounds for length 20
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.arcwidth = (-1231.9F);
      Path path0 = null;
      try {
        path0 = new Path(roundRectangle0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Path path0 = null;
      try {
        path0 = new Path((IShape) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Path path0 = new Path();
      path0.typeSize = 19;
      Path path1 = null;
      try {
        path1 = new Path(path0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 10 out of bounds for length 10
         //
         verifyException("pythagoras.f.Path$Iterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Path path0 = null;
      try {
        path0 = new Path(1, (-462));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -462
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Path path0 = null;
      try {
        path0 = new Path(Integer.MIN_VALUE, Integer.MIN_VALUE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid winding rule value
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Path path0 = null;
      try {
        path0 = new Path((-1944));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid winding rule value
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.setFrame(0.0F, 1026.1249F, 1026.1249F, 0.0F);
      Path path0 = new Path(roundRectangle0);
      path0.quadTo(0.0F, 0.0F, 1026.1249F, 0.0F);
      path0.contains(0.0F, 0.0F, 1026.1249F, 1026.1249F);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse((-1.0F), 800.26F, 0.0F, 0.0F);
      Path path0 = new Path(ellipse0);
      Rectangle rectangle0 = new Rectangle();
      path0.lineTo(800.26F, 2.0F);
      path0.lineTo(2388.88F, 4.0F);
      path0.bounds(rectangle0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle(5155.0F, 2.7182817F, 1.0F, 0.0F, 0.0F, 0.0F);
      Path path0 = new Path(roundRectangle0);
      Rectangle rectangle0 = new Rectangle();
      path0.bounds(rectangle0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Path path0 = new Path();
      Point point0 = new Point();
      Line line0 = new Line(point0, point0);
      path0.pointSize = (-314);
      Rectangle rectangle0 = line0.bounds();
      // Undeclared exception!
      try { 
        path0.bounds(rectangle0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -315 out of bounds for length 20
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.bounds((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Path path0 = new Path();
      IdentityTransform identityTransform0 = new IdentityTransform();
      path0.moveTo(0.0F, (-3.1415927F));
      CubicCurve cubicCurve0 = new CubicCurve();
      PathIterator pathIterator0 = cubicCurve0.pathIterator((Transform) identityTransform0);
      path0.append(pathIterator0, true);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Path path0 = new Path(1, 1);
      IdentityTransform identityTransform0 = new IdentityTransform();
      path0.moveTo((-1.0F), 0.0F);
      CubicCurve cubicCurve0 = new CubicCurve();
      PathIterator pathIterator0 = cubicCurve0.pathIterator((Transform) identityTransform0);
      path0.append(pathIterator0, true);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Path path0 = new Path(1, 1);
      IdentityTransform identityTransform0 = new IdentityTransform();
      QuadCurve quadCurve0 = new QuadCurve();
      PathIterator pathIterator0 = quadCurve0.pathIterator((Transform) identityTransform0);
      path0.append(pathIterator0, true);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.closePath();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Path path0 = new Path();
      path0.typeSize = 6;
      // Undeclared exception!
      try { 
        path0.moveTo(329.97662F, 329.97662F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2 out of bounds for length 20
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse((-1.0F), (-1.0F), 0.0F, 0.0F);
      Path path0 = new Path(ellipse0);
      path0.setWindingRule(1);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      QuadCurve quadCurve0 = new QuadCurve();
      Path path0 = new Path(quadCurve0);
      path0.setWindingRule(0);
      path0.windingRule();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.setWindingRule(2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid winding rule value
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      IdentityTransform identityTransform0 = new IdentityTransform();
      Path path0 = new Path(0);
      path0.transform(identityTransform0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Path path0 = new Path();
      path0.contains(1.0F, 1.0F);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.curveTo(1731.88F, 1731.88F, 1731.88F, 1731.88F, 1731.88F, 1731.88F);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      AffineTransform affineTransform0 = new AffineTransform(0.6666667F, 0.0F, 0.0F, 0.0F);
      Path.Iterator path_Iterator0 = new Path.Iterator(path0, affineTransform0);
      FlatteningPathIterator flatteningPathIterator0 = new FlatteningPathIterator(path_Iterator0, 0.0F, 1);
      // Undeclared exception!
      try { 
        path0.append((PathIterator) flatteningPathIterator0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -7 out of bounds for length 1
         //
         verifyException("pythagoras.f.FlatteningPathIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Path path0 = new Path();
      Path.Iterator path_Iterator0 = new Path.Iterator(path0);
      // Undeclared exception!
      try { 
        path_Iterator0.currentSegment((float[]) null);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // Iterator out of bounds
         //
         verifyException("pythagoras.f.Path$Iterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      QuadCurve quadCurve0 = new QuadCurve(5.0F, (-461.5578F), (-461.5578F), 5.0F, 0.99999F, 57.295776F);
      Area area0 = new Area(quadCurve0);
      Path path0 = new Path(area0);
      path0.intersects((-461.5578F), (-3692.289F), (-461.5578F), (-1.0F));
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Path path0 = new Path();
      QuadCurve quadCurve0 = new QuadCurve((-1.0F), 1.0F, 1, 0.0F, 3.2822466F, (-1231.9F));
      Rectangle rectangle0 = new Rectangle();
      Rectangle rectangle1 = quadCurve0.bounds(rectangle0);
      path0.append((IShape) rectangle1, false);
      path0.intersects(0.0F, 0.0F, 249.97192F, 1362.56F);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.setFrame(0.0F, 2150.4617F, 2150.4617F, 0.0F);
      Path path0 = new Path(roundRectangle0);
      path0.quadTo(0.0F, 0.0F, 2150.4617F, 0.0F);
      path0.contains(165.00702F, 1475.7173F, 252.0F, 4.0F);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.contains(0.0F, 0.0F, 4222.157F, 4222.157F);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Path path0 = new Path();
      Point point0 = new Point(874.45F, 874.45F);
      path0.contains((XY) point0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Path path0 = new Path();
      path0.createTransformedShape((Transform) null);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      QuadCurve quadCurve0 = new QuadCurve();
      Path path0 = new Path(quadCurve0);
      path0.currentPoint();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Path path0 = new Path();
      path0.currentPoint();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Path path0 = new Path();
      path0.moveTo(3007.8027F, 3007.8027F);
      QuadCurve quadCurve0 = new QuadCurve(3007.8027F, 0, 0, 0, 0, 3007.8027F);
      path0.append((IShape) quadCurve0, true);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      IdentityTransform identityTransform0 = new IdentityTransform();
      path0.moveTo(0.0F, 0.0F);
      CubicCurve cubicCurve0 = new CubicCurve();
      PathIterator pathIterator0 = cubicCurve0.pathIterator((Transform) identityTransform0);
      path0.append(pathIterator0, true);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.lineTo(26.60447F, 0.0F);
      path0.append((IShape) roundRectangle0, true);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      QuadCurve quadCurve0 = new QuadCurve(2059.2498F, (-3011.798F), 2101.729F, 1326.851F, (-4446.429F), 90.0F);
      Path path0 = new Path(quadCurve0);
      Rectangle rectangle0 = path0.bounds();
      AffineTransform affineTransform0 = new AffineTransform(1.5707964F, 4338.649F, 1, (-1653.354F));
      PathIterator pathIterator0 = rectangle0.pathIterator((Transform) affineTransform0, 3667.3F);
      path0.append(pathIterator0, false);
      path0.closePath();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      roundRectangle0.archeight = (-2846.2F);
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.append((IShape) roundRectangle0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // First segment must be a SEG_MOVETO
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.append((IShape) roundRectangle0, false);
      path0.currentPoint();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      path0.rule = 9;
      Path path1 = null;
      try {
        path1 = new Path(path0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid winding rule value
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      Path.Iterator path_Iterator0 = new Path.Iterator(path0);
      // Undeclared exception!
      path0.append((PathIterator) path_Iterator0, false);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Path path0 = new Path();
      int int0 = path0.windingRule();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      QuadCurve quadCurve0 = new QuadCurve(0.0F, (-1.0F), 1, 660.852F, 311.8F, (-1.0F));
      Rectangle rectangle0 = quadCurve0.bounds();
      path0.append((IShape) rectangle0, true);
      boolean boolean0 = path0.intersects(0.25F, (float) 1, 0.0F, 0.0F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Path path0 = new Path();
      // Undeclared exception!
      try { 
        path0.intersects((IRectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      QuadCurve quadCurve0 = new QuadCurve(5.0F, (-461.5578F), (-461.5578F), 5.0F, 0.99999F, 57.295776F);
      Area area0 = new Area(quadCurve0);
      AffineTransform affineTransform0 = new AffineTransform(57.295776F, (-277.1F), (-461.5578F), 5.0F, 0.99999F, 0.99999F);
      Path path0 = new Path(area0);
      PathIterator pathIterator0 = path0.pathIterator((Transform) affineTransform0, 7.373273F);
      assertEquals(0, pathIterator0.windingRule());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RoundRectangle roundRectangle0 = new RoundRectangle();
      Path path0 = new Path(roundRectangle0);
      CubicCurve cubicCurve0 = new CubicCurve();
      Rectangle rectangle0 = cubicCurve0.bounds();
      boolean boolean0 = path0.contains((IRectangle) rectangle0);
      assertEquals(1, path0.windingRule());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Path path0 = new Path();
      path0.reset();
      assertEquals(1, path0.windingRule());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      QuadCurve quadCurve0 = new QuadCurve(5.0F, (-461.5578F), (-461.5578F), 5.0F, 0.99999F, 57.295776F);
      Area area0 = new Area(quadCurve0);
      Path path0 = new Path(area0);
      boolean boolean0 = path0.isEmpty();
      assertFalse(boolean0);
      assertEquals(0, path0.windingRule());
  }
}
