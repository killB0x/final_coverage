/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 05:26:05 GMT 2022
 */

package pythagoras.f;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.f.Point;
import pythagoras.f.Vector;
import pythagoras.f.XY;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Point_ESTest extends Point_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector vector0 = new Vector((-640.7F), 847.6761F);
      Point point0 = new Point(vector0);
      assertEquals((-640.7F), point0.x, 0.01F);
      assertEquals(847.6761F, point0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Point point0 = new Point(1055.8168F, 0.0F);
      float float0 = point0.y();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1055.8168F, point0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Point point0 = new Point(2142.23F, 2142.23F);
      float float0 = point0.y();
      assertEquals(2142.23F, point0.x, 0.01F);
      assertEquals(2142.23F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Point point0 = new Point(1864.77F, (-2239.4F));
      float float0 = point0.y();
      assertEquals((-2239.4F), float0, 0.01F);
      assertEquals(1864.77F, point0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Point point0 = new Point();
      float float0 = point0.x();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Point point0 = new Point(1055.8168F, 0.0F);
      float float0 = point0.x();
      assertEquals(1055.8168F, float0, 0.01F);
      assertEquals(0.0F, point0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Point point0 = new Point((-1.0F), 2156.32F);
      float float0 = point0.x();
      assertEquals(2156.32F, point0.y, 0.01F);
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Point point0 = new Point(847.6761F, (-2852.0625F));
      point0.set(847.6761F, (-1672.1321F));
      point0.subtractLocal((-1115.2133F), (-2852.0625F));
      assertEquals(1962.8894F, point0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Point point0 = new Point(847.6761F, (-2852.0625F));
      point0.subtractLocal((-1115.2133F), (-2852.0625F));
      assertEquals(1962.8894F, point0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Point point0 = new Point();
      Point point1 = point0.add(1.0F, (-1707.1F), point0);
      point1.x = (-4157.8F);
      point0.subtractLocal((-430.39F), 0.0F);
      assertEquals((-1707.1F), point0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Point point0 = new Point(1055.8168F, 0.0F);
      point0.subtract((-4308.779F), 3827.807F, point0);
      point0.set((XY) point0);
      assertEquals((-3827.807F), point0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Point point0 = new Point();
      Point point1 = point0.add((-1.0F), 0.0F, point0);
      Point point2 = point1.mult((-333.77454F));
      point0.set((XY) point2);
      assertEquals(-0.0F, point1.y, 0.01F);
      assertTrue(point0.equals((Object)point2));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector vector0 = new Vector((-640.7F), 847.6761F);
      Point point0 = new Point(847.6761F, (-2852.0625F));
      point0.set((XY) vector0);
      assertEquals((-640.7F), point0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Point point0 = new Point(1055.8168F, 0.0F);
      point0.set((-6999789.0F), (-137.131F));
      assertEquals((-6999789.0F), point0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Point point0 = new Point();
      point0.set(0.0F, 491.49005F);
      assertEquals(491.49005F, point0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Point point0 = new Point(1055.8168F, 0.0F);
      Point point1 = new Point();
      point1.add((-1.0F), 0.0F, point0);
      point0.rotateLocal(1515.8403F);
      assertEquals(0.021874929F, point0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Point point0 = new Point();
      Point point1 = point0.rotateLocal(0.0F);
      assertEquals(0.0F, point1.y(), 0.01F);
      assertEquals(0.0F, point0.x(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Point point0 = new Point();
      Point point1 = point0.subtract(1.0F, 0.0F);
      point1.rotateLocal((-2635.6F));
      assertEquals(0.9808264F, point1.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Point point0 = new Point((-1.0F), 2156.32F);
      point0.multLocal((-1.0F));
      assertEquals(1.0F, point0.x, 0.01F);
      assertEquals((-2156.32F), point0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Point point0 = new Point();
      point0.multLocal((-1.0F));
      assertEquals(-0.0F, point0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Point point0 = new Point(1055.8168F, 0.0F);
      point0.set((-770.7F), 0.0F);
      point0.multLocal(1.0F);
      assertEquals((-770.7F), point0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Point point0 = new Point();
      point0.addLocal(1.0F, (-2035.837F));
      assertEquals(1.0F, point0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Point point0 = new Point(2142.23F, 2142.23F);
      point0.addLocal(2.10602924E13F, 0.0F);
      assertEquals(2.10602924E13F, point0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Point point0 = new Point();
      Point point1 = point0.subtract(1.0F, 0.0F);
      point1.addLocal(0.0F, 0.0F);
      assertEquals(0.0F, point1.y, 0.01F);
      assertEquals((-1.0F), point1.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Point point0 = new Point(2142.23F, 2142.23F);
      point0.multLocal(2142.23F);
      assertEquals(4589149.5F, point0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Point point0 = new Point();
      Point point1 = point0.addLocal(0.0F, 0.0F);
      assertEquals(0.0F, point1.x(), 0.01F);
      assertEquals(0.0F, point1.y(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Point point0 = new Point();
      Point point1 = point0.subtractLocal(0.0F, 0.0F);
      assertEquals(0.0F, point0.x(), 0.01F);
      assertEquals(0.0F, point1.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Point point0 = new Point(1055.8168F, 0.0F);
      point0.rotateLocal(1515.8403F);
      assertEquals((-23.095917F), point0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Point point0 = new Point();
      point0.set((XY) point0);
      assertEquals(0.0F, point0.x(), 0.01F);
      assertEquals(0.0F, point0.y(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Point point0 = new Point();
      // Undeclared exception!
      try { 
        point0.set((XY) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Point point0 = null;
      try {
        point0 = new Point((XY) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Point", e);
      }
  }
}
