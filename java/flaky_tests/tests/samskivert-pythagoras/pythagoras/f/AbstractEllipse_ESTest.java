/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 04:44:32 GMT 2022
 */

package pythagoras.f;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.f.AbstractEllipse;
import pythagoras.f.AffineTransform;
import pythagoras.f.Dimension;
import pythagoras.f.Ellipse;
import pythagoras.f.IDimension;
import pythagoras.f.PathIterator;
import pythagoras.f.Point;
import pythagoras.f.Rectangle;
import pythagoras.f.Transform;
import pythagoras.f.XY;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractEllipse_ESTest extends AbstractEllipse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      AffineTransform affineTransform0 = new AffineTransform(2.0F, 456.3446F, 0.6666667F, 0.0F);
      AbstractEllipse.Iterator abstractEllipse_Iterator0 = new AbstractEllipse.Iterator(ellipse0, affineTransform0);
      abstractEllipse_Iterator0.next();
      abstractEllipse_Iterator0.next();
      float[] floatArray0 = new float[6];
      int int0 = abstractEllipse_Iterator0.currentSegment(floatArray0);
      assertEquals(3, int0);
      assertArrayEquals(new float[] {0.6666667F, 0.0F, 0.6666667F, 0.0F, 0.6666667F, 0.0F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(1.0F, 1.20115149E15F, 1.0F, 2484.6968F);
      boolean boolean0 = ellipse0.intersects(1.0F, 4239.565F, 2484.6968F, 1.20115149E15F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(1.0E-5F, 1.0E-5F, 0.5F, 0.047754932F);
      Rectangle rectangle0 = ellipse0.frame();
      Point point0 = new Point(1.0E-5F, (-677.2823F));
      Point point1 = rectangle0.location(point0);
      point0.multLocal(0.5F);
      Dimension dimension0 = new Dimension(1742.9551F, 1.0E-5F);
      ellipse0.setFrame((XY) point1, (IDimension) dimension0);
      boolean boolean0 = ellipse0.intersects(1.0E-5F, 1.0E-5F, 0.5F, 1.0E-5F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      ellipse0.setFrame(0.0F, 0.0F, 3557.0F, 3557.0F);
      boolean boolean0 = ellipse0.intersects((-3760.614F), (-312.13043F), 2003.746F, 0.0F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(1.0E-5F, 1.0E-5F, 1.0E-5F, 1.0E-5F);
      boolean boolean0 = ellipse0.intersects(1.0E-5F, 0.0F, 0.0F, 0.0F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(1921.13F, 1921.13F, 430.8359F, 430.8359F);
      boolean boolean0 = ellipse0.contains(0.0F, 1.0F, 667.4771F, (float) 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      ellipse0.setFrame(0.0F, 0.0F, 3557.0F, 3557.0F);
      boolean boolean0 = ellipse0.contains(190.0F, 872.0F, 0.0F, (-1302.004F));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      PathIterator pathIterator0 = ellipse0.pathIterator((Transform) null);
      boolean boolean0 = pathIterator0.isDone();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse((-2113.5928F), (-2113.5928F), (-2113.5928F), (-2113.5928F));
      PathIterator pathIterator0 = ellipse0.pathIterator((Transform) null);
      assertTrue(pathIterator0.isDone());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse((-2415.5774F), (-2415.5774F), (-2415.5774F), (-2415.5774F));
      Ellipse ellipse1 = ellipse0.clone();
      assertFalse(ellipse1.equals((Object)ellipse0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      Ellipse ellipse1 = ellipse0.clone();
      assertEquals(0.0F, ellipse1.height, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse((-1695.5834F), (-1695.5834F), 2342.627F, (-1695.5834F));
      Ellipse ellipse1 = ellipse0.clone();
      assertEquals(2342.627F, ellipse1.width, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(4239.565F, 4239.565F, 1.0F, 1.0F);
      ellipse0.setFrame(2.0F, (-1223.0F), 4240.507F, 2944.0688F);
      boolean boolean0 = ellipse0.contains(263.9F, 0.25F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(4239.565F, 4239.565F, 1.0F, 1.0F);
      boolean boolean0 = ellipse0.contains(4240.507F, 1.0F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      AffineTransform affineTransform0 = new AffineTransform(263.9F, (-567.3714F), 263.9F, 1138.1134F);
      AbstractEllipse.Iterator abstractEllipse_Iterator0 = new AbstractEllipse.Iterator(ellipse0, affineTransform0);
      assertFalse(abstractEllipse_Iterator0.isDone());
      
      float[] floatArray0 = new float[6];
      int int0 = abstractEllipse_Iterator0.currentSegment(floatArray0);
      assertEquals(0, int0);
      assertArrayEquals(new float[] {263.9F, 1138.1134F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      AbstractEllipse.Iterator abstractEllipse_Iterator0 = new AbstractEllipse.Iterator(ellipse0, (Transform) null);
      abstractEllipse_Iterator0.next();
      abstractEllipse_Iterator0.next();
      abstractEllipse_Iterator0.next();
      abstractEllipse_Iterator0.next();
      abstractEllipse_Iterator0.next();
      assertFalse(abstractEllipse_Iterator0.isDone());
      
      float[] floatArray0 = new float[7];
      int int0 = abstractEllipse_Iterator0.currentSegment(floatArray0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(4239.565F, 4239.565F, 1.0F, 1.0F);
      AbstractEllipse.Iterator abstractEllipse_Iterator0 = new AbstractEllipse.Iterator(ellipse0, (Transform) null);
      assertFalse(abstractEllipse_Iterator0.isDone());
      
      float[] floatArray0 = new float[9];
      int int0 = abstractEllipse_Iterator0.currentSegment(floatArray0);
      assertEquals(0, int0);
      assertArrayEquals(new float[] {4240.565F, 4240.065F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(4242.4966F, 4242.4966F, 4242.4966F, (-2712.0F));
      AbstractEllipse.Iterator abstractEllipse_Iterator0 = new AbstractEllipse.Iterator(ellipse0, (Transform) null);
      assertTrue(abstractEllipse_Iterator0.isDone());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse((-2414.37F), (-2414.37F), (-2414.37F), (-2414.37F));
      AbstractEllipse.Iterator abstractEllipse_Iterator0 = new AbstractEllipse.Iterator(ellipse0, (Transform) null);
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        abstractEllipse_Iterator0.currentSegment(floatArray0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // Iterator out of bounds
         //
         verifyException("pythagoras.f.AbstractEllipse$Iterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(1.0E-5F, 1.0E-5F, 1.0F, 1105.7869F);
      boolean boolean0 = ellipse0.intersects(1.0E-5F, 0.5F, 0.5F, 5.6227994F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(4239.565F, 4239.565F, 1.0F, 1.0F);
      Point point0 = ellipse0.max();
      Point point1 = new Point(2687.3F, (-3387.7847F));
      ellipse0.setFrameFromCenter((XY) point0, (XY) point1);
      boolean boolean0 = ellipse0.intersects(4240.565F, 3557.0F, 3.4661872E7F, 4239.565F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(4239.565F, 4239.565F, 1.0F, 1.0F);
      boolean boolean0 = ellipse0.intersects(4240.565F, 3557.0F, 4239.565F, 4239.565F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(1.0F, 8479.13F, (-2706.619F), 1.0F);
      ellipse0.setFrameFromCenter(1075.4F, 14.0445175F, 8479.13F, 740.859F);
      boolean boolean0 = ellipse0.intersects(1.0F, 0.35958225F, 1.0F, (-2706.619F));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(1.0F, 1.20115149E15F, 1.0F, 2484.6968F);
      boolean boolean0 = ellipse0.intersects(8647.942F, 1367.0F, (-3.4028235E38F), 2484.6968F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      boolean boolean0 = ellipse0.intersects((-5.6755776F), 263.9F, (-5.6755776F), 1138.1134F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(1.0F, 8479.13F, (-2706.619F), 1.0F);
      ellipse0.setFrameFromCenter(1075.4F, 14.0445175F, 8479.13F, 740.859F);
      boolean boolean0 = ellipse0.contains((-2706.619F), 1.0F, 1.0F, 8479.13F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(4239.565F, 4239.565F, 1.0F, 1.0F);
      ellipse0.setFrame(0.6666667F, 5.64F, 1.0F, 4240.565F);
      boolean boolean0 = ellipse0.contains(1.0F, 1437.334F, 0.6666667F, 0.6666667F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(1.0F, (-1467.9445F), 4239.565F, 1.0F);
      ellipse0.setFrameFromCenter(1075.4F, 0.0F, (-1467.9445F), 740.859F);
      boolean boolean0 = ellipse0.contains(0.0F, 6.2831855F, 1.0F, 318.0F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(4239.565F, 4239.565F, 4239.565F, 4239.565F);
      boolean boolean0 = ellipse0.contains(4239.565F, 4239.565F, 4239.565F, (-4142.3F));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse((-3938.1829F), 2778.8867F, 1138.1134F, 3557.0F);
      boolean boolean0 = ellipse0.contains(4240.065F, 263.9F, (-65101.55F), (float) 3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(1.0F, (-1467.9445F), 4239.565F, 1.0F);
      boolean boolean0 = ellipse0.contains(0.0F, 6.2831855F, 1.0F, 318.0F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      boolean boolean0 = ellipse0.contains(1457.204F, 0.0F, 2533.552F, 2.357388E7F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(1.0F, (-1467.9445F), 4239.565F, 1.0F);
      ellipse0.setFrameFromCenter(1075.4F, 0.0F, (-1467.9445F), 740.859F);
      boolean boolean0 = ellipse0.intersects(1.0F, 0.35958225F, 1.0F, 4239.565F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse((-3784.0127F), (-3784.0127F), (-2904.0F), (-2904.0F));
      Point point0 = ellipse0.max();
      boolean boolean0 = ellipse0.contains((XY) point0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(4239.565F, 4239.565F, 1.0F, 1.0F);
      Ellipse ellipse1 = ellipse0.clone();
      assertEquals(4239.565F, ellipse1.x(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse(4239.565F, 4239.565F, 1.0F, 1.0F);
      AbstractEllipse.Iterator abstractEllipse_Iterator0 = new AbstractEllipse.Iterator(ellipse0, (Transform) null);
      abstractEllipse_Iterator0.next();
      assertFalse(abstractEllipse_Iterator0.isDone());
      
      float[] floatArray0 = new float[9];
      int int0 = abstractEllipse_Iterator0.currentSegment(floatArray0);
      assertArrayEquals(new float[] {4240.565F, 4240.3413F, 4240.3413F, 4240.565F, 4240.065F, 4240.565F, 0.0F, 0.0F, 0.0F}, floatArray0, 0.01F);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Ellipse ellipse0 = new Ellipse();
      AbstractEllipse.Iterator abstractEllipse_Iterator0 = new AbstractEllipse.Iterator(ellipse0, (Transform) null);
      int int0 = abstractEllipse_Iterator0.windingRule();
      assertEquals(1, int0);
      assertFalse(abstractEllipse_Iterator0.isDone());
  }
}
