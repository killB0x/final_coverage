/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 05:28:30 GMT 2022
 */

package pythagoras.f;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.f.FloatMath;
import pythagoras.f.MathUtil;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FloatMath_ESTest extends FloatMath_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      float float0 = FloatMath.toRadians(101.234634F);
      assertEquals(1.7668777F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      float float0 = FloatMath.toRadians((-187.852F));
      assertEquals((-3.278636F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      float float0 = FloatMath.toDegrees(3.1415927F);
      assertEquals(180.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      float float0 = FloatMath.toDegrees((-1.0F));
      assertEquals((-57.295776F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      float float0 = FloatMath.tan(4076);
      assertEquals(4.5472374F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      float float0 = FloatMath.tan((-75.90929F));
      assertEquals((-0.5607549F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      float float0 = FloatMath.sqrt(0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      float float0 = FloatMath.sin(0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      float float0 = FloatMath.sin((-2055.7837F));
      assertEquals((-0.9254024F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      float float0 = FloatMath.pow(0.0F, 2817.4377F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      float float0 = FloatMath.pow((-600.6F), 1.0F);
      assertEquals((-600.6F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      float float0 = FloatMath.log10(1.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      float float0 = FloatMath.log10(0.0F);
      assertEquals(Float.NEGATIVE_INFINITY, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      float float0 = FloatMath.log(1.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      float float0 = FloatMath.log(0.0F);
      assertEquals(Float.NEGATIVE_INFINITY, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      float float0 = FloatMath.hypot(0.0F, 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      float float0 = FloatMath.floor(0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      float float0 = FloatMath.floor((-120.0F));
      assertEquals((-120.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      float float0 = FloatMath.exp((-2788.7605F));
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      float float0 = FloatMath.cos((-1605.0F));
      assertEquals((-0.938047F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      float float0 = FloatMath.ceil((-0.938047F));
      assertEquals(-0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      float float0 = FloatMath.ceil(0.65187144F);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      float float0 = FloatMath.cbrt(0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      float float0 = FloatMath.cbrt((-320.13F));
      assertEquals((-6.84083F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      float float0 = FloatMath.atan2(4975.941F, 0.0F);
      assertEquals(1.5707964F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      float float0 = FloatMath.atan2((-1292.4388F), 1111.0F);
      assertEquals((-0.8607466F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      float float0 = FloatMath.atan(0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      float float0 = FloatMath.atan((-3.1415927F));
      assertEquals((-1.2626272F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      float float0 = FloatMath.asin(1.0E-5F);
      assertEquals(1.0E-5F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      float float0 = FloatMath.asin((-1.0F));
      assertEquals((-1.5707964F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      float float0 = FloatMath.acos(1.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      float float0 = FloatMath.acos(0.0F);
      assertEquals(1.5707964F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      float float0 = FloatMath.ceil((-1.0F));
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      float float0 = FloatMath.toDegrees(0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      float float0 = FloatMath.sin(1755.0F);
      assertEquals(0.91288376F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      float float0 = FloatMath.log(3.1415927F);
      assertEquals(1.14473F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      float float0 = FloatMath.cbrt(382.97F);
      assertEquals(7.2619777F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      float float0 = FloatMath.hypot(Float.NEGATIVE_INFINITY, 1508.0F);
      assertEquals(Float.POSITIVE_INFINITY, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      float float0 = FloatMath.asin(0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      float float0 = FloatMath.atan2(0.0F, 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      float float0 = FloatMath.log10(1755.0F);
      assertEquals(3.2442772F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      float float0 = FloatMath.pow(0.0F, 0.0F);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      float float0 = FloatMath.atan(1.0F);
      assertEquals(0.7853982F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      float float0 = FloatMath.cos(0.0F);
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      float float0 = FloatMath.floor(3569.13F);
      assertEquals(3569.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      float float0 = FloatMath.tan(0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FloatMath floatMath0 = new FloatMath();
      assertEquals(1.5707964F, MathUtil.HALF_PI, 0.01F);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      float float0 = FloatMath.sqrt(3.1415927F);
      assertEquals(1.7724539F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      float float0 = FloatMath.toRadians(0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      float float0 = FloatMath.exp(6.2831855F);
      assertEquals(535.49176F, float0, 0.01F);
  }
}
