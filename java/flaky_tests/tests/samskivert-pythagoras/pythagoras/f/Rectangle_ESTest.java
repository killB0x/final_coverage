/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 05:36:41 GMT 2022
 */

package pythagoras.f;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.f.AffineTransform;
import pythagoras.f.Dimension;
import pythagoras.f.IDimension;
import pythagoras.f.IRectangle;
import pythagoras.f.Line;
import pythagoras.f.Point;
import pythagoras.f.Rectangle;
import pythagoras.f.Vector;
import pythagoras.f.XY;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Rectangle_ESTest extends Rectangle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0F, 0.0F, 0.0F, 0.0F);
      Vector vector0 = new Vector();
      Vector vector1 = vector0.setLength((-2250.0F));
      rectangle0.add((XY) vector1);
      rectangle0.add((IRectangle) rectangle0);
      assertEquals(Float.NaN, rectangle0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(244.016F, 490.08426F, 490.08426F, 244.016F);
      rectangle0.add(0.0F, 0.0F);
      assertEquals(734.1003F, rectangle0.height, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform((-2102.2263F), 1101.38F, 1101.38F, 0.0F);
      Vector vector0 = affineTransform0.translation();
      Line line0 = new Line(vector0, vector0);
      Rectangle rectangle0 = line0.bounds();
      rectangle0.translate(2189.764F, 1.0E-5F);
      assertEquals(3291.144F, rectangle0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(dimension0);
      rectangle0.grow(2789.34F, 11.66F);
      rectangle0.translate(2789.34F, 0.0F);
      assertEquals((-11.66F), rectangle0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Point point0 = new Point();
      Dimension dimension0 = new Dimension((-1681.3187F), (-1681.3187F));
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      rectangle0.grow((-1.0F), (-1819.6895F));
      assertEquals(1819.6895F, rectangle0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      rectangle0.setBounds((-3058.92F), 0.0F, 0.0F, 1698.582F);
      rectangle0.grow(5104.0F, 0.0F);
      assertEquals(1698.582F, rectangle0.height, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0F, 0.0F, 0.0F, 0.0F);
      rectangle0.setSize(1.0E-5F, 0.0F);
      assertEquals(1.0E-5F, rectangle0.width, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0F, 0.0F, 0.0F, 0.0F);
      float float0 = rectangle0.y();
      assertEquals(0.0F, rectangle0.width, 0.01F);
      assertEquals(0.0F, rectangle0.x, 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, rectangle0.height, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Line line0 = new Line(1563.0F, 1563.0F, 3201.6965F, 1563.0F);
      Rectangle rectangle0 = line0.bounds();
      float float0 = rectangle0.y();
      assertEquals(1638.6965F, rectangle0.width, 0.01F);
      assertEquals(1563.0F, float0, 0.01F);
      assertEquals(1563.0F, rectangle0.x, 0.01F);
      assertEquals(0.0F, rectangle0.height, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      rectangle0.setBounds(1819.86F, (-1346.2268F), (-428.91492F), 0.0F);
      float float0 = rectangle0.y();
      assertEquals((-428.91492F), rectangle0.width, 0.01F);
      assertEquals((-1346.2268F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Line line0 = new Line(0.0F, (-1405.4016F), 0.0F, 1.0F);
      Rectangle rectangle0 = line0.bounds();
      float float0 = rectangle0.x();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1406.4016F, rectangle0.height, 0.01F);
      assertEquals(0.0F, rectangle0.width, 0.01F);
      assertEquals((-1405.4016F), rectangle0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AffineTransform affineTransform0 = new AffineTransform(0, 0.0F, 0, 420.63742F, 2.0F);
      Vector vector0 = affineTransform0.translation();
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(vector0, dimension0);
      float float0 = rectangle0.x();
      assertEquals(2.0F, rectangle0.y, 0.01F);
      assertEquals(0.0F, rectangle0.width, 0.01F);
      assertEquals(420.63742F, float0, 0.01F);
      assertEquals(0.0F, rectangle0.height, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Line line0 = new Line();
      Rectangle rectangle0 = line0.bounds();
      rectangle0.setFrame((-1845.27F), (-1845.27F), 825.94F, 1020.0696F);
      float float0 = rectangle0.x();
      assertEquals((-1845.27F), rectangle0.y, 0.01F);
      assertEquals((-1845.27F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Point point0 = new Point();
      Dimension dimension0 = new Dimension((-1681.3187F), (-1681.3187F));
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      float float0 = rectangle0.width();
      assertEquals((-1681.3187F), rectangle0.height, 0.01F);
      assertEquals(0.0F, rectangle0.x, 0.01F);
      assertEquals(0.0F, rectangle0.y, 0.01F);
      assertEquals((-1681.3187F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0F, 0.0F, 0.0F, 0.0F);
      float float0 = rectangle0.height();
      assertEquals(0.0F, rectangle0.x, 0.01F);
      assertEquals(0.0F, rectangle0.width, 0.01F);
      assertEquals(0.0F, rectangle0.y, 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(dimension0);
      rectangle0.grow(2789.34F, 11.66F);
      float float0 = rectangle0.height();
      assertEquals((-2789.34F), rectangle0.x, 0.01F);
      assertEquals(23.32F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Point point0 = new Point();
      Dimension dimension0 = new Dimension((-1681.3187F), (-1681.3187F));
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      float float0 = rectangle0.height();
      assertEquals((-1681.3187F), rectangle0.width, 0.01F);
      assertEquals((-1681.3187F), float0, 0.01F);
      assertEquals(0.0F, rectangle0.x, 0.01F);
      assertEquals(0.0F, rectangle0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Line line0 = new Line(0.0F, (-1405.4016F), 0.0F, 1.0F);
      Rectangle rectangle0 = line0.bounds();
      // Undeclared exception!
      try { 
        rectangle0.setSize((IDimension) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Rectangle", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Rectangle rectangle0 = null;
      try {
        rectangle0 = new Rectangle((XY) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Rectangle", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0.0F, 0.0F, 0.0F, 0.0F);
      rectangle0.setLocation(44.0F, (-680.212F));
      assertEquals(44.0F, rectangle0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Point point0 = new Point();
      Rectangle rectangle0 = new Rectangle(point0);
      rectangle0.setSize(0.0F, 0.0F);
      assertEquals(0.0F, rectangle0.height, 0.01F);
      assertEquals(0.0F, rectangle0.x, 0.01F);
      assertEquals(0.0F, rectangle0.y, 0.01F);
      assertEquals(0.0F, rectangle0.width, 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Point point0 = new Point();
      Rectangle rectangle0 = new Rectangle(point0);
      float float0 = rectangle0.width();
      assertEquals(0.0F, rectangle0.x, 0.01F);
      assertEquals(0.0F, rectangle0.y, 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, rectangle0.height, 0.01F);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(244.016F, 490.08426F, 490.08426F, 244.016F);
      Dimension dimension0 = new Dimension();
      rectangle0.setSize((IDimension) dimension0);
      rectangle0.add(0.0F, 0.0F);
      assertEquals(490.08426F, rectangle0.height, 0.01F);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Point point0 = new Point();
      Rectangle rectangle0 = new Rectangle(point0);
      rectangle0.grow(1.0F, 0.0F);
      float float0 = rectangle0.width();
      assertEquals(2.0F, rectangle0.width, 0.01F);
      assertEquals(2.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      rectangle0.setBounds((IRectangle) rectangle0);
      assertEquals(0.0F, rectangle0.height(), 0.01F);
      assertEquals(0.0F, rectangle0.width, 0.01F);
      assertEquals(0.0F, rectangle0.y(), 0.01F);
      assertEquals(0.0F, rectangle0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(dimension0);
      Vector vector0 = new Vector(0.0F, 0.0F);
      rectangle0.setLocation((XY) vector0);
      assertEquals(0.0F, rectangle0.width, 0.01F);
      assertEquals(0.0F, rectangle0.height, 0.01F);
      assertEquals(0.0F, rectangle0.y, 0.01F);
      assertEquals(0.0F, rectangle0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(dimension0);
      Rectangle rectangle1 = new Rectangle(rectangle0);
      assertEquals(0.0F, rectangle0.x(), 0.01F);
      assertEquals(0.0F, rectangle0.y(), 0.01F);
      assertEquals(0.0F, rectangle0.width(), 0.01F);
      assertEquals(0.0F, rectangle0.height(), 0.01F);
  }
}
