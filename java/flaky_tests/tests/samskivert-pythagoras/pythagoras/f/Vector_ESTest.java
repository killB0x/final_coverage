/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 20 05:37:50 GMT 2022
 */

package pythagoras.f;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import pythagoras.f.IVector;
import pythagoras.f.Point;
import pythagoras.f.Vector;
import pythagoras.f.XY;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Vector_ESTest extends Vector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Point point0 = new Point();
      Vector vector0 = new Vector(point0);
      float float0 = vector0.y();
      assertEquals(0.0F, vector0.x, 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vector vector0 = new Vector(29.45F, 1.0F);
      float float0 = vector0.y();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals(29.45F, vector0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Vector vector0 = new Vector(0.0F, 0.0F);
      Vector vector1 = vector0.subtract(0.0F, 2017.2634F);
      Vector vector2 = vector1.setAngle(1.0F);
      Vector vector3 = vector2.negateLocal();
      float float0 = vector3.y();
      assertEquals((-1697.4686F), vector1.y, 0.01F);
      assertEquals((-1697.4686F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Point point0 = new Point();
      Vector vector0 = new Vector(point0);
      float float0 = vector0.x();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0.0F, vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Vector vector0 = new Vector(733.0F, 733.0F);
      float float0 = vector0.x();
      assertEquals(733.0F, vector0.y, 0.01F);
      assertEquals(733.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Vector vector0 = new Vector((-20.61901F), 970.298F);
      float float0 = vector0.x();
      assertEquals((-20.61901F), float0, 0.01F);
      assertEquals(970.298F, vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Point point0 = new Point();
      Vector vector0 = new Vector(point0);
      Vector vector1 = vector0.setLength(0.0F);
      vector0.subtractLocal((IVector) vector1);
      assertEquals(Float.NaN, vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Vector vector0 = new Vector(2734.451F, (-2918.204F));
      Vector vector1 = new Vector(0.0F, (-2918.204F));
      vector1.lerpLocal(vector0, 2734.451F);
      vector0.subtractLocal((IVector) vector1);
      assertEquals(7477222.0F, vector1.x, 0.01F);
      assertEquals((-7474487.5F), vector0.x(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Vector vector0 = new Vector((-20.61901F), 970.298F);
      vector0.subtractLocal((-8869.988F), (-1.0F));
      assertEquals(971.298F, vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Vector vector0 = new Vector(733.0F, 733.0F);
      vector0.subtractLocal(0.0F, 1709.816F);
      assertEquals((-976.81604F), vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Point point0 = new Point((-1.0F), (-1.0F));
      Vector vector0 = new Vector(point0);
      vector0.subtractLocal(3.0F, (-1.0F));
      assertEquals((-4.0F), vector0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector vector0 = new Vector(733.0F, 733.0F);
      assertEquals(733.0F, vector0.x, 0.01F);
      
      vector0.setLength(0.0F);
      assertEquals(0.0F, vector0.x(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector vector0 = new Vector();
      Vector vector1 = vector0.setAngle(0.0F);
      assertEquals(0.0F, vector1.x(), 0.01F);
      assertEquals(0.0F, vector1.y(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Vector vector0 = new Vector();
      float[] floatArray0 = new float[6];
      floatArray0[1] = Float.NaN;
      vector0.set(floatArray0);
      assertEquals(Float.NaN, vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Vector vector0 = new Vector((-20.61901F), 970.298F);
      float[] floatArray0 = new float[5];
      floatArray0[1] = (-20.61901F);
      vector0.set(floatArray0);
      assertEquals((-20.61901F), vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Point point0 = new Point((-477.638F), 0.0F);
      Vector vector0 = new Vector(point0);
      float[] floatArray0 = new float[4];
      floatArray0[0] = Float.NaN;
      vector0.set(floatArray0);
      assertEquals(Float.NaN, vector0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Vector vector0 = new Vector((-20.61901F), 970.298F);
      float[] floatArray0 = new float[5];
      floatArray0[0] = (-40054.406F);
      vector0.set(floatArray0);
      assertEquals((-40054.406F), vector0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Vector vector0 = new Vector();
      Vector vector1 = vector0.set((XY) vector0);
      assertEquals(0.0F, vector1.y, 0.01F);
      assertEquals(0.0F, vector0.x(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Vector vector0 = new Vector(1.0F, 1.0F);
      Point point0 = new Point(vector0);
      vector0.set((XY) point0);
      assertEquals(1.0F, vector0.x(), 0.01F);
      assertEquals(1.0F, point0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Vector vector0 = new Vector(29.45F, 1.0F);
      assertEquals(29.45F, vector0.x, 0.01F);
      
      vector0.set(0.0F, 1.0F);
      assertEquals(0.0F, vector0.x(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Vector vector0 = new Vector((-20.61901F), 970.298F);
      vector0.set((-735.3962F), 0.0F);
      assertEquals((-735.3962F), vector0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Vector vector0 = new Vector();
      Vector vector1 = vector0.scaleLocal((IVector) vector0);
      assertEquals(0.0F, vector1.y(), 0.01F);
      assertEquals(0.0F, vector1.x(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Vector vector0 = new Vector(2598.4F, 2598.4F);
      Vector vector1 = new Vector((-3060.9812F), (-3060.9812F));
      vector0.scaleLocal((IVector) vector1);
      assertEquals((-7953653.5F), vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Point point0 = new Point();
      Vector vector0 = new Vector(point0);
      vector0.scaleLocal(Float.NaN);
      assertEquals(Float.NaN, vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Vector vector0 = new Vector(150.8F, 940.1449F);
      vector0.scaleLocal((-150.8F));
      assertEquals((-141773.86F), vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Vector vector0 = new Vector();
      vector0.set(0.0F, (-4468.862F));
      vector0.rotateLocal((-1.0F));
      assertEquals((-2414.5361F), vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Vector vector0 = new Vector(733.0F, 733.0F);
      vector0.set(509.0185F, 0.0F);
      vector0.normalizeLocal();
      assertEquals(1.0F, vector0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Vector vector0 = new Vector(0.0F, 1.0F);
      vector0.normalizeLocal();
      assertEquals(1.0F, vector0.y, 0.01F);
      assertEquals(0.0F, vector0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Vector vector0 = new Vector(0.0F, 0.0F);
      Vector vector1 = vector0.subtract(0.0F, 2017.2634F);
      Vector vector2 = vector1.setAngle(1.0F);
      vector2.negateLocal();
      Vector vector3 = vector2.negateLocal();
      vector3.rotateLocal(0.0F);
      assertEquals(1697.4686F, vector2.y, 0.01F);
      assertEquals(1089.932F, vector1.x(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Vector vector0 = new Vector(733.0F, 733.0F);
      vector0.negateLocal();
      vector0.normalizeLocal();
      assertEquals((-0.7071068F), vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Vector vector0 = new Vector(2734.451F, (-2918.204F));
      Vector vector1 = new Vector(0.0F, (-2918.204F));
      Vector vector2 = new Vector();
      vector1.crossLocal(vector0);
      Vector vector3 = vector1.lerpLocal(vector2, 2734.451F);
      vector3.subtractLocal((IVector) vector0);
      assertEquals((-2.18120786E10F), vector3.y(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Vector vector0 = new Vector();
      Vector vector1 = vector0.lerpLocal(vector0, 0.0F);
      assertEquals(0.0F, vector1.x(), 0.01F);
      assertEquals(0.0F, vector1.y(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Vector vector0 = new Vector(1.0F, 1.0F);
      vector0.lerpLocal(vector0, 0.0F);
      assertEquals(1.0F, vector0.x, 0.01F);
      assertEquals(1.0F, vector0.y(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Vector vector0 = new Vector((-20.61901F), 970.298F);
      vector0.lerpLocal(vector0, 0.0F);
      assertEquals(970.298F, vector0.y, 0.01F);
      assertEquals((-20.61901F), vector0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Vector vector0 = new Vector(1384.15F, 0.0F);
      Vector vector1 = new Vector(vector0);
      vector1.rotateAndAdd(1.0F, vector1, vector0);
      vector0.crossLocal(vector1);
      vector0.addScaledLocal(vector1, 0.0F);
      assertEquals((-1612150.0F), vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Point point0 = new Point();
      Vector vector0 = new Vector(point0);
      vector0.addScaledLocal(vector0, 0.0F);
      assertEquals(0.0F, vector0.y, 0.01F);
      assertEquals(0.0F, vector0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Vector vector0 = new Vector();
      vector0.addScaledLocal(vector0, Float.NaN);
      assertEquals(Float.NaN, vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Vector vector0 = new Vector((-20.61901F), 970.298F);
      vector0.addScaledLocal(vector0, 942448.5F);
      assertEquals(9.1445683E8F, vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Vector vector0 = new Vector(0.0F, (-3623.93F));
      vector0.addLocal((IVector) vector0);
      assertEquals((-7247.86F), vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Point point0 = new Point();
      Vector vector0 = new Vector(point0);
      vector0.addLocal((IVector) vector0);
      assertEquals(0.0F, vector0.y, 0.01F);
      assertEquals(0.0F, vector0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Vector vector0 = new Vector(733.0F, 733.0F);
      vector0.addLocal((IVector) vector0);
      assertEquals(1466.0F, vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Point point0 = new Point((-1.0F), (-1.0F));
      Vector vector0 = new Vector(point0);
      vector0.addLocal(0.0F, (-1.0F));
      assertEquals((-2.0F), vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Vector vector0 = new Vector();
      // Undeclared exception!
      try { 
        vector0.subtractLocal((IVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.AbstractVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Vector vector0 = new Vector();
      // Undeclared exception!
      try { 
        vector0.set((float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Vector vector0 = new Vector(733.0F, 733.0F);
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        vector0.set(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("pythagoras.f.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Vector vector0 = new Vector();
      // Undeclared exception!
      try { 
        vector0.set((XY) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Vector vector0 = new Vector();
      // Undeclared exception!
      try { 
        vector0.scaleLocal((IVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.AbstractVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Vector vector0 = new Vector();
      // Undeclared exception!
      try { 
        vector0.crossLocal((IVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.AbstractVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Vector vector0 = new Vector();
      // Undeclared exception!
      try { 
        vector0.addLocal((IVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.AbstractVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Vector vector0 = null;
      try {
        vector0 = new Vector((XY) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Vector vector0 = new Vector((-20.61901F), 970.298F);
      vector0.set((XY) vector0);
      assertEquals(970.298F, vector0.y, 0.01F);
      assertEquals((-20.61901F), vector0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Vector vector0 = new Vector(733.0F, 733.0F);
      assertEquals(733.0F, vector0.y, 0.01F);
      
      vector0.scaleLocal(0.0F);
      assertEquals(0.0F, vector0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Vector vector0 = new Vector();
      vector0.normalizeLocal();
      vector0.addLocal(0.0F, 0.0F);
      assertEquals(Float.NaN, vector0.x, 0.01F);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Vector vector0 = new Vector(2734.451F, (-2918.204F));
      assertEquals(2734.451F, vector0.x, 0.01F);
      
      vector0.subtractLocal((IVector) vector0);
      assertEquals(0.0F, vector0.y(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Vector vector0 = new Vector((-1.0F), (-1.0F));
      assertEquals((-1.0F), vector0.y, 0.01F);
      
      vector0.scaleLocal((IVector) vector0);
      assertEquals(1.0F, vector0.x(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Vector vector0 = new Vector((-1.0F), (-1.0F));
      assertEquals((-1.0F), vector0.y, 0.01F);
      
      vector0.crossLocal(vector0);
      assertEquals(0.0F, vector0.x(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Vector vector0 = new Vector();
      Vector vector1 = vector0.addLocal(0.0F, 0.0F);
      assertEquals(0.0F, vector1.y(), 0.01F);
      assertEquals(0.0F, vector1.x(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Vector vector0 = new Vector();
      Vector vector1 = vector0.rotateLocal(0.0F);
      assertEquals(0.0F, vector1.y(), 0.01F);
      assertEquals(0.0F, vector0.x(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Vector vector0 = new Vector(0.0F, 0.0F);
      vector0.subtractLocal(0.0F, 0.0F);
      assertEquals(0.0F, vector0.x(), 0.01F);
      assertEquals(0.0F, vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Vector vector0 = new Vector((-1.0F), (-1.0F));
      vector0.setLength(2.2346816F);
      assertEquals((-1.5801585F), vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Vector vector0 = new Vector((-20.61901F), 970.298F);
      vector0.addLocal((IVector) vector0);
      assertEquals(1940.596F, vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Vector vector0 = new Vector();
      vector0.negateLocal();
      assertEquals(-0.0F, vector0.y, 0.01F);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Vector vector0 = new Vector((-20.61901F), 970.298F);
      Vector vector1 = vector0.setAngle((-20.61901F));
      vector1.set((XY) vector1);
      assertEquals((-191.53596F), vector0.x, 0.01F);
      assertEquals((-951.4291F), vector0.y(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Vector vector0 = new Vector();
      // Undeclared exception!
      try { 
        vector0.lerpLocal((IVector) null, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.AbstractVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Vector vector0 = new Vector();
      // Undeclared exception!
      try { 
        vector0.addScaledLocal((IVector) null, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("pythagoras.f.AbstractVector", e);
      }
  }
}
