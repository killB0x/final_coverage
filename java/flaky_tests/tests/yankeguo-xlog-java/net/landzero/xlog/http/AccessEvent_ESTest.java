/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 18:59:34 GMT 2022
 */

package net.landzero.xlog.http;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.ArrayList;
import net.landzero.xlog.http.AccessEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccessEvent_ESTest extends AccessEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.topic();
      assertEquals(0, accessEvent0.getStatus());
      assertEquals(0L, accessEvent0.getDuration());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.setStatus(2084);
      int int0 = accessEvent0.getStatus();
      assertEquals(2084, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.setStatus((-1943));
      int int0 = accessEvent0.getStatus();
      assertEquals((-1943), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.setQuery("5BgLIk,uHJ~1tm0KZx[");
      accessEvent0.getQuery();
      assertEquals(0, accessEvent0.getStatus());
      assertEquals(0L, accessEvent0.getDuration());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.setQuery("");
      accessEvent0.getQuery();
      assertEquals(0L, accessEvent0.getDuration());
      assertEquals(0, accessEvent0.getStatus());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      accessEvent0.setParams(arrayList0);
      accessEvent0.getParams();
      assertEquals(0, accessEvent0.getStatus());
      assertEquals(0L, accessEvent0.getDuration());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      accessEvent0.setParams(arrayList0);
      arrayList0.add("w");
      accessEvent0.getParams();
      assertEquals(0, accessEvent0.getStatus());
      assertEquals(0L, accessEvent0.getDuration());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.setMethod("net.landzero.xlog.uYils.Hex");
      accessEvent0.getMethod();
      assertEquals(0L, accessEvent0.getDuration());
      assertEquals(0, accessEvent0.getStatus());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.setMethod("");
      accessEvent0.getMethod();
      assertEquals(0L, accessEvent0.getDuration());
      assertEquals(0, accessEvent0.getStatus());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.setHost("");
      accessEvent0.getHost();
      assertEquals(0, accessEvent0.getStatus());
      assertEquals(0L, accessEvent0.getDuration());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      accessEvent0.setHeaderVerInfo(arrayList0);
      accessEvent0.getHeaderVerInfo();
      assertEquals(0L, accessEvent0.getDuration());
      assertEquals(0, accessEvent0.getStatus());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      accessEvent0.setHeaderVerInfo(arrayList0);
      arrayList0.add("x-access");
      accessEvent0.getHeaderVerInfo();
      assertEquals(0L, accessEvent0.getDuration());
      assertEquals(0, accessEvent0.getStatus());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.setHeaderUserToken("/50/");
      accessEvent0.getHeaderUserToken();
      assertEquals(0, accessEvent0.getStatus());
      assertEquals(0L, accessEvent0.getDuration());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      accessEvent0.setHeaderAppInfo(arrayList0);
      accessEvent0.getHeaderAppInfo();
      assertEquals(0L, accessEvent0.getDuration());
      assertEquals(0, accessEvent0.getStatus());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.setDuration((-849L));
      long long0 = accessEvent0.getDuration();
      assertEquals((-849L), long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      long long0 = accessEvent0.getDuration();
      assertEquals(0, accessEvent0.getStatus());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.getParams();
      assertEquals(0, accessEvent0.getStatus());
      assertEquals(0L, accessEvent0.getDuration());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      assertEquals(0L, accessEvent0.getDuration());
      
      accessEvent0.setDuration(1L);
      long long0 = accessEvent0.getDuration();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.getHeaderVerInfo();
      assertEquals(0L, accessEvent0.getDuration());
      assertEquals(0, accessEvent0.getStatus());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.getHeaderAppInfo();
      assertEquals(0L, accessEvent0.getDuration());
      assertEquals(0, accessEvent0.getStatus());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      accessEvent0.setHeaderAppInfo(arrayList0);
      arrayList0.add("x-access");
      accessEvent0.getHeaderAppInfo();
      assertEquals(0L, accessEvent0.getDuration());
      assertEquals(0, accessEvent0.getStatus());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.getHost();
      assertEquals(0L, accessEvent0.getDuration());
      assertEquals(0, accessEvent0.getStatus());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.getMethod();
      assertEquals(0L, accessEvent0.getDuration());
      assertEquals(0, accessEvent0.getStatus());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      int int0 = accessEvent0.getStatus();
      assertEquals(0, int0);
      assertEquals(0L, accessEvent0.getDuration());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.setHost("JC+<9z");
      accessEvent0.getHost();
      assertEquals(0, accessEvent0.getStatus());
      assertEquals(0L, accessEvent0.getDuration());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.getQuery();
      assertEquals(0L, accessEvent0.getDuration());
      assertEquals(0, accessEvent0.getStatus());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.getHeaderUserToken();
      assertEquals(0, accessEvent0.getStatus());
      assertEquals(0L, accessEvent0.getDuration());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AccessEvent accessEvent0 = new AccessEvent();
      accessEvent0.setHeaderUserToken("");
      accessEvent0.getHeaderUserToken();
      assertEquals(0L, accessEvent0.getDuration());
      assertEquals(0, accessEvent0.getStatus());
  }
}
