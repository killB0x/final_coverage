/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 18:55:57 GMT 2022
 */

package net.landzero.xlog.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.landzero.xlog.utils.SignalFileChecker;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SignalFileChecker_ESTest extends SignalFileChecker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SignalFileChecker signalFileChecker0 = new SignalFileChecker("");
      signalFileChecker0.check();
      long long0 = signalFileChecker0.getCachedLastModified();
      assertEquals(1392409281320L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SignalFileChecker signalFileChecker0 = new SignalFileChecker("");
      signalFileChecker0.setCachedLastModified((-4L));
      long long0 = signalFileChecker0.getCachedLastModified();
      assertEquals((-4L), long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SignalFileChecker signalFileChecker0 = null;
      try {
        signalFileChecker0 = new SignalFileChecker((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SignalFileChecker signalFileChecker0 = new SignalFileChecker("&W9 *;41iF");
      long long0 = signalFileChecker0.getCachedLastModified();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SignalFileChecker signalFileChecker0 = new SignalFileChecker("&W9 *;41iF");
      signalFileChecker0.setCachedLastModified(729L);
      boolean boolean0 = signalFileChecker0.check();
      assertEquals(0L, signalFileChecker0.getCachedLastModified());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SignalFileChecker signalFileChecker0 = new SignalFileChecker("AD|N%H4(N|[,Z# A1");
      boolean boolean0 = signalFileChecker0.check();
      assertFalse(boolean0);
  }
}
