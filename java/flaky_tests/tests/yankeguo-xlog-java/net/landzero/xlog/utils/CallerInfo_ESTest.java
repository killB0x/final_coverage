/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 08 18:58:51 GMT 2022
 */

package net.landzero.xlog.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import net.landzero.xlog.utils.CallerInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CallerInfo_ESTest extends CallerInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CallerInfo callerInfo0 = new CallerInfo();
      assertEquals("MISSING", callerInfo0.getMethodName());
      
      callerInfo0.setMethodName((String) null);
      callerInfo0.getMethodName();
      assertEquals("MISSING", callerInfo0.getClassName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CallerInfo callerInfo0 = new CallerInfo();
      assertEquals("MISSING", callerInfo0.getMethodName());
      
      callerInfo0.setMethodName("");
      callerInfo0.getMethodName();
      assertEquals("MISSING", callerInfo0.getClassName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CallerInfo callerInfo0 = new CallerInfo();
      assertEquals("MISSING", callerInfo0.getClassName());
      
      callerInfo0.setClassName((String) null);
      callerInfo0.getClassName();
      assertEquals("MISSING", callerInfo0.getMethodName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CallerInfo callerInfo0 = new CallerInfo();
      assertEquals("MISSING", callerInfo0.getClassName());
      
      callerInfo0.setClassName("");
      callerInfo0.getClassName();
      assertEquals("MISSING", callerInfo0.getMethodName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CallerInfo callerInfo0 = new CallerInfo();
      String string0 = callerInfo0.getMethodName();
      assertEquals("MISSING", string0);
      assertEquals("MISSING", callerInfo0.getClassName());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CallerInfo callerInfo0 = new CallerInfo();
      String string0 = callerInfo0.getClassName();
      assertEquals("MISSING", string0);
      assertEquals("MISSING", callerInfo0.getMethodName());
  }
}
