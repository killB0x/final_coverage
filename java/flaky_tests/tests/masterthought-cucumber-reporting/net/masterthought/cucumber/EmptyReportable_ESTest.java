/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 00:16:02 GMT 2022
 */

package net.masterthought.cucumber;

import org.junit.Test;
import static org.junit.Assert.*;
import net.masterthought.cucumber.EmptyReportable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EmptyReportable_ESTest extends EmptyReportable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      int int0 = emptyReportable0.getFailedScenarios();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      int int0 = emptyReportable0.getPassedFeatures();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      int int0 = emptyReportable0.getFailedSteps();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      int int0 = emptyReportable0.getSteps();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      String string0 = emptyReportable0.getFormattedDuration();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      int int0 = emptyReportable0.getFailedFeatures();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      int int0 = emptyReportable0.getScenarios();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      int int0 = emptyReportable0.getFeatures();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      String string0 = emptyReportable0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      emptyReportable0.getStatus();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      int int0 = emptyReportable0.getPendingSteps();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      int int0 = emptyReportable0.getSkippedSteps();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      int int0 = emptyReportable0.getUndefinedSteps();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      int int0 = emptyReportable0.getPassedScenarios();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      int int0 = emptyReportable0.getPassedSteps();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EmptyReportable emptyReportable0 = new EmptyReportable();
      long long0 = emptyReportable0.getDuration();
      assertEquals(0L, long0);
  }
}
