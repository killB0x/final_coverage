/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 00:00:44 GMT 2022
 */

package net.masterthought.cucumber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.masterthought.cucumber.EmptyReportable;
import net.masterthought.cucumber.Trends;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Trends_ESTest extends Trends_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Trends trends0 = new Trends();
      trends0.limitItems(1575);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Trends trends0 = new Trends();
      EmptyReportable emptyReportable0 = new EmptyReportable();
      // Undeclared exception!
      try { 
        trends0.addBuild("", emptyReportable0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/ArrayUtils
         //
         verifyException("net.masterthought.cucumber.Trends", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Trends trends0 = new Trends();
      // Undeclared exception!
      try { 
        trends0.limitItems((-1748));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1748
         //
         verifyException("net.masterthought.cucumber.Trends", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Trends trends0 = new Trends();
      int[] intArray0 = trends0.getUndefinedSteps();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Trends trends0 = new Trends();
      int[] intArray0 = trends0.getPendingSteps();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Trends trends0 = new Trends();
      trends0.limitItems(0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Trends trends0 = new Trends();
      int[] intArray0 = trends0.getPassedScenarios();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Trends trends0 = new Trends();
      int[] intArray0 = trends0.getPassedFeatures();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Trends trends0 = new Trends();
      int[] intArray0 = trends0.getFailedFeatures();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Trends trends0 = new Trends();
      String[] stringArray0 = trends0.getBuildNumbers();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Trends trends0 = new Trends();
      int[] intArray0 = trends0.getTotalFeatures();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Trends trends0 = new Trends();
      int[] intArray0 = trends0.getTotalSteps();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Trends trends0 = new Trends();
      int[] intArray0 = trends0.getFailedScenarios();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Trends trends0 = new Trends();
      int[] intArray0 = trends0.getSkippedSteps();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Trends trends0 = new Trends();
      int[] intArray0 = trends0.getFailedSteps();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Trends trends0 = new Trends();
      int[] intArray0 = trends0.getPassedSteps();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Trends trends0 = new Trends();
      int[] intArray0 = trends0.getTotalScenarios();
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Trends trends0 = new Trends();
      long[] longArray0 = trends0.getDurations();
      assertEquals(0, longArray0.length);
  }
}
