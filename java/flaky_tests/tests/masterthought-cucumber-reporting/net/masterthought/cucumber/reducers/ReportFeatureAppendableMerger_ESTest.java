/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 00:18:59 GMT 2022
 */

package net.masterthought.cucumber.reducers;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import net.masterthought.cucumber.Configuration;
import net.masterthought.cucumber.json.Feature;
import net.masterthought.cucumber.reducers.ReducingMethod;
import net.masterthought.cucumber.reducers.ReportFeatureAppendableMerger;
import net.masterthought.cucumber.reducers.ReportFeatureByIdMerger;
import net.masterthought.cucumber.reducers.ReportFeatureWithRetestMerger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReportFeatureAppendableMerger_ESTest extends ReportFeatureAppendableMerger_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReportFeatureAppendableMerger reportFeatureAppendableMerger0 = new ReportFeatureAppendableMerger();
      ReportFeatureWithRetestMerger reportFeatureWithRetestMerger0 = new ReportFeatureWithRetestMerger();
      LinkedList<Feature> linkedList0 = new LinkedList<Feature>();
      List<Feature> list0 = reportFeatureWithRetestMerger0.merge(linkedList0);
      List<Feature> list1 = reportFeatureAppendableMerger0.merge(list0);
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReportFeatureAppendableMerger reportFeatureAppendableMerger0 = new ReportFeatureAppendableMerger();
      ReportFeatureByIdMerger reportFeatureByIdMerger0 = new ReportFeatureByIdMerger();
      LinkedList<Feature> linkedList0 = new LinkedList<Feature>();
      Feature feature0 = new Feature();
      linkedList0.add(feature0);
      List<Feature> list0 = reportFeatureByIdMerger0.merge(linkedList0);
      List<Feature> list1 = reportFeatureAppendableMerger0.merge(list0);
      assertSame(list0, list1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReportFeatureAppendableMerger reportFeatureAppendableMerger0 = new ReportFeatureAppendableMerger();
      MockFile mockFile0 = new MockFile("*E0mf", "*E0mf");
      Configuration configuration0 = new Configuration(mockFile0, "sxS(G<fF1cI");
      List<ReducingMethod> list0 = configuration0.getReducingMethods();
      boolean boolean0 = reportFeatureAppendableMerger0.test(list0);
      assertTrue(boolean0);
  }
}
