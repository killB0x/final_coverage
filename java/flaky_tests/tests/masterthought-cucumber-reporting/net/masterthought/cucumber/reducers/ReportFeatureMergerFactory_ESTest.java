/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 00:14:42 GMT 2022
 */

package net.masterthought.cucumber.reducers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import net.masterthought.cucumber.reducers.ReducingMethod;
import net.masterthought.cucumber.reducers.ReportFeatureMerger;
import net.masterthought.cucumber.reducers.ReportFeatureMergerFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReportFeatureMergerFactory_ESTest extends ReportFeatureMergerFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReportFeatureMergerFactory reportFeatureMergerFactory0 = new ReportFeatureMergerFactory();
      ReportFeatureMerger reportFeatureMerger0 = reportFeatureMergerFactory0.get((List<ReducingMethod>) null);
      assertNotNull(reportFeatureMerger0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReportFeatureMergerFactory reportFeatureMergerFactory0 = new ReportFeatureMergerFactory();
      LinkedList<ReducingMethod> linkedList0 = new LinkedList<ReducingMethod>();
      ReducingMethod reducingMethod0 = ReducingMethod.MERGE_FEATURES_WITH_RETEST;
      linkedList0.add(reducingMethod0);
      List<ReducingMethod> list0 = linkedList0.subList(0, 0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.retainAll(linkedList1);
      // Undeclared exception!
      try { 
        reportFeatureMergerFactory0.get(list0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList$SubList", e);
      }
  }
}
