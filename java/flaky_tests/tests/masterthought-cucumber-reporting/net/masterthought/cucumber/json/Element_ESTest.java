/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 00:10:04 GMT 2022
 */

package net.masterthought.cucumber.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDateTime;
import net.masterthought.cucumber.Configuration;
import net.masterthought.cucumber.json.Element;
import net.masterthought.cucumber.json.Feature;
import net.masterthought.cucumber.json.Hook;
import net.masterthought.cucumber.json.Step;
import net.masterthought.cucumber.json.Tag;
import net.masterthought.cucumber.json.support.Status;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Element element0 = new Element();
      Feature feature0 = new Feature();
      MockFile mockFile0 = new MockFile("");
      Configuration configuration0 = new Configuration(mockFile0, "");
      element0.setMetaData(feature0, configuration0);
      Status status0 = element0.getStepsStatus();
      assertTrue(status0.isPassed());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Element element0 = new Element();
      Feature feature0 = new Feature();
      MockFile mockFile0 = new MockFile("");
      Configuration configuration0 = new Configuration(mockFile0, "");
      element0.setMetaData(feature0, configuration0);
      Status status0 = element0.getStatus();
      assertTrue(status0.isPassed());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Element element0 = new Element();
      Feature feature0 = new Feature();
      MockFile mockFile0 = new MockFile("");
      Configuration configuration0 = new Configuration(mockFile0, "");
      element0.setMetaData(feature0, configuration0);
      Feature feature1 = element0.getFeature();
      assertNull(feature1.getId());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Element element0 = new Element();
      MockFile mockFile0 = new MockFile("", "");
      Configuration configuration0 = new Configuration(mockFile0, (String) null);
      element0.setMetaData((Feature) null, configuration0);
      Status status0 = element0.getAfterStatus();
      assertTrue(status0.isPassed());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Element element0 = new Element();
      Feature feature0 = new Feature();
      // Undeclared exception!
      try { 
        element0.setMetaData(feature0, (Configuration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.masterthought.cucumber.json.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Element element0 = new Element();
      Feature feature0 = element0.getFeature();
      assertNull(feature0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Element element0 = new Element();
      LocalDateTime localDateTime0 = element0.getStartTime();
      assertNull(localDateTime0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Element element0 = new Element();
      element0.getStepsStatus();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Element element0 = new Element();
      Hook[] hookArray0 = element0.getBefore();
      assertEquals(0, hookArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Element element0 = new Element();
      boolean boolean0 = element0.isScenario();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Element element0 = new Element();
      element0.getBeforeStatus();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Element element0 = new Element();
      Tag[] tagArray0 = element0.getTags();
      assertEquals(0, tagArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Element element0 = new Element();
      boolean boolean0 = element0.isBackground();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Element element0 = new Element();
      String string0 = element0.getKeyword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Element element0 = new Element();
      String string0 = element0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Element element0 = new Element();
      element0.getStatus();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Element element0 = new Element();
      element0.getAfterStatus();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Element element0 = new Element();
      Feature feature0 = new Feature();
      MockFile mockFile0 = new MockFile("net.masterthought.cucumber.json.Hook", "net.masterthought.cucumber.json.Hook");
      Configuration configuration0 = new Configuration(mockFile0, "net.masterthought.cucumber.json.Hook");
      element0.setMetaData(feature0, configuration0);
      Status status0 = element0.getBeforeStatus();
      assertTrue(status0.isPassed());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Element element0 = new Element();
      String string0 = element0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Element element0 = new Element();
      Integer integer0 = element0.getLine();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Element element0 = new Element();
      Step[] stepArray0 = element0.getSteps();
      assertEquals(0, stepArray0.length);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Element element0 = new Element();
      String string0 = element0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Element element0 = new Element();
      // Undeclared exception!
      try { 
        element0.getFormattedDuration();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/joda/time/ReadablePeriod
         //
         verifyException("net.masterthought.cucumber.json.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Element element0 = new Element();
      // Undeclared exception!
      try { 
        element0.getDescription();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/StringUtils
         //
         verifyException("net.masterthought.cucumber.json.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Element element0 = new Element();
      long long0 = element0.getDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Element element0 = new Element();
      Hook[] hookArray0 = element0.getAfter();
      assertEquals(0, hookArray0.length);
  }
}
