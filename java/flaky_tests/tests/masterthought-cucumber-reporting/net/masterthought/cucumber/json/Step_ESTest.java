/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 21 00:09:07 GMT 2022
 */

package net.masterthought.cucumber.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import net.masterthought.cucumber.json.DocString;
import net.masterthought.cucumber.json.Embedding;
import net.masterthought.cucumber.json.Hook;
import net.masterthought.cucumber.json.Match;
import net.masterthought.cucumber.json.Output;
import net.masterthought.cucumber.json.Result;
import net.masterthought.cucumber.json.Step;
import net.masterthought.cucumber.json.support.Status;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Step_ESTest extends Step_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Step step0 = new Step();
      step0.setMetaData();
      Status status0 = step0.getBeforeStatus();
      assertEquals(Status.PASSED, status0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Step step0 = new Step();
      // Undeclared exception!
      try { 
        step0.getRows();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/ArrayUtils
         //
         verifyException("net.masterthought.cucumber.json.Step", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Step step0 = new Step();
      Output[] outputArray0 = step0.getOutputs();
      assertEquals(0, outputArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Step step0 = new Step();
      // Undeclared exception!
      try { 
        step0.getKeyword();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.masterthought.cucumber.json.Step", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Step step0 = new Step();
      Integer integer0 = step0.getLine();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Step step0 = new Step();
      List<String> list0 = step0.getComments();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Step step0 = new Step();
      Hook[] hookArray0 = step0.getBefore();
      assertEquals(0, hookArray0.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Step step0 = new Step();
      step0.getBeforeStatus();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Step step0 = new Step();
      Result result0 = step0.getResult();
      assertNull(result0.getErrorMessage());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Step step0 = new Step();
      Match match0 = step0.getMatch();
      assertNull(match0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Step step0 = new Step();
      step0.getAfterStatus();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Step step0 = new Step();
      Hook[] hookArray0 = step0.getAfter();
      assertEquals(0, hookArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Step step0 = new Step();
      step0.setMetaData();
      Status status0 = step0.getAfterStatus();
      assertTrue(status0.isPassed());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Step step0 = new Step();
      Embedding[] embeddingArray0 = step0.getEmbeddings();
      assertEquals(0, embeddingArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Step step0 = new Step();
      String string0 = step0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Step step0 = new Step();
      DocString docString0 = step0.getDocString();
      assertNull(docString0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Step step0 = new Step();
      long long0 = step0.getDuration();
      assertEquals(0L, long0);
  }
}
