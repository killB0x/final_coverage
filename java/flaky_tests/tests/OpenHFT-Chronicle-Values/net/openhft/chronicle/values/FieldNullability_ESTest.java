/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 10:50:34 GMT 2022
 */

package net.openhft.chronicle.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Method;
import net.openhft.chronicle.values.FieldModel;
import net.openhft.chronicle.values.FieldNullability;
import net.openhft.chronicle.values.MethodTemplate;
import net.openhft.chronicle.values.ValueFieldModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FieldNullability_ESTest extends FieldNullability_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValueFieldModel valueFieldModel0 = new ValueFieldModel();
      FieldNullability fieldNullability0 = new FieldNullability(valueFieldModel0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FieldNullability fieldNullability0 = new FieldNullability((FieldModel) null);
      // Undeclared exception!
      try { 
        fieldNullability0.addInfo((Method) null, (MethodTemplate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.openhft.chronicle.values.FieldNullability", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FieldNullability fieldNullability0 = new FieldNullability((FieldModel) null);
      fieldNullability0.nullability();
  }
}
