/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 10:44:14 GMT 2022
 */

package net.openhft.chronicle.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.openhft.chronicle.values.Primitives;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Primitives_ESTest extends Primitives_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Character> class0 = Character.TYPE;
      Class class1 = Primitives.boxed(class0);
      assertEquals("class java.lang.Character", class1.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        Primitives.boxed(class0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // Expected primitive type: class java.lang.Object
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Character> class0 = Character.TYPE;
      int int0 = Primitives.widthInBits(class0);
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Character> class0 = Character.class;
      // Undeclared exception!
      try { 
        Primitives.widthInBits(class0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // class java.lang.Character is not a primitive type
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      boolean boolean0 = Primitives.isPrimitiveFloatingType(class0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<Object> class0 = Object.class;
      boolean boolean0 = Primitives.isPrimitiveIntegerType(class0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<Character> class0 = Character.TYPE;
      boolean boolean0 = Primitives.isPrimitiveIntegerType(class0);
      assertTrue(boolean0);
  }
}
