/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 03 10:46:56 GMT 2022
 */

package net.openhft.chronicle.values;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Parameter;
import net.openhft.chronicle.values.Nullability;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Nullability_ESTest extends Nullability_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Nullability[] nullabilityArray0 = Nullability.values();
      assertEquals(2, nullabilityArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Nullability.valueOf("NOT_NULL");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Nullability.hasNullableAnnotation((Parameter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.openhft.chronicle.values.Nullability", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        Nullability.hasNotNullAnnotation((Parameter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.openhft.chronicle.values.Nullability", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        Nullability.explicitNullability((Parameter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.openhft.chronicle.values.Nullability", e);
      }
  }
}
