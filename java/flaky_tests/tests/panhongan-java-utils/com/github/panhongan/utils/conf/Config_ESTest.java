/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 09:35:08 GMT 2022
 */

package com.github.panhongan.utils.conf;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.panhongan.utils.conf.Config;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Config_ESTest extends Config_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "");
      int int0 = config0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Config config0 = new Config();
      config0.parseResourceFile("");
      Set<String> set0 = config0.keySet();
      assertFalse(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Config config0 = new Config();
      config0.parseResourceFile("");
      boolean boolean0 = config0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Config config0 = new Config();
      String string0 = config0.getString("f", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Config config0 = new Config();
      String string0 = config0.getString("4", "4");
      assertEquals("4", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Config config0 = new Config();
      String string0 = config0.getString("G:JMg_.gkMh&e)wWb5h", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "invalid line : {}");
      String string0 = config0.getString("");
      assertEquals("invalid line : {}", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "");
      String string0 = config0.getString("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Config config0 = new Config();
      short short0 = config0.getShort("", (short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Config config0 = new Config();
      short short0 = config0.getShort("", (short)296);
      assertEquals((short)296, short0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Config config0 = new Config();
      long long0 = config0.getLong("", 0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Config config0 = new Config();
      long long0 = config0.getLong("!hw<[", 2L);
      assertEquals(2L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Config config0 = new Config();
      int int0 = config0.getInt("#", 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Config config0 = new Config();
      int int0 = config0.getInt("^PN", 1626);
      assertEquals(1626, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Config config0 = new Config();
      float float0 = config0.getFloat("", 0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Config config0 = new Config();
      float float0 = config0.getFloat("", (-2106.1133F));
      assertEquals((-2106.1133F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Config config0 = new Config();
      double double0 = config0.getDouble("com.github.panhongan.utils.conf.Config", 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Config config0 = new Config();
      double double0 = config0.getDouble("\"m", (-496.2));
      assertEquals((-496.2), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Config config0 = new Config();
      boolean boolean0 = config0.getBoolean("pp{[lq #-P", true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Config config0 = new Config();
      boolean boolean0 = config0.getBoolean("*LJ!i`NP@=");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.parseResourceFile(")");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException: inStream parameter is null
         //
         verifyException("com.github.panhongan.utils.conf.Config", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.parse("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.FileNotFoundException
         //
         verifyException("com.github.panhongan.utils.conf.Config", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getShort((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getLong((String) null, 403L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getLong((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getInt((String) null, 757);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getInt(":Y\"G)Q\u0001Dhq\"1Gg");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getFloat((String) null, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "");
      // Undeclared exception!
      try { 
        config0.getFloat("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getDouble((String) null, 1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "");
      // Undeclared exception!
      try { 
        config0.getDouble("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getBoolean((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getDouble("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Config config0 = new Config();
      boolean boolean0 = config0.isNotEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "invalid line : {}");
      boolean boolean0 = config0.getBoolean("", false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "");
      // Undeclared exception!
      try { 
        config0.getDouble("", 1.0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Config config0 = new Config();
      double double0 = config0.getDouble("", 3325.6166502725);
      assertEquals(3325.6166502725, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("in8cvalid line : {}", "");
      // Undeclared exception!
      try { 
        config0.getFloat("in8cvalid line : {}", (float) 2802L);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Config config0 = new Config();
      float float0 = config0.getFloat("in8cvalid line : {}", (float) 2802L);
      assertEquals(2802.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "");
      // Undeclared exception!
      try { 
        config0.getLong("", 0L);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Config config0 = new Config();
      long long0 = config0.getLong("com.github.panhongan.utils.conf.Config", (-1L));
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("S|<An v>oj", "");
      // Undeclared exception!
      try { 
        config0.getInt("S|<An v>oj", 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Config config0 = new Config();
      int int0 = config0.getInt("", (-2792));
      assertEquals((-2792), int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Config config0 = new Config();
      short short0 = config0.getShort("", (short) (-1));
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", (String) null);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty("", "");
      // Undeclared exception!
      try { 
        config0.getShort("", (short)0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Config config0 = new Config();
      config0.addProperty((String) null, "");
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Config config0 = new Config();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("R<2I/#}");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "R<2I/#}");
      // Undeclared exception!
      try { 
        config0.parse("R<2I/#}");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.github.panhongan.utils.conf.Config", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Config config0 = new Config();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("R<2I/#}");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      config0.parse("R<2I/#}");
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getInt((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getShort("Z]0;Lgy>5YM@lD/X%1E");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Config config0 = new Config();
      config0.parseResourceFile("");
      boolean boolean0 = config0.isNotEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Config config0 = new Config();
      String string0 = config0.getString("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getFloat((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Config config0 = new Config();
      String string0 = config0.toString();
      assertEquals("{}", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getLong("`");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Config config0 = new Config();
      Set<String> set0 = config0.keySet();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Config config0 = new Config();
      int int0 = config0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Config config0 = new Config();
      boolean boolean0 = config0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getString((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Config config0 = new Config();
      // Undeclared exception!
      try { 
        config0.getBoolean((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
