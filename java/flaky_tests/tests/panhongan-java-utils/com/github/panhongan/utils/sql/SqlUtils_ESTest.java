/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 25 09:43:54 GMT 2022
 */

package com.github.panhongan.utils.sql;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.github.panhongan.utils.sql.SqlUtils;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SqlUtils_ESTest extends SqlUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      SqlUtils.closeResultSet(resultSet0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SqlUtils.closeResultSet((ResultSet) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      SqlUtils.closeStatement(statement0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SqlUtils.closeStatement((Statement) null);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      SqlUtils.closeConnection(connection0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SqlUtils.closeConnection((Connection) null);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SqlUtils sqlUtils0 = new SqlUtils();
  }
}
