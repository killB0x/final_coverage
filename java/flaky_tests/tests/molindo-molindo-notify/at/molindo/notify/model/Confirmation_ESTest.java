/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 15:12:02 GMT 2022
 */

package at.molindo.notify.model;

import org.junit.Test;
import static org.junit.Assert.*;
import at.molindo.notify.model.Confirmation;
import at.molindo.notify.model.Notification;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Confirmation_ESTest extends Confirmation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Confirmation confirmation0 = new Confirmation();
      confirmation0.setTouched((Date) null);
      Date date0 = confirmation0.getTouched();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Confirmation confirmation0 = new Confirmation((Notification) null);
      confirmation0.setKey((String) null);
      String string0 = confirmation0.getKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Confirmation confirmation0 = new Confirmation();
      confirmation0.setKey("");
      String string0 = confirmation0.getKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Confirmation confirmation0 = new Confirmation((Notification) null);
      Confirmation confirmation1 = confirmation0.setNotification((Notification) null);
      assertSame(confirmation1, confirmation0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Confirmation confirmation0 = new Confirmation((Notification) null);
      Notification notification0 = confirmation0.getNotification();
      assertNull(notification0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Confirmation confirmation0 = new Confirmation((Notification) null);
      Date date0 = confirmation0.getTouched();
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Confirmation confirmation0 = new Confirmation((Notification) null);
      String string0 = confirmation0.getKey();
      assertEquals("00000000-0100-4000-8200-000003000000", string0);
  }
}
