/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 14:58:38 GMT 2022
 */

package at.molindo.notify.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import at.molindo.notify.model.BeanParams;
import at.molindo.notify.model.IParams;
import at.molindo.notify.model.Param;
import at.molindo.notify.model.ParamType;
import at.molindo.notify.model.ParamValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParamValue_ESTest extends ParamValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      ParamType paramType0 = ParamType.URL;
      paramValue0.setType(paramType0);
      ParamType paramType1 = paramValue0.getType();
      assertSame(paramType1, paramType0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      paramValue0.setName("Value [type=null, name=null, value=null]");
      String string0 = paramValue0.getName();
      assertEquals("Value [type=null, name=null, value=null]", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      paramValue0.setName("");
      String string0 = paramValue0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      paramValue0.setName("at.molindo.notify.model.Params");
      ParamType paramType0 = ParamType.FLOAT;
      paramValue0.setType(paramType0);
      // Undeclared exception!
      try { 
        paramValue0.set((IParams) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // at/molindo/utils/data/StringUtils
         //
         verifyException("at.molindo.notify.model.Param", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      ParamType paramType0 = ParamType.SERIALIZABLE;
      paramValue0.setName("tC[lj Ge");
      paramValue0.setType(paramType0);
      // Undeclared exception!
      try { 
        paramValue0.getStringValue();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // at/molindo/utils/data/StringUtils
         //
         verifyException("at.molindo.notify.model.Param", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParamValue paramValue0 = null;
      try {
        paramValue0 = new ParamValue((Param<Object>) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("at.molindo.notify.model.ParamValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Param<ParamValue> param0 = (Param<ParamValue>) mock(Param.class, new ViolatedAssumptionAnswer());
      doReturn((ParamType) null).when(param0).type();
      ParamValue paramValue0 = new ParamValue();
      ParamValue paramValue1 = null;
      try {
        paramValue1 = new ParamValue(param0, paramValue0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // type
         //
         verifyException("at.molindo.notify.model.ParamValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      paramValue0.getType();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      String string0 = paramValue0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      Object object0 = new Object();
      paramValue0.setValue(object0);
      ParamValue paramValue1 = new ParamValue();
      assertFalse(paramValue1.equals((Object)paramValue0));
      
      paramValue1.setValue(object0);
      boolean boolean0 = paramValue1.equals(paramValue0);
      assertTrue(paramValue1.equals((Object)paramValue0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      ParamValue paramValue1 = new ParamValue();
      assertTrue(paramValue1.equals((Object)paramValue0));
      
      paramValue1.setValue(paramValue0);
      boolean boolean0 = paramValue0.equals(paramValue1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      Object object0 = new Object();
      ParamValue paramValue1 = new ParamValue();
      assertTrue(paramValue1.equals((Object)paramValue0));
      
      paramValue1.setValue(object0);
      boolean boolean0 = paramValue1.equals(paramValue0);
      assertFalse(paramValue1.equals((Object)paramValue0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      ParamValue paramValue1 = new ParamValue();
      assertTrue(paramValue1.equals((Object)paramValue0));
      
      ParamType paramType0 = ParamType.LONG;
      paramValue1.setType(paramType0);
      boolean boolean0 = paramValue1.equals(paramValue0);
      assertFalse(paramValue1.equals((Object)paramValue0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      ParamValue paramValue1 = new ParamValue();
      paramValue0.setName("at.molindo.notify.model.ParamValue");
      assertFalse(paramValue0.equals((Object)paramValue1));
      
      paramValue1.setName("at.molindo.notify.model.ParamValue");
      boolean boolean0 = paramValue0.equals(paramValue1);
      assertTrue(paramValue1.equals((Object)paramValue0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      paramValue0.setName("at.molindo.notify.model.Param$6");
      ParamValue paramValue1 = new ParamValue();
      boolean boolean0 = paramValue1.equals(paramValue0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      ParamValue paramValue1 = new ParamValue();
      assertTrue(paramValue1.equals((Object)paramValue0));
      
      paramValue0.setName("at.molindo.notify.model.ParamValue");
      boolean boolean0 = paramValue0.equals(paramValue1);
      assertFalse(boolean0);
      assertFalse(paramValue1.equals((Object)paramValue0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      boolean boolean0 = paramValue0.equals("at.molindo.notify.model.ParamValue");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      boolean boolean0 = paramValue0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      boolean boolean0 = paramValue0.equals(paramValue0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      paramValue0.setValue(paramValue0);
      paramValue0.hashCode();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      ParamType paramType0 = ParamType.FLOAT;
      paramValue0.setType(paramType0);
      paramValue0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      paramValue0.setName("at.molindo.notify.model.ParamValue");
      paramValue0.hashCode();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      paramValue0.setName("bean");
      ParamType paramType0 = ParamType.FLOAT;
      paramValue0.setType(paramType0);
      // Undeclared exception!
      try { 
        paramValue0.param();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // at/molindo/utils/data/StringUtils
         //
         verifyException("at.molindo.notify.model.Param", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      ParamType paramType0 = ParamType.FLOAT;
      paramValue0.setType(paramType0);
      // Undeclared exception!
      try { 
        paramValue0.param();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // type (was FLOAT) and name (was null) must be set
         //
         verifyException("at.molindo.notify.model.ParamValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      // Undeclared exception!
      try { 
        paramValue0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // value
         //
         verifyException("at.molindo.notify.model.ParamValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      paramValue0.setStringValue("+wgMgg");
      // Undeclared exception!
      try { 
        paramValue0.getValue();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // type (was null) and name (was null) must be set
         //
         verifyException("at.molindo.notify.model.ParamValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      // Undeclared exception!
      try { 
        paramValue0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // BUG
         //
         verifyException("at.molindo.notify.model.ParamValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      paramValue0.setValue(paramValue0);
      ParamValue paramValue1 = (ParamValue)paramValue0.getValue();
      assertNull(paramValue1.getType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      // Undeclared exception!
      try { 
        paramValue0.setName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name
         //
         verifyException("at.molindo.notify.model.ParamValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      // Undeclared exception!
      try { 
        paramValue0.setType((ParamType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // type
         //
         verifyException("at.molindo.notify.model.ParamValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      BeanParams<ParamValue> beanParams0 = new BeanParams<ParamValue>(paramValue0);
      // Undeclared exception!
      try { 
        paramValue0.set(beanParams0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // type (was null) and name (was null) must be set
         //
         verifyException("at.molindo.notify.model.ParamValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      String string0 = paramValue0.toString();
      assertEquals("Value [type=null, name=null, value=null]", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      // Undeclared exception!
      try { 
        paramValue0.getStringValue();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // type (was null) and name (was null) must be set
         //
         verifyException("at.molindo.notify.model.ParamValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      ParamType paramType0 = ParamType.BOOLEAN;
      Param<ParamValue> param0 = (Param<ParamValue>) mock(Param.class, new ViolatedAssumptionAnswer());
      doReturn("'C").when(param0).getName();
      doReturn(paramType0).when(param0).type();
      ParamValue paramValue1 = new ParamValue(param0, paramValue0);
      assertFalse(paramValue1.equals((Object)paramValue0));
  }
}
