/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 15 15:05:41 GMT 2022
 */

package at.molindo.notify.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import at.molindo.notify.model.BeanParams;
import at.molindo.notify.model.IParams;
import at.molindo.notify.model.Param;
import at.molindo.notify.model.ParamValue;
import java.lang.reflect.Array;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BeanParams_ESTest extends BeanParams_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      BeanParams<ParamValue> beanParams0 = BeanParams.params(paramValue0);
      IParams iParams0 = beanParams0.setAll((IParams) null);
      assertNotNull(iParams0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      BeanParams<ParamValue> beanParams0 = new BeanParams<ParamValue>(paramValue0);
      Param<ParamValue>[] paramArray0 = (Param<ParamValue>[]) Array.newInstance(Param.class, 0);
      boolean boolean0 = beanParams0.containsAll(paramArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      BeanParams<ParamValue> beanParams0 = BeanParams.params(paramValue0);
      // Undeclared exception!
      try { 
        beanParams0.set((Param<ParamValue>) null, paramValue0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("at.molindo.notify.model.BeanParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      BeanParams<ParamValue> beanParams0 = BeanParams.params(paramValue0);
      // Undeclared exception!
      try { 
        beanParams0.isSet((Param<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("at.molindo.notify.model.BeanParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      BeanParams<ParamValue> beanParams0 = BeanParams.params(paramValue0);
      Param<ParamValue> param0 = (Param<ParamValue>) mock(Param.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(param0).getName();
      // Undeclared exception!
      try { 
        beanParams0.isSet(param0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/beanutils/BeanUtils
         //
         verifyException("at.molindo.notify.model.BeanParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      BeanParams<ParamValue> beanParams0 = new BeanParams<ParamValue>(paramValue0);
      // Undeclared exception!
      try { 
        beanParams0.get((Param<ParamValue>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("at.molindo.notify.model.BeanParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      BeanParams<ParamValue> beanParams0 = new BeanParams<ParamValue>(paramValue0);
      Param<ParamValue>[] paramArray0 = (Param<ParamValue>[]) Array.newInstance(Param.class, 1);
      Param<ParamValue> param0 = (Param<ParamValue>) mock(Param.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(param0).getName();
      paramArray0[0] = param0;
      // Undeclared exception!
      try { 
        beanParams0.containsAll(paramArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/beanutils/BeanUtils
         //
         verifyException("at.molindo.notify.model.BeanParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BeanParams<ParamValue> beanParams0 = null;
      try {
        beanParams0 = new BeanParams<ParamValue>((ParamValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bean
         //
         verifyException("at.molindo.notify.model.BeanParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      BeanParams<ParamValue> beanParams0 = new BeanParams<ParamValue>(paramValue0);
      // Undeclared exception!
      try { 
        beanParams0.iterator();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/beanutils/PropertyUtils
         //
         verifyException("at.molindo.notify.model.BeanParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        BeanParams.params((ParamValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bean
         //
         verifyException("at.molindo.notify.model.BeanParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      BeanParams<ParamValue> beanParams0 = BeanParams.params(paramValue0);
      Param<ParamValue> param0 = (Param<ParamValue>) mock(Param.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(param0).getName();
      // Undeclared exception!
      try { 
        beanParams0.set(param0, paramValue0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/beanutils/PropertyUtils
         //
         verifyException("at.molindo.notify.model.BeanParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      BeanParams<ParamValue> beanParams0 = new BeanParams<ParamValue>(paramValue0);
      ParamValue paramValue1 = beanParams0.getBean();
      assertSame(paramValue1, paramValue0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      BeanParams<ParamValue> beanParams0 = new BeanParams<ParamValue>(paramValue0);
      Param<ParamValue>[] paramArray0 = (Param<ParamValue>[]) Array.newInstance(Param.class, 1);
      // Undeclared exception!
      try { 
        beanParams0.containsAll(paramArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("at.molindo.notify.model.BeanParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      BeanParams<ParamValue> beanParams0 = BeanParams.params(paramValue0);
      Param<ParamValue> param0 = (Param<ParamValue>) mock(Param.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(param0).getName();
      // Undeclared exception!
      try { 
        beanParams0.get(param0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/beanutils/BeanUtils
         //
         verifyException("at.molindo.notify.model.BeanParams", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      BeanParams<ParamValue> beanParams0 = new BeanParams<ParamValue>(paramValue0);
      // Undeclared exception!
      try { 
        beanParams0.newMap();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/collect/Maps
         //
         verifyException("at.molindo.notify.model.IParams$Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParamValue paramValue0 = new ParamValue();
      BeanParams<ParamValue> beanParams0 = new BeanParams<ParamValue>(paramValue0);
      // Undeclared exception!
      try { 
        beanParams0.setAll(beanParams0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/beanutils/PropertyUtils
         //
         verifyException("at.molindo.notify.model.BeanParams", e);
      }
  }
}
