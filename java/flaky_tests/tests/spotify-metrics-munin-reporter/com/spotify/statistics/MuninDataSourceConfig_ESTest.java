/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 30 07:55:42 GMT 2022
 */

package com.spotify.statistics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.spotify.statistics.MuninDataSourceConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MuninDataSourceConfig_ESTest extends MuninDataSourceConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      MuninDataSourceConfig muninDataSourceConfig1 = muninDataSourceConfig0.withMin(183);
      muninDataSourceConfig1.withName("com.spotify.statistics.MuninDataSourceConfig");
      assertEquals(183, muninDataSourceConfig0.getMin());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      MuninDataSourceConfig muninDataSourceConfig1 = muninDataSourceConfig0.withMin((-1));
      muninDataSourceConfig1.withName("");
      assertEquals((-1), muninDataSourceConfig0.getMin());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      muninDataSourceConfig0.withMin(0);
      assertEquals(0, muninDataSourceConfig0.getMin());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      muninDataSourceConfig0.withMin(4481);
      muninDataSourceConfig0.withDraw("");
      assertEquals(4481, muninDataSourceConfig0.getMin());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      MuninDataSourceConfig muninDataSourceConfig1 = muninDataSourceConfig0.withMin((-1908));
      muninDataSourceConfig1.withDraw("FpM2_");
      assertEquals((-1908), muninDataSourceConfig0.getMin());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      muninDataSourceConfig0.withName("com.spotify.statistics.MuninDataSourceConfig");
      muninDataSourceConfig0.getName();
      assertEquals(0, muninDataSourceConfig0.getMin());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      muninDataSourceConfig0.withMin(4481);
      int int0 = muninDataSourceConfig0.getMin();
      assertEquals(4481, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      MuninDataSourceConfig muninDataSourceConfig1 = muninDataSourceConfig0.withDraw("CTbVG");
      muninDataSourceConfig1.getDraw();
      assertEquals(0, muninDataSourceConfig1.getMin());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      muninDataSourceConfig0.getDraw();
      assertEquals(0, muninDataSourceConfig0.getMin());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      muninDataSourceConfig0.getStack();
      assertEquals(0, muninDataSourceConfig0.getMin());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      muninDataSourceConfig0.getLine();
      assertEquals(0, muninDataSourceConfig0.getMin());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      MuninDataSourceConfig muninDataSourceConfig1 = muninDataSourceConfig0.withDraw("");
      muninDataSourceConfig1.getDraw();
      assertEquals(0, muninDataSourceConfig1.getMin());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      muninDataSourceConfig0.withName("");
      muninDataSourceConfig0.getName();
      assertEquals(0, muninDataSourceConfig0.getMin());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      muninDataSourceConfig0.getName();
      assertEquals(0, muninDataSourceConfig0.getMin());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      muninDataSourceConfig0.withMin((-1));
      int int0 = muninDataSourceConfig0.getMin();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      int int0 = muninDataSourceConfig0.getMin();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      // Undeclared exception!
      try { 
        muninDataSourceConfig0.withStack("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/Validate
         //
         verifyException("com.spotify.statistics.MuninDataSourceConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      muninDataSourceConfig0.getCdef();
      assertEquals(0, muninDataSourceConfig0.getMin());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      // Undeclared exception!
      try { 
        muninDataSourceConfig0.withCdef("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/Validate
         //
         verifyException("com.spotify.statistics.MuninDataSourceConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      // Undeclared exception!
      try { 
        muninDataSourceConfig0.withLine("com.spotify.statistics.MuninDataSourceConfig");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/Validate
         //
         verifyException("com.spotify.statistics.MuninDataSourceConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      muninDataSourceConfig0.getColor();
      assertEquals(0, muninDataSourceConfig0.getMin());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MuninDataSourceConfig muninDataSourceConfig0 = new MuninDataSourceConfig();
      // Undeclared exception!
      try { 
        muninDataSourceConfig0.withColor("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/Validate
         //
         verifyException("com.spotify.statistics.MuninDataSourceConfig", e);
      }
  }
}
