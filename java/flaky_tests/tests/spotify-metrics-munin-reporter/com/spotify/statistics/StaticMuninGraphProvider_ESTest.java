/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 30 07:50:49 GMT 2022
 */

package com.spotify.statistics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.spotify.statistics.MuninGraph;
import com.spotify.statistics.StaticMuninGraphProvider;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StaticMuninGraphProvider_ESTest extends StaticMuninGraphProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StaticMuninGraphProvider staticMuninGraphProvider0 = null;
      try {
        staticMuninGraphProvider0 = new StaticMuninGraphProvider((Map<String, MuninGraph>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<MuninGraph> linkedList0 = new LinkedList<MuninGraph>();
      linkedList0.add((MuninGraph) null);
      StaticMuninGraphProvider staticMuninGraphProvider0 = null;
      try {
        staticMuninGraphProvider0 = new StaticMuninGraphProvider(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.spotify.statistics.StaticMuninGraphProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedList<MuninGraph> linkedList0 = new LinkedList<MuninGraph>();
      StaticMuninGraphProvider staticMuninGraphProvider0 = new StaticMuninGraphProvider(linkedList0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<String, MuninGraph> hashMap0 = new HashMap<String, MuninGraph>();
      StaticMuninGraphProvider staticMuninGraphProvider0 = new StaticMuninGraphProvider(hashMap0);
      Map<String, MuninGraph> map0 = staticMuninGraphProvider0.getGraphs();
      assertTrue(map0.isEmpty());
  }
}
