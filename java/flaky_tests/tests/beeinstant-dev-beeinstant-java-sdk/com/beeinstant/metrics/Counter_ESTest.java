/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 05:33:57 GMT 2022
 */

package com.beeinstant.metrics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.beeinstant.metrics.Counter;
import com.beeinstant.metrics.Metric;
import com.beeinstant.metrics.Unit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Counter_ESTest extends Counter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Counter counter0 = new Counter();
      counter0.incCounter(0);
      Metric metric0 = counter0.merge(counter0);
      assertSame(counter0, metric0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Counter counter0 = new Counter();
      Counter counter1 = new Counter();
      Metric metric0 = counter1.merge(counter0);
      assertNotSame(counter0, metric0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Counter counter0 = new Counter();
      counter0.incCounter(1);
      String string0 = counter0.flushToString();
      assertEquals("1", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Counter counter0 = new Counter();
      counter0.incCounter(2034458192);
      Metric metric0 = counter0.merge(counter0);
      assertSame(metric0, counter0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Counter counter0 = new Counter();
      // Undeclared exception!
      try { 
        counter0.merge((Metric) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Merge with an invalid Counter
         //
         verifyException("com.beeinstant.metrics.Counter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Counter counter0 = new Counter();
      counter0.incCounter(0);
      String string0 = counter0.flushToString();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Counter counter0 = new Counter();
      String string0 = counter0.flushToString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Counter counter0 = new Counter();
      counter0.incCounter(0);
      counter0.incCounter(0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Counter counter0 = new Counter();
      counter0.incCounter((-1533));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Counter counter0 = new Counter();
      Unit unit0 = Unit.BYTE;
      // Undeclared exception!
      try { 
        counter0.record((-1493.40669), unit0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Cannot record measurements in a Counter
         //
         verifyException("com.beeinstant.metrics.Counter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Counter counter0 = new Counter();
      // Undeclared exception!
      try { 
        counter0.stopTimer(0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Cannot stop a timer in a Counter
         //
         verifyException("com.beeinstant.metrics.Counter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Counter counter0 = new Counter();
      // Undeclared exception!
      try { 
        counter0.startTimer();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Cannot start a timer in a Counter
         //
         verifyException("com.beeinstant.metrics.Counter", e);
      }
  }
}
