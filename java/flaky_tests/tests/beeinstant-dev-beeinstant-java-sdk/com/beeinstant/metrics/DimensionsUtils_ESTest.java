/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 17 05:30:18 GMT 2022
 */

package com.beeinstant.metrics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.beeinstant.metrics.DimensionsUtils;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DimensionsUtils_ESTest extends DimensionsUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        DimensionsUtils.extendAndSerializeDimensions((Map<String, String>) null, "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/http/conn/HttpClientConnectionManager
         //
         verifyException("com.beeinstant.metrics.DimensionsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("", "");
      String string0 = DimensionsUtils.serializeDimensionsToString(hashMap0);
      assertEquals("d.=", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Map<String, String> map0 = DimensionsUtils.parseDimensions(",");
      String string0 = DimensionsUtils.serializeDimensionsToString(map0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Map<String, String> map0 = DimensionsUtils.parseDimensions("eU=j7asa=");
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = DimensionsUtils.isValidName("beeinstant.secretKey");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = DimensionsUtils.isValidName("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        DimensionsUtils.serializeDimensionsToString((Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.beeinstant.metrics.DimensionsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        DimensionsUtils.parseDimensions((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.beeinstant.metrics.DimensionsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        DimensionsUtils.parseDimensions("eRU=j7as~=");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/http/conn/HttpClientConnectionManager
         //
         verifyException("com.beeinstant.metrics.DimensionsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        DimensionsUtils.isValidName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        DimensionsUtils.extendAndSerializeDimensions(hashMap0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.beeinstant.metrics.DimensionsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = DimensionsUtils.extendAndSerializeDimensions(hashMap0, ",");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        DimensionsUtils.extendAndSerializeDimensions(hashMap0, "kR#=#2B(1Z<O");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/http/conn/HttpClientConnectionManager
         //
         verifyException("com.beeinstant.metrics.DimensionsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        DimensionsUtils.extendAndSerializeDimensions(hashMap0, "d.*=eU=j7asa=,d.eu=j7asa");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/http/conn/HttpClientConnectionManager
         //
         verifyException("com.beeinstant.metrics.DimensionsUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DimensionsUtils dimensionsUtils0 = new DimensionsUtils();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = DimensionsUtils.extendAndSerializeDimensions(hashMap0, "eU=j7asa=");
      assertEquals("d.eu=j7asa", string0);
  }
}
