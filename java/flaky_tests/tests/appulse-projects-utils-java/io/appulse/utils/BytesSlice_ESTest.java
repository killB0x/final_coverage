/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 05:16:00 GMT 2022
 */

package io.appulse.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.appulse.utils.Bytes;
import io.appulse.utils.BytesByteBuffer;
import io.appulse.utils.BytesExtendableArray;
import io.appulse.utils.BytesFixedArray;
import io.appulse.utils.BytesPool;
import io.appulse.utils.BytesSlice;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BytesSlice_ESTest extends BytesSlice_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer((-1258));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer1, integer0);
      bytesSlice0.readerIndex(21);
      assertEquals(21, bytesSlice0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      Integer integer0 = new Integer(511);
      Integer integer1 = new Integer(2);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer1, integer0);
      bytesSlice0.writerIndex(2);
      assertEquals(2, bytesSlice0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Bytes bytes0 = bytesSlice0.writerIndex(0);
      assertEquals(0, bytes0.writerIndex());
      assertEquals(0, bytes0.capacity());
      assertEquals(0, bytesSlice0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      Integer integer0 = new Integer(2);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      bytesSlice0.hashCode();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      Bytes bytes0 = bytesExtendableArray0.writerIndex(0);
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
      bytesSlice0.checkWriteBounds(0, 1);
      assertEquals(0, bytesSlice0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(8);
      Integer integer0 = new Integer(16);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      bytesSlice0.checkReaderBounds(269, (-929));
      assertEquals(0, bytesSlice0.capacity());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer((-1147));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer1, integer0);
      int int0 = bytesSlice0.writerIndex();
      assertEquals(1147, int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-604));
      Integer integer1 = new Integer((-1208));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer1);
      int int0 = bytesSlice0.writerIndex();
      assertEquals((-604), int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((byte)4);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      byte[] byteArray0 = new byte[8];
      bytesSlice0.writeNB(byteArray0, (int) (byte)4, 2);
      assertEquals(2, bytesSlice0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      bytesSlice0.write2B((short) (-60));
      assertEquals(2, bytesSlice0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(8);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      bytesSlice0.write1B((byte) (-4));
      assertEquals(1, bytesSlice0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.set2B(16, ':');
      Integer integer0 = new Integer(4);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Bytes bytes0 = bytesSlice0.set8B(0, 8L);
      assertEquals(0, bytes0.capacity());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Bytes bytes0 = bytesSlice0.set4B(0, (-2189));
      assertEquals(0, bytes0.capacity());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Bytes bytes0 = bytesSlice0.set2B(0, (short)1);
      assertFalse(bytes0.isAutoResizable());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      Bytes bytes0 = bytesExtendableArray0.writerIndex(0);
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
      Bytes bytes1 = bytesSlice0.set1B(0, (byte)103);
      assertEquals(0, bytes1.capacity());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Bytes bytes0 = bytesSlice0.readerIndex(0);
      assertEquals(0, bytes0.readerIndex());
      assertEquals(0, bytesSlice0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      bytesSlice0.write8B((long) 0);
      short short0 = bytesSlice0.readShort();
      assertEquals(2, bytesSlice0.readerIndex());
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      bytesSlice0.write8B((float) 0);
      Charset charset0 = Charset.defaultCharset();
      bytesSlice0.writeNB(")vCX", charset0);
      bytesSlice0.readLong();
      short short0 = bytesSlice0.readShort();
      assertEquals(13, bytesSlice0.writerIndex());
      assertEquals((short)10614, short0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Bytes bytes0 = bytesSlice0.write8B((float) 0);
      bytes0.readLong();
      assertEquals(8, bytesSlice0.writerIndex());
      assertEquals(8, bytesSlice0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      bytesSlice0.writeNB(")vCX", charset0);
      bytesSlice0.write8B((byte) (-113));
      long long0 = bytesSlice0.readLong();
      assertEquals(8, bytesSlice0.readerIndex());
      assertEquals(2987649450190569471L, long0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write4B(0);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(16);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer1);
      int int0 = bytesSlice0.readInt();
      assertEquals(4, bytesSlice0.readerIndex());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      bytesSlice0.writeNB(")vCX", charset0);
      int int0 = bytesSlice0.readInt();
      assertEquals(5, bytesSlice0.writerIndex());
      assertEquals(695616344, int0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      Bytes bytes0 = bytesExtendableArray0.set2B(16, ':');
      Integer integer0 = new Integer(4);
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
      bytesSlice0.write4B((-1459L));
      int int0 = bytesSlice0.readInt();
      assertEquals(4, bytesSlice0.writerIndex());
      assertEquals((-1459), int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write4B(0);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(255);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer1);
      float float0 = bytesSlice0.readFloat();
      assertEquals(4, bytesSlice0.readerIndex());
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Integer integer0 = new Integer(0);
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write8B((long) 0);
      Integer integer1 = new Integer(1407);
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer1);
      Charset charset0 = Charset.defaultCharset();
      BytesSlice bytesSlice1 = new BytesSlice(bytesSlice0, integer0, integer0);
      bytesSlice1.writeNB("r;v?TV>cXr165", charset0);
      float float0 = bytesSlice0.readFloat();
      assertEquals(4, bytesSlice0.readerIndex());
      assertEquals(3.7130654E30F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write4B(0);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(255);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer1);
      bytesSlice0.set4B(0, (-1.0F));
      float float0 = bytesSlice0.readFloat();
      assertEquals(4, bytesSlice0.readerIndex());
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.set2B(16, ':');
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Bytes bytes0 = bytesSlice0.write8B((float) 0);
      double double0 = bytes0.readDouble();
      assertEquals(8, bytesSlice0.writerIndex());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      Bytes bytes0 = bytesExtendableArray0.writerIndex(14);
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
      bytesSlice0.write8B((float) 14);
      double double0 = bytesSlice0.readDouble();
      assertEquals(8, bytesSlice0.writerIndex());
      assertEquals(5.41896386E-315, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write4B(0);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(4);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer1);
      char char0 = bytesSlice0.readChar();
      assertEquals(2, bytesSlice0.readerIndex());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      Bytes bytes0 = bytesSlice0.writeNB("KNds2DFk1#PSjM", charset0);
      char char0 = bytes0.readChar();
      assertEquals(14, bytesSlice0.writerIndex());
      assertEquals('\u4B4E', char0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      byte[] byteArray0 = new byte[2];
      Charset charset0 = Charset.defaultCharset();
      bytesSlice0.writeNB(")vCX", charset0);
      bytesSlice0.readBytes(byteArray0, 0, 1);
      int int0 = bytesSlice0.readerIndex();
      assertEquals(5, bytesSlice0.writerIndex());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      bytesSlice0.write2B((float) 0);
      byte byte0 = bytesSlice0.readByte();
      assertEquals(1, bytesSlice0.readerIndex());
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      bytesSlice0.writeNB(")vCX", charset0);
      byte byte0 = bytesSlice0.readByte();
      assertEquals(5, bytesSlice0.writerIndex());
      assertEquals((byte)41, byte0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      BytesPool bytesPool0 = new BytesPool();
      BytesPool.PooledBytes bytesPool_PooledBytes0 = bytesPool0.acquire(208);
      Integer integer0 = new Integer(817);
      BytesSlice bytesSlice0 = new BytesSlice(bytesPool_PooledBytes0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      String string0 = bytesSlice0.getString((-717), 208, charset0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1285);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      Integer integer0 = new Integer(1285);
      BytesSlice bytesSlice0 = new BytesSlice(bytesByteBuffer0, integer0, integer0);
      short short0 = bytesSlice0.getShort((-1203));
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      bytesSlice0.writeNB(")vCq!p", charset0);
      short short0 = bytesSlice0.getShort(0);
      assertEquals(7, bytesSlice0.writerIndex());
      assertEquals((short)10614, short0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(1631);
      bytesExtendableArray0.set8B(2702, (float) 2702);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      long long0 = bytesSlice0.getLong((-1001));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.set4B(1550, 1732);
      Integer integer0 = new Integer(2915);
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
      int int0 = bytesSlice0.getInt((-2312));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)7;
      Bytes bytes0 = Bytes.wrap(byteArray0);
      Integer integer0 = new Integer((byte)0);
      Integer integer1 = new Integer(2028);
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer1);
      int int0 = bytesSlice0.getInt((byte)0);
      assertEquals(5, bytesSlice0.writerIndex());
      assertEquals(0, bytesSlice0.readerIndex());
      assertEquals(117440512, int0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(1646);
      Integer integer0 = new Integer(1646);
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      float float0 = bytesSlice0.getFloat((-836));
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      bytesSlice0.writeNB(")vCX", charset0);
      float float0 = bytesSlice0.getFloat(0);
      assertEquals(5, bytesSlice0.writerIndex());
      assertEquals(5.4681384E-14F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(3585);
      Integer integer0 = new Integer(3585);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      double double0 = bytesSlice0.getDouble((-2959));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(3335);
      bytesExtendableArray0.set8B(3335, (long) 3335);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      byte[] byteArray0 = bytesSlice0.getBytes((-1326), 22);
      assertEquals(22, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      byte[] byteArray0 = bytesSlice0.getBytes(0, 0);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      Bytes bytes0 = bytesSlice0.writeNB(")vCX", charset0);
      byte byte0 = bytes0.getByte(0);
      assertEquals(5, bytesSlice0.writerIndex());
      assertEquals((byte)41, byte0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      int int0 = bytesSlice0.capacity();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(22);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer1);
      int int0 = bytesSlice0.capacity();
      assertEquals(22, int0);
      assertEquals(0, bytesSlice0.readerIndex());
      assertEquals(0, bytesSlice0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      Integer integer0 = new Integer((-1365));
      Integer integer1 = new Integer(41);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer1, integer0);
      int int0 = bytesSlice0.capacity();
      assertEquals((-1406), int0);
      assertEquals(0, bytesSlice0.readerIndex());
      assertEquals(0, bytesSlice0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      Integer integer0 = new Integer((-1177));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      bytesSlice0.canEqual(bytesSlice0);
      assertEquals(0, bytesSlice0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      Integer integer0 = new Integer((-1177));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      bytesSlice0.canEqual(integer0);
      assertEquals(0, bytesSlice0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Integer integer0 = new Integer(968);
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        bytesSlice0.writeNB(byteArray0, 353, (int) (byte)61);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(146);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bytesSlice0.writeNB(byteArray0, 146, 146);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(146) < readerIndex(146) || index(146)+length(146) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(8);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bytesSlice0.writeNB(byteArray0, 8, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Integer integer0 = new Integer((-476));
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write8B(2330L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Bytes bytes0 = Bytes.resizableArray();
      Integer integer0 = new Integer(1441);
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write8B((long) 1441);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(1441) < readerIndex(1441) || index(1441)+length(8) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-14));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write8B((long) (-14));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -14 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Integer integer0 = new Integer((-988));
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write4B(691);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(607);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write4B(607);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(607) < readerIndex(607) || index(607)+length(4) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-128));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write4B((-128));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -128 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(24);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write2B((short)7);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(24) < readerIndex(24) || index(24)+length(2) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Bytes bytes0 = Bytes.resizableArray();
      Integer integer0 = new Integer((-1806));
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write2B((short)1244);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1806 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Integer integer0 = new Integer(8);
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write1B((byte) (-100));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(19);
      Integer integer0 = new Integer(19);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write1B((byte) (-98));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(19) < readerIndex(19) || index(19)+length(1) > capacity(19)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Integer integer0 = new Integer((-961));
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        bytesSlice0.setNB(1, byteArray0, 1, (-2357));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Bytes bytes0 = Bytes.allocate(2);
      Integer integer0 = new Integer(2);
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bytesSlice0.setNB(2, byteArray0, 633, 2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(4) < readerIndex(2) || index(4)+length(2) > capacity(2)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(1);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        bytesSlice0.setNB(1, byteArray0, 2, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Integer integer0 = new Integer(424);
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.set8B(424, (long) 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Bytes bytes0 = Bytes.resizableArray();
      Integer integer0 = Integer.valueOf(183);
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.set8B(183, (long) 183);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(366) < readerIndex(183) || index(366)+length(8) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Bytes bytes0 = Bytes.resizableArray(40);
      Integer integer0 = new Integer((-324));
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.set8B(40, (long) 40);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -284 out of bounds for length 40
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Integer integer0 = new Integer(59);
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.set4B(59, 59);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Bytes bytes0 = Bytes.resizableArray(3);
      Integer integer0 = new Integer((-2131));
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.set4B(259, 259);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1872 out of bounds for length 3
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Integer integer0 = new Integer(809);
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.set2B(809, (short) (-1943));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Bytes bytes0 = Bytes.resizableArray();
      Integer integer0 = new Integer((-980));
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.set1B(16, (byte)112);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -964 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(40);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Integer integer1 = new Integer(Integer.MAX_VALUE);
      BytesSlice bytesSlice1 = new BytesSlice(bytesSlice0, integer1, integer1);
      // Undeclared exception!
      try { 
        bytesSlice1.readFloat();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2147483647 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(Integer.MAX_VALUE);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.readDouble();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2147483647 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(70);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      bytesSlice0.readerIndex = 40;
      // Undeclared exception!
      try { 
        bytesSlice0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 40 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-1257));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bytesSlice0.readBytes(byteArray0, (-1257), (-1257));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(-1257) < 0 || index(-1257)+length(-1257) > writerIndex(-1257)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(83);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesSlice0.getString(83, (-4083), charset0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Integer integer0 = new Integer(735);
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesSlice0.getString((-1), (-3008), charset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Integer integer0 = new Integer(5);
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getString(5, 5, (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charset is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Integer integer0 = new Integer(735);
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesSlice0.getString((-1), 735, charset0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(734) < 0 || index(734)+length(735) > writerIndex(735)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(68);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getShort(68);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(136) < 0 || index(136)+length(2) > writerIndex(68)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(1631);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getLong((-1001));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 630 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Integer integer0 = new Integer(111);
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getInt((-95));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Bytes bytes0 = Bytes.resizableArray();
      Integer integer0 = new Integer(3572);
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getInt(3572);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(7144) < 0 || index(7144)+length(4) > writerIndex(3572)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(1501);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getFloat(1501);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(3002) < 0 || index(3002)+length(4) > writerIndex(1501)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-36));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getDouble((-36));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(-72) < 0 || index(-72)+length(8) > writerIndex(-36)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Integer integer0 = new Integer(1602);
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getChar((-836));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(3572);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getChar((-78));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3494 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(112);
      Integer integer0 = new Integer(112);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getBytes(112, 112);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(224) < 0 || index(224)+length(112) > writerIndex(112)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Integer integer0 = new Integer(227);
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getBytes(348, (-2418));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 575 > -1843
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(8);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getByte(8);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(16) < 0 || index(16)+length(1) > writerIndex(8)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Bytes bytes0 = Bytes.resizableArray();
      Integer integer0 = new Integer(1057);
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getByte((-772));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 285 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(3572);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.checkWriteBounds(3572, 3572);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(3572) < readerIndex(3572) || index(3572)+length(3572) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(12);
      Integer integer0 = new Integer(12);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.checkReaderBounds(12, 12);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(12) < 0 || index(12)+length(12) > writerIndex(12)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Integer integer0 = new Integer(47);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(47);
      Bytes bytes0 = Bytes.readOnly(byteBuffer0);
      BytesSlice bytesSlice0 = null;
      try {
        bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Integer integer0 = new Integer(1926);
      BytesSlice bytesSlice0 = null;
      try {
        bytesSlice0 = new BytesSlice((Bytes) null, integer0, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      BytesPool bytesPool0 = new BytesPool();
      BytesPool.PooledBytes bytesPool_PooledBytes0 = bytesPool0.acquire();
      bytesPool0.release(bytesPool_PooledBytes0);
      Integer integer0 = new Integer(1);
      BytesSlice bytesSlice0 = null;
      try {
        bytesSlice0 = new BytesSlice(bytesPool_PooledBytes0, integer0, integer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Pooled bytes buffer already released
         //
         verifyException("io.appulse.utils.BytesPool$PooledBytes", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      int int0 = bytesSlice0.writerIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(2490);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.readerIndex(2490);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error: newIndex(2490) < 0 || newIndex(2490) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-31));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.readerIndex((-31));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error: newIndex(-31) < 0 || newIndex(-31) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-1731));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.set2B((-1731), (short) (-1731));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(-3462) < readerIndex(-1731) || index(-3462)+length(2) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      BytesSlice.BytesSliceBuilder bytesSlice_BytesSliceBuilder0 = new BytesSlice.BytesSliceBuilder();
      Integer integer1 = new Integer(8);
      BytesSlice.BytesSliceBuilder bytesSlice_BytesSliceBuilder1 = bytesSlice_BytesSliceBuilder0.to(integer1);
      BytesSlice.BytesSliceBuilder bytesSlice_BytesSliceBuilder2 = bytesSlice_BytesSliceBuilder1.from(integer0);
      BytesSlice.BytesSliceBuilder bytesSlice_BytesSliceBuilder3 = bytesSlice_BytesSliceBuilder2.delegate(bytesSlice0);
      BytesSlice bytesSlice1 = bytesSlice_BytesSliceBuilder3.build();
      assertEquals(0, bytesSlice1.writerIndex());
      
      bytesSlice1.writerIndex(8);
      assertEquals(8, bytesSlice1.writerIndex());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-107));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.writerIndex((-107));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error: newIndex(-107) < readerIndex(0) || newIndex(-107) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(2309);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.readBytes((byte[]) null, 2309, 2309);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // destination is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(851);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bytesSlice0.readBytes(byteArray0, 851, (-114));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(86);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.writeNB((byte[]) null, 86, 14);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      Bytes bytes0 = bytesSlice0.writeNB("KNds2DFk1#PSjM", charset0);
      char char0 = bytes0.getChar(0);
      assertEquals(14, bytesSlice0.writerIndex());
      assertEquals('\u4B4E', char0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-1605));
      BytesSlice bytesSlice0 = null;
      try {
        bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, (Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // to is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      BytesSlice.BytesSliceBuilder bytesSlice_BytesSliceBuilder0 = new BytesSlice.BytesSliceBuilder();
      // Undeclared exception!
      try { 
        bytesSlice_BytesSliceBuilder0.to((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // to is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesSlice$BytesSliceBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      BytesSlice.BytesSliceBuilder bytesSlice_BytesSliceBuilder0 = new BytesSlice.BytesSliceBuilder();
      // Undeclared exception!
      try { 
        bytesSlice_BytesSliceBuilder0.from((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // from is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesSlice$BytesSliceBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(40);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Object object0 = new Object();
      boolean boolean0 = bytesSlice0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      boolean boolean0 = bytesSlice0.equals(bytesSlice0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      BytesSlice.BytesSliceBuilder bytesSlice_BytesSliceBuilder0 = new BytesSlice.BytesSliceBuilder();
      // Undeclared exception!
      try { 
        bytesSlice_BytesSliceBuilder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // from is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(70);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(70) < 0 || index(70)+length(2) > writerIndex(70)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(12);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      byte byte0 = bytesSlice0.getByte((-6));
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-2511));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.readInt();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(-2511) < 0 || index(-2511)+length(4) > writerIndex(-2511)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(2101);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.set4B(2101, 2101);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(4202) < readerIndex(2101) || index(4202)+length(4) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(73);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getDouble((-12));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 61 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.writerIndex(8);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error: newIndex(8) < readerIndex(0) || newIndex(8) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      BytesSlice.BytesSliceBuilder bytesSlice_BytesSliceBuilder0 = BytesSlice.builder();
      String string0 = bytesSlice_BytesSliceBuilder0.toString();
      assertEquals("BytesSlice.BytesSliceBuilder(delegate=null, from=null, to=null)", string0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Bytes bytes0 = Bytes.resizableArray();
      Integer integer0 = new Integer(5);
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.setNB(5, (byte[]) null, 5, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getChar(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(2) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-5423));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.set2B(1023, (short)4527);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -4400 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-1569));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.readByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(-1569) < 0 || index(-1569)+length(1) > writerIndex(-1569)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(3572);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getShort((-2038));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1534 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(3335);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.readDouble();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(3335) < 0 || index(3335)+length(8) > writerIndex(3335)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(13);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getLong(13);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(26) < 0 || index(26)+length(8) > writerIndex(13)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      int int0 = bytesSlice0.readerIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(66);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      BytesSlice bytesSlice1 = new BytesSlice(bytesSlice0, integer0, integer0);
      boolean boolean0 = bytesSlice0.equals(bytesSlice1);
      assertEquals(0, bytesSlice1.writerIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.readFloat();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(4) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(1399);
      Integer integer0 = new Integer(1399);
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.readLong();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(1399) < 0 || index(1399)+length(8) > writerIndex(1399)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(2238);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.capacity(2238);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesSlice wrapper
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(66);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getFloat((-18));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 48 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Integer integer0 = new Integer(2300);
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write2B((short)795);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(3335);
      Integer integer0 = new Integer(3335);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.set1B(3335, (byte) (-10));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(6670) < readerIndex(3335) || index(6670)+length(1) > capacity(3335)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(4113);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getInt((byte) (-57));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4056 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Bytes bytes0 = bytesSlice0.write8B((long) 0);
      bytes0.getChar(0);
      assertEquals(8, bytesSlice0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-26));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write1B((byte)107);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -26 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      String string0 = bytesSlice0.getString(0, 0, charset0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(3335);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getBytes((-1326), 22);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // arraycopy: length -1993 is negative
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      bytesSlice0.write4B(3869);
      assertEquals(4, bytesSlice0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(0);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.readShort();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(2) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }
}
