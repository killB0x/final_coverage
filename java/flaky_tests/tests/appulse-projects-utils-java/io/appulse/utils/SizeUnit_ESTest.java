/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 05:39:12 GMT 2022
 */

package io.appulse.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import io.appulse.utils.SizeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SizeUnit_ESTest extends SizeUnit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.GIGABYTES;
      SizeUnit sizeUnit1 = SizeUnit.PETABYTES;
      long long0 = sizeUnit1.convert(584L, sizeUnit0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.GIGABYTES;
      SizeUnit sizeUnit1 = SizeUnit.TERABYTES;
      long long0 = sizeUnit1.convert((-1181L), sizeUnit0);
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.GIGABYTES;
      long long0 = sizeUnit0.toKilobytes((-1903L));
      assertEquals((-1995440128L), long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.MEGABYTES;
      SizeUnit sizeUnit1 = SizeUnit.PETABYTES;
      long long0 = sizeUnit0.convert(0L, sizeUnit1);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.MEGABYTES;
      long long0 = sizeUnit0.toBytes(0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.KILOBYTES;
      SizeUnit sizeUnit1 = SizeUnit.TERABYTES;
      long long0 = sizeUnit0.convert(132L, sizeUnit1);
      assertEquals(141733920768L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.KILOBYTES;
      long long0 = sizeUnit0.toMegabytes(816L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.BYTES;
      SizeUnit sizeUnit1 = SizeUnit.PETABYTES;
      long long0 = sizeUnit0.convert(0L, sizeUnit1);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.BYTES;
      long long0 = sizeUnit0.toGigabytes(488L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SizeUnit[] sizeUnitArray0 = SizeUnit.values();
      assertEquals(6, sizeUnitArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SizeUnit.valueOf("KILOBYTES");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      long long0 = SizeUnit.scale(0L, 1099511627776L, 0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long long0 = SizeUnit.scale(0L, 0L, (-3161L));
      assertEquals(9223372036854775807L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      long long0 = SizeUnit.scale((-2942L), (-2942L), (-2942L));
      assertEquals((-9223372036854775808L), long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.GIGABYTES;
      SizeUnit sizeUnit1 = SizeUnit.KILOBYTES;
      long long0 = sizeUnit0.convert(614L, sizeUnit1);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.PETABYTES;
      long long0 = sizeUnit0.convert(3146L, sizeUnit0);
      assertEquals(3146L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.PETABYTES;
      long long0 = sizeUnit0.toPetabytes((-77L));
      assertEquals((-77L), long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.PETABYTES;
      long long0 = sizeUnit0.toTerabytes((-2665L));
      assertEquals((-2728960L), long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.PETABYTES;
      long long0 = sizeUnit0.toMegabytes((-2217L));
      assertEquals((-2380485623808L), long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.PETABYTES;
      long long0 = sizeUnit0.toBytes(885L);
      assertEquals(996421417555722240L, long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.PETABYTES;
      long long0 = sizeUnit0.toKilobytes((-1100L));
      assertEquals((-1209462790553600L), long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.PETABYTES;
      long long0 = sizeUnit0.toGigabytes((-3461L));
      assertEquals((-3629121536L), long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.BYTES;
      long long0 = sizeUnit0.toMegabytes((-2676L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.BYTES;
      long long0 = sizeUnit0.toTerabytes((-1L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.BYTES;
      long long0 = sizeUnit0.toPetabytes((-3097L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.BYTES;
      long long0 = sizeUnit0.convert(8796093022207L, sizeUnit0);
      assertEquals(8796093022207L, long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.BYTES;
      long long0 = sizeUnit0.toKilobytes((-24L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.GIGABYTES;
      long long0 = sizeUnit0.toKilobytes(1L);
      assertEquals(1048576L, long0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.GIGABYTES;
      long long0 = sizeUnit0.toTerabytes(1166L);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.GIGABYTES;
      long long0 = sizeUnit0.toBytes(8796093022207L);
      assertEquals(9223372036854775807L, long0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.GIGABYTES;
      long long0 = sizeUnit0.convert((-1481L), sizeUnit0);
      assertEquals((-1481L), long0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.GIGABYTES;
      long long0 = sizeUnit0.toMegabytes((-2680L));
      assertEquals((-2744320L), long0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.TERABYTES;
      long long0 = sizeUnit0.toBytes(0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.TERABYTES;
      long long0 = sizeUnit0.toMegabytes((-9223372036854775808L));
      assertEquals((-9223372036854775808L), long0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.TERABYTES;
      long long0 = sizeUnit0.convert(8796093022207L, sizeUnit0);
      assertEquals(8796093022207L, long0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.TERABYTES;
      long long0 = sizeUnit0.toGigabytes(622L);
      assertEquals(636928L, long0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.TERABYTES;
      long long0 = sizeUnit0.toPetabytes(8796093022207L);
      assertEquals(8589934591L, long0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.KILOBYTES;
      long long0 = sizeUnit0.toPetabytes(125L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.KILOBYTES;
      long long0 = sizeUnit0.toBytes((-27L));
      assertEquals((-27648L), long0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.KILOBYTES;
      long long0 = sizeUnit0.toTerabytes(2297L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.KILOBYTES;
      long long0 = sizeUnit0.toMegabytes(1099511627776L);
      assertEquals(1073741824L, long0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.KILOBYTES;
      long long0 = sizeUnit0.convert(3714L, sizeUnit0);
      assertEquals(3714L, long0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.MEGABYTES;
      long long0 = sizeUnit0.toPetabytes((-1L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.MEGABYTES;
      long long0 = sizeUnit0.toTerabytes((-2234L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.MEGABYTES;
      long long0 = sizeUnit0.toGigabytes((-2397L));
      assertEquals((-2L), long0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.MEGABYTES;
      long long0 = sizeUnit0.toKilobytes((-1387L));
      assertEquals((-1420288L), long0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SizeUnit sizeUnit0 = SizeUnit.MEGABYTES;
      long long0 = sizeUnit0.convert((-2851L), sizeUnit0);
      assertEquals((-2851L), long0);
  }
}
