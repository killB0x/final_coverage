/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 05:03:02 GMT 2022
 */

package io.appulse.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.appulse.utils.BytesUtils;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BytesUtils_ESTest extends BytesUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = BytesUtils.align(byteArray0, (byte)0);
      assertEquals(7, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      double double0 = BytesUtils.readDouble(byteArray0, (short)0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      long long0 = BytesUtils.readUnsignedInteger(byteArray0, (byte)0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        BytesUtils.readInteger(byteArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 3
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      int int0 = BytesUtils.readUnsignedShort(byteArray0, (byte)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        BytesUtils.readUnsignedByte(byteArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      BytesUtils.writeLong(0, byteArray0, 4);
      assertEquals(13, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BytesUtils.writeInteger(2, byteArray0, (byte)0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)2, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BytesUtils.writeFloat(0.0F, byteArray0, 0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      BytesUtils.writeDouble((-1.0), byteArray0, 0);
      assertEquals(13, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BytesUtils.writeCharacter('a', byteArray0, 3);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)97, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      BytesUtils.unsafeWriteLong(476L, byteArray0, 0);
      assertEquals(17, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      BytesUtils.unsafeWriteInteger(0, byteArray0, 3);
      assertEquals(13, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      BytesUtils.unsafeWriteFloat((byte) (-30), byteArray0, 0);
      assertEquals(17, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      BytesUtils.unsafeWriteCharacter('9', byteArray0, (byte)0);
      assertArrayEquals(new byte[] {(byte)0, (byte)57}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      BytesUtils.unsafeWriteByte((byte)59, byteArray0, (byte)0);
      assertArrayEquals(new byte[] {(byte)59, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BytesUtils.writeBytes(byteArray0, byteArray0, (short)0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[][] byteArray0 = new byte[1][2];
      byte[] byteArray1 = BytesUtils.concatenate(byteArray0);
      int int0 = BytesUtils.unsafeReadUnsignedShort(byteArray1, (short)0);
      assertEquals(2, byteArray1.length);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)27;
      int int0 = BytesUtils.unsafeReadUnsignedShort(byteArray0, 0);
      assertEquals(6912, int0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      long long0 = BytesUtils.unsafeReadUnsignedInteger(byteArray0, (byte)0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      byteArray0[1] = (byte) (-30);
      long long0 = BytesUtils.unsafeReadUnsignedInteger(byteArray0, (byte)0);
      assertEquals(14811136L, long0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      short short0 = BytesUtils.unsafeReadUnsignedByte(byteArray0, (short)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)40;
      short short0 = BytesUtils.unsafeReadUnsignedByte(byteArray0, (byte)0);
      assertEquals((short)40, short0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      short short0 = BytesUtils.unsafeReadShort(byteArray0, 4);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((-196.1));
      short short0 = BytesUtils.unsafeReadShort(byteArray0, 6);
      assertArrayEquals(new byte[] {(byte) (-64), (byte)104, (byte) (-125), (byte)51, (byte)51, (byte)51, (byte)51, (byte)51}, byteArray0);
      assertEquals((short)13107, short0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes(613.0);
      short short0 = BytesUtils.unsafeReadShort(byteArray0, 1);
      assertArrayEquals(new byte[] {(byte)64, (byte) (-125), (byte)40, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals((short) (-31960), short0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      long long0 = BytesUtils.unsafeReadLong(byteArray0, 0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BytesUtils.writeByte(2, byteArray0, 0);
      long long0 = BytesUtils.unsafeReadLong(byteArray0, 0);
      assertEquals(144115188075855872L, long0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      int int0 = BytesUtils.unsafeReadInteger(byteArray0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes(553);
      int int0 = BytesUtils.unsafeReadInteger(byteArray0, 0);
      assertEquals(553, int0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte) (-1);
      int int0 = BytesUtils.unsafeReadInteger(byteArray0, 2);
      assertEquals((-16777216), int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      float float0 = BytesUtils.unsafeReadFloat(byteArray0, 0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)2;
      float float0 = BytesUtils.unsafeReadFloat(byteArray0, (byte)3);
      assertEquals(9.403955E-38F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((-1701.97F));
      float float0 = BytesUtils.unsafeReadFloat(byteArray0, 0);
      assertEquals((-1701.97F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((double) 0);
      double double0 = BytesUtils.unsafeReadDouble(byteArray0, 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes(192.890134);
      double double0 = BytesUtils.unsafeReadDouble(byteArray0, (byte)0);
      assertEquals(192.890134, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-120);
      double double0 = BytesUtils.unsafeReadDouble(byteArray0, 0);
      assertEquals((-3.785766995733679E-270), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      char char0 = BytesUtils.unsafeReadCharacter(byteArray0, 1);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-4);
      char char0 = BytesUtils.unsafeReadCharacter(byteArray0, 2);
      assertEquals('\uFC00', char0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)3;
      int int0 = BytesUtils.readUnsignedShort(byteArray0, (byte)3);
      assertEquals(768, int0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      long long0 = BytesUtils.readUnsignedInteger(byteArray0, 9);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      byteArray0[1] = (byte) (-30);
      long long0 = BytesUtils.readUnsignedInteger(byteArray0, (byte)0);
      assertEquals(14811136L, long0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      short short0 = BytesUtils.readUnsignedByte(byteArray0, (byte)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)40;
      short short0 = BytesUtils.readUnsignedByte(byteArray0, (byte)0);
      assertEquals((short)40, short0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      short short0 = BytesUtils.readShort(byteArray0, (byte)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)6;
      short short0 = BytesUtils.readShort(byteArray0, 0);
      assertEquals((short)1536, short0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-99);
      short short0 = BytesUtils.readShort(byteArray0, 3);
      assertEquals((short) (-25344), short0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes(723.42900645784);
      long long0 = BytesUtils.readLong(byteArray0, 0);
      assertEquals(4649574564654748049L, long0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-14);
      long long0 = BytesUtils.readLong(byteArray0, (byte)0);
      assertEquals((-1008806316530991104L), long0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((-1431.284564119482));
      int int0 = BytesUtils.readInteger(byteArray0, 3);
      assertEquals(593807051, int0);
      assertArrayEquals(new byte[] {(byte) (-64), (byte) (-106), (byte)93, (byte)35, (byte)100, (byte) (-58), (byte) (-53), (byte)41}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte) (-99);
      int int0 = BytesUtils.readInteger(byteArray0, 2);
      assertEquals((-1660944384), int0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)56;
      float float0 = BytesUtils.readFloat(byteArray0, (byte)0);
      assertEquals(5.142788E-39F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte) (-56);
      float float0 = BytesUtils.readFloat(byteArray0, 0);
      assertEquals((-131072.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      BytesUtils.writeByte((-1661), byteArray0, 3);
      double double0 = BytesUtils.readDouble(byteArray0, 0);
      assertEquals(2.779814486165E-312, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      byteArray0[0] = (byte) (-102);
      double double0 = BytesUtils.readDouble(byteArray0, 0);
      assertEquals((-1.8827498946116282E-183), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      char char0 = BytesUtils.readCharacter(byteArray0, (short)0);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes('9');
      char char0 = BytesUtils.readCharacter(byteArray0, 0);
      assertEquals(2, byteArray0.length);
      assertEquals('9', char0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-4);
      char char0 = BytesUtils.readCharacter(byteArray0, 0);
      assertEquals('\uFC00', char0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[][] byteArray0 = new byte[0][6];
      byte[] byteArray1 = BytesUtils.concatenate(byteArray0);
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte) (-57);
      int int0 = BytesUtils.asUnsignedShort(byteArray0);
      assertEquals(50944, int0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      int int0 = BytesUtils.asUnsignedShort((short) (byte)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-6);
      BigInteger bigInteger0 = BytesUtils.asUnsignedLong(byteArray0);
      assertEquals((short) (-1536), bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)25;
      BigInteger bigInteger0 = BytesUtils.asUnsignedLong(byteArray0);
      assertEquals((byte)25, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte) (-6);
      BigInteger bigInteger0 = BytesUtils.asUnsignedLong(byteArray0);
      assertEquals((byte) (-6), bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      BigInteger bigInteger0 = BytesUtils.asUnsignedLong(0L);
      assertEquals((byte)0, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      BigInteger bigInteger0 = BytesUtils.asUnsignedLong((-3175L));
      assertEquals((short) (-3175), bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((byte)4);
      long long0 = BytesUtils.asUnsignedInteger(byteArray0);
      assertEquals(4L, long0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((-1431.284564119482));
      long long0 = BytesUtils.asUnsignedInteger(byteArray0);
      assertEquals((-4569362365324801239L), long0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      long long0 = BytesUtils.asUnsignedInteger((int) (byte)0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      short short0 = BytesUtils.asUnsignedByte(byteArray0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)32;
      short short0 = BytesUtils.asUnsignedByte(byteArray0);
      assertEquals((short)8192, short0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      short short0 = BytesUtils.asUnsignedByte((byte)0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((double) (-11));
      short short0 = BytesUtils.asShort(byteArray0);
      assertArrayEquals(new byte[] {(byte) (-64), (byte)38, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte) (-33);
      short short0 = BytesUtils.asShort(byteArray0);
      assertEquals((short) (-8448), short0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-98);
      long long0 = BytesUtils.asLong(byteArray0);
      assertEquals(173722837188608L, long0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      long long0 = BytesUtils.asLong(byteArray0);
      assertEquals((-8286623314361712640L), long0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte)59;
      int int0 = BytesUtils.asInteger(byteArray0);
      assertEquals(15104, int0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((-3743.1F));
      int int0 = BytesUtils.asInteger(byteArray0);
      assertEquals((-982912614), int0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-102);
      float float0 = BytesUtils.asFloat(byteArray0);
      assertEquals(5.5245E-41F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-98);
      float float0 = BytesUtils.asFloat(byteArray0);
      assertEquals((-6.7762636E-21F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte)59;
      double double0 = BytesUtils.asDouble(byteArray0);
      assertEquals(4.890537174E-315, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-88);
      double double0 = BytesUtils.asDouble(byteArray0);
      assertEquals((-5.0758836746312984E-116), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)25;
      char char0 = BytesUtils.asChar(byteArray0);
      assertEquals('\uFF19', char0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte) (-108);
      char char0 = BytesUtils.asChar(byteArray0);
      assertEquals('\u9400', char0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = BytesUtils.align(byteArray0, (-769));
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        BytesUtils.writeShort((-1372), byteArray0, (-1372));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1372 out of bounds for length 7
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        BytesUtils.writeBytes((byte[]) null, byteArray0, (-1797));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.unsafeWriteShort((-2126), (byte[]) null, (-1550));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        BytesUtils.unsafeWriteShort(774, byteArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.unsafeWriteLong(1L, (byte[]) null, (-220));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.unsafeWriteInteger(4201, (byte[]) null, 4201);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        BytesUtils.unsafeWriteDouble(2644, byteArray0, 2644);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2644 out of bounds for length 3
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        BytesUtils.unsafeWriteCharacter('\u0000', byteArray0, (-746));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -746 out of bounds for length 7
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.unsafeWriteBytes((byte[]) null, (byte[]) null, 586);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((byte)16);
      // Undeclared exception!
      try { 
        BytesUtils.unsafeWriteBytes(byteArray0, byteArray0, (byte)16);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 16 out of bounds for length 1
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadUnsignedShort((byte[]) null, 1427);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((double) (short) (-703));
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadUnsignedInteger(byteArray0, (short) (-703));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -703 out of bounds for length 8
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((double) (byte)16);
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadUnsignedByte(byteArray0, (byte)16);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 16 out of bounds for length 8
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((int) (short)12);
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadShort(byteArray0, (short)12);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 12 out of bounds for length 4
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[37];
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadLong(byteArray0, 3700);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3700 out of bounds for length 37
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes(3026);
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadInteger(byteArray0, 3026);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3026 out of bounds for length 4
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes(3);
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadFloat(byteArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 4
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((double) (-11));
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadDouble(byteArray0, (-11));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -11 out of bounds for length 8
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadCharacter(byteArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        BytesUtils.readUnsignedShort(byteArray0, (-428));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -428 out of bounds for length 2
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        BytesUtils.readLong(byteArray0, (-3966));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -3966 out of bounds for length 8
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((int) (short) (-844));
      // Undeclared exception!
      try { 
        BytesUtils.readFloat(byteArray0, (short) (-844));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -844 out of bounds for length 4
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[][] byteArray0 = new byte[1][8];
      byteArray0[0] = null;
      // Undeclared exception!
      try { 
        BytesUtils.concatenate(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte[] byteArray1 = BytesUtils.align(byteArray0, (byte)59);
      assertEquals(59, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((-343L));
      byte[] byteArray1 = BytesUtils.align(byteArray0, 2);
      assertArrayEquals(new byte[] {(byte) (-2), (byte) (-87)}, byteArray1);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-2), (byte) (-87)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = BytesUtils.align(byteArray0, 2);
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BigInteger bigInteger0 = BytesUtils.asUnsignedLong(byteArray0);
      assertEquals((byte)0, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      long long0 = BytesUtils.asLong(byteArray0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((int) (byte)44);
      short short0 = BytesUtils.asShort(byteArray0);
      assertEquals((short)44, short0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)44}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((-1518));
      // Undeclared exception!
      try { 
        BytesUtils.writeCharacter('Q', byteArray0, (-1518));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1518 out of bounds for length 4
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((-1027));
      // Undeclared exception!
      try { 
        BytesUtils.writeDouble((-1027), byteArray0, (-1027));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1027 out of bounds for length 4
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes(1);
      // Undeclared exception!
      try { 
        BytesUtils.writeFloat(1, byteArray0, (-406));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -406 out of bounds for length 4
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((short) (-29));
      // Undeclared exception!
      try { 
        BytesUtils.writeLong((short) (-29), byteArray0, (short) (-29));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -29 out of bounds for length 2
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      // Undeclared exception!
      try { 
        BytesUtils.writeInteger((-2728), byteArray0, (-2728));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2728 out of bounds for length 20
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        BytesUtils.writeByte((-934), byteArray0, (-934));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -934 out of bounds for length 2
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadInteger((byte[]) null, (-2348));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.unsafeWriteCharacter('K', (byte[]) null, 2458);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadShort((byte[]) null, (-604));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadCharacter((byte[]) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        BytesUtils.unsafeWriteLong(1L, byteArray0, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2 out of bounds for length 2
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      BytesUtils.unsafeWriteShort(0, byteArray0, (byte)0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadFloat((byte[]) null, (-3484));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        BytesUtils.unsafeWriteByte(8, byteArray0, (-39));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -39 out of bounds for length 0
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes(192.890134);
      BytesUtils.unsafeWriteDouble(248.445218788604, byteArray0, (byte)0);
      assertArrayEquals(new byte[] {(byte)64, (byte)111, (byte)14, (byte)63, (byte)59, (byte)121, (byte)19, (byte) (-50)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadLong((byte[]) null, (-264));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      int int0 = BytesUtils.asUnsignedShort((short) (-3215));
      assertEquals(62321, int0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadDouble((byte[]) null, (-218));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        BytesUtils.unsafeWriteFloat((-1229.7F), byteArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 3 out of bounds for length 3
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadUnsignedShort(byteArray0, (-3060));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -3060 out of bounds for length 8
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.align((byte[]) null, (-1322));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.concatenate((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // arrays is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.asDouble((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      double double0 = BytesUtils.asDouble(byteArray0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.asFloat((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.asUnsignedLong((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.asLong((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.asUnsignedInteger((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      long long0 = BytesUtils.asUnsignedInteger(byteArray0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.asInteger((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      int int0 = BytesUtils.asInteger(byteArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.asChar((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      char char0 = BytesUtils.asChar(byteArray0);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.asUnsignedShort((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.asShort((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.asUnsignedByte((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((-3743.1F));
      short short0 = BytesUtils.asUnsignedByte(byteArray0);
      assertEquals((short) (-3686), short0);
      assertArrayEquals(new byte[] {(byte) (-59), (byte)105, (byte) (-15), (byte) (-102)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((byte) (-3));
      // Undeclared exception!
      try { 
        BytesUtils.readDouble(byteArray0, (byte) (-3));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't read from an array between -3 and 4 indexes, because actual array's length is 1
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.readDouble((byte[]) null, 2235);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((byte)16);
      // Undeclared exception!
      try { 
        BytesUtils.readFloat(byteArray0, (byte)16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't read from an array between 16 and 23 indexes, because actual array's length is 1
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.readFloat((byte[]) null, 48);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      float float0 = BytesUtils.readFloat(byteArray0, 0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        BytesUtils.readLong(byteArray0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't read from an array between 0 and 7 indexes, because actual array's length is 0
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.readLong((byte[]) null, 1790);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        BytesUtils.readUnsignedInteger(byteArray0, (-4532));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -4532 out of bounds for length 0
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.readUnsignedInteger((byte[]) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((short)3);
      // Undeclared exception!
      try { 
        BytesUtils.readUnsignedInteger(byteArray0, (short)3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't read from an array between 3 and 6 indexes, because actual array's length is 2
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        BytesUtils.readInteger(byteArray0, (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't read from an array between 0 and 3 indexes, because actual array's length is 2
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.readInteger((byte[]) null, 2298);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      int int0 = BytesUtils.readInteger(byteArray0, (byte)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        BytesUtils.readCharacter(byteArray0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't read from an array between 0 and 1 indexes, because actual array's length is 0
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.readCharacter((byte[]) null, 21);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((short)538);
      // Undeclared exception!
      try { 
        BytesUtils.readUnsignedShort(byteArray0, (short)538);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't read from an array between 538 and 539 indexes, because actual array's length is 2
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.readUnsignedShort((byte[]) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        BytesUtils.readShort(byteArray0, 5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't read from an array between 5 and 6 indexes, because actual array's length is 1
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.readShort((byte[]) null, 32);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        BytesUtils.readShort(byteArray0, (-345));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -345 out of bounds for length 8
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.readUnsignedByte((byte[]) null, 62);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((short)387);
      // Undeclared exception!
      try { 
        BytesUtils.readUnsignedByte(byteArray0, (short)387);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't read from an array between 387 and 387 indexes, because actual array's length is 2
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        BytesUtils.writeBytes(byteArray0, byteArray0, 48);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't write to an array from 48 to 51 indexes, because actual array's length is 4
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.writeBytes((byte[]) null, (byte[]) null, 255);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        BytesUtils.writeCharacter('E', byteArray0, 141);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't write to an array from 141 to 142 indexes, because actual array's length is 1
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.writeCharacter('/', (byte[]) null, '/');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes(503);
      // Undeclared exception!
      try { 
        BytesUtils.writeDouble(503, byteArray0, 503);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't write to an array from 503 to 510 indexes, because actual array's length is 4
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.writeDouble(0, (byte[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes(2);
      // Undeclared exception!
      try { 
        BytesUtils.writeFloat(2, byteArray0, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't write to an array from 2 to 5 indexes, because actual array's length is 4
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.writeFloat(7L, (byte[]) null, 3892);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes(316);
      // Undeclared exception!
      try { 
        BytesUtils.writeLong(316, byteArray0, 316);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't write to an array from 316 to 323 indexes, because actual array's length is 4
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.writeLong(0L, (byte[]) null, (-2193));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        BytesUtils.writeInteger(37, byteArray0, 37);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't write to an array from 37 to 40 indexes, because actual array's length is 1
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.writeInteger(32, (byte[]) null, (-975));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      // Undeclared exception!
      try { 
        BytesUtils.writeShort(1185, byteArray0, 1185);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't write to an array from 1185 to 1186 indexes, because actual array's length is 40
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.writeShort(318, (byte[]) null, 318);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        BytesUtils.writeByte(636, byteArray0, 636);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can't write to an array from 636 to 636 indexes, because actual array's length is 8
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.writeByte(16, (byte[]) null, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      BytesUtils.unsafeWriteBytes(byteArray0, byteArray0, 0);
      assertEquals(18, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((-4492));
      // Undeclared exception!
      try { 
        BytesUtils.writeBytes(byteArray0, byteArray0, (-4492));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -4492 out of bounds for length 4
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadUnsignedByte((byte[]) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      float float0 = BytesUtils.asFloat(byteArray0);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        BytesUtils.readCharacter(byteArray0, (-2385));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2385 out of bounds for length 9
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((short)59);
      // Undeclared exception!
      try { 
        BytesUtils.unsafeWriteInteger((short)59, byteArray0, (short)59);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 59 out of bounds for length 2
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      short short0 = BytesUtils.asUnsignedByte((byte)123);
      assertEquals((short)123, short0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      long long0 = BytesUtils.asUnsignedInteger((-6));
      assertEquals(4294967290L, long0);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((byte) (-99));
      // Undeclared exception!
      try { 
        BytesUtils.readDouble(byteArray0, (byte) (-99));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -99 out of bounds for length 1
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      long long0 = BytesUtils.readLong(byteArray0, (byte)0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      BigInteger bigInteger0 = BytesUtils.asUnsignedLong(49L);
      assertEquals((short)49, bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      int int0 = BytesUtils.asUnsignedShort(byteArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      byte[] byteArray0 = BytesUtils.toBytes((-1.0));
      long long0 = BytesUtils.unsafeReadLong(byteArray0, 0);
      assertEquals((-4616189618054758400L), long0);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      BytesUtils.writeShort(0, byteArray0, 0);
      assertEquals(18, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesUtils.unsafeReadUnsignedInteger((byte[]) null, 56);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }
}
