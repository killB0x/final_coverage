/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 05:09:20 GMT 2022
 */

package io.appulse.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.appulse.utils.ResourceUtils;
import java.net.URL;
import java.nio.charset.Charset;
import java.util.List;
import java.util.Optional;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ResourceUtils_ESTest extends ResourceUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      List<URL> list0 = ResourceUtils.getResourceUrls("GY9g=%3>OZ{7&", "[Yu)aA~6utgNnb$~:");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      Charset charset0 = Charset.defaultCharset();
      Optional<String> optional0 = ResourceUtils.getTextContent(uRL0, charset0);
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      // Undeclared exception!
      try { 
        ResourceUtils.getTextContent(uRL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", 0);
      List<URL> list0 = ResourceUtils.getResourceUrls("", pattern0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Optional<String> optional0 = ResourceUtils.getTextContent("vf`", charset0);
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Optional<String> optional0 = ResourceUtils.getTextContent("/", charset0);
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Optional<String> optional0 = ResourceUtils.getTextContent("", charset0);
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        ResourceUtils.getTextContent(uRL0, charset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "Gt8_X3jM*Png@pk");
      URL uRL0 = MockURL.getHttpExample();
      Optional<byte[]> optional0 = ResourceUtils.getBytesContent(uRL0);
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      // Undeclared exception!
      try { 
        ResourceUtils.getBytesContent(uRL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Optional<String> optional0 = ResourceUtils.getResource("name is marked non-null but is null", charset0);
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("volume/projects/appulse-projects-utils-java/target/classes/../../target/classes");
      FileSystemHandling.createFolder(evoSuiteFile0);
      List<URL> list0 = ResourceUtils.getResourceUrls("", "");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtils.getResourceUrls("-N", (Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pattern is marked non-null but is null
         //
         verifyException("io.appulse.utils.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtils.getResourceUrls((String) null, (Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // folder is marked non-null but is null
         //
         verifyException("io.appulse.utils.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtils.getResourceUrls("folder is marked non-null but is null", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // glob is marked non-null but is null
         //
         verifyException("io.appulse.utils.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtils.getResourceUrls((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // folder is marked non-null but is null
         //
         verifyException("io.appulse.utils.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtils.getTextContent((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // url is marked non-null but is null
         //
         verifyException("io.appulse.utils.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Optional<String> optional0 = ResourceUtils.getTextContent("_t");
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtils.getTextContent("CGdCOjIw", (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charset is marked non-null but is null
         //
         verifyException("io.appulse.utils.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        ResourceUtils.getTextContent((String) null, charset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name is marked non-null but is null
         //
         verifyException("io.appulse.utils.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtils.getTextContent((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name is marked non-null but is null
         //
         verifyException("io.appulse.utils.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      // Undeclared exception!
      try { 
        ResourceUtils.getTextContent(uRL0, (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charset is marked non-null but is null
         //
         verifyException("io.appulse.utils.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        ResourceUtils.getTextContent((URL) null, charset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // url is marked non-null but is null
         //
         verifyException("io.appulse.utils.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "(c+eB$(Q");
      URL uRL0 = MockURL.getHttpExample();
      Optional<String> optional0 = ResourceUtils.getTextContent(uRL0);
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtils.getBytesContent((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // url is marked non-null but is null
         //
         verifyException("io.appulse.utils.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtils.getResource("ki:w%5$J'[4", (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charset is marked non-null but is null
         //
         verifyException("io.appulse.utils.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        ResourceUtils.getResource((String) null, charset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name is marked non-null but is null
         //
         verifyException("io.appulse.utils.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        ResourceUtils.getResource((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name is marked non-null but is null
         //
         verifyException("io.appulse.utils.ResourceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Optional<String> optional0 = ResourceUtils.getResource("");
      assertNotNull(optional0);
  }
}
