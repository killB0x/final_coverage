/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 05:13:47 GMT 2022
 */

package io.appulse.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.appulse.utils.Bytes;
import io.appulse.utils.BytesByteBuffer;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BytesByteBuffer_ESTest extends BytesByteBuffer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2026);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.write4B((short) (-1188));
      bytesByteBuffer0.readString(0);
      assertEquals(4, bytesByteBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      Bytes bytes0 = bytesByteBuffer0.reset();
      assertEquals(0, bytes0.readerIndex());
      assertEquals(0, bytes0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      byteBuffer0.put((byte)8);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      String string0 = bytesByteBuffer0.getString(0, 0, charset0);
      assertArrayEquals(new byte[] {(byte)8, (byte)0}, byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.write1B(0);
      bytesByteBuffer0.readBytes(1);
      assertEquals(1, bytesByteBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(250);
      Charset charset0 = Charset.defaultCharset();
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      charset0.decode(byteBuffer0);
      bytesByteBuffer0.writeNB("[{;dGY-", charset0);
      assertFalse(byteBuffer0.hasRemaining());
      assertEquals(7, bytesByteBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(16);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.write2B((-1420));
      bytesByteBuffer0.hashCode();
      assertEquals(2, bytesByteBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.capacity(1298);
      assertEquals(0, bytesByteBuffer0.readerIndex());
      assertEquals(0, bytesByteBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      bytesByteBuffer0.write8B((-3299.5F));
      int int0 = bytesByteBuffer0.writerIndex();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2371);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      byte[] byteArray0 = new byte[9];
      Bytes bytes0 = bytesByteBuffer0.writeNB(byteArray0, (int) (byte)0, (int) (byte)0);
      assertEquals(0, bytes0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.write1B((byte)79);
      assertEquals(1, bytesByteBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      Bytes bytes0 = bytesByteBuffer0.set8B(0, (long) 0);
      assertEquals(0, bytes0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2371);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      Bytes bytes0 = bytesByteBuffer0.set4B(0, 59);
      assertEquals(0, bytes0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2371);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      Bytes bytes0 = bytesByteBuffer0.set2B(1744, (short)5);
      assertSame(bytes0, bytesByteBuffer0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2371);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      Bytes bytes0 = bytesByteBuffer0.set1B(59, (byte)0);
      assertEquals(0, bytes0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      Bytes bytes0 = bytesByteBuffer0.readerIndex(0);
      assertEquals(0, bytes0.writerIndex());
      assertEquals(0, bytes0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1072);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      int int0 = bytesByteBuffer0.readerIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(16);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      bytesByteBuffer0.write8B(16);
      short short0 = bytesByteBuffer0.readShort();
      assertEquals(2, bytesByteBuffer0.readerIndex());
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(16);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.write2B(16);
      short short0 = bytesByteBuffer0.readShort();
      assertEquals(2, bytesByteBuffer0.writerIndex());
      assertEquals((short)16, short0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(16);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.write2B((-1420));
      bytesByteBuffer0.readShort();
      bytesByteBuffer0.hashCode();
      assertEquals(2, bytesByteBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      bytesByteBuffer0.write8B(0);
      bytesByteBuffer0.readLong();
      assertEquals(8, bytesByteBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2371);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.write8B(1.0);
      long long0 = bytesByteBuffer0.readLong();
      assertEquals(8, bytesByteBuffer0.writerIndex());
      assertEquals(4607182418800017408L, long0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2371);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.write8B((-24.561491303592394));
      long long0 = bytesByteBuffer0.readLong();
      assertEquals(8, bytesByteBuffer0.writerIndex());
      assertEquals((-4595765373979989263L), long0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      bytesByteBuffer0.write4B(0);
      int int0 = bytesByteBuffer0.readInt();
      assertEquals(4, bytesByteBuffer0.readerIndex());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(8);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      bytesByteBuffer0.write8B((-2467.71F));
      int int0 = bytesByteBuffer0.readInt();
      assertEquals(8, bytesByteBuffer0.writerIndex());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      bytesByteBuffer0.write8B((long) (byte)0);
      float float0 = bytesByteBuffer0.readFloat();
      assertEquals(4, bytesByteBuffer0.readerIndex());
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(59);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      bytesByteBuffer0.write4B(59);
      float float0 = bytesByteBuffer0.readFloat();
      assertEquals(4, bytesByteBuffer0.writerIndex());
      assertEquals(8.3E-44F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.write8B((byte)5);
      double double0 = bytesByteBuffer0.readDouble();
      assertEquals(8, bytesByteBuffer0.writerIndex());
      assertEquals(2.5E-323, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(5157);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      bytesByteBuffer0.write8B((-460L));
      char char0 = bytesByteBuffer0.readChar();
      assertEquals(2, bytesByteBuffer0.readerIndex());
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2371);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.write8B(1.0);
      char char0 = bytesByteBuffer0.readChar();
      assertEquals(8, bytesByteBuffer0.writerIndex());
      assertEquals('\u3FF0', char0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(255);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      bytesByteBuffer0.write8B(0.0F);
      byte byte0 = bytesByteBuffer0.readByte();
      assertEquals(8, bytesByteBuffer0.writerIndex());
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2371);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      Bytes bytes0 = bytesByteBuffer0.write8B(1.0);
      byte byte0 = bytes0.readByte();
      assertEquals(8, bytesByteBuffer0.writerIndex());
      assertEquals((byte)63, byte0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.write1B((-1915L));
      byte byte0 = bytesByteBuffer0.readByte();
      assertEquals(1, bytesByteBuffer0.writerIndex());
      assertEquals((byte) (-123), byte0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate((byte)11);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.write4B(5);
      short short0 = bytesByteBuffer0.getShort((byte)0);
      assertEquals(4, bytesByteBuffer0.writerIndex());
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2941);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.write2B((byte)15);
      short short0 = bytesByteBuffer0.getShort((byte)0);
      assertEquals(2, bytesByteBuffer0.writerIndex());
      assertEquals((short)15, short0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      BytesByteBuffer bytesByteBuffer1 = BytesByteBuffer.copy(byteBuffer0);
      bytesByteBuffer0.write4B(5);
      bytesByteBuffer1.write4B((-1629));
      short short0 = bytesByteBuffer0.getShort((byte)0);
      assertEquals(4, bytesByteBuffer0.writerIndex());
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2371);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.write8B(1.0);
      float float0 = bytesByteBuffer0.getFloat((byte)0);
      assertEquals(8, bytesByteBuffer0.writerIndex());
      assertEquals(1.875F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(255);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      bytesByteBuffer0.write8B(0.0F);
      bytesByteBuffer0.getChar(2);
      assertEquals(8, bytesByteBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(40);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      bytesByteBuffer0.write2B((short) (-1559));
      char char0 = bytesByteBuffer0.getChar(0);
      assertEquals(2, bytesByteBuffer0.writerIndex());
      assertEquals('\uF9E9', char0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      byte[] byteArray1 = bytesByteBuffer0.getBytes(0, 0);
      assertEquals(0, byteArray1.length);
      assertEquals(0, bytesByteBuffer0.writerIndex());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=17 cap=17]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      int int0 = bytesByteBuffer0.capacity();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2371);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      int int0 = bytesByteBuffer0.capacity();
      assertEquals(2371, int0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2371);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      boolean boolean0 = bytesByteBuffer0.canEqual(bytesByteBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(11);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      Object object0 = new Object();
      boolean boolean0 = bytesByteBuffer0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2035);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      byte[] byteArray0 = bytesByteBuffer0.array();
      assertEquals(2035, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      byte[] byteArray0 = bytesByteBuffer0.array();
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.writeNB(byteArray0, (-43), (-43));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.write8B((long) 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(8) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(59);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      byteBuffer0.flip();
      // Undeclared exception!
      try { 
        bytesByteBuffer0.write4B(59);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.write4B(360);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(4) > capacity(2)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(48);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      byteBuffer0.flip();
      // Undeclared exception!
      try { 
        bytesByteBuffer0.write2B((short) (-1013));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.write2B((short) (-622));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(2) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.write1B((byte)25);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(1) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      byte[] byteArray0 = bytesByteBuffer0.readBytes();
      // Undeclared exception!
      try { 
        bytesByteBuffer0.setNB(0, byteArray0, 9, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.setNB((-155), byteArray0, (-155), (-155));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newPosition < 0: (-155 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2727);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.set4B(Integer.MAX_VALUE, 2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.set2B(Integer.MAX_VALUE, (short)471);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.readBytes(byteArray0, (-297), (-297));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.readBytes(byteArray0, (int) (byte)110, (int) (byte)110);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(110) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(4);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getString(877, (-1675), charset0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1675
         //
         verifyException("io.appulse.utils.BytesByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getString(2, 2, charset0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(2) < 0 || index(2)+length(2) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getShort(Integer.MAX_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1134);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getLong(1134);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(1134) < 0 || index(1134)+length(8) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getInt(Integer.MAX_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getChar(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(2) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(97);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getBytes(97, (-741));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -741
         //
         verifyException("io.appulse.utils.BytesByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(4);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getBytes(99, 99);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(99) < 0 || index(99)+length(99) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getByte(Integer.MAX_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 2147483647
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.capacity(1695);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.capacity((int) (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newPosition < 0: (-1 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      byte[] byteArray0 = bytesByteBuffer0.readBytes();
      Bytes bytes0 = bytesByteBuffer0.setNB(0, byteArray0, 0, 0);
      assertEquals(0, bytesByteBuffer0.readerIndex());
      assertEquals(0, bytes0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getInt(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(1) < 0 || index(1)+length(4) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(8);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.set1B(8, (byte) (-27));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(8) < readerIndex(0) || index(8)+length(1) > capacity(8)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getByte(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(1) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(4);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      int int0 = bytesByteBuffer0.writerIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(685);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getShort(685);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(685) < 0 || index(685)+length(2) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(43);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.set8B(43, (long) 43);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(43) < readerIndex(0) || index(43)+length(8) > capacity(43)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(29);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.set4B(29, 29);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(29) < readerIndex(0) || index(29)+length(4) > capacity(29)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(28);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.set2B(28, (short)6);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(28) < readerIndex(0) || index(28)+length(2) > capacity(28)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(43);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getFloat(43);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(43) < 0 || index(43)+length(4) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getLong(Integer.MAX_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(16);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.readerIndex(16);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(498);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.readerIndex((-1712));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(14);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.writerIndex(4352);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(8);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      bytesByteBuffer0.writerIndex(8);
      assertEquals(8, bytesByteBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(3223);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.writerIndex((-2382));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      bytesByteBuffer0.capacity(0);
      assertEquals(0, bytesByteBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.capacity((-316));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -316
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getString(0, 43, (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charset is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(44);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.readBytes((byte[]) null, (-1), 1476);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // destination is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      Bytes bytes0 = bytesByteBuffer0.readBytes(byteArray0, 0, 0);
      assertEquals(0, bytes0.writerIndex());
      assertEquals(0, bytes0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(59);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.setNB(59, (byte[]) null, 59, 59);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(48);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.writeNB((byte[]) null, 48, 48);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(16);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      bytesByteBuffer0.writeNB("4,uIUa[!1.pz");
      int int0 = bytesByteBuffer0.readInt();
      assertEquals(13, bytesByteBuffer0.writerIndex());
      assertEquals(875328841, int0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      BytesByteBuffer bytesByteBuffer0 = null;
      try {
        bytesByteBuffer0 = new BytesByteBuffer((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // buffer is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesByteBuffer.copy((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // buffer is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(4);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      boolean boolean0 = bytesByteBuffer0.equals(byteBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      boolean boolean0 = bytesByteBuffer0.equals(bytesByteBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(5157);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(2) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      boolean boolean0 = bytesByteBuffer0.isAutoResizable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.readDouble();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(8) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getChar(Integer.MAX_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.getDouble(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(8) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(16);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.readShort();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(2) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(8);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.readInt();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(4) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      Bytes bytes0 = bytesByteBuffer0.write1B(0);
      bytes0.getBytes(0, 1);
      assertEquals(1, bytesByteBuffer0.writerIndex());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=29 cap=29]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      bytesByteBuffer0.write8B(0);
      Bytes bytes0 = bytesByteBuffer0.set1B(1, (long) 1);
      double double0 = bytes0.getDouble(0);
      assertEquals(8, bytesByteBuffer0.writerIndex());
      assertEquals(1.390671161567E-309, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.readLong();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(8) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.array();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.readByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(1) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(59);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.readFloat();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(4) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      BytesByteBuffer bytesByteBuffer1 = BytesByteBuffer.copy(byteBuffer0);
      boolean boolean0 = bytesByteBuffer0.equals(bytesByteBuffer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      Bytes bytes0 = bytesByteBuffer0.write4B('u');
      int int0 = bytes0.getInt(0);
      assertEquals(4, bytesByteBuffer0.writerIndex());
      assertEquals(117, int0);
  }
}
