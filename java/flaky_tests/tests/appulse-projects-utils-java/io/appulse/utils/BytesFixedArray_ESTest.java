/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 05:20:00 GMT 2022
 */

package io.appulse.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.appulse.utils.Bytes;
import io.appulse.utils.BytesExtendableArray;
import io.appulse.utils.BytesFixedArray;
import io.appulse.utils.BytesPool;
import io.appulse.utils.BytesSlice;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BytesFixedArray_ESTest extends BytesFixedArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      bytesFixedArray0.reset();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.capacity(3);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      bytesFixedArray0.readBytes(7);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write2B((byte)59);
      bytesExtendableArray0.write2B((short)2144);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write2B((byte)59);
      bytesExtendableArray0.write1B((byte) (-1));
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write2B((byte)59);
      Bytes bytes0 = bytesExtendableArray0.set2B(1958, (short) (byte)59);
      byte[] byteArray0 = bytesExtendableArray0.array();
      bytes0.writeNB(byteArray0, (int) (byte)0, 564);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write8B((long) 0);
      bytesExtendableArray0.readLong();
      bytesExtendableArray0.hashCode();
      assertEquals(8, bytesExtendableArray0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write2B((byte)59);
      bytesExtendableArray0.hashCode();
      assertEquals(2, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      assertEquals(0, bytesExtendableArray0.capacity());
      
      bytesExtendableArray0.writerIndex(0);
      assertEquals(0, bytesExtendableArray0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      int int0 = bytesFixedArray0.writerIndex();
      assertEquals(0, bytesFixedArray0.readerIndex());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      int int0 = bytesFixedArray0.writerIndex();
      assertEquals(3, int0);
      assertEquals(0, bytesFixedArray0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      Bytes bytes0 = bytesFixedArray0.setNB(4, byteArray0, 4, 4);
      assertEquals(0, bytes0.readerIndex());
      assertEquals(20, bytes0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.set8B(2, 195L);
      assertEquals(16, bytes0.capacity());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.set4B(2, 2);
      assertEquals(16, bytes0.capacity());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set1B(438, (byte)23);
      assertEquals(439, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.set2B(1958, (short) (byte)59);
      byte[] byteArray0 = bytesExtendableArray0.array();
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      bytesFixedArray0.readerIndex(1958);
      assertEquals(1960, bytesExtendableArray0.capacity());
      assertEquals(0, bytesExtendableArray0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      int int0 = bytesFixedArray0.readerIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      bytesFixedArray0.readShort();
      int int0 = bytesFixedArray0.readerIndex();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)123;
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      short short0 = bytesFixedArray0.readShort();
      assertEquals(2, bytesFixedArray0.readerIndex());
      assertEquals((short)31488, short0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-76);
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      short short0 = bytesFixedArray0.readShort();
      assertEquals(2, bytesFixedArray0.readerIndex());
      assertEquals((short) (-19456), short0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write2B((byte)59);
      bytesExtendableArray0.write8B((long) 0);
      long long0 = bytesExtendableArray0.readLong();
      assertEquals(8, bytesExtendableArray0.readerIndex());
      assertEquals(16607023625928704L, long0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-7);
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      long long0 = bytesFixedArray0.readLong();
      assertEquals(8, bytesFixedArray0.readerIndex());
      assertEquals((-504403158265495552L), long0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      int int0 = bytesFixedArray0.readInt();
      assertEquals(4, bytesFixedArray0.readerIndex());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.write4B((byte)8);
      int int0 = bytesExtendableArray0.readInt();
      assertEquals(4, bytesExtendableArray0.readerIndex());
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-120);
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      int int0 = bytesFixedArray0.readInt();
      assertEquals(4, bytesFixedArray0.readerIndex());
      assertEquals((-2013265920), int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte)97;
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      float float0 = bytesFixedArray0.readFloat();
      assertEquals(4, bytesFixedArray0.readerIndex());
      assertEquals(1.36E-43F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-101);
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      float float0 = bytesFixedArray0.readFloat();
      assertEquals(4, bytesFixedArray0.readerIndex());
      assertEquals((-1.0587912E-22F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write2B((byte)59);
      bytesExtendableArray0.write8B((long) 0);
      double double0 = bytesExtendableArray0.readDouble();
      assertEquals(8, bytesExtendableArray0.readerIndex());
      assertEquals(1.501924854492361E-307, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-116);
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      double double0 = bytesFixedArray0.readDouble();
      assertEquals(8, bytesFixedArray0.readerIndex());
      assertEquals((-6.983507489299546E-251), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.write8B('C');
      char char0 = bytesExtendableArray0.readChar();
      assertEquals(8, bytesExtendableArray0.writerIndex());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)16;
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      char char0 = bytesFixedArray0.readChar();
      assertEquals(2, bytesFixedArray0.readerIndex());
      assertEquals('\uFF10', char0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-87);
      byteArray0[1] = (byte) (-87);
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      char char0 = bytesFixedArray0.readChar();
      assertEquals(2, bytesFixedArray0.readerIndex());
      assertEquals('\uA9A9', char0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      Bytes bytes0 = bytesFixedArray0.readBytes(byteArray0, 4, 0);
      assertEquals(8, bytes0.writerIndex());
      assertEquals(0, bytes0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write2B((byte)59);
      byte byte0 = bytesExtendableArray0.readByte();
      assertEquals(1, bytesExtendableArray0.readerIndex());
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)5;
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      byte byte0 = bytesFixedArray0.readByte();
      assertEquals(1, bytesFixedArray0.readerIndex());
      assertEquals((byte)5, byte0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.write1B(1805.57119044979);
      byte byte0 = bytesExtendableArray0.readByte();
      assertEquals(1, bytesExtendableArray0.writerIndex());
      assertEquals((byte) (-117), byte0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.isAutoResizable();
      assertEquals(0, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      String string0 = bytesFixedArray0.getString(1, 1, charset0);
      assertEquals(0, bytesFixedArray0.readerIndex());
      assertEquals(4, bytesFixedArray0.writerIndex());
      assertEquals("\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      String string0 = bytesFixedArray0.getString(2, 0, charset0);
      assertEquals(6, bytesFixedArray0.writerIndex());
      assertEquals(0, bytesFixedArray0.readerIndex());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      bytesFixedArray0.getShort(5);
      assertEquals(20, bytesFixedArray0.writerIndex());
      assertEquals(0, bytesFixedArray0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)42;
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      short short0 = bytesFixedArray0.getShort(1);
      assertEquals(0, bytesFixedArray0.readerIndex());
      assertEquals(4, bytesFixedArray0.writerIndex());
      assertEquals((short)10752, short0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-90);
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      short short0 = bytesFixedArray0.getShort((byte)4);
      assertEquals((short) (-23040), short0);
      assertEquals(9, bytesFixedArray0.writerIndex());
      assertEquals(0, bytesFixedArray0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      bytesFixedArray0.getLong((short)0);
      assertEquals(8, bytesFixedArray0.writerIndex());
      assertEquals(0, bytesFixedArray0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.write8B('C');
      long long0 = bytesExtendableArray0.getLong(0);
      assertEquals(8, bytesExtendableArray0.writerIndex());
      assertEquals(67L, long0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      bytesFixedArray0.getInt(4);
      assertEquals(0, bytesFixedArray0.readerIndex());
      assertEquals(20, bytesFixedArray0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(1);
      bytesExtendableArray0.write8B(831L);
      bytesExtendableArray0.set2B(1, (long) 1);
      int int0 = bytesExtendableArray0.getInt(1);
      assertEquals(8, bytesExtendableArray0.capacity());
      assertEquals(65536, int0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write8B((short) (-1081));
      int int0 = bytesExtendableArray0.getInt(3);
      assertEquals(8, bytesExtendableArray0.writerIndex());
      assertEquals((-5), int0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write4B((long) 0);
      float float0 = bytesExtendableArray0.getFloat(0);
      assertEquals(4, bytesExtendableArray0.capacity());
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write2B((byte)59);
      Bytes bytes0 = bytesExtendableArray0.write4B((long) 0);
      float float0 = bytes0.getFloat(0);
      assertEquals(6, bytesExtendableArray0.writerIndex());
      assertEquals(5.418294E-39F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      bytesFixedArray0.set1B(0, (-4188));
      float float0 = bytesFixedArray0.getFloat(0);
      assertArrayEquals(new byte[] {(byte) (-92), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals((-2.7755576E-17F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      bytesFixedArray0.getDouble((short)0);
      assertEquals(0, bytesFixedArray0.readerIndex());
      assertEquals(8, bytesFixedArray0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.set4B((int) (byte)59, (-1315.1556F));
      bytesExtendableArray0.set1B((int) (byte)59, 0L);
      bytesExtendableArray0.set2B(1958, (short) (byte)59);
      byte[] byteArray0 = bytesExtendableArray0.array();
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      double double0 = bytesFixedArray0.getDouble((byte)59);
      assertEquals(1960, bytesExtendableArray0.capacity());
      assertEquals(1.4521333945990374E-305, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.set4B((int) (byte)61, (-1315.1556F));
      bytesExtendableArray0.set2B(1958, (short) (byte)61);
      byte[] byteArray0 = bytesExtendableArray0.array();
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      double double0 = bytesFixedArray0.getDouble((byte)61);
      assertEquals(1960, bytesExtendableArray0.capacity());
      assertEquals((-4.815504526043369E22), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.write4B((long) 0);
      char char0 = bytesExtendableArray0.getChar(2);
      assertEquals(4, bytesExtendableArray0.capacity());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)77;
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      char char0 = bytesFixedArray0.getChar(2);
      assertEquals('\u4D00', char0);
      assertEquals(0, bytesFixedArray0.readerIndex());
      assertEquals(4, bytesFixedArray0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      byte[] byteArray1 = bytesFixedArray0.getBytes(5, 8);
      assertEquals(0, bytesFixedArray0.readerIndex());
      assertEquals(8, byteArray1.length);
      assertEquals(20, bytesFixedArray0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      byte[] byteArray0 = bytesExtendableArray0.getBytes(0, 0);
      assertEquals(0, bytesExtendableArray0.writerIndex());
      assertEquals(0, byteArray0.length);
      assertEquals(16, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)3;
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      byte byte0 = bytesFixedArray0.getByte((byte)0);
      assertEquals(8, bytesFixedArray0.writerIndex());
      assertEquals(0, bytesFixedArray0.readerIndex());
      assertEquals((byte)3, byte0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-24);
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      byte byte0 = bytesFixedArray0.getByte(0);
      assertEquals((byte) (-24), byte0);
      assertEquals(0, bytesFixedArray0.readerIndex());
      assertEquals(5, bytesFixedArray0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(9);
      Integer integer0 = new Integer(258);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      bytesSlice0.capacity();
      assertEquals(9, bytesExtendableArray0.capacity());
      assertEquals(0, bytesSlice0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.set8B(0, (byte)59);
      int int0 = bytesExtendableArray0.capacity();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Bytes bytes0 = Bytes.resizableArray();
      Integer integer0 = new Integer((-76));
      Integer integer1 = new Integer((-209));
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer1);
      bytesSlice0.capacity();
      assertEquals((-133), bytesSlice0.writerIndex());
      assertEquals(16, bytes0.capacity());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      boolean boolean0 = bytesFixedArray0.canEqual(bytesFixedArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Integer integer0 = new Integer(634);
      byte[] byteArray0 = new byte[6];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      bytesFixedArray0.canEqual(integer0);
      assertEquals(6, bytesFixedArray0.writerIndex());
      assertEquals(0, bytesFixedArray0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      byte[] byteArray0 = bytesFixedArray0.array();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      bytesFixedArray0.array();
      assertEquals(0, bytesFixedArray0.writerIndex());
      assertEquals(0, bytesFixedArray0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.writerIndex(2147483639);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.writeNB(byteArray0, (-1362), 2147483639);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.writeNB(byteArray0, (-580), (-580));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.writeNB(byteArray0, (-5594), (-5594));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write8B((-1413L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      BytesPool bytesPool0 = new BytesPool();
      BytesPool.PooledBytes bytesPool_PooledBytes0 = bytesPool0.acquire((-576));
      Integer integer0 = Integer.getInteger((String) null, (-576));
      BytesSlice bytesSlice0 = new BytesSlice(bytesPool_PooledBytes0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write8B((-1L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -576 out of bounds for length 8192
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write4B(2427);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write4B(Integer.MAX_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(4) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.writerIndex = (-1660);
      // Undeclared exception!
      try { 
        bytesExtendableArray0.write4B((-1595));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1660 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write2B((short) (-1291));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(1) < readerIndex(0) || index(1)+length(2) > capacity(1)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.capacity(0);
      // Undeclared exception!
      try { 
        bytesExtendableArray0.write2B((short)2144);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 1
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write1B((byte)15);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      bytesFixedArray0.capacity(0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write1B((byte)1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 0
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      bytesExtendableArray0.setNB(1, byteArray0, 3048, 2147483639);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bytesFixedArray0.setNB(16, byteArray0, 16, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.setNB((-3047), byteArray0, (-3047), (-3047));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(-3047) < readerIndex(0) || index(-3047)+length(-3047) > capacity(2)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set8B(2147483639, (long) 2147483639);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set8B(830, (long) 830);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(44);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set8B(44, (long) 44);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(44) < readerIndex(0) || index(44)+length(8) > capacity(44)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set4B(2147483639, 2511);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set4B((-2788), (-2788));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(17);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set4B(17, 17);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(17) < readerIndex(0) || index(17)+length(4) > capacity(17)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set2B(2147483639, (short) (-2135));
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set2B((-621), (short) (-1969));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(1673);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set2B(1673, (short) (-2187));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(1673) < readerIndex(0) || index(1673)+length(2) > capacity(1673)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set1B(2147483617, (byte)84);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set1B(Integer.MAX_VALUE, (byte)84);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set1B(0, (byte)100);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(1) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.readLong();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(8) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readFloat();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(4) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readDouble();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(8) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bytesFixedArray0.readBytes(byteArray0, (-1069), (-1069));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.readBytes(byteArray0, 187, 187);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(187) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getString(3572, (-4125), charset0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesFixedArray0.getString(2147483639, 2147483639, charset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.getShort(Integer.MAX_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getShort(Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2147483647 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.getLong(Integer.MAX_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.getLong(Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2147483647 out of bounds for length 14
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.getInt(Integer.MAX_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getInt(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(4) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(65535);
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getFloat(Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2147483647 out of bounds for length 65535
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      bytesFixedArray0.writerIndex = 430;
      // Undeclared exception!
      try { 
        bytesFixedArray0.getDouble(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.getDouble(Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2147483647 out of bounds for length 4
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.getChar(Integer.MAX_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getChar(Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2147483647 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      bytesFixedArray0.getBytes(Integer.MAX_VALUE, Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.getBytes(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(123);
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getBytes((-403), 123);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(-403) < 0 || index(-403)+length(123) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.getBytes(0, (-208));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 > -208
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      bytesFixedArray0.writerIndex = 845;
      // Undeclared exception!
      try { 
        bytesFixedArray0.getByte(50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getByte(2891);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(2891) < 0 || index(2891)+length(1) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(3694);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getByte((-1225));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2469 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(1017);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.capacity(1017);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesSlice wrapper
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.capacity(1791);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.capacity((-2525));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2525
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.capacity();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = null;
      try {
        bytesFixedArray0 = new BytesFixedArray((-2719));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2719
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bytesExtendableArray0.setNB(184, byteArray0, 184, 184);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.getShort(2427);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(2427) < 0 || index(2427)+length(2) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.getChar(3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(3) < 0 || index(3)+length(2) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set4B((-1), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set8B((-894), (long) (-894));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -894 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set2B((-3982), (short) (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -3982 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getLong(2608);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(2608) < 0 || index(2608)+length(8) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set1B((-4478), (byte) (-9));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -4478 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      bytesFixedArray0.getByte((byte)0);
      assertEquals(8, bytesFixedArray0.writerIndex());
      assertEquals(0, bytesFixedArray0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readerIndex(4);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error: newIndex(4) < 0 || newIndex(4) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readerIndex((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error: newIndex(-1) < 0 || newIndex(-1) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.writerIndex(3665);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error: newIndex(3665) < readerIndex(0) || newIndex(3665) > capacity(1)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.writerIndex((-360));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray((byte)119);
      bytesExtendableArray0.capacity((int) (byte)119);
      assertEquals(119, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      bytesFixedArray0.capacity(Integer.MAX_VALUE);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.getString(989, 989, (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charset is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(1);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getString(1, 1, charset0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(1) < 0 || index(1)+length(1) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.readBytes((byte[]) null, (-3207), (-3207));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // destination is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.readBytes(byteArray0, (-2079), (-2079));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.setNB(3, (byte[]) null, 3, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.writeNB((byte[]) null, (-365), (-365));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.writeNB(byteArray0, 3, 3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(20) < readerIndex(0) || index(20)+length(3) > capacity(20)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = null;
      try {
        bytesFixedArray0 = new BytesFixedArray((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      // Undeclared exception!
      try { 
        BytesFixedArray.copy((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      Object object0 = new Object();
      boolean boolean0 = bytesFixedArray0.equals(object0);
      assertFalse(boolean0);
      assertEquals(0, bytesFixedArray0.readerIndex());
      assertEquals(0, bytesFixedArray0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      boolean boolean0 = bytesFixedArray0.equals(bytesFixedArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      Integer integer0 = new Integer((-250));
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      boolean boolean0 = bytesFixedArray0.equals(bytesSlice0);
      assertFalse(boolean0);
      assertEquals(0, bytesSlice0.readerIndex());
      assertEquals(0, bytesFixedArray0.readerIndex());
      assertEquals(8, bytesFixedArray0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readInt();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(4) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      byte[] byteArray0 = new byte[7];
      BytesFixedArray bytesFixedArray1 = new BytesFixedArray(byteArray0);
      boolean boolean0 = bytesFixedArray1.equals(bytesFixedArray0);
      assertFalse(boolean0);
      assertEquals(7, bytesFixedArray1.writerIndex());
      assertEquals(0, bytesFixedArray1.readerIndex());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(2) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      assertEquals(0, bytesFixedArray0.readerIndex());
      
      double double0 = bytesFixedArray0.readDouble();
      assertEquals(8, bytesFixedArray0.readerIndex());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.getInt(Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2147483647 out of bounds for length 14
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      boolean boolean0 = bytesFixedArray0.isAutoResizable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      float float0 = bytesFixedArray0.readFloat();
      assertEquals(4, bytesFixedArray0.readerIndex());
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readShort();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(2) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getFloat(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(4) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getDouble(59);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(59) < 0 || index(59)+length(8) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write2B((short) (-1432));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write8B(729L);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(9) < readerIndex(0) || index(9)+length(8) > capacity(9)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(1) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write1B((byte)1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(25) < readerIndex(0) || index(25)+length(1) > capacity(25)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.getBytes(2147483639, 1795);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // arraycopy: length -2147483637 is negative
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.write4B((-1595));
      assertEquals(4, bytesExtendableArray0.writerIndex());
  }
}
