/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 05:22:10 GMT 2022
 */

package io.appulse.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.appulse.utils.Bytes;
import io.appulse.utils.BytesByteBuffer;
import io.appulse.utils.BytesExtendableArray;
import io.appulse.utils.BytesFixedArray;
import io.appulse.utils.BytesPool;
import io.appulse.utils.BytesReadOnly;
import io.appulse.utils.BytesSlice;
import io.appulse.utils.BytesSliceBuilder;
import java.math.BigInteger;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.util.function.Function;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BytesAbstract_ESTest extends BytesAbstract_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      Bytes bytes0 = bytesFixedArray0.writeNB("");
      assertEquals(0, bytes0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(402);
      boolean boolean0 = bytesExtendableArray0.isWritable(402);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.writeNB("Writer index error. i\"dex(%d) <readerIndex(%d)|| in ex(%d)+length(%d'  capacity(%d)");
      byte[] byteArray0 = new byte[7];
      bytesExtendableArray0.buffer = byteArray0;
      boolean boolean0 = bytes0.isWritable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      boolean boolean0 = bytesFixedArray0.isReadable(0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.readerIndex = 44;
      boolean boolean0 = bytesExtendableArray0.isReadable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.checkWriteBounds(5, 5);
      assertEquals(0, bytesExtendableArray0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      bytesFixedArray0.checkReaderBounds(0, 0);
      assertEquals(0, bytesFixedArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Charset charset0 = Charset.defaultCharset();
      Bytes bytes0 = bytesExtendableArray0.writeNB("X/i>[72-BBOznab", charset0);
      assertEquals(0, bytes0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write8B((short)304);
      assertEquals(16, bytes0.capacity());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write8B((-63));
      assertSame(bytesExtendableArray0, bytes0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write8B(0.0);
      assertSame(bytes0, bytesExtendableArray0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write8B((byte) (-99));
      assertEquals(8, bytes0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write4B((short)1453);
      assertEquals(0, bytes0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write4B(0.0F);
      assertSame(bytes0, bytesExtendableArray0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write4B(0.0);
      assertSame(bytesExtendableArray0, bytes0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write4B('T');
      assertTrue(bytes0.isAutoResizable());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write4B((byte) (-3));
      assertEquals(0, bytes0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write2B(610L);
      assertSame(bytes0, bytesExtendableArray0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write2B(2262);
      assertSame(bytesExtendableArray0, bytes0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write2B(0.0);
      assertEquals(2, bytes0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write2B('D');
      assertTrue(bytes0.isAutoResizable());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write1B((short)9);
      assertEquals(16, bytes0.capacity());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write1B((-2179L));
      assertTrue(bytes0.isAutoResizable());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write1B(1.0);
      assertTrue(bytes0.isAutoResizable());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write1B('|');
      assertEquals(16, bytes0.capacity());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      int int0 = bytesFixedArray0.writableBytes();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      int int0 = bytesExtendableArray0.writableBytes();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesSliceBuilder bytesSliceBuilder0 = bytesExtendableArray0.slice();
      assertNotNull(bytesSliceBuilder0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      BytesPool bytesPool0 = new BytesPool();
      BytesPool.PooledBytes bytesPool_PooledBytes0 = bytesPool0.acquire();
      byte[] byteArray0 = new byte[4];
      Bytes bytes0 = bytesPool_PooledBytes0.setNB(2244, byteArray0, 0);
      assertEquals(0, bytes0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      byte[] byteArray0 = new byte[3];
      Bytes bytes0 = bytesExtendableArray0.setNB(3064, byteArray0);
      assertEquals(3067, bytes0.capacity());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Charset charset0 = Charset.defaultCharset();
      Bytes bytes0 = bytesExtendableArray0.setNB(1090, "z{w8+;]tjw.LG", charset0);
      assertEquals(1103, bytes0.capacity());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.setNB(1990, "");
      assertEquals(1990, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.set8B(16, (short)8);
      assertEquals(32, bytes0.capacity());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.set8B(1, 1);
      assertTrue(bytes0.isAutoResizable());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set8B(182, (float) 182);
      assertEquals(190, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set8B(255, (double) 255);
      assertEquals(263, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.set8B(5, 'P');
      assertEquals(16, bytes0.capacity());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set8B(260, (byte)0);
      assertEquals(268, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set4B(123, (short)0);
      assertEquals(127, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set4B(3150, (long) 3150);
      assertEquals(3154, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set4B(43, (float) 43);
      assertEquals(47, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.set4B(3, (double) 3);
      assertEquals(16, bytes0.capacity());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set4B(44, 'E');
      assertEquals(48, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.set2B(1, 4591L);
      assertSame(bytesExtendableArray0, bytes0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set2B(123, 33);
      assertEquals(125, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.set2B((int) (byte)0, 0.0F);
      assertSame(bytesExtendableArray0, bytes0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set2B(200, (double) 200);
      assertEquals(202, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set2B(123, (byte)1);
      assertEquals(125, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set1B(1657, (short)3);
      assertEquals(1658, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set1B(125, (long) 125);
      assertEquals(126, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set1B(65535, 65535);
      assertEquals(65536, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.set1B(2, (float) 2);
      assertEquals(16, bytes0.capacity());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set1B(3735, (double) 3735);
      assertEquals(3736, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set1B(788, ':');
      assertEquals(789, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.reset();
      assertEquals(0, bytes0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.writeNB("5IjI{~v+~~u.W!|nr~I");
      int int0 = bytes0.readableBytes();
      assertEquals(19, int0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.writerIndex = (-1);
      int int0 = bytesExtendableArray0.readableBytes();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.write8B('h');
      int int0 = bytesExtendableArray0.readUnsignedShort();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.write2B((byte)40);
      int int0 = bytesExtendableArray0.readUnsignedShort();
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.writerIndex = 47;
      BigInteger bigInteger0 = bytesExtendableArray0.readUnsignedLong();
      assertEquals((byte)0, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.writeNB("Writer index error. index(%d) < readerIndex(%d) || index(%d)+length(%d) > capacity(%d)");
      BigInteger bigInteger0 = bytesExtendableArray0.readUnsignedLong();
      assertEquals((short)8297, bigInteger0.shortValue());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.writerIndex(1779);
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytes0);
      long long0 = bytesReadOnly0.readUnsignedInt();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.write4B((-127));
      long long0 = bytesExtendableArray0.readUnsignedInt();
      assertEquals(4294967169L, long0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.write8B('<');
      short short0 = bytesExtendableArray0.readUnsignedByte();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.writeNB("5IjI{~v+~~u.W!|nr~I");
      short short0 = bytes0.readUnsignedByte();
      assertEquals((short)53, short0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.writeNB("Writer index error. i\"dex(%d) < readerIndex(%d)|| index(%d)+length(%d)  capacity(%d)");
      Charset charset0 = Charset.defaultCharset();
      String string0 = bytes0.readString(charset0);
      assertEquals("Writer index error. i\"dex(%d) < readerIndex(%d)|| index(%d)+length(%d)  capacity(%d)", string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      Charset charset0 = Charset.defaultCharset();
      String string0 = bytesFixedArray0.readString(charset0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      Charset charset0 = Charset.defaultCharset();
      String string0 = bytesByteBuffer0.readString((int) (byte)0, charset0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.writeNB("Writer index error. index(%d) < readerIndex(%d) || index(%d)+length(%d) > capacity(%{)");
      bytes0.readString(44);
      assertEquals(44, bytes0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      String string0 = bytesExtendableArray0.readString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(3);
      bytesExtendableArray0.writerIndex = 3;
      byte[] byteArray0 = new byte[3];
      Bytes bytes0 = bytesExtendableArray0.readBytes(byteArray0);
      assertEquals(3, bytes0.capacity());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(5);
      Bytes bytes0 = bytesExtendableArray0.writerIndex(5);
      byte[] byteArray0 = bytes0.readBytes(3);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      byte[] byteArray0 = bytesFixedArray0.readBytes((int) (byte)0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      bytesFixedArray0.readShort();
      byte[] byteArray1 = bytesFixedArray0.readBytes();
      assertEquals(2, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.writeNB("io.appulse.utils.BytesExtendableArray");
      byte[] byteArray0 = bytesExtendableArray0.readBytes();
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      boolean boolean0 = bytesExtendableArray0.isWritable();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.writeNB("Writer index error. i\"dex(%d) < readerIndex(%d)|| index(%d)+length(%d)  capacity(%d)");
      boolean boolean0 = bytes0.isWritable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.writeNB("Writer index error. index(%d) < readerIndex(%d) || index(%d)+length(%d) > capacity(%d)");
      int int0 = bytesExtendableArray0.getUnsignedShort(7);
      assertEquals(26990, int0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.writeNB("Writer index error. index(%d) < readerIndex(%d) || index(%d)+length(%d) > capacity(%d)");
      BigInteger bigInteger0 = bytes0.getUnsignedLong(59);
      assertEquals((byte)104, bigInteger0.byteValue());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.writeNB("Writer index error. index(%d) < readerIndex(%d) || index(%d)+length(%d) > capacity(%d)");
      long long0 = bytesExtendableArray0.getUnsignedInt((byte)4);
      assertEquals(1701978217L, long0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.write2B((short)123);
      short short0 = bytesExtendableArray0.getUnsignedByte(0);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      Charset charset0 = Charset.defaultCharset();
      String string0 = bytesFixedArray0.getString(0, charset0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.writeNB("Writer index error. index(%d) < readerIndex(%d) || index(%d)+length(%d) > capacity(%d)");
      String string0 = bytes0.getString(40, 40);
      assertEquals("dex(%d) || index(%d)+length(%d) > capaci", string0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      byte[] byteArray0 = bytesFixedArray0.getBytes(0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.write4B((long) 417);
      byte[] byteArray0 = bytesExtendableArray0.arrayCopy();
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)1, (byte) (-95)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        bytesReadOnly0.writeNB(byteArray0, 3027);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.writeNB(byteArray0, (-136));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(2) < readerIndex(0) || index(2)+length(2) > capacity(2)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesPool bytesPool0 = new BytesPool();
      BytesPool.PooledBytes bytesPool_PooledBytes0 = bytesPool0.new PooledBytes(bytesExtendableArray0);
      bytesPool_PooledBytes0.close();
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        bytesPool_PooledBytes0.writeNB(byteArray0, (int) (byte) (-109));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Pooled bytes buffer already released
         //
         verifyException("io.appulse.utils.BytesPool$PooledBytes", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0, 0, (int) (byte)4);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.writeNB(byteArray0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        bytesReadOnly0.writeNB(byteArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.writeNB(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.writeNB(byteArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(2) < readerIndex(0) || index(2)+length(2) > capacity(2)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-124));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        bytesSlice0.writeNB(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(3257);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesSlice0.writeNB("from is marked non-null but is null", charset0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(3257) < readerIndex(3257) || index(3257)+length(35) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-600));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesSlice0.writeNB("_[s:u0ZnN", charset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.writeNB("x]&z");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Bytes bytes0 = Bytes.allocate(3);
      // Undeclared exception!
      try { 
        bytes0.writeNB("c{dKwP#&`#Vd$:");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(14) > capacity(3)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.writerIndex = 2147483641;
      // Undeclared exception!
      try { 
        bytesExtendableArray0.writeNB("Writer index error. i\"dex(%d) < readerIndex(%d)|| index(%d)+length(%d)  capacity(%d)");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write8B((short)189);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write8B((short) (byte) (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(2) < readerIndex(0) || index(2)+length(8) > capacity(2)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write8B(1187);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write8B((int) (byte)7);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(1) < readerIndex(0) || index(1)+length(8) > capacity(1)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write8B(0.0F);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(16);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write8B((-1833.87F));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(16) < readerIndex(16) || index(16)+length(8) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.writerIndex = (-2743);
      // Undeclared exception!
      try { 
        bytesExtendableArray0.write8B(255.09535F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2743 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write8B(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write8B(0.0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(8) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = Integer.getInteger("", (-273));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write8B((double) (-273));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -273 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write8B('`');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write8B('j');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-1081));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write8B('M');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1081 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write8B((byte)1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write8B((byte) (-60));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(8) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((byte) (-1));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write8B((byte) (-41));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write4B((short)6);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write4B((short)1538);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(4) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write4B((-1L));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(465);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write4B(1L);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(465) < readerIndex(465) || index(465)+length(4) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = Integer.valueOf((-1));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write4B((long) (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write4B(30.9F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(2);
      Integer integer0 = new Integer(8);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write4B((float) 8);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(8) < readerIndex(8) || index(8)+length(4) > capacity(2)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      BytesPool bytesPool0 = new BytesPool();
      BytesPool.PooledBytes bytesPool_PooledBytes0 = bytesPool0.acquire((-2907));
      Integer integer0 = new Integer((-2907));
      BytesSlice bytesSlice0 = new BytesSlice(bytesPool_PooledBytes0, integer0, integer0);
      BytesPool.PooledBytes bytesPool_PooledBytes1 = bytesPool0.new PooledBytes(bytesSlice0);
      // Undeclared exception!
      try { 
        bytesPool_PooledBytes1.write4B(589.1F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2907 out of bounds for length 8192
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write4B(293.0814156744029);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write4B((double) 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(4) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write4B('e');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-1994));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write4B('W');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1994 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write4B((byte)24);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write4B((byte)59);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(4) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write2B(0L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = Integer.valueOf(466);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write2B((long) 466);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(466) < readerIndex(466) || index(466)+length(2) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.writerIndex = (-562);
      // Undeclared exception!
      try { 
        bytesExtendableArray0.write2B((-450L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -562 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write2B(43);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write2B(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(2) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-1523));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write2B((-2268));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1523 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write2B((-1.0F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write2B((float) (byte) (-97));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(3) < readerIndex(0) || index(3)+length(2) > capacity(3)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-1852));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write2B((-3188.2437F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1852 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write2B((double) 2773L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.write2B((-3405.64644397404));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(2) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = Integer.valueOf(Integer.MAX_VALUE);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write2B(0.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2147483647 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write2B('_');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(255);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write2B('K');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(255) < readerIndex(255) || index(255)+length(2) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write2B((byte)108);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(2) < readerIndex(0) || index(2)+length(2) > capacity(2)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write1B((short)123);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(258);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write1B((short)3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(258) < readerIndex(258) || index(258)+length(1) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      BytesPool bytesPool0 = new BytesPool();
      BytesPool.PooledBytes bytesPool_PooledBytes0 = bytesPool0.new PooledBytes((Bytes) null);
      // Undeclared exception!
      try { 
        bytesPool_PooledBytes0.write1B((short)1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Pooled bytes buffer already released
         //
         verifyException("io.appulse.utils.BytesPool$PooledBytes", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-5749));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write1B((short)1418);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -5749 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write1B(4294967295L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.write1B(1024L);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(1) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write1B(3055);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write1B(112);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(4448);
      Integer integer0 = new Integer(4448);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write1B(4448);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(4448) < readerIndex(4448) || index(4448)+length(1) > capacity(4448)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(1246);
      bytesExtendableArray0.writerIndex = (-132);
      // Undeclared exception!
      try { 
        bytesExtendableArray0.write1B((-2660));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -132 out of bounds for length 1246
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      BytesPool bytesPool0 = new BytesPool();
      BytesPool.PooledBytes bytesPool_PooledBytes0 = bytesPool0.acquire();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesPool_PooledBytes0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write1B(0.0F);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write1B((-414.0F));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write1B((-3561.601F));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(1) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-1));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write1B((-120.864F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write1B((double) (-1429));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write1B(0.0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(9) < readerIndex(0) || index(9)+length(1) > capacity(9)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write1B('H');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write1B('p');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-893));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write1B(':');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -893 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(2);
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        bytesReadOnly0.setNB((int) (byte)50, byteArray0, (int) (byte)123);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      BytesPool bytesPool0 = new BytesPool();
      BytesPool.PooledBytes bytesPool_PooledBytes0 = bytesPool0.new PooledBytes(bytesFixedArray0);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        bytesPool_PooledBytes0.setNB(3, byteArray0, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(44);
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        bytesFixedArray0.setNB(44, byteArray0, 467);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(44) < readerIndex(0) || index(44)+length(3) > capacity(44)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(46);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        bytesByteBuffer0.setNB((-1231), byteArray0, (-990));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newPosition < 0: (-1231 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bytesExtendableArray0.setNB(5, byteArray0, 5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.setNB((int) (byte)3, byteArray0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      byte[] byteArray0 = new byte[4];
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.setNB((int) (byte)4, byteArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        bytesFixedArray0.setNB((int) (byte)11, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.setNB((int) (byte) (-72), byteArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(-72) < readerIndex(0) || index(-72)+length(3) > capacity(3)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bytesExtendableArray0.setNB((-122), byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesReadOnly0.setNB(0, "", charset0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesFixedArray0.setNB(77, "", charset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(40);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesFixedArray0.setNB(40, ", bufferCreateFunction=", charset0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(40) < readerIndex(0) || index(40)+length(23) > capacity(40)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.setNB((-1688), "Vu#cB''Ip)zw^2");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.setNB(1025, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // value is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(1);
      // Undeclared exception!
      try { 
        bytesFixedArray0.setNB(2147483639, "");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(2147483639) < readerIndex(0) || index(2147483639)+length(0) > capacity(1)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.setNB((-3148), "O1^f+yW4|/3d`A2v");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set8B(125, (short) (-3050));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1149);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.set8B(1149, (short)5);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(1149) < readerIndex(0) || index(1149)+length(8) > capacity(1149)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      BytesPool bytesPool0 = new BytesPool();
      BytesPool.PooledBytes bytesPool_PooledBytes0 = bytesPool0.new PooledBytes((Bytes) null);
      // Undeclared exception!
      try { 
        bytesPool_PooledBytes0.set8B((-1072), (short)143);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Pooled bytes buffer already released
         //
         verifyException("io.appulse.utils.BytesPool$PooledBytes", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set8B((-476), (short)5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -476 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set8B(2138, 4);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set8B(0, (-1443));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(8) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set8B((-2387), (-2387));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2387 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set8B((-1594), (float) (-1594));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(3);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set8B(1079, (float) 3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(1079) < readerIndex(0) || index(1079)+length(8) > capacity(3)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set8B((-4407), (float) (-4407));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -4407 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set8B((-189), (double) (-189));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set8B(2147483639, 0.0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set8B((-1), 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(95);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set8B(95, (-299.398076));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(95) < readerIndex(0) || index(95)+length(8) > capacity(95)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set8B(5, 'L');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set8B(0, 'C');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(8) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set8B((-169), '$');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -169 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set8B(379, (byte)85);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1239);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.set8B(1239, (byte)126);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(1239) < readerIndex(0) || index(1239)+length(8) > capacity(1239)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set8B((-559), (byte) (-82));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -559 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set4B(59, (short)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set4B(2147483639, (short) (-360));
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set4B(Integer.MAX_VALUE, (short)1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set4B((-581), (short)3862);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -581 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set4B((-852), (-1L));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set4B(2147483639, (long) 2147483639);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set4B(43, (long) (byte) (-86));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(43) < readerIndex(0) || index(43)+length(4) > capacity(1)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set4B((-391), (long) (-391));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -391 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set4B(1, (float) 1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(8192);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set4B(8192, 2180.89F);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(8192) < readerIndex(0) || index(8192)+length(4) > capacity(8192)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      BytesPool bytesPool0 = new BytesPool();
      BytesPool.PooledBytes bytesPool_PooledBytes0 = bytesPool0.acquire();
      bytesPool_PooledBytes0.close();
      // Undeclared exception!
      try { 
        bytesPool_PooledBytes0.set4B(702, (float) 702);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Pooled bytes buffer already released
         //
         verifyException("io.appulse.utils.BytesPool$PooledBytes", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set4B((-4063), (float) (-4063));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -4063 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Bytes bytes0 = Bytes.wrap(byteArray0);
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytes0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set4B(456, 1.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(815);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.set4B(2497, (-404.0952205));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(2497) < readerIndex(0) || index(2497)+length(4) > capacity(815)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set4B((-4140), (double) (-4140));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -4140 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set4B(2, 'g');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set4B(2147483639, 'Z');
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(125);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.set4B(125, 'C');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(125) < readerIndex(0) || index(125)+length(4) > capacity(125)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set4B((-1165), 'W');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1165 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set4B(2669, (byte) (-124));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set4B(312, (byte) (-47));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set4B((-3410), (byte) (-27));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -3410 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set2B(44, (-3203L));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2138);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.set2B(2138, (long) 2138);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(2138) < readerIndex(0) || index(2138)+length(2) > capacity(2138)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set2B((-732), (long) (-732));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -732 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set2B((-1626), (-1626));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(16);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.set2B(777, 1361);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(777) < readerIndex(0) || index(777)+length(2) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set2B((-366), (-366));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -366 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set2B((-256), (float) (-256));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set2B(13, (float) 13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(44);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.set2B(141, (float) 141);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(141) < readerIndex(0) || index(141)+length(2) > capacity(44)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set2B((-3146), (float) (-3146));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -3146 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set2B((-3708), (double) (-3708));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set2B(2147483643, 0.0);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(1375);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set2B(1375, (double) 1375);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(1375) < readerIndex(0) || index(1375)+length(2) > capacity(1375)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set2B((-828), (double) (-828));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -828 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set2B(5, 'N');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set2B((int) (byte)90, '4');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(90) < readerIndex(0) || index(90)+length(2) > capacity(2)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set2B((-1699), 'h');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1699 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set2B((-329), (byte)1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set2B(44, (byte) (-123));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(1563);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set2B(1563, (byte)123);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(1563) < readerIndex(0) || index(1563)+length(2) > capacity(1563)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set2B((-2245), (byte) (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -2245 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesFixedArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set1B((-1725), (short)2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set1B(2147483639, (short)1);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set1B((-1321), (short)43);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set1B((-1769), (short)388);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1769 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set1B(2378, (long) 2378);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set1B(2147483639, (long) 2147483639);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set1B((-936), (long) (-936));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -936 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set1B(3, 3);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set1B(2147483639, 56);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(1622);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set1B(1622, 1622);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(1622) < readerIndex(0) || index(1622)+length(1) > capacity(1622)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set1B((-1786), (-1786));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -1786 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set1B(621, (float) 621);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer((-1379));
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.set1B((-1379), (-5566.0F));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(-2758) < readerIndex(-1379) || index(-2758)+length(1) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set1B((-932), (float) (-932));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -932 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set1B(1, (double) 1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Integer integer0 = Integer.getInteger((String) null, 255);
      BytesSlice bytesSlice0 = new BytesSlice(bytesFixedArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.set1B((-1266), (double) (-1116));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set1B((-891), (double) (-891));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -891 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set1B(2, '#');
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set1B(0, ':');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set1B(123, '\"');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(123) < readerIndex(0) || index(123)+length(1) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      BytesPool bytesPool0 = new BytesPool();
      BytesPool.PooledBytes bytesPool_PooledBytes0 = bytesPool0.acquire(3312);
      bytesPool_PooledBytes0.release();
      // Undeclared exception!
      try { 
        bytesPool_PooledBytes0.set1B((-1282), ':');
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Pooled bytes buffer already released
         //
         verifyException("io.appulse.utils.BytesPool$PooledBytes", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set1B((-3236), 'b');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -3236 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesFixedArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.reset();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.reset();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      Bytes bytes0 = Bytes.copy(byteArray0);
      Integer integer0 = new Integer((byte)25);
      Integer integer1 = new Integer((-1422));
      BytesSlice bytesSlice0 = new BytesSlice(bytes0, integer0, integer1);
      // Undeclared exception!
      try { 
        bytesSlice0.reset();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error: newIndex(0) < readerIndex(0) || newIndex(0) > capacity(-1447)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.readUnsignedInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(28);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesSlice0.readString(charset0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readString((Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charset is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readString(charset0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(16) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readString((-2667), (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charset is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readString(765, charset0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(765) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readString((-12));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.readString((-27));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readString(25);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(25) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(2147483639);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.readString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.readString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readString();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(16) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        bytesReadOnly0.readBytes(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      Bytes bytes0 = Bytes.copy(byteBuffer0);
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytes0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.readBytes(0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.readBytes(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readBytes((-2124));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2124
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.writeNB("Writer index error. i\"dex(%d) <readerIndex(%d)|| in ex(%d)+length(%d'  capacity(%d)");
      byte[] byteArray0 = new byte[7];
      bytesExtendableArray0.buffer = byteArray0;
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readBytes(19);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.readBytes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.readerIndex = (-4956);
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readBytes();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -4956
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      BytesPool bytesPool0 = new BytesPool();
      BytesPool.PooledBytes bytesPool_PooledBytes0 = bytesPool0.new PooledBytes((Bytes) null);
      // Undeclared exception!
      try { 
        bytesPool_PooledBytes0.readBytes();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Pooled bytes buffer already released
         //
         verifyException("io.appulse.utils.BytesPool$PooledBytes", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(1072);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.readBytes();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.isWritable(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.isWritable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.getUnsignedShort(8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getUnsignedShort(16);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(16) < 0 || index(16)+length(2) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getUnsignedLong((-12));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(-12) < 0 || index(-12)+length(8) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getUnsignedInt(1653);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(1653) < 0 || index(1653)+length(4) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getUnsignedByte(7);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(7) < 0 || index(7)+length(1) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getUnsignedByte(Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2147483647 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesFixedArray0.getString(15, charset0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getString(571, (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charset is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getString(2, charset0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(2) < 0 || index(2)+length(14) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getString(1739, 2147483639);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getString(1642, 1642);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(1642) < 0 || index(1642)+length(1642) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Integer integer0 = new Integer(997);
      BytesPool bytesPool0 = new BytesPool((Integer) null, integer0, integer0, (Function<Integer, Bytes>) null);
      BytesPool.PooledBytes bytesPool_PooledBytes0 = bytesPool0.new PooledBytes((Bytes) null);
      // Undeclared exception!
      try { 
        bytesPool_PooledBytes0.getString(997, 1723);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Pooled bytes buffer already released
         //
         verifyException("io.appulse.utils.BytesPool$PooledBytes", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.getString(2980);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getString(5);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(5) < 0 || index(5)+length(11) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(258);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.getBytes(258);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 516 > 258
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesPool bytesPool0 = new BytesPool();
      BytesPool.PooledBytes bytesPool_PooledBytes0 = bytesPool0.new PooledBytes(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesPool_PooledBytes0.checkWriteBounds((-602), (-602));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(-602) < readerIndex(0) || index(-602)+length(-602) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.checkReaderBounds(2144, 2144);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(2144) < 0 || index(2144)+length(2144) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.arrayCopy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readBytes(byteArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(1) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.setNB((-2942), "", charset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      bytesExtendableArray0.setNB(Integer.MAX_VALUE, byteArray0);
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      // Undeclared exception!
      try { 
        bytesExtendableArray0.writeNB((String) null, (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // value is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesReadOnly0.writeNB("ntP}uS&oKbzwtjz", charset0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        bytesExtendableArray0.writeNB(byteArray0, (int) (byte) (-56));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      byte[] byteArray0 = new byte[2];
      Bytes bytes0 = bytesExtendableArray0.writeNB(byteArray0);
      assertEquals(0, bytes0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readBytes();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error: newIndex(16) < 0 || newIndex(16) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesFixedArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      int int0 = bytesExtendableArray0.readableBytes();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.writableBytes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getBytes((-1280));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(-1280) < 0 || index(-1280)+length(1296) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      boolean boolean0 = bytesExtendableArray0.isWritable(1127);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(0);
      bytesExtendableArray0.set4B(1, (byte)34);
      boolean boolean0 = bytesExtendableArray0.isWritable();
      assertEquals(5, bytesExtendableArray0.capacity());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      boolean boolean0 = bytesExtendableArray0.isReadable((-445));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      boolean boolean0 = bytesExtendableArray0.isReadable(4071);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.write2B(0.0F);
      boolean boolean0 = bytesExtendableArray0.isReadable();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      boolean boolean0 = bytesExtendableArray0.isReadable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // destination is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readBytes(19);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(19) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.setNB((-1743), "io.appulse.utils.BytesUtils", (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charset is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.setNB((-2110), (String) null, (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // value is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.setNB(0, (byte[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2348);
      BytesByteBuffer bytesByteBuffer0 = BytesByteBuffer.copy(byteBuffer0);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        bytesByteBuffer0.setNB(9, byteArray0, (int) (byte)119);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(4);
      // Undeclared exception!
      try { 
        bytesExtendableArray0.setNB(4, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.writeNB("bytes is marked non-null but is null", (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charset is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.writeNB((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // value is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.writeNB((byte[]) null, 1842);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.writeNB((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bytes is marked non-null but is null
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set1B(886, (short)3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(886) < readerIndex(0) || index(886)+length(1) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write2B((-1476));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set1B(2147483639, 'K');
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write2B(1883L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      byte[] byteArray0 = bytesExtendableArray0.arrayCopy();
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set8B(1205, 'U');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readUnsignedShort();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(2) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write8B(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.getUnsignedInt(573);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.set8B((-978), (double) (-978));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -978 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.getUnsignedLong(4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      String string0 = bytesFixedArray0.readString();
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set2B(1818, (-1L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set8B(1886, (byte)60);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      BytesFixedArray bytesFixedArray0 = BytesFixedArray.copy(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.write8B('6');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(1) < readerIndex(0) || index(1)+length(8) > capacity(1)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      boolean boolean0 = bytesExtendableArray0.isWritable((-697));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write2B(0.0F);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.readUnsignedInt();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(4) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set2B((-2654), (-711));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(56);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set4B(293, (short)45);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(293) < readerIndex(0) || index(293)+length(4) > capacity(56)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      String string0 = bytesExtendableArray0.readString((int) (byte)0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set1B(2441, (float) 2441);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      String string0 = bytesExtendableArray0.getString(0, 0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readUnsignedLong();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(8) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write8B((byte) (-10));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.isReadable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set4B(1482, 2074L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readString((-305), charset0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set8B(2147483639, 2147483639);
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set2B(2147483640, (-1821.4799F));
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      String string0 = bytesExtendableArray0.toString();
      assertEquals("BytesExtendableArray{capacity=16,readerIndex=0,writerIndex=0}", string0);
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.getString(123);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set1B(782, (double) 782);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(782) < readerIndex(0) || index(782)+length(1) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      bytesExtendableArray0.set2B(2147483639, (byte)49);
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write2B('9');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray(1246);
      Bytes bytes0 = bytesExtendableArray0.write1B((-2660));
      assertEquals(1, bytes0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write8B((short) (-3055));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set2B(2147483640, (double) 2147483640);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Bytes bytes0 = bytesExtendableArray0.write8B(255.09535F);
      assertEquals(0, bytes0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      bytesExtendableArray0.set2B((int) (byte)90, '4');
      assertEquals(92, bytesExtendableArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(44);
      Bytes bytes0 = bytesFixedArray0.write1B((float) 44);
      assertEquals(0, bytes0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write4B(0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set1B(2441, 2441);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set4B(123, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(43);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set1B(43, (long) 43);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(43) < readerIndex(0) || index(43)+length(1) > capacity(43)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.slice();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.getUnsignedShort(Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2147483647 out of bounds for length 16
         //
         verifyException("io.appulse.utils.BytesUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesFixedArray0.readString(charset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.setNB((-233), "o Z}545:ye@=[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set4B((-229), (-3029.6));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write1B(896.771072329);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      Integer integer0 = new Integer(669);
      BytesSlice bytesSlice0 = new BytesSlice(bytesExtendableArray0, integer0, integer0);
      // Undeclared exception!
      try { 
        bytesSlice0.write4B('&');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(669) < readerIndex(669) || index(669)+length(4) > capacity(16)
         //
         verifyException("io.appulse.utils.BytesSlice", e);
      }
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write4B((byte) (-39));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.set4B(255, 'P');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.getUnsignedByte(2004);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray(byteArray0);
      // Undeclared exception!
      try { 
        bytesFixedArray0.set4B((int) (byte)46, (byte)46);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(46) < readerIndex(0) || index(46)+length(4) > capacity(1)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.writeNB("}*yP\\.!3");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      BytesByteBuffer bytesByteBuffer0 = new BytesByteBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        bytesByteBuffer0.write1B(':');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Writer index error. index(0) < readerIndex(0) || index(0)+length(1) > capacity(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      // Undeclared exception!
      try { 
        bytesExtendableArray0.readUnsignedByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Reader index error. index(0) < 0 || index(0)+length(1) > writerIndex(0)
         //
         verifyException("io.appulse.utils.BytesAbstract", e);
      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        bytesFixedArray0.getString((-1810), charset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write2B(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write8B(6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write1B((short)0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write4B(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.getBytes(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set8B((-2015), (float) (-2015));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.set8B(1884, (short)1518);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write4B((-6.305F));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly((Bytes) null);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write1B((long) 1795);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      BytesFixedArray bytesFixedArray0 = new BytesFixedArray();
      // Undeclared exception!
      try { 
        bytesFixedArray0.write4B((short) (-10));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      BytesExtendableArray bytesExtendableArray0 = new BytesExtendableArray();
      BytesReadOnly bytesReadOnly0 = new BytesReadOnly(bytesExtendableArray0);
      // Undeclared exception!
      try { 
        bytesReadOnly0.write2B((byte) (-121));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // The operation doesn't support in BytesReadOnly wrapper
         //
         verifyException("io.appulse.utils.BytesReadOnly", e);
      }
  }
}
