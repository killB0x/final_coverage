/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:29:03 GMT 2022
 */

package com.github.lecogiteur.csvbang.factory;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.lecogiteur.csvbang.factory.FactoryCsvWriter;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FactoryCsvWriter_ESTest extends FactoryCsvWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FactoryCsvWriter factoryCsvWriter0 = new FactoryCsvWriter();
      factoryCsvWriter0.setNumberOfWriterThread(152);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FactoryCsvWriter factoryCsvWriter0 = null;
      try {
        factoryCsvWriter0 = new FactoryCsvWriter("ch");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.util.logging.LogRecord$CallerFinder
         //
         verifyException("java.util.logging.LogRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FactoryCsvWriter factoryCsvWriter0 = new FactoryCsvWriter();
      Class<Object> class0 = Object.class;
      factoryCsvWriter0.add(class0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FactoryCsvWriter factoryCsvWriter0 = new FactoryCsvWriter(",(\"%&(|E\"");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FactoryCsvWriter factoryCsvWriter0 = new FactoryCsvWriter("wF{T2fzyI.^");
      factoryCsvWriter0.addPackage("y}<$oi%/,OM_*}U");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FactoryCsvWriter factoryCsvWriter0 = new FactoryCsvWriter("wF{T2fzyI.^");
      factoryCsvWriter0.addPackage("");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FactoryCsvWriter factoryCsvWriter0 = new FactoryCsvWriter();
      factoryCsvWriter0.add((Class<?>) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FactoryCsvWriter factoryCsvWriter0 = new FactoryCsvWriter();
      Class<File> class0 = File.class;
      File file0 = MockFile.createTempFile("com.github.lecogiteur.csvbang.factory.FactoryCsvWriter", "No configuration available for class [%s]. Verify if this class has an annotation CsvType.");
      try { 
        factoryCsvWriter0.createCsvWriter(class0, file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No configuration available for class [class java.io.File]. Verify if this class has an annotation CsvType.
         //
         verifyException("com.github.lecogiteur.csvbang.factory.FactoryCsvWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FactoryCsvWriter factoryCsvWriter0 = new FactoryCsvWriter("O1brY");
      Class<Object> class0 = Object.class;
      try { 
        factoryCsvWriter0.createCsvWriter(class0, "com.github.lecogiteur.csvbang.util.CsvBangDateFormat");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No configuration available for class [class java.lang.Object]. Verify if this class has an annotation CsvType.
         //
         verifyException("com.github.lecogiteur.csvbang.factory.FactoryCsvWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FactoryCsvWriter factoryCsvWriter0 = new FactoryCsvWriter("0Ol\"uw?q,Ts");
      Class<Object> class0 = Object.class;
      try { 
        factoryCsvWriter0.createCsvWriter(class0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No configuration available for class [class java.lang.Object]. Verify if this class has an annotation CsvType.
         //
         verifyException("com.github.lecogiteur.csvbang.factory.FactoryCsvWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FactoryCsvWriter factoryCsvWriter0 = new FactoryCsvWriter("");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FactoryCsvWriter factoryCsvWriter0 = new FactoryCsvWriter();
      // Undeclared exception!
      try { 
        factoryCsvWriter0.setNumberOfWriterThread(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }
}
