/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:44:53 GMT 2022
 */

package com.github.lecogiteur.csvbang.formatter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.lecogiteur.csvbang.formatter.CurrencyCsvFormatter;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CurrencyCsvFormatter_ESTest extends CurrencyCsvFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CurrencyCsvFormatter currencyCsvFormatter0 = new CurrencyCsvFormatter();
      String string0 = currencyCsvFormatter0.format((Object) null, "%");
      assertEquals("%", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CurrencyCsvFormatter currencyCsvFormatter0 = new CurrencyCsvFormatter();
      String string0 = currencyCsvFormatter0.format((Object) null, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CurrencyCsvFormatter currencyCsvFormatter0 = new CurrencyCsvFormatter();
      Locale locale0 = Locale.GERMAN;
      currencyCsvFormatter0.setLocal(locale0);
      // Undeclared exception!
      try { 
        currencyCsvFormatter0.init();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Currency", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CurrencyCsvFormatter currencyCsvFormatter0 = new CurrencyCsvFormatter();
      currencyCsvFormatter0.setPattern(".");
      // Undeclared exception!
      try { 
        currencyCsvFormatter0.init();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("com.github.lecogiteur.csvbang.formatter.CurrencyCsvFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CurrencyCsvFormatter currencyCsvFormatter0 = new CurrencyCsvFormatter();
      currencyCsvFormatter0.init();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        currencyCsvFormatter0.format(object0, "T-#;>!");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CurrencyCsvFormatter currencyCsvFormatter0 = new CurrencyCsvFormatter();
      String string0 = currencyCsvFormatter0.format((Object) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CurrencyCsvFormatter currencyCsvFormatter0 = new CurrencyCsvFormatter();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        currencyCsvFormatter0.format(object0, "T-#;>!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.lecogiteur.csvbang.formatter.CurrencyCsvFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CurrencyCsvFormatter currencyCsvFormatter0 = new CurrencyCsvFormatter();
      currencyCsvFormatter0.setPattern("?w{/~6S0./");
      currencyCsvFormatter0.init();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CurrencyCsvFormatter currencyCsvFormatter0 = new CurrencyCsvFormatter();
      currencyCsvFormatter0.setPattern("0");
      currencyCsvFormatter0.init();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CurrencyCsvFormatter currencyCsvFormatter0 = new CurrencyCsvFormatter();
      currencyCsvFormatter0.setPattern(".uj7'v2Al;m-0N<");
      currencyCsvFormatter0.init();
  }
}
