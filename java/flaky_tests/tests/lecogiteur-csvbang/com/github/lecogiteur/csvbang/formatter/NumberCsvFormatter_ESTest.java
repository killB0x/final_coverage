/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:52:01 GMT 2022
 */

package com.github.lecogiteur.csvbang.formatter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.lecogiteur.csvbang.formatter.NumberCsvFormatter;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NumberCsvFormatter_ESTest extends NumberCsvFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumberCsvFormatter numberCsvFormatter0 = new NumberCsvFormatter();
      String string0 = numberCsvFormatter0.format((Object) null, "O3");
      assertEquals("O3", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NumberCsvFormatter numberCsvFormatter0 = new NumberCsvFormatter();
      String string0 = numberCsvFormatter0.format((Object) null, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NumberCsvFormatter numberCsvFormatter0 = new NumberCsvFormatter();
      numberCsvFormatter0.setPattern("com.github.lecogiteur.csvbang.formatter.NumberCsvFormatter");
      // Undeclared exception!
      try { 
        numberCsvFormatter0.init();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Multiple decimal separators in pattern \"com.github.lecogiteur.csvbang.formatter.NumberCsvFormatter\"
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NumberCsvFormatter numberCsvFormatter0 = new NumberCsvFormatter();
      String string0 = numberCsvFormatter0.format((Object) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NumberCsvFormatter numberCsvFormatter0 = new NumberCsvFormatter();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        numberCsvFormatter0.format(object0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.lecogiteur.csvbang.formatter.NumberCsvFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NumberCsvFormatter numberCsvFormatter0 = new NumberCsvFormatter();
      Locale locale0 = Locale.UK;
      numberCsvFormatter0.setLocal(locale0);
      assertEquals("en", locale0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NumberCsvFormatter numberCsvFormatter0 = new NumberCsvFormatter();
      numberCsvFormatter0.setPattern("");
      numberCsvFormatter0.init();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        numberCsvFormatter0.format(object0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NumberCsvFormatter numberCsvFormatter0 = new NumberCsvFormatter();
      // Undeclared exception!
      try { 
        numberCsvFormatter0.init();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }
}
