/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:33:59 GMT 2022
 */

package com.github.lecogiteur.csvbang.formatter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.lecogiteur.csvbang.formatter.BooleanCsvFormatter;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BooleanCsvFormatter_ESTest extends BooleanCsvFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BooleanCsvFormatter booleanCsvFormatter0 = new BooleanCsvFormatter();
      Integer integer0 = new Integer((-205));
      // Undeclared exception!
      try { 
        booleanCsvFormatter0.format(integer0, "Y61");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.lecogiteur.csvbang.formatter.BooleanCsvFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BooleanCsvFormatter booleanCsvFormatter0 = new BooleanCsvFormatter();
      String string0 = booleanCsvFormatter0.format((Object) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BooleanCsvFormatter booleanCsvFormatter0 = new BooleanCsvFormatter();
      String string0 = booleanCsvFormatter0.format((Object) null, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BooleanCsvFormatter booleanCsvFormatter0 = new BooleanCsvFormatter();
      Integer integer0 = new Integer(0);
      String string0 = booleanCsvFormatter0.format(integer0, "rivqerbl");
      assertEquals("unkowningBoolean", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BooleanCsvFormatter booleanCsvFormatter0 = new BooleanCsvFormatter();
      Integer integer0 = new Integer(2);
      // Undeclared exception!
      try { 
        booleanCsvFormatter0.format(integer0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.lecogiteur.csvbang.formatter.BooleanCsvFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BooleanCsvFormatter booleanCsvFormatter0 = new BooleanCsvFormatter();
      String string0 = booleanCsvFormatter0.format("/_jJ7T=i", "");
      assertEquals("unkowningBoolean", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BooleanCsvFormatter booleanCsvFormatter0 = new BooleanCsvFormatter();
      Locale locale0 = Locale.US;
      booleanCsvFormatter0.setLocal(locale0);
      booleanCsvFormatter0.setPattern("LITTERAL");
      booleanCsvFormatter0.init();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BooleanCsvFormatter booleanCsvFormatter0 = new BooleanCsvFormatter();
      booleanCsvFormatter0.setPattern("LITTERAL");
      booleanCsvFormatter0.init();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BooleanCsvFormatter booleanCsvFormatter0 = new BooleanCsvFormatter();
      booleanCsvFormatter0.setPattern("Litteral");
      booleanCsvFormatter0.init();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BooleanCsvFormatter booleanCsvFormatter0 = new BooleanCsvFormatter();
      booleanCsvFormatter0.setPattern("litteral");
      Locale locale0 = Locale.CANADA;
      booleanCsvFormatter0.setLocal(locale0);
      booleanCsvFormatter0.init();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BooleanCsvFormatter booleanCsvFormatter0 = new BooleanCsvFormatter();
      booleanCsvFormatter0.setPattern("litteral");
      booleanCsvFormatter0.init();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BooleanCsvFormatter booleanCsvFormatter0 = new BooleanCsvFormatter();
      booleanCsvFormatter0.init();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BooleanCsvFormatter booleanCsvFormatter0 = new BooleanCsvFormatter();
      Locale locale0 = Locale.JAPANESE;
      booleanCsvFormatter0.setLocal(locale0);
      booleanCsvFormatter0.setPattern("Litteral");
      booleanCsvFormatter0.init();
  }
}
