/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:26:50 GMT 2022
 */

package com.github.lecogiteur.csvbang.writer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.lecogiteur.csvbang.configuration.CsvBangConfiguration;
import com.github.lecogiteur.csvbang.configuration.CsvFieldConfiguration;
import com.github.lecogiteur.csvbang.file.FileName;
import com.github.lecogiteur.csvbang.pool.CsvFilePool;
import com.github.lecogiteur.csvbang.pool.CsvbangExecutorService;
import com.github.lecogiteur.csvbang.pool.MultiCsvFilePool;
import com.github.lecogiteur.csvbang.writer.AsynchronousCsvWriter;
import com.github.lecogiteur.csvbang.writer.SimpleCsvWriter;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.Delayed;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractWriter_ESTest extends AbstractWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      MultiCsvFilePool multiCsvFilePool0 = new MultiCsvFilePool((CsvBangConfiguration) null, (FileName) null, object0, object0);
      AsynchronousCsvWriter<Constructor<Method>> asynchronousCsvWriter0 = null;
      try {
        asynchronousCsvWriter0 = new AsynchronousCsvWriter<Constructor<Method>>(multiCsvFilePool0, (CsvBangConfiguration) null, (CsvbangExecutorService) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.lecogiteur.csvbang.writer.AbstractWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CsvBangConfiguration csvBangConfiguration0 = new CsvBangConfiguration();
      Character character0 = Character.valueOf('M');
      csvBangConfiguration0.quote = character0;
      SimpleCsvWriter<Delayed> simpleCsvWriter0 = null;
      try {
        simpleCsvWriter0 = new SimpleCsvWriter<Delayed>((CsvFilePool) null, csvBangConfiguration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.lecogiteur.csvbang.writer.AbstractWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CsvBangConfiguration csvBangConfiguration0 = new CsvBangConfiguration();
      LinkedList<CsvFieldConfiguration> linkedList0 = new LinkedList<CsvFieldConfiguration>();
      csvBangConfiguration0.fields = (List<CsvFieldConfiguration>) linkedList0;
      SimpleCsvWriter<Delayed> simpleCsvWriter0 = new SimpleCsvWriter<Delayed>((CsvFilePool) null, csvBangConfiguration0);
      boolean boolean0 = simpleCsvWriter0.isClose();
      assertFalse(boolean0);
  }
}
