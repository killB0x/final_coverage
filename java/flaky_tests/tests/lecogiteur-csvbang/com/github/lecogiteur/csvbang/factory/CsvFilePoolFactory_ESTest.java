/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:43:41 GMT 2022
 */

package com.github.lecogiteur.csvbang.factory;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.lecogiteur.csvbang.configuration.CsvBangConfiguration;
import com.github.lecogiteur.csvbang.factory.CsvFilePoolFactory;
import com.github.lecogiteur.csvbang.pool.CsvFilePool;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CsvFilePoolFactory_ESTest extends CsvFilePoolFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CsvBangConfiguration csvBangConfiguration0 = new CsvBangConfiguration();
      csvBangConfiguration0.isFileByFile = false;
      csvBangConfiguration0.maxFile = 1L;
      csvBangConfiguration0.maxRecordByFile = (long) '\\';
      CsvFilePool csvFilePool0 = CsvFilePoolFactory.createPool(csvBangConfiguration0, "\n", (Object) csvBangConfiguration0, (Object) csvBangConfiguration0);
      assertNotNull(csvFilePool0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CsvBangConfiguration csvBangConfiguration0 = new CsvBangConfiguration();
      csvBangConfiguration0.maxRecordByFile = 0L;
      Object object0 = new Object();
      CsvFilePool csvFilePool0 = CsvFilePoolFactory.createPool(csvBangConfiguration0, "yyyyMMdd", object0, (Object) csvBangConfiguration0);
      assertNotNull(csvFilePool0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CsvBangConfiguration csvBangConfiguration0 = new CsvBangConfiguration();
      csvBangConfiguration0.init();
      MockFile mockFile0 = new MockFile("");
      CsvFilePool csvFilePool0 = CsvFilePoolFactory.createPool(csvBangConfiguration0, (File) mockFile0, (Object) mockFile0, (Object) csvBangConfiguration0);
      assertNotNull(csvFilePool0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CsvBangConfiguration csvBangConfiguration0 = new CsvBangConfiguration();
      csvBangConfiguration0.isFileByFile = false;
      csvBangConfiguration0.maxRecordByFile = (long) '#';
      File file0 = MockFile.createTempFile("wC$Gw@MkGLN", (String) null);
      CsvFilePool csvFilePool0 = CsvFilePoolFactory.createPool(csvBangConfiguration0, file0, (Object) file0, (Object) "wC$Gw@MkGLN");
      assertNotNull(csvFilePool0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CsvBangConfiguration csvBangConfiguration0 = new CsvBangConfiguration();
      csvBangConfiguration0.isFileByFile = false;
      csvBangConfiguration0.maxFile = 1857L;
      csvBangConfiguration0.maxRecordByFile = (long) '#';
      File file0 = MockFile.createTempFile("wC$Gw@MkGLN", (String) null);
      CsvFilePool csvFilePool0 = CsvFilePoolFactory.createPool(csvBangConfiguration0, file0, (Object) file0, (Object) "wC$Gw@MkGLN");
      assertNotNull(csvFilePool0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CsvBangConfiguration csvBangConfiguration0 = new CsvBangConfiguration();
      MockFile mockFile0 = new MockFile("\n");
      Object object0 = new Object();
      csvBangConfiguration0.maxFileSize = 2282L;
      CsvFilePool csvFilePool0 = CsvFilePoolFactory.createPool(csvBangConfiguration0, (File) mockFile0, object0, object0);
      assertNotNull(csvFilePool0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CsvBangConfiguration csvBangConfiguration0 = new CsvBangConfiguration();
      // Undeclared exception!
      try { 
        CsvFilePoolFactory.createPool(csvBangConfiguration0, (File) null, (Object) csvBangConfiguration0, (Object) csvBangConfiguration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.lecogiteur.csvbang.factory.CsvFilePoolFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CsvBangConfiguration csvBangConfiguration0 = new CsvBangConfiguration();
      Object object0 = new Object();
      csvBangConfiguration0.maxFileSize = 0L;
      CsvFilePool csvFilePool0 = CsvFilePoolFactory.createPool(csvBangConfiguration0, "\n", (Object) csvBangConfiguration0, object0);
      assertNotNull(csvFilePool0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CsvFilePoolFactory csvFilePoolFactory0 = new CsvFilePoolFactory();
      CsvBangConfiguration csvBangConfiguration0 = new CsvBangConfiguration();
      // Undeclared exception!
      try { 
        CsvFilePoolFactory.createPool(csvBangConfiguration0, "", (Object) csvFilePoolFactory0, (Object) csvBangConfiguration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.lecogiteur.csvbang.factory.CsvFilePoolFactory", e);
      }
  }
}
