/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:47:19 GMT 2022
 */

package com.github.lecogiteur.csvbang.formatter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.lecogiteur.csvbang.formatter.DateCsvFormatter;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DateCsvFormatter_ESTest extends DateCsvFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateCsvFormatter dateCsvFormatter0 = new DateCsvFormatter();
      dateCsvFormatter0.init();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(3575, 3575, 1, 1, 1, 1);
      String string0 = dateCsvFormatter0.format(mockGregorianCalendar0, "com.github.lecogiteur.csvbang.formatter.DateCsvFormatter");
      assertEquals("01/01/1970", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DateCsvFormatter dateCsvFormatter0 = new DateCsvFormatter();
      String string0 = dateCsvFormatter0.format((Object) null, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DateCsvFormatter dateCsvFormatter0 = new DateCsvFormatter();
      dateCsvFormatter0.init();
      // Undeclared exception!
      try { 
        dateCsvFormatter0.format("&I", "com.github.lecogiteur.csvbang.formatter.DateCsvFormatter");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Date
         //
         verifyException("java.text.DateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DateCsvFormatter dateCsvFormatter0 = new DateCsvFormatter();
      // Undeclared exception!
      try { 
        dateCsvFormatter0.format("&I", "com.github.lecogiteur.csvbang.formatter.DateCsvFormatter");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.lecogiteur.csvbang.formatter.DateCsvFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DateCsvFormatter dateCsvFormatter0 = new DateCsvFormatter();
      String string0 = dateCsvFormatter0.format((Object) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DateCsvFormatter dateCsvFormatter0 = new DateCsvFormatter();
      dateCsvFormatter0.init();
      dateCsvFormatter0.init();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DateCsvFormatter dateCsvFormatter0 = new DateCsvFormatter();
      Locale locale0 = Locale.FRANCE;
      dateCsvFormatter0.setLocal(locale0);
      assertEquals("FR", locale0.getCountry());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DateCsvFormatter dateCsvFormatter0 = new DateCsvFormatter();
      dateCsvFormatter0.setPattern("");
  }
}
