/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 29 07:50:34 GMT 2022
 */

package com.github.lecogiteur.csvbang.writer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.lecogiteur.csvbang.configuration.CsvBangConfiguration;
import com.github.lecogiteur.csvbang.pool.CsvFilePool;
import com.github.lecogiteur.csvbang.pool.CsvbangThreadPoolExecutor;
import com.github.lecogiteur.csvbang.writer.AsynchronousCsvWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AsynchronousCsvWriter_ESTest extends AsynchronousCsvWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CsvBangConfiguration csvBangConfiguration0 = new CsvBangConfiguration();
      CsvbangThreadPoolExecutor csvbangThreadPoolExecutor0 = new CsvbangThreadPoolExecutor(2153);
      AsynchronousCsvWriter<Object> asynchronousCsvWriter0 = null;
      try {
        asynchronousCsvWriter0 = new AsynchronousCsvWriter<Object>((CsvFilePool) null, csvBangConfiguration0, csvbangThreadPoolExecutor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.lecogiteur.csvbang.writer.AbstractWriter", e);
      }
  }
}
