/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 21:05:09 GMT 2022
 */

package com.github.javafaker;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.javafaker.Faker;
import com.github.javafaker.Space;
import com.github.javafaker.service.FakeValuesService;
import com.github.javafaker.service.RandomService;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Space_ESTest extends Space_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      RandomService randomService0 = new RandomService();
      FakeValuesService fakeValuesService0 = new FakeValuesService(locale0, randomService0);
      Faker faker0 = new Faker(fakeValuesService0, randomService0);
      Space space0 = faker0.space();
      // Undeclared exception!
      try { 
        space0.starCluster();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Space space0 = new Space((Faker) null);
      // Undeclared exception!
      try { 
        space0.star();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Space", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Faker faker0 = new Faker();
      Space space0 = faker0.space();
      // Undeclared exception!
      try { 
        space0.planet();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Space space0 = new Space((Faker) null);
      // Undeclared exception!
      try { 
        space0.nebula();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Space", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Space space0 = new Space((Faker) null);
      // Undeclared exception!
      try { 
        space0.nasaSpaceCraft();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Space", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Faker faker0 = new Faker();
      Space space0 = new Space(faker0);
      // Undeclared exception!
      try { 
        space0.moon();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Space space0 = new Space((Faker) null);
      // Undeclared exception!
      try { 
        space0.meteorite();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Space", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Space space0 = new Space(faker0);
      // Undeclared exception!
      try { 
        space0.galaxy();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Space space0 = new Space((Faker) null);
      // Undeclared exception!
      try { 
        space0.distanceMeasurement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Space", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RandomService randomService0 = new RandomService();
      Faker faker0 = new Faker((FakeValuesService) null, randomService0);
      Space space0 = new Space(faker0);
      // Undeclared exception!
      try { 
        space0.constellation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Faker", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Space space0 = new Space((Faker) null);
      // Undeclared exception!
      try { 
        space0.company();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Space", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Space space0 = new Space((Faker) null);
      // Undeclared exception!
      try { 
        space0.agencyAbbreviation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Space", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Space space0 = new Space((Faker) null);
      // Undeclared exception!
      try { 
        space0.agency();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Space", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Faker faker0 = new Faker();
      Space space0 = new Space(faker0);
      // Undeclared exception!
      try { 
        space0.constellation();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Space space0 = new Space((Faker) null);
      // Undeclared exception!
      try { 
        space0.planet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Space", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Faker faker0 = new Faker();
      Space space0 = faker0.space();
      // Undeclared exception!
      try { 
        space0.agency();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Faker faker0 = new Faker();
      Space space0 = faker0.space();
      // Undeclared exception!
      try { 
        space0.agencyAbbreviation();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Faker faker0 = new Faker();
      Space space0 = new Space(faker0);
      // Undeclared exception!
      try { 
        space0.meteorite();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Space space0 = new Space((Faker) null);
      // Undeclared exception!
      try { 
        space0.galaxy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Space", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Faker faker0 = new Faker();
      Space space0 = faker0.space();
      // Undeclared exception!
      try { 
        space0.nebula();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Faker faker0 = new Faker();
      Space space0 = new Space(faker0);
      // Undeclared exception!
      try { 
        space0.star();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Faker faker0 = new Faker();
      Space space0 = faker0.space();
      // Undeclared exception!
      try { 
        space0.distanceMeasurement();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Faker faker0 = new Faker();
      Space space0 = new Space(faker0);
      // Undeclared exception!
      try { 
        space0.nasaSpaceCraft();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Faker faker0 = new Faker();
      Space space0 = new Space(faker0);
      // Undeclared exception!
      try { 
        space0.company();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Space space0 = new Space((Faker) null);
      // Undeclared exception!
      try { 
        space0.moon();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Space", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Space space0 = new Space((Faker) null);
      // Undeclared exception!
      try { 
        space0.starCluster();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Space", e);
      }
  }
}
