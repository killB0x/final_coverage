/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 20:03:34 GMT 2022
 */

package com.github.javafaker;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.javafaker.Faker;
import com.github.javafaker.Lorem;
import com.github.javafaker.service.FakeValuesService;
import com.github.javafaker.service.RandomService;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Lorem_ESTest extends Lorem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.fixedString(0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      RandomService randomService0 = new RandomService();
      FakeValuesService fakeValuesService0 = new FakeValuesService(locale0, randomService0);
      randomService0.nextLong();
      Faker faker0 = new Faker(fakeValuesService0, randomService0);
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      try { 
        lorem0.paragraph();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Faker faker0 = new Faker(locale0);
      Lorem lorem0 = new Lorem(faker0);
      String string0 = lorem0.characters((-1322), false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      RandomService randomService0 = new RandomService();
      FakeValuesService fakeValuesService0 = new FakeValuesService(locale0, randomService0);
      Faker faker0 = new Faker(fakeValuesService0, randomService0);
      Lorem lorem0 = faker0.lorem();
      String string0 = lorem0.characters(127, (-2023), true, true);
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      String string0 = lorem0.characters(0, 133, false, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      String string0 = lorem0.characters((-2820), (-1756), true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      String string0 = lorem0.characters(53, 50);
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      Faker faker0 = new Faker(locale0);
      Lorem lorem0 = faker0.lorem();
      String string0 = lorem0.characters(0, (-30));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      String string0 = lorem0.characters(94);
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = faker0.lorem();
      Random.setNextRandom((-825));
      char char0 = lorem0.character(false);
      assertEquals('7', char0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      char char0 = lorem0.character(true);
      assertEquals('a', char0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Random.setNextRandom((-1906));
      Locale locale0 = Locale.KOREAN;
      Faker faker0 = new Faker(locale0);
      Lorem lorem0 = faker0.lorem();
      char char0 = lorem0.character();
      assertEquals('8', char0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.words(898);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.words();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.word();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.sentences(209);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.sentences((-1652));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1652
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.sentence((-2127));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.sentence();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.paragraphs(928);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.paragraphs((-6));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -6
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.paragraph(0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.paragraph((-25));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -25
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.paragraph();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      String string0 = lorem0.characters(5175, false);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters((-1695), (-1695), false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      try { 
        lorem0.characters(3518, 3518, false, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      lorem0.characters(89999, (-2204), true);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters((-1695), (-1695), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.characters(1, 1, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters((-1099), (-1099));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      try { 
        lorem0.characters((-664), (-664));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = faker0.lorem();
      lorem0.characters(4760, true);
      String string0 = lorem0.characters();
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.character();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.sentences(1168);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.sentence((-2127), (-2127));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.words(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      List<String> list0 = lorem0.words((-1758));
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = faker0.lorem();
      String string0 = lorem0.characters(97, true, true);
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters(1168, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = faker0.lorem();
      String string0 = lorem0.characters(97, false, false);
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      RandomService randomService0 = new RandomService();
      FakeValuesService fakeValuesService0 = new FakeValuesService(locale0, randomService0);
      Faker faker0 = new Faker(fakeValuesService0, randomService0);
      Lorem lorem0 = faker0.lorem();
      String string0 = lorem0.characters((-217), true, false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.word();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.character(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.sentence();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.paragraph(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.characters(244, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.sentence(243);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.fixedString(264);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.fixedString((-1363));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Lorem lorem0 = new Lorem((Faker) null);
      // Undeclared exception!
      try { 
        lorem0.paragraphs(1168);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      List<String> list0 = lorem0.paragraphs(0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      List<String> list0 = lorem0.sentences(0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      // Undeclared exception!
      try { 
        lorem0.sentence(0, 0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("com.github.javafaker.Lorem", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      lorem0.characters(40000, false, false);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      String string0 = lorem0.characters((-2321));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      Faker faker0 = new Faker(locale0);
      Lorem lorem0 = faker0.lorem();
      char char0 = lorem0.character();
      assertEquals('a', char0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      String string0 = lorem0.characters();
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = faker0.lorem();
      String string0 = lorem0.characters(7000, 217, false, true);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = new Lorem(faker0);
      String string0 = lorem0.characters(5316);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      lorem0.characters(4755, 215, false);
      String string0 = lorem0.characters(true);
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = new Lorem(faker0);
      String string0 = lorem0.characters(true);
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      try { 
        lorem0.words();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Faker faker0 = new Faker();
      Lorem lorem0 = faker0.lorem();
      // Undeclared exception!
      lorem0.characters(89999, (-1));
  }
}
