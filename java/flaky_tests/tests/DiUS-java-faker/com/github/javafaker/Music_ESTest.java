/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 20:57:36 GMT 2022
 */

package com.github.javafaker;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.javafaker.Faker;
import com.github.javafaker.Music;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Music_ESTest extends Music_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Music music0 = faker0.music();
      String string0 = music0.key();
      assertEquals("Cb", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Music music0 = faker0.music();
      String string0 = music0.chord();
      assertEquals("Cb", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-1L));
      Faker faker0 = new Faker(mockRandom0);
      Music music0 = new Music(faker0);
      // Undeclared exception!
      try { 
        music0.instrument();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Music music0 = new Music((Faker) null);
      // Undeclared exception!
      try { 
        music0.genre();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Music", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Music music0 = new Music((Faker) null);
      // Undeclared exception!
      try { 
        music0.key();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Music", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Faker faker0 = new Faker();
      Music music0 = faker0.music();
      // Undeclared exception!
      try { 
        music0.genre();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Music music0 = new Music((Faker) null);
      // Undeclared exception!
      try { 
        music0.instrument();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Music", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Music music0 = new Music((Faker) null);
      // Undeclared exception!
      try { 
        music0.chord();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Music", e);
      }
  }
}
