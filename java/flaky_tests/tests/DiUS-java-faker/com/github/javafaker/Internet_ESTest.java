/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 19:44:03 GMT 2022
 */

package com.github.javafaker;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.javafaker.Faker;
import com.github.javafaker.Internet;
import com.github.javafaker.service.RandomService;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Internet_ESTest extends Internet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      RandomService randomService0 = new RandomService();
      Faker faker0 = new Faker(locale0, randomService0);
      randomService0.nextLong();
      Internet internet0 = faker0.internet();
      // Undeclared exception!
      try { 
        internet0.userAgentAny();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = faker0.internet();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add((String) null);
      linkedList0.add((String) null);
      String string0 = internet0.slug((List<String>) linkedList0, (String) null);
      assertEquals("null_null", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Faker faker0 = new Faker();
      Random.setNextRandom(10);
      Internet internet0 = new Internet(faker0);
      String string0 = internet0.publicIpV4Address();
      assertEquals("10.10.10.10", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Faker faker0 = new Faker(mockRandom0);
      Internet internet0 = faker0.internet();
      String string0 = internet0.macAddress("1111:1111:1111:1111:1111:1111:1111:1111/2");
      assertEquals("1111:1111:1111:1111:1111:1111:1111:1111/2", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("");
      MockRandom mockRandom0 = new MockRandom(887L);
      RandomService randomService0 = new RandomService(mockRandom0);
      Faker faker0 = new Faker(locale0, randomService0);
      Internet internet0 = new Internet(faker0);
      String string0 = internet0.password(572, 192, false, true, true);
      assertEquals("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = new Internet(faker0);
      // Undeclared exception!
      try { 
        internet0.password(0, 1058, true, true, false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Faker faker0 = new Faker(mockRandom0);
      Internet internet0 = new Internet(faker0);
      Integer integer0 = new Integer((-3423));
      Integer integer1 = new Integer(0);
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        internet0.image(integer0, integer1, boolean0, ",W`|");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Faker faker0 = new Faker(mockRandom0);
      Internet internet0 = new Internet(faker0);
      String string0 = internet0.password((-3423), 0, true, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      RandomService randomService0 = new RandomService();
      Faker faker0 = new Faker(locale0, randomService0);
      randomService0.nextLong();
      Internet internet0 = faker0.internet();
      String string0 = internet0.password(0, 2107, true);
      assertEquals("b", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = new Internet(faker0);
      String string0 = internet0.password((-1), (-2), false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      MockRandom mockRandom0 = new MockRandom();
      Faker faker0 = new Faker(locale0, mockRandom0);
      Internet internet0 = faker0.internet();
      String string0 = internet0.password(1046, 26);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Faker faker0 = new Faker(mockRandom0);
      Internet internet0 = new Internet(faker0);
      String string0 = internet0.password(0, 89999);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = faker0.internet();
      String string0 = internet0.password();
      assertEquals("aaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = faker0.internet();
      String string0 = internet0.macAddress();
      assertEquals("00:00:00:00:00:00", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = faker0.internet();
      String string0 = internet0.ipV4Cidr();
      assertEquals("2.2.2.2/1", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = new Internet(faker0);
      String string0 = internet0.ipV4Address();
      assertEquals("2.2.2.2", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = new Internet(faker0);
      // Undeclared exception!
      try { 
        internet0.url();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = faker0.internet();
      // Undeclared exception!
      try { 
        internet0.slug((List<String>) null, "[}q z _g3!");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = faker0.internet();
      // Undeclared exception!
      try { 
        internet0.slug();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = faker0.internet();
      // Undeclared exception!
      try { 
        internet0.safeEmailAddress("00000000-0100-4000-8200-000003000000");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = faker0.internet();
      // Undeclared exception!
      try { 
        internet0.safeEmailAddress();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.publicIpV4Address();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.privateIpV4Address();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.password(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = faker0.internet();
      // Undeclared exception!
      internet0.password(50000, 54, true, true, true);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = faker0.internet();
      // Undeclared exception!
      internet0.password(9999, 39, true, true);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.password((-3610), (-3610), true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = faker0.internet();
      // Undeclared exception!
      try { 
        internet0.password(18, 18, true, true);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.password(2400, 2400, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = faker0.internet();
      // Undeclared exception!
      try { 
        internet0.password((-2240), (-2240), false);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.password(1933, 1933);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = new Internet(faker0);
      // Undeclared exception!
      try { 
        internet0.password(8, 8);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        internet0.image((Integer) null, (Integer) null, boolean0, "00000000-0100-4000-8200-000003000000");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.image();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = faker0.internet();
      // Undeclared exception!
      try { 
        internet0.image();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = faker0.internet();
      // Undeclared exception!
      try { 
        internet0.emailAddress("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = new Internet(faker0);
      // Undeclared exception!
      try { 
        internet0.emailAddress();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = new Internet(faker0);
      // Undeclared exception!
      try { 
        internet0.domainWord();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = faker0.internet();
      // Undeclared exception!
      try { 
        internet0.domainSuffix();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = faker0.internet();
      // Undeclared exception!
      try { 
        internet0.domainName();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = faker0.internet();
      // Undeclared exception!
      try { 
        internet0.avatar();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = new Internet(faker0);
      // Undeclared exception!
      try { 
        internet0.userAgent((Internet.UserAgent) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Faker faker0 = new Faker(mockRandom0);
      Internet internet0 = new Internet(faker0);
      String string0 = internet0.ipV6Address();
      assertEquals("0000:0000:0000:0000:0000:0000:0000:0000", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.ipV6Address();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = faker0.internet();
      internet0.uuid();
      String string0 = internet0.password(326, (-2402), true, true, true);
      assertEquals("eeee%eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.password((-2501), (-2501), true, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = new Internet(faker0);
      String string0 = internet0.password((-31), 1058, true, false, false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.domainWord();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.ipV4Address();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Internet.UserAgent internet_UserAgent0 = Internet.UserAgent.CHROME;
      String string0 = internet_UserAgent0.toString();
      assertEquals("chrome", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = new Internet(faker0);
      // Undeclared exception!
      internet0.password(85000, (-849), true);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      Internet.UserAgent internet_UserAgent0 = Internet.UserAgent.INTERNET_EXPLORER;
      // Undeclared exception!
      try { 
        internet0.userAgent(internet_UserAgent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.slug((List<String>) null, "H3u#Fr");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = faker0.internet();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = internet0.slug((List<String>) linkedList0, (String) null);
      assertFalse(linkedList0.contains(string0));
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = new Internet(faker0);
      String string0 = internet0.ipV6Cidr();
      assertEquals("0000:0000:0000:0000:0000:0000:0000:0000/1", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Faker faker0 = new Faker();
      Random.setNextRandom(192);
      Internet internet0 = new Internet(faker0);
      // Undeclared exception!
      internet0.publicIpV4Address();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = new Internet(faker0);
      String string0 = internet0.publicIpV4Address();
      assertEquals("0.0.0.0", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = new Internet(faker0);
      internet0.uuid();
      internet0.uuid();
      String string0 = internet0.privateIpV4Address();
      assertEquals("192.168.8.8", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = new Internet(faker0);
      internet0.uuid();
      String string0 = internet0.privateIpV4Address();
      assertEquals("172.20.4.4", string0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Faker faker0 = new Faker();
      Random.setNextRandom(2);
      Internet internet0 = new Internet(faker0);
      String string0 = internet0.privateIpV4Address();
      assertEquals("169.254.2.2", string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.macAddress("zMJP~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = faker0.internet();
      String string0 = internet0.macAddress((String) null);
      assertEquals("00:00:00:00:00:00", string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = faker0.internet();
      String string0 = internet0.password(9982, 39, true, true);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = new Internet(faker0);
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        internet0.image((Integer) null, (Integer) null, boolean0, "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.avatar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.domainSuffix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = faker0.internet();
      String string0 = internet0.password(true);
      assertEquals("aaaaaaaa", string0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.emailAddress("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.safeEmailAddress("lqnT6xP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.macAddress();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.password();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.domainName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = new Internet(faker0);
      String string0 = internet0.privateIpV4Address();
      assertEquals("10.0.0.0", string0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.emailAddress();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.safeEmailAddress();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Faker faker0 = new Faker();
      Internet internet0 = faker0.internet();
      internet0.uuid();
      internet0.password(9982, 39, true, true);
      // Undeclared exception!
      internet0.password(true);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.ipV4Cidr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.ipV6Cidr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Internet internet0 = faker0.internet();
      // Undeclared exception!
      internet0.password(85000, 153);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.userAgentAny();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.url();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Internet internet0 = new Internet((Faker) null);
      // Undeclared exception!
      try { 
        internet0.slug();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Internet", e);
      }
  }
}
