/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 20:12:58 GMT 2022
 */

package com.github.javafaker.idnumbers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.javafaker.Faker;
import com.github.javafaker.idnumbers.SvSEIdNumber;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SvSEIdNumber_ESTest extends SvSEIdNumber_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SvSEIdNumber svSEIdNumber0 = new SvSEIdNumber();
      boolean boolean0 = svSEIdNumber0.validSwedishSsn("######-####");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SvSEIdNumber svSEIdNumber0 = new SvSEIdNumber();
      boolean boolean0 = svSEIdNumber0.validSwedishSsn("stock.symbol_nsdq");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SvSEIdNumber svSEIdNumber0 = new SvSEIdNumber();
      // Undeclared exception!
      try { 
        svSEIdNumber0.validSwedishSsn((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.idnumbers.SvSEIdNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SvSEIdNumber svSEIdNumber0 = new SvSEIdNumber();
      // Undeclared exception!
      try { 
        svSEIdNumber0.getValidSsn((Faker) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SvSEIdNumber svSEIdNumber0 = new SvSEIdNumber();
      Faker faker0 = new Faker();
      String string0 = svSEIdNumber0.getInvalidSsn(faker0);
      assertEquals("121212-1212", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SvSEIdNumber svSEIdNumber0 = new SvSEIdNumber();
      Faker faker0 = Faker.instance();
      // Undeclared exception!
      svSEIdNumber0.getValidSsn(faker0);
  }
}
