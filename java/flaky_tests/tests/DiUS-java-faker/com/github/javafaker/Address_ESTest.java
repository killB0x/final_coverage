/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 20:43:59 GMT 2022
 */

package com.github.javafaker;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.javafaker.Address;
import com.github.javafaker.Faker;
import com.github.javafaker.service.FakeValuesService;
import com.github.javafaker.service.RandomService;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Address_ESTest extends Address_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      Faker faker0 = new Faker(mockRandom0);
      mockRandom0.nextFloat();
      Address address0 = faker0.address();
      String string0 = address0.longitude();
      assertEquals("-144.00000", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Locale locale0 = new Locale("");
      MockRandom mockRandom0 = new MockRandom(1L);
      RandomService randomService0 = new RandomService(mockRandom0);
      FakeValuesService fakeValuesService0 = new FakeValuesService(locale0, randomService0);
      Faker faker0 = new Faker(fakeValuesService0, randomService0);
      mockRandom0.nextLong();
      Address address0 = faker0.address();
      String string0 = address0.latitude();
      assertEquals("-72.000000", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Faker faker0 = new Faker();
      Address address0 = faker0.address();
      String string0 = address0.streetAddressNumber();
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = new Address(faker0);
      String string0 = address0.longitude();
      assertEquals("-180.00000", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.zipCodeByState("0936nkSn");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = faker0.address();
      // Undeclared exception!
      try { 
        address0.zipCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Faker faker0 = new Faker();
      Address address0 = new Address(faker0);
      // Undeclared exception!
      try { 
        address0.timeZone();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = new Address(faker0);
      // Undeclared exception!
      try { 
        address0.streetSuffix();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.streetPrefix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = new Address(faker0);
      // Undeclared exception!
      try { 
        address0.streetName();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.streetAddress(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = new Address(faker0);
      // Undeclared exception!
      try { 
        address0.streetAddress(false);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = faker0.address();
      // Undeclared exception!
      try { 
        address0.streetAddress();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = new Address(faker0);
      // Undeclared exception!
      try { 
        address0.stateAbbr();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.state();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = new Address(faker0);
      // Undeclared exception!
      try { 
        address0.secondaryAddress();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = new Address(faker0);
      // Undeclared exception!
      try { 
        address0.postcode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = new Address(faker0);
      // Undeclared exception!
      try { 
        address0.lastName();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = faker0.address();
      // Undeclared exception!
      try { 
        address0.fullAddress();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = new Address(faker0);
      // Undeclared exception!
      try { 
        address0.firstName();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = faker0.address();
      // Undeclared exception!
      try { 
        address0.countyByZipCode((String) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Faker faker0 = new Faker();
      Address address0 = new Address(faker0);
      // Undeclared exception!
      try { 
        address0.countryCode();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = faker0.address();
      // Undeclared exception!
      try { 
        address0.country();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = new Address(faker0);
      // Undeclared exception!
      try { 
        address0.citySuffix();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = faker0.address();
      // Undeclared exception!
      try { 
        address0.cityPrefix();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = new Address(faker0);
      // Undeclared exception!
      try { 
        address0.cityName();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = faker0.address();
      // Undeclared exception!
      try { 
        address0.city();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Faker faker0 = new Faker();
      Address address0 = new Address(faker0);
      // Undeclared exception!
      try { 
        address0.buildingNumber();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Faker faker0 = new Faker();
      Address address0 = faker0.address();
      // Undeclared exception!
      try { 
        address0.streetPrefix();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.streetAddress();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.postcode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.stateAbbr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = faker0.address();
      // Undeclared exception!
      try { 
        address0.state();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.latitude();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.streetName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.country();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.cityPrefix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.fullAddress();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.citySuffix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.city();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.timeZone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.zipCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.streetAddressNumber();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.firstName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.streetSuffix();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Faker faker0 = Faker.instance();
      Address address0 = faker0.address();
      // Undeclared exception!
      try { 
        address0.zipCodeByState("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.buildingNumber();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.cityName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.lastName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.secondaryAddress();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.countyByZipCode((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.longitude();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Address address0 = new Address((Faker) null);
      // Undeclared exception!
      try { 
        address0.countryCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Address", e);
      }
  }
}
