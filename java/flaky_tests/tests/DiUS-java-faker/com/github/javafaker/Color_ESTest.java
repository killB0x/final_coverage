/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 01 20:40:24 GMT 2022
 */

package com.github.javafaker;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.javafaker.Color;
import com.github.javafaker.Faker;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Color_ESTest extends Color_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Color color0 = new Color((Faker) null);
      // Undeclared exception!
      try { 
        color0.name();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Color", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Color color0 = new Color((Faker) null);
      // Undeclared exception!
      try { 
        color0.hex(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Color", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Locale locale0 = new Locale("");
      Faker faker0 = new Faker(locale0);
      Color color0 = new Color(faker0);
      String string0 = color0.hex(true);
      assertEquals("#000000", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Locale locale0 = new Locale("");
      Faker faker0 = new Faker(locale0);
      Color color0 = new Color(faker0);
      String string0 = color0.hex();
      assertEquals("#000000", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Locale locale0 = new Locale("");
      Faker faker0 = new Faker(locale0);
      Color color0 = new Color(faker0);
      String string0 = color0.hex(false);
      assertEquals("000000", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Locale locale0 = new Locale("");
      Faker faker0 = new Faker(locale0);
      Color color0 = new Color(faker0);
      // Undeclared exception!
      try { 
        color0.name();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/yaml/snakeyaml/Yaml
         //
         verifyException("com.github.javafaker.service.FakeValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Color color0 = new Color((Faker) null);
      // Undeclared exception!
      try { 
        color0.hex();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.javafaker.Color", e);
      }
  }
}
