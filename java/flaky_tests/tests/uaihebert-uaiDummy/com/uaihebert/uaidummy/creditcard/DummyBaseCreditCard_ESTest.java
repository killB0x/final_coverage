/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 01:58:35 GMT 2022
 */

package com.uaihebert.uaidummy.creditcard;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.uaihebert.uaidummy.creditcard.ChinaUnionPay;
import com.uaihebert.uaidummy.creditcard.DinersClubInternational;
import com.uaihebert.uaidummy.creditcard.DinersClubUsaAndCanada;
import com.uaihebert.uaidummy.creditcard.DummyBaseCreditCard;
import com.uaihebert.uaidummy.creditcard.InterPaymentTM;
import com.uaihebert.uaidummy.creditcard.Jcb;
import com.uaihebert.uaidummy.creditcard.Maestro;
import com.uaihebert.uaidummy.creditcard.Visa;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DummyBaseCreditCard_ESTest extends DummyBaseCreditCard_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DinersClubInternational dinersClubInternational0 = new DinersClubInternational();
      DummyBaseCreditCard.setDefaultExpirationDateMask("");
      // Undeclared exception!
      try { 
        dinersClubInternational0.getExpirationYear();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.text.ParseException: Unparseable date: \"02/14\"
         //
         verifyException("com.uaihebert.uaidummy.creditcard.ExpirationDateUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ChinaUnionPay chinaUnionPay0 = new ChinaUnionPay();
      DummyBaseCreditCard.setDefaultExpirationDateMask((String) null);
      // Undeclared exception!
      try { 
        chinaUnionPay0.getExpirationYear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DinersClubInternational dinersClubInternational0 = new DinersClubInternational();
      DummyBaseCreditCard.setDefaultExpirationDateMask("g");
      // Undeclared exception!
      try { 
        dinersClubInternational0.getExpirationYear();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'g'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DinersClubInternational dinersClubInternational0 = new DinersClubInternational();
      DummyBaseCreditCard.setDefaultExpirationDateMask("");
      // Undeclared exception!
      try { 
        dinersClubInternational0.getExpirationMonth();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.text.ParseException: Unparseable date: \"02/14\"
         //
         verifyException("com.uaihebert.uaidummy.creditcard.ExpirationDateUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DinersClubInternational dinersClubInternational0 = new DinersClubInternational();
      DummyBaseCreditCard.setDefaultExpirationDateMask((String) null);
      // Undeclared exception!
      try { 
        dinersClubInternational0.getExpirationMonth();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DinersClubInternational dinersClubInternational0 = new DinersClubInternational();
      DummyBaseCreditCard.setDefaultExpirationDateMask("com.uaihebert.uaidummy.creditcard.DummyBaseCreditCard");
      // Undeclared exception!
      try { 
        dinersClubInternational0.getExpirationMonth();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'c'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Visa visa0 = new Visa();
      assertEquals("4000000000000002", visa0.getNumber());
      
      DinersClubInternational dinersClubInternational0 = new DinersClubInternational();
      assertEquals("3330", dinersClubInternational0.getLastFourDigits());
      assertEquals("666", dinersClubInternational0.getSecurityNumber());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InterPaymentTM interPaymentTM0 = new InterPaymentTM();
      interPaymentTM0.getExpirationDate();
      assertEquals("636000000000000001", interPaymentTM0.getNumber());
      assertEquals("333", interPaymentTM0.getSecurityNumber());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Maestro maestro0 = new Maestro();
      String string0 = maestro0.getNumber();
      assertEquals("56000000000000002", string0);
      assertEquals("333", maestro0.getSecurityNumber());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DinersClubUsaAndCanada dinersClubUsaAndCanada0 = new DinersClubUsaAndCanada();
      dinersClubUsaAndCanada0.getExpirationYear();
      assertEquals("333", dinersClubUsaAndCanada0.getSecurityNumber());
      assertEquals("5400000000000005", dinersClubUsaAndCanada0.getNumber());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Jcb jcb0 = new Jcb();
      String string0 = jcb0.getSecurityNumber();
      assertEquals("3528000000000007", jcb0.getNumber());
      assertEquals("333", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DinersClubInternational dinersClubInternational0 = new DinersClubInternational();
      dinersClubInternational0.getExpirationMonth();
      assertEquals("333", dinersClubInternational0.getSecurityNumber());
      assertEquals("30900000000005", dinersClubInternational0.getNumber());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DummyBaseCreditCard.setDefaultExpirationDateMask("");
      InterPaymentTM interPaymentTM0 = new InterPaymentTM();
      interPaymentTM0.getExpirationDate();
      assertEquals("636000000000000001", interPaymentTM0.getNumber());
      assertEquals("333", interPaymentTM0.getSecurityNumber());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Visa visa0 = new Visa();
      visa0.getLastFourDigits();
      assertEquals("333", visa0.getSecurityNumber());
      assertEquals("4000000000000002", visa0.getNumber());
  }
}
