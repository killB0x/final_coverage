/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 19:17:23 GMT 2022
 */

package com.github.echisan.wbp4j.entity.upload;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.echisan.wbp4j.entity.upload.Pic_1;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Pic_1_ESTest extends Pic_1_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setWidth(1160);
      int int0 = pic_1_0.getWidth();
      assertEquals(1160, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setWidth((-1));
      int int0 = pic_1_0.getWidth();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setSize((-887));
      int int0 = pic_1_0.getSize();
      assertEquals((-887), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setRet(4563);
      int int0 = pic_1_0.getRet();
      assertEquals(4563, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setRet((-486));
      int int0 = pic_1_0.getRet();
      assertEquals((-486), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setPid(", ret=");
      String string0 = pic_1_0.getPid();
      assertEquals(", ret=", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setName("com.github.echisan.wbp4j.entity.upload.Pic_1");
      String string0 = pic_1_0.getName();
      assertEquals("com.github.echisan.wbp4j.entity.upload.Pic_1", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setHeight(39);
      int int0 = pic_1_0.getHeight();
      assertEquals(39, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setHeight((-1177));
      int int0 = pic_1_0.getHeight();
      assertEquals((-1177), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setName("");
      String string0 = pic_1_0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      int int0 = pic_1_0.getWidth();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      int int0 = pic_1_0.getHeight();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setSize(608);
      int int0 = pic_1_0.getSize();
      assertEquals(608, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      int int0 = pic_1_0.getSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      String string0 = pic_1_0.getPid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      String string0 = pic_1_0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      int int0 = pic_1_0.getRet();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setPid("");
      String string0 = pic_1_0.getPid();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Pic_1 pic_1_0 = new Pic_1();
      String string0 = pic_1_0.toString();
      assertEquals("Pic_1{width=0, size=0, ret=0, height=0, name='null', pid='null'}", string0);
  }
}
