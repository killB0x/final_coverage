/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 19:07:36 GMT 2022
 */

package com.github.echisan.wbp4j.interceptor;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.echisan.wbp4j.LoginRequest;
import com.github.echisan.wbp4j.SzvoneLoginRequest;
import com.github.echisan.wbp4j.UploadAttributes;
import com.github.echisan.wbp4j.WbpUploadResponse;
import com.github.echisan.wbp4j.cache.CookieContext;
import com.github.echisan.wbp4j.interceptor.LoginInterceptor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LoginInterceptor_ESTest extends LoginInterceptor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LoginInterceptor loginInterceptor0 = new LoginInterceptor((LoginRequest) null);
      // Undeclared exception!
      try { 
        loginInterceptor0.processBefore((UploadAttributes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.echisan.wbp4j.interceptor.LoginInterceptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CookieContext cookieContext0 = new CookieContext();
      SzvoneLoginRequest szvoneLoginRequest0 = new SzvoneLoginRequest(cookieContext0);
      LoginInterceptor loginInterceptor0 = new LoginInterceptor(szvoneLoginRequest0);
      WbpUploadResponse wbpUploadResponse0 = new WbpUploadResponse();
      loginInterceptor0.processAfter(wbpUploadResponse0);
      assertNull(wbpUploadResponse0.getMessage());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LoginInterceptor loginInterceptor0 = new LoginInterceptor((LoginRequest) null);
      UploadAttributes uploadAttributes0 = new UploadAttributes();
      boolean boolean0 = loginInterceptor0.processBefore(uploadAttributes0);
      assertTrue(boolean0);
  }
}
