/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 18:51:47 GMT 2022
 */

package com.github.echisan.wbp4j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.echisan.wbp4j.WbpLoginRequest;
import com.github.echisan.wbp4j.cache.CookieContext;
import com.github.echisan.wbp4j.http.DefaultWbpHttpRequest;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class WbpLoginRequest_ESTest extends WbpLoginRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultWbpHttpRequest defaultWbpHttpRequest0 = new DefaultWbpHttpRequest(hashMap0);
      CookieContext cookieContext0 = new CookieContext();
      WbpLoginRequest wbpLoginRequest0 = new WbpLoginRequest(defaultWbpHttpRequest0, cookieContext0);
      Map<String, String> map0 = wbpLoginRequest0.getDefaultLoginHeader();
      WbpLoginRequest wbpLoginRequest1 = new WbpLoginRequest(map0, map0, hashMap0, defaultWbpHttpRequest0);
      assertNull(wbpLoginRequest1.getPassword());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultWbpHttpRequest defaultWbpHttpRequest0 = new DefaultWbpHttpRequest(hashMap0);
      CookieContext cookieContext0 = new CookieContext();
      WbpLoginRequest wbpLoginRequest0 = new WbpLoginRequest(defaultWbpHttpRequest0, cookieContext0);
      Map<String, String> map0 = wbpLoginRequest0.getDefaultLoginHeader();
      Map<String, String> map1 = defaultWbpHttpRequest0.getHeader();
      WbpLoginRequest wbpLoginRequest1 = new WbpLoginRequest(map1, map0, hashMap0, defaultWbpHttpRequest0);
      assertNull(wbpLoginRequest1.getPassword());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CookieContext cookieContext0 = new CookieContext();
      WbpLoginRequest wbpLoginRequest0 = new WbpLoginRequest(cookieContext0);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://login.sina.com.cn/sso/prelogin.php?entry=weibo&su=SsG*@&rsakt=mod&checkpin=1&client=ssologin.js(v1.4.19)&_=1392409281320");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "SsG*@");
      wbpLoginRequest0.setUsernamePassword("SsG*@", "SsG*@");
      // Undeclared exception!
      try { 
        wbpLoginRequest0.login();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/alibaba/fastjson/JSON
         //
         verifyException("com.github.echisan.wbp4j.WbpLoginRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CookieContext cookieContext0 = new CookieContext();
      WbpLoginRequest wbpLoginRequest0 = new WbpLoginRequest(cookieContext0);
      try { 
        wbpLoginRequest0.login();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // username or password cannot be null or empty.
         //
         verifyException("com.github.echisan.wbp4j.WbpLoginRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      DefaultWbpHttpRequest defaultWbpHttpRequest0 = new DefaultWbpHttpRequest();
      WbpLoginRequest wbpLoginRequest0 = new WbpLoginRequest(hashMap0, hashMap0, hashMap0, defaultWbpHttpRequest0);
      wbpLoginRequest0.setUsernamePassword("su", "su");
      hashMap0.put("su", "su");
      // Undeclared exception!
      try { 
        wbpLoginRequest0.login();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }
}
