/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 19:19:27 GMT 2022
 */

package com.github.echisan.wbp4j.entity.upload;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.echisan.wbp4j.entity.upload.Data;
import com.github.echisan.wbp4j.entity.upload.Pics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Data_ESTest extends Data_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Data data0 = new Data();
      Pics pics0 = new Pics();
      data0.setPics(pics0);
      Pics pics1 = data0.getPics();
      assertSame(pics1, pics0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Data data0 = new Data();
      data0.setData("Data{count=102, data='null', pics=Pics{pic_1=Pic_1{width=-3664, size=39, ret=0, height=0, name='null', pid=', pics='}}}");
      String string0 = data0.getData();
      assertEquals("Data{count=102, data='null', pics=Pics{pic_1=Pic_1{width=-3664, size=39, ret=0, height=0, name='null', pid=', pics='}}}", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Data data0 = new Data();
      data0.setData("");
      String string0 = data0.getData();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Data data0 = new Data();
      data0.setCount(102);
      int int0 = data0.getCount();
      assertEquals(102, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Data data0 = new Data();
      data0.setCount((-975));
      int int0 = data0.getCount();
      assertEquals((-975), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Data data0 = new Data();
      String string0 = data0.toString();
      assertEquals("Data{count=0, data='null', pics=null}", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Data data0 = new Data();
      int int0 = data0.getCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Data data0 = new Data();
      String string0 = data0.getData();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Data data0 = new Data();
      Pics pics0 = data0.getPics();
      assertNull(pics0);
  }
}
