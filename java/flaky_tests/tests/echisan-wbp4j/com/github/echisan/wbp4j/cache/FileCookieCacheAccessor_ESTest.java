/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 18:48:30 GMT 2022
 */

package com.github.echisan.wbp4j.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.echisan.wbp4j.cache.FileCookieCacheAccessor;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileCookieCacheAccessor_ESTest extends FileCookieCacheAccessor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileCookieCacheAccessor fileCookieCacheAccessor0 = new FileCookieCacheAccessor();
      // Undeclared exception!
      try { 
        fileCookieCacheAccessor0.saveCookie((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileCookieCacheAccessor fileCookieCacheAccessor0 = new FileCookieCacheAccessor("");
      try { 
        fileCookieCacheAccessor0.saveCookie("h(%m?%mc\"");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileCookieCacheAccessor fileCookieCacheAccessor0 = new FileCookieCacheAccessor((String) null);
      // Undeclared exception!
      try { 
        fileCookieCacheAccessor0.getCookie();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileCookieCacheAccessor fileCookieCacheAccessor0 = new FileCookieCacheAccessor("");
      try { 
        fileCookieCacheAccessor0.getCookie();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileCookieCacheAccessor fileCookieCacheAccessor0 = new FileCookieCacheAccessor((String) null);
      // Undeclared exception!
      try { 
        fileCookieCacheAccessor0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileCookieCacheAccessor fileCookieCacheAccessor0 = new FileCookieCacheAccessor();
      fileCookieCacheAccessor0.saveCookie("");
      String string0 = fileCookieCacheAccessor0.getCookie();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileCookieCacheAccessor fileCookieCacheAccessor0 = new FileCookieCacheAccessor(")@mUcw");
      fileCookieCacheAccessor0.saveCookie(")@mUcw");
      FileCookieCacheAccessor fileCookieCacheAccessor1 = new FileCookieCacheAccessor("");
      fileCookieCacheAccessor1.clear();
      assertNotSame(fileCookieCacheAccessor1, fileCookieCacheAccessor0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileCookieCacheAccessor fileCookieCacheAccessor0 = new FileCookieCacheAccessor();
      fileCookieCacheAccessor0.clear();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("wbpcookie");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "[W");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      FileCookieCacheAccessor fileCookieCacheAccessor0 = new FileCookieCacheAccessor();
      try { 
        fileCookieCacheAccessor0.getCookie();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // could not delete the incorrect cookie file!! filePath:[ /home/user/wbpcookie ].
         //
         verifyException("com.github.echisan.wbp4j.cache.FileCookieCacheAccessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileCookieCacheAccessor fileCookieCacheAccessor0 = new FileCookieCacheAccessor();
      fileCookieCacheAccessor0.saveCookie("com.github.echisnwbp4jcachg.FilSookieCacheAccessor");
      String string0 = fileCookieCacheAccessor0.getCookie();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileCookieCacheAccessor fileCookieCacheAccessor0 = new FileCookieCacheAccessor();
      String string0 = fileCookieCacheAccessor0.getCookie();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileCookieCacheAccessor fileCookieCacheAccessor0 = new FileCookieCacheAccessor();
      fileCookieCacheAccessor0.saveCookie("com.github.echisnwbp4j.cache.FilSookieCacheAccessor");
      String string0 = fileCookieCacheAccessor0.getCookie();
      assertEquals("com.github.echisnwbp4j.cache.FilSookieCacheAccessor", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileCookieCacheAccessor fileCookieCacheAccessor0 = new FileCookieCacheAccessor();
      FileCookieCacheAccessor fileCookieCacheAccessor1 = new FileCookieCacheAccessor("");
      fileCookieCacheAccessor1.clear();
      fileCookieCacheAccessor1.saveCookie("com.github.echisnwbp4j.cache.FilSookieCacheAccessor");
      try { 
        fileCookieCacheAccessor0.saveCookie("`51Zx,<qGigk)");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // create cookie cache failed!! filePath:[ wbpcookie ].
         //
         verifyException("com.github.echisan.wbp4j.cache.FileCookieCacheAccessor", e);
      }
  }
}
