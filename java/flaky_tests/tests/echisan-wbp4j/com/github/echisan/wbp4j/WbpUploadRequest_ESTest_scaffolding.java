/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Nov 06 18:58:55 GMT 2022
 */

package com.github.echisan.wbp4j;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class WbpUploadRequest_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.github.echisan.wbp4j.WbpUploadRequest"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/user"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(WbpUploadRequest_ESTest_scaffolding.class.getClassLoader() ,
      "com.github.echisan.wbp4j.http.WbpHttpResponse",
      "com.github.echisan.wbp4j.entity.ImageInfo",
      "com.github.echisan.wbp4j.AbstractUploadRequest",
      "com.github.echisan.wbp4j.UploadAttributes",
      "com.github.echisan.wbp4j.entity.UploadResp",
      "com.github.echisan.wbp4j.exception.UploadFailedException",
      "com.github.echisan.wbp4j.WbpUploadResponse",
      "com.github.echisan.wbp4j.UploadResponse$ResultStatus",
      "com.github.echisan.wbp4j.http.DefaultWbpHttpRequest",
      "com.github.echisan.wbp4j.http.WbpHttpRequest",
      "com.github.echisan.wbp4j.exception.Wbp4jException",
      "com.github.echisan.wbp4j.UploadResponse",
      "com.github.echisan.wbp4j.interceptor.UploadInterceptor",
      "com.github.echisan.wbp4j.UploadRequest",
      "com.github.echisan.wbp4j.entity.upload.Pic_1",
      "com.github.echisan.wbp4j.WbpUploadRequest"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(WbpUploadRequest_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.github.echisan.wbp4j.AbstractUploadRequest",
      "com.github.echisan.wbp4j.WbpUploadRequest",
      "com.github.echisan.wbp4j.UploadResponse$ResultStatus",
      "com.github.echisan.wbp4j.utils.ImageSize",
      "com.github.echisan.wbp4j.interceptor.InitUploadAttributesInterceptor",
      "com.github.echisan.wbp4j.http.DefaultWbpHttpRequest",
      "com.github.echisan.wbp4j.UploadAttributes",
      "com.github.echisan.wbp4j.UploadContextHolder",
      "com.github.echisan.wbp4j.WbpUploadResponse",
      "com.github.echisan.wbp4j.cache.AbstractCookieContext",
      "com.github.echisan.wbp4j.cache.CookieContext",
      "com.github.echisan.wbp4j.cache.FileCookieCacheAccessor",
      "com.github.echisan.wbp4j.AbstractLoginRequest",
      "com.github.echisan.wbp4j.SzvoneLoginRequest",
      "com.github.echisan.wbp4j.interceptor.LoginInterceptor",
      "com.github.echisan.wbp4j.interceptor.CookieInterceptor",
      "com.github.echisan.wbp4j.cache.CookieHolder",
      "com.github.echisan.wbp4j.interceptor.ReCheckCookieInterceptor",
      "com.github.echisan.wbp4j.WbpLoginRequest",
      "com.github.echisan.wbp4j.entity.UploadResp",
      "com.github.echisan.wbp4j.exception.Wbp4jException",
      "com.github.echisan.wbp4j.exception.LoginFailedException",
      "com.github.echisan.wbp4j.entity.upload.Data",
      "com.github.echisan.wbp4j.http.DefaultWbpHttpResponse",
      "com.github.echisan.wbp4j.entity.ImageInfo"
    );
  }
}
