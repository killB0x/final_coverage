/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 19:18:05 GMT 2022
 */

package com.github.echisan.wbp4j.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.echisan.wbp4j.entity.ImageInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ImageInfo_ESTest extends ImageInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      Integer integer1 = new Integer(0);
      ImageInfo imageInfo0 = new ImageInfo(", size=", integer0, integer1, integer0, "", "", ", size=");
      assertEquals("", imageInfo0.getMiddle());
      assertEquals("", imageInfo0.getLarge());
      assertEquals(0, (int)imageInfo0.getHeight());
      assertEquals((-1), (int)imageInfo0.getWidth());
      assertEquals(", size=", imageInfo0.getPid());
      assertEquals(", size=", imageInfo0.getSmall());
      assertEquals((-1), (int)imageInfo0.getSize());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(3868);
      Integer integer1 = new Integer(3868);
      ImageInfo imageInfo0 = new ImageInfo("", integer0, integer0, integer1, "", "", "");
      assertEquals("", imageInfo0.getLarge());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ImageInfo imageInfo0 = new ImageInfo("", integer0, integer0, integer0, "4ItCfIe", ", width=", (String) null);
      imageInfo0.getWidth();
      assertEquals("", imageInfo0.getPid());
      assertEquals("4ItCfIe", imageInfo0.getLarge());
      assertEquals(", width=", imageInfo0.getMiddle());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(3868);
      ImageInfo imageInfo0 = new ImageInfo("", integer0, integer0, integer0, "", "", "");
      Integer integer1 = imageInfo0.getWidth();
      assertEquals(3868, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      Integer integer0 = new Integer((-1508));
      imageInfo0.setWidth(integer0);
      Integer integer1 = imageInfo0.getWidth();
      assertEquals((-1508), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      imageInfo0.setSmall(";nhUOL}");
      String string0 = imageInfo0.getSmall();
      assertEquals(";nhUOL}", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(3868);
      ImageInfo imageInfo0 = new ImageInfo("", integer0, integer0, integer0, "", "", "");
      String string0 = imageInfo0.getSmall();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      Integer integer0 = new Integer(0);
      imageInfo0.setSize(integer0);
      Integer integer1 = imageInfo0.getSize();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(3868);
      ImageInfo imageInfo0 = new ImageInfo("", integer0, integer0, integer0, "", "", "");
      Integer integer1 = imageInfo0.getSize();
      assertEquals(3868, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      Integer integer0 = new Integer((-2620));
      imageInfo0.setSize(integer0);
      Integer integer1 = imageInfo0.getSize();
      assertEquals((-2620), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      String string0 = imageInfo0.getPid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      imageInfo0.setPid("wY/l4r95)vLg}Xf[Fcv");
      String string0 = imageInfo0.getPid();
      assertEquals("wY/l4r95)vLg}Xf[Fcv", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = Integer.getInteger("1SH&4");
      ImageInfo imageInfo0 = new ImageInfo("1SH&4", (Integer) null, (Integer) null, integer0, "Ld^CdFapb", "1SH&4", "1SH&4");
      String string0 = imageInfo0.getMiddle();
      assertEquals("1SH&4", imageInfo0.getPid());
      assertEquals("Ld^CdFapb", imageInfo0.getLarge());
      assertEquals("1SH&4", string0);
      assertEquals("1SH&4", imageInfo0.getSmall());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer((-616));
      ImageInfo imageInfo0 = new ImageInfo("", integer0, integer0, integer0, "", "", "");
      String string0 = imageInfo0.getMiddle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      String string0 = imageInfo0.getLarge();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      imageInfo0.setLarge("ImageInfo{pid='null', width=null, height=null, size=null, large='null', middle='null', small='null'}");
      String string0 = imageInfo0.getLarge();
      assertEquals("ImageInfo{pid='null', width=null, height=null, size=null, large='null', middle='null', small='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      Integer integer0 = new Integer(0);
      imageInfo0.setHeight(integer0);
      Integer integer1 = imageInfo0.getHeight();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer(3868);
      ImageInfo imageInfo0 = new ImageInfo("", integer0, integer0, integer0, "", "", "");
      Integer integer1 = imageInfo0.getHeight();
      assertEquals(3868, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer integer0 = new Integer((-616));
      ImageInfo imageInfo0 = new ImageInfo("", integer0, integer0, integer0, "", "", "");
      Integer integer1 = imageInfo0.getHeight();
      assertEquals((-616), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Integer integer0 = new Integer(3868);
      ImageInfo imageInfo0 = new ImageInfo("", integer0, integer0, integer0, "", "", "");
      String string0 = imageInfo0.getLarge();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      imageInfo0.setMiddle("aA");
      assertNull(imageInfo0.getHeight());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer(3868);
      ImageInfo imageInfo0 = new ImageInfo("", integer0, integer0, integer0, "", "", "");
      String string0 = imageInfo0.getPid();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      Integer integer0 = imageInfo0.getWidth();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      Integer integer0 = imageInfo0.getSize();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      Integer integer0 = imageInfo0.getHeight();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      String string0 = imageInfo0.getSmall();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      String string0 = imageInfo0.toString();
      assertEquals("ImageInfo{pid='null', width=null, height=null, size=null, large='null', middle='null', small='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ImageInfo imageInfo0 = new ImageInfo();
      String string0 = imageInfo0.getMiddle();
      assertNull(string0);
  }
}
