/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 19:06:22 GMT 2022
 */

package com.github.echisan.wbp4j.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.echisan.wbp4j.cache.CookieContext;
import com.github.echisan.wbp4j.cache.CookieHolder;
import com.github.echisan.wbp4j.cache.FileCookieCacheAccessor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CookieContext_ESTest extends CookieContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileCookieCacheAccessor fileCookieCacheAccessor0 = new FileCookieCacheAccessor();
      CookieContext cookieContext0 = new CookieContext(fileCookieCacheAccessor0);
      cookieContext0.saveCookie("");
      String string0 = cookieContext0.getCookie();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CookieContext cookieContext0 = new CookieContext();
      String string0 = cookieContext0.getCookie();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CookieContext cookieContext0 = new CookieContext();
      CookieHolder.setCookie("Xb8ROEF]{Dq5<I");
      String string0 = cookieContext0.getCookie();
      assertEquals("Xb8ROEF]{Dq5<I", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CookieContext cookieContext0 = new CookieContext();
      cookieContext0.clear();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CookieContext cookieContext0 = new CookieContext();
      // Undeclared exception!
      try { 
        cookieContext0.saveCookie((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }
}
