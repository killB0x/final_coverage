/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 19:12:39 GMT 2022
 */

package com.github.echisan.wbp4j.entity.upload;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.echisan.wbp4j.entity.upload.Pic_1;
import com.github.echisan.wbp4j.entity.upload.Pics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Pics_ESTest extends Pics_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Pics pics0 = new Pics();
      Pic_1 pic_1_0 = new Pic_1();
      pics0.setPic_1(pic_1_0);
      pic_1_0.setWidth(563);
      Pic_1 pic_1_1 = pics0.getPic_1();
      assertEquals(0, pic_1_1.getRet());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Pics pics0 = new Pics();
      Pic_1 pic_1_0 = new Pic_1();
      pics0.setPic_1(pic_1_0);
      pic_1_0.setWidth((-1));
      Pic_1 pic_1_1 = pics0.getPic_1();
      assertEquals(0, pic_1_1.getSize());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Pics pics0 = new Pics();
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setSize(563);
      pics0.setPic_1(pic_1_0);
      Pic_1 pic_1_1 = pics0.getPic_1();
      assertSame(pic_1_1, pic_1_0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Pics pics0 = new Pics();
      Pic_1 pic_1_0 = new Pic_1();
      pics0.setPic_1(pic_1_0);
      pic_1_0.setSize((-1));
      Pic_1 pic_1_1 = pics0.getPic_1();
      assertNull(pic_1_1.getPid());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Pics pics0 = new Pics();
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setRet(563);
      pics0.setPic_1(pic_1_0);
      Pic_1 pic_1_1 = pics0.getPic_1();
      assertNull(pic_1_1.getName());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Pics pics0 = new Pics();
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setRet((-1));
      pics0.setPic_1(pic_1_0);
      Pic_1 pic_1_1 = pics0.getPic_1();
      assertEquals(0, pic_1_1.getWidth());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Pics pics0 = new Pics();
      Pic_1 pic_1_0 = new Pic_1();
      pic_1_0.setHeight((-1));
      pics0.setPic_1(pic_1_0);
      Pic_1 pic_1_1 = pics0.getPic_1();
      assertEquals(0, pic_1_1.getWidth());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Pics pics0 = new Pics();
      String string0 = pics0.toString();
      assertEquals("Pics{pic_1=null}", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Pics pics0 = new Pics();
      Pic_1 pic_1_0 = new Pic_1();
      pics0.setPic_1(pic_1_0);
      pic_1_0.setHeight(1);
      Pic_1 pic_1_1 = pics0.getPic_1();
      assertEquals(0, pic_1_1.getRet());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Pics pics0 = new Pics();
      Pic_1 pic_1_0 = pics0.getPic_1();
      assertNull(pic_1_0);
  }
}
