/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 06 19:11:55 GMT 2022
 */

package com.github.echisan.wbp4j.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.echisan.wbp4j.entity.PreLogin;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PreLogin_ESTest extends PreLogin_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = new Integer(0);
      preLogin0.setShowpin(integer0);
      Integer integer1 = preLogin0.getShowpin();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = new Integer(1278);
      preLogin0.setShowpin(integer0);
      Integer integer1 = preLogin0.getShowpin();
      assertEquals(1278, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = new Integer((-619));
      preLogin0.setShowpin(integer0);
      Integer integer1 = preLogin0.getShowpin();
      assertEquals((-619), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Long long0 = new Long(521L);
      preLogin0.setServertime(long0);
      Long long1 = preLogin0.getServertime();
      assertEquals(521L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Long long0 = new Long((-342L));
      preLogin0.setServertime(long0);
      Long long1 = preLogin0.getServertime();
      assertEquals((-342L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      preLogin0.setRsakv("N.t$s;");
      String string0 = preLogin0.getRsakv();
      assertEquals("N.t$s;", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      preLogin0.setRsakv("");
      String string0 = preLogin0.getRsakv();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = new Integer(0);
      preLogin0.setRetcode(integer0);
      Integer integer1 = preLogin0.getRetcode();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = new Integer(1242);
      preLogin0.setRetcode(integer0);
      Integer integer1 = preLogin0.getRetcode();
      assertEquals(1242, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = new Integer((-2016));
      preLogin0.setRetcode(integer0);
      Integer integer1 = preLogin0.getRetcode();
      assertEquals((-2016), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      preLogin0.setPubkey("zxTR1S;X:zy M{'");
      String string0 = preLogin0.getPubkey();
      assertEquals("zxTR1S;X:zy M{'", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      preLogin0.setPcid("PreLogin{retcode=0, servertime=5567, pcid='null', nonce='', pubkey='', rsakv='', is_openlock=-619, showpin=null, exectime=0}");
      String string0 = preLogin0.getPcid();
      assertEquals("PreLogin{retcode=0, servertime=5567, pcid='null', nonce='', pubkey='', rsakv='', is_openlock=-619, showpin=null, exectime=0}", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      preLogin0.setPcid("");
      String string0 = preLogin0.getPcid();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      preLogin0.setNonce("J=g6NabYS@1c_");
      String string0 = preLogin0.getNonce();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      preLogin0.setNonce("");
      String string0 = preLogin0.getNonce();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = new Integer(0);
      preLogin0.setIs_openlock(integer0);
      Integer integer1 = preLogin0.getIs_openlock();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = new Integer(125);
      preLogin0.setIs_openlock(integer0);
      Integer integer1 = preLogin0.getIs_openlock();
      assertEquals(125, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = new Integer((-2873));
      preLogin0.setIs_openlock(integer0);
      Integer integer1 = preLogin0.getIs_openlock();
      assertEquals((-2873), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = new Integer(0);
      preLogin0.setExectime(integer0);
      Integer integer1 = preLogin0.getExectime();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = new Integer((-1));
      preLogin0.setExectime(integer0);
      Integer integer1 = preLogin0.getExectime();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = new Integer(1);
      preLogin0.setExectime(integer0);
      Integer integer1 = preLogin0.getExectime();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = preLogin0.getShowpin();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Long long0 = new Long(0L);
      preLogin0.setServertime(long0);
      Long long1 = preLogin0.getServertime();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      String string0 = preLogin0.toString();
      assertEquals("PreLogin{retcode=null, servertime=null, pcid='null', nonce='null', pubkey='null', rsakv='null', is_openlock=null, showpin=null, exectime=null}", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      String string0 = preLogin0.getRsakv();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = preLogin0.getExectime();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      String string0 = preLogin0.getNonce();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = preLogin0.getIs_openlock();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      String string0 = preLogin0.getPubkey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      preLogin0.setPubkey("");
      String string0 = preLogin0.getPubkey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      String string0 = preLogin0.getPcid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Long long0 = preLogin0.getServertime();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PreLogin preLogin0 = new PreLogin();
      Integer integer0 = preLogin0.getRetcode();
      assertNull(integer0);
  }
}
