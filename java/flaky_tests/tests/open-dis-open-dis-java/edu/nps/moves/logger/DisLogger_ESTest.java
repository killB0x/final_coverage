/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 12:33:44 GMT 2022
 */

package edu.nps.moves.logger;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.logger.DisLogger;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DisLogger_ESTest extends DisLogger_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DisLogger.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Properties properties0 = new Properties();
      assertNotNull(properties0);
      
      DisLogger disLogger0 = new DisLogger(properties0);
      assertEquals(2048, DisLogger.MAX_PDU_SIZE);
      assertEquals(100, DisLogger.MAX_PDU_LOGFILE_SIZE);
      assertEquals(5000, DisLogger.READ_TIMEOUT);
      assertNotNull(disLogger0);
      
      disLogger0.setDone();
      assertEquals(2048, DisLogger.MAX_PDU_SIZE);
      assertEquals(100, DisLogger.MAX_PDU_LOGFILE_SIZE);
      assertEquals(5000, DisLogger.READ_TIMEOUT);
      
      disLogger0.run();
      assertEquals(2048, DisLogger.MAX_PDU_SIZE);
      assertEquals(100, DisLogger.MAX_PDU_LOGFILE_SIZE);
      assertEquals(5000, DisLogger.READ_TIMEOUT);
      
      boolean boolean0 = disLogger0.finishedWriting();
      assertEquals(2048, DisLogger.MAX_PDU_SIZE);
      assertEquals(100, DisLogger.MAX_PDU_LOGFILE_SIZE);
      assertEquals(5000, DisLogger.READ_TIMEOUT);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        DisLogger.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.logger.DisLogger", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DisLogger disLogger0 = null;
      try {
        disLogger0 = new DisLogger((Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.logger.DisLogger", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Properties properties0 = new Properties();
      assertNotNull(properties0);
      
      DisLogger disLogger0 = new DisLogger(properties0);
      assertEquals(5000, DisLogger.READ_TIMEOUT);
      assertEquals(2048, DisLogger.MAX_PDU_SIZE);
      assertEquals(100, DisLogger.MAX_PDU_LOGFILE_SIZE);
      assertNotNull(disLogger0);
      
      disLogger0.setDone();
      assertEquals(5000, DisLogger.READ_TIMEOUT);
      assertEquals(2048, DisLogger.MAX_PDU_SIZE);
      assertEquals(100, DisLogger.MAX_PDU_LOGFILE_SIZE);
      
      // Undeclared exception!
      try { 
        disLogger0.finishedWriting();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.logger.DisLogger", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        DisLogger.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Properties properties0 = new Properties();
      assertNotNull(properties0);
      
      DisLogger disLogger0 = new DisLogger(properties0);
      assertEquals(100, DisLogger.MAX_PDU_LOGFILE_SIZE);
      assertEquals(2048, DisLogger.MAX_PDU_SIZE);
      assertEquals(5000, DisLogger.READ_TIMEOUT);
      assertNotNull(disLogger0);
      
      boolean boolean0 = disLogger0.finishedWriting();
      assertEquals(100, DisLogger.MAX_PDU_LOGFILE_SIZE);
      assertEquals(2048, DisLogger.MAX_PDU_SIZE);
      assertEquals(5000, DisLogger.READ_TIMEOUT);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      DisLogger.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Properties properties0 = new Properties();
      DisLogger disLogger0 = new DisLogger(properties0);
      // Undeclared exception!
      disLogger0.run();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Properties properties0 = new Properties();
      DisLogger disLogger0 = new DisLogger(properties0);
      disLogger0.setDone();
      disLogger0.run();
      disLogger0.run();
      assertEquals(100, DisLogger.MAX_PDU_LOGFILE_SIZE);
  }
}
