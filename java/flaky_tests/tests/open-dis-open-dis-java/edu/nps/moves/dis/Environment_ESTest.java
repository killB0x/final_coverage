/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 12:51:00 GMT 2022
 */

package edu.nps.moves.dis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis.Environment;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.ReadOnlyBufferException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Environment_ESTest extends Environment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setEnvironmentType((short)255);
      Environment environment1 = new Environment();
      boolean boolean0 = environment1.equals(environment0);
      assertEquals(255L, environment0.getEnvironmentType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.padding2 = (short)255;
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((short)255);
      environment0.marshal(byteBuffer0);
      assertEquals((short)0, environment0.getGeometry());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setRecordIndex((short)1788);
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      environment0.marshal(byteBuffer0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte) (-4), (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals((short)1788, environment0.getRecordIndex());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Environment environment0 = new Environment();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate((short)2362);
      environment0.length = (short) (-3148);
      environment0.marshal(byteBuffer0);
      assertEquals(2353, byteBuffer0.remaining());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setGeometry((short) (-3148));
      ByteBuffer byteBuffer0 = ByteBuffer.allocate((short)2362);
      environment0.marshal(byteBuffer0);
      assertEquals((short) (-3148), environment0.getGeometry());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Environment environment0 = new Environment();
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      environment0.unmarshal(byteBuffer0);
      assertEquals((short)0, environment0.getPadding1());
      assertEquals((short)0, environment0.getPadding2());
      assertEquals((short)0, environment0.getGeometry());
      assertEquals((short)0, environment0.getLength());
      assertEquals((short)0, environment0.getRecordIndex());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setRecordIndex((short)1);
      short short0 = environment0.getRecordIndex();
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setRecordIndex((short) (-1));
      short short0 = environment0.getRecordIndex();
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.padding2 = (short)255;
      short short0 = environment0.getPadding2();
      assertEquals((short)255, short0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.padding2 = (short) (-473);
      short short0 = environment0.getPadding2();
      assertEquals((short) (-473), short0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setPadding1((short)1);
      short short0 = environment0.getPadding1();
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setPadding1((short) (-2055));
      short short0 = environment0.getPadding1();
      assertEquals((short) (-2055), short0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setLength((short)255);
      short short0 = environment0.getLength();
      assertEquals((short)255, short0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.length = (short) (-3148);
      short short0 = environment0.getLength();
      assertEquals((short) (-3148), short0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.geometry = (short)2362;
      short short0 = environment0.getGeometry();
      assertEquals((short)2362, short0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setGeometry((short) (-407));
      short short0 = environment0.getGeometry();
      assertEquals((short) (-407), short0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setEnvironmentType(2007L);
      long long0 = environment0.getEnvironmentType();
      assertEquals(2007L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.environmentType = (-1L);
      long long0 = environment0.getEnvironmentType();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Environment environment0 = new Environment();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      // Undeclared exception!
      try { 
        environment0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Environment environment0 = new Environment();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(935);
      ByteBuffer byteBuffer1 = byteBuffer0.asReadOnlyBuffer();
      // Undeclared exception!
      try { 
        environment0.marshal(byteBuffer1);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.DirectByteBufferR", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Environment environment0 = new Environment();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      // Undeclared exception!
      try { 
        environment0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.geometry = (short)255;
      Environment environment1 = new Environment();
      boolean boolean0 = environment0.equalsImpl(environment1);
      assertFalse(boolean0);
      assertFalse(environment1.equals((Object)environment0));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setPadding1((short)1);
      Environment environment1 = new Environment();
      boolean boolean0 = environment1.equalsImpl(environment0);
      assertEquals((short)1, environment0.getPadding1());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setRecordIndex((short)255);
      Environment environment1 = new Environment();
      boolean boolean0 = environment0.equalsImpl(environment1);
      assertEquals((short)255, environment0.getRecordIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setLength((short)2362);
      Environment environment1 = new Environment();
      boolean boolean0 = environment1.equalsImpl(environment0);
      assertEquals((short)2362, environment0.getLength());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setEnvironmentType((short)255);
      Environment environment1 = new Environment();
      boolean boolean0 = environment0.equalsImpl(environment1);
      assertEquals(255L, environment0.getEnvironmentType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Environment environment0 = new Environment();
      boolean boolean0 = environment0.equalsImpl(environment0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setPadding2((short)1050);
      Environment environment1 = new Environment();
      boolean boolean0 = environment0.equals(environment1);
      assertEquals((short)1050, environment0.getPadding2());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.geometry = (short)255;
      Environment environment1 = new Environment();
      boolean boolean0 = environment1.equals(environment0);
      assertFalse(environment0.equals((Object)environment1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setPadding1((short)1816);
      Environment environment1 = new Environment();
      boolean boolean0 = environment0.equals(environment1);
      assertEquals((short)1816, environment0.getPadding1());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setRecordIndex((short)255);
      Environment environment1 = new Environment();
      boolean boolean0 = environment1.equals(environment0);
      assertEquals((short)255, environment0.getRecordIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Environment environment0 = new Environment();
      Environment environment1 = new Environment();
      environment1.setLength((short) (-2837));
      boolean boolean0 = environment0.equals(environment1);
      assertEquals((short) (-2837), environment1.getLength());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Environment environment0 = new Environment();
      Object object0 = new Object();
      boolean boolean0 = environment0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Environment environment0 = new Environment();
      Environment environment1 = new Environment();
      boolean boolean0 = environment0.equals(environment1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Environment environment0 = new Environment();
      boolean boolean0 = environment0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Environment environment0 = new Environment();
      boolean boolean0 = environment0.equals(environment0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Environment environment0 = new Environment();
      Object object0 = new Object();
      boolean boolean0 = environment0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Environment environment0 = new Environment();
      short short0 = environment0.getRecordIndex();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Environment environment0 = new Environment();
      long long0 = environment0.getEnvironmentType();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Environment environment0 = new Environment();
      // Undeclared exception!
      try { 
        environment0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Environment environment0 = new Environment();
      short short0 = environment0.getGeometry();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Environment environment0 = new Environment();
      // Undeclared exception!
      try { 
        environment0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Environment environment0 = new Environment();
      int int0 = environment0.getMarshalledSize();
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Environment environment0 = new Environment();
      short short0 = environment0.getPadding2();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Environment environment0 = new Environment();
      short short0 = environment0.getLength();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Environment environment0 = new Environment();
      short short0 = environment0.getPadding1();
      assertEquals((short)0, short0);
  }
}
