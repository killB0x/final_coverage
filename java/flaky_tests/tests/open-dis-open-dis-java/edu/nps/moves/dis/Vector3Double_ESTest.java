/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 14:20:25 GMT 2022
 */

package edu.nps.moves.dis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis.Vector3Double;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Vector3Double_ESTest extends Vector3Double_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      vector3Double0.z = (-2736.51);
      vector3Double0.convertDisToLatitudeLongitudeAltitude();
      assertEquals(Double.NaN, vector3Double0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      vector3Double0.setY((-598.4693695054501));
      vector3Double0.convertDisToLatitudeLongitudeAltitude();
      assertEquals((-6377538.5306304945), vector3Double0.getZ(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      vector3Double0.y = (-1054.49);
      vector3Double0.convertLatitudeLongitudeAltitudeToDis();
      assertEquals(5756333.267327753, vector3Double0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      Vector3Double vector3Double1 = new Vector3Double();
      assertTrue(vector3Double1.equals((Object)vector3Double0));
      
      vector3Double0.y = (-1054.49);
      vector3Double0.y = 1.0;
      boolean boolean0 = vector3Double0.equals(vector3Double1);
      assertFalse(vector3Double1.equals((Object)vector3Double0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      vector3Double0.convertLatitudeLongitudeAltitudeToDis();
      Vector3Double vector3Double1 = new Vector3Double();
      boolean boolean0 = vector3Double0.equals(vector3Double1);
      assertEquals(6378137.0, vector3Double0.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      vector3Double0.z = (-2736.51);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(24);
      vector3Double0.marshal(byteBuffer0);
      assertEquals(24, byteBuffer0.position());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      vector3Double0.setX(2158.6);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1008);
      vector3Double0.marshal(byteBuffer0);
      assertEquals(2158.6, vector3Double0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(29);
      vector3Double0.unmarshal(byteBuffer0);
      assertTrue(byteBuffer0.hasRemaining());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      vector3Double0.z = 294.859091;
      double double0 = vector3Double0.getZ();
      assertEquals(294.859091, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      vector3Double0.z = (-757.8045);
      double double0 = vector3Double0.getZ();
      assertEquals((-757.8045), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      vector3Double0.y = (double) 24;
      double double0 = vector3Double0.getY();
      assertEquals(24.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      vector3Double0.y = (-739.17487677);
      double double0 = vector3Double0.getY();
      assertEquals((-739.17487677), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      vector3Double0.setX(180.0);
      vector3Double0.convertLatitudeLongitudeAltitudeToDis();
      double double0 = vector3Double0.getX();
      assertEquals(-0.0, vector3Double0.getY(), 0.01);
      assertEquals((-6378137.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(8);
      // Undeclared exception!
      try { 
        vector3Double0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      // Undeclared exception!
      try { 
        vector3Double0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      Vector3Double vector3Double1 = new Vector3Double();
      vector3Double1.setZ((-1.0));
      boolean boolean0 = vector3Double0.equalsImpl(vector3Double1);
      assertEquals((-1.0), vector3Double1.getZ(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      Vector3Double vector3Double1 = new Vector3Double();
      assertTrue(vector3Double1.equals((Object)vector3Double0));
      
      vector3Double0.y = (-1054.49);
      boolean boolean0 = vector3Double0.equalsImpl(vector3Double1);
      assertFalse(vector3Double1.equals((Object)vector3Double0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      Vector3Double vector3Double1 = new Vector3Double();
      vector3Double0.setX((-1.0));
      boolean boolean0 = vector3Double0.equalsImpl(vector3Double1);
      assertEquals((-1.0), vector3Double0.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      boolean boolean0 = vector3Double0.equalsImpl(vector3Double0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      Vector3Double vector3Double1 = new Vector3Double();
      vector3Double0.convertDisToLatitudeLongitudeAltitude();
      boolean boolean0 = vector3Double1.equals(vector3Double0);
      assertEquals(Double.NaN, vector3Double0.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      Object object0 = new Object();
      boolean boolean0 = vector3Double0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      Object object0 = new Object();
      boolean boolean0 = vector3Double0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      boolean boolean0 = vector3Double0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      boolean boolean0 = vector3Double0.equals(vector3Double0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      double double0 = vector3Double0.getZ();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      int int0 = vector3Double0.getMarshalledSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      double double0 = vector3Double0.getX();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      double double0 = vector3Double0.getY();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      // Undeclared exception!
      try { 
        vector3Double0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.Vector3Double", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      // Undeclared exception!
      try { 
        vector3Double0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.Vector3Double", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Vector3Double vector3Double0 = new Vector3Double();
      vector3Double0.convertLatitudeLongitudeAltitudeToDis();
      double double0 = vector3Double0.getX();
      assertEquals(6378137.0, double0, 0.01);
  }
}
