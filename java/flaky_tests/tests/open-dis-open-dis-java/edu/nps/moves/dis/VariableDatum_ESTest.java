/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:07:37 GMT 2022
 */

package edu.nps.moves.dis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis.VariableDatum;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class VariableDatum_ESTest extends VariableDatum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(2091L, 2091L);
      byte[] byteArray0 = new byte[1];
      boolean boolean0 = variableDatum0.setPayload(byteArray0, 0L);
      assertEquals(2091L, variableDatum0.getVariableDatumID());
      assertEquals(64L, variableDatum0.getVariableDatumLength());
      assertEquals(2091L, variableDatum0.getPayloadAsLong());
      assertFalse(boolean0);
      assertEquals(16, variableDatum0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum();
      variableDatum0.setPayload("nB#Taq6_j*clH");
      int int0 = variableDatum0.getMarshalledSize();
      assertEquals(104L, variableDatum0.getVariableDatumLength());
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(0L, 3779L);
      long long0 = variableDatum0.getVariableDatumLength();
      assertEquals(0L, variableDatum0.getVariableDatumID());
      assertEquals(64L, long0);
      assertEquals(16, variableDatum0.getMarshalledSize());
      assertEquals(1.867E-320, variableDatum0.getPayloadAsDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(0L, 0L);
      long long0 = variableDatum0.getVariableDatumID();
      assertEquals(64L, variableDatum0.getVariableDatumLength());
      assertEquals(16, variableDatum0.getMarshalledSize());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum();
      variableDatum0.variableDatumID = 0L;
      variableDatum0.variableDatumID = (long) (byte) (-19);
      long long0 = variableDatum0.getVariableDatumID();
      assertEquals((-19L), long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(1L, 0.0);
      long long0 = variableDatum0.getPayloadAsLong();
      assertEquals(64L, variableDatum0.getVariableDatumLength());
      assertEquals(0L, long0);
      assertEquals(16, variableDatum0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(0L, "[)WKW9&S");
      long long0 = variableDatum0.getPayloadAsLong();
      assertEquals(6568877512594105939L, long0);
      assertEquals(64L, variableDatum0.getVariableDatumLength());
      assertEquals(16, variableDatum0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(1L, (-1.0));
      long long0 = variableDatum0.getPayloadAsLong();
      assertEquals(16, variableDatum0.getMarshalledSize());
      assertEquals((-4616189618054758400L), long0);
      assertEquals(64L, variableDatum0.getVariableDatumLength());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(0L, "");
      variableDatum0.setPayload((double) 0L);
      double double0 = variableDatum0.getPayloadAsDouble();
      assertEquals(64L, variableDatum0.getVariableDatumLength());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(1L, (-1.0));
      double double0 = variableDatum0.getPayloadAsDouble();
      assertEquals(1L, variableDatum0.getVariableDatumID());
      assertEquals((-1.0), double0, 0.01);
      assertEquals(16, variableDatum0.getMarshalledSize());
      assertEquals(64L, variableDatum0.getVariableDatumLength());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum();
      byte[] byteArray0 = variableDatum0.getPayload();
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum();
      // Undeclared exception!
      try { 
        variableDatum0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.VariableDatum", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum((-3218L), (-3218L));
      byte[] byteArray0 = variableDatum0.getVariableData();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        variableDatum0.unmarshal(byteBuffer0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -402
         //
         verifyException("edu.nps.moves.dis.VariableDatum", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        variableDatum0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum();
      // Undeclared exception!
      try { 
        variableDatum0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.VariableDatum", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(1929L, (byte[]) null);
      // Undeclared exception!
      try { 
        variableDatum0.getPayloadAsDouble();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("edu.nps.moves.dis.VariableDatum", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(0L, "6Y\"S'pH[U-$<M2r_@6");
      VariableDatum variableDatum1 = new VariableDatum((-3890L), (long) (byte)6);
      variableDatum1.equalsImpl(variableDatum0);
      assertEquals((-3890L), variableDatum1.getVariableDatumID());
      assertEquals(16, variableDatum1.getMarshalledSize());
      assertEquals(6L, variableDatum1.getPayloadAsLong());
      assertEquals(64L, variableDatum1.getVariableDatumLength());
      assertEquals(32, variableDatum0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(0L, "6Y\"S'pH[U-$<M2r_@6");
      boolean boolean0 = variableDatum0.equalsImpl(variableDatum0);
      assertEquals(32, variableDatum0.getMarshalledSize());
      assertEquals(144L, variableDatum0.getVariableDatumLength());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(0L, "");
      byte[] byteArray0 = variableDatum0.getVariableData();
      boolean boolean0 = variableDatum0.setPayload(byteArray0, 0L);
      assertTrue(boolean0);
      assertEquals(8, variableDatum0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(0L, 8L);
      boolean boolean0 = variableDatum0.setPayload((byte[]) null);
      assertEquals(16, variableDatum0.getMarshalledSize());
      assertEquals(8L, variableDatum0.getPayloadAsLong());
      assertEquals(64L, variableDatum0.getVariableDatumLength());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(478L, 478L);
      byte[] byteArray0 = new byte[5];
      boolean boolean0 = variableDatum0.setPayload(byteArray0);
      assertEquals(40L, variableDatum0.getVariableDatumLength());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum((-1L), "nB#Taq6_j*clH");
      boolean boolean0 = variableDatum0.setPayload((String) null);
      assertEquals((-1L), variableDatum0.getVariableDatumID());
      assertEquals(104L, variableDatum0.getVariableDatumLength());
      assertEquals(24, variableDatum0.getMarshalledSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum();
      long long0 = variableDatum0.getVariableDatumLength();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum();
      // Undeclared exception!
      try { 
        variableDatum0.getPayloadAsLong();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("edu.nps.moves.dis.VariableDatum", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(0L, "");
      boolean boolean0 = variableDatum0.setPayload((-3678L));
      assertEquals(64L, variableDatum0.getVariableDatumLength());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum((-49L), "");
      VariableDatum variableDatum1 = new VariableDatum();
      boolean boolean0 = variableDatum0.equals(variableDatum1);
      assertFalse(boolean0);
      assertFalse(variableDatum1.equals((Object)variableDatum0));
      assertEquals(8, variableDatum0.getMarshalledSize());
      assertEquals(0L, variableDatum0.getVariableDatumLength());
      assertEquals((-49L), variableDatum0.getVariableDatumID());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum((-1L), (-1L));
      VariableDatum variableDatum1 = new VariableDatum();
      variableDatum1.setVariableDatumID((-1L));
      boolean boolean0 = variableDatum1.equals(variableDatum0);
      assertEquals((-1L), variableDatum1.getVariableDatumID());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(565L, "");
      boolean boolean0 = variableDatum0.equalsImpl("");
      assertEquals(565L, variableDatum0.getVariableDatumID());
      assertEquals(8, variableDatum0.getMarshalledSize());
      assertEquals(0L, variableDatum0.getVariableDatumLength());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(2164L, 126L);
      Object object0 = new Object();
      variableDatum0.equals(object0);
      assertEquals(2164L, variableDatum0.getVariableDatumID());
      assertEquals(16, variableDatum0.getMarshalledSize());
      assertEquals(64L, variableDatum0.getVariableDatumLength());
      assertEquals(6.23E-322, variableDatum0.getPayloadAsDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum((-1L), (-1L));
      boolean boolean0 = variableDatum0.equals((Object) null);
      assertEquals((-1L), variableDatum0.getPayloadAsLong());
      assertEquals(64L, variableDatum0.getVariableDatumLength());
      assertFalse(boolean0);
      assertEquals(16, variableDatum0.getMarshalledSize());
      assertEquals((-1L), variableDatum0.getVariableDatumID());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum((-4L), "");
      boolean boolean0 = variableDatum0.equals(variableDatum0);
      assertEquals((-4L), variableDatum0.getVariableDatumID());
      assertEquals(0L, variableDatum0.getVariableDatumLength());
      assertEquals(8, variableDatum0.getMarshalledSize());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(2164L, "Ov@uYsV_%&");
      VariableDatum variableDatum1 = new VariableDatum(2012L, 5113L);
      boolean boolean0 = variableDatum0.equals(variableDatum1);
      assertEquals(64L, variableDatum1.getVariableDatumLength());
      assertEquals(2.526E-320, variableDatum1.getPayloadAsDouble(), 0.01);
      assertEquals(16, variableDatum1.getMarshalledSize());
      assertEquals(24, variableDatum0.getMarshalledSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(146L, 146L);
      byte[] byteArray0 = variableDatum0.getPayload();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        variableDatum0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(2164L, "Ov@uYsV_%&");
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1312);
      variableDatum0.unmarshal(byteBuffer0);
      assertEquals("java.nio.HeapByteBuffer[pos=8 lim=1312 cap=1312]", byteBuffer0.toString());
      assertEquals(8, variableDatum0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(2164L, "Ov@uYsV_%&");
      byte[] byteArray0 = new byte[3];
      boolean boolean0 = variableDatum0.setPayload(byteArray0, 1L);
      assertEquals(2164L, variableDatum0.getVariableDatumID());
      assertEquals(24, variableDatum0.getMarshalledSize());
      assertEquals(88L, variableDatum0.getVariableDatumLength());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum();
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = variableDatum0.setPayload(byteArray0, 136L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum((-49L), (-49L));
      byte[] byteArray0 = new byte[0];
      variableDatum0.setPayload(byteArray0, (-49L));
      assertEquals(16, variableDatum0.getMarshalledSize());
      assertEquals(64L, variableDatum0.getVariableDatumLength());
      assertEquals((-49L), variableDatum0.getPayloadAsLong());
      assertEquals((-49L), variableDatum0.getVariableDatumID());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum();
      boolean boolean0 = variableDatum0.setPayload((byte[]) null, (-11L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(2164L, "Ov@uYsV_%&");
      long long0 = variableDatum0.getVariableDatumID();
      assertEquals(24, variableDatum0.getMarshalledSize());
      assertEquals(2164L, long0);
      assertEquals(88L, variableDatum0.getVariableDatumLength());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(2164L, "Ov@uYsV_%&");
      variableDatum0.getPayloadAsString();
      assertEquals(24, variableDatum0.getMarshalledSize());
      assertEquals(88L, variableDatum0.getVariableDatumLength());
      assertEquals(2164L, variableDatum0.getVariableDatumID());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum((-3412L), (-3412L));
      variableDatum0.variableDatumLength = 0L;
      variableDatum0.variableDatumLength = (-6824L);
      long long0 = variableDatum0.getVariableDatumLength();
      assertEquals((-6824L), long0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(2164L, "Ov@uYsV_%&");
      double double0 = variableDatum0.getPayloadAsDouble();
      assertEquals(2164L, variableDatum0.getVariableDatumID());
      assertEquals(88L, variableDatum0.getVariableDatumLength());
      assertEquals(1.7260400236168014E305, double0, 0.01);
      assertEquals(24, variableDatum0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum();
      byte[] byteArray0 = new byte[0];
      variableDatum0.setVariableData(byteArray0);
      assertEquals(8, variableDatum0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum((-4L), "");
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(3513);
      variableDatum0.marshal(byteBuffer0);
      assertEquals("java.nio.HeapByteBuffer[pos=8 lim=3513 cap=3513]", byteBuffer0.toString());
      assertEquals(0L, variableDatum0.getVariableDatumLength());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum(2164L, 126L);
      variableDatum0.setVariableDatumLength(8L);
      assertEquals(8L, variableDatum0.getVariableDatumLength());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VariableDatum variableDatum0 = new VariableDatum((-24L), (byte[]) null);
      variableDatum0.getPayloadAsString();
      assertEquals((-24L), variableDatum0.getVariableDatumID());
  }
}
