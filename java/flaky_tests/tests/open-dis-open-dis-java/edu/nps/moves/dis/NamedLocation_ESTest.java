/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 15:15:10 GMT 2022
 */

package edu.nps.moves.dis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis.NamedLocation;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NamedLocation_ESTest extends NamedLocation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      namedLocation0.setStationNumber((-1129));
      byte[] byteArray0 = new byte[6];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      namedLocation0.marshal(byteBuffer0);
      assertEquals((-1129), namedLocation0.getStationNumber());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      namedLocation0.stationName = (-33);
      int int0 = namedLocation0.getMarshalledSize();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      namedLocation0.stationNumber = 65535;
      int int0 = namedLocation0.getMarshalledSize();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      byte[] byteArray0 = new byte[5];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      namedLocation0.unmarshal(byteBuffer0);
      assertEquals(0, namedLocation0.getStationNumber());
      assertEquals(0, namedLocation0.getStationName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      namedLocation0.stationNumber = 59884;
      int int0 = namedLocation0.getStationNumber();
      assertEquals(59884, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      namedLocation0.stationNumber = (-4291);
      int int0 = namedLocation0.getStationNumber();
      assertEquals((-4291), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      namedLocation0.stationName = 1;
      int int0 = namedLocation0.getStationName();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      namedLocation0.setStationName((-707));
      int int0 = namedLocation0.getStationName();
      assertEquals((-707), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      // Undeclared exception!
      try { 
        namedLocation0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      byte[] byteArray0 = new byte[6];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      byteBuffer0.putInt(0);
      // Undeclared exception!
      try { 
        namedLocation0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      // Undeclared exception!
      try { 
        namedLocation0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.NamedLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      NamedLocation namedLocation1 = new NamedLocation();
      namedLocation1.setStationNumber(257);
      boolean boolean0 = namedLocation1.equalsImpl(namedLocation0);
      assertEquals(257, namedLocation1.getStationNumber());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      NamedLocation namedLocation1 = new NamedLocation();
      assertTrue(namedLocation1.equals((Object)namedLocation0));
      
      namedLocation1.stationName = (-1129);
      boolean boolean0 = namedLocation0.equalsImpl(namedLocation1);
      assertFalse(namedLocation1.equals((Object)namedLocation0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      boolean boolean0 = namedLocation0.equalsImpl(namedLocation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      namedLocation0.stationNumber = (-4291);
      NamedLocation namedLocation1 = new NamedLocation();
      boolean boolean0 = namedLocation0.equals(namedLocation1);
      assertFalse(boolean0);
      assertFalse(namedLocation1.equals((Object)namedLocation0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      namedLocation0.stationName = (-1346);
      NamedLocation namedLocation1 = new NamedLocation();
      boolean boolean0 = namedLocation0.equals(namedLocation1);
      assertFalse(namedLocation1.equals((Object)namedLocation0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      Object object0 = new Object();
      boolean boolean0 = namedLocation0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      NamedLocation namedLocation1 = new NamedLocation();
      boolean boolean0 = namedLocation0.equals(namedLocation1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      boolean boolean0 = namedLocation0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      boolean boolean0 = namedLocation0.equals(namedLocation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      Object object0 = new Object();
      boolean boolean0 = namedLocation0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      // Undeclared exception!
      try { 
        namedLocation0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.NamedLocation", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      int int0 = namedLocation0.getStationNumber();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NamedLocation namedLocation0 = new NamedLocation();
      int int0 = namedLocation0.getStationName();
      assertEquals(0, int0);
  }
}
