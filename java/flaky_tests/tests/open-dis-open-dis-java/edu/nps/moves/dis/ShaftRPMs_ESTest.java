/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 14:11:13 GMT 2022
 */

package edu.nps.moves.dis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis.ShaftRPMs;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ShaftRPMs_ESTest extends ShaftRPMs_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      shaftRPMs0.orderedShaftRPMs = (short)191;
      shaftRPMs0.orderedShaftRPMs = (short) (-122);
      ShaftRPMs shaftRPMs1 = new ShaftRPMs();
      boolean boolean0 = shaftRPMs0.equalsImpl(shaftRPMs1);
      assertFalse(boolean0);
      assertFalse(shaftRPMs1.equals((Object)shaftRPMs0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      ShaftRPMs shaftRPMs1 = new ShaftRPMs();
      shaftRPMs0.setCurrentShaftRPMs((short) (-1886));
      boolean boolean0 = shaftRPMs0.equals(shaftRPMs1);
      assertEquals((short) (-1886), shaftRPMs0.getCurrentShaftRPMs());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      shaftRPMs0.currentShaftRPMs = (short)1;
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1871);
      shaftRPMs0.marshal(byteBuffer0);
      assertEquals(1871, byteBuffer0.capacity());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      shaftRPMs0.setCurrentShaftRPMs((short)1282);
      // Undeclared exception!
      try { 
        shaftRPMs0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.ShaftRPMs", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate((short)788);
      shaftRPMs0.unmarshal(byteBuffer0);
      assertEquals(780, byteBuffer0.remaining());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      shaftRPMs0.shaftRPMRateOfChange = (-1.0F);
      shaftRPMs0.shaftRPMRateOfChange = (-1224.0804F);
      shaftRPMs0.shaftRPMRateOfChange = 1.0F;
      float float0 = shaftRPMs0.getShaftRPMRateOfChange();
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      shaftRPMs0.setOrderedShaftRPMs((short)1);
      short short0 = shaftRPMs0.getOrderedShaftRPMs();
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      shaftRPMs0.setOrderedShaftRPMs((short) (-2657));
      short short0 = shaftRPMs0.getOrderedShaftRPMs();
      assertEquals((short) (-2657), short0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      shaftRPMs0.setCurrentShaftRPMs((short)2163);
      short short0 = shaftRPMs0.getCurrentShaftRPMs();
      assertEquals((short)2163, short0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      shaftRPMs0.setCurrentShaftRPMs((short) (-1));
      short short0 = shaftRPMs0.getCurrentShaftRPMs();
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        shaftRPMs0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      // Undeclared exception!
      try { 
        shaftRPMs0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      shaftRPMs0.shaftRPMRateOfChange = (-1.0F);
      ShaftRPMs shaftRPMs1 = new ShaftRPMs();
      boolean boolean0 = shaftRPMs0.equalsImpl(shaftRPMs1);
      assertFalse(shaftRPMs1.equals((Object)shaftRPMs0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      shaftRPMs0.orderedShaftRPMs = (short)191;
      ShaftRPMs shaftRPMs1 = new ShaftRPMs();
      boolean boolean0 = shaftRPMs0.equalsImpl(shaftRPMs1);
      assertFalse(boolean0);
      assertFalse(shaftRPMs1.equals((Object)shaftRPMs0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      shaftRPMs0.setCurrentShaftRPMs((short)2163);
      ShaftRPMs shaftRPMs1 = new ShaftRPMs();
      boolean boolean0 = shaftRPMs0.equalsImpl(shaftRPMs1);
      assertEquals((short)2163, shaftRPMs0.getCurrentShaftRPMs());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      boolean boolean0 = shaftRPMs0.equalsImpl(shaftRPMs0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      ShaftRPMs shaftRPMs1 = new ShaftRPMs();
      shaftRPMs1.setShaftRPMRateOfChange((-1020.061F));
      boolean boolean0 = shaftRPMs0.equals(shaftRPMs1);
      assertEquals((-1020.061F), shaftRPMs1.getShaftRPMRateOfChange(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      Object object0 = new Object();
      boolean boolean0 = shaftRPMs0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      Object object0 = new Object();
      boolean boolean0 = shaftRPMs0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      boolean boolean0 = shaftRPMs0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      boolean boolean0 = shaftRPMs0.equals(shaftRPMs0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      short short0 = shaftRPMs0.getOrderedShaftRPMs();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      short short0 = shaftRPMs0.getCurrentShaftRPMs();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      // Undeclared exception!
      try { 
        shaftRPMs0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.ShaftRPMs", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      float float0 = shaftRPMs0.getShaftRPMRateOfChange();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      shaftRPMs0.setShaftRPMRateOfChange((-1020.061F));
      float float0 = shaftRPMs0.getShaftRPMRateOfChange();
      assertEquals((-1020.061F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ShaftRPMs shaftRPMs0 = new ShaftRPMs();
      int int0 = shaftRPMs0.getMarshalledSize();
      assertEquals(8, int0);
  }
}
