/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:40:15 GMT 2022
 */

package edu.nps.moves.dis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis.LinearSegmentParameter;
import edu.nps.moves.dis.Orientation;
import edu.nps.moves.dis.SixByteChunk;
import edu.nps.moves.dis.Vector3Double;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LinearSegmentParameter_ESTest extends LinearSegmentParameter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      assertEquals(55, linearSegmentParameter0.getMarshalledSize());
      
      Vector3Double vector3Double0 = new Vector3Double();
      vector3Double0.convertLatitudeLongitudeAltitudeToDis();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1357);
      vector3Double0.unmarshal(byteBuffer0);
      linearSegmentParameter0.setLocation(vector3Double0);
      linearSegmentParameter0.segmentHeight = 197;
      Orientation orientation0 = linearSegmentParameter0.getOrientation();
      orientation0.theta = 1.0F;
      orientation0.setPhi(1357);
      linearSegmentParameter0.equalsImpl(orientation0);
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.getOrientation();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.orientation = null;
      linearSegmentParameter0.getOrientation();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentNumber((short) (-1));
      linearSegmentParameter0.setSegmentDepth(1932);
      Orientation orientation0 = linearSegmentParameter0.getOrientation();
      orientation0.phi = (float) (short) (-1);
      linearSegmentParameter0.setOrientation(orientation0);
      linearSegmentParameter0.segmentNumber = (short)436;
      linearSegmentParameter0.setSegmentNumber((short)9364);
      linearSegmentParameter0.getOrientation();
      linearSegmentParameter0.getSegmentAppearance();
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.getMarshalledSize();
      linearSegmentParameter0.getOrientation();
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.getOrientation();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.segmentWidth = 2043;
      linearSegmentParameter0.setPad1(0L);
      Orientation orientation0 = linearSegmentParameter0.getOrientation();
      orientation0.psi = (float) 2043;
      orientation0.phi = (float) 2043;
      orientation0.setPsi(1.0F);
      orientation0.psi = 1.0F;
      Vector3Double vector3Double0 = linearSegmentParameter0.getLocation();
      linearSegmentParameter0.location = vector3Double0;
      linearSegmentParameter0.getSegmentAppearance();
      linearSegmentParameter0.equalsImpl(orientation0);
      Object object0 = new Object();
      linearSegmentParameter0.equalsImpl(object0);
      linearSegmentParameter0.getMarshalledSize();
      linearSegmentParameter0.getOrientation();
      linearSegmentParameter0.getMarshalledSize();
      linearSegmentParameter0.getSegmentAppearance();
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.getOrientation();
      // Undeclared exception!
      try { 
        ByteBuffer.wrap((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.segmentLength = 1;
      linearSegmentParameter0.getMarshalledSize();
      linearSegmentParameter0.getSegmentAppearance();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.setSegmentWidth(55);
      linearSegmentParameter1.segmentDepth = (-1);
      linearSegmentParameter0.segmentDepth = (-1);
      linearSegmentParameter0.segmentNumber = (short)255;
      linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
      Orientation orientation0 = linearSegmentParameter0.getOrientation();
      orientation0.psi = (-2162.0F);
      linearSegmentParameter0.orientation = orientation0;
      orientation0.phi = (float) 1;
      linearSegmentParameter0.getOrientation();
      linearSegmentParameter0.getOrientation();
      linearSegmentParameter0.getOrientation();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte) (-100);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-42);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)116;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)83;
      byteArray0[8] = (byte) (-1);
      // Undeclared exception!
      try { 
        ByteBuffer.wrap(byteArray0, (int) (short)255, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.segmentDepth = 4;
      Object object0 = new Object();
      linearSegmentParameter0.setPad1(970L);
      linearSegmentParameter0.setSegmentWidth(4);
      linearSegmentParameter0.segmentWidth = 4;
      linearSegmentParameter0.equalsImpl(object0);
      linearSegmentParameter0.getPad1();
      linearSegmentParameter0.getPad1();
      linearSegmentParameter0.getSegmentAppearance();
      Object object1 = new Object();
      linearSegmentParameter0.setSegmentNumber((short)2847);
      linearSegmentParameter0.equalsImpl(object1);
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.getLocation();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)127;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)6;
      byteArray0[5] = (byte)112;
      // Undeclared exception!
      try { 
        ByteBuffer.wrap(byteArray0, 0, (int) (byte)112);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = linearSegmentParameter0.location;
      vector3Double0.z = 1498.3189202741;
      linearSegmentParameter0.setSegmentNumber((short) (-1502));
      vector3Double0.convertDisToLatitudeLongitudeAltitude();
      vector3Double0.y = 4316.65103;
      linearSegmentParameter0.segmentLength = 1;
      linearSegmentParameter0.setLocation(vector3Double0);
      linearSegmentParameter0.setSegmentLength(0);
      linearSegmentParameter0.getOrientation();
      linearSegmentParameter0.getOrientation();
      linearSegmentParameter0.pad1 = 1755L;
      linearSegmentParameter0.getMarshalledSize();
      linearSegmentParameter0.getSegmentAppearance();
      linearSegmentParameter0.getSegmentAppearance();
      linearSegmentParameter0.getSegmentAppearance();
      linearSegmentParameter0.getLocation();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)118;
      linearSegmentParameter0.segmentNumber = (short) (byte)118;
      byteArray0[1] = (byte)6;
      // Undeclared exception!
      try { 
        ByteBuffer.wrap(byteArray0, (-1021), 55);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.segmentWidth = 6;
      linearSegmentParameter0.segmentDepth = 240;
      linearSegmentParameter0.getOrientation();
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.getMarshalledSize();
      linearSegmentParameter0.getLocation();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.setSegmentDepth((-413));
      linearSegmentParameter1.setSegmentNumber((short) (-3362));
      linearSegmentParameter0.segmentLength = 614;
      linearSegmentParameter1.pad1 = (-1442L);
      linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
      linearSegmentParameter1.getSegmentNumber();
      linearSegmentParameter1.getLocation();
      linearSegmentParameter1.getMarshalledSize();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = linearSegmentParameter0.getLocation();
      assertEquals(0.0, vector3Double0.getZ(), 0.01);
      
      linearSegmentParameter0.setPad1(832L);
      Object object0 = new Object();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter0.equals(linearSegmentParameter1);
      Orientation orientation0 = new Orientation();
      SixByteChunk sixByteChunk0 = linearSegmentParameter0.getSegmentAppearance();
      linearSegmentParameter0.setSegmentAppearance(sixByteChunk0);
      LinearSegmentParameter linearSegmentParameter2 = new LinearSegmentParameter();
      LinearSegmentParameter linearSegmentParameter3 = new LinearSegmentParameter();
      linearSegmentParameter2.setSegmentLength((-4701));
      LinearSegmentParameter linearSegmentParameter4 = new LinearSegmentParameter();
      linearSegmentParameter3.equalsImpl(linearSegmentParameter4);
      linearSegmentParameter2.setSegmentAppearance((SixByteChunk) null);
      linearSegmentParameter3.getOrientation();
      linearSegmentParameter0.getSegmentNumber();
      linearSegmentParameter3.equalsImpl(linearSegmentParameter2);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.setSegmentAppearance((SixByteChunk) null);
      linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
      // Undeclared exception!
      try { 
        linearSegmentParameter1.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.LinearSegmentParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-84);
      sixByteChunk0.setOtherParameters(byteArray0);
      linearSegmentParameter1.segmentAppearance = sixByteChunk0;
      // Undeclared exception!
      try { 
        linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("edu.nps.moves.dis.SixByteChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = new Vector3Double();
      linearSegmentParameter0.setLocation(vector3Double0);
      assertEquals(24, vector3Double0.getMarshalledSize());
      
      linearSegmentParameter0.setSegmentWidth(732);
      linearSegmentParameter0.getSegmentWidth();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = new Vector3Double();
      linearSegmentParameter0.location = vector3Double0;
      Orientation orientation0 = linearSegmentParameter0.getOrientation();
      orientation0.phi = 645.0F;
      linearSegmentParameter0.setSegmentHeight((-1043));
      orientation0.setPhi(0.0F);
      SixByteChunk sixByteChunk0 = linearSegmentParameter0.getSegmentAppearance();
      linearSegmentParameter0.setSegmentAppearance(sixByteChunk0);
      orientation0.setTheta(0.0F);
      vector3Double0.y = 6378137.0;
      Object object0 = new Object();
      linearSegmentParameter0.orientation = orientation0;
      linearSegmentParameter0.segmentWidth = (-1043);
      linearSegmentParameter0.equalsImpl(object0);
      vector3Double0.setZ(0.0);
      linearSegmentParameter0.getSegmentWidth();
      linearSegmentParameter0.getMarshalledSize();
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.getSegmentNumber();
      orientation0.setPhi((-1043));
      linearSegmentParameter0.equalsImpl(orientation0);
      orientation0.phi = 645.0F;
      linearSegmentParameter0.getSegmentWidth();
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.getSegmentNumber();
      linearSegmentParameter0.getPad1();
      linearSegmentParameter0.getSegmentWidth();
      linearSegmentParameter0.getSegmentHeight();
      // Undeclared exception!
      try { 
        ByteBuffer.allocateDirect((-4701));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // capacity < 0: (-4701 < 0)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.segmentLength = (-812);
      SixByteChunk sixByteChunk0 = linearSegmentParameter0.getSegmentAppearance();
      linearSegmentParameter0.segmentAppearance = sixByteChunk0;
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.setSegmentHeight(2296);
      linearSegmentParameter1.equals(linearSegmentParameter0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.setLocation((Vector3Double) null);
      linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentDepth((-2145927499));
      int int0 = linearSegmentParameter0.segmentWidth;
      linearSegmentParameter0.getSegmentDepth();
      linearSegmentParameter0.getSegmentAppearance();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(496);
      linearSegmentParameter1.marshal(byteBuffer0);
      linearSegmentParameter1.segmentWidth = (-2145927499);
      linearSegmentParameter0.equals(linearSegmentParameter1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.getSegmentLength();
      linearSegmentParameter0.getMarshalledSize();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.segmentWidth = 3579;
      linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
      linearSegmentParameter1.getSegmentNumber();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.getLocation();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(255);
      linearSegmentParameter0.marshal(byteBuffer0);
      linearSegmentParameter0.segmentLength = 2927;
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
      linearSegmentParameter0.marshal(byteBuffer0);
      linearSegmentParameter1.getLocation();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setPad1((-1L));
      Object object0 = new Object();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(255);
      linearSegmentParameter1.marshal(byteBuffer0);
      LinearSegmentParameter linearSegmentParameter2 = new LinearSegmentParameter();
      linearSegmentParameter2.setSegmentHeight(3153);
      LinearSegmentParameter linearSegmentParameter3 = new LinearSegmentParameter();
      linearSegmentParameter3.equalsImpl(linearSegmentParameter2);
      Object object1 = new Object();
      Object object2 = new Object();
      linearSegmentParameter0.equalsImpl(object2);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      int int0 = linearSegmentParameter0.getMarshalledSize();
      assertEquals(55, int0);
      
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.segmentHeight = 55;
      linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.location = null;
      // Undeclared exception!
      try { 
        linearSegmentParameter1.equals(linearSegmentParameter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.LinearSegmentParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.equals(linearSegmentParameter0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.segmentNumber = (short)6;
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(255);
      linearSegmentParameter0.marshal(byteBuffer0);
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.setSegmentLength(255);
      linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setLocation((Vector3Double) null);
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.getLocation();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(55);
      // Undeclared exception!
      try { 
        linearSegmentParameter0.marshal(byteBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.LinearSegmentParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.pad1 = (long) 3197;
      linearSegmentParameter0.setSegmentWidth((-1));
      linearSegmentParameter0.setSegmentDepth(3197);
      linearSegmentParameter0.setSegmentLength(2927);
      linearSegmentParameter0.segmentWidth = 3197;
      linearSegmentParameter0.getSegmentNumber();
      linearSegmentParameter0.getMarshalledSize();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)93;
      byteArray0[4] = (byte) (-1);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        linearSegmentParameter0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentNumber((short) (-1275));
      linearSegmentParameter0.setSegmentDepth(0);
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      SixByteChunk sixByteChunk0 = linearSegmentParameter0.getSegmentAppearance();
      linearSegmentParameter1.setSegmentAppearance(sixByteChunk0);
      linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter0.setPad1((-1L));
      Object object0 = new Object();
      LinearSegmentParameter linearSegmentParameter2 = new LinearSegmentParameter();
      Object object1 = new Object();
      Object object2 = new Object();
      linearSegmentParameter1.equals(object2);
      linearSegmentParameter0.getOrientation();
      SixByteChunk sixByteChunk0 = linearSegmentParameter1.getSegmentAppearance();
      linearSegmentParameter1.setSegmentAppearance(sixByteChunk0);
      LinearSegmentParameter linearSegmentParameter3 = new LinearSegmentParameter();
      LinearSegmentParameter linearSegmentParameter4 = new LinearSegmentParameter();
      linearSegmentParameter1.setSegmentLength((-4701));
      LinearSegmentParameter linearSegmentParameter5 = new LinearSegmentParameter();
      linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
      linearSegmentParameter4.setSegmentAppearance(sixByteChunk0);
      LinearSegmentParameter linearSegmentParameter6 = new LinearSegmentParameter();
      linearSegmentParameter3.getOrientation();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.getLocation();
      ByteBuffer.allocate(255);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(255);
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.setSegmentWidth(319);
      linearSegmentParameter1.marshal(byteBuffer0);
      linearSegmentParameter1.getLocation();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.setPad1((-1L));
      Object object0 = new Object();
      LinearSegmentParameter linearSegmentParameter2 = new LinearSegmentParameter();
      LinearSegmentParameter linearSegmentParameter3 = new LinearSegmentParameter();
      linearSegmentParameter2.setSegmentAppearance((SixByteChunk) null);
      linearSegmentParameter1.setSegmentDepth((-2312));
      linearSegmentParameter2.getSegmentAppearance();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setPad1((-345L));
      linearSegmentParameter0.setSegmentHeight(255);
      Vector3Double vector3Double0 = linearSegmentParameter0.getLocation();
      SixByteChunk sixByteChunk0 = linearSegmentParameter0.getSegmentAppearance();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-62);
      byteArray0[1] = (byte) (-113);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)15;
      byteArray0[4] = (byte) (-96);
      byteArray0[5] = (byte)127;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)10;
      sixByteChunk0.setOtherParameters(byteArray0);
      linearSegmentParameter0.segmentNumber = (short) (-1488);
      linearSegmentParameter0.pad1 = (long) (short) (-1488);
      linearSegmentParameter0.segmentNumber = (short)0;
      linearSegmentParameter0.getSegmentWidth();
      linearSegmentParameter0.segmentAppearance = sixByteChunk0;
      linearSegmentParameter0.getPad1();
      linearSegmentParameter0.getMarshalledSize();
      linearSegmentParameter0.getSegmentHeight();
      linearSegmentParameter0.equals(vector3Double0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = linearSegmentParameter0.getLocation();
      vector3Double0.convertDisToLatitudeLongitudeAltitude();
      linearSegmentParameter0.location = vector3Double0;
      linearSegmentParameter0.getLocation();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.segmentNumber = (short) (-413);
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = linearSegmentParameter0.getLocation();
      linearSegmentParameter0.setSegmentNumber((short) (-1275));
      linearSegmentParameter0.location = vector3Double0;
      linearSegmentParameter0.setSegmentDepth(2927);
      linearSegmentParameter0.getMarshalledSize();
      linearSegmentParameter0.getSegmentDepth();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.getSegmentAppearance();
      LinearSegmentParameter linearSegmentParameter2 = new LinearSegmentParameter();
      boolean boolean0 = linearSegmentParameter0.equals(linearSegmentParameter2);
      assertEquals(2927, linearSegmentParameter0.getSegmentDepth());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = linearSegmentParameter0.getLocation();
      linearSegmentParameter0.location = vector3Double0;
      linearSegmentParameter0.getLocation();
      ByteBuffer.allocate(255);
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.setSegmentDepth(255);
      boolean boolean0 = linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
      assertEquals(255, linearSegmentParameter1.getSegmentDepth());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      SixByteChunk sixByteChunk0 = linearSegmentParameter0.segmentAppearance;
      Vector3Double vector3Double0 = linearSegmentParameter0.getLocation();
      linearSegmentParameter0.location = vector3Double0;
      byte[] byteArray0 = new byte[6];
      sixByteChunk0.setOtherParameters(byteArray0);
      byteArray0[0] = (byte) (-77);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-4);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte) (-23);
      sixByteChunk0.setOtherParameters(byteArray0);
      linearSegmentParameter0.segmentNumber = (short)4;
      linearSegmentParameter0.segmentNumber = (short)4;
      linearSegmentParameter0.setSegmentNumber((short)1725);
      linearSegmentParameter0.setSegmentAppearance(sixByteChunk0);
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.getSegmentNumber();
      linearSegmentParameter0.getSegmentHeight();
      linearSegmentParameter0.getPad1();
      assertEquals((short)1725, linearSegmentParameter0.getSegmentNumber());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.segmentWidth = 255;
      int int0 = linearSegmentParameter0.getSegmentHeight();
      assertEquals(0, int0);
      
      linearSegmentParameter0.setPad1(0);
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.getSegmentAppearance();
      assertEquals(0, linearSegmentParameter1.getSegmentHeight());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.getSegmentLength();
      linearSegmentParameter0.getMarshalledSize();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.setSegmentDepth((-1704));
      linearSegmentParameter1.getSegmentHeight();
      int int0 = linearSegmentParameter1.getSegmentHeight();
      assertEquals((-1704), linearSegmentParameter1.getSegmentDepth());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      boolean boolean0 = linearSegmentParameter0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setPad1((-1379L));
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.getSegmentNumber();
      boolean boolean0 = linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
      assertEquals((-1379L), linearSegmentParameter0.getPad1());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setPad1((-1379L));
      linearSegmentParameter0.segmentLength = 4065;
      int int0 = linearSegmentParameter0.getMarshalledSize();
      assertEquals(55, int0);
      
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.segmentWidth = (-4100);
      LinearSegmentParameter linearSegmentParameter2 = new LinearSegmentParameter();
      boolean boolean0 = linearSegmentParameter1.equalsImpl(linearSegmentParameter2);
      assertFalse(boolean0);
      
      linearSegmentParameter2.getOrientation();
      assertFalse(linearSegmentParameter2.equals((Object)linearSegmentParameter1));
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.segmentLength = 4065;
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(4065);
      linearSegmentParameter0.unmarshal(byteBuffer0);
      linearSegmentParameter0.setOrientation((Orientation) null);
      Orientation orientation0 = new Orientation();
      linearSegmentParameter0.setOrientation((Orientation) null);
      linearSegmentParameter0.getLocation();
      assertEquals(0, linearSegmentParameter0.getSegmentLength());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = linearSegmentParameter0.getLocation();
      linearSegmentParameter0.location = vector3Double0;
      linearSegmentParameter0.getLocation();
      ByteBuffer.allocateDirect(1191);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte) (-4);
      byteArray0[3] = (byte) (-92);
      byteArray0[4] = (byte)58;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)116;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0, 0, 4);
      // Undeclared exception!
      try { 
        linearSegmentParameter0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentLength((-4100));
      Orientation orientation0 = new Orientation();
      linearSegmentParameter0.setOrientation(orientation0);
      linearSegmentParameter0.getSegmentLength();
      linearSegmentParameter0.getSegmentDepth();
      int int0 = linearSegmentParameter0.getMarshalledSize();
      assertEquals((-4100), linearSegmentParameter0.getSegmentLength());
      assertEquals(55, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = new Vector3Double();
      linearSegmentParameter0.location = vector3Double0;
      linearSegmentParameter0.segmentLength = 2144905636;
      vector3Double0.y = 0.0;
      linearSegmentParameter0.segmentNumber = (short)101;
      linearSegmentParameter0.getSegmentLength();
      linearSegmentParameter0.getOrientation();
      Object object0 = new Object();
      linearSegmentParameter0.equalsImpl(object0);
      vector3Double0.setX(2144905636);
      linearSegmentParameter0.getMarshalledSize();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(55);
      // Undeclared exception!
      try { 
        byteBuffer0.putChar(324, '[');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.setSegmentLength(6);
      boolean boolean0 = linearSegmentParameter0.equals(linearSegmentParameter1);
      assertEquals(6, linearSegmentParameter1.getSegmentLength());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      assertTrue(linearSegmentParameter1.equals((Object)linearSegmentParameter0));
      
      linearSegmentParameter1.segmentWidth = 3007;
      boolean boolean0 = linearSegmentParameter1.equalsImpl(linearSegmentParameter0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentWidth((-4100));
      linearSegmentParameter0.segmentDepth = (-4100);
      Object object0 = new Object();
      linearSegmentParameter0.equals(object0);
      Orientation orientation0 = linearSegmentParameter0.getOrientation();
      linearSegmentParameter0.orientation = orientation0;
      linearSegmentParameter0.segmentLength = 0;
      linearSegmentParameter0.segmentLength = (-4100);
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
      linearSegmentParameter0.setSegmentAppearance((SixByteChunk) null);
      assertEquals((-4100), linearSegmentParameter0.getSegmentWidth());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = linearSegmentParameter0.location;
      vector3Double0.y = (-1699.242551382317);
      linearSegmentParameter0.setSegmentWidth(0);
      linearSegmentParameter0.setLocation(vector3Double0);
      linearSegmentParameter0.equalsImpl(vector3Double0);
      linearSegmentParameter0.setSegmentLength((-413));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)87;
      byteArray0[1] = (byte) (-80);
      vector3Double0.setX((-1699.242551382317));
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-102);
      byteArray0[4] = (byte)0;
      SixByteChunk sixByteChunk0 = linearSegmentParameter0.segmentAppearance;
      linearSegmentParameter0.segmentAppearance = sixByteChunk0;
      byteArray0[5] = (byte) (-46);
      vector3Double0.setY((-1054.0));
      linearSegmentParameter0.setLocation(vector3Double0);
      linearSegmentParameter0.equals(vector3Double0);
      linearSegmentParameter0.getLocation();
      assertEquals((-413), linearSegmentParameter0.getSegmentLength());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.getMarshalledSize();
      linearSegmentParameter0.setSegmentDepth(0);
      linearSegmentParameter0.getPad1();
      linearSegmentParameter0.setSegmentDepth(255);
      linearSegmentParameter0.getMarshalledSize();
      linearSegmentParameter0.getSegmentDepth();
      int int0 = linearSegmentParameter0.getSegmentWidth();
      assertEquals(255, linearSegmentParameter0.getSegmentDepth());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      int int0 = linearSegmentParameter0.getSegmentHeight();
      assertEquals(0, int0);
      
      linearSegmentParameter0.setPad1(0);
      Orientation orientation0 = linearSegmentParameter0.orientation;
      linearSegmentParameter0.setOrientation(orientation0);
      orientation0.theta = (-3008.44F);
      linearSegmentParameter0.setPad1((-2030L));
      linearSegmentParameter0.setOrientation(orientation0);
      linearSegmentParameter0.equalsImpl(orientation0);
      linearSegmentParameter0.getOrientation();
      assertEquals((-2030L), linearSegmentParameter0.getPad1());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Object object0 = new Object();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = new Vector3Double();
      linearSegmentParameter1.location = vector3Double0;
      linearSegmentParameter1.setSegmentLength((-1943));
      linearSegmentParameter0.setSegmentDepth(0);
      linearSegmentParameter0.getPad1();
      linearSegmentParameter1.getOrientation();
      linearSegmentParameter0.setSegmentDepth((-1943));
      linearSegmentParameter1.getMarshalledSize();
      int int0 = linearSegmentParameter1.getSegmentDepth();
      assertEquals((-1943), linearSegmentParameter1.getSegmentLength());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      SixByteChunk sixByteChunk0 = linearSegmentParameter0.getSegmentAppearance();
      assertEquals(6, sixByteChunk0.getMarshalledSize());
      
      linearSegmentParameter0.setSegmentAppearance(sixByteChunk0);
      Vector3Double vector3Double0 = new Vector3Double();
      linearSegmentParameter0.location = vector3Double0;
      linearSegmentParameter0.segmentHeight = 160;
      linearSegmentParameter0.getSegmentNumber();
      linearSegmentParameter0.setSegmentDepth(160);
      linearSegmentParameter0.getSegmentLength();
      assertEquals(160, linearSegmentParameter0.getSegmentDepth());
      
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.getSegmentDepth();
      Object object0 = new Object();
      boolean boolean0 = linearSegmentParameter1.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentDepth(2);
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      boolean boolean0 = linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
      assertEquals(2, linearSegmentParameter0.getSegmentDepth());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.getMarshalledSize();
      linearSegmentParameter0.setSegmentDepth(0);
      linearSegmentParameter0.getPad1();
      linearSegmentParameter0.getOrientation();
      linearSegmentParameter0.setSegmentDepth(255);
      linearSegmentParameter0.getMarshalledSize();
      int int0 = linearSegmentParameter0.getSegmentDepth();
      assertEquals(255, int0);
      
      linearSegmentParameter0.getSegmentAppearance();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      boolean boolean0 = linearSegmentParameter0.equals(linearSegmentParameter1);
      assertEquals(255, linearSegmentParameter0.getSegmentDepth());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setPad1(1L);
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      boolean boolean0 = linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
      assertEquals(1L, linearSegmentParameter0.getPad1());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = linearSegmentParameter0.location;
      vector3Double0.y = (-1699.242551382317);
      linearSegmentParameter0.setSegmentWidth(0);
      linearSegmentParameter0.setLocation(vector3Double0);
      linearSegmentParameter0.equalsImpl(vector3Double0);
      linearSegmentParameter0.setSegmentLength((-413));
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      boolean boolean0 = linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
      assertEquals((-413), linearSegmentParameter0.getSegmentLength());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.setPad1(832L);
      Object object0 = new Object();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter0.equals(linearSegmentParameter1);
      linearSegmentParameter0.getOrientation();
      SixByteChunk sixByteChunk0 = linearSegmentParameter0.getSegmentAppearance();
      linearSegmentParameter0.setSegmentAppearance(sixByteChunk0);
      LinearSegmentParameter linearSegmentParameter2 = new LinearSegmentParameter();
      LinearSegmentParameter linearSegmentParameter3 = new LinearSegmentParameter();
      linearSegmentParameter2.setSegmentLength((-4701));
      LinearSegmentParameter linearSegmentParameter4 = new LinearSegmentParameter();
      linearSegmentParameter3.equalsImpl(linearSegmentParameter4);
      linearSegmentParameter2.setSegmentAppearance((SixByteChunk) null);
      assertEquals((-4701), linearSegmentParameter2.getSegmentLength());
      
      linearSegmentParameter3.getOrientation();
      assertTrue(linearSegmentParameter3.equals((Object)linearSegmentParameter4));
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentWidth((-4100));
      linearSegmentParameter0.segmentDepth = (-4100);
      SixByteChunk sixByteChunk0 = linearSegmentParameter0.segmentAppearance;
      byte[] byteArray0 = new byte[0];
      sixByteChunk0.setOtherParameters(byteArray0);
      Vector3Double vector3Double0 = linearSegmentParameter0.getLocation();
      linearSegmentParameter0.setLocation(vector3Double0);
      linearSegmentParameter0.getPad1();
      linearSegmentParameter0.getSegmentWidth();
      linearSegmentParameter0.getSegmentLength();
      linearSegmentParameter0.getOrientation();
      assertEquals((-4100), linearSegmentParameter0.getSegmentWidth());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      SixByteChunk sixByteChunk0 = linearSegmentParameter0.getSegmentAppearance();
      linearSegmentParameter0.setSegmentAppearance(sixByteChunk0);
      linearSegmentParameter0.segmentHeight = 160;
      linearSegmentParameter0.getSegmentNumber();
      linearSegmentParameter0.getLocation();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(255);
      linearSegmentParameter0.marshal(byteBuffer0);
      assertEquals(160, linearSegmentParameter0.getSegmentHeight());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      int int0 = linearSegmentParameter0.getSegmentWidth();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      SixByteChunk sixByteChunk0 = linearSegmentParameter0.getSegmentAppearance();
      linearSegmentParameter0.segmentAppearance = sixByteChunk0;
      linearSegmentParameter0.getOrientation();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)27;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)89;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)50;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)1;
      sixByteChunk0.setOtherParameters(byteArray0);
      linearSegmentParameter0.setLocation((Vector3Double) null);
      linearSegmentParameter0.getPad1();
      int int0 = linearSegmentParameter0.getSegmentWidth();
      int int1 = linearSegmentParameter0.getSegmentLength();
      assertTrue(int1 == int0);
      
      linearSegmentParameter0.getOrientation();
      assertEquals(0, linearSegmentParameter0.getSegmentWidth());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.getLocation();
      int int0 = linearSegmentParameter0.getSegmentLength();
      assertEquals(0, int0);
      
      int int1 = linearSegmentParameter0.getSegmentDepth();
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = linearSegmentParameter0.getLocation();
      linearSegmentParameter0.location = vector3Double0;
      linearSegmentParameter0.setSegmentDepth((-1487));
      linearSegmentParameter0.getSegmentLength();
      int int0 = linearSegmentParameter0.getSegmentDepth();
      assertEquals((-1487), int0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = linearSegmentParameter0.getLocation();
      vector3Double0.setZ(0.0);
      linearSegmentParameter0.setLocation(vector3Double0);
      linearSegmentParameter0.setSegmentLength(0);
      linearSegmentParameter0.getSegmentAppearance();
      Orientation orientation0 = new Orientation();
      linearSegmentParameter0.setOrientation(orientation0);
      linearSegmentParameter0.setSegmentLength(233);
      linearSegmentParameter0.getSegmentNumber();
      linearSegmentParameter0.getSegmentHeight();
      linearSegmentParameter0.setSegmentNumber((short)0);
      linearSegmentParameter0.setLocation(vector3Double0);
      assertEquals(233, linearSegmentParameter0.getSegmentLength());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      int int0 = linearSegmentParameter0.getSegmentHeight();
      assertEquals(0, int0);
      
      linearSegmentParameter0.setPad1(0);
      Orientation orientation0 = linearSegmentParameter0.orientation;
      orientation0.theta = (-3008.44F);
      linearSegmentParameter0.setOrientation(orientation0);
      boolean boolean0 = linearSegmentParameter0.equalsImpl(orientation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Orientation orientation0 = linearSegmentParameter0.getOrientation();
      assertEquals(0.0F, orientation0.getPhi(), 0.01F);
      
      linearSegmentParameter0.setOrientation(orientation0);
      long long0 = linearSegmentParameter0.getPad1();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setOrientation((Orientation) null);
      // Undeclared exception!
      try { 
        linearSegmentParameter0.getMarshalledSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.LinearSegmentParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = new Vector3Double();
      linearSegmentParameter0.location = vector3Double0;
      SixByteChunk sixByteChunk0 = linearSegmentParameter0.getSegmentAppearance();
      vector3Double0.setZ(1160.43991636);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1137);
      ByteBuffer.allocate(1137);
      sixByteChunk0.unmarshal(byteBuffer0);
      vector3Double0.convertLatitudeLongitudeAltitudeToDis();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)62;
      byteArray0[4] = (byte)69;
      sixByteChunk0.otherParameters = byteArray0;
      linearSegmentParameter0.getSegmentAppearance();
      linearSegmentParameter0.setSegmentAppearance(sixByteChunk0);
      vector3Double0.y = 1160.43991636;
      linearSegmentParameter0.setLocation((Vector3Double) null);
      // Undeclared exception!
      try { 
        linearSegmentParameter0.getMarshalledSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.LinearSegmentParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setPad1(0L);
      linearSegmentParameter0.getSegmentAppearance();
      linearSegmentParameter0.setSegmentHeight((-5183));
      Orientation orientation0 = linearSegmentParameter0.orientation;
      linearSegmentParameter0.orientation = orientation0;
      linearSegmentParameter0.getLocation();
      linearSegmentParameter0.getSegmentDepth();
      linearSegmentParameter0.setSegmentLength(2);
      linearSegmentParameter0.orientation.theta = 0.0F;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      orientation0.theta = (float) 0;
      byteArray0[1] = (byte) (-109);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      byteBuffer0.compact();
      // Undeclared exception!
      try { 
        byteBuffer0.get((-2680));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.segmentHeight = 0;
      linearSegmentParameter0.setSegmentWidth(0);
      linearSegmentParameter0.pad1 = (long) 0;
      linearSegmentParameter0.setSegmentLength(0);
      SixByteChunk sixByteChunk0 = linearSegmentParameter0.getSegmentAppearance();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)99;
      sixByteChunk0.otherParameters = byteArray0;
      linearSegmentParameter0.setSegmentAppearance(sixByteChunk0);
      linearSegmentParameter0.setSegmentLength((-49));
      linearSegmentParameter0.setSegmentHeight(0);
      linearSegmentParameter0.setSegmentDepth(0);
      assertEquals((-49), linearSegmentParameter0.getSegmentLength());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.location = null;
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      // Undeclared exception!
      try { 
        linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.LinearSegmentParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Object object0 = new Object();
      boolean boolean0 = linearSegmentParameter0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Object object0 = new Object();
      boolean boolean0 = linearSegmentParameter0.equals(linearSegmentParameter0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Object object0 = new Object();
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = linearSegmentParameter0.getLocation();
      vector3Double0.setY(4065);
      vector3Double0.convertDisToLatitudeLongitudeAltitude();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      linearSegmentParameter1.setLocation(vector3Double0);
      boolean boolean0 = linearSegmentParameter1.equals((Object) null);
      assertFalse(boolean0);
      
      int int0 = linearSegmentParameter1.getSegmentWidth();
      assertTrue(linearSegmentParameter1.equals((Object)linearSegmentParameter0));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      boolean boolean0 = linearSegmentParameter0.equalsImpl(linearSegmentParameter0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentWidth((-4100));
      linearSegmentParameter0.segmentDepth = (-4100);
      linearSegmentParameter0.setPad1((-4100));
      Object object0 = new Object();
      linearSegmentParameter0.equals(object0);
      Orientation orientation0 = linearSegmentParameter0.getOrientation();
      linearSegmentParameter0.orientation = orientation0;
      linearSegmentParameter0.segmentLength = 0;
      linearSegmentParameter0.segmentLength = (-4100);
      SixByteChunk sixByteChunk0 = null;
      linearSegmentParameter0.setSegmentAppearance((SixByteChunk) null);
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      // Undeclared exception!
      try { 
        linearSegmentParameter0.equalsImpl(linearSegmentParameter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.LinearSegmentParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      boolean boolean0 = linearSegmentParameter1.equals(linearSegmentParameter0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2);
      // Undeclared exception!
      try { 
        linearSegmentParameter0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentWidth(255);
      linearSegmentParameter0.setSegmentWidth(0);
      linearSegmentParameter0.setLocation((Vector3Double) null);
      linearSegmentParameter0.setSegmentNumber((short)3302);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)57;
      byteArray0[2] = (byte)0;
      // Undeclared exception!
      try { 
        ByteBuffer.wrap(byteArray0, (-1), 3658);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      int int0 = 1;
      linearSegmentParameter0.setSegmentLength(1);
      ByteBuffer byteBuffer0 = null;
      linearSegmentParameter0.segmentHeight = 2693;
      linearSegmentParameter0.setSegmentWidth(1);
      // Undeclared exception!
      try { 
        linearSegmentParameter0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.LinearSegmentParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      // Undeclared exception!
      try { 
        linearSegmentParameter0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.LinearSegmentParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      int int0 = 1;
      linearSegmentParameter0.setSegmentWidth(1);
      Object object0 = new Object();
      linearSegmentParameter0.equalsImpl(object0);
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = linearSegmentParameter1.location;
      linearSegmentParameter0.location = vector3Double0;
      linearSegmentParameter0.setPad1(1519L);
      vector3Double0.setZ((-1426.05));
      linearSegmentParameter0.setSegmentDepth(456);
      Orientation orientation0 = linearSegmentParameter0.getOrientation();
      linearSegmentParameter0.setSegmentDepth(0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-62);
      byteArray0[1] = (byte) (-58);
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        orientation0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentLength(6);
      assertEquals(6, linearSegmentParameter0.getSegmentLength());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Vector3Double vector3Double0 = linearSegmentParameter0.location;
      vector3Double0.y = (-1699.242551382317);
      linearSegmentParameter0.setSegmentWidth(0);
      linearSegmentParameter0.setLocation(vector3Double0);
      linearSegmentParameter0.equalsImpl(vector3Double0);
      int int0 = (-413);
      linearSegmentParameter0.setSegmentLength((-413));
      short short0 = (short) (-578);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)87;
      byteArray0[1] = (byte) (-80);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-102);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-46);
      byteArray0[6] = (byte) (-89);
      byteArray0[7] = (byte)33;
      byteArray0[8] = (byte)0;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        linearSegmentParameter0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentHeight(3);
      Vector3Double vector3Double0 = linearSegmentParameter0.location;
      vector3Double0.setY(3);
      linearSegmentParameter0.setLocation(vector3Double0);
      assertEquals(3, linearSegmentParameter0.getSegmentHeight());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        linearSegmentParameter0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      // Undeclared exception!
      try { 
        linearSegmentParameter0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.LinearSegmentParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(4);
      // Undeclared exception!
      try { 
        linearSegmentParameter0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      int int0 = linearSegmentParameter0.getSegmentDepth();
      assertEquals(0, int0);
      
      Vector3Double vector3Double0 = linearSegmentParameter0.location;
      vector3Double0.convertDisToLatitudeLongitudeAltitude();
      vector3Double0.convertLatitudeLongitudeAltitudeToDis();
      linearSegmentParameter0.location = vector3Double0;
      linearSegmentParameter0.setSegmentWidth(0);
      linearSegmentParameter0.setPad1(0L);
      linearSegmentParameter0.getPad1();
      vector3Double0.setY((-863.8));
      linearSegmentParameter0.getSegmentDepth();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      // Undeclared exception!
      try { 
        byteBuffer0.putLong(0, 2119L);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      long long0 = linearSegmentParameter0.getPad1();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setPad1((-2047L));
      linearSegmentParameter0.getOrientation();
      assertEquals((-2047L), linearSegmentParameter0.getPad1());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentWidth((-1829));
      linearSegmentParameter0.getPad1();
      assertEquals((-1829), linearSegmentParameter0.getSegmentWidth());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setOrientation((Orientation) null);
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      boolean boolean0 = linearSegmentParameter1.equalsImpl(linearSegmentParameter0);
      assertFalse(boolean0);
      
      linearSegmentParameter1.getPad1();
      assertFalse(linearSegmentParameter1.equals((Object)linearSegmentParameter0));
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentNumber((short) (-1019));
      int int0 = linearSegmentParameter0.getSegmentHeight();
      assertEquals((short) (-1019), linearSegmentParameter0.getSegmentNumber());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      short short0 = linearSegmentParameter0.getSegmentNumber();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      SixByteChunk sixByteChunk0 = linearSegmentParameter0.segmentAppearance;
      linearSegmentParameter0.setSegmentAppearance(sixByteChunk0);
      long long0 = linearSegmentParameter0.getPad1();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentDepth(0);
      LinearSegmentParameter linearSegmentParameter1 = new LinearSegmentParameter();
      assertTrue(linearSegmentParameter1.equals((Object)linearSegmentParameter0));
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      Object object0 = new Object();
      boolean boolean0 = linearSegmentParameter0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentHeight((-1490));
      linearSegmentParameter0.setSegmentNumber((short)0);
      Orientation orientation0 = new Orientation();
      linearSegmentParameter0.orientation = orientation0;
      linearSegmentParameter0.segmentWidth = 242;
      linearSegmentParameter0.setSegmentDepth(242);
      linearSegmentParameter0.equalsImpl((Object) null);
      linearSegmentParameter0.getSegmentNumber();
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)105;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)87;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-122);
      byteArray0[7] = (byte)83;
      sixByteChunk0.otherParameters = byteArray0;
      linearSegmentParameter0.setSegmentAppearance(sixByteChunk0);
      assertEquals((-1490), linearSegmentParameter0.getSegmentHeight());
  }

  @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      LinearSegmentParameter linearSegmentParameter0 = new LinearSegmentParameter();
      linearSegmentParameter0.setSegmentHeight(2);
      linearSegmentParameter0.getPad1();
      assertEquals(2, linearSegmentParameter0.getSegmentHeight());
  }
}
