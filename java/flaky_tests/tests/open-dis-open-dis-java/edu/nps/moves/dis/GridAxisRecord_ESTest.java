/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 14:53:51 GMT 2022
 */

package edu.nps.moves.dis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis.GridAxisRecord;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GridAxisRecord_ESTest extends GridAxisRecord_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      gridAxisRecord0.dataRepresentation = (-489);
      GridAxisRecord gridAxisRecord1 = new GridAxisRecord();
      boolean boolean0 = gridAxisRecord1.equals(gridAxisRecord0);
      assertFalse(gridAxisRecord0.equals((Object)gridAxisRecord1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      gridAxisRecord0.setDataRepresentation(1);
      boolean boolean0 = gridAxisRecord0.equalsImpl(gridAxisRecord0);
      assertEquals(1, gridAxisRecord0.getDataRepresentation());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      GridAxisRecord gridAxisRecord1 = new GridAxisRecord();
      assertTrue(gridAxisRecord1.equals((Object)gridAxisRecord0));
      
      gridAxisRecord1.sampleType = (-489);
      boolean boolean0 = gridAxisRecord0.equals(gridAxisRecord1);
      assertFalse(gridAxisRecord1.equals((Object)gridAxisRecord0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      gridAxisRecord0.dataRepresentation = 2588;
      byte[] byteArray0 = new byte[3];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        gridAxisRecord0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      gridAxisRecord0.sampleType = 2146;
      // Undeclared exception!
      try { 
        gridAxisRecord0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.GridAxisRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      gridAxisRecord0.setDataRepresentation((-1748));
      int int0 = gridAxisRecord0.getMarshalledSize();
      assertEquals((-1748), gridAxisRecord0.getDataRepresentation());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      byte[] byteArray0 = new byte[5];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      gridAxisRecord0.unmarshal(byteBuffer0);
      assertEquals(0, gridAxisRecord0.getDataRepresentation());
      assertEquals(0, gridAxisRecord0.getSampleType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(674);
      gridAxisRecord0.marshal(byteBuffer0);
      assertEquals(0, gridAxisRecord0.getSampleType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      gridAxisRecord0.setSampleType(150);
      int int0 = gridAxisRecord0.getSampleType();
      assertEquals(150, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      gridAxisRecord0.sampleType = (-1506);
      int int0 = gridAxisRecord0.getSampleType();
      assertEquals((-1506), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      gridAxisRecord0.dataRepresentation = 1014;
      int int0 = gridAxisRecord0.getDataRepresentation();
      assertEquals(1014, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      gridAxisRecord0.setDataRepresentation((-1263));
      int int0 = gridAxisRecord0.getDataRepresentation();
      assertEquals((-1263), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      // Undeclared exception!
      try { 
        gridAxisRecord0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      GridAxisRecord gridAxisRecord1 = new GridAxisRecord();
      gridAxisRecord1.setSampleType(65535);
      boolean boolean0 = gridAxisRecord0.equalsImpl(gridAxisRecord1);
      assertEquals(65535, gridAxisRecord1.getSampleType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      Object object0 = new Object();
      boolean boolean0 = gridAxisRecord0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      GridAxisRecord gridAxisRecord1 = new GridAxisRecord();
      boolean boolean0 = gridAxisRecord0.equals(gridAxisRecord1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      boolean boolean0 = gridAxisRecord0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      boolean boolean0 = gridAxisRecord0.equals(gridAxisRecord0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      Object object0 = new Object();
      boolean boolean0 = gridAxisRecord0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      // Undeclared exception!
      try { 
        gridAxisRecord0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.GridAxisRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      gridAxisRecord0.setDataRepresentation((-1748));
      GridAxisRecord gridAxisRecord1 = new GridAxisRecord();
      boolean boolean0 = gridAxisRecord0.equalsImpl(gridAxisRecord1);
      assertEquals((-1748), gridAxisRecord0.getDataRepresentation());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      gridAxisRecord0.setSampleType(65535);
      int int0 = gridAxisRecord0.getMarshalledSize();
      assertEquals(65535, gridAxisRecord0.getSampleType());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      int int0 = gridAxisRecord0.getSampleType();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GridAxisRecord gridAxisRecord0 = new GridAxisRecord();
      int int0 = gridAxisRecord0.getDataRepresentation();
      assertEquals(0, int0);
  }
}
