/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:22:23 GMT 2022
 */

package edu.nps.moves.dis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis.BeamData;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.ReadOnlyBufferException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BeamData_ESTest extends BeamData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.beamSweepSync = (-925.45F);
      BeamData beamData1 = new BeamData();
      boolean boolean0 = beamData1.equals(beamData0);
      assertFalse(beamData0.equals((Object)beamData1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      BeamData beamData1 = new BeamData();
      assertTrue(beamData1.equals((Object)beamData0));
      
      beamData1.beamElevationSweep = 2408.102F;
      boolean boolean0 = beamData1.equals(beamData0);
      assertFalse(beamData1.equals((Object)beamData0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.beamElevationCenter = 1.0F;
      BeamData beamData1 = new BeamData();
      boolean boolean0 = beamData0.equalsImpl(beamData1);
      assertFalse(beamData1.equals((Object)beamData0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.beamElevationCenter = 1.0F;
      boolean boolean0 = beamData0.equalsImpl(beamData0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.setBeamSweepSync((-1196.0F));
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(854);
      beamData0.marshal(byteBuffer0);
      assertEquals((-1196.0F), beamData0.getBeamSweepSync(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2961);
      beamData0.setBeamElevationSweep((-190.20236F));
      beamData0.marshal(byteBuffer0);
      assertEquals((-190.20236F), beamData0.getBeamElevationSweep(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.beamElevationCenter = 1.0F;
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        beamData0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.setBeamAzimuthSweep(671.0F);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2961);
      beamData0.marshal(byteBuffer0);
      assertEquals(671.0F, beamData0.getBeamAzimuthSweep(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.setBeamAzimuthCenter(671.0F);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2961);
      beamData0.marshal(byteBuffer0);
      assertEquals(671.0F, beamData0.getBeamAzimuthCenter(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2961);
      beamData0.unmarshal(byteBuffer0);
      assertEquals(20, byteBuffer0.position());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.setBeamSweepSync(433.4F);
      float float0 = beamData0.getBeamSweepSync();
      assertEquals(433.4F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.beamSweepSync = (-554.918F);
      float float0 = beamData0.getBeamSweepSync();
      assertEquals((-554.918F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.setBeamElevationSweep(1.0F);
      float float0 = beamData0.getBeamElevationSweep();
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.setBeamElevationSweep((-968.7712F));
      float float0 = beamData0.getBeamElevationSweep();
      assertEquals((-968.7712F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.setBeamElevationCenter(2961.0F);
      float float0 = beamData0.getBeamElevationCenter();
      assertEquals(2961.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.beamElevationCenter = (-425.158F);
      float float0 = beamData0.getBeamElevationCenter();
      assertEquals((-425.158F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.beamAzimuthSweep = (float) 1;
      float float0 = beamData0.getBeamAzimuthSweep();
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.setBeamAzimuthSweep((-1014.0F));
      float float0 = beamData0.getBeamAzimuthSweep();
      assertEquals((-1014.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.setBeamAzimuthCenter(1.0F);
      float float0 = beamData0.getBeamAzimuthCenter();
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.setBeamAzimuthCenter((-925.45F));
      float float0 = beamData0.getBeamAzimuthCenter();
      assertEquals((-925.45F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      // Undeclared exception!
      try { 
        beamData0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.BeamData", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2961);
      ByteBuffer byteBuffer1 = byteBuffer0.asReadOnlyBuffer();
      // Undeclared exception!
      try { 
        beamData0.marshal(byteBuffer1);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapByteBufferR", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      // Undeclared exception!
      try { 
        beamData0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.BeamData", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.setBeamAzimuthSweep(672.43066F);
      BeamData beamData1 = new BeamData();
      boolean boolean0 = beamData0.equalsImpl(beamData1);
      assertEquals(672.43066F, beamData0.getBeamAzimuthSweep(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.setBeamAzimuthCenter(671.0F);
      BeamData beamData1 = new BeamData();
      boolean boolean0 = beamData0.equalsImpl(beamData1);
      assertEquals(671.0F, beamData0.getBeamAzimuthCenter(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.beamSweepSync = (-1.0F);
      BeamData beamData1 = new BeamData();
      boolean boolean0 = beamData0.equalsImpl(beamData1);
      assertFalse(boolean0);
      assertFalse(beamData1.equals((Object)beamData0));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      BeamData beamData1 = new BeamData();
      beamData1.setBeamElevationSweep(2516.2534F);
      boolean boolean0 = beamData0.equalsImpl(beamData1);
      assertEquals(2516.2534F, beamData1.getBeamElevationSweep(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      BeamData beamData1 = new BeamData();
      beamData1.setBeamElevationCenter(1.0F);
      boolean boolean0 = beamData0.equalsImpl(beamData1);
      assertEquals(1.0F, beamData1.getBeamElevationCenter(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      Object object0 = new Object();
      boolean boolean0 = beamData0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2961);
      boolean boolean0 = beamData0.equals(byteBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      boolean boolean0 = beamData0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      boolean boolean0 = beamData0.equals(beamData0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      int int0 = beamData0.getMarshalledSize();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      float float0 = beamData0.getBeamAzimuthCenter();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.setBeamAzimuthSweep(671.0F);
      BeamData beamData1 = new BeamData();
      boolean boolean0 = beamData1.equals(beamData0);
      assertEquals(671.0F, beamData0.getBeamAzimuthSweep(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      // Undeclared exception!
      try { 
        beamData0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      float float0 = beamData0.getBeamAzimuthSweep();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      float float0 = beamData0.getBeamElevationCenter();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      float float0 = beamData0.getBeamElevationSweep();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      beamData0.setBeamAzimuthCenter(671.0F);
      BeamData beamData1 = new BeamData();
      boolean boolean0 = beamData1.equals(beamData0);
      assertEquals(671.0F, beamData0.getBeamAzimuthCenter(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BeamData beamData0 = new BeamData();
      float float0 = beamData0.getBeamSweepSync();
      assertEquals(0.0F, float0, 0.01F);
  }
}
