/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:10:04 GMT 2022
 */

package edu.nps.moves.dis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis.BurstDescriptor;
import edu.nps.moves.dis.EntityType;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BurstDescriptor_ESTest extends BurstDescriptor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.quantity = 255;
      BurstDescriptor burstDescriptor1 = new BurstDescriptor();
      boolean boolean0 = burstDescriptor0.equals(burstDescriptor1);
      assertFalse(boolean0);
      assertFalse(burstDescriptor1.equals((Object)burstDescriptor0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      BurstDescriptor burstDescriptor1 = new BurstDescriptor();
      assertTrue(burstDescriptor1.equals((Object)burstDescriptor0));
      
      burstDescriptor1.fuse = (int) (short) (-18);
      boolean boolean0 = burstDescriptor0.equalsImpl(burstDescriptor1);
      assertFalse(burstDescriptor1.equals((Object)burstDescriptor0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      BurstDescriptor burstDescriptor1 = new BurstDescriptor();
      burstDescriptor1.setWarhead((-1722));
      boolean boolean0 = burstDescriptor0.equalsImpl(burstDescriptor1);
      assertEquals((-1722), burstDescriptor1.getWarhead());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.rate = 230;
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2822);
      burstDescriptor0.marshal(byteBuffer0);
      assertEquals(2822, byteBuffer0.limit());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.setWarhead((-1722));
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2822);
      burstDescriptor0.marshal(byteBuffer0);
      assertEquals((-1722), burstDescriptor0.getWarhead());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.setFuse(255);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(255);
      burstDescriptor0.marshal(byteBuffer0);
      assertEquals(255, burstDescriptor0.getFuse());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.setRate(2);
      int int0 = burstDescriptor0.getMarshalledSize();
      assertEquals(2, burstDescriptor0.getRate());
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.quantity = (-2738);
      int int0 = burstDescriptor0.getMarshalledSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.setWarhead((-2008));
      int int0 = burstDescriptor0.getMarshalledSize();
      assertEquals((-2008), burstDescriptor0.getWarhead());
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.setFuse(2);
      int int0 = burstDescriptor0.getMarshalledSize();
      assertEquals(2, burstDescriptor0.getFuse());
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.warhead = 643;
      int int0 = burstDescriptor0.getWarhead();
      assertEquals(643, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.setWarhead((-1722));
      int int0 = burstDescriptor0.getWarhead();
      assertEquals((-1722), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.rate = 230;
      int int0 = burstDescriptor0.getRate();
      assertEquals(230, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.rate = (-1);
      int int0 = burstDescriptor0.getRate();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.quantity = 2278;
      int int0 = burstDescriptor0.getQuantity();
      assertEquals(2278, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.quantity = (-2738);
      int int0 = burstDescriptor0.getQuantity();
      assertEquals((-2738), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.setMunition((EntityType) null);
      EntityType entityType0 = burstDescriptor0.getMunition();
      assertNull(entityType0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      EntityType entityType0 = burstDescriptor0.getMunition();
      entityType0.setSubcategory((short) (-1710));
      EntityType entityType1 = burstDescriptor0.getMunition();
      assertEquals((short) (-1710), entityType1.getSubcategory());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      EntityType entityType0 = burstDescriptor0.munition;
      entityType0.spec = (short)2963;
      EntityType entityType1 = burstDescriptor0.getMunition();
      assertEquals((short)0, entityType1.getEntityKind());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      EntityType entityType0 = burstDescriptor0.getMunition();
      entityType0.setSpec((short) (-1));
      EntityType entityType1 = burstDescriptor0.getMunition();
      assertEquals((short)0, entityType1.getSubcategory());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      EntityType entityType0 = burstDescriptor0.getMunition();
      entityType0.extra = (short)615;
      EntityType entityType1 = burstDescriptor0.getMunition();
      assertEquals((short)0, entityType1.getCategory());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      EntityType entityType0 = burstDescriptor0.munition;
      entityType0.extra = (short) (-2148);
      EntityType entityType1 = burstDescriptor0.getMunition();
      assertEquals(8, entityType1.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      EntityType entityType0 = burstDescriptor0.munition;
      entityType0.setEntityKind((short)1142);
      EntityType entityType1 = burstDescriptor0.getMunition();
      assertEquals((short)0, entityType1.getSubcategory());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      EntityType entityType0 = burstDescriptor0.getMunition();
      entityType0.setEntityKind((short) (-1310));
      EntityType entityType1 = burstDescriptor0.getMunition();
      assertEquals((short)0, entityType1.getExtra());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(255);
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)116;
      byteBuffer0.put(byteArray0);
      byteBuffer0.rewind();
      burstDescriptor0.unmarshal(byteBuffer0);
      burstDescriptor0.getMunition();
      assertEquals(0, burstDescriptor0.getRate());
      assertEquals(0, burstDescriptor0.getWarhead());
      assertEquals(0, burstDescriptor0.getQuantity());
      assertEquals(0, burstDescriptor0.getFuse());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      EntityType entityType0 = new EntityType();
      entityType0.domain = (short) (-2170);
      burstDescriptor0.munition = entityType0;
      EntityType entityType1 = burstDescriptor0.getMunition();
      assertEquals(0, entityType1.getCountry());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      EntityType entityType0 = new EntityType();
      burstDescriptor0.munition = entityType0;
      entityType0.country = 674;
      EntityType entityType1 = burstDescriptor0.getMunition();
      assertSame(entityType1, entityType0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      EntityType entityType0 = burstDescriptor0.munition;
      entityType0.setCountry((-1033));
      EntityType entityType1 = burstDescriptor0.getMunition();
      assertEquals((-1033), entityType1.getCountry());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      EntityType entityType0 = burstDescriptor0.munition;
      entityType0.setCategory((short) (-613));
      EntityType entityType1 = burstDescriptor0.getMunition();
      assertEquals((short)0, entityType1.getEntityKind());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.setFuse((-1));
      int int0 = burstDescriptor0.getFuse();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      boolean boolean0 = burstDescriptor0.equalsImpl(burstDescriptor0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      // Undeclared exception!
      try { 
        burstDescriptor0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      // Undeclared exception!
      try { 
        burstDescriptor0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.EntityType", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      // Undeclared exception!
      try { 
        burstDescriptor0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      // Undeclared exception!
      try { 
        burstDescriptor0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.EntityType", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.setMunition((EntityType) null);
      // Undeclared exception!
      try { 
        burstDescriptor0.getMarshalledSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.BurstDescriptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.munition = null;
      BurstDescriptor burstDescriptor1 = new BurstDescriptor();
      // Undeclared exception!
      try { 
        burstDescriptor0.equals(burstDescriptor1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.BurstDescriptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      BurstDescriptor burstDescriptor1 = new BurstDescriptor();
      assertTrue(burstDescriptor1.equals((Object)burstDescriptor0));
      
      burstDescriptor0.rate = (-2148);
      boolean boolean0 = burstDescriptor0.equalsImpl(burstDescriptor1);
      assertFalse(burstDescriptor1.equals((Object)burstDescriptor0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.setQuantity((-2148));
      BurstDescriptor burstDescriptor1 = new BurstDescriptor();
      boolean boolean0 = burstDescriptor0.equalsImpl(burstDescriptor1);
      assertEquals((-2148), burstDescriptor0.getQuantity());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.setFuse((-1));
      BurstDescriptor burstDescriptor1 = new BurstDescriptor();
      boolean boolean0 = burstDescriptor0.equalsImpl(burstDescriptor1);
      assertEquals((-1), burstDescriptor0.getFuse());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.setRate(65535);
      BurstDescriptor burstDescriptor1 = new BurstDescriptor();
      boolean boolean0 = burstDescriptor0.equals(burstDescriptor1);
      assertEquals(65535, burstDescriptor0.getRate());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      BurstDescriptor burstDescriptor1 = new BurstDescriptor();
      assertTrue(burstDescriptor1.equals((Object)burstDescriptor0));
      
      burstDescriptor1.quantity = 1021;
      boolean boolean0 = burstDescriptor0.equals(burstDescriptor1);
      assertFalse(burstDescriptor1.equals((Object)burstDescriptor0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.warhead = (-2148);
      BurstDescriptor burstDescriptor1 = new BurstDescriptor();
      boolean boolean0 = burstDescriptor0.equalsImpl(burstDescriptor1);
      assertFalse(boolean0);
      assertFalse(burstDescriptor1.equals((Object)burstDescriptor0));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      EntityType entityType0 = new EntityType();
      burstDescriptor0.setMunition(entityType0);
      BurstDescriptor burstDescriptor1 = new BurstDescriptor();
      assertTrue(burstDescriptor1.equals((Object)burstDescriptor0));
      
      entityType0.extra = (short) (-18);
      boolean boolean0 = burstDescriptor0.equalsImpl(burstDescriptor1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      EntityType entityType0 = burstDescriptor0.munition;
      boolean boolean0 = burstDescriptor0.equalsImpl(entityType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      Object object0 = new Object();
      boolean boolean0 = burstDescriptor0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      boolean boolean0 = burstDescriptor0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      boolean boolean0 = burstDescriptor0.equals(burstDescriptor0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      int int0 = burstDescriptor0.getQuantity();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      int int0 = burstDescriptor0.getFuse();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      int int0 = burstDescriptor0.getRate();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      EntityType entityType0 = burstDescriptor0.getMunition();
      entityType0.setCategory((short)255);
      EntityType entityType1 = burstDescriptor0.getMunition();
      assertEquals(0, entityType1.getCountry());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      burstDescriptor0.setFuse(255);
      int int0 = burstDescriptor0.getFuse();
      assertEquals(255, int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BurstDescriptor burstDescriptor0 = new BurstDescriptor();
      int int0 = burstDescriptor0.getWarhead();
      assertEquals(0, int0);
  }
}
