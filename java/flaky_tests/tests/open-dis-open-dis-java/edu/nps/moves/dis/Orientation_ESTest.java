/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:59:53 GMT 2022
 */

package edu.nps.moves.dis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis.Orientation;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Orientation_ESTest extends Orientation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      Orientation orientation1 = new Orientation();
      assertTrue(orientation1.equals((Object)orientation0));
      
      orientation0.phi = (-2177.319F);
      boolean boolean0 = orientation1.equalsImpl(orientation0);
      assertFalse(orientation1.equals((Object)orientation0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      orientation0.setTheta((-5712.015F));
      Orientation orientation1 = new Orientation();
      boolean boolean0 = orientation0.equalsImpl(orientation1);
      assertEquals((-5712.015F), orientation0.getTheta(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      orientation0.setTheta(168.3509F);
      byte[] byteArray0 = new byte[8];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        orientation0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      orientation0.setPsi(5143.19F);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(109);
      orientation0.marshal(byteBuffer0);
      assertEquals(5143.19F, orientation0.getPsi(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(12);
      orientation0.unmarshal(byteBuffer0);
      assertEquals("java.nio.DirectByteBuffer[pos=12 lim=12 cap=12]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      orientation0.setTheta(168.3509F);
      float float0 = orientation0.getTheta();
      assertEquals(168.3509F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      orientation0.setTheta((-204.0F));
      float float0 = orientation0.getTheta();
      assertEquals((-204.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      orientation0.setPsi((-3025.499F));
      float float0 = orientation0.getPsi();
      assertEquals((-3025.499F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      orientation0.phi = 2390.49F;
      float float0 = orientation0.getPhi();
      assertEquals(2390.49F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      orientation0.setPhi((-1.0F));
      float float0 = orientation0.getPhi();
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      boolean boolean0 = orientation0.equalsImpl(orientation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      // Undeclared exception!
      try { 
        orientation0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      // Undeclared exception!
      try { 
        orientation0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.Orientation", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      Orientation orientation1 = new Orientation();
      orientation0.setTheta((-204.0F));
      boolean boolean0 = orientation1.equalsImpl(orientation0);
      assertEquals((-204.0F), orientation0.getTheta(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      orientation0.setPsi(340.02914F);
      Orientation orientation1 = new Orientation();
      boolean boolean0 = orientation1.equalsImpl(orientation0);
      assertEquals(340.02914F, orientation0.getPsi(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      Orientation orientation1 = new Orientation();
      assertTrue(orientation1.equals((Object)orientation0));
      
      orientation1.phi = 0.32683778F;
      boolean boolean0 = orientation0.equalsImpl(orientation1);
      assertFalse(orientation1.equals((Object)orientation0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      orientation0.setTheta(914.3649F);
      Orientation orientation1 = new Orientation();
      boolean boolean0 = orientation0.equals(orientation1);
      assertEquals(914.3649F, orientation0.getTheta(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      orientation0.setPsi(340.02914F);
      Orientation orientation1 = new Orientation();
      boolean boolean0 = orientation0.equals(orientation1);
      assertEquals(340.02914F, orientation0.getPsi(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      Object object0 = new Object();
      boolean boolean0 = orientation0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      Object object0 = new Object();
      boolean boolean0 = orientation0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      boolean boolean0 = orientation0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      boolean boolean0 = orientation0.equals(orientation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      int int0 = orientation0.getMarshalledSize();
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      float float0 = orientation0.getPhi();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      orientation0.setPsi(12);
      float float0 = orientation0.getPsi();
      assertEquals(12.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      // Undeclared exception!
      try { 
        orientation0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.Orientation", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      float float0 = orientation0.getTheta();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Orientation orientation0 = new Orientation();
      float float0 = orientation0.getPsi();
      assertEquals(0.0F, float0, 0.01F);
  }
}
