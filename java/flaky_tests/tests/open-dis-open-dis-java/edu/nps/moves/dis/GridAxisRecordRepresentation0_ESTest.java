/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:26:09 GMT 2022
 */

package edu.nps.moves.dis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis.GridAxisRecordRepresentation0;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GridAxisRecordRepresentation0_ESTest extends GridAxisRecordRepresentation0_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      gridAxisRecordRepresentation0_0.setNumberOfBytes((-3966));
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_1 = new GridAxisRecordRepresentation0();
      boolean boolean0 = gridAxisRecordRepresentation0_0.equals(gridAxisRecordRepresentation0_1);
      assertFalse(gridAxisRecordRepresentation0_1.equals((Object)gridAxisRecordRepresentation0_0));
      assertEquals(6, gridAxisRecordRepresentation0_1.getMarshalledSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      gridAxisRecordRepresentation0_0.setNumberOfBytes((-3064));
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_1 = new GridAxisRecordRepresentation0();
      boolean boolean0 = gridAxisRecordRepresentation0_1.equals(gridAxisRecordRepresentation0_0);
      assertFalse(gridAxisRecordRepresentation0_0.equals((Object)gridAxisRecordRepresentation0_1));
      assertFalse(boolean0);
      assertEquals(6, gridAxisRecordRepresentation0_1.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((byte)59);
      byteBuffer0.putInt((int) (byte)1, 1);
      // Undeclared exception!
      try { 
        gridAxisRecordRepresentation0_0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.DirectByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      byte[] byteArray0 = new byte[9];
      gridAxisRecordRepresentation0_0.dataValues = byteArray0;
      int int0 = gridAxisRecordRepresentation0_0.getMarshalledSize();
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((byte)59);
      gridAxisRecordRepresentation0_0.unmarshal(byteBuffer0);
      assertEquals(53, byteBuffer0.remaining());
      assertEquals(6, gridAxisRecordRepresentation0_0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((byte)59);
      gridAxisRecordRepresentation0_0.marshal(byteBuffer0);
      assertEquals(53, byteBuffer0.remaining());
      assertEquals(0, gridAxisRecordRepresentation0_0.getNumberOfBytes());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      byte[] byteArray0 = new byte[2];
      gridAxisRecordRepresentation0_0.dataValues = byteArray0;
      int int0 = gridAxisRecordRepresentation0_0.getNumberOfBytes();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      gridAxisRecordRepresentation0_0.setDataValues((byte[]) null);
      byte[] byteArray0 = gridAxisRecordRepresentation0_0.getDataValues();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      byte[] byteArray0 = new byte[7];
      gridAxisRecordRepresentation0_0.dataValues = byteArray0;
      byte[] byteArray1 = gridAxisRecordRepresentation0_0.getDataValues();
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      // Undeclared exception!
      try { 
        gridAxisRecordRepresentation0_0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      gridAxisRecordRepresentation0_0.setDataValues((byte[]) null);
      // Undeclared exception!
      try { 
        gridAxisRecordRepresentation0_0.getNumberOfBytes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.GridAxisRecordRepresentation0", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      boolean boolean0 = gridAxisRecordRepresentation0_0.equalsImpl(gridAxisRecordRepresentation0_0);
      assertEquals(6, gridAxisRecordRepresentation0_0.getMarshalledSize());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      gridAxisRecordRepresentation0_0.setDataRepresentation((-793));
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_1 = new GridAxisRecordRepresentation0();
      boolean boolean0 = gridAxisRecordRepresentation0_1.equalsImpl(gridAxisRecordRepresentation0_0);
      assertFalse(boolean0);
      assertEquals(0, gridAxisRecordRepresentation0_1.getNumberOfBytes());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_1 = new GridAxisRecordRepresentation0();
      assertEquals(0, gridAxisRecordRepresentation0_1.getNumberOfBytes());
      
      byte[] byteArray0 = new byte[7];
      gridAxisRecordRepresentation0_1.dataValues = byteArray0;
      boolean boolean0 = gridAxisRecordRepresentation0_1.equalsImpl(gridAxisRecordRepresentation0_0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      gridAxisRecordRepresentation0_0.setNumberOfBytes(6);
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_1 = new GridAxisRecordRepresentation0();
      boolean boolean0 = gridAxisRecordRepresentation0_0.equalsImpl(gridAxisRecordRepresentation0_1);
      assertFalse(gridAxisRecordRepresentation0_1.equals((Object)gridAxisRecordRepresentation0_0));
      assertFalse(boolean0);
      assertEquals(6, gridAxisRecordRepresentation0_1.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      Object object0 = new Object();
      boolean boolean0 = gridAxisRecordRepresentation0_0.equalsImpl(object0);
      assertEquals(6, gridAxisRecordRepresentation0_0.getMarshalledSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      Object object0 = new Object();
      boolean boolean0 = gridAxisRecordRepresentation0_0.equals(object0);
      assertFalse(boolean0);
      assertEquals(6, gridAxisRecordRepresentation0_0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      boolean boolean0 = gridAxisRecordRepresentation0_0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(0, gridAxisRecordRepresentation0_0.getNumberOfBytes());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      boolean boolean0 = gridAxisRecordRepresentation0_0.equals(gridAxisRecordRepresentation0_0);
      assertTrue(boolean0);
      assertEquals(0, gridAxisRecordRepresentation0_0.getNumberOfBytes());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      byte[] byteArray0 = gridAxisRecordRepresentation0_0.getDataValues();
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      // Undeclared exception!
      try { 
        gridAxisRecordRepresentation0_0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.GridAxisRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      gridAxisRecordRepresentation0_0.setDataValues((byte[]) null);
      // Undeclared exception!
      try { 
        gridAxisRecordRepresentation0_0.getMarshalledSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.GridAxisRecordRepresentation0", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      // Undeclared exception!
      try { 
        gridAxisRecordRepresentation0_0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.GridAxisRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GridAxisRecordRepresentation0 gridAxisRecordRepresentation0_0 = new GridAxisRecordRepresentation0();
      int int0 = gridAxisRecordRepresentation0_0.getNumberOfBytes();
      assertEquals(0, int0);
  }
}
