/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 14:02:05 GMT 2022
 */

package edu.nps.moves.dis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis.LayerHeader;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LayerHeader_ESTest extends LayerHeader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      layerHeader0.length = (-1786);
      LayerHeader layerHeader1 = new LayerHeader();
      boolean boolean0 = layerHeader0.equals(layerHeader1);
      assertFalse(boolean0);
      assertFalse(layerHeader1.equals((Object)layerHeader0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      layerHeader0.setLayerNumber((short)2350);
      LayerHeader layerHeader1 = new LayerHeader();
      boolean boolean0 = layerHeader1.equalsImpl(layerHeader0);
      assertEquals((short)2350, layerHeader0.getLayerNumber());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      layerHeader0.setLayerSpecificInformaiton((short)1224);
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        layerHeader0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      layerHeader0.length = (-1786);
      int int0 = layerHeader0.getMarshalledSize();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1000);
      layerHeader0.marshal(byteBuffer0);
      assertFalse(byteBuffer0.isReadOnly());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      layerHeader0.length = 65535;
      int int0 = layerHeader0.getLength();
      assertEquals(65535, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      layerHeader0.setLength((-1));
      int int0 = layerHeader0.getLength();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)70;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      layerHeader0.unmarshal(byteBuffer0);
      short short0 = layerHeader0.getLayerSpecificInformaiton();
      assertEquals((short)70, short0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      layerHeader0.layerNumber = (short)461;
      short short0 = layerHeader0.getLayerNumber();
      assertEquals((short)461, short0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      layerHeader0.setLayerNumber((short) (-157));
      short short0 = layerHeader0.getLayerNumber();
      assertEquals((short) (-157), short0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      // Undeclared exception!
      try { 
        layerHeader0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      LayerHeader layerHeader1 = new LayerHeader();
      assertTrue(layerHeader1.equals((Object)layerHeader0));
      
      layerHeader0.length = 7877;
      boolean boolean0 = layerHeader0.equalsImpl(layerHeader1);
      assertFalse(layerHeader1.equals((Object)layerHeader0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      LayerHeader layerHeader1 = new LayerHeader();
      assertTrue(layerHeader1.equals((Object)layerHeader0));
      
      layerHeader1.layerSpecificInformaiton = (short) (-2311);
      boolean boolean0 = layerHeader0.equalsImpl(layerHeader1);
      assertFalse(layerHeader1.equals((Object)layerHeader0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      layerHeader0.layerNumber = (short)461;
      LayerHeader layerHeader1 = new LayerHeader();
      boolean boolean0 = layerHeader0.equalsImpl(layerHeader1);
      assertFalse(layerHeader1.equals((Object)layerHeader0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      boolean boolean0 = layerHeader0.equalsImpl(layerHeader0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      layerHeader0.layerSpecificInformaiton = (short) (-157);
      LayerHeader layerHeader1 = new LayerHeader();
      boolean boolean0 = layerHeader0.equals(layerHeader1);
      assertFalse(layerHeader1.equals((Object)layerHeader0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      boolean boolean0 = layerHeader0.equalsImpl((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      Object object0 = new Object();
      boolean boolean0 = layerHeader0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      boolean boolean0 = layerHeader0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      boolean boolean0 = layerHeader0.equals(layerHeader0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      short short0 = layerHeader0.getLayerSpecificInformaiton();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      layerHeader0.setLayerSpecificInformaiton((short) (-157));
      short short0 = layerHeader0.getLayerSpecificInformaiton();
      assertEquals((short) (-157), short0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      // Undeclared exception!
      try { 
        layerHeader0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.LayerHeader", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      // Undeclared exception!
      try { 
        layerHeader0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.LayerHeader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      short short0 = layerHeader0.getLayerNumber();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LayerHeader layerHeader0 = new LayerHeader();
      int int0 = layerHeader0.getLength();
      assertEquals(0, int0);
  }
}
