/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 15:07:24 GMT 2022
 */

package edu.nps.moves.dis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis.Point;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Point_ESTest extends Point_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Point point0 = new Point();
      Point point1 = new Point();
      point1.setY((-2099.0F));
      boolean boolean0 = point0.equals(point1);
      assertEquals((-2099.0F), point1.getY(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Point point0 = new Point();
      Point point1 = new Point();
      assertTrue(point1.equals((Object)point0));
      
      point1.x = 430.162F;
      boolean boolean0 = point0.equalsImpl(point1);
      assertFalse(point1.equals((Object)point0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Point point0 = new Point();
      point0.x = 843.395F;
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1856);
      point0.marshal(byteBuffer0);
      assertTrue(byteBuffer0.hasRemaining());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Point point0 = new Point();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1856);
      point0.unmarshal(byteBuffer0);
      assertFalse(byteBuffer0.isDirect());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Point point0 = new Point();
      point0.y = 0.0F;
      point0.y = (-1703.2207F);
      point0.y = 430.162F;
      float float0 = point0.getY();
      assertEquals(430.162F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Point point0 = new Point();
      point0.y = 0.0F;
      point0.y = (-1703.2207F);
      float float0 = point0.getY();
      assertEquals((-1703.2207F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Point point0 = new Point();
      point0.setX(1.0F);
      float float0 = point0.getX();
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Point point0 = new Point();
      point0.setX((-1.0F));
      float float0 = point0.getX();
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Point point0 = new Point();
      boolean boolean0 = point0.equalsImpl(point0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Point point0 = new Point();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(4);
      // Undeclared exception!
      try { 
        point0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Point point0 = new Point();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      // Undeclared exception!
      try { 
        point0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Point point0 = new Point();
      point0.y = 0.0F;
      point0.y = (-1703.2207F);
      Point point1 = new Point();
      boolean boolean0 = point0.equalsImpl(point1);
      assertFalse(boolean0);
      assertFalse(point1.equals((Object)point0));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Point point0 = new Point();
      Object object0 = new Object();
      boolean boolean0 = point0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Point point0 = new Point();
      Object object0 = new Object();
      boolean boolean0 = point0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Point point0 = new Point();
      boolean boolean0 = point0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Point point0 = new Point();
      boolean boolean0 = point0.equals(point0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Point point0 = new Point();
      // Undeclared exception!
      try { 
        point0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Point point0 = new Point();
      int int0 = point0.getMarshalledSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Point point0 = new Point();
      float float0 = point0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Point point0 = new Point();
      point0.setX(1.0F);
      Point point1 = new Point();
      boolean boolean0 = point0.equalsImpl(point1);
      assertEquals(1.0F, point0.getX(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Point point0 = new Point();
      // Undeclared exception!
      try { 
        point0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Point point0 = new Point();
      float float0 = point0.getY();
      assertEquals(0.0F, float0, 0.01F);
  }
}
