/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:54:09 GMT 2022
 */

package edu.nps.moves.dis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis.SixByteChunk;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.ReadOnlyBufferException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SixByteChunk_ESTest extends SixByteChunk_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      sixByteChunk0.setOtherParameters((byte[]) null);
      byte[] byteArray0 = sixByteChunk0.getOtherParameters();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      byte[] byteArray0 = new byte[0];
      sixByteChunk0.otherParameters = byteArray0;
      byte[] byteArray1 = sixByteChunk0.getOtherParameters();
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(3);
      // Undeclared exception!
      try { 
        sixByteChunk0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      // Undeclared exception!
      try { 
        sixByteChunk0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.SixByteChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2528);
      ByteBuffer byteBuffer1 = byteBuffer0.asReadOnlyBuffer();
      // Undeclared exception!
      try { 
        sixByteChunk0.marshal(byteBuffer1);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.DirectByteBufferR", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      sixByteChunk0.setOtherParameters((byte[]) null);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(6);
      // Undeclared exception!
      try { 
        sixByteChunk0.marshal(byteBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.SixByteChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      sixByteChunk0.otherParameters = null;
      // Undeclared exception!
      try { 
        sixByteChunk0.equalsImpl(sixByteChunk0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.SixByteChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      sixByteChunk0.setOtherParameters((byte[]) null);
      SixByteChunk sixByteChunk1 = new SixByteChunk();
      // Undeclared exception!
      try { 
        sixByteChunk0.equals(sixByteChunk1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis.SixByteChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      SixByteChunk sixByteChunk1 = new SixByteChunk();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      sixByteChunk1.setOtherParameters(byteArray0);
      // Undeclared exception!
      try { 
        sixByteChunk0.equalsImpl(sixByteChunk1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 5 out of bounds for length 5
         //
         verifyException("edu.nps.moves.dis.SixByteChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      boolean boolean0 = sixByteChunk0.equalsImpl(sixByteChunk0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      SixByteChunk sixByteChunk1 = new SixByteChunk();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)27;
      sixByteChunk1.otherParameters = byteArray0;
      // Undeclared exception!
      try { 
        sixByteChunk0.equals(sixByteChunk1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("edu.nps.moves.dis.SixByteChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      Object object0 = new Object();
      boolean boolean0 = sixByteChunk0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      Object object0 = new Object();
      boolean boolean0 = sixByteChunk0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      boolean boolean0 = sixByteChunk0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      boolean boolean0 = sixByteChunk0.equals(sixByteChunk0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      byte[] byteArray0 = new byte[7];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      sixByteChunk0.unmarshal(byteBuffer0);
      // Undeclared exception!
      try { 
        sixByteChunk0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2528);
      sixByteChunk0.marshal(byteBuffer0);
      assertEquals(6, byteBuffer0.position());
      assertEquals("java.nio.DirectByteBuffer[pos=6 lim=2528 cap=2528]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      int int0 = sixByteChunk0.getMarshalledSize();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SixByteChunk sixByteChunk0 = new SixByteChunk();
      byte[] byteArray0 = sixByteChunk0.getOtherParameters();
      assertEquals(6, byteArray0.length);
  }
}
