/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 15:43:55 GMT 2022
 */

package edu.nps.moves.disutil;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.disutil.ByteBufferPool;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ByteBufferPool_ESTest extends ByteBufferPool_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ByteBufferPool byteBufferPool0 = new ByteBufferPool();
      // Undeclared exception!
      try { 
        byteBufferPool0.getByteBufferOfLength((-1020));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1020
         //
         verifyException("edu.nps.moves.disutil.ByteBufferPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ByteBufferPool byteBufferPool0 = new ByteBufferPool();
      ByteBuffer byteBuffer0 = byteBufferPool0.getByteBufferOfLength(0);
      ByteBuffer byteBuffer1 = byteBufferPool0.getByteBufferOfLength(0);
      assertSame(byteBuffer1, byteBuffer0);
      assertEquals(0, byteBuffer1.remaining());
      assertNotNull(byteBuffer1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ByteBufferPool byteBufferPool0 = new ByteBufferPool();
      byteBufferPool0.clear();
  }
}
