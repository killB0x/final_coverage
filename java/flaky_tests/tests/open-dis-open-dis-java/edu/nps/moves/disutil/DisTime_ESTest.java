/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 15:45:24 GMT 2022
 */

package edu.nps.moves.disutil;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.disutil.DisTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DisTime_ESTest extends DisTime_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DisTime disTime0 = DisTime.getInstance();
      System.setCurrentTimeMillis(0);
      long long0 = disTime0.getNpsTimestamp();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DisTime.getInstance();
      System.setCurrentTimeMillis(0);
      int int0 = DisTime.disTime.getDisRelativeTimestamp();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DisTime disTime0 = DisTime.getInstance();
      System.setCurrentTimeMillis(0);
      long long0 = disTime0.getUnixTimestamp();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DisTime disTime0 = DisTime.getInstance();
      assertEquals(1392409281L, disTime0.getUnixTimestamp());
      
      System.setCurrentTimeMillis((-2299L));
      long long0 = DisTime.disTime.getUnixTimestamp();
      assertEquals((-2L), long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System.setCurrentTimeMillis(135L);
      DisTime disTime0 = DisTime.getInstance();
      assertEquals(0L, disTime0.getUnixTimestamp());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis((-2299L));
      DisTime disTime0 = DisTime.getInstance();
      assertEquals((-2), DisTime.RELATIVE_TIMESTAMP_MASK);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DisTime disTime0 = DisTime.getInstance();
      disTime0.cal = null;
      // Undeclared exception!
      try { 
        disTime0.getNpsTimestamp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.disutil.DisTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DisTime disTime0 = new DisTime();
      disTime0.cal = null;
      // Undeclared exception!
      try { 
        disTime0.getDisRelativeTimestamp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.disutil.DisTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DisTime disTime0 = DisTime.getInstance();
      disTime0.cal = null;
      // Undeclared exception!
      try { 
        disTime0.getDisAbsoluteTimestamp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.disutil.DisTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DisTime.getInstance();
      DisTime disTime0 = DisTime.getInstance();
      assertEquals(1, DisTime.ABSOLUTE_TIMESTAMP_MASK);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DisTime.getInstance();
      long long0 = DisTime.disTime.disTime.getNpsTimestamp();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DisTime disTime0 = DisTime.getInstance();
      int int0 = disTime0.disTime.getDisRelativeTimestamp();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DisTime disTime0 = new DisTime();
      DisTime.getInstance();
      int int0 = disTime0.disTime.getDisAbsoluteTimestamp();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DisTime disTime0 = DisTime.getInstance();
      assertNotNull(disTime0);
      
      long long0 = DisTime.disTime.getUnixTimestamp();
      assertEquals(1392409281L, long0);
  }
}
