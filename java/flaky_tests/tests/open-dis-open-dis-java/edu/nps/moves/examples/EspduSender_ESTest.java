/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:12:48 GMT 2022
 */

package edu.nps.moves.examples;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.examples.EspduSender;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EspduSender_ESTest extends EspduSender_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        EspduSender.getBroadcastAddresses();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not supported method by EvoSuite
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockNetworkInterface", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          String[] stringArray0 = new String[3];
          // Undeclared exception!
          try { 
            EspduSender.main(stringArray0);
            fail("Expecting exception: System.SystemExitException");
          
          } catch(System.SystemExitException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             verifyException("org.evosuite.runtime.System", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EspduSender espduSender0 = new EspduSender();
      assertEquals(5000, EspduSender.NUMBER_TO_SEND);
  }
}
